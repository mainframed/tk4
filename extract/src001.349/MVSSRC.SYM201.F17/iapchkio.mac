         TITLE 'IAPCHKIO - AP-1 CHECK ROUTINE                          *
                        '
IAPCHKIO CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IAPCHKIO  77.308'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  LA    @12,4095(,@11)                                   01S0001
         USING @PSTART,@11                                      01S0001
         USING @PSTART+4095,@12                                 01S0001
*                                                               01S0091
         USING @DATD+AP1BLOCK-AP1END,AP1REG  ADDRESSABILITY
         ST    13,@SA00001+4     BACKWARD POINTER
         LA    15,@SA00001       OUR SAVE AREA
         ST    15,8(,13)         FOREWARD POINTER
         LR     13,15            SET REG 13
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT CHECK ROUTINE BASED ON AP1TSTNO                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0092
*   DO;                             /* CASE(AP1TSTNO)NAMES(RECAL1,SNS
*                                      ,RECAL2,RET,RHAMH,RET,RHAFH,RP
*                                      S,SK192,SKINCR,SKMAX,RET,SKRAN
*                                      ,RET,RHA,RET,WRT,RET,RR01,RDMT
*                                      ,FTWRT,AMDET,WRTPAD,SD,CLEANUP
*                                      )                             */
*     DCL                                                       01S0093
*       CL0001@ LABEL BASED(CP0001@(AP1TSTNO)) VALUERANGE(RECAL1,SNS,
*           RECAL2,RET,RHAMH,RET,RHAFH,RPS,SK192,SKINCR,SKMAX,RET,SKRAN
*           ,RET,RHA,RET,WRT,RET,RR01,RDMT,FTWRT,AMDET,WRTPAD,SD,
*           CLEANUP);               /* BRANCH TARGET                 */
*     DCL                                                       01S0094
*       CP0001@(25) PTR(31) INIT(ADDR(RECAL1),ADDR(SNS),ADDR(RECAL2),
*           ADDR(RET),ADDR(RHAMH),ADDR(RET),ADDR(RHAFH),ADDR(RPS),ADDR(
*           SK192),ADDR(SKINCR),ADDR(SKMAX),ADDR(RET),ADDR(SKRAN),ADDR(
*           RET),ADDR(RHA),ADDR(RET),ADDR(WRT),ADDR(RET),ADDR(RR01),
*           ADDR(RDMT),ADDR(FTWRT),ADDR(AMDET),ADDR(WRTPAD),ADDR(SD),
*           ADDR(CLEANUP));                                     01S0094
*     GOTO CL0001@;                 /* BRANCH TO SELECTED CASE       */
*                                                               01S0095
         SLR   @10,@10                                          01S0095
         IC    @10,AP1TSTNO(,AP1REG)                            01S0095
         SLA   @10,2                                            01S0095
         L     @10,CP0001@-4(@10)                               01S0095
         BR    @10                                              01S0095
*     /***************************************************************/
*     /*                                                             */
*     /* RET: ABENDS--WILL NOT BE ENTERED EXCEPT ON INVALID VALUE OF */
*     /* AP1TSTNO                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0096
*RET:                                                           01S0096
*     DO;                           /* SUBCASE RETURNS (BR14)        */
RET      DS    0H                                               01S0097
*       DO;                         /* ABEND(1004) DUMP STEP USER    */
*         RESPECIFY                                             01S0098
*          (GPR01F) RESTRICTED;                                 01S0098
*         GPR01F=(1004)&'00000FFF'X;/* COMP CODE IN BITS 20-31       */
         LA    GPR01F,1004                                      01S0099
*         GPR01F=GPR01F×'C0000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00415                                  01S0100
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                               01S0101
*         RESPECIFY                                             01S0102
*          (GPR01F) UNRESTRICTED;                               01S0102
*       END;                        /* ABEND(1004) DUMP STEP USER
*                                      U1004 ABEND                   */
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0104
*     END RET;                      /* END OF SUBCASE                */
*                                                               01S0105
*     /***************************************************************/
*     /*                                                             */
*     /* RECAL1: DUMMY RECALIBRATE                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0106
*RECAL1:                                                        01S0106
*     DO;                           /* SUBCASE CHECKS FIRST     01S0106
*                                      RECALIBRATE-- IGNORED         */
RECAL1   DS    0H                                               01S0107
*/*   IGNORES STATUS                                                 */
*                                                               01S0107
*       AP1TSTNO=AP1TSTNO+1;        /* IGNORE RESULT--GO TO NXT TEST */
         LA    @10,1                                            01S0107
         SLR   @09,@09                                          01S0107
         IC    @09,AP1TSTNO(,AP1REG)                            01S0107
         ALR   @10,@09                                          01S0107
         STC   @10,AP1TSTNO(,AP1REG)                            01S0107
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0108
*     END RECAL1;                   /* END OF SUBCASE                */
*                                                               01S0109
*     /***************************************************************/
*     /*                                                             */
*     /* SNS: SENSE TO SEE IF EMULATED AND FIXED HEADS               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0110
*SNS:                                                           01S0110
*     DO;                           /* SUBCASE CHECKS SENSE          */
SNS      DS    0H                                               01S0111
*/*   TESTS TO SEE IF A 3350, E-3340 OR E-3330                  01S0111
*       ENQS ON BASE ADDRESS                                    01S0111
*       CHECKS FOR FIXED HEADS ON 3344                               */
*                                                               01S0111
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0111
         BE    @RF00111                                         01S0111
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0112
*       ELSE                                                    01S0113
*         ;                         /* I/O OK                        */
@RF00111 DS    0H                                               01S0114
*       IF AP1PRERR=OFF THEN        /* SNS WENT OK                   */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0114
         BNZ   @RF00114                                         01S0114
*         DO;                                                   01S0115
*           IF AP1DEVTP^=AP13350 THEN/* NOT 3350--MUST BE EMULATED
*                                      DEV                           */
         CLI   AP1DEVTP(AP1REG),4                               01S0116
         BE    @RF00116                                         01S0116
*             IF AP1BUFAD->SNSEMU=ON THEN/* EMULATED                 */
         L     @10,AP1BUFAD(,AP1REG)                            01S0117
         TM    SNSEMU(@10),B'00001000'                          01S0117
         BNO   @RF00117                                         01S0117
*               DO;                                             01S0118
*                                                               01S0118
*                 /***************************************************/
*                 /*                                                 */
*                 /* GET EBCDIC OF BASE ADDRESS                      */
*                 /*                                                 */
*                 /***************************************************/
*                                                               01S0119
*                 RFY                                           01S0119
*                  (GPR00F,                                     01S0119
*                   GPR01P) RSTD;                               01S0119
*                 GPR01P=ADDR(AP1DEVAD);/* ADDR OF DEV ADDR IN EBCDIC*/
         LA    GPR01P,AP1DEVAD(,AP1REG)                         01S0120
*                 RFY                                           01S0121
*                  (GPR00F,                                     01S0121
*                   GPR01P) UNRSTD;                             01S0121
*                                                               02S0122
*                 /***************************************************/
*                 /*                                                 */
*                 /* CONVERTS EBCDIC TO BINARY REG1 POINTS TO FULL   */
*                 /* WORD OF EBCDIC (HEX)..REG0 RETURNED WITH BINARY */
*                 /* VALUE                                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0122
*                 RFY                                           02S0122
*                  (GPR00F,                                     02S0122
*                   GPR01P,                                     02S0122
*                   GPR02F,                                     02S0122
*                   GPR03F) RSTD;                               02S0122
*                 GENERATE REFS(ALPHACNV,ALPHACV2);             02S0123
*                     INPUT =    FWFXFYFZ
         SLR   @00,@00           CLEAR REG
         LA    @02,4             LOOP COUNT
LOOPBIN  SLR   @03,@03           CLEAR REG
         IC    @03,0(@01)        GET CHAR
         CLI   0(@01),X'F0'      IS IT ALPHA
         BL    ALPHA
         SH    @03,ALPHACNV      F0-B7
ALPHA    SH    @03,ALPHACV2      C1-A
         SLL   @00,4             SAVE LAST BYTE
         AR    @00,@03           PUT IN NEW BYTE
         LA    @01,1(@01)        INCR TO NEXT BYTE
         BCT   @02,LOOPBIN       GET THE REST
*                 RFY                                           02S0124
*                  (GPR00F,                                     02S0124
*                   GPR01P,                                     02S0124
*                   GPR02F,                                     02S0124
*                   GPR03F) UNRSTD;                             02S0124
*                 RFY                                           01S0125
*                  (GPR00F,                                     01S0125
*                   GPR01P) RSTD;                               01S0125
*                 IF AP1DEVTP<=AP13331 THEN/* 3330                   */
         CLI   AP1DEVTP(AP1REG),2                               01S0126
         BH    @RF00126                                         01S0126
*                   GPR00F=GPR00F&'00000FDF'X;/* GET BASE ADDR       */
         N     GPR00F,@CF00420                                  01S0127
*                 ELSE              /* 3344                          */
*                   DO;                                         01S0128
         B     @RC00126                                         01S0128
@RF00126 DS    0H                                               01S0129
*                     GPR01P=AP1WRKA;/* ADDR FOR ID                  */
         L     GPR01P,AP1WRKA(,AP1REG)                          01S0129
*                     GEN REFS(AP1WRKA) SETS(GPR01P,WRKAREA);   01S0130
                   STIDP 0(GPR01P)  STORE CALL ID
*                     IF WRKHW1(2)='0135'X THEN/* ON MODEL 135 CPU   */
         L     @10,AP1WRKA(,AP1REG)                             01S0131
         CLC   WRKHW1+4(2,@10),@CH00421                         01S0131
         BNE   @RF00131                                         01S0131
*                       GPR00F='3135'X;/* ENQ FOR 135 CPU            */
         L     GPR00F,@CF00422                                  01S0132
*                     ELSE          /* NOT ON MODEL 135 CPU          */
*                       DO;                                     01S0133
         B     @RC00131                                         01S0133
@RF00131 DS    0H                                               01S0134
*                         CCUSAV=GPR00F&'00000FC0'X;/* SAVE CU ADDR  */
         LR    CCUSAV,GPR00F                                    01S0134
         N     CCUSAV,@CF00423                                  01S0134
*                         GPR00F=GPR00F&'0000003F'X;/* REMOVE CU ADDR*/
         N     GPR00F,@CF00424                                  01S0135
*                         TBLPTR=ADDR(TBL3344);/* POINT TO 3344 01S0136
*                                      ADDRESS TABLE                 */
         LA    TBLPTR,TBL3344                                   01S0136
*                         DO WHILE TBLPTR->BYTE1^=GPR00F&TBLPTR->BYTE1
*                               ^=0;/* UNTIL OUR ADDRESS FOUND OR END
*                                      OF TABLE                      */
         B     @DE00137                                         01S0137
@DL00137 DS    0H                                               01S0138
*                           TBLPTR=TBLPTR+1;/* TRY NEXT ADDRESS      */
         AL    TBLPTR,@CF00043                                  01S0138
*                         END;      /* OF DO WHILE                   */
@DE00137 SLR   @10,@10                                          01S0139
         IC    @10,BYTE1(,TBLPTR)                               01S0139
         CR    GPR00F,@10                                       01S0139
         BE    @DC00137                                         01S0139
         CLI   BYTE1(TBLPTR),0                                  01S0139
         BNE   @DL00137                                         01S0139
@DC00137 DS    0H                                               01S0140
*                         TBLPTR=(TBLPTR/4)*4;/* FWORD BDWY CONTAINS
*                                      BASE PACK ADDRESS             */
         LR    @10,TBLPTR                                       01S0140
         SRL   @10,2                                            01S0140
         SLA   @10,2                                            01S0140
         LR    TBLPTR,@10                                       01S0140
*                         GPR00F=TBLPTR->BYTE1;/* GET IT             */
         SLR   GPR00F,GPR00F                                    01S0141
         IC    GPR00F,BYTE1(,TBLPTR)                            01S0141
*                         GPR00F=GPR00F×CCUSAV;/* OR IN CU ADDR      */
         OR    GPR00F,CCUSAV                                    01S0142
*                       END;                                    01S0143
*                   END;                                        01S0144
@RC00131 DS    0H                                               01S0145
*                 GPR01P=ADDR(AP1ENQAD);/* ADDR FOR ENQ ADDR IN 01S0145
*                                      EBCDIC                        */
@RC00126 LA    GPR01P,AP1ENQAD(,AP1REG)                         01S0145
*                 CALL CVTEBCD;     /* CONVERT TO EBCDIC             */
         BAL   @14,CVTEBCD                                      01S0146
*                 RFY                                           01S0147
*                  (GPR00F,                                     01S0147
*                   GPR01P) UNRSTD;                             01S0147
*               END;                                            01S0148
*             ELSE                  /* REAL DEVICE--DONT CONTINUE    */
*               DO;                                             01S0149
         B     @RC00117                                         01S0149
@RF00117 DS    0H                                               01S0150
*                 AP1CNCOD=MIDT;    /* SETUP FOR INCOR DEV TYPE MSG  */
         MVI   AP1CNCOD(AP1REG),X'0E'                           01S0150
*                 AP1QUIT=ON;       /* DONT DO ANY MORE TESTS        */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0151
*               END;                                            01S0152
*           ELSE                    /* 3350                          */
*             AP1ENQAD=AP1DEVAD;    /* ENQ ON THE DEVICE ADDRESS     */
         B     @RC00116                                         01S0153
@RF00116 MVC   AP1ENQAD(4,AP1REG),AP1DEVAD(AP1REG)              01S0153
*           IF AP1ENQAD^=0 THEN     /* DO ENQ                        */
@RC00116 ICM   @10,15,AP1ENQAD(AP1REG)                          01S0154
         BZ    @RF00154                                         01S0154
*             DO;                                               01S0155
*               DO;                 /* ENQ (QNAME,AP1ENQAD,E,LENGTH(A
*                                      P1ENQAD),SYSTEM) RET(NONE)    */
*                 RESPECIFY                                     01S0157
*                  (GPR01P) RESTRICTED;                         01S0157
*                 I056(1:20)=I056(1:20)&&I056(1:20);/* ZERO OUT THE
*                                      TABLE                         */
         XC    I056(20),I056                                    01S0158
*                 I05604(1)=LENGTH(AP1ENQAD);/* LENGTH OF MINOR 01S0159
*                                      RESOURCE NAME                 */
         MVI   I05604,X'04'                                     01S0159
*                 I05606(1)=ADDR(QNAME);/* ADDRESS OF MAJOR RESOURCE
*                                      NAME                          */
         LA    @10,QNAME                                        01S0160
         ST    @10,I05606                                       01S0160
*                 I05607(1)=ADDR(AP1ENQAD);/* ADDRESS OF MINOR  01S0161
*                                      RESOURCE NAME                 */
         LA    @10,AP1ENQAD(,AP1REG)                            01S0161
         ST    @10,I05607                                       01S0161
*                 I05603(1)='01000000'B;/* SET BIT STRING 1 FOR 01S0162
*                                      RESOURCE ELEMENT              */
         MVI   I05603,B'01000000'                               01S0162
*                 I05605(1)='01000000'B;/* SET BIT STRING 2 FOR 01S0163
*                                      RESOURCE ELEMENT              */
         MVI   I05605,B'01000000'                               01S0163
*                 I05603(1,1)='1'B; /* SET END OF LIST BIT           */
         OI    I05603,B'10000000'                               01S0164
*                 GPR01P=ADDR(I05602);/* LOAD LIST ADDRESS           */
         LA    GPR01P,I05602                                    01S0165
*                 SVC(56);          /* ISSUE ENQ SVC                 */
         SVC   56                                               01S0166
*                 RESPECIFY                                     01S0167
*                  (GPR01P) UNRESTRICTED;                       01S0167
*               END;                /* ENQ (QNAME,AP1ENQAD,E,LENGTH(A
*                                      P1ENQAD),SYSTEM) RET(NONE)    */
*               AP1ENQD=ON;         /* INDICATE ENQ DONE             */
         OI    AP1ENQD(AP1REG),B'00010000'                      01S0169
*             END;                                              01S0170
*           ELSE                                                01S0171
*             ;                     /* ERROR DISCOVERED--DONT ENQ    */
@RF00154 DS    0H                                               01S0172
*           IF AP1BUFAD->SNSFHF=ON THEN/* FIXED HEAD ON THIS PACK    */
         L     @10,AP1BUFAD(,AP1REG)                            01S0172
         TM    SNSFHF(@10),B'00000100'                          01S0172
         BNO   @RF00172                                         01S0172
*             AP1FHF=ON;            /* INDICATE FIXED HEADS          */
         OI    AP1FHF(AP1REG),B'00010000'                       01S0173
*           ELSE                                                01S0174
*             ;                     /* NO FIXED HDS OR NOT 3344      */
@RF00172 DS    0H                                               01S0175
*           AP1TSTNO=AP1TSTNO+1;    /* GO TO NEXT TEST               */
         LA    @10,1                                            01S0175
         SLR   @09,@09                                          01S0175
         IC    @09,AP1TSTNO(,AP1REG)                            01S0175
         ALR   @10,@09                                          01S0175
         STC   @10,AP1TSTNO(,AP1REG)                            01S0175
*         END;                                                  01S0176
*       ELSE                        /* SNS FAILED                    */
*         DO;                                                   01S0177
         B     @RC00114                                         01S0177
@RF00114 DS    0H                                               01S0178
*           AP1QUIT=ON;             /* DONT DO ANY MORE TESTS        */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0178
*           IF SNSINT=ON THEN       /* DRIVE NOT READY               */
         TM    SNSINT+188(AP1REG),B'01000000'                   01S0179
         BNO   @RF00179                                         01S0179
*             AP1CNCOD=MDNR;        /* TELL OPER DEVICE NOT READY    */
         MVI   AP1CNCOD(AP1REG),X'11'                           01S0180
*           ELSE                    /* OTHER PROBLEM                 */
*             AP1ERROR=ON;          /* DRIVE PROBLEM                 */
         B     @RC00179                                         01S0181
@RF00179 OI    AP1ERROR(AP1REG),B'00100000'                     01S0181
*           AP1PRCOD=PSNSER;        /* SENSE ERROR MESSAGE           */
@RC00179 MVI   AP1PRCOD(AP1REG),X'07'                           01S0182
*         END;                                                  01S0183
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0184
*     END SNS;                      /* END OF SUBCASE                */
*                                                               01S0185
*     /***************************************************************/
*     /*                                                             */
*     /* RECAL2: RECALIBRATE                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0186
*RECAL2:                                                        01S0186
*     DO;                           /* SUBCASE CHECKS SECOND    01S0186
*                                      RECALIBRATE                   */
RECAL2   DS    0H                                               01S0187
*/*   CHECKS FOR I/O FAILURE                                         */
*                                                               01S0187
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0187
         BE    @RF00187                                         01S0187
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0188
*       ELSE                                                    01S0189
*         ;                         /* I/O OK                        */
@RF00187 DS    0H                                               01S0190
*       AP1TSTNO=AP1TSTNO+1;        /* INCR TO NEXT TEST             */
         LA    @10,1                                            01S0190
         SLR   @09,@09                                          01S0190
         IC    @09,AP1TSTNO(,AP1REG)                            01S0190
         ALR   @10,@09                                          01S0190
         STC   @10,AP1TSTNO(,AP1REG)                            01S0190
*       IF AP1PRERR=ON THEN         /* RECALIBRATE FAILED            */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0191
         BNO   @RF00191                                         01S0191
*         DO;                                                   01S0192
*           AP1ERROR=ON;            /* INDICATE DRIVE FAILURE        */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0194
*           AP1PRCOD=PRECALER;      /* RECALIBRATE ERROR MESSAGE     */
         MVI   AP1PRCOD(AP1REG),X'08'                           01S0195
*         END;                                                  01S0196
*       ELSE                                                    01S0197
*         ;                         /* OK                            */
@RF00191 DS    0H                                               01S0198
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0198
*     END RECAL2;                   /* END OF SUBCASE                */
*                                                               01S0199
*     /***************************************************************/
*     /*                                                             */
*     /* RHAMH: CHECK MOVEABLE HEADS                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0200
*RHAMH:                                                         01S0200
*     DO;                           /* SUBCASE CHECKS READ HA ON
*                                      MOVABLE HEADS                 */
RHAMH    DS    0H                                               01S0201
*/*   CHECKS FOR SEEK VERIFY CHECK, DATA CHECK AND OTHER I/O ERRORS
*     UPDATES HEAD TABLE                                             */
*                                                               01S0201
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0201
         BE    @RF00201                                         01S0201
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0202
*       ELSE                                                    01S0203
*         ;                         /* I/O OK                        */
@RF00201 DS    0H                                               01S0204
*       IF AP1PRERR=ON THEN         /* I/O FAILED                    */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0204
         BNO   @RF00204                                         01S0204
*         DO;                                                   01S0205
*           AP1PRCOD=PRHAMHER;      /* RHAMH ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'09'                           01S0206
*           CALL ERROR1;            /* ANALYZE ERROR AND SET FLAGS   */
         BAL   @14,ERROR1                                       01S0207
*         END;                                                  01S0208
*       ELSE                                                    01S0209
*         ;                         /* I/O OK                        */
@RF00204 DS    0H                                               01S0210
*       IF HH=HI3350HD×CCHH=HI3330CH×CCHH=HI3344CH THEN/* LAST  01S0210
*                                      MOVABLE HEAD READ             */
         CLC   HH(2,AP1REG),@CB00314                            01S0210
         BE    @RT00210                                         01S0210
         CLC   CCHH(4,AP1REG),@CB00327                          01S0210
         BE    @RT00210                                         01S0210
         CLC   CCHH(4,AP1REG),@CB00329                          01S0210
         BNE   @RF00210                                         01S0210
@RT00210 DS    0H                                               01S0211
*         DO;                                                   01S0211
*           AP1TSTNO=AP1TSTNO+1;    /* INCREMENT TO NEXT TEST        */
         LA    @10,1                                            01S0212
         SLR   @09,@09                                          01S0212
         IC    @09,AP1TSTNO(,AP1REG)                            01S0212
         ALR   @10,@09                                          01S0212
         STC   @10,AP1TSTNO(,AP1REG)                            01S0212
*           IF AP1ERROR=ON THEN     /* BAD MOVEABLE HEAD             */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0213
         BNO   @RF00213                                         01S0213
*             AP1QUIT=ON;           /* QUIT TESTING                  */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0214
*           ELSE                                                01S0215
*             ;                     /* NO ERRORS                     */
@RF00213 DS    0H                                               01S0216
*           IF AP1FHF=OFF&AP1DEVTP=AP13344 THEN/* NO FIXED HEADS     */
         TM    AP1FHF(AP1REG),B'00010000'                       01S0216
         BNZ   @RF00216                                         01S0216
         CLI   AP1DEVTP(AP1REG),3                               01S0216
         BNE   @RF00216                                         01S0216
*             AP1TSTNO=AP1TSTNO+2;  /* SKIP FIXED HD TEST            */
         LA    @10,2                                            01S0217
         SLR   @09,@09                                          01S0217
         IC    @09,AP1TSTNO(,AP1REG)                            01S0217
         ALR   @10,@09                                          01S0217
         STC   @10,AP1TSTNO(,AP1REG)                            01S0217
*           ELSE                                                01S0218
*             ;                     /* MAY BE FIXED HEADS ON THIS
*                                      PACK                          */
@RF00216 DS    0H                                               01S0219
*         END;                                                  01S0219
*       ELSE                                                    01S0220
*         ;                         /* NOT LAST HEAD YET             */
@RF00210 DS    0H                                               01S0221
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0221
*     END RHAMH;                    /* END OF SUBCASE                */
*                                                               01S0222
*     /***************************************************************/
*     /*                                                             */
*     /* RHAFH: CHECKS FIXED HEADS                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0223
*RHAFH:                                                         01S0223
*     DO;                           /* SUBCASE CHECKS READ HA ON
*                                      FIXED HEADS                   */
RHAFH    DS    0H                                               01S0224
*/*   CHECKS FOR SEEK VERIFY CHECKS, DATA CHECKS, AND OTHER I/O ERRORS
*     UPDATES HEAD TABLE                                             */
*                                                               01S0224
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0224
         BE    @RF00224                                         01S0224
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0225
*       ELSE                                                    01S0226
*         ;                         /* I/O OK                        */
@RF00224 DS    0H                                               01S0227
*       IF AP1PRERR=ON THEN         /* ERROR ON I/O                  */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0227
         BNO   @RF00227                                         01S0227
*         DO;                                                   01S0228
*           AP1PRCOD=PRHAFHER;      /* RHAFH ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'0A'                           01S0229
*           CALL ERROR1;            /* ANALYZE ERROR AND SET FLAGS   */
         BAL   @14,ERROR1                                       01S0230
*         END;                                                  01S0231
*       ELSE                                                    01S0232
*         ;                         /* I/O OK                        */
@RF00227 DS    0H                                               01S0233
*       IF CCHH='0002001D'X×CCHH='00030012'X×CCHH='000A000A'X THEN/*
*                                      HAVE READ LAST HEAD           */
         CLC   CCHH(4,AP1REG),@CB00440                          01S0233
         BE    @RT00233                                         01S0233
         CLC   CCHH(4,AP1REG),@CB00441                          01S0233
         BE    @RT00233                                         01S0233
         CLC   CCHH(4,AP1REG),@CB00442                          01S0233
         BNE   @RF00233                                         01S0233
@RT00233 DS    0H                                               01S0234
*         DO;                                                   01S0234
*           AP1TSTNO=AP1TSTNO+1;    /* GO TO NEXT TEST               */
         LA    @10,1                                            01S0235
         SLR   @09,@09                                          01S0235
         IC    @09,AP1TSTNO(,AP1REG)                            01S0235
         ALR   @10,@09                                          01S0235
         STC   @10,AP1TSTNO(,AP1REG)                            01S0235
*           IF AP1ERROR=ON THEN     /* AT LEAST ONE HEAD HAD ERROR   */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0236
         BNO   @RF00236                                         01S0236
*             AP1QUIT=ON;           /* STOP TESTING                  */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0237
*           ELSE                                                01S0238
*             ;                     /* ALL HEADS OK                  */
@RF00236 DS    0H                                               01S0239
*         END;                                                  01S0239
*       ELSE                                                    01S0240
*         ;                         /* NOT FINISHED YET              */
@RF00233 DS    0H                                               01S0241
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0241
*     END RHAFH;                    /* END OF SUBCASE                */
*                                                               01S0242
*     /***************************************************************/
*     /*                                                             */
*     /* RPS: CHECKS RPS                                             */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0243
*RPS:                                                           01S0243
*     DO;                           /* SUBCASE CHECK ONLY FOR I/O
*                                      ERROR                         */
RPS      DS    0H                                               01S0244
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0244
         BE    @RF00244                                         01S0244
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0245
*       ELSE                                                    01S0246
*         ;                         /* I/O OK                        */
@RF00244 DS    0H                                               01S0247
*       IF AP1PRERR=ON THEN         /* ERROR ON I/O                  */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0247
         BNO   @RF00247                                         01S0247
*         DO;                                                   01S0248
*           AP1PRCOD=PRPSER;        /* RPS ERROR MSG                 */
         MVI   AP1PRCOD(AP1REG),X'24'                           01S0249
*           AP1ERROR=ON;            /* DRIVE ERROR                   */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0251
*         END;                                                  01S0252
*       ELSE                                                    01S0253
*         ;                         /* I/O OK                        */
@RF00247 DS    0H                                               01S0254
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */
         LA    @10,1                                            01S0254
         SLR   @09,@09                                          01S0254
         IC    @09,AP1TSTNO(,AP1REG)                            01S0254
         ALR   @09,@10                                          01S0254
         STC   @09,AP1TSTNO(,AP1REG)                            01S0254
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0255
         BNE   @RF00255                                         01S0255
*         AP1TSTNO=AP1TSTNO+1;      /* SKIP SK192                    */
         ALR   @09,@10                                          01S0256
         STC   @09,AP1TSTNO(,AP1REG)                            01S0256
*       ELSE                                                    01S0257
*         ;                         /* NOT 3344                      */
@RF00255 DS    0H                                               01S0258
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0258
*     END RPS;                      /* END OF SUBCASE                */
*                                                               01S0259
*     /***************************************************************/
*     /*                                                             */
*     /* SK192: 192 CYLINDER SEEKS                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0260
*SK192:                                                         01S0260
*     DO;                           /* SUBCASE CHECKS 192 CYL SEEKS  */
SK192    DS    0H                                               01S0261
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0261
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0261
         BE    @RF00261                                         01S0261
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0262
*       ELSE                                                    01S0263
*         ;                         /* I/O OK                        */
@RF00261 DS    0H                                               01S0264
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */
         LA    @10,1                                            01S0264
         SLR   @09,@09                                          01S0264
         IC    @09,AP1TSTNO(,AP1REG)                            01S0264
         ALR   @10,@09                                          01S0264
         STC   @10,AP1TSTNO(,AP1REG)                            01S0264
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0265
         BNO   @RF00265                                         01S0265
*         DO;                                                   01S0266
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0268
*           AP1PRCOD=PSK192ER;      /* SK192 ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'0B'                           01S0269
*         END;                                                  01S0270
*       ELSE                                                    01S0271
*         ;                         /* NO ERRORS                     */
@RF00265 DS    0H                                               01S0272
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0272
*     END SK192;                    /* END OF SUBCASE                */
*                                                               01S0273
*     /***************************************************************/
*     /*                                                             */
*     /* SKINCR: INCREMENTAL SEEKS                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0274
*SKINCR:                                                        01S0274
*     DO;                           /* SUBCASE CHECKS INCREMENTAL
*                                      SEEKS                         */
SKINCR   DS    0H                                               01S0275
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0275
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0275
         BE    @RF00275                                         01S0275
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0276
*       ELSE                                                    01S0277
*         ;                         /* I/O OK                        */
@RF00275 DS    0H                                               01S0278
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */
         LA    @10,1                                            01S0278
         SLR   @09,@09                                          01S0278
         IC    @09,AP1TSTNO(,AP1REG)                            01S0278
         ALR   @10,@09                                          01S0278
         STC   @10,AP1TSTNO(,AP1REG)                            01S0278
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0279
         BNO   @RF00279                                         01S0279
*         DO;                                                   01S0280
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0282
*           AP1PRCOD=PINCRER;       /* SKINCR ERROR MSG              */
         MVI   AP1PRCOD(AP1REG),X'0C'                           01S0283
*         END;                                                  01S0284
*       ELSE                                                    01S0285
*         ;                         /* NO ERRORS                     */
@RF00279 DS    0H                                               01S0286
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0286
*     END SKINCR;                   /* END OF SUBCASE                */
*                                                               01S0287
*     /***************************************************************/
*     /*                                                             */
*     /* SKMAX: MAXIMUM SEEKS                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0288
*SKMAX:                                                         01S0288
*     DO;                           /* SUBCASE CHECKS MAXIMUM SEEKS  */
SKMAX    DS    0H                                               01S0289
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0289
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0289
         BE    @RF00289                                         01S0289
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0290
*       ELSE                                                    01S0291
*         ;                         /* I/O OK                        */
@RF00289 DS    0H                                               01S0292
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */
         LA    @10,1                                            01S0292
         SLR   @09,@09                                          01S0292
         IC    @09,AP1TSTNO(,AP1REG)                            01S0292
         ALR   @10,@09                                          01S0292
         STC   @10,AP1TSTNO(,AP1REG)                            01S0292
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0293
         BNO   @RF00293                                         01S0293
*         DO;                                                   01S0294
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0296
*           AP1PRCOD=PSKMAXER;      /* SKMAX ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'0D'                           01S0297
*         END;                                                  01S0298
*       ELSE                                                    01S0299
*         ;                         /* NO ERRORS                     */
@RF00293 DS    0H                                               01S0300
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0300
*     END SKMAX;                    /* END OF SUBCASE                */
*                                                               01S0301
*     /***************************************************************/
*     /*                                                             */
*     /* SKRAN: RANDOM SEEKS                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0302
*SKRAN:                                                         01S0302
*     DO;                           /* SUBCASE CHECKS RANDOM SEEKS   */
SKRAN    DS    0H                                               01S0303
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0303
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0303
         BE    @RF00303                                         01S0303
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0304
*       ELSE                                                    01S0305
*         ;                         /* I/O OK                        */
@RF00303 DS    0H                                               01S0306
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0306
         BNO   @RF00306                                         01S0306
*         DO;                                                   01S0307
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0309
*           AP1PRCOD=PSKRANER;      /* SKRAN ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'0E'                           01S0310
*         END;                                                  01S0311
*       ELSE                                                    01S0312
*         ;                         /* NO ERRORS                     */
@RF00306 DS    0H                                               01S0313
*       IF AP1SKCNT=RANSKMAX THEN   /* FIFTY SEEKS                   */
         CLC   AP1SKCNT(2,AP1REG),@CH00318                      01S0313
         BNE   @RF00313                                         01S0313
*         AP1TSTNO=AP1TSTNO+1;      /* GO TO NEXT TEST               */
         LA    @10,1                                            01S0314
         SLR   @09,@09                                          01S0314
         IC    @09,AP1TSTNO(,AP1REG)                            01S0314
         ALR   @10,@09                                          01S0314
         STC   @10,AP1TSTNO(,AP1REG)                            01S0314
*       ELSE                                                    01S0315
*         ;                         /* NOT ENOUGH SEEKS YET          */
@RF00313 DS    0H                                               01S0316
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0316
*     END SKRAN;                    /* END OF SUBCASE                */
*                                                               01S0317
*     /***************************************************************/
*     /*                                                             */
*     /* RHA: VERIFY HOME ADDRESS ON CE CYLINDER                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0318
*RHA:                                                           01S0318
*     DO;                           /* SUBCASE CHECKS READ HA ON CE
*                                      CYL                           */
RHA      DS    0H                                               01S0319
*/*   CHECKS FOR SEEK VERIFY CHECKS, DATA CHECKS AND OTHER I/O ERRORS
*     IF EITHER OF THE FIRST, SKIPS ALL WRITE DEPENDENT TESTS   01S0319
*     BUT DOES NOT TERMINATE                                    01S0319
*     UPDATES HEAD TABLE                                             */
*                                                               01S0319
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0319
         BE    @RF00319                                         01S0319
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0320
*       ELSE                                                    01S0321
*         ;                         /* I/O OK                        */
@RF00319 DS    0H                                               01S0322
*       IF AP1PRERR=ON THEN         /* ERROR                         */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0322
         BNO   @RF00322                                         01S0322
*         DO;                                                   01S0323
*           AP1PRCOD=PRHAER;        /* RHA ERROR MSG                 */
         MVI   AP1PRCOD(AP1REG),X'0F'                           01S0324
*           IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWRD(
*               1)=ON&(CSWADDRB-LENGTH(CCW))->CCWWR(1)=OFF THEN/*
*                                      UNIT CHK ON READ              */
         CLI   AP1PCODE(AP1REG),X'41'                           01S0325
         BNE   @RF00325                                         01S0325
         LA    @10,AP1CSW(,AP1REG)                              01S0325
         BCTR  @10,0                                            01S0325
         TM    CSWUNCHK(@10),B'00000010'                        01S0325
         BNO   @RF00325                                         01S0325
         L     @10,CSWADDRB-1(,@10)                             01S0325
         AL    @10,@CF00504                                     01S0325
         TM    CCWRD(@10),B'00000010'                           01S0325
         BNO   @RF00325                                         01S0325
         TM    CCWWR(@10),B'00000001'                           01S0325
         BNZ   @RF00325                                         01S0325
*             IF SNSDATA=ON×(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF)
*               THEN                /* DATA CHECK                    */
         LA    @10,188                                          01S0326
         ALR   @10,AP1REG                                       01S0326
         TM    SNSDATA(@10),B'00001000'                         01S0326
         BO    @RT00326                                         01S0326
         TM    SNSEQU(@10),B'00010000'                          01S0326
         BNO   @RF00326                                         01S0326
         CLI   SNS7(@10),X'10'                                  01S0326
         BNE   @RF00326                                         01S0326
         MVC   @TS00001(1),SNS17(@10)                           01S0326
         NI    @TS00001,X'FE'                                   01S0326
         CLI   @TS00001,X'C0'                                   01S0326
         BNE   @RF00326                                         01S0326
@RT00326 DS    0H                                               01S0327
*               DO;                                             01S0327
*                 AP1NOWR=ON;       /* CANT DO WRITE TESTS           */
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0328
*                 DCKCE=ON;         /* SET IN TABLE                  */
         L     @10,AP1ETABA(,AP1REG)                            01S0329
         OI    DCKCE(@10),B'00010000'                           01S0329
*               END;                                            01S0330
*             ELSE                  /* NOT DATA CHECK                */
*               IF SNS7=SKCHK7&((AP1DEVTP=AP13344&SNSSKCK=ON)×(AP1DEVTP
*                   ^=AP13344&SNSEQU=ON)) THEN                  01S0331
         B     @RC00326                                         01S0331
@RF00326 LA    @10,188                                          01S0331
         ALR   @10,AP1REG                                       01S0331
         CLI   SNS7(@10),X'1A'                                  01S0331
         BNE   @RF00331                                         01S0331
         CLI   AP1DEVTP(AP1REG),3                               01S0331
         BNE   @GL00013                                         01S0331
         TM    SNSSKCK(@10),B'00000001'                         01S0331
         BO    @RT00331                                         01S0331
@GL00013 CLI   AP1DEVTP(AP1REG),3                               01S0331
         BE    @RF00331                                         01S0331
         TM    SNSEQU+188(AP1REG),B'00010000'                   01S0331
         BNO   @RF00331                                         01S0331
@RT00331 DS    0H                                               01S0332
*                 DO;                                           01S0332
*                   AP1NOWR=ON;     /* CANT DO WRITE TESTS           */
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0333
*                   SKVERCK=ON;     /* SET IN TABLE                  */
         L     @10,AP1ETABA(,AP1REG)                            01S0334
         OI    SKVERCK(@10),B'01000000'                         01S0334
*                 END;                                          01S0335
*               ELSE                /* NOT DCK OR SKVERCK            */
*                 DO;                                           01S0336
         B     @RC00331                                         01S0336
@RF00331 DS    0H                                               01S0337
*                   AP1ERROR=ON;    /* DRIVE PROBLEM                 */
*                   AP1QUIT=ON;     /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0338
*                 END;                                          01S0339
*           ELSE                    /* NOT UCK ON RHA                */
*             DO;                                               01S0340
         B     @RC00325                                         01S0340
@RF00325 DS    0H                                               01S0341
*               AP1ERROR=ON;        /* DRIVE PROBLEM                 */
*               AP1QUIT=ON;         /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0342
*             END;                                              01S0343
*         END;                                                  01S0344
*       ELSE                        /* NO HDWE ERROR                 */
*         IF AP1BUFAD->BYTE5(2:5)^=CECCHH THEN/* CCHH IN HA INCORRECT*/
         B     @RC00322                                         01S0345
@RF00322 L     @10,AP1BUFAD(,AP1REG)                            01S0345
         CLC   BYTE5+1(4,@10),CECCHH(AP1REG)                    01S0345
         BE    @RF00345                                         01S0345
*           DO;                                                 01S0346
*             AP1NOWR=ON;           /* CANT DO WRITE TESTS           */
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0347
*             AP1PRERR=ON;          /* PRINT MSG                     */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0348
*             AP1PRCOD=PRHADC;      /* DATA COMPARE ERR              */
         MVI   AP1PRCOD(AP1REG),X'22'                           01S0349
*             CALL CVTEBCDX(ADDR(CECCHH),ADDR(AP1PRMSG)+25,LENGTH(
*                 CECCHH));         /* CNVT EXPECTED TO EBCDIC       */
         LA    @10,CECCHH(,AP1REG)                              01S0350
         ST    @10,@AFTEMPS                                     01S0350
         LA    @10,@AFTEMPS                                     01S0350
         ST    @10,@AL00001                                     01S0350
         LA    @10,AP1PRMSG(,AP1REG)                            01S0350
         AL    @10,@CF00411                                     01S0350
         ST    @10,@AFTEMPS+4                                   01S0350
         LA    @10,@AFTEMPS+4                                   01S0350
         ST    @10,@AL00001+4                                   01S0350
         LA    @10,@CF00038                                     01S0350
         ST    @10,@AL00001+8                                   01S0350
         LA    @01,@AL00001                                     01S0350
         BAL   @14,CVTEBCDX                                     01S0350
*             CALL CVTEBCDX(AP1BUFAD+1,ADDR(AP1PRMSG)+41,LENGTH(CECCHH)
*                 );                /* CNVT RECEIVED TO EBCDIC       */
         LA    @10,1                                            01S0351
         AL    @10,AP1BUFAD(,AP1REG)                            01S0351
         ST    @10,@AFTEMPS                                     01S0351
         LA    @10,@AFTEMPS                                     01S0351
         ST    @10,@AL00001                                     01S0351
         LA    @10,AP1PRMSG(,AP1REG)                            01S0351
         AL    @10,@CF00450                                     01S0351
         ST    @10,@AFTEMPS+4                                   01S0351
         LA    @10,@AFTEMPS+4                                   01S0351
         ST    @10,@AL00001+4                                   01S0351
         LA    @10,@CF00038                                     01S0351
         ST    @10,@AL00001+8                                   01S0351
         LA    @01,@AL00001                                     01S0351
         BAL   @14,CVTEBCDX                                     01S0351
*           END;                                                01S0352
*         ELSE                                                  01S0353
*           ;                       /* HA CORRECT                    */
@RF00345 DS    0H                                               01S0354
*       IF CEHH=HI3350HD×CECCHH=HI3344CE THEN/* LAST TRK READ        */
@RC00322 CLC   CEHH(2,AP1REG),@CB00314                          01S0354
         BE    @RT00354                                         01S0354
         CLC   CECCHH(4,AP1REG),@CB00290                        01S0354
         BNE   @RF00354                                         01S0354
@RT00354 DS    0H                                               01S0355
*         DO;                                                   01S0355
*           AP1TSTNO=AP1TSTNO+1;    /* INCR TO NEXT TEST             */
         LA    @10,1                                            01S0356
         SLR   @09,@09                                          01S0356
         IC    @09,AP1TSTNO(,AP1REG)                            01S0356
         ALR   @10,@09                                          01S0356
         STC   @10,AP1TSTNO(,AP1REG)                            01S0356
*           IF AP1NOWR=ON THEN      /* BAD HA                        */
         TM    AP1NOWR(AP1REG),B'10000000'                      01S0357
         BNO   @RF00357                                         01S0357
*             DO;                                               01S0358
*               AP1LST=ON;          /* SKIP WRITE DEPENDENT TESTS    */
         OI    AP1LST(AP1REG),B'01000000'                       01S0359
*               AP1RET=AP1SKRET;    /* INDICATE TESTS SKIPPED        */
         MVI   AP1RET(AP1REG),X'04'                             01S0360
*               AP1CNCOD=MWTB;      /* SETUP FOR WRITE TESTS BYPASSED
*                                      MESSAGE                       */
         MVI   AP1CNCOD(AP1REG),X'08'                           01S0361
*             END;                                              01S0362
*           ELSE                                                01S0363
*             ;                     /* ALL HA''S GOOD                */
@RF00357 DS    0H                                               01S0364
*         END;                                                  01S0364
*       ELSE                                                    01S0365
*         ;                         /* NOT LAST TRK YET              */
@RF00354 DS    0H                                               01S0366
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0366
*     END RHA;                      /* END OF SUBCASE                */
*                                                               01S0367
*     /***************************************************************/
*     /*                                                             */
*     /* WRT: WRITE ON CE CYLINDER                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0368
*WRT:                                                           01S0368
*     DO;                           /* SUBCASE CHECKS WRITE R0 R1 ON
*                                      CE CYL                        */
WRT      DS    0H                                               01S0369
*/*   CHECKS FOR WRITE INHIBIT, WRITE CHECKS AND OTHER I/O ERRORS.
*     IF WRITE INHIBIT, BYPASSES ALL WRITE DEPENDENT TESTS      01S0369
*     BUT DOES NOT TERMINATE TESTING.                           01S0369
*     UPDATES HEAD TABLE                                             */
*                                                               01S0369
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0369
         BE    @RF00369                                         01S0369
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0370
*       ELSE                                                    01S0371
*         ;                         /* I/O OK                        */
@RF00369 DS    0H                                               01S0372
*       IF AP1PRERR=ON THEN         /* ERROR                         */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0372
         BNO   @RF00372                                         01S0372
*         DO;                                                   01S0373
*           AP1PRCOD=PWRTER;        /* WRT ERROR MSG                 */
         MVI   AP1PRCOD(AP1REG),X'10'                           01S0374
*           IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWWR(
*               1)=ON&(CSWADDRB-LENGTH(CCW))->CCWRD(1)=OFF THEN/*
*                                      UNIT CHECK ON WRITE           */
         CLI   AP1PCODE(AP1REG),X'41'                           01S0375
         BNE   @RF00375                                         01S0375
         LA    @10,AP1CSW(,AP1REG)                              01S0375
         BCTR  @10,0                                            01S0375
         TM    CSWUNCHK(@10),B'00000010'                        01S0375
         BNO   @RF00375                                         01S0375
         L     @10,CSWADDRB-1(,@10)                             01S0375
         AL    @10,@CF00504                                     01S0375
         TM    CCWWR(@10),B'00000001'                           01S0375
         BNO   @RF00375                                         01S0375
         TM    CCWRD(@10),B'00000010'                           01S0375
         BNZ   @RF00375                                         01S0375
*             IF SNSINHI=ON THEN    /* WRITE INHIBIT                 */
         TM    SNSINHI+188(AP1REG),B'00000010'                  01S0376
         BNO   @RF00376                                         01S0376
*               DO;                                             01S0377
*                 AP1NOWR=ON;       /* SET NO WRITE BIT              */
         OI    AP1NOWR(AP1REG),B'10000000'                      01S0378
*                 AP1PRCOD=PWRINH;  /* WRT WRITE INHIBIT ERROR MSG   */
         MVI   AP1PRCOD(AP1REG),X'1B'                           01S0379
*               END;                                            01S0380
*             ELSE                  /* NOT WRITE INHIBIT             */
*               DO;                                             01S0381
         B     @RC00376                                         01S0381
@RF00376 DS    0H                                               01S0382
*                 AP1ERROR=ON;      /* INDICATE ERROR                */
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0382
*                 WRTCK=ON;         /* SET IN TABLE                  */
         L     @10,AP1ETABA(,AP1REG)                            01S0383
         OI    WRTCK(@10),B'00100000'                           01S0383
*               END;                                            01S0384
*           ELSE                    /* NOT UCK ON WRT                */
*             DO;                                               01S0385
         B     @RC00375                                         01S0385
@RF00375 DS    0H                                               01S0386
*               AP1ERROR=ON;        /* DRIVE PROBLEM                 */
*               AP1QUIT=ON;         /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0387
*             END;                                              01S0388
*         END;                                                  01S0389
*       ELSE                                                    01S0390
*         ;                         /* NO ERROR                      */
@RF00372 DS    0H                                               01S0391
*       IF AP1NOWR=ON&AP1ERROR=OFF THEN/* WRITE INHIBIT ON--NO OTHER
*                                      ERRORS                        */
@RC00372 TM    AP1NOWR(AP1REG),B'10000000'                      01S0391
         BNO   @RF00391                                         01S0391
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0391
         BNZ   @RF00391                                         01S0391
*         DO;                                                   01S0392
*           AP1LST=ON;              /* SKIP WRITE DEPENDENT TESTS    */
         OI    AP1LST(AP1REG),B'01000000'                       01S0393
*           AP1RET=AP1SKRET;        /* INDICATE TESTS SKIPPED        */
         MVI   AP1RET(AP1REG),X'04'                             01S0394
*           AP1CNCOD=MWIS;          /* SETUP WRITE INHIBIT SW ON MSG */
         MVI   AP1CNCOD(AP1REG),X'10'                           01S0395
*         END;                                                  01S0396
*       ELSE                        /* NOT WRITE INHIBIT OR ANOTHER
*                                      ERROR                         */
*         IF CEHH=HI3350HD×CECCHH=HI3344CE THEN/* LAST TRACK READ    */
         B     @RC00391                                         01S0397
@RF00391 CLC   CEHH(2,AP1REG),@CB00314                          01S0397
         BE    @RT00397                                         01S0397
         CLC   CECCHH(4,AP1REG),@CB00290                        01S0397
         BNE   @RF00397                                         01S0397
@RT00397 DS    0H                                               01S0398
*           DO;                                                 01S0398
*             AP1TSTNO=AP1TSTNO+1;  /* INCR TO NEXT TEST             */
         LA    @10,1                                            01S0399
         SLR   @09,@09                                          01S0399
         IC    @09,AP1TSTNO(,AP1REG)                            01S0399
         ALR   @10,@09                                          01S0399
         STC   @10,AP1TSTNO(,AP1REG)                            01S0399
*             IF AP1ERROR=ON THEN   /* WRITE ERROR                   */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0400
         BNO   @RF00400                                         01S0400
*               AP1QUIT=ON;         /* STOP TESTING                  */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0401
*             ELSE                                              01S0402
*               ;                   /* NO ERROR                      */
@RF00400 DS    0H                                               01S0403
*           END;                                                01S0403
*         ELSE                                                  01S0404
*           ;                       /* NOT LAST TRACK                */
@RF00397 DS    0H                                               01S0405
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0405
*     END WRT;                      /* END OF SUBCASE                */
*                                                               01S0406
*     /***************************************************************/
*     /*                                                             */
*     /* RR01: READ CE CYLINDER                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0407
*RR01:                                                          01S0407
*     DO;                           /* SUBCASE CHECK READ OF REC 0
*                                      AND 1                         */
RR01     DS    0H                                               01S0408
*/*   CHECKS FOR SEEK VERIFY CHECKS, DATA CHECKS, OTHER I/O ERRORS AND
*     COMPARES COUNTS AND DATA READ                             01S0408
*     UPDATES HEAD TABLE                                             */
*                                                               01S0408
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0408
         BE    @RF00408                                         01S0408
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0409
*       ELSE                                                    01S0410
*         ;                         /* I/O OK                        */
@RF00408 DS    0H                                               01S0411
*       IF AP1PRERR=ON THEN         /* ERROR                         */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0411
         BNO   @RF00411                                         01S0411
*         DO;                                                   01S0412
*           AP1PRCOD=PRR01ER;       /* RR01 ERR MSG                  */
         MVI   AP1PRCOD(AP1REG),X'11'                           01S0413
*           CALL ERROR2;            /* ANALYZE ERROR AND SET FLAGS   */
         BAL   @14,ERROR2                                       01S0414
*         END;                                                  01S0415
*       ELSE                        /* NO HARDWARE DETECTED ERROR    */
*         DO;                                                   01S0416
         B     @RC00411                                         01S0416
@RF00411 DS    0H                                               01S0417
*           BUFPTR=AP1BUFAD;        /* POINT TO COUNT READ ON R0     */
*                                                               01S0417
         L     @10,AP1BUFAD(,AP1REG)                            01S0417
         ST    @10,BUFPTR                                       01S0417
*           /*********************************************************/
*           /*                                                       */
*           /* BUILD EXPECTED R0 COUNT FOR COMPARE                   */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0418
*           AP1WRKA->CNTCCHH=CECCHH;/* CCHH                          */
         L     @09,AP1WRKA(,AP1REG)                             01S0418
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0418
*           AP1WRKA->CNTRKDD=R0DL8; /* RKDD                          */
         MVC   CNTRKDD(4,@09),@CB00292                          01S0419
*           IF BUFPTR->CNT=AP1WRKA->CNT THEN/* R0 OK                 */
         CLC   CNT(8,@10),CNT(@09)                              01S0420
         BNE   @RF00420                                         01S0420
*             DO;                                               01S0421
*               BUFPTR=BUFPTR+LENGTH(CNT);/* POINT TO COUNT OF R1
*                                      READ                          */
*                                                               01S0422
         LA    @15,8                                            01S0422
         ALR   @10,@15                                          01S0422
         ST    @10,BUFPTR                                       01S0422
*               /*****************************************************/
*               /*                                                   */
*               /* BUILD EXPECTED R1 COUNT FOR COMPARE               */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0423
*               AP1WRKA->CNTRKDD=R1DL256;/* RKDD                     */
         MVC   CNTRKDD(4,@09),@CB00294                          01S0423
*               IF BUFPTR->CNT=AP1WRKA->CNT THEN/* R1 COUNT OK       */
         CLC   CNT(8,@10),CNT(@09)                              01S0424
         BNE   @RF00424                                         01S0424
*                 DO;                                           01S0425
*                   BUFPTR=BUFPTR+LENGTH(CNT);/* POINT TO R1 DATA    */
*                                                               01S0426
         ALR   @10,@15                                          01S0426
         ST    @10,BUFPTR                                       01S0426
*                   /*************************************************/
*                   /*                                               */
*                   /* BUILD EXPECTED DATA FOR COMPARE               */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0427
*                   IF AP1PTRN2=OFF THEN/* PATTERN ONE               */
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0427
         BNZ   @RF00427                                         01S0427
*                     AP1WRKA->BYTE8=R1DATA1;                   01S0428
         MVC   BYTE8(8,@09),R1DATA1                             01S0428
*                   ELSE            /* PATTERN TWO                   */
*                     AP1WRKA->BYTE8=R1DATA2;                   01S0429
         B     @RC00427                                         01S0429
@RF00427 L     @10,AP1WRKA(,AP1REG)                             01S0429
         MVC   BYTE8(8,@10),R1DATA2                             01S0429
*                   IF BUFPTR->BYTE8=AP1WRKA->BYTE8 THEN        01S0430
@RC00427 L     @10,AP1WRKA(,AP1REG)                             01S0430
         L     @09,BUFPTR                                       01S0430
         CLC   BYTE8(8,@09),BYTE8(@10)                          01S0430
         BE    @RT00430                                         01S0430
*                     ;             /* EVERYTHING COMPARES           */
*                   ELSE            /* DATA DOESNT COMPARE           */
*                     DATACOMP=ON;  /* SET IN TABLE                  */
         L     @10,AP1ETABA(,AP1REG)                            01S0432
         OI    DATACOMP(@10),B'00001000'                        01S0432
*                 END;                                          01S0433
*               ELSE                /* R1 COUNT DOESNT COMPARE       */
*                 DATACOMP=ON;      /* SET IN TABLE                  */
         B     @RC00424                                         01S0434
@RF00424 L     @10,AP1ETABA(,AP1REG)                            01S0434
         OI    DATACOMP(@10),B'00001000'                        01S0434
*             END;                                              01S0435
*           ELSE                    /* R0 COUNT DOESNT COMPARE       */
*             DATACOMP=ON;          /* SET IN TABLE                  */
         B     @RC00420                                         01S0436
@RF00420 L     @10,AP1ETABA(,AP1REG)                            01S0436
         OI    DATACOMP(@10),B'00001000'                        01S0436
*           IF DATACOMP=ON THEN     /* DATA COMPARE ERROR            */
@RC00420 L     @10,AP1ETABA(,AP1REG)                            01S0437
         TM    DATACOMP(@10),B'00001000'                        01S0437
         BNO   @RF00437                                         01S0437
*             DO;                                               01S0438
*               AP1PRCOD=PRR01DC;   /* RR01 DATA COMPARE MESSAGE     */
         MVI   AP1PRCOD(AP1REG),X'12'                           01S0439
*               CALL CVTEBCDX(AP1WRKA,ADDR(AP1PRMSG)+32,LENGTH(CNT));
         LA    @10,AP1WRKA(,AP1REG)                             01S0440
         ST    @10,@AL00001                                     01S0440
         LA    @10,AP1PRMSG(,AP1REG)                            01S0440
         AL    @10,@CF00289                                     01S0440
         ST    @10,@AFTEMPS                                     01S0440
         LA    @10,@AFTEMPS                                     01S0440
         ST    @10,@AL00001+4                                   01S0440
         LA    @10,@CF00047                                     01S0440
         ST    @10,@AL00001+8                                   01S0440
         LA    @01,@AL00001                                     01S0440
         BAL   @14,CVTEBCDX                                     01S0440
*                                   /* CNVT EXPECTED TO EBCDIC       */
*               CALL CVTEBCDX(BUFPTR,ADDR(AP1PRMSG)+60,LENGTH(CNT));
         LA    @10,BUFPTR                                       01S0441
         ST    @10,@AL00001                                     01S0441
         LA    @10,AP1PRMSG(,AP1REG)                            01S0441
         AL    @10,@CF00133                                     01S0441
         ST    @10,@AFTEMPS                                     01S0441
         LA    @10,@AFTEMPS                                     01S0441
         ST    @10,@AL00001+4                                   01S0441
         LA    @10,@CF00047                                     01S0441
         ST    @10,@AL00001+8                                   01S0441
         LA    @01,@AL00001                                     01S0441
         BAL   @14,CVTEBCDX                                     01S0441
*                                   /* CNVT RECEIVED TO EBCDIC       */
*               AP1PRERR=ON;        /* CAUSE MSG TO BE PRINTED       */
*               AP1ERROR=ON;        /* DRIVE PROBLEM                 */
         OI    AP1PRERR(AP1REG),B'00110000'                     01S0443
*             END;                                              01S0444
*           ELSE                                                01S0445
*             ;                     /* ALL DATA COMPARED             */
@RF00437 DS    0H                                               01S0446
*         END;                                                  01S0446
*       IF CEHH=HI3350HD×CECCHH=HI3344CE THEN/* LAST TRK READ        */
@RC00411 CLC   CEHH(2,AP1REG),@CB00314                          01S0447
         BE    @RT00447                                         01S0447
         CLC   CECCHH(4,AP1REG),@CB00290                        01S0447
         BNE   @RF00447                                         01S0447
@RT00447 DS    0H                                               01S0448
*         IF AP1PTRN2=OFF THEN      /* JUST READ PTRN ONE            */
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0448
         BNZ   @RF00448                                         01S0448
*           DO;                                                 01S0449
*             AP1TSTNO=AP1TSTNO-3;  /* GO BACK TO WRITE PTRN 2       */
         SLR   @10,@10                                          01S0450
         IC    @10,AP1TSTNO(,AP1REG)                            01S0450
         SL    @10,@CF00137                                     01S0450
         STC   @10,AP1TSTNO(,AP1REG)                            01S0450
*             AP1PTRN2=ON;          /* TELL WRITE PTRN 2             */
         OI    AP1PTRN2(AP1REG),B'10000000'                     01S0451
*           END;                                                01S0452
*         ELSE                      /* JUST READ PTRN TWO            */
*           DO;                                                 01S0453
         B     @RC00448                                         01S0453
@RF00448 DS    0H                                               01S0454
*             AP1TSTNO=AP1TSTNO+1;  /* INCR TO NEXT TEST             */
         LA    @10,1                                            01S0454
         SLR   @09,@09                                          01S0454
         IC    @09,AP1TSTNO(,AP1REG)                            01S0454
         ALR   @10,@09                                          01S0454
         STC   @10,AP1TSTNO(,AP1REG)                            01S0454
*             IF AP1ERROR=ON THEN   /* ERROR IN READ                 */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0455
         BNO   @RF00455                                         01S0455
*               AP1QUIT=ON;         /* STOP TESTING                  */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0456
*             ELSE                                              01S0457
*               ;                   /* NO ERROR                      */
@RF00455 DS    0H                                               01S0458
*           END;                                                01S0458
*       ELSE                                                    01S0459
*         ;                         /* NOT FINISHED YET              */
@RF00447 DS    0H                                               01S0460
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0460
*     END RR01;                     /* END OF SUBCASE                */
*                                                               01S0461
*     /***************************************************************/
*     /*                                                             */
*     /* RDMT: READ MULTI-TRACK                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0462
*RDMT:                                                          01S0462
*     DO;                           /* SUBCASE CHECKS MULTI TRK READ */
RDMT     DS    0H                                               01S0463
*/*   CHECKS FOR I/O ERRORS AND COMPARES COUNTS READ                 */
*                                                               01S0463
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0463
         BE    @RF00463                                         01S0463
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0464
*       ELSE                                                    01S0465
*         ;                         /* I/O OK                        */
@RF00463 DS    0H                                               01S0466
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0466
         BNO   @RF00466                                         01S0466
*         DO;                                                   01S0467
*           AP1PRCOD=PRDMTER;       /* RDMT ERROR MSG                */
         MVI   AP1PRCOD(AP1REG),X'13'                           01S0468
*           AP1ERROR=ON;            /* DRIVE FAILURE                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0470
*         END;                                                  01S0471
*       ELSE                        /* NO HDWE DETECTED ERROR        */
*         DO;                                                   01S0472
         B     @RC00466                                         01S0472
@RF00466 DS    0H                                               01S0473
*           BUFPTR=AP1BUFAD;        /* POINT TO R0 COUNT             */
*                                                               01S0473
         L     @10,AP1BUFAD(,AP1REG)                            01S0473
         ST    @10,BUFPTR                                       01S0473
*           /*********************************************************/
*           /*                                                       */
*           /* BUILD EXPECTED R0 COUNT FOR COMPARE                   */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0474
*           AP1WRKA->CNTCCHH=CECCHH;/* CCHH                          */
         L     @09,AP1WRKA(,AP1REG)                             01S0474
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0474
*           AP1WRKA->CNTRKDD=R0DL8; /* RKDD                          */
         MVC   CNTRKDD(4,@09),@CB00292                          01S0475
*           IF BUFPTR->CNT=AP1WRKA->CNT THEN/* R0 OK                 */
         CLC   CNT(8,@10),CNT(@09)                              01S0476
         BNE   @RF00476                                         01S0476
*             DO;                                               01S0477
*               BUFPTR=BUFPTR+LENGTH(CNT);/* POINT TO FIRST R1 COUNT */
*                                                               01S0478
         AL    @10,@CF00047                                     01S0478
         ST    @10,BUFPTR                                       01S0478
*               /*****************************************************/
*               /*                                                   */
*               /* BUILD EXPECTED R1 COUNT                           */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0479
*               AP1WRKA->CNTRKDD=R1DL256;/* RKDD                     */
         MVC   CNTRKDD(4,@09),@CB00294                          01S0479
*               DO WHILE AP1WRKA->CNTHH<=HI3344HD&AP1ERROR=OFF;/*
*                                      CHECK TRACKS 0 TO 11          */
         B     @DE00480                                         01S0480
@DL00480 DS    0H                                               01S0481
*                 IF BUFPTR->CNT^=AP1WRKA->CNT THEN/* COMPARE ERROR  */
         L     @10,AP1WRKA(,AP1REG)                             01S0481
         L     @09,BUFPTR                                       01S0481
         CLC   CNT(8,@09),CNT(@10)                              01S0481
         BE    @RF00481                                         01S0481
*                   AP1ERROR=ON;    /* DRIVE PROBLEM                 */
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0482
*                 ELSE              /* COUNT OK                      */
*                   DO;                                         01S0483
         B     @RC00481                                         01S0483
@RF00481 DS    0H                                               01S0484
*                     BUFPTR=BUFPTR+LENGTH(CNT);/* TO NEXT COUNT     */
         LA    @10,8                                            01S0484
         AL    @10,BUFPTR                                       01S0484
         ST    @10,BUFPTR                                       01S0484
*                     AP1WRKA->CNTHH=AP1WRKA->CNTHH+1;/* NEXT TRACK  */
         L     @10,AP1WRKA(,AP1REG)                             01S0485
         LA    @09,1                                            01S0485
         SLR   @15,@15                                          01S0485
         ICM   @15,3,CNTHH(@10)                                 01S0485
         ALR   @09,@15                                          01S0485
         STCM  @09,3,CNTHH(@10)                                 01S0485
*                   END;                                        01S0486
*               END;                /* DO WHILE                      */
@RC00481 DS    0H                                               01S0487
@DE00480 L     @10,AP1WRKA(,AP1REG)                             01S0487
         CLC   CNTHH(2,@10),@CB00316                            01S0487
         BH    @DC00480                                         01S0487
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0487
         BZ    @DL00480                                         01S0487
@DC00480 DS    0H                                               01S0488
*               IF AP1ERROR=OFF THEN/* NO ERRORS SO FAR              */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0488
         BNZ   @RF00488                                         01S0488
*                 DO;                                           01S0489
*                   AP1WRKA->CNTHH=HI3344HD;/* BACK TO HD 11         */
         L     @10,AP1WRKA(,AP1REG)                             01S0490
         MVC   CNTHH(2,@10),@CB00316                            01S0490
*                   IF BUFPTR->CNT^=AP1WRKA->CNT THEN/* RCKD READ
*                                      WRONG COUNT                   */
         L     @09,BUFPTR                                       01S0491
         CLC   CNT(8,@09),CNT(@10)                              01S0491
         BE    @RF00491                                         01S0491
*                     AP1ERROR=ON;  /* DRIVE FAILURE                 */
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0492
*                   ELSE                                        01S0493
*                     ;             /* COUNT OK                      */
@RF00491 DS    0H                                               01S0494
*                 END;                                          01S0494
*               ELSE                                            01S0495
*                 ;                 /* ERROR ALLREADY                */
@RF00488 DS    0H                                               01S0496
*             END;                                              01S0496
*           ELSE                    /* R0 COUNT BAD                  */
*             AP1ERROR=ON;          /* DRIVE FAILURE                 */
         B     @RC00476                                         01S0497
@RF00476 OI    AP1ERROR(AP1REG),B'00100000'                     01S0497
*           IF AP1ERROR=ON THEN     /* DATA COMPARE ERROR            */
@RC00476 TM    AP1ERROR(AP1REG),B'00100000'                     01S0498
         BNO   @RF00498                                         01S0498
*             DO;                                               01S0499
*               AP1PRCOD=PRDMTDC;   /* RDMT DATA COMPARE MESSAGE     */
         MVI   AP1PRCOD(AP1REG),X'14'                           01S0500
*               CALL CVTEBCDX(AP1WRKA,ADDR(AP1PRMSG)+32,LENGTH(CNT));
         LA    @10,AP1WRKA(,AP1REG)                             01S0501
         ST    @10,@AL00001                                     01S0501
         LA    @10,AP1PRMSG(,AP1REG)                            01S0501
         AL    @10,@CF00289                                     01S0501
         ST    @10,@AFTEMPS                                     01S0501
         LA    @10,@AFTEMPS                                     01S0501
         ST    @10,@AL00001+4                                   01S0501
         LA    @10,@CF00047                                     01S0501
         ST    @10,@AL00001+8                                   01S0501
         LA    @01,@AL00001                                     01S0501
         BAL   @14,CVTEBCDX                                     01S0501
*                                   /* CNVT EXPECTED TO EBCDIC       */
*               CALL CVTEBCDX(BUFPTR,ADDR(AP1PRMSG)+60,LENGTH(CNT));
         LA    @10,BUFPTR                                       01S0502
         ST    @10,@AL00001                                     01S0502
         LA    @10,AP1PRMSG(,AP1REG)                            01S0502
         AL    @10,@CF00133                                     01S0502
         ST    @10,@AFTEMPS                                     01S0502
         LA    @10,@AFTEMPS                                     01S0502
         ST    @10,@AL00001+4                                   01S0502
         LA    @10,@CF00047                                     01S0502
         ST    @10,@AL00001+8                                   01S0502
         LA    @01,@AL00001                                     01S0502
         BAL   @14,CVTEBCDX                                     01S0502
*                                   /* CNVT RECEIVED TO EBCDIC       */
*               AP1PRERR=ON;        /* CAUSE MSG TO BE PRINTED       */
*               AP1QUIT=ON;         /* STOP TESTING                  */
         OI    AP1PRERR(AP1REG),B'00011000'                     01S0504
*             END;                                              01S0505
*           ELSE                                                01S0506
*             ;                     /* DATA COMPARED OK              */
@RF00498 DS    0H                                               01S0507
*         END;                                                  01S0507
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */
@RC00466 LA    @10,1                                            01S0508
         SLR   @09,@09                                          01S0508
         IC    @09,AP1TSTNO(,AP1REG)                            01S0508
         ALR   @10,@09                                          01S0508
         STC   @10,AP1TSTNO(,AP1REG)                            01S0508
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0509
*     END RDMT;                     /* END OF SUBCASE                */
*                                                               01S0510
*     /***************************************************************/
*     /*                                                             */
*     /* FTWRT: FULL TRACK WRITE                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0511
*FTWRT:                                                         01S0511
*     DO;                           /* SUBCASE CHECKS FULL TRACK
*                                      WRITE                         */
FTWRT    DS    0H                                               01S0512
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0512
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0512
         BE    @RF00512                                         01S0512
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0513
*       ELSE                                                    01S0514
*         ;                         /* I/O OK                        */
@RF00512 DS    0H                                               01S0515
*       AP1TSTNO=AP1TSTNO+1;        /* INCREMENT TO NEXT TEST        */
         LA    @10,1                                            01S0515
         SLR   @09,@09                                          01S0515
         IC    @09,AP1TSTNO(,AP1REG)                            01S0515
         ALR   @10,@09                                          01S0515
         STC   @10,AP1TSTNO(,AP1REG)                            01S0515
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0516
         BNO   @RF00516                                         01S0516
*         DO;                                                   01S0517
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0519
*           AP1PRCOD=PFTWRTER;      /* FTWRT ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'15'                           01S0520
*         END;                                                  01S0521
*       ELSE                                                    01S0522
*         ;                         /* NO ERROR                      */
@RF00516 DS    0H                                               01S0523
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0523
*     END FTWRT;                    /* END OF SUBCASE                */
*                                                               01S0524
*     /***************************************************************/
*     /*                                                             */
*     /* AMDET: ADDRESS MARK DETECT                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0525
*AMDET:                                                         01S0525
*     DO;                           /* SUBCASE CHECK AM DETECTION    */
AMDET    DS    0H                                               01S0526
*/*   CHECKS FOR I/O ERRORS AND COMPARES COUNT READ                  */
*                                                               01S0526
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0526
         BE    @RF00526                                         01S0526
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0527
*       ELSE                                                    01S0528
*         ;                         /* I/O OK                        */
@RF00526 DS    0H                                               01S0529
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */
         LA    @10,1                                            01S0529
         SLR   @09,@09                                          01S0529
         IC    @09,AP1TSTNO(,AP1REG)                            01S0529
         ALR   @10,@09                                          01S0529
         STC   @10,AP1TSTNO(,AP1REG)                            01S0529
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0530
         BNO   @RF00530                                         01S0530
*         DO;                                                   01S0531
*           AP1PRCOD=PAMDETER;      /* AMDET ERROR MSG               */
         MVI   AP1PRCOD(AP1REG),X'16'                           01S0532
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0534
*         END;                                                  01S0535
*       ELSE                        /* NO HDWE DETECTED ERROR        */
*         IF(AP1BUFAD+LENGTH(CNT))->CNT^=(AP1BUFAD+LENGTH(CNT)*2)->CNT
*           THEN                    /* READ WRONG RECORD             */
         B     @RC00530                                         01S0536
@RF00530 L     @10,AP1BUFAD(,AP1REG)                            01S0536
         CLC   CNT+8(8,@10),CNT+16(@10)                         01S0536
         BE    @RF00536                                         01S0536
*           DO;                                                 01S0537
*             AP1PRCOD=PAMDETDC;    /* AMDET DATA COMPARE ERROR MSG  */
         MVI   AP1PRCOD(AP1REG),X'17'                           01S0538
*             CALL CVTEBCDX(BUFPTR,ADDR(AP1PRMSG)+33,LENGTH(CNT));/*
*                                      CNVT EXPECTED TP EBCDIC       */
         LA    @10,BUFPTR                                       01S0539
         ST    @10,@AL00001                                     01S0539
         LA    @10,AP1PRMSG(,AP1REG)                            01S0539
         AL    @10,@CF00283                                     01S0539
         ST    @10,@AFTEMPS                                     01S0539
         LA    @10,@AFTEMPS                                     01S0539
         ST    @10,@AL00001+4                                   01S0539
         LA    @10,@CF00047                                     01S0539
         ST    @10,@AL00001+8                                   01S0539
         LA    @01,@AL00001                                     01S0539
         BAL   @14,CVTEBCDX                                     01S0539
*             CALL CVTEBCDX(BUFPTR+LENGTH(CNT)*2,ADDR(AP1PRMSG)+61,
*                 LENGTH(CNT));     /* CNVT RECEIVED TO EBCDIC       */
         LA    @10,16                                           01S0540
         AL    @10,BUFPTR                                       01S0540
         ST    @10,@AFTEMPS                                     01S0540
         LA    @10,@AFTEMPS                                     01S0540
         ST    @10,@AL00001                                     01S0540
         LA    @10,AP1PRMSG(,AP1REG)                            01S0540
         AL    @10,@CF00457                                     01S0540
         ST    @10,@AFTEMPS+4                                   01S0540
         LA    @10,@AFTEMPS+4                                   01S0540
         ST    @10,@AL00001+4                                   01S0540
         LA    @10,@CF00047                                     01S0540
         ST    @10,@AL00001+8                                   01S0540
         LA    @01,@AL00001                                     01S0540
         BAL   @14,CVTEBCDX                                     01S0540
*             AP1ERROR=ON;          /* DRIVE PROBLEM                 */
*             AP1PRERR=ON;          /* PRINT MSG                     */
*             AP1QUIT=ON;           /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00111000'                     01S0543
*           END;                                                01S0544
*         ELSE                                                  01S0545
*           ;                       /* RECORD CORRECT                */
@RF00536 DS    0H                                               01S0546
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0546
*     END AMDET;                    /* END OF SUBCASE                */
*                                                               01S0547
*     /***************************************************************/
*     /*                                                             */
*     /* WRTPAD: FORMAT WRITE PADDING                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0548
*WRTPAD:                                                        01S0548
*     DO;                           /* SUBCASE CHECKS WRITE PAD TEST */
WRTPAD   DS    0H                                               01S0549
*/*   CHECKS FOR I/O ERRORS AND TO SEE THAT ONLY RECORD ONE READ     */
*                                                               01S0549
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0549
         BE    @RF00549                                         01S0549
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0550
*       ELSE                                                    01S0551
*         ;                         /* I/O OK                        */
@RF00549 DS    0H                                               01S0552
*       AP1TSTNO=AP1TSTNO+1;        /* GO TO NEXT TEST               */
         LA    @10,1                                            01S0552
         SLR   @09,@09                                          01S0552
         IC    @09,AP1TSTNO(,AP1REG)                            01S0552
         ALR   @10,@09                                          01S0552
         STC   @10,AP1TSTNO(,AP1REG)                            01S0552
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0553
         BNO   @RF00553                                         01S0553
*         DO;                                                   01S0554
*           AP1PRCOD=PWPADER;       /* WRTPAD ERROR MSG              */
         MVI   AP1PRCOD(AP1REG),X'1C'                           01S0555
*           AP1ERROR=ON;            /* DRIVE FAILURE                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0557
*         END;                                                  01S0558
*       ELSE                        /* NO HDWE DETECTED ERROR        */
*         IF(AP1BUFAD+LENGTH(CNT)*2)->CNT^=AP1BUFAD->CNT THEN/* READ
*                                      OVERWRITTEN RECORD            */
         B     @RC00553                                         01S0559
@RF00553 L     @10,AP1BUFAD(,AP1REG)                            01S0559
         LA    @09,16                                           01S0559
         ALR   @09,@10                                          01S0559
         CLC   CNT(8,@09),CNT(@10)                              01S0559
         BE    @RF00559                                         01S0559
*           DO;                                                 01S0560
*             AP1PRCOD=PWPADDC;     /* WRTPAD WRONG RECORD           */
         MVI   AP1PRCOD(AP1REG),X'1D'                           01S0561
*             CALL CVTEBCDX(AP1BUFAD+LENGTH(CNT)*2,ADDR(AP1PRMSG)+33,
*                 LENGTH(CNT));     /* CNVT EXPECTED TO EBCDIC       */
         ST    @09,@AFTEMPS                                     01S0562
         LA    @10,@AFTEMPS                                     01S0562
         ST    @10,@AL00001                                     01S0562
         LA    @10,AP1PRMSG(,AP1REG)                            01S0562
         AL    @10,@CF00283                                     01S0562
         ST    @10,@AFTEMPS+4                                   01S0562
         LA    @10,@AFTEMPS+4                                   01S0562
         ST    @10,@AL00001+4                                   01S0562
         LA    @10,@CF00047                                     01S0562
         ST    @10,@AL00001+8                                   01S0562
         LA    @01,@AL00001                                     01S0562
         BAL   @14,CVTEBCDX                                     01S0562
*             CALL CVTEBCDX(AP1BUFAD+LENGTH(CNT)*3,ADDR(AP1PRMSG)+61,
*                 LENGTH(CNT));     /* CNVT RECEIVED TO EBCDIC       */
         LA    @10,24                                           01S0563
         AL    @10,AP1BUFAD(,AP1REG)                            01S0563
         ST    @10,@AFTEMPS                                     01S0563
         LA    @10,@AFTEMPS                                     01S0563
         ST    @10,@AL00001                                     01S0563
         LA    @10,AP1PRMSG(,AP1REG)                            01S0563
         AL    @10,@CF00457                                     01S0563
         ST    @10,@AFTEMPS+4                                   01S0563
         LA    @10,@AFTEMPS+4                                   01S0563
         ST    @10,@AL00001+4                                   01S0563
         LA    @10,@CF00047                                     01S0563
         ST    @10,@AL00001+8                                   01S0563
         LA    @01,@AL00001                                     01S0563
         BAL   @14,CVTEBCDX                                     01S0563
*             AP1ERROR=ON;          /* DRIVE PROBLEM                 */
*             AP1PRERR=ON;          /* PRINT MSG                     */
*             AP1QUIT=ON;           /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00111000'                     01S0566
*           END;                                                01S0567
*         ELSE                                                  01S0568
*           ;                       /* CORRECT RECORD                */
@RF00559 DS    0H                                               01S0569
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0569
*     END WRTPAD;                   /* END OF SUBCASE                */
*                                                               01S0570
*     /***************************************************************/
*     /*                                                             */
*     /* SD: SKIP DEFECTS                                            */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0571
*SD:                                                            01S0571
*     DO;                           /* SUBCASE CHKS SKIP DEFECT      */
SD       DS    0H                                               01S0572
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0572
*       IF AP1PCODE^=NRMC THEN      /* ERROR ON I/O                  */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0572
         BE    @RF00572                                         01S0572
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0573
*       ELSE                                                    01S0574
*         ;                         /* I/O OK                        */
@RF00572 DS    0H                                               01S0575
*       IF AP1PRERR=ON THEN         /* I/O ERROR                     */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0575
         BNO   @RF00575                                         01S0575
*         DO;                                                   01S0576
*           AP1ERROR=ON;            /* DRIVE PROBLEM                 */
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0577
*           AP1PRCOD=PSDER;         /* SD ERROR MSG                  */
         MVI   AP1PRCOD(AP1REG),X'18'                           01S0578
*         END;                                                  01S0579
*       ELSE                                                    01S0580
*         ;                         /* NO I/O ERROR                  */
@RF00575 DS    0H                                               01S0581
*       AP1TSTNO=AP1TSTNO+1;        /* INCR TO NEXT TEST             */
         LA    @10,1                                            01S0581
         SLR   @09,@09                                          01S0581
         IC    @09,AP1TSTNO(,AP1REG)                            01S0581
         ALR   @10,@09                                          01S0581
         STC   @10,AP1TSTNO(,AP1REG)                            01S0581
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0582
*     END SD;                       /* END OF SUBCASE                */
*                                                               01S0583
*     /***************************************************************/
*     /*                                                             */
*     /* CLEANUP: RESTORE CE CYL TRK 1                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0584
*CLEANUP:                                                       01S0584
*     DO;                           /* SUBCASE                       */
CLEANUP  DS    0H                                               01S0585
*/*   CHECKS FOR I/O ERRORS                                          */
*                                                               01S0585
*       IF AP1PCODE^=NRMC THEN      /* ERROR                         */
         CLI   AP1PCODE(AP1REG),X'7F'                           01S0585
         BE    @RF00585                                         01S0585
*         AP1PRERR=ON;              /* INDICATE ERROR                */
         OI    AP1PRERR(AP1REG),B'00010000'                     01S0586
*       ELSE                                                    01S0587
*         ;                         /* NO ERROR                      */
@RF00585 DS    0H                                               01S0588
*       AP1LST=ON;                  /* LAST TEST                     */
         OI    AP1LST(AP1REG),B'01000000'                       01S0588
*       IF AP1PRERR=ON THEN         /* CLEANUP FAILED                */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0589
         BNO   @RF00589                                         01S0589
*         DO;                                                   01S0590
*           AP1ERROR=ON;            /* DRIVE FAILURE                 */
*           AP1QUIT=ON;             /* STOP TESTING                  */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S0592
*           AP1PRCOD=PCLNERR;       /* ERROR MSG                     */
         MVI   AP1PRCOD(AP1REG),X'21'                           01S0593
*         END;                                                  01S0594
*       ELSE                                                    01S0595
*         ;                         /* OK                            */
@RF00589 DS    0H                                               01S0596
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0596
*     END CLEANUP;                  /* END OF SUBCASE                */
*CE0001@:                                                       01S0598
*   END;                            /* END OF CASE                   */
         EJECT
*                                                               01S0599
*   /*****************************************************************/
*   /*                                                               */
*   /* CVTEBCDX: PROCEDURE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0599
*CVTEBCDX:                                                      01S0599
*   PROC(INAREA,OUTAREA,BYTES);     /* INTERNAL TO AP1 PROC          */
*                                                               01S0599
         B     @PB00002                                         01S0599
CVTEBCDX STM   @14,@12,@SA00002                                 01S0599
         MVC   @PC00002(12),0(@01)                              01S0599
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERTS BINARY DATA IN STORAGE TO EBCDIC DATA IN STORAGE     */
*   /* INAREA IS AREA CONTAINING BINARY DATA. OUTAREA IS AREA TO     */
*   /* CONTAIN EBCDIC DATA IN THE FORM XXXX XXXX.... BYTES IS NUMBER */
*   /* OF BYTES IN INAREA.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0600
*   RFY                                                         01S0600
*    (GPR00F,                                                   01S0600
*     GPR01P) RSTD;                                             01S0600
*   DO COUNTER=1 TO(BYTES/2);       /* TWO BYTES AT A TIME           */
         LA    COUNTER,1                                        01S0601
         B     @DE00601                                         01S0601
@DL00601 DS    0H                                               01S0602
*     GPR00F=INAREA->FIXED16(COUNTER);/* GET HALFWORD OF BINARY      */
         LR    @10,COUNTER                                      01S0602
         ALR   @10,@10                                          01S0602
         L     @09,@PC00002                                     01S0602
         L     @09,INAREA(,@09)                                 01S0602
         BCTR  @09,0                                            01S0602
         BCTR  @09,0                                            01S0602
         LH    GPR00F,FIXED16(@10,@09)                          01S0602
         N     GPR00F,@CF00505                                  01S0602
*     GPR01P=OUTAREA+(5*(COUNTER-1));/* AREA FOR EBCDIC              */
         L     @10,@PC00002+4                                   01S0603
         LR    GPR01P,COUNTER                                   01S0603
         BCTR  GPR01P,0                                         01S0603
         MH    GPR01P,@CH00083                                  01S0603
         AL    GPR01P,OUTAREA(,@10)                             01S0603
*     CALL CVTEBCD;                 /* CONVERTS TO EBCDIC            */
         BAL   @14,CVTEBCD                                      01S0604
*   END;                            /* OF DO                         */
         AL    COUNTER,@CF00043                                 01S0605
@DE00601 L     @10,@PC00002+8                                   01S0605
         L     @04,BYTES(,@10)                                  01S0605
         SRDA  @04,32                                           01S0605
         D     @04,@CF00058                                     01S0605
         CR    COUNTER,@05                                      01S0605
         BNH   @DL00601                                         01S0605
*   RFY                                                         01S0606
*    (GPR00F,                                                   01S0606
*     GPR01P) UNRSTD;                                           01S0606
*   END;                            /* OF CVTEBCDX PROC              */
@EL00002 DS    0H                                               01S0607
@EF00002 DS    0H                                               01S0607
@ER00002 LM    @14,@12,@SA00002                                 01S0607
         BR    @14                                              01S0607
         EJECT
*                                                               01S0608
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR1: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0608
*ERROR1:                                                        01S0608
*   PROC;                           /* INTERNAL TO AP1 PROC          */
*                                                               01S0608
ERROR1   STM   @14,@12,12(@13)                                  01S0608
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERPRETS ERRORS FOR READ HA NOT ON CE CYL TURNS BITS ON IN  */
*   /* HEAD ERROR TABLE-- DCK FOR A DATA CHECK AND SKVERCK FOR A SEEK*/
*   /* VERIFY CHECK--IF NEITHER, TURNS ON AP1QUIT                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0609
*   AP1ERROR=ON;                    /* INDICATE DRIVE FAILURE        */
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0609
*   IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWCOMCD(1)=
*       RDHA THEN                   /* UNIT CHECK ON THE READ HA     */
         CLI   AP1PCODE(AP1REG),X'41'                           01S0610
         BNE   @RF00610                                         01S0610
         LA    @10,AP1CSW(,AP1REG)                              01S0610
         BCTR  @10,0                                            01S0610
         TM    CSWUNCHK(@10),B'00000010'                        01S0610
         BNO   @RF00610                                         01S0610
         L     @10,CSWADDRB-1(,@10)                             01S0610
         AL    @10,@CF00504                                     01S0610
         CLI   CCWCOMCD(@10),26                                 01S0610
         BNE   @RF00610                                         01S0610
*     IF SNSDATA=ON×(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF) THEN/*
*                                      DATA CHECK                    */
         LA    @10,188                                          01S0611
         ALR   @10,AP1REG                                       01S0611
         TM    SNSDATA(@10),B'00001000'                         01S0611
         BO    @RT00611                                         01S0611
         TM    SNSEQU(@10),B'00010000'                          01S0611
         BNO   @RF00611                                         01S0611
         CLI   SNS7(@10),X'10'                                  01S0611
         BNE   @RF00611                                         01S0611
         MVC   @TS00001(1),SNS17(@10)                           01S0611
         NI    @TS00001,X'FE'                                   01S0611
         CLI   @TS00001,X'C0'                                   01S0611
         BNE   @RF00611                                         01S0611
@RT00611 DS    0H                                               01S0612
*       DCK=ON;                     /* INDICATE IN TABLE             */
         L     @10,AP1ETABA(,AP1REG)                            01S0612
         OI    DCK(@10),B'10000000'                             01S0612
*     ELSE                          /* NOT DATA CHECK                */
*       IF SNS7=SKCHK7&((AP1DEVTP=AP13344&SNSSKCK=ON)×(AP1DEVTP^=
*           AP13344&SNSEQU=ON)) THEN/* SEEK VERIFY ERROR             */
         B     @RC00611                                         01S0613
@RF00611 LA    @10,188                                          01S0613
         ALR   @10,AP1REG                                       01S0613
         CLI   SNS7(@10),X'1A'                                  01S0613
         BNE   @RF00613                                         01S0613
         CLI   AP1DEVTP(AP1REG),3                               01S0613
         BNE   @GL00029                                         01S0613
         TM    SNSSKCK(@10),B'00000001'                         01S0613
         BO    @RT00613                                         01S0613
@GL00029 CLI   AP1DEVTP(AP1REG),3                               01S0613
         BE    @RF00613                                         01S0613
         TM    SNSEQU+188(AP1REG),B'00010000'                   01S0613
         BNO   @RF00613                                         01S0613
@RT00613 DS    0H                                               01S0614
*         SKVERCK=ON;               /* INDICATE IN TABLE             */
         L     @10,AP1ETABA(,AP1REG)                            01S0614
         OI    SKVERCK(@10),B'01000000'                         01S0614
*       ELSE                        /* NOT DCK OR SKVERCK            */
*         AP1QUIT=ON;               /* STOP TESTING                  */
         B     @RC00613                                         01S0615
@RF00613 OI    AP1QUIT(AP1REG),B'00001000'                      01S0615
*   ELSE                            /* NOT DCK OR SKVERCK ON RHA     */
*     AP1QUIT=ON;                   /* STOP TESTING                  */
         B     @RC00610                                         01S0616
@RF00610 OI    AP1QUIT(AP1REG),B'00001000'                      01S0616
*   END;                            /* OR ERROR1 PROC                */
@EL00003 DS    0H                                               01S0617
@EF00003 DS    0H                                               01S0617
@ER00003 LM    @14,@12,12(@13)                                  01S0617
         BR    @14                                              01S0617
         EJECT
*                                                               01S0618
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR2: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0618
*ERROR2:                                                        01S0618
*   PROC;                           /* INTERNAL TO AP1 PROC          */
*                                                               01S0618
ERROR2   STM   @14,@12,12(@13)                                  01S0618
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERPRETS ERRORS FOR READ HA ON CE CYL SETS BITS IN HEAD     */
*   /* ERROR TABLE-- SETS DCKCE FOR DATA CHECK AND SKVERCK FOR SEEK  */
*   /* VERIFY CHECK--IF NEITHER, SETS AP1QUIT                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0619
*   AP1ERROR=ON;                    /* INDICATE DRIVE FAILURE        */
         OI    AP1ERROR(AP1REG),B'00100000'                     01S0619
*   IF AP1PCODE=ERRC&CSWUNCHK=ON&(CSWADDRB-LENGTH(CCW))->CCWRD(1)=ON&(
*       CSWADDRB-LENGTH(CCW))->CCWWR(1)=OFF THEN/* UNIT CHK ON READ  */
         CLI   AP1PCODE(AP1REG),X'41'                           01S0620
         BNE   @RF00620                                         01S0620
         LA    @10,AP1CSW(,AP1REG)                              01S0620
         BCTR  @10,0                                            01S0620
         TM    CSWUNCHK(@10),B'00000010'                        01S0620
         BNO   @RF00620                                         01S0620
         L     @10,CSWADDRB-1(,@10)                             01S0620
         AL    @10,@CF00504                                     01S0620
         TM    CCWRD(@10),B'00000010'                           01S0620
         BNO   @RF00620                                         01S0620
         TM    CCWWR(@10),B'00000001'                           01S0620
         BNZ   @RF00620                                         01S0620
*     IF SNSDATA=ON×(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF) THEN/*
*                                      DATA CHECK                    */
         LA    @10,188                                          01S0621
         ALR   @10,AP1REG                                       01S0621
         TM    SNSDATA(@10),B'00001000'                         01S0621
         BO    @RT00621                                         01S0621
         TM    SNSEQU(@10),B'00010000'                          01S0621
         BNO   @RF00621                                         01S0621
         CLI   SNS7(@10),X'10'                                  01S0621
         BNE   @RF00621                                         01S0621
         MVC   @TS00001(1),SNS17(@10)                           01S0621
         NI    @TS00001,X'FE'                                   01S0621
         CLI   @TS00001,X'C0'                                   01S0621
         BNE   @RF00621                                         01S0621
@RT00621 DS    0H                                               01S0622
*       DCKCE=ON;                   /* SET IN TABLE                  */
         L     @10,AP1ETABA(,AP1REG)                            01S0622
         OI    DCKCE(@10),B'00010000'                           01S0622
*     ELSE                          /* NOT DATA CHECK                */
*       IF SNS7=SKCHK7&((AP1DEVTP=AP13344&SNSSKCK=ON)×(AP1DEVTP^=
*           AP13344&SNSEQU=ON)) THEN                            01S0623
         B     @RC00621                                         01S0623
@RF00621 LA    @10,188                                          01S0623
         ALR   @10,AP1REG                                       01S0623
         CLI   SNS7(@10),X'1A'                                  01S0623
         BNE   @RF00623                                         01S0623
         CLI   AP1DEVTP(AP1REG),3                               01S0623
         BNE   @GL00038                                         01S0623
         TM    SNSSKCK(@10),B'00000001'                         01S0623
         BO    @RT00623                                         01S0623
@GL00038 CLI   AP1DEVTP(AP1REG),3                               01S0623
         BE    @RF00623                                         01S0623
         TM    SNSEQU+188(AP1REG),B'00010000'                   01S0623
         BNO   @RF00623                                         01S0623
@RT00623 DS    0H                                               01S0624
*         SKVERCK=ON;               /* SET IN TABLE                  */
         L     @10,AP1ETABA(,AP1REG)                            01S0624
         OI    SKVERCK(@10),B'01000000'                         01S0624
*       ELSE                        /* NOT DCK OR SKVERCK            */
*         AP1QUIT=ON;               /* STOP TESTING                  */
         B     @RC00623                                         01S0625
@RF00623 OI    AP1QUIT(AP1REG),B'00001000'                      01S0625
*   ELSE                            /* NOT UCK ON RHA                */
*     AP1QUIT=ON;                   /* STOP TESTING                  */
         B     @RC00620                                         01S0626
@RF00620 OI    AP1QUIT(AP1REG),B'00001000'                      01S0626
*   END;                            /* OF ERROR2 PROC                */
@EL00004 DS    0H                                               01S0627
@EF00004 DS    0H                                               01S0627
@ER00004 LM    @14,@12,12(@13)                                  01S0627
         BR    @14                                              01S0627
         EJECT
*                                                               01S0628
*   /*****************************************************************/
*   /*                                                               */
*   /* CVTEBCD: PROCEDURE                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0628
*CVTEBCD:                                                       01S0628
*   PROC;                           /* INTERNAL TO AP1CHK PROC       */
*                                                               01S0628
CVTEBCD  STM   @14,@12,@SA00005                                 01S0628
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERTS BINARY TO EBCDIC REG0 CONTAINS HALFWORD OF BINARY    */
*   /* INFO (SIGN IGNORED)..REG1 POINTS TO FULLWORD TO CONTAIN EBCDIC*/
*   /* REPRESENTATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0629
*   RFY                                                         01S0629
*    (GPR00F,                                                   01S0629
*     GPR01P,                                                   01S0629
*     GPR02F,                                                   01S0629
*     GPR03F) RSTD;                                             01S0629
*   GENERATE REFS(ALPHACNV);                                    01S0630
*                      INPUT =   0000WXYZ
         SLL   @00,12            0WXYZ000
         ST    @00,0(@01)
         UNPK  0(4,@01),0(3,@01) FWFXFY0Z
         OI    3(@01),X'F0'      FWFXFYFZ
         LA    @00,4             LOOP COUNTER
LOOPEBCD CLI   0(@01),X'F9'      IS IT A NUMBER
         BNH   NUMBER
         IC    @02,0(@01)        GET CHARACTER
         SH    @02,ALPHACNV      CHANGE TO ALPHA
         STC   @02,0(@01)        PUT IT BACK
NUMBER   LA    @01,1(@01)        GO TO NEXT CHAR
         BCT   @00,LOOPEBCD      AGAIN
*   RFY                                                         01S0631
*    (GPR00F,                                                   01S0631
*     GPR01P,                                                   01S0631
*     GPR02F,                                                   01S0631
*     GPR03F) UNRSTD;                                           01S0631
*   END;                            /* OF CVTEBCD PROC               */
*                                                               01S0632
@EL00005 DS    0H                                               01S0632
@EF00005 DS    0H                                               01S0632
@ER00005 LM    @14,@12,@SA00005                                 01S0632
         BR    @14                                              01S0632
@PB00005 DS    0H                                               01S0633
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARES FOR MACROS                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0633
*   DCL                                                         01S0633
*     1 I056 DEF(ILIST) BDY(WORD) CHAR(32767),/* LIST FOR ENQ        */
*       3 I05600 PTR(31),           /* TCB ADDR IF BOTH TCB AND ECB  */
*       3 I05601 PTR(31),           /* TCB OR ECB ADDRESS            */
*       3 I05602(*) CHAR(12) BDY(WORD),/* ARRAY OF RESOURCE ELEMENTS */
*         5 I05603 BIT(8),          /* BIT FLAGS 1                   */
*         5 I05604 PTR(8),          /* MINOR RESOURCE NAME LENGTH    */
*         5 I05605 BIT(8),          /* BIT FLAGS 2                   */
*         5 I05655 CHAR(1),         /* CONTROL PGM USE               */
*         5 I05606 PTR(31),         /* MAJOR RESOURCE NAME ADDR      */
*         5 I05607 PTR(31);         /* MINOR RESOURCE NAME ADDR      */
*   DECLARE                                                     01S0634
*     ILIST CHAR(16) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0635
*     I031F FIXED(31) BASED,                                    01S0635
*     I031P PTR(31) BASED,                                      01S0635
*     I015F FIXED(15) BASED,                                    01S0635
*     I015P PTR(15) BASED,                                      01S0635
*     I008P PTR(8) BASED,                                       01S0635
*     I001C CHAR(1) BASED;          /* GENERATE DSECTS FOR MACROS    */
*                                                               01S0635
*   /*****************************************************************/
*   /*                                                               */
*   /* PATCH AREA                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0636
*   GEN DATA DEFS(PATCH);                                       01S0636
*   END                             /* OF IAPCHKIO PROC              */
*                                                               01S0637
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AP1BLOCK)                                       */
*/*%INCLUDE SYSUT5  (CVTBIN  )                                       */
*                                                               01S0637
*       ;                                                       01S0637
@EL00001 L     @13,4(,@13)                                      01S0637
@EF00001 DS    0H                                               01S0637
@ER00001 LM    @14,@12,12(@13)                                  01S0637
         BR    @14                                              01S0637
@DATA    DS    0H
@CH00083 DC    H'5'
@CH00318 DC    H'50'
@CH00421 DC    XL2'0135'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00005 DS    15F
@SA00002 DS    15F
@PC00002 DS    3F
@AL00001 DS    3A
@AFTEMPS DS    2F
IAPCHKIO CSECT
         DS    0F
@CF00043 DC    F'1'
@CF00058 DC    F'2'
@CF00137 DC    F'3'
@CF00038 DC    F'4'
@CF00047 DC    F'8'
@CF00411 DC    F'25'
@CF00289 DC    F'32'
@CF00283 DC    F'33'
@CF00450 DC    F'41'
@CF00133 DC    F'60'
@CF00457 DC    F'61'
@CF00504 DC    F'-8'
@CF00415 DC    XL4'C0000000'
@CF00420 DC    XL4'00000FDF'
@CF00423 DC    XL4'00000FC0'
@CF00424 DC    XL4'0000003F'
@CF00505 DC    XL4'0000FFFF'
@CF00422 DC    XL4'3135'
@DATD    DSECT
         DS    0D
BUFPTR   DS    A
@TS00001 DS    CL1
         DS    CL3
ILIST    DS    CL16
IAPCHKIO CSECT
         NOPR  ((@ENDDATD-@DATD)/257*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ALPHACNV DC    XL2'39'
ALPHACV2 DC    XL2'B7'
@CB00290 DC    X'0AF0000B'
@CB00292 DC    X'00000008'
@CB00294 DC    X'01000100'
@CB00327 DC    X'00040009'
@CB00329 DC    X'000E000B'
@CB00440 DC    X'0002001D'
@CB00441 DC    X'00030012'
@CB00442 DC    X'000A000A'
@CB00314 DC    X'001D'
@CB00316 DC    X'000B'
ZERO     DC    X'0000000000000000'
TBL3344  DC    X'02222A3203232B3304242C3405252D3506262E3607272F37102028C
               3011212931141C383C15391D3D163A1E3E173B1F3F00'
QNAME    DC    CL8'AP1QNAME'
R1DATA1  DS    CL256
         ORG   R1DATA1
@NM00013 DS    CL64
         ORG   @NM00013
@NM00014 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+64
@NM00015 DS    CL64
         ORG   @NM00015
@NM00016 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+128
@NM00017 DS    CL64
         ORG   @NM00017
@NM00018 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+192
@NM00019 DS    CL64
         ORG   @NM00019
@NM00020 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+256
R1DATA2  DS    CL256
         ORG   R1DATA2
@NM00021 DC    X'AAAAAAAAAAAAAAAAAAAA'
@NM00022 DC    X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
         DS    14XL16
@NM00023 DC    X'FFFFFFFFFFFF'
         ORG   R1DATA2+256
         DS    CL3
CP0001@  DC    AL4(RECAL1)
         DC    AL4(SNS)
         DC    AL4(RECAL2)
         DC    AL4(RET)
         DC    AL4(RHAMH)
         DC    AL4(RET)
         DC    AL4(RHAFH)
         DC    AL4(RPS)
         DC    AL4(SK192)
         DC    AL4(SKINCR)
         DC    AL4(SKMAX)
         DC    AL4(RET)
         DC    AL4(SKRAN)
         DC    AL4(RET)
         DC    AL4(RHA)
         DC    AL4(RET)
         DC    AL4(WRT)
         DC    AL4(RET)
         DC    AL4(RR01)
         DC    AL4(RDMT)
         DC    AL4(FTWRT)
         DC    AL4(AMDET)
         DC    AL4(WRTPAD)
         DC    AL4(SD)
         DC    AL4(CLEANUP)
IAPCHKIO CSECT
*                                /*  PATCH AREA  */
         CNOP  0,4               FULLWORD BDWY
PATCH    DC    2XL((*-@MAINENT)/40)'0' FIVE PERCENT.
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IAPCHKIO CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
COUNTER  EQU   @02
CCUSAV   EQU   @03
TBLPTR   EQU   @02
AP1REG   EQU   @08
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR13P   EQU   @13
GPR15F   EQU   @15
GPR15P   EQU   @15
AP1BLOCK EQU   0
AP1PRINT EQU   AP1BLOCK+8
AP1PRMSG EQU   AP1PRINT+1
AP1PRCOD EQU   AP1BLOCK+139
AP1PFLG1 EQU   AP1BLOCK+144
AP1CNCOD EQU   AP1BLOCK+145
AP1WRKA  EQU   AP1BLOCK+156
AP1CCWA  EQU   AP1BLOCK+160
AP1BUFAD EQU   AP1BLOCK+164
AP1TIMFL EQU   AP1BLOCK+176
AP1TIMFA EQU   AP1TIMFL
AP1PCODE EQU   AP1BLOCK+180
AP1CSW   EQU   AP1BLOCK+181
AP1SNS   EQU   AP1BLOCK+188
AP1SEEK  EQU   AP1BLOCK+213
CCHHR    EQU   AP1SEEK+3
CCHH     EQU   CCHHR
HH       EQU   CCHH+2
AP1CESK  EQU   AP1BLOCK+221
CECCHHR  EQU   AP1CESK+2
CECCHH   EQU   CECCHHR
CEHH     EQU   CECCHH+2
AP1FLG2  EQU   AP1BLOCK+244
AP1NOWR  EQU   AP1FLG2
AP1FHF   EQU   AP1FLG2
AP1FLG3  EQU   AP1BLOCK+245
AP1PTRN2 EQU   AP1FLG3
AP1LST   EQU   AP1FLG3
AP1ERROR EQU   AP1FLG3
AP1PRERR EQU   AP1FLG3
AP1QUIT  EQU   AP1FLG3
AP1FLG4  EQU   AP1BLOCK+246
AP1ENQD  EQU   AP1FLG4
AP1TSTNO EQU   AP1BLOCK+249
AP1DEVTP EQU   AP1BLOCK+250
AP1RET   EQU   AP1BLOCK+251
AP1ETABA EQU   AP1BLOCK+252
AP1SKCNT EQU   AP1BLOCK+256
AP1DEVAD EQU   AP1BLOCK+262
AP1ENQAD EQU   AP1BLOCK+266
AP1END   EQU   AP1BLOCK+360
ERRTAB   EQU   0
DCK      EQU   ERRTAB
SKVERCK  EQU   ERRTAB
WRTCK    EQU   ERRTAB
DCKCE    EQU   ERRTAB
DATACOMP EQU   ERRTAB
CCW      EQU   0
CCWADDRA EQU   CCW
CCWCOMCD EQU   CCWADDRA
@NM00005 EQU   CCWCOMCD
CCWRD    EQU   @NM00005
CCWWR    EQU   @NM00005
CCWFLGS  EQU   CCW+4
WRKAREA  EQU   0
WRKAD    EQU   WRKAREA
WRKFLG   EQU   WRKAD
BYTE1    EQU   0
BYTE5    EQU   0
BYTE8    EQU   0
FIXED16  EQU   0
CSW      EQU   0
CSWADDRA EQU   CSW
CSWADDRB EQU   CSWADDRA+1
CSWSTATS EQU   CSW+4
CSWSTAT1 EQU   CSWSTATS
CSWUNCHK EQU   CSWSTAT1
SNSD     EQU   0
SNS0     EQU   SNSD
SNSINT   EQU   SNS0
SNSEQU   EQU   SNS0
SNSDATA  EQU   SNS0
SNSSKCK  EQU   SNS0
SNS1     EQU   SNSD+1
SNSINHI  EQU   SNS1
SNS2     EQU   SNSD+2
SNSEMU   EQU   SNS2
SNSFHF   EQU   SNS2
SNS6     EQU   SNSD+6
SNS7     EQU   SNSD+7
SNS17    EQU   SNSD+17
ECBCC    EQU   0
CNT      EQU   0
CNTCCHHR EQU   CNT
CNTCCHH  EQU   CNTCCHHR
CNTHH    EQU   CNTCCHH+2
CNTR     EQU   CNTCCHHR+4
CL0001@  EQU   0
BYTE6    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
INAREA   EQU   0
OUTAREA  EQU   0
BYTES    EQU   0
@NM00008 EQU   WRKAREA
WRKHW1   EQU   @NM00008
CNTRKDD  EQU   CNTR
CNTKDD   EQU   CNTRKDD
I056     EQU   ILIST
I05602   EQU   I056+8
I05603   EQU   I05602
I05604   EQU   I05602+1
I05605   EQU   I05602+2
I05606   EQU   I05602+4
I05607   EQU   I05602+8
CNTHHR   EQU   CNTHH
HHR      EQU   HH
ZERO6    EQU   ZERO
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
I05655   EQU   I05602+3
I05601   EQU   I056+4
I05600   EQU   I056
CNTDD    EQU   CNTKDD+1
CNTK     EQU   CNTKDD
WRKHW2   EQU   @NM00008+2
@NM00024 EQU   CNT+5
CNTCC    EQU   CNTCCHH
ECBPOST  EQU   ECBCC
ECBWAIT  EQU   ECBCC
@NM00012 EQU   SNSD+8
SNSHD1   EQU   SNS6
SNSHD2   EQU   SNS6
SNSHD4   EQU   SNS6
SNSHD8   EQU   SNS6
SNSHD16  EQU   SNS6
SNSCYLC  EQU   SNS6
SNSCYLB  EQU   SNS6
SNSCYLA  EQU   SNS6
SNS5     EQU   SNSD+5
SNS4     EQU   SNSD+4
SNS3     EQU   SNSD+3
SNSEDAT  EQU   SNS2
@NM00011 EQU   SNS2
SNSCORR  EQU   SNS2
SNSWRPS  EQU   SNS2
SNSOFLO  EQU   SNS1
SNSFP    EQU   SNS1
SNSNRF   EQU   SNS1
@NM00010 EQU   SNS1
SNSEOC   EQU   SNS1
SNSIFMT  EQU   SNS1
SNSPERM  EQU   SNS1
SNSTCC   EQU   SNS0
SNSOVRN  EQU   SNS0
SNSBUSO  EQU   SNS0
SNSCREJ  EQU   SNS0
CSWBYTE  EQU   CSW+6
CSWUNEXP EQU   CSWSTAT1
@NM00009 EQU   CSWSTAT1
CSWKEY   EQU   CSWADDRA
WRKAB    EQU   WRKAD+1
WRKENDFL EQU   WRKFLG
CCWBYTE  EQU   CCW+6
@NM00007 EQU   CCW+5
CCWPCI   EQU   CCWFLGS
CCWSKIP  EQU   CCWFLGS
CCWSLI   EQU   CCWFLGS
CCWCC    EQU   CCWFLGS
CCWCD    EQU   CCWFLGS
CCWADDRB EQU   CCWADDRA+1
@NM00006 EQU   @NM00005
AP1ERRTF EQU   AP1BLOCK+300
AP1ERRTM EQU   AP1BLOCK+270
AP1LSTHH EQU   AP1BLOCK+260
AP1LSTCC EQU   AP1BLOCK+258
AP1DCCNT EQU   AP1BLOCK+248
@NM00004 EQU   AP1BLOCK+247
AP1DEBCH EQU   AP1FLG4
AP1READ  EQU   AP1FLG4
AP1NORD  EQU   AP1FLG4
AP1RDERR EQU   AP1FLG3
AP1RDTST EQU   AP1FLG3
AP1VERIF EQU   AP1FLG3
AP1NOERP EQU   AP1FLG2
AP1EDP   EQU   AP1FLG2
AP1IOC   EQU   AP1FLG2
AP1IOECB EQU   AP1BLOCK+240
AP1IOBA  EQU   AP1BLOCK+236
AP1DEBA  EQU   AP1BLOCK+232
AP1DCBA  EQU   AP1BLOCK+228
CER      EQU   CECCHHR+4
CECC     EQU   CECCHH
CEBB     EQU   AP1CESK
R        EQU   CCHHR+4
CC       EQU   CCHH
BB       EQU   AP1SEEK+1
M        EQU   AP1SEEK
AP1FM    EQU   AP1BLOCK+212
AP1TIMIN EQU   AP1TIMFA
AP1IOACT EQU   AP1TIMFA
AP1TCBAD EQU   AP1BLOCK+172
AP1TIMEA EQU   AP1BLOCK+168
AP1BUFAB EQU   AP1BUFAD+1
@NM00003 EQU   AP1BUFAD
AP1CCWAB EQU   AP1CCWA+1
@NM00002 EQU   AP1CCWA
AP1RECB  EQU   AP1BLOCK+152
@NM00001 EQU   AP1BLOCK+150
AP1CNRPL EQU   AP1BLOCK+146
AP1PRCLS EQU   AP1PFLG1
AP1PRNP  EQU   AP1PFLG1
AP1PROPN EQU   AP1PFLG1
AP1PRLIN EQU   AP1BLOCK+142
AP1PRPAG EQU   AP1BLOCK+140
AP1PRASA EQU   AP1PRINT
AP1PDCBA EQU   AP1BLOCK+4
AP1HDR   EQU   AP1BLOCK
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00117 EQU   @RC00116
@RC00325 EQU   @RC00322
@RC00375 EQU   @RC00372
@RC00424 EQU   @RC00420
@RC00610 EQU   @EL00003
@RC00620 EQU   @EL00004
@PB00004 EQU   @PB00005
@RC00331 EQU   @RC00325
@RC00326 EQU   @RC00325
@RC00376 EQU   @RC00375
@RT00430 EQU   @RC00424
@RC00613 EQU   @RC00610
@RC00611 EQU   @RC00610
@PB00003 EQU   @PB00004
@RC00623 EQU   @RC00620
@RC00621 EQU   @RC00620
@PB00002 EQU   @PB00003
CE0001@  EQU   @PB00002
@RC00114 EQU   CE0001@
@RC00391 EQU   CE0001@
@RC00447 EQU   CE0001@
@RC00530 EQU   CE0001@
@RC00553 EQU   CE0001@
@RC00448 EQU   @RC00447
@ENDDATA EQU   *
         END   IAPCHKIO,(C'PLS1722',0701,77308)
