         TITLE 'IAPBLDIO - AP-1 CCW CHAIN BUILDER                      *
                        '
IAPBLDIO CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IAPBLDIO  77.308'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  LA    @12,4095(,@11)                                   01S0001
         USING @PSTART,@11                                      01S0001
         USING @PSTART+4095,@12                                 01S0001
*                                                               01S0100
         USING @DATD+AP1BLOCK-AP1END,AP1REG  ADDRESSABILITY
         ST    13,@SA00001+4     BACKWARD POINTER
         LA    15,@SA00001       OUR SAVE AREA
         ST    15,8(,13)         FOREWARD POINTER
         LR     13,15            SET REG 13
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT BUILD ROUTINE BASED ON AP1TSTNO                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0101
*   DO;                             /* CASE(AP1TSTNO)NAMES(RECAL,SNS,
*                                      RECAL,RHAMHS,RHAMH,RHAFHS,RHAF
*                                      H,RPS,SK192,SKINCR,SKMAX,SKRAN
*                                      S,SKRAN,RHAS,CE,WRTS,CE,RR01S,
*                                      CE,RDMT,FTWRT,AMDET,WRTPAD,SD,
*                                      CLEANUP)                      */
*     DCL                                                       01S0102
*       CL0001@ LABEL BASED(CP0001@(AP1TSTNO)) VALUERANGE(RECAL,SNS,
*           RECAL,RHAMHS,RHAMH,RHAFHS,RHAFH,RPS,SK192,SKINCR,SKMAX,
*           SKRANS,SKRAN,RHAS,CE,WRTS,CE,RR01S,CE,RDMT,FTWRT,AMDET,
*           WRTPAD,SD,CLEANUP);     /* BRANCH TARGET                 */
*     DCL                                                       01S0103
*       CP0001@(25) PTR(31) INIT(ADDR(RECAL),ADDR(SNS),ADDR(RECAL),ADDR
*           (RHAMHS),ADDR(RHAMH),ADDR(RHAFHS),ADDR(RHAFH),ADDR(RPS),
*           ADDR(SK192),ADDR(SKINCR),ADDR(SKMAX),ADDR(SKRANS),ADDR(
*           SKRAN),ADDR(RHAS),ADDR(CE),ADDR(WRTS),ADDR(CE),ADDR(RR01S),
*           ADDR(CE),ADDR(RDMT),ADDR(FTWRT),ADDR(AMDET),ADDR(WRTPAD),
*           ADDR(SD),ADDR(CLEANUP));                            01S0103
*     GOTO CL0001@;                 /* BRANCH TO SELECTED CASE       */
*                                                               01S0104
         SLR   @10,@10                                          01S0104
         IC    @10,AP1TSTNO(,AP1REG)                            01S0104
         SLA   @10,2                                            01S0104
         L     @10,CP0001@-4(@10)                               01S0104
         BR    @10                                              01S0104
*     /***************************************************************/
*     /*                                                             */
*     /* RECAL: DUMMY RECALIBRATE                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0105
*RECAL:                                                         01S0105
*     DO;                           /* SUBCASE RECALIBRATE           */
RECAL    DS    0H                                               01S0106
*/*        CCW CHAIN:                                           01S0106
*                RECAL,0,SLI-CC,1     RECAL                     01S0106
*                NOP,0,0,1            TO GET DEVICE END              */
*                                                               01S0106
*       AP1FM=READFM;               /* READ ONLY--ALL SEEKS          */
         MVC   AP1FM(1,AP1REG),READFM                           01S0106
*       CCW(1)=RECALCCW;            /* RECAL,0,SLI-CC,1              */
         L     @10,AP1CCWA(,AP1REG)                             01S0107
         MVC   CCW(8,@10),RECALCCW                              01S0107
*       CCW(2)=NOPCCW;              /* NOP,0,0,1                     */
         MVC   CCW+8(8,@10),NOPCCW                              01S0108
*       CCHH=0;                     /* SEEK CYL 0, HD 0              */
         SLR   @10,@10                                          01S0109
         ST    @10,CCHH(,AP1REG)                                01S0109
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0110
*     END RECAL;                    /* END OF SUBCASE                */
*                                                               01S0111
*     /***************************************************************/
*     /*                                                             */
*     /* SNS: SENSE TO SEE IF EMULATED AND FIXED HEAD                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0112
*SNS:                                                           01S0112
*     DO;                           /* SUBCASE                       */
SNS      DS    0H                                               01S0113
*/*                  CCW CHAIN:                                 01S0113
*                    SNS,BUFF,0,24                                   */
*                                                               01S0113
*       AP1FM=READFM;               /* FILE MASK,READ ONLY--ALL SEEKS*/
*                                                               01S0113
         MVC   AP1FM(1,AP1REG),READFM                           01S0113
*       /*************************************************************/
*       /*                                                           */
*       /* AP1SEEK IS STILL 000000000                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0114
*       CCW(1)=SNSCCW;              /* SNS,0,0,24                    */
         L     @10,AP1CCWA(,AP1REG)                             01S0114
         MVC   CCW(8,@10),SNSCCW                                01S0114
*       CCWADDRB(1)=AP1BUFAB;       /* READ SNS INTO BUFFER          */
         MVC   CCWADDRB(3,@10),AP1BUFAB(AP1REG)                 01S0115
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0116
*     END SNS;                      /* END OF SUBCASE                */
*                                                               01S0117
*     /***************************************************************/
*     /*                                                             */
*     /* RHAMHS: CHECK MOVEABLE HEADS                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0118
*RHAMHS:                                                        01S0118
*     DO;                           /* SUBCASE READ HA ON MOVABLE
*                                      HDS--PHYS HD 0--RHAMH WILL
*                                      ALTER SEEK ADDRESS TO READ HDS
*                                      1-29                          */
RHAMHS   DS    0H                                               01S0119
*/*        CCW CHAIN:                                           01S0119
*                READ HA,0,SKIP,5                                    */
*                                                               01S0119
*       CCHH=0;                     /* CYL 0, HD 0                   */
         SLR   @10,@10                                          01S0119
         ST    @10,CCHH(,AP1REG)                                01S0119
*       AP1FM=READFM;               /* READ ONLY -- ALL SEEKS        */
         MVC   AP1FM(1,AP1REG),READFM                           01S0120
*       CCW(1)=RHASKCCW;            /* RHA,0,SKIP,5                  */
         L     @10,AP1CCWA(,AP1REG)                             01S0121
         MVC   CCW(8,@10),RHASKCCW                              01S0121
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD0 OF MOVABLE HD
*                                      MATRIX                        */
         LA    @10,AP1ERRTM(,AP1REG)                            01S0122
         ST    @10,AP1ETABA(,AP1REG)                            01S0122
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK RTN FOR RHAMH         */
         LA    @10,1                                            01S0123
         SLR   @09,@09                                          01S0123
         IC    @09,AP1TSTNO(,AP1REG)                            01S0123
         ALR   @10,@09                                          01S0123
         STC   @10,AP1TSTNO(,AP1REG)                            01S0123
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0124
*     END RHAMHS;                   /* END OF SUBCASE                */
*                                                               01S0125
*     /***************************************************************/
*     /*                                                             */
*     /* RHAMH: CHECK MOVEABLE HEADS                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0126
*RHAMH:                                                         01S0126
*     DO;                           /* SUBCASE READ HA ON MOVEABLE
*                                      HDS 1-29 --RHAMHS SET UP CCW
*                                      CHAIN                         */
*                                                               01S0126
RHAMH    DS    0H                                               01S0127
*       /*************************************************************/
*       /*                                                           */
*       /* INCREMENT TO NEXT PHYSICAL HEAD                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0127
*       IF HH=HI3330HD THEN         /* HEAD 18--LAST ON 3330 PACK    */
         CLC   HH(2,AP1REG),@CB00215                            01S0127
         BNE   @RF00127                                         01S0127
*         IF AP1DEVTP=AP13350 THEN  /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0128
         BNE   @RF00128                                         01S0128
*           DO;                                                 01S0129
*             AP1ETABA=AP1ETABA+1;  /* INCREMENT TABLE PTR           */
         LA    @10,1                                            01S0130
         L     @09,AP1ETABA(,AP1REG)                            01S0130
         ALR   @09,@10                                          01S0130
         ST    @09,AP1ETABA(,AP1REG)                            01S0130
*             HH=HH+1;              /* GO TO HD 19                   */
         LH    @09,HH(,AP1REG)                                  01S0131
         N     @09,@CF00595                                     01S0131
         ALR   @10,@09                                          01S0131
         STH   @10,HH(,AP1REG)                                  01S0131
*           END;                                                01S0132
*         ELSE                      /* MUST BE 3330                  */
*           DO;                                                 01S0133
         B     @RC00128                                         01S0133
@RF00128 DS    0H                                               01S0134
*             AP1ETABA=AP1ETABA+2;  /* INCR TABLE PTR BY 2--PHYS HD
*                                      19 NOT USED                   */
         LA    @10,2                                            01S0134
         AL    @10,AP1ETABA(,AP1REG)                            01S0134
         ST    @10,AP1ETABA(,AP1REG)                            01S0134
*             CCHH='00040000'X;     /* TO CYL 4 FOR PHYS HDS 20-29   */
         MVC   CCHH(4,AP1REG),@CB00555                          01S0135
*           END;                                                01S0136
*       ELSE                        /* NOT HD 18                     */
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */
         B     @RC00127                                         01S0137
@RF00127 CLI   AP1DEVTP(AP1REG),3                               01S0137
         BNE   @RF00137                                         01S0137
*           IF CCHH='00000000'X THEN/* FIRST TRACK ON 3344           */
         CLC   CCHH(4,AP1REG),@CB00556                          01S0138
         BNE   @RF00138                                         01S0138
*             HH='0001'X;           /* READ 2ND HALF OF TRK--SAME
*                                      PHYS HD                       */
         MVC   HH(2,AP1REG),@CB00557                            01S0139
*           ELSE                    /* 3344 BUT NOT 1ST TRK          */
*             DO;                                               01S0140
         B     @RC00138                                         01S0140
@RF00138 DS    0H                                               01S0141
*               IF CC=0&HH=HI3344HD THEN/* END OF CYL 0              */
         LH    @10,CC(,AP1REG)                                  01S0141
         N     @10,@CF00595                                     01S0141
         LTR   @10,@10                                          01S0141
         BNZ   @RF00141                                         01S0141
         CLC   HH(2,AP1REG),@CB00235                            01S0141
         BNE   @RF00141                                         01S0141
*                 CC='000A'X;       /* SKIP 10 CYLS--MAY BE FIXED HDS*/
         MVC   CC(2,AP1REG),@CB00558                            01S0142
*               ELSE                                            01S0143
*                 ;                 /* NOT END OF CYL 0              */
@RF00141 DS    0H                                               01S0144
*               IF HH=HI3344HD THEN /* END OF CYL                    */
         CLC   HH(2,AP1REG),@CB00235                            01S0144
         BNE   @RF00144                                         01S0144
*                 DO;                                           01S0145
*                   CC=CC+1;        /* GO TO NEXT CYL                */
         LA    @10,1                                            01S0146
         LH    @09,CC(,AP1REG)                                  01S0146
         N     @09,@CF00595                                     01S0146
         ALR   @09,@10                                          01S0146
         STH   @09,CC(,AP1REG)                                  01S0146
*                   HH=1;           /* TRACK ONE                     */
         STH   @10,HH(,AP1REG)                                  01S0147
*                 END;                                          01S0148
*               ELSE                /* NOT END OF CYL                */
*                 HH=HH+2;          /* TO NEXT PHYSICAL TRACK        */
         B     @RC00144                                         01S0149
@RF00144 LA    @10,2                                            01S0149
         LH    @09,HH(,AP1REG)                                  01S0149
         N     @09,@CF00595                                     01S0149
         ALR   @10,@09                                          01S0149
         STH   @10,HH(,AP1REG)                                  01S0149
*               AP1ETABA=AP1ETABA+1;/* INCR TABLE PTR TO NEXT PHYS
*                                      HEAD                          */
@RC00144 LA    @10,1                                            01S0150
         AL    @10,AP1ETABA(,AP1REG)                            01S0150
         ST    @10,AP1ETABA(,AP1REG)                            01S0150
*             END;                                              01S0151
*         ELSE                      /* NOT 3344--NOT HD 18           */
*           DO;                                                 01S0152
         B     @RC00137                                         01S0152
@RF00137 DS    0H                                               01S0153
*             AP1ETABA=AP1ETABA+1;  /* INCR TABLE PTR TO NEXT PHYS
*                                      HEAD                          */
         LA    @10,1                                            01S0153
         L     @09,AP1ETABA(,AP1REG)                            01S0153
         ALR   @09,@10                                          01S0153
         ST    @09,AP1ETABA(,AP1REG)                            01S0153
*             HH=HH+1;              /* TO NEXT PHYS HEAD             */
         LH    @09,HH(,AP1REG)                                  01S0154
         N     @09,@CF00595                                     01S0154
         ALR   @10,@09                                          01S0154
         STH   @10,HH(,AP1REG)                                  01S0154
*           END;                                                01S0155
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0156
*     END RHAMH;                    /* END OF SUBCASE                */
*                                                               01S0157
*     /***************************************************************/
*     /*                                                             */
*     /* RHAFHS: CHECK FIXED HEADS                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0158
*RHAFHS:                                                        01S0158
*     DO;                           /* SUBCASE READ HA ON FIXED HEAD
*                                      0 --RHAFH WILL ALTER SEEK
*                                      ADDRESS TO HEADS 1-59         */
RHAFHS   DS    0H                                               01S0159
*/*        CCW CHAIN:                                           01S0159
*                READ HA,0,SKIP,5                                    */
*                                                               01S0159
*       CCHH=FIXEDHD1;              /* FIRST FIXED HEAD              */
         MVC   CCHH(4,AP1REG),@CB00256                          01S0159
*       AP1ETABA=ADDR(AP1ERRTF);    /* POINT TO ERR TAB FOR FIXED HDS*/
         LA    @10,AP1ERRTF(,AP1REG)                            01S0160
         ST    @10,AP1ETABA(,AP1REG)                            01S0160
*       CCW(1)=RHASKCCW;            /* RHA,0,SKIP,5                  */
         L     @10,AP1CCWA(,AP1REG)                             01S0161
         MVC   CCW(8,@10),RHASKCCW                              01S0161
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK RTN FOR RHAFH         */
         LA    @10,1                                            01S0162
         SLR   @09,@09                                          01S0162
         IC    @09,AP1TSTNO(,AP1REG)                            01S0162
         ALR   @10,@09                                          01S0162
         STC   @10,AP1TSTNO(,AP1REG)                            01S0162
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0163
*     END RHAFHS;                   /* END OF SUBCASE                */
*                                                               01S0164
*     /***************************************************************/
*     /*                                                             */
*     /* RHAFH: CHECK FIXED HEADS                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0165
*RHAFH:                                                         01S0165
*     DO;                           /* SUBCASE READ HA ON FIXED HDS
*                                      1-59 --RHAFHS SET UP CCW CHAIN*/
RHAFH    DS    0H                                               01S0166
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0166
         BNE   @RF00166                                         01S0166
*         IF HH=HI3344HD-1 THEN     /* LAST EVEN TRK ON CYL          */
         CLC   HH(2,AP1REG),@CH00431                            01S0167
         BNE   @RF00167                                         01S0167
*           DO;                                                 01S0168
*             CC=CC+1;              /* GO TO NXT CYL                 */
         LA    @10,1                                            01S0169
         LH    @09,CC(,AP1REG)                                  01S0169
         N     @09,@CF00595                                     01S0169
         ALR   @10,@09                                          01S0169
         STH   @10,CC(,AP1REG)                                  01S0169
*             HH=0;                 /* HEAD 0                        */
         SLR   @10,@10                                          01S0170
         STH   @10,HH(,AP1REG)                                  01S0170
*           END;                                                01S0171
*         ELSE                      /* NOT LAST TRACK                */
*           HH=HH+2;                /* GO TO NEXT PHYS TRACK         */
         B     @RC00167                                         01S0172
@RF00167 LA    @10,2                                            01S0172
         LH    @09,HH(,AP1REG)                                  01S0172
         N     @09,@CF00595                                     01S0172
         ALR   @10,@09                                          01S0172
         STH   @10,HH(,AP1REG)                                  01S0172
*       ELSE                                                    01S0173
*         ;                         /* NOT 3344                      */
@RF00166 DS    0H                                               01S0174
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
@RC00166 CLI   AP1DEVTP(AP1REG),4                               01S0174
         BNE   @RF00174                                         01S0174
*         IF HH=HI3350HD THEN       /* LAST TRK ON CYL               */
         CLC   HH(2,AP1REG),@CB00233                            01S0175
         BNE   @RF00175                                         01S0175
*           DO;                                                 01S0176
*             CC=CC+1;              /* INCR TO NEXT CYL              */
         LA    @10,1                                            01S0177
         LH    @09,CC(,AP1REG)                                  01S0177
         N     @09,@CF00595                                     01S0177
         ALR   @10,@09                                          01S0177
         STH   @10,CC(,AP1REG)                                  01S0177
*             HH=0;                 /* HEAD 0                        */
         SLR   @10,@10                                          01S0178
         STH   @10,HH(,AP1REG)                                  01S0178
*           END;                                                01S0179
*         ELSE                      /* NOT LAST TRK ON CYL           */
*           HH=HH+1;                /* GO TO NEXT TRK                */
         B     @RC00175                                         01S0180
@RF00175 LA    @10,1                                            01S0180
         LH    @09,HH(,AP1REG)                                  01S0180
         N     @09,@CF00595                                     01S0180
         ALR   @10,@09                                          01S0180
         STH   @10,HH(,AP1REG)                                  01S0180
*       ELSE                                                    01S0181
*         ;                         /* NOT 3350                      */
@RF00174 DS    0H                                               01S0182
*       IF AP1DEVTP<=AP13331 THEN   /* 3330                          */
@RC00174 CLI   AP1DEVTP(AP1REG),2                               01S0182
         BH    @RF00182                                         01S0182
*         IF HH=HI3330HD THEN       /* LAST TRK ON CYL               */
         CLC   HH(2,AP1REG),@CB00215                            01S0183
         BNE   @RF00183                                         01S0183
*           DO;                                                 01S0184
*             CC=CC+1;              /* INCR TO NEXT CYL              */
         LA    @10,1                                            01S0185
         LH    @09,CC(,AP1REG)                                  01S0185
         N     @09,@CF00595                                     01S0185
         ALR   @10,@09                                          01S0185
         STH   @10,CC(,AP1REG)                                  01S0185
*             HH=0;                 /* HEAD 0                        */
         SLR   @10,@10                                          01S0186
         STH   @10,HH(,AP1REG)                                  01S0186
*           END;                                                01S0187
*         ELSE                      /* NOT LAST TRK ON CYL           */
*           HH=HH+1;                /* TO NEXT HEAD                  */
         B     @RC00183                                         01S0188
@RF00183 LA    @10,1                                            01S0188
         LH    @09,HH(,AP1REG)                                  01S0188
         N     @09,@CF00595                                     01S0188
         ALR   @10,@09                                          01S0188
         STH   @10,HH(,AP1REG)                                  01S0188
*       ELSE                                                    01S0189
*         ;                         /* NOT 3330                      */
@RF00182 DS    0H                                               01S0190
*       AP1ETABA=AP1ETABA+1;        /* POINT TO NEXT ERR TAB ENTRY   */
@RC00182 LA    @10,1                                            01S0190
         AL    @10,AP1ETABA(,AP1REG)                            01S0190
         ST    @10,AP1ETABA(,AP1REG)                            01S0190
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0191
*     END RHAFH;                    /* END OF SUBCASE                */
*                                                               01S0192
*     /***************************************************************/
*     /*                                                             */
*     /* RPS: RPS TEST                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0193
*RPS:                                                           01S0193
*     DO;                           /* SUBCASE CHKS RESPONSE TO RPS
*                                      CMDS                          */
RPS      DS    0H                                               01S0194
*/*        CCW CHAIN:                                           01S0194
*                 READ SECTOR,BUFF,CC,1  READ RANDOM SECTOR     01S0194
*                 NO OP,0,CC,1           DISORIENT              01S0194
*                 SET SECTOR,BUFF,CC,1   TO SECTOR READ         01S0194
*                 NO OP,0,0,1            BRING IN CE-DE              */
*                                                               01S0194
*       CCHH=0;                     /* CYL 0, HD 0                   */
         SLR   @10,@10                                          01S0194
         ST    @10,CCHH(,AP1REG)                                01S0194
*       CCW(1)=RSCCCCW;             /* RS,0,CC,1                     */
         L     @10,AP1CCWA(,AP1REG)                             01S0195
         MVC   CCW(8,@10),RSCCCCW                               01S0195
*       CCWADDRB(1)=AP1BUFAB;       /* INTO BUFFER                   */
         MVC   CCWADDRB(3,@10),AP1BUFAB(AP1REG)                 01S0196
*       CCW(2)=NOPCCCCW;            /* NOP,0,CC,1                    */
         MVC   CCW+8(8,@10),NOPCCCCW                            01S0197
*       CCW(3)=SSCCCCW;             /* SS,0,CC,1                     */
         MVC   CCW+16(8,@10),SSCCCCW                            01S0198
*       CCWADDRB(3)=AP1BUFAB;       /* FROM BUFFER                   */
         MVC   CCWADDRB+16(3,@10),AP1BUFAB(AP1REG)              01S0199
*       CCW(4)=NOPCCW;              /* NOP,0,0,1                     */
         MVC   CCW+24(8,@10),NOPCCW                             01S0200
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0201
*     END RPS;                      /* END OF SUBCASE                */
*                                                               01S0202
*     /***************************************************************/
*     /*                                                             */
*     /* SK192: 192 CYLINDER SEEKS                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0203
*SK192:                                                         01S0203
*     DO;                           /* SUBCASE 192 CYL SEEKS--SKIPPED
*                                      FOR 3344                      */
SK192    DS    0H                                               01S0204
*/*       CCW CHAIN:                                            01S0204
*                ***********                    IOS SEEK TO CYL 0
*                SEEK,BUFF,CC,6                 TO PHYSICAL CYL 192
*                SEEK,AP1SEEK,CC,6              TO CYL 0        01S0204
*                SET SECT,BUFF,CC,1             SECTOR 0        01S0204
*                     REPEATED TO MAKE 99 CCWS                  01S0204
*                NOP,0,0,1            TO GET DEVICE END              */
*                                                               01S0204
*       CCHH=0;                     /* CYL 0 HD 0                    */
         SLR   @10,@10                                          01S0204
         ST    @10,CCHH(,AP1REG)                                01S0204
*       AP1FM=READFM;               /* READ ONLY--ALL SEEKS          */
         MVC   AP1FM(1,AP1REG),READFM                           01S0205
*       AP1BUFAD->SEEK=ZERO7;       /* BB--HHR                       */
         L     @10,AP1BUFAD(,AP1REG)                            01S0206
         MVC   SEEK(7,@10),ZERO7                                01S0206
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0207
         BNE   @RF00207                                         01S0207
*         AP1BUFAD->SEEKCC=REAL192; /* CYL 192                       */
         MVC   SEEKCC(2,@10),@CB00248                           01S0208
*       ELSE                        /* 3330                          */
*         AP1BUFAD->SEEKCC=EMU192;  /* PHYS CYL 192                  */
         B     @RC00207                                         01S0209
@RF00207 L     @10,AP1BUFAD(,AP1REG)                            01S0209
         MVC   SEEKCC(2,@10),@CB00250                           01S0209
*       CCWPTR=AP1CCWA;             /* POINT TO FIRST SLOT           */
@RC00207 L     CCWPTR,AP1CCWA(,AP1REG)                          01S0210
*       DO WHILE CCWPTR<AP1CCWA+(LENGTH(CCW)*99);/* BUILD 99 CCWS    */
         B     @DE00211                                         01S0211
@DL00211 DS    0H                                               01S0212
*         CCWPTR->CCW(1)=SEEKCCW;   /* FULL SEEK,0,CC,6              */
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0212
*         CCWPTR->CCWADDRB(1)=AP1BUFAB;/* PHYS CYL 192               */
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAB(AP1REG)              01S0213
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         LA    @10,8                                            01S0214
         ALR   CCWPTR,@10                                       01S0214
*         CCWPTR->CCW(1)=SEEKCCW;   /* FULL SEEK,0,CC,6              */
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0215
*         CCWPTR->CCWADDRB(1)=ADDR(AP1SEEK);/* CYL 0                 */
         LA    @09,AP1SEEK(,AP1REG)                             01S0216
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0216
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0217
*         CCWPTR->CCW(1)=SSCCCCW;   /* SS,0,CC,1                     */
         MVC   CCW(8,CCWPTR),SSCCCCW                            01S0218
*         CCWPTR->CCWADDRB(1)=AP1BUFAB;/* SECTOR ZERO                */
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAB(AP1REG)              01S0219
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0220
*       END;                        /* OF DO WHILE                   */
@DE00211 LA    @10,792                                          01S0221
         AL    @10,AP1CCWA(,AP1REG)                             01S0221
         CR    CCWPTR,@10                                       01S0221
         BL    @DL00211                                         01S0221
*       CCWPTR=CCWPTR-LENGTH(CCW);  /* LAST CCW                      */
         SL    CCWPTR,@CF00047                                  01S0222
*       CCWPTR->CCW(1)=NOPCCW;      /* NOP,0,0,1                     */
         MVC   CCW(8,CCWPTR),NOPCCW                             01S0223
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0224
*     END SK192;                    /* END OF SUBCASE                */
*                                                               01S0225
*     /***************************************************************/
*     /*                                                             */
*     /* SKINCR: INCREMENTAL SEEKS                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0226
*SKINCR:                                                        01S0226
*     DO;                           /* SUBCASE INCREMENTAL SEEKS     */
SKINCR   DS    0H                                               01S0227
*/*        CCW CHAIN:                                           01S0227
*                ************                 IOS SEEK TO CYL 0 01S0227
*                SEEK,BUFF,CC,6               SEEK CYL 11       01S0227
*                READ HA,0,SKIP-CC,5          VERIFY SEEK       01S0227
*                SEEK,BUFF+8,CC,6             SEEK NEXT PHYS CYL
*                READ HA,0,SKIP-CC,5          VERIFY SEEK       01S0227
*                      REPEAT ABOVE INCREMENTING BY 1 PHYS CYL FOR
*                         100 CCWS--LAST HAS CC OFF                  */
*                                                               01S0227
*       CCHH=0;                     /* START CYL 0 HD 0              */
         SLR   @10,@10                                          01S0227
         ST    @10,CCHH(,AP1REG)                                01S0227
*       AP1FM=READFM;               /* READ ONLY--ALL SEEKS          */
         MVC   AP1FM(1,AP1REG),READFM                           01S0228
*       CCWPTR=AP1CCWA;             /* FIRST SLOT                    */
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0229
*       BUFPTR=AP1BUFAD;            /* PUT SEEK ADDRESSES IN BUFFER  */
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0230
*       BUFPTR->SEEK=CYL11;         /* BBCCHHR FOR CYL 11            */
         MVC   SEEK(7,BUFPTR),@CB00253                          01S0231
*       AP1PTRN2=OFF;               /* USED AS FLAG FOR DETERMINING
*                                      HOW MUCH TO INCREMENT 3330
*                                      SEEK                          */
         NI    AP1PTRN2(AP1REG),B'01111111'                     01S0232
*       DO WHILE CCWPTR<AP1CCWA+(LENGTH(CCW)*100);/* BUILD 100 CCWS  */
         B     @DE00233                                         01S0233
@DL00233 DS    0H                                               01S0234
*         CCWPTR->CCW(1)=SEEKCCW;   /* FULL SEEK,0,CC,6              */
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0234
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* SEEK ADDRESS--SET UP LAST
*                                      PASS                          */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0235
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         LA    @10,8                                            01S0236
         ALR   CCWPTR,@10                                       01S0236
*         CCWPTR->CCW(1)=RHACSCCW;  /* RHA,0,SKIP-CC,4               */
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0237
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
*                                                               01S0238
         ALR   CCWPTR,@10                                       01S0238
*         /***********************************************************/
*         /*                                                         */
*         /* SET UP SEEK ADDRESS FOR NEXT SEEK                       */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0239
*         EVAL(BUFPTR+LENGTH(SEEK))->SEEK=ZERO7;/* BB--HHR           */
         LA    @10,7                                            01S0239
         LR    @09,BUFPTR                                       01S0239
         ALR   @09,@10                                          01S0239
         MVC   SEEK(7,@09),ZERO7                                01S0239
*         EVAL(BUFPTR+LENGTH(SEEK))->SEEKCC=BUFPTR->SEEKCC+1;/* INCR
*                                      CYL BY ONE                    */
         LR    @09,BUFPTR                                       01S0240
         ALR   @09,@10                                          01S0240
         LA    @15,1                                            01S0240
         SLR   @14,@14                                          01S0240
         ICM   @14,3,SEEKCC(BUFPTR)                             01S0240
         ALR   @15,@14                                          01S0240
         STCM  @15,3,SEEKCC(@09)                                01S0240
*         BUFPTR=BUFPTR+LENGTH(SEEK);/* POINT TO NEW SLOT            */
         ALR   BUFPTR,@10                                       01S0241
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0242
         BNE   @RF00242                                         01S0242
*           BUFPTR->SEEKCC=BUFPTR->SEEKCC+4;/* INCR TOTAL OF 5  01S0243
*                                      LOGICAL CYL PER PHYSICAL 01S0243
*                                      CYLINDER                      */
         LA    @10,4                                            01S0243
         SLR   @09,@09                                          01S0243
         ICM   @09,3,SEEKCC(BUFPTR)                             01S0243
         ALR   @10,@09                                          01S0243
         STCM  @10,3,SEEKCC(BUFPTR)                             01S0243
*         ELSE                      /* NOT 3344                      */
*           IF AP1DEVTP<=AP13331 THEN/* 3330                         */
         B     @RC00242                                         01S0244
@RF00242 CLI   AP1DEVTP(AP1REG),2                               01S0244
         BH    @RF00244                                         01S0244
*             IF AP1PTRN2=OFF THEN  /* INCR BY ONLY ONE CYL FOR NEXT
*                                      PHYSICAL CYLINDER             */
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0245
         BNZ   @RF00245                                         01S0245
*               AP1PTRN2=ON;        /* BY 2 NEXT TIME                */
         OI    AP1PTRN2(AP1REG),B'10000000'                     01S0246
*             ELSE                  /* INCR BY 2 CYL FOR NEXT PHYS   */
*               DO;                                             01S0247
         B     @RC00245                                         01S0247
@RF00245 DS    0H                                               01S0248
*                 BUFPTR->SEEKCC=BUFPTR->SEEKCC+1;/* INCR BY TOTAL OF
*                                      2                             */
         LA    @10,1                                            01S0248
         SLR   @09,@09                                          01S0248
         ICM   @09,3,SEEKCC(BUFPTR)                             01S0248
         ALR   @10,@09                                          01S0248
         STCM  @10,3,SEEKCC(BUFPTR)                             01S0248
*                 AP1PTRN2=OFF;     /* BY 1 NEXT TIME                */
         NI    AP1PTRN2(AP1REG),B'01111111'                     01S0249
*               END;                                            01S0250
*           ELSE                                                01S0251
*             ;                     /* NOT 3330                      */
@RF00244 DS    0H                                               01S0252
*       END;                        /* OF DO WHILE                   */
@RC00244 DS    0H                                               01S0252
@RC00242 DS    0H                                               01S0252
@DE00233 LA    @10,800                                          01S0252
         AL    @10,AP1CCWA(,AP1REG)                             01S0252
         CR    CCWPTR,@10                                       01S0252
         BL    @DL00233                                         01S0252
*       CCWPTR=CCWPTR-LENGTH(CCW);  /* LAST CCW                      */
         SL    CCWPTR,@CF00047                                  01S0253
*       CCWPTR->CCWCC(1)=OFF;       /* BREAK CHAIN                   */
         NI    CCWCC(CCWPTR),B'10111111'                        01S0254
*       AP1PTRN2=OFF;               /* RESET FOR NEXT TEST           */
         NI    AP1PTRN2(AP1REG),B'01111111'                     01S0255
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0256
*     END SKINCR;                   /* END OF SUBCASE                */
*                                                               01S0257
*     /***************************************************************/
*     /*                                                             */
*     /* SKMAX: MAXIMUM SEEKS                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0258
*SKMAX:                                                         01S0258
*     DO;                           /* SUBCASE MAXIMUM SEEKS         */
SKMAX    DS    0H                                               01S0259
*/*      CCW CHAIN:                                             01S0259
*                ************            IOS SEEK TO CYL 0      01S0259
*                SEEK,BUFF,CC,6          SEEK TO HI CYL         01S0259
*                RD HA,0,SKIP-CC,5       VERIFY SEEK            01S0259
*                SEEK,AP1SEEK,CC,6       SEEK TO CYL 0          01S0259
*                RD HA,0,SKIP-CC,5       VERIFY SEEK            01S0259
*                     REPEAT ABOVE 4 CCWS FOR A TOTAL OF 100--  01S0259
*                          TURN CHAIN CMD OFF IN LAST                */
*                                                               01S0259
*       CCHH=0;                     /* CYL 0 HD 0                    */
         SLR   @10,@10                                          01S0259
         ST    @10,CCHH(,AP1REG)                                01S0259
*       AP1FM=READFM;               /* READ ONLY -- ALL SEEKS        */
         MVC   AP1FM(1,AP1REG),READFM                           01S0260
*       AP1BUFAD->SEEK=ZERO7;       /* BBCCHHR                       */
         L     @09,AP1BUFAD(,AP1REG)                            01S0261
         MVC   SEEK(7,@09),ZERO7                                01S0261
*       AP1BUFAD->SEEKCC=AP1LSTCC;  /* CC OF LAST CYL ON VOLUME      */
         MVC   SEEKCC(2,@09),AP1LSTCC(AP1REG)                   01S0262
*       AP1BUFAD->SEEKHH=0;         /* HH = 0                        */
         STCM  @10,3,SEEKHH(@09)                                01S0263
*       CCWPTR=AP1CCWA;             /* FIRST CCW SLOT                */
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0264
*       DO WHILE CCWPTR<AP1CCWA+(LENGTH(CCW)*100);/* 100 CCWS        */
         B     @DE00265                                         01S0265
@DL00265 DS    0H                                               01S0266
*         CCWPTR->CCW(1)=SEEKCCW;   /* SEEK,0,CC,6                   */
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0266
*         CCWPTR->CCWADDRB(1)=AP1BUFAB;/* HI CYL                     */
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAB(AP1REG)              01S0267
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         LA    @10,8                                            01S0268
         ALR   CCWPTR,@10                                       01S0268
*         CCWPTR->CCW(1)=RHACSCCW;  /* RD HA,0,SKIP-CC,5             */
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0269
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0270
*         CCWPTR->CCW(1)=SEEKCCW;   /* SEEK,0,CC,6                   */
         MVC   CCW(8,CCWPTR),SEEKCCW                            01S0271
*         CCWPTR->CCWADDRB(1)=ADDR(AP1SEEK);/* CYL 0                 */
         LA    @09,AP1SEEK(,AP1REG)                             01S0272
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0272
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0273
*         CCWPTR->CCW(1)=RHACSCCW;  /* RD HA,0,SKIP-CC,5             */
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0274
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0275
*       END;                        /* OF DO WHILE                   */
@DE00265 LA    @10,800                                          01S0276
         AL    @10,AP1CCWA(,AP1REG)                             01S0276
         CR    CCWPTR,@10                                       01S0276
         BL    @DL00265                                         01S0276
*       EVAL(CCWPTR-LENGTH(CCW))->CCWCC(1)=OFF;/* TURN OFF CC IN LAST
*                                      CCW                           */
         LR    @10,CCWPTR                                       01S0277
         SL    @10,@CF00047                                     01S0277
         NI    CCWCC(@10),B'10111111'                           01S0277
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0278
*     END SKMAX;                    /* END OF SUBCASE                */
*                                                               01S0279
*     /***************************************************************/
*     /*                                                             */
*     /* SKRANS: RANDOM SEEKS                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0280
*SKRANS:                                                        01S0280
*     DO;                           /* SUBCASE SETUP FOR RANDOM 01S0280
*                                      SEEKS--SETS UP FIRST CYL AND
*                                      SUBCASE SKRAN UPDATES CYL ADDR*/
SKRANS   DS    0H                                               01S0281
*/*         CCW CHAIN:                                          01S0281
*                ***************       SEEK BY IOS              01S0281
*                READ HA,0,SKIP,5      VERIFY SEEK                   */
*                                                               01S0281
*       CCHH=0;                     /* SEEK TO CYL 0 HD 0 FIRST      */
         SLR   @10,@10                                          01S0281
         ST    @10,CCHH(,AP1REG)                                01S0281
*       AP1FM=READFM;               /* READ ONLY -- ALL SEEKS        */
         MVC   AP1FM(1,AP1REG),READFM                           01S0282
*       CCW(1)=RHASKCCW;            /* RHA,0,SKIP,5                  */
         L     @10,AP1CCWA(,AP1REG)                             01S0283
         MVC   CCW(8,@10),RHASKCCW                              01S0283
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE SKRAN         */
         LA    @10,1                                            01S0284
         SLR   @09,@09                                          01S0284
         IC    @09,AP1TSTNO(,AP1REG)                            01S0284
         ALR   @10,@09                                          01S0284
         STC   @10,AP1TSTNO(,AP1REG)                            01S0284
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0285
*     END SKRANS;                   /* END OF SUBCASE                */
*                                                               01S0286
*     /***************************************************************/
*     /*                                                             */
*     /* SKRAN: RANDOM SEEKS                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0287
*SKRAN:                                                         01S0287
*     DO;                           /* SUBCASE RANDOM SEEK      01S0287
*                                      GENERATOR--USES CCW CHAIN SET
*                                      UP BY SKRANS                  */
SKRAN    DS    0H                                               01S0288
*       AP1SKCNT=AP1SKCNT+1;        /* INCREMENT COUNT OF PASSES     */
         LA    @10,1                                            01S0288
         LH    @09,AP1SKCNT(,AP1REG)                            01S0288
         ALR   @09,@10                                          01S0288
         STH   @09,AP1SKCNT(,AP1REG)                            01S0288
*       CC=RANTBL(AP1SKCNT)//AP1LSTCC+1;/* RANDOM NUMBER LESS THAN OR
*                                      EQUAL TO END CYL              */
         ALR   @09,@09                                          01S0289
         LH    @00,RANTBL-2(@09)                                01S0289
         SRDA  @00,32                                           01S0289
         LH    @09,AP1LSTCC(,AP1REG)                            01S0289
         DR    @00,@09                                          01S0289
         ALR   @00,@10                                          01S0289
         STH   @00,CC(,AP1REG)                                  01S0289
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0290
*     END SKRAN;                    /* END OF SUBCASE                */
*                                                               01S0291
*     /***************************************************************/
*     /*                                                             */
*     /* RHAS: VERIFY HOME ADDRESS ON CE CYLINDER                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0292
*RHAS:                                                          01S0292
*     DO;                           /* SUBCASE READ HA ON CE CYL HD
*                                      0--SUBCASE 'CE' WILL INCREMENT
*                                      TO NEXT TRACKS                */
RHAS     DS    0H                                               01S0293
*/*         CCW CHAIN:                                          01S0293
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0293
*                READ HA,BUFFER,0,5         READ FOR COMPARE         */
*/*  SETS CECCHH TO CE CYL TRK 0                                     */
*                                                               01S0293
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0293
         BNE   @RF00293                                         01S0293
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0294
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */
         B     @RC00293                                         01S0295
@RF00293 MVC   CECCHH(4,AP1REG),@CB00209                        01S0295
*       AP1FM=CEREADFM;             /* READ ONLY--CE CYL             */
*                                                               01S0296
@RC00293 MVC   AP1FM(1,AP1REG),CEREADFM                         01S0296
*       /*************************************************************/
*       /*                                                           */
*       /* SETUP FOR IOBSEEK WHICH MUST BE IN USER AREA OF PACK      */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0297
*       HH='0000'X;                 /* HEAD 0                        */
         MVC   HH(2,AP1REG),@CB00571                            01S0297
*       IF AP1FHF=ON THEN           /* FIXED HEAD ON THIS PACK       */
         TM    AP1FHF(AP1REG),B'00010000'                       01S0298
         BNO   @RF00298                                         01S0298
*         CC='0001'X;               /* SEEK WILL INVOLVE NO ARM 01S0299
*                                      MOVEMENT                      */
         MVC   CC(2,AP1REG),@CB00557                            01S0299
*       ELSE                        /* NO FIXED HEADS                */
*         CC=AP1LSTCC;              /* CYL CLOSEST TO CE CYL         */
*                                                               01S0300
         B     @RC00298                                         01S0300
@RF00298 LH    @10,AP1LSTCC(,AP1REG)                            01S0300
         STH   @10,CC(,AP1REG)                                  01S0300
*       /*************************************************************/
*       /*                                                           */
*       /* SETUP CCWS                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0301
*       CCW(1)=SEEKCCW;             /* FULL SEEK, 0, CC, 6           */
@RC00298 L     @10,AP1CCWA(,AP1REG)                             01S0301
         MVC   CCW(8,@10),SEEKCCW                               01S0301
*       CCWADDRB(1)=ADDR(AP1CESK);  /* POINT TO CE SEEK ADDRESS      */
         LA    @09,AP1CESK(,AP1REG)                             01S0302
         STCM  @09,7,CCWADDRB(@10)                              01S0302
*       CCW(2)=RHACCW;              /* RHA,0,0,5                     */
         MVC   CCW+8(8,@10),RHACCW                              01S0303
*       CCWADDRB(2)=AP1BUFAD;       /* READ INTO BUFFER              */
         MVC   CCWADDRB+8(3,@10),AP1BUFAD+1(AP1REG)             01S0304
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO MOVEABLE HD TABLE, HD
*                                      0                             */
         LA    @10,AP1ERRTM(,AP1REG)                            01S0305
         ST    @10,AP1ETABA(,AP1REG)                            01S0305
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE RHA           */
         LA    @10,1                                            01S0306
         SLR   @09,@09                                          01S0306
         IC    @09,AP1TSTNO(,AP1REG)                            01S0306
         ALR   @10,@09                                          01S0306
         STC   @10,AP1TSTNO(,AP1REG)                            01S0306
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0307
*     END RHAS;                     /* END OF SUBCASE                */
*                                                               01S0308
*     /***************************************************************/
*     /*                                                             */
*     /* CE: UPDATE SEEK TO NEXT HEAD ON CE CYLINDER                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0309
*CE:                                                            01S0309
*     DO;                           /* SUBCASE INCREMENTS TO NEXT
*                                      HEAD ON CE CYL--USES CCW 01S0309
*                                      CHAINS BUILT BY RHAS, WRTS, OR
*                                      RR01S                         */
CE       DS    0H                                               01S0310
*       AP1ETABA=AP1ETABA+1;        /* TO NEXT ENTRY IN HEAD TABLE   */
         LA    @10,1                                            01S0310
         L     @09,AP1ETABA(,AP1REG)                            01S0310
         ALR   @09,@10                                          01S0310
         ST    @09,AP1ETABA(,AP1REG)                            01S0310
*       CEHH=CEHH+1;                /* GO TO NEXT HEAD               */
         SLR   @15,@15                                          01S0311
         ICM   @15,3,CEHH(AP1REG)                               01S0311
         ALR   @15,@10                                          01S0311
         STCM  @15,3,CEHH(AP1REG)                               01S0311
*       IF AP1DEVTP<=AP13331&CEHH=HI3330HD+1 THEN/* 3330 AND AT HEAD
*                                      19                            */
         CLI   AP1DEVTP(AP1REG),2                               01S0312
         BH    @RF00312                                         01S0312
         C     @15,@CF00589                                     01S0312
         BNE   @RF00312                                         01S0312
*         DO;                                                   01S0313
*           CEHH=CEHH+1;            /* SKIP HEAD 19                  */
         ALR   @15,@10                                          01S0314
         STCM  @15,3,CEHH(AP1REG)                               01S0314
*           AP1ETABA=AP1ETABA+1;    /* SKIP TABLE ENTRY FOR HD 19    */
         ALR   @09,@10                                          01S0315
         ST    @09,AP1ETABA(,AP1REG)                            01S0315
*         END;                                                  01S0316
*       ELSE                                                    01S0317
*         ;                         /* NOT 3330 HEAD 19              */
@RF00312 DS    0H                                               01S0318
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0318
         BNE   @RF00318                                         01S0318
*         DO;                                                   01S0319
*           CEHH=CEHH+1;            /* MAKE INCR TWO HEADS--ONE PHS
*                                      HD                            */
         LA    @10,1                                            01S0320
         SLR   @09,@09                                          01S0320
         ICM   @09,3,CEHH(AP1REG)                               01S0320
         ALR   @10,@09                                          01S0320
         STCM  @10,3,CEHH(AP1REG)                               01S0320
*           IF CEHH>HI3344HD THEN   /* OVER HEAD 11                  */
         CLC   CEHH(2,AP1REG),@CB00235                          01S0321
         BNH   @RF00321                                         01S0321
*             IF CECC=HI3344CC THEN /* LAST CE CYL                   */
         CLC   CECC(2,AP1REG),@CB00213                          01S0322
         BNE   @RF00322                                         01S0322
*               DO;                                             01S0323
*                 CECCHH='0AF00001'X;/* GO TO CE CYL 0 HD 1 TO CHECK
*                                      ODD HEADS--THESE PHYSICAL
*                                      HEADS WERE CHECKED BEFORE     */
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0324
*                 AP1ETABA=ADDR(AP1ERRTM);/* POINT TO PHYS HD 0 IN
*                                      MATRIX                        */
         LA    @10,AP1ERRTM(,AP1REG)                            01S0325
         ST    @10,AP1ETABA(,AP1REG)                            01S0325
*               END;                                            01S0326
*             ELSE                  /* LAST TRK BUT NOT LAST CYL     */
*               DO;                                             01S0327
         B     @RC00322                                         01S0327
@RF00322 DS    0H                                               01S0328
*                 CECC=CECC+1;      /* INCR TO NEXT CYL              */
         LA    @10,1                                            01S0328
         SLR   @09,@09                                          01S0328
         ICM   @09,3,CECC(AP1REG)                               01S0328
         ALR   @10,@09                                          01S0328
         STCM  @10,3,CECC(AP1REG)                               01S0328
*                 CEHH=0;           /* FIRST HEAD                    */
         SLR   @10,@10                                          01S0329
         STCM  @10,3,CEHH(AP1REG)                               01S0329
*               END;                                            01S0330
*           ELSE                                                01S0331
*             ;                     /* NOT HEAD 11                   */
@RF00321 DS    0H                                               01S0332
*         END;                                                  01S0332
*       ELSE                                                    01S0333
*         ;                         /* NOT 3344                      */
*                                                               01S0333
@RF00318 DS    0H                                               01S0334
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE CCHH TO BUFFER FOR WRITE                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0334
*       IF CCWCOMCD(2)=SHA THEN     /* WRITE TEST                    */
@RC00318 L     @10,AP1CCWA(,AP1REG)                             01S0334
         CLI   CCWCOMCD+8(@10),57                               01S0334
         BNE   @RF00334                                         01S0334
*         DO;                                                   01S0335
*           AP1BUFAD->CNTCCHH=CECCHH;/* CCHH FOR R0                  */
         L     @10,AP1BUFAD(,AP1REG)                            01S0336
         MVC   CNTCCHH(4,@10),CECCHH(AP1REG)                    01S0336
*           EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTCCHH=CECCHH;/* CCHH FOR
*                                      R1                            */
         AL    @10,@CF00167                                     01S0337
         MVC   CNTCCHH(4,@10),CECCHH(AP1REG)                    01S0337
*         END;                                                  01S0338
*       ELSE                                                    01S0339
*         ;                         /* NOT WRITE TEST                */
@RF00334 DS    0H                                               01S0340
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0340
*     END CE;                       /* END OF SUBCASE                */
*                                                               01S0341
*     /***************************************************************/
*     /*                                                             */
*     /* WRTS: WRITE ON CE CYLINDER                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0342
*WRTS:                                                          01S0342
*     DO;                           /* SUBCASE WRITE R0-R1 ON CE CYL
*                                      HD 0 --SUBCASE CE WILL ALTER
*                                      SEEK TO GO TO TRKS 1-29       */
WRTS     DS    0H                                               01S0343
*/*         CCW CHAIN:                                          01S0343
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0343
*                SRCH HA,AP1CESK+2,CC,4     VALIDATE ON CORRECT TRK
*                TIC,*-8                                        01S0343
*                WRT R0,BUFF,CC,16          WRITE R0            01S0343
*                WCKD,BUFF+16,0,264         WRITE R1                 */
*/*  SETS CECCHH TO CE CYL TRK 0                                     */
*                                                               01S0343
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0343
         BNE   @RF00343                                         01S0343
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0344
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */
         B     @RC00343                                         01S0345
@RF00343 MVC   CECCHH(4,AP1REG),@CB00209                        01S0345
*       AP1FM=CEHAR0FM;             /* ALL WRITES--CE CYL            */
*                                                               01S0346
@RC00343 MVC   AP1FM(1,AP1REG),CEHAR0FM                         01S0346
*       /*************************************************************/
*       /*                                                           */
*       /* AP1SEEK AND A SEEK CCW TO CE CYL SETUP FROM PREVIOUS TEST */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0347
*       CCW(2)=SHACCCCW;            /* SEARCH HA EQ,0,CC,4           */
         L     @10,AP1CCWA(,AP1REG)                             01S0347
         MVC   CCW+8(8,@10),SHACCCCW                            01S0347
*       CCWADDRB(2)=ADDR(CECCHH);   /* ADDRESS OF TRACK              */
         LA    @09,CECCHH(,AP1REG)                              01S0348
         STCM  @09,7,CCWADDRB+8(@10)                            01S0348
*       CCW(3)=TICCCW;              /* TIC,0,0,0                     */
         MVC   CCW+16(8,@10),TICCCW                             01S0349
*       CCWADDRB(3)=AP1CCWAB+LENGTH(CCW);/* TIC TO SEARCH            */
         LA    @09,8                                            01S0350
         L     @15,AP1CCWAB-1(,AP1REG)                          01S0350
         LA    @15,0(,@15)                                      01S0350
         ALR   @15,@09                                          01S0350
         STCM  @15,7,CCWADDRB+16(@10)                           01S0350
*       CCW(4)=WR0CCCCW;            /* WRT R0,0,CC,16                */
         MVC   CCW+24(8,@10),WR0CCCCW                           01S0351
*       CCWADDRB(4)=AP1BUFAB;       /* WRITE FROM BUFFER             */
         L     @15,AP1BUFAB-1(,AP1REG)                          01S0352
         LA    @15,0(,@15)                                      01S0352
         STCM  @15,7,CCWADDRB+24(@10)                           01S0352
*       CCW(5)=WCDCCW;              /* WCKD,0,0,264                  */
         MVC   CCW+32(8,@10),WCDCCW                             01S0353
*       CCWADDRB(5)=AP1BUFAB+2*LENGTH(CNT);/* WRITE FROM BUFFER      */
*                                                               01S0354
         LA    @14,16                                           01S0354
         ALR   @15,@14                                          01S0354
         STCM  @15,7,CCWADDRB+32(@10)                           01S0354
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD COUNT AND DATA FOR R0                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0355
*       AP1BUFAD->CNTCCHHR=CECCHHR; /* CCHHR                         */
         L     @10,AP1BUFAD(,AP1REG)                            01S0355
         MVC   CNTCCHHR(5,@10),CECCHHR(AP1REG)                  01S0355
*       AP1BUFAD->CNTKDD=DL8;       /* KDD                           */
         MVC   CNTKDD(3,@10),@CB00217                           01S0356
*       EVAL(AP1BUFAD+LENGTH(CNT))->BYTE8=R0DATA;/* DATA FOR R0      */
*                                                               01S0357
         ALR   @09,@10                                          01S0357
         MVC   BYTE8(8,@09),R0DATA                              01S0357
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD COUNT AND DATA FOR R1                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0358
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTCCHH=CECCHH;/* CCHH         */
         LR    @09,@10                                          01S0358
         ALR   @09,@14                                          01S0358
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0358
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTRKDD=R1DL256;/* RKDD        */
         ALR   @14,@10                                          01S0359
         MVC   CNTRKDD(4,@14),@CB00227                          01S0359
*       IF AP1PTRN2=OFF THEN        /* WRITE PATTERN ONE             */
         TM    AP1PTRN2(AP1REG),B'10000000'                     01S0360
         BNZ   @RF00360                                         01S0360
*         EVAL(AP1BUFAD+3*LENGTH(CNT))->BYTE256=R1DATA1;/* DATA1 FOR
*                                      R1                            */
         AL    @10,@CF00064                                     01S0361
         MVC   BYTE256(256,@10),R1DATA1                         01S0361
*       ELSE                        /* WRITE PATTERN TWO             */
*         EVAL(AP1BUFAD+3*LENGTH(CNT))->BYTE256=R1DATA2;/* DATA2 FOR
*                                      R1                            */
         B     @RC00360                                         01S0362
@RF00360 LA    @10,24                                           01S0362
         AL    @10,AP1BUFAD(,AP1REG)                            01S0362
         MVC   BYTE256(256,@10),R1DATA2                         01S0362
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD0 OF MOVEABLE HD
*                                      TABLE                         */
@RC00360 LA    @10,AP1ERRTM(,AP1REG)                            01S0363
         ST    @10,AP1ETABA(,AP1REG)                            01S0363
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE WRT           */
         LA    @10,1                                            01S0364
         SLR   @09,@09                                          01S0364
         IC    @09,AP1TSTNO(,AP1REG)                            01S0364
         ALR   @10,@09                                          01S0364
         STC   @10,AP1TSTNO(,AP1REG)                            01S0364
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0365
*     END WRTS;                     /* END OF SUBCASE                */
*                                                               01S0366
*     /***************************************************************/
*     /*                                                             */
*     /* RR01S: READ CE CYLINDER                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0367
*RR01S:                                                         01S0367
*     DO;                           /* SUBCASE READ R0 AND R1 ON CE
*                                      CYL HD 0 --SUBCASE CE ALTERS
*                                      SEEK FOR HDS 1-29             */
RR01S    DS    0H                                               01S0368
*/*          CCW CHAIN:                                         01S0368
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0368
*                READ HA,0,CC-SKIP,4        VALIDATE SEEK       01S0368
*                READ R0,0,CC-SKIP,16                           01S0368
*                RD CKD,0,CC-SKIP,264                           01S0368
*                        REPEAT ABOVE READS 13 TIMES            01S0368
*                READ HA,0,CC-SKIP,4                            01S0368
*                READ R0,BUFF,CC,16         READ FOR COUNT COMPARE
*                RD CKD,BUFF+8,0,264        READ FOR COUNT AND  01S0368
*                                           FIRST 8 BYTES OF DATA
*                                           TO COMPARE               */
*/*  SETS CECCHH TO CE CYL TRK 0                                     */
*                                                               01S0368
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0368
         BNE   @RF00368                                         01S0368
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0369
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */
         B     @RC00368                                         01S0370
@RF00368 MVC   CECCHH(4,AP1REG),@CB00209                        01S0370
*       AP1FM=CEREADFM;             /* READ ONLY--CE CYL             */
*                                                               01S0371
@RC00368 MVC   AP1FM(1,AP1REG),CEREADFM                         01S0371
*       /*************************************************************/
*       /*                                                           */
*       /* USE AP1SEEK AND SEEK CCW SETUP BY RHAS SUBCASE            */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0372
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* POINT TO 1ST SLOT AFTER SEEK  */
         LA    CCWPTR,8                                         01S0372
         AL    CCWPTR,AP1CCWA(,AP1REG)                          01S0372
*       DO COUNTER=1 TO 15;         /* BLD 15 CHAINS                 */
         LA    COUNTER,1                                        01S0373
@DL00373 DS    0H                                               01S0374
*         CCWPTR->CCW(1)=RHACSCCW;  /* RHA,0,CC-SKIP,4               */
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0374
*         CCWPTR=CCWPTR+LENGTH(CCW);/* POINT TO NEXT SLOT            */
         LA    @10,8                                            01S0375
         ALR   CCWPTR,@10                                       01S0375
*         CCWPTR->CCW(1)=RR0CSCCW;  /* RR0,0,CC-SKIP,16              */
         MVC   CCW(8,CCWPTR),RR0CSCCW                           01S0376
*         CCWPTR=CCWPTR+LENGTH(CCW);/* POINT TO NEXT SLOT            */
         ALR   CCWPTR,@10                                       01S0377
*         CCWPTR->CCW(1)=RCDCSCCW;  /* RCKD,0,CC-SKIP,264            */
         MVC   CCW(8,CCWPTR),RCDCSCCW                           01S0378
*         CCWPTR=CCWPTR+LENGTH(CCW);/* POINT TO NEXT SLOT            */
         ALR   CCWPTR,@10                                       01S0379
*       END;                        /* OF DO WHILE                   */
         AL    COUNTER,@CF00043                                 01S0380
         C     COUNTER,@CF00049                                 01S0380
         BNH   @DL00373                                         01S0380
*       CCWPTR=CCWPTR-2*LENGTH(CCW);/* POINT TO LAST RR0             */
         SL    CCWPTR,@CF00167                                  01S0381
*       CCWPTR->CCWSKIP(1)=OFF;     /* TURN OFF SKIP                 */
         NI    CCWSKIP(CCWPTR),B'11101111'                      01S0382
*       CCWPTR->CCWADDRB(1)=AP1BUFAB;/* READ R0 INTO BUFFER + 0      */
         L     @10,AP1BUFAB-1(,AP1REG)                          01S0383
         LA    @10,0(,@10)                                      01S0383
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0383
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* POINT TO READ CKD             */
         LA    @09,8                                            01S0384
         ALR   CCWPTR,@09                                       01S0384
*       CCWPTR->CCWSKIP(1)=OFF;     /* TURN OFF SKIP                 */
*       CCWPTR->CCWCC(1)=OFF;       /* AND CHAIN CMD                 */
         NI    CCWSKIP(CCWPTR),B'10101111'                      01S0386
*       CCWPTR->CCWADDRB(1)=AP1BUFAB+LENGTH(CNT);/* READ R1 INTO
*                                      BUFFER + 8                    */
         ALR   @10,@09                                          01S0387
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0387
*       AP1BUFAD->BYTE24=AP1BUFAD->BYTE24&&AP1BUFAD->BYTE24;/* CLEAR
*                                      BUFFER                        */
         L     @10,AP1BUFAD(,AP1REG)                            01S0388
         XC    BYTE24(24,@10),BYTE24(@10)                       01S0388
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD 0 OF MOVEABLE HEAD
*                                      TABLE                         */
         LA    @10,AP1ERRTM(,AP1REG)                            01S0389
         ST    @10,AP1ETABA(,AP1REG)                            01S0389
*       AP1TSTNO=AP1TSTNO+1;        /* USE CHK SUBCASE RR01          */
         LA    @10,1                                            01S0390
         SLR   @09,@09                                          01S0390
         IC    @09,AP1TSTNO(,AP1REG)                            01S0390
         ALR   @10,@09                                          01S0390
         STC   @10,AP1TSTNO(,AP1REG)                            01S0390
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0391
*     END RR01S;                    /* END OF SUBCASE                */
*                                                               01S0392
*     /***************************************************************/
*     /*                                                             */
*     /* RDMT: READ MULTI-TRACK                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0393
*RDMT:                                                          01S0393
*     DO;                           /* SUBCASE MULTI-TRACK READ      */
RDMT     DS    0H                                               01S0394
*/*         CCW CHAIN:                                          01S0394
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0394
*                READ R0,BUFF,CC,16         READ R0 FOR COMPARE CNT
*                MT-RD CNT,BUFF+8,CC,8      READ R1 COUNT FOR COMPARE
*                      REPEAT 11 TIMES, INCREMENTING THRU BUFFER
*                NOP,0,CC,1                 DISORIENT           01S0394
*                RD CNT,BUFF+104,0,8        READ R1 COUNT TRK 11 AGAIN
*                                                                    */
*/*  SETS CECCHH TO CE CYL TRK 0                                     */
*                                                               01S0394
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0394
         BNE   @RF00394                                         01S0394
*         CECCHH=I3344CE0;          /* CYL 2800 HD 0                 */
         MVC   CECCHH(4,AP1REG),@CB00205                        01S0395
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE0;          /* CYL 1024 HD 0                 */
         B     @RC00394                                         01S0396
@RF00394 MVC   CECCHH(4,AP1REG),@CB00209                        01S0396
*       AP1FM=CEREADFM;             /* READ ONLY--CE CYL             */
*                                                               01S0397
@RC00394 MVC   AP1FM(1,AP1REG),CEREADFM                         01S0397
*       /*************************************************************/
*       /*                                                           */
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0398
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0398
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* POINT TO 1ST SLOT AFTER SEEK  */
         LA    @10,8                                            01S0399
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0399
         ALR   CCWPTR,@10                                       01S0399
*       CCWPTR->CCW(1)=RR0CCCCW;    /* RR0,0,CC,16                   */
         MVC   CCW(8,CCWPTR),RR0CCCCW                           01S0400
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* READ INTO BUFFER              */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0401
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT CCW SLOT                 */
         ALR   CCWPTR,@10                                       01S0402
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* NEXT SPACE IN BUFFER          */
         ALR   BUFPTR,@10                                       01S0403
*       DO COUNTER=1 TO 12;         /* BUILD 12 CCWS                 */
         LA    COUNTER,1                                        01S0404
@DL00404 DS    0H                                               01S0405
*         CCWPTR->CCW(1)=MRCCCCCW;  /* MT-RCNT,0,CC,8                */
         MVC   CCW(8,CCWPTR),MRCCCCCW                           01S0405
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* READ INTO BUFFER             */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0406
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT CCW SLOT                 */
         LA    @10,8                                            01S0407
         ALR   CCWPTR,@10                                       01S0407
*         BUFPTR=BUFPTR+LENGTH(CNT);/* NEXT SPACE IN BUFFER          */
         ALR   BUFPTR,@10                                       01S0408
*       END;                        /* OF DO WHILE                   */
         AL    COUNTER,@CF00043                                 01S0409
         C     COUNTER,@CF00033                                 01S0409
         BNH   @DL00404                                         01S0409
*       CCWPTR->CCW(1)=NOPCCCCW;    /* NOP,0,CC,1                    */
         MVC   CCW(8,CCWPTR),NOPCCCCW                           01S0410
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT CCW SLOT                 */
         AL    CCWPTR,@CF00047                                  01S0411
*       CCWPTR->CCW(1)=RCCCW;       /* RDCNT,0,0,8                   */
         MVC   CCW(8,CCWPTR),RCCCW                              01S0412
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* READ INTO BUFFER              */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0413
*       AP1BUFAD->BYTE112=AP1BUFAD->BYTE112&&AP1BUFAD->BYTE112;/*
*                                      CLEAR BUFFER                  */
         L     @10,AP1BUFAD(,AP1REG)                            01S0414
         XC    BYTE112(112,@10),BYTE112(@10)                    01S0414
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0415
*     END RDMT;                     /* END OF SUBCASE                */
*                                                               01S0416
*     /***************************************************************/
*     /*                                                             */
*     /* FTWRT: FULL TRACK WRITE                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0417
*FTWRT:                                                         01S0417
*     DO;                           /* SUBCASE FULL TRACK WRITE      */
FTWRT    DS    0H                                               01S0418
*/*       CCW CHAIN:                                            01S0418
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0418
*                SEARCH ID,AP1CESK+2,CC,5   SID R0              01S0418
*                TIC,*-8                                        01S0418
*                WRT CKD,BUFF,CD,8          WRITE R1 COUNT AND  01S0418
*                WRT CKD,0,CC,XXXX          FULL TRK OF DATA    01S0418
*                RD CKD,0,SKIP,XXXX+8       READ IT BACK             */
*/*  SETS CECCHH TO CE CYL TRK 1                                     */
*                                                               01S0418
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0418
         BNE   @RF00418                                         01S0418
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0419
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */
         B     @RC00418                                         01S0420
@RF00418 MVC   CECCHH(4,AP1REG),@CB00211                        01S0420
*       CER=0;                      /* RECORD 0                      */
@RC00418 MVI   CER(AP1REG),X'00'                                01S0421
*       AP1FM=CEFM;                 /* ALLOW WRITE--CE CYL           */
*                                                               01S0422
         MVC   AP1FM(1,AP1REG),CEFM                             01S0422
*       /*************************************************************/
*       /*                                                           */
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0423
*       CCW(2)=SIDCCCCW;            /* SEARCH ID,0,CC,5              */
         L     @10,AP1CCWA(,AP1REG)                             01S0423
         MVC   CCW+8(8,@10),SIDCCCCW                            01S0423
*       CCWADDRB(2)=ADDR(CECCHH);   /* ADDR OF R0                    */
         LA    @09,CECCHH(,AP1REG)                              01S0424
         STCM  @09,7,CCWADDRB+8(@10)                            01S0424
*       CCW(3)=TICCCW;              /* TIC,0,0,0                     */
         MVC   CCW+16(8,@10),TICCCW                             01S0425
*       CCWADDRB(3)=AP1CCWAB+LENGTH(CCW);/* TIC TO SRCH HA           */
         LA    @09,8                                            01S0426
         L     @15,AP1CCWAB-1(,AP1REG)                          01S0426
         LA    @15,0(,@15)                                      01S0426
         ALR   @09,@15                                          01S0426
         STCM  @09,7,CCWADDRB+16(@10)                           01S0426
*       CCW(4)=WCDCDCCW;            /* WCKD,0,CD,8                   */
         MVC   CCW+24(8,@10),WCDCDCCW                           01S0427
*       CCWADDRB(4)=AP1BUFAB;       /* R1 COUNT IN BUFFER            */
         MVC   CCWADDRB+24(3,@10),AP1BUFAB(AP1REG)              01S0428
*       AP1BUFAD->CNTCCHH=CECCHH;   /* CCHH                          */
         L     @09,AP1BUFAD(,AP1REG)                            01S0429
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0429
*       AP1BUFAD->CNTRKDD=R1DL0;    /* RK                            */
         MVC   CNTRKDD(4,@09),@CB00221                          01S0430
*       CCW(5)=WCDCCCCW;            /* WCKD,0,CC,0                   */
         MVC   CCW+32(8,@10),WCDCCCCW                           01S0431
*       CCW(6)=RCDSCCW;             /* RCKD,0,SKIP,264               */
         MVC   CCW+40(8,@10),RCDSCCW                            01S0432
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0433
         BNE   @RF00433                                         01S0433
*         DO;                                                   01S0434
*           AP1BUFAD->CNTDD=FT3350; /* DL                            */
         L     @15,@CF00242                                     01S0435
         STCM  @15,3,CNTDD(@09)                                 01S0435
*           CCWBYTE(5)=FT3350;      /* DL                            */
         STH   @15,CCWBYTE+32(,@10)                             01S0436
*           CCWBYTE(6)=FT3350+LENGTH(CNT);/* DL + 8                  */
         MVC   CCWBYTE+40(2,@10),@CH00591                       01S0437
*         END;                                                  01S0438
*       ELSE                        /* NOT 3350                      */
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */
         B     @RC00433                                         01S0439
@RF00433 CLI   AP1DEVTP(AP1REG),3                               01S0439
         BNE   @RF00439                                         01S0439
*           DO;                                                 01S0440
*             AP1BUFAD->CNTDD=FT3344;/* DL                           */
         L     @10,@CF00244                                     01S0441
         L     @09,AP1BUFAD(,AP1REG)                            01S0441
         STCM  @10,3,CNTDD(@09)                                 01S0441
*             CCWBYTE(5)=FT3344;    /* DL                            */
         L     @09,AP1CCWA(,AP1REG)                             01S0442
         STH   @10,CCWBYTE+32(,@09)                             01S0442
*             CCWBYTE(6)=FT3344+LENGTH(CNT);/* DL + 8                */
         MVC   CCWBYTE+40(2,@09),@CH00592                       01S0443
*           END;                                                01S0444
*         ELSE                      /* 3330                          */
*           DO;                                                 01S0445
         B     @RC00439                                         01S0445
@RF00439 DS    0H                                               01S0446
*             AP1BUFAD->CNTDD=FT3330;/* DL                           */
         L     @10,@CF00246                                     01S0446
         L     @09,AP1BUFAD(,AP1REG)                            01S0446
         STCM  @10,3,CNTDD(@09)                                 01S0446
*             CCWBYTE(5)=FT3330;    /* DL                            */
         L     @09,AP1CCWA(,AP1REG)                             01S0447
         STH   @10,CCWBYTE+32(,@09)                             01S0447
*             CCWBYTE(6)=FT3330+LENGTH(CNT);/* DL + 8                */
         MVC   CCWBYTE+40(2,@09),@CH00593                       01S0448
*           END;                                                01S0449
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0450
*     END FTWRT;                    /* END OF SUBCASE                */
*                                                               01S0451
*     /***************************************************************/
*     /*                                                             */
*     /* AMDET: ADDRESS MARK DETECT                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0452
*AMDET:                                                         01S0452
*     DO;                           /* SUBCASE AM DETECTION TEST     */
AMDET    DS    0H                                               01S0453
*/*       CCW CHAIN:                                            01S0453
*                SEEK,AP1CESK,CC,6            TO CE CYL         01S0453
*                SRCH ID,AP1CESK+2,CC,5       SID R0            01S0453
*                TIC,*-8                                        01S0453
*                WRT CKD,BUFF,CD,8        WRITE R1              01S0453
*                WRT CKD,0,CC,1024                              01S0453
*                WRT CKD,BUFF+8,CD,8      WRITE R2              01S0453
*                WRT CKD,0,CC,1024                              01S0453
*                SID,BUFF,CC,5            SID R1                01S0453
*                TIC,*-8                                        01S0453
*                NOP,0,0,1                DESTROY ORIENTATION   01S0453
*                RD CNT,BUFF+16,0,8       READ CNT R2                */
*/*  SETS CECCHH TO CE CYL TRK 1                                     */
*                                                               01S0453
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0453
         BNE   @RF00453                                         01S0453
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0454
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */
         B     @RC00453                                         01S0455
@RF00453 MVC   CECCHH(4,AP1REG),@CB00211                        01S0455
*       CER=0;                      /* RECORD 0                      */
@RC00453 MVI   CER(AP1REG),X'00'                                01S0456
*       AP1FM=CEFM;                 /* WRITE--CE CYL                 */
*                                                               01S0457
         MVC   AP1FM(1,AP1REG),CEFM                             01S0457
*       /*************************************************************/
*       /*                                                           */
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0458
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0458
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* 1ST CCW AFTER SEEK            */
         LA    @10,8                                            01S0459
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0459
         ALR   CCWPTR,@10                                       01S0459
*       CCWPTR->CCW(1)=SIDCCCCW;    /* SRCH ID,0,CC,5                */
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0460
*       CCWPTR->CCWADDRB(1)=ADDR(CECCHH);/* ADDRESS OF R0            */
         LA    @09,CECCHH(,AP1REG)                              01S0461
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0461
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */
         LR    @09,CCWPTR                                       01S0462
         ALR   @09,@10                                          01S0462
         MVC   CCW(8,@09),TICCCW                                01S0462
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/
         ALR   @10,CCWPTR                                       01S0463
         STCM  CCWPTR,7,CCWADDRB(@10)                           01S0463
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */
         AL    CCWPTR,@CF00167                                  01S0464
*       DO COUNTER=1 TO 2;          /* WRITE TWO RECORDS             */
         LA    COUNTER,1                                        01S0465
@DL00465 DS    0H                                               01S0466
*         CCWPTR->CCW(1)=WCDCDCCW;  /* WCKD,0,CD,8                   */
         MVC   CCW(8,CCWPTR),WCDCDCCW                           01S0466
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* COUNT IN BUFFER              */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0467
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         LA    @10,8                                            01S0468
         ALR   CCWPTR,@10                                       01S0468
*         CCWPTR->CCW(1)=WCDCCCCW;  /* WCKD,0,CC,0                   */
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0469
*         CCWPTR->CCWBYTE(1)=1024;  /* 1 K RECORDS                   */
         MVC   CCWBYTE(2,CCWPTR),@CH00578                       01S0470
*         CCWPTR=CCWPTR+LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0471
*         BUFPTR->CNTCCHH=CECCHH;   /* CCHH                          */
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0472
*         BUFPTR->CNTKDD=DL1024;    /* KDD                           */
         MVC   CNTKDD(3,BUFPTR),@CB00219                        01S0473
*         BUFPTR->CNTR=COUNTER;     /* R                             */
         STC   COUNTER,CNTR(,BUFPTR)                            01S0474
*         BUFPTR=BUFPTR+LENGTH(CNT);/* NEXT SLOT                     */
         ALR   BUFPTR,@10                                       01S0475
*       END;                        /* OF DO                         */
         AL    COUNTER,@CF00043                                 01S0476
         C     COUNTER,@CF00058                                 01S0476
         BNH   @DL00465                                         01S0476
*       CCWPTR->CCW(1)=SIDCCCCW;    /* SID,0,CC,5                    */
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0477
*       CCWPTR->CCWADDRB(1)=AP1BUFAD;/* SEARCH R1                    */
         MVC   CCWADDRB(3,CCWPTR),AP1BUFAD+1(AP1REG)            01S0478
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */
         LA    @10,8                                            01S0479
         LR    @09,CCWPTR                                       01S0479
         ALR   @09,@10                                          01S0479
         MVC   CCW(8,@09),TICCCW                                01S0479
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/
         LR    @09,CCWPTR                                       01S0480
         ALR   @09,@10                                          01S0480
         STCM  CCWPTR,7,CCWADDRB(@09)                           01S0480
*       CCWPTR=CCWPTR+LENGTH(CCW)*2;/* NEXT SLOT                     */
         AL    CCWPTR,@CF00167                                  01S0481
*       CCWPTR->CCW(1)=NOPCCCCW;    /* NOP,0,CC,1                    */
         MVC   CCW(8,CCWPTR),NOPCCCCW                           01S0482
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0483
*       CCWPTR->CCW(1)=RCCCW;       /* RD CNT,0,0,8                  */
         MVC   CCW(8,CCWPTR),RCCCW                              01S0484
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* READ INTO BUFFER              */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0485
*       BUFPTR->BYTE8=BUFPTR->BYTE8&&BUFPTR->BYTE8;/* CLEAR BUFFER   */
         XC    BYTE8(8,BUFPTR),BYTE8(BUFPTR)                    01S0486
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0487
*     END AMDET;                    /* END OF SUBCASE                */
*                                                               01S0488
*     /***************************************************************/
*     /*                                                             */
*     /* WRTPAD: FORMAT WRITE PADDING                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0489
*WRTPAD:                                                        01S0489
*     DO;                           /* SUBCASE WRITE PADDING         */
WRTPAD   DS    0H                                               01S0490
*/*      CCW CHAIN:                                             01S0490
*                SEEK,AP1CESK,CC,6        TO CE CYL             01S0490
*                SRCH ID,AP1CESK+2,CC,5   SID R0                01S0490
*                TIC,*-8                                        01S0490
*                WRT CKD,BUFF,CC,264      WRITE R1              01S0490
*                WRT CKD,BUFF+8,CC,8      WRITE R2              01S0490
*                SRCH ID,AP1CESK+2,CC,5   SID R0                01S0490
*                TIC,*-8                                        01S0490
*                WRT CKD,BUFF,CC,264      WRITE NEW R1          01S0490
*                RHA,0,CC-SKIP,4          RE-POSITION           01S0490
*                RDCNT,0,CC-SKIP,8        READ R1               01S0490
*                RDCNT,BUFF+24,0,8        READ R1 AGAIN              */
*                                                               01S0490
*       RFY                                                     01S0490
*         CCW BASED(CCWPTR);        /* ADDRESSABILITY                */
*/*  SETS CECCHH TO CE CYL TRK 1                                     */
*                                                               01S0491
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0491
         BNE   @RF00491                                         01S0491
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0492
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */
         B     @RC00491                                         01S0493
@RF00491 MVC   CECCHH(4,AP1REG),@CB00211                        01S0493
*       CER=0;                      /* RECORD 0                      */
@RC00491 MVI   CER(AP1REG),X'00'                                01S0494
*       AP1FM=CEFM;                 /* WRITE--CE CYL                 */
*                                                               01S0495
         MVC   AP1FM(1,AP1REG),CEFM                             01S0495
*       /*************************************************************/
*       /*                                                           */
*       /* AP1SEEK AND SEEK CCW TO CE CYL SET UP BY SUBCASE RHAS     */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0496
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0496
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* 1ST CCW AFTER SEEK            */
         LA    @10,8                                            01S0497
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0497
         ALR   CCWPTR,@10                                       01S0497
*       CCW(1)=SIDCCCCW;            /* SRCH ID,0,CC,5                */
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0498
*       CCWADDRB(1)=ADDR(CECCHH);   /* ADDRESS OF R0                 */
         LA    @09,CECCHH(,AP1REG)                              01S0499
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0499
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */
         LR    @15,CCWPTR                                       01S0500
         ALR   @15,@10                                          01S0500
         MVC   CCW(8,@15),TICCCW                                01S0500
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/
         LR    @15,CCWPTR                                       01S0501
         ALR   @15,@10                                          01S0501
         STCM  CCWPTR,7,CCWADDRB(@15)                           01S0501
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */
         LA    @15,16                                           01S0502
         ALR   CCWPTR,@15                                       01S0502
*       CCW(1)=WCDCCCCW;            /* WCKD,0,CC,264                 */
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0503
*       CCWADDRB(1)=BUFPTR;         /* COUNT IN BUFFER               */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0504
*       CNTCCHH=CECCHH;             /* CE CCHH                       */
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0505
*       CNTRKDD=R1DL256;            /* RKDD                          */
         MVC   CNTRKDD(4,BUFPTR),@CB00227                       01S0506
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* NEXT SLOT                     */
         ALR   BUFPTR,@10                                       01S0507
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0508
*       CCW(1)=WCDCCCCW;            /* WCKD,0,CC,0                   */
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0509
*       CCWBYTE(1)=LENGTH(CNT);     /* COUNT ONLY                    */
         STH   @10,CCWBYTE(,CCWPTR)                             01S0510
*       CCWADDRB(1)=BUFPTR;         /* COUNT IN BUFFER               */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0511
*       CNTCCHH=CECCHH;             /* CE CCHH                       */
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0512
*       CNTRKDD=R2DL0;              /* RKDD                          */
         MVC   CNTRKDD(4,BUFPTR),@CB00223                       01S0513
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0514
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* BUFFER + 16                   */
         ALR   BUFPTR,@10                                       01S0515
*       CCW(1)=SIDCCCCW;            /* SRCH ID,0,CC,5                */
         MVC   CCW(8,CCWPTR),SIDCCCCW                           01S0516
*       CCWADDRB(1)=ADDR(CECCHH);   /* ADDRESS OF R0                 */
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0517
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */
         LR    @09,CCWPTR                                       01S0518
         ALR   @09,@10                                          01S0518
         MVC   CCW(8,@09),TICCCW                                01S0518
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/
         LR    @09,CCWPTR                                       01S0519
         ALR   @09,@10                                          01S0519
         STCM  CCWPTR,7,CCWADDRB(@09)                           01S0519
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */
         ALR   CCWPTR,@15                                       01S0520
*       CCW(1)=WCDCCCCW;            /* WCKD,0,CC,264                 */
         MVC   CCW(8,CCWPTR),WCDCCCCW                           01S0521
*       CCWADDRB(1)=BUFPTR-(2*LENGTH(CNT));/* COUNT IN BUFFER        */
         LCR   @15,@15                                          01S0522
         ALR   @15,BUFPTR                                       01S0522
         STCM  @15,7,CCWADDRB(CCWPTR)                           01S0522
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0523
*       CCW(1)=RHACSCCW;            /* RHA,0,SKIP-CC,5               */
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0524
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0525
*       CCW(1)=RCCSCCW;             /* RDCNT,0,SKIP-CC,8             */
         MVC   CCW(8,CCWPTR),RCCSCCW                            01S0526
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0527
*       CCW(1)=RCCCW;               /* RDCNT,0,0,8                   */
         MVC   CCW(8,CCWPTR),RCCCW                              01S0528
*       CCWADDRB(1)=BUFPTR;         /* READ IN TO BUFFER             */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0529
*       BUFPTR->BYTE8=BUFPTR->BYTE8&&BUFPTR->BYTE8;/* CLEAR BUFFER   */
         XC    BYTE8(8,BUFPTR),BYTE8(BUFPTR)                    01S0530
*       RFY                                                     01S0531
*         CCW BASED(AP1CCWA);       /* ADDRESSABILITY                */
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0532
*     END WRTPAD;                   /* END OF SUBCASE                */
*                                                               01S0533
*     /***************************************************************/
*     /*                                                             */
*     /* SD: SKIP DEFECTS                                            */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0534
*SD:                                                            01S0534
*     DO;                           /* SUBCASE SKIP DEFECT TEST      */
SD       DS    0H                                               01S0535
*/*     CCW CHAIN:                                              01S0535
*                SEEK,AP1CESK,CC,6     TO CE CYL                01S0535
*                SRCH HA,AP1CESK+2,CC,4 VERIFY SEEK             01S0535
*                TIC,*-8                                        01S0535
*                WRT HA,BUFF+Y,CC,11-Y WRITE HA WITH SD INFO    01S0535
*                WRT R0,BUFF+11,CC,N   WRITE R0 WITH DUMMY SD AND R1
*                RD HA,0,SKIP-CC,5     READ HA                  01S0535
*                SP CNT,BUFF+11+N,CC,3 SPACE ACROSS R0 CNT      01S0535
*                RD CKD,0,SKIP,264     READ R1                       */
*/*  SETS CECCHH TO CE CYL TRK 1                                     */
*                                                               01S0535
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0535
         BNE   @RF00535                                         01S0535
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0536
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */
         B     @RC00535                                         01S0537
@RF00535 MVC   CECCHH(4,AP1REG),@CB00211                        01S0537
*       CER=0;                      /* RECORD 0                      */
@RC00535 MVI   CER(AP1REG),X'00'                                01S0538
*       AP1FM=CEHAR0FM;             /* ALL WRITES--CE CYL            */
*                                                               01S0539
         MVC   AP1FM(1,AP1REG),CEHAR0FM                         01S0539
*       /*************************************************************/
*       /*                                                           */
*       /* USE AP1SEEK AND SEEK CCW SET UP BY RHAS SUBCASE           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0540
*       BUFPTR=AP1BUFAD;            /* POINT TO BUFFER               */
         L     BUFPTR,AP1BUFAD(,AP1REG)                         01S0540
*       CCWPTR=AP1CCWA+LENGTH(CCW); /* FIRST CCW SLOT AFTER SEEK     */
         LA    @10,8                                            01S0541
         L     CCWPTR,AP1CCWA(,AP1REG)                          01S0541
         ALR   CCWPTR,@10                                       01S0541
*       CCWPTR->CCW(1)=SHACCCCW;    /* SRCH HA,0,CC,4                */
         MVC   CCW(8,CCWPTR),SHACCCCW                           01S0542
*       CCWPTR->CCWADDRB(1)=ADDR(CECCHH);/* TRACK ADDRESS            */
         LA    @09,CECCHH(,AP1REG)                              01S0543
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0543
*       EVAL(CCWPTR+LENGTH(CCW))->CCW(1)=TICCCW;/* TIC,0,0,0         */
         LR    @09,CCWPTR                                       01S0544
         ALR   @09,@10                                          01S0544
         MVC   CCW(8,@09),TICCCW                                01S0544
*       EVAL(CCWPTR+LENGTH(CCW))->CCWADDRB(1)=CCWPTR;/* TIC TO SEARCH*/
         ALR   @10,CCWPTR                                       01S0545
         STCM  CCWPTR,7,CCWADDRB(@10)                           01S0545
*       CCWPTR=CCWPTR+2*LENGTH(CCW);/* NEXT SLOT                     */
         AL    CCWPTR,@CF00167                                  01S0546
*       CCWPTR->CCW(1)=WHACCCCW;    /* WRT HA,0,CC,11                */
         MVC   CCW(8,CCWPTR),WHACCCCW                           01S0547
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0548
         BNE   @RF00548                                         01S0548
*         CCWPTR->CCWADDRB(1)=BUFPTR;/* WRITE FROM BUFFER            */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0549
*       ELSE                        /* NOT 3350                      */
*         IF AP1DEVTP=AP13344 THEN  /* 3344                          */
         B     @RC00548                                         01S0550
@RF00548 CLI   AP1DEVTP(AP1REG),3                               01S0550
         BNE   @RF00550                                         01S0550
*           DO;                                                 01S0551
*             CCWPTR->CCWADDRB(1)=BUFPTR+4;/* SD FOR 3344            */
         LA    @10,4                                            01S0552
         ALR   @10,BUFPTR                                       01S0552
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0552
*             CCWPTR->CCWBYTE(1)=LENGTH(CECCHH)+3;/* SD+FLG+CCHH     */
         MVC   CCWBYTE(2,CCWPTR),@CH00076                       01S0553
*           END;                                                01S0554
*         ELSE                      /* 3330                          */
*           DO;                                                 01S0555
         B     @RC00550                                         01S0555
@RF00550 DS    0H                                               01S0556
*             CCWPTR->CCWADDRB(1)=BUFPTR+LENGTH(SDZERO);/* FLAG      */
         LA    @10,6                                            01S0556
         ALR   @10,BUFPTR                                       01S0556
         STCM  @10,7,CCWADDRB(CCWPTR)                           01S0556
*             CCWPTR->CCWBYTE(1)=LENGTH(CECCHH)+1;/* FLG+CCHH        */
         MVC   CCWBYTE(2,CCWPTR),@CH00083                       01S0557
*           END;                                                01S0558
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
@RC00550 DS    0H                                               01S0559
@RC00548 AL    CCWPTR,@CF00047                                  01S0559
*       BUFPTR->BYTE6=SDZERO;       /* MOVE IN SKIP DEFECT           */
         MVC   BYTE6(6,BUFPTR),SDZERO                           01S0560
*       BUFPTR=BUFPTR+LENGTH(SDZERO);/* TO FLAG                      */
         AL    BUFPTR,@CF00155                                  01S0561
*       BUFPTR->BYTE1='00'X;        /* FLAG OF ZERO                  */
         MVI   BYTE1(BUFPTR),X'00'                              01S0562
*       BUFPTR=BUFPTR+1;            /* TO CCHH                       */
         AL    BUFPTR,@CF00043                                  01S0563
*       BUFPTR->CNTCCHH=CECCHH;     /* CCHH                          */
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0564
*       BUFPTR=BUFPTR+LENGTH(CCHH); /* TO R0                         */
         AL    BUFPTR,@CF00038                                  01S0565
*       CCWPTR->CCW(1)=WR0CCCCW;    /* WRT R0,0,CC,16                */
         MVC   CCW(8,CCWPTR),WR0CCCCW                           01S0566
*       CCWPTR->CCWADDRB(1)=BUFPTR; /* POINT TO COUNT                */
         STCM  BUFPTR,7,CCWADDRB(CCWPTR)                        01S0567
*       BUFPTR->CNTCCHH=CECCHH;     /* CCHH FOR R0                   */
         MVC   CNTCCHH(4,BUFPTR),CECCHH(AP1REG)                 01S0568
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0569
         BNE   @RF00569                                         01S0569
*         BUFPTR->CNTRKDD=R0DL565;  /* RKDD                          */
         MVC   CNTRKDD(4,BUFPTR),R0DL565                        01S0570
*       ELSE                        /* 3350 OR 3330                  */
*         BUFPTR->CNTRKDD=R0DL839;  /* RKDD                          */
         B     @RC00569                                         01S0571
@RF00569 MVC   CNTRKDD(4,BUFPTR),R0DL839                        01S0571
*       CCWPTR->CCWBYTE(1)=BUFPTR->CNTDD+LENGTH(CNT);/* PUT BYTE CNT
*                                      IN WR0                        */
@RC00569 LA    @10,8                                            01S0572
         SLR   @09,@09                                          01S0572
         ICM   @09,3,CNTDD(BUFPTR)                              01S0572
         ALR   @09,@10                                          01S0572
         STH   @09,CCWBYTE(,CCWPTR)                             01S0572
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
*                                                               01S0573
         ALR   CCWPTR,@10                                       01S0573
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE IN R0                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0574
*       RFY                                                     01S0574
*        (GPR00P,                                               01S0574
*         GPR01F,                                               01S0574
*         GPR14P,                                               01S0574
*         GPR15F) RSTD;                                         01S0574
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0575
         BNE   @RF00575                                         01S0575
*         GPR00P=ADDR(SDR03344);    /* FROM ADDR                     */
         LA    GPR00P,SDR03344                                  01S0576
*       ELSE                        /* 3330 OR 3350                  */
*         GPR00P=ADDR(SDR03350);    /* FROM ADDR                     */
         B     @RC00575                                         01S0577
@RF00575 LA    GPR00P,SDR03350                                  01S0577
*       GPR01F=BUFPTR->CNTDD;       /* FROM LENGTH                   */
@RC00575 SLR   @10,@10                                          01S0578
         ICM   @10,3,CNTDD(BUFPTR)                              01S0578
         LR    GPR01F,@10                                       01S0578
*       GPR15F=BUFPTR->CNTDD;       /* TO LENGTH                     */
         LR    GPR15F,@10                                       01S0579
*       BUFPTR=BUFPTR+LENGTH(CNT);  /* SLOT FOR R0 DATA              */
         AL    BUFPTR,@CF00047                                  01S0580
*       GPR14P=BUFPTR;              /* TO ADDR                       */
         LR    GPR14P,BUFPTR                                    01S0581
*       BUFPTR=BUFPTR+GPR15F;       /* NEXT SLOT                     */
         ALR   BUFPTR,GPR15F                                    01S0582
*       MVCL(GPR14P,GPR00P);        /* MOVE IN R0 DATA               */
         MVCL  GPR14P,GPR00P                                    01S0583
*       RFY                                                     01S0584
*        (GPR00P,                                               01S0584
*         GPR01F,                                               01S0584
*         GPR14P,                                               01S0584
*         GPR15F) UNRSTD;                                       01S0584
*       CCWPTR->CCW(1)=RHACSCCW;    /* RHA,0,SKIP-CC,5               */
         MVC   CCW(8,CCWPTR),RHACSCCW                           01S0585
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         LA    @10,8                                            01S0586
         ALR   CCWPTR,@10                                       01S0586
*       CCWPTR->CCW(1)=SPCCCCCW;    /* SP CNT,0,CC,3                 */
         MVC   CCW(8,CCWPTR),SPCCCCCW                           01S0587
*       CCWPTR->CCWADDRB(1)=BUFPTR+LENGTH(CNTR);/* POINT TO BUFFER   */
         LA    @09,1                                            01S0588
         ALR   @09,BUFPTR                                       01S0588
         STCM  @09,7,CCWADDRB(CCWPTR)                           01S0588
*       BUFPTR->BYTE4=R0DL8;        /* RKDD                          */
         MVC   BYTE4(4,BUFPTR),@CB00225                         01S0589
*       CCWPTR=CCWPTR+LENGTH(CCW);  /* NEXT SLOT                     */
         ALR   CCWPTR,@10                                       01S0590
*       CCWPTR->CCW(1)=RCDSCCW;     /* RD CKD,0,SKIP,264             */
         MVC   CCW(8,CCWPTR),RCDSCCW                            01S0591
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0592
*     END SD;                       /* END OF SUBCASE                */
*                                                               01S0593
*     /***************************************************************/
*     /*                                                             */
*     /* CLEANUP: RESTORE CE CYL TRK 1                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0594
*CLEANUP:                                                       01S0594
*     DO;                           /* SUBCASE                       */
CLEANUP  DS    0H                                               01S0595
*/*   WRITE RECORD ZERO AND ONE ON CE CYL TRK 1                      */
*/*         CCW CHAIN:                                          01S0595
*                SEEK,AP1CESK,CC,6          SEEK TO CE CYL      01S0595
*                SRCH HA,AP1CESK,CC,4       VALIDATE ON CORRECT TRK
*                TIC,*-8                                        01S0595
*                WRT R0,BUFF,CC,16          WRITE R0            01S0595
*                WCKD,BUFF+16,0,264         WRITE R1                 */
*/*  SETS CECCHH TO CE CYL TRK 1                                     */
*                                                               01S0595
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0595
         BNE   @RF00595                                         01S0595
*         CECCHH=I3344CE1;          /* CYL 2800 HD 1                 */
         MVC   CECCHH(4,AP1REG),@CB00207                        01S0596
*       ELSE                        /* NOT 3344                      */
*         CECCHH=I3350CE1;          /* CYL 1024 HD 1                 */
         B     @RC00595                                         01S0597
@RF00595 MVC   CECCHH(4,AP1REG),@CB00211                        01S0597
*       AP1FM=CEHAR0FM;             /* ALL WRITES--CE CYL            */
*                                                               01S0598
@RC00595 MVC   AP1FM(1,AP1REG),CEHAR0FM                         01S0598
*       /*************************************************************/
*       /*                                                           */
*       /* AP1SEEK AND A SEEK CCW TO CE CYL SETUP FROM PREVIOUS TEST */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0599
*       CCW(2)=SHACCCCW;            /* SEARCH HA EQ,0,CC,4           */
         L     @10,AP1CCWA(,AP1REG)                             01S0599
         MVC   CCW+8(8,@10),SHACCCCW                            01S0599
*       CCWADDRB(2)=ADDR(CECCHH);   /* ADDRESS OF TRACK              */
         LA    @09,CECCHH(,AP1REG)                              01S0600
         STCM  @09,7,CCWADDRB+8(@10)                            01S0600
*       CCW(3)=TICCCW;              /* TIC,0,0,0                     */
         MVC   CCW+16(8,@10),TICCCW                             01S0601
*       CCWADDRB(3)=AP1CCWAB+LENGTH(CCW);/* TIC TO SEARCH            */
         LA    @09,8                                            01S0602
         L     @15,AP1CCWAB-1(,AP1REG)                          01S0602
         LA    @15,0(,@15)                                      01S0602
         ALR   @15,@09                                          01S0602
         STCM  @15,7,CCWADDRB+16(@10)                           01S0602
*       CCW(4)=WR0CCCCW;            /* WRT R0,0,CC,16                */
         MVC   CCW+24(8,@10),WR0CCCCW                           01S0603
*       CCWADDRB(4)=AP1BUFAB;       /* WRITE FROM BUFFER             */
         L     @15,AP1BUFAB-1(,AP1REG)                          01S0604
         LA    @15,0(,@15)                                      01S0604
         STCM  @15,7,CCWADDRB+24(@10)                           01S0604
*       CCW(5)=WCDCCW;              /* WCKD,0,0,264                  */
         MVC   CCW+32(8,@10),WCDCCW                             01S0605
*       CCWADDRB(5)=AP1BUFAB+2*LENGTH(CNT);/* WRITE FROM BUFFER      */
*                                                               01S0606
         LA    @14,16                                           01S0606
         ALR   @15,@14                                          01S0606
         STCM  @15,7,CCWADDRB+32(@10)                           01S0606
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD COUNT AND DATA FOR R0                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0607
*       AP1BUFAD->CNTCCHHR=CECCHHR; /* CCHHR                         */
         L     @10,AP1BUFAD(,AP1REG)                            01S0607
         MVC   CNTCCHHR(5,@10),CECCHHR(AP1REG)                  01S0607
*       AP1BUFAD->CNTKDD=DL8;       /* KDD                           */
         MVC   CNTKDD(3,@10),@CB00217                           01S0608
*       EVAL(AP1BUFAD+LENGTH(CNT))->BYTE8=R0DATA;/* DATA FOR R0      */
*                                                               01S0609
         ALR   @09,@10                                          01S0609
         MVC   BYTE8(8,@09),R0DATA                              01S0609
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD COUNT AND DATA FOR R1                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0610
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTCCHH=CECCHH;/* CCHH         */
         LR    @09,@10                                          01S0610
         ALR   @09,@14                                          01S0610
         MVC   CNTCCHH(4,@09),CECCHH(AP1REG)                    01S0610
*       EVAL(AP1BUFAD+2*LENGTH(CNT))->CNTRKDD=R1DL256;/* RKDD        */
         ALR   @14,@10                                          01S0611
         MVC   CNTRKDD(4,@14),@CB00227                          01S0611
*       EVAL(AP1BUFAD+3*LENGTH(CNT))->BYTE256=R1DATA2;/* DATA2 FOR R1*/
         AL    @10,@CF00064                                     01S0612
         MVC   BYTE256(256,@10),R1DATA2                         01S0612
*       GOTO CE0001@;               /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0613
*     END CLEANUP;                  /* END OF SUBCASE                */
*CE0001@:                                                       01S0615
*   END;                            /* END OF CASE                   */
CE0001@  DS    0H                                               01S0616
*   GEN DATA DEFS(PATCH);                                       01S0616
*   END                             /* OF IAPBLDIO PROC              */
*                                                               01S0617
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AP1BLOCK)                                       */
*                                                               01S0617
*       ;                                                       01S0617
@EL00001 L     @13,4(,@13)                                      01S0617
@EF00001 DS    0H                                               01S0617
@ER00001 LM    @14,@12,12(@13)                                  01S0617
         BR    @14                                              01S0617
@DATA    DS    0H
@CH00083 DC    H'5'
@CH00076 DC    H'7'
@CH00431 DC    H'10'
@CH00578 DC    H'1024'
@CH00592 DC    H'8376'
@CH00593 DC    H'13038'
@CH00591 DC    H'19077'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IAPBLDIO CSECT
         DS    0F
@CF00043 DC    F'1'
@CF00058 DC    F'2'
@CF00038 DC    F'4'
@CF00155 DC    F'6'
@CF00047 DC    F'8'
@CF00033 DC    F'12'
@CF00049 DC    F'15'
@CF00167 DC    F'16'
@CF00589 DC    F'19'
@CF00064 DC    F'24'
@CF00244 DC    F'8368'
@CF00246 DC    F'13030'
@CF00242 DC    F'19069'
@CF00595 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IAPBLDIO CSECT
         NOPR  ((@ENDDATD-@DATD)/257*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CB00253 DC    X'0000000B000000'
@CB00205 DC    X'0AF00000'
@CB00207 DC    X'0AF00001'
@CB00209 DC    X'04000000'
@CB00211 DC    X'04000001'
@CB00221 DC    X'01000000'
@CB00223 DC    X'02000000'
@CB00225 DC    X'00000008'
@CB00227 DC    X'01000100'
@CB00256 DC    X'00010000'
@CB00555 DC    X'00040000'
@CB00556 DC    X'00000000'
@CB00217 DC    X'000008'
@CB00219 EQU   @CB00555
@CB00213 DC    X'0AF4'
@CB00215 DC    X'0012'
@CB00233 DC    X'001D'
@CB00235 DC    X'000B'
@CB00248 DC    X'00C0'
@CB00250 DC    X'0120'
@CB00557 EQU   @CB00256
@CB00558 DC    X'000A'
@CB00571 EQU   @CB00253
R0DL565  DC    X'00000235'
R0DL839  DC    X'00000347'
ZERO     DC    X'0000000000000000'
SPCCCCCW DC    X'0F00000040000003'
SNSCCW   DC    X'0400000020000018'
SEEKCCW  DC    X'0700000040000006'
RHASKCCW DC    X'1A00000010000005'
RECALCCW DC    X'1300000060000001'
SSCCCCW  DC    X'2300000040000001'
RSCCCCW  DC    X'2200000040000001'
RHACSCCW DC    X'1A00000050000005'
SHACCCCW DC    X'3900000040000004'
WR0CCCCW DC    X'1500000040000010'
WCDCCW   DC    X'1D00000000000108'
RR0CSCCW DC    X'1600000050000010'
RCDCSCCW DC    X'1E00000050000108'
RR0CCCCW DC    X'1600000040000010'
MRCCCCCW DC    X'9200000040000008'
RCCCW    DC    X'1200000000000008'
TICCCW   DC    X'0800000000000000'
WCDCDCCW DC    X'1D00000080000008'
WCDCCCCW DC    X'1D00000040000108'
RCDSCCW  DC    X'1E00000010000108'
SIDCCCCW DC    X'3100000040000005'
RCCSCCW  DC    X'1200000050000008'
WHACCCCW DC    X'190000004000000B'
NOPCCCCW DC    X'0300000040000001'
RHACCW   DC    X'1A00000000000005'
NOPCCW   DC    X'0300000000000001'
READFM   DC    X'40'
CEREADFM DC    X'44'
CEHAR0FM DC    X'C4'
CEFM     DC    X'04'
R1DATA1  DS    CL256
         ORG   R1DATA1
@NM00011 DS    CL64
         ORG   @NM00011
@NM00012 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+64
@NM00013 DS    CL64
         ORG   @NM00013
@NM00014 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+128
@NM00015 DS    CL64
         ORG   @NM00015
@NM00016 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+192
@NM00017 DS    CL64
         ORG   @NM00017
@NM00018 DC    8X'EB6DB6DB'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         DC    2X'FFFFFFFF'
         DC    2X'AAAAAAAA'
         ORG   R1DATA1+256
R1DATA2  DS    CL256
         ORG   R1DATA2
@NM00019 DC    X'AAAAAAAAAAAAAAAAAAAA'
@NM00020 DC    15X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00021 DC    X'FFFFFFFFFFFF'
         ORG   R1DATA2+256
SDR03344 DS    CL565
         ORG   SDR03344
@NM00022 DC    X'00'
         DC    XL7'0'
@NM00023 DC    X'FFFFFFFFFFFF'
@NM00024 DC    X'00'
         DC    XL71'0'
@NM00025 DC    X'19'
@NM00026 DC    X'0035'
@NM00027 DC    X'3081'
@NM00028 DC    X'20'
@NM00029 DC    X'0AF00001'
@NM00030 DC    X'01000100'
@NM00031 DC    X'1930493ACC2D'
@NM00032 DC    X'00'
         DC    XL67'0'
@NM00033 DC    X'19'
@NM00034 DC    X'AAAAAAAAAAAAAAAAAAAA'
@NM00035 DC    2X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00036 DC    X'FFFFFFFFFFFFFFFFAAAAAA'
@NM00037 DC    X'00'
         DC    XL126'0'
@NM00038 DC    X'19'
@NM00039 DC    X'AAAAAAAAAA'
@NM00040 DC    12X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00041 DC    X'FFFFFFFFFFFF'
@NM00042 DC    X'1A112E0FD408'
         ORG   SDR03344+565
SDR03350 DS    CL839
         ORG   SDR03350
@NM00043 DC    X'00'
         DC    XL7'0'
@NM00044 DC    X'FFFFFFFFFFFF'
@NM00045 DC    X'800000'
@NM00046 DC    X'00'
         DC    XL74'0'
@NM00047 DC    X'19'
@NM00048 DC    X'00BD00BD8088'
@NM00049 DC    X'023002'
@NM00050 DC    X'20'
@NM00051 DC    X'04000001'
@NM00052 DC    X'01000100'
@NM00053 DC    X'D6AFF9022805'
@NM00054 DC    X'8156C0'
@NM00055 DC    X'00'
         DC    XL72'0'
@NM00056 DC    X'00'
         DC    XL126'0'
@NM00057 DC    X'19'
@NM00058 DC    X'AAAAAAAAAAAAAAAAAAAA'
@NM00059 DC    3X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00060 DC    X'FFFFFFFF'
@NM00061 DC    X'00'
         DC    XL126'0'
@NM00062 DC    X'19'
@NM00063 DC    X'FFFFFFFFAAAAAAAAAAAAAAAA'
@NM00064 DC    3X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00065 DC    X'FF'
@NM00066 DC    X'00'
         DC    XL126'0'
@NM00067 DC    X'19'
@NM00068 DC    X'FFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00069 DC    7X'FFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAA'
@NM00070 DC    X'FFFFFFFFFFFF'
@NM00071 DC    X'1A112E0FD408'
         ORG   SDR03350+839
RANTBL   DC    H'10480'
         DC    H'15011'
         DC    H'1536'
         DC    H'2011'
         DC    H'14194'
         DC    H'20969'
         DC    H'22368'
         DC    H'25595'
         DC    H'30995'
         DC    H'27982'
         DC    H'19174'
         DC    H'24130'
         DC    H'22527'
         DC    H'15179'
         DC    H'24830'
         DC    H'32081'
         DC    H'30680'
         DC    H'19655'
         DC    H'6243'
         DC    H'7856'
         DC    H'16376'
         DC    H'849'
         DC    H'16379'
         DC    H'16656'
         DC    H'6121'
         DC    H'14110'
         DC    H'6927'
         DC    H'1263'
         DC    H'6907'
         DC    H'11008'
         DC    H'27756'
         DC    H'18602'
         DC    H'15053'
         DC    H'21916'
         DC    H'31016'
         DC    H'18738'
         DC    H'21069'
         DC    H'10634'
         DC    H'12952'
         DC    H'5463'
         DC    H'7972'
         DC    H'18876'
         DC    H'20922'
         DC    H'18425'
         DC    H'32307'
         DC    H'14342'
         DC    H'10281'
         DC    H'17453'
         DC    H'18103'
         DC    H'25331'
CP0001@  DC    AL4(RECAL)
         DC    AL4(SNS)
         DC    AL4(RECAL)
         DC    AL4(RHAMHS)
         DC    AL4(RHAMH)
         DC    AL4(RHAFHS)
         DC    AL4(RHAFH)
         DC    AL4(RPS)
         DC    AL4(SK192)
         DC    AL4(SKINCR)
         DC    AL4(SKMAX)
         DC    AL4(SKRANS)
         DC    AL4(SKRAN)
         DC    AL4(RHAS)
         DC    AL4(CE)
         DC    AL4(WRTS)
         DC    AL4(CE)
         DC    AL4(RR01S)
         DC    AL4(CE)
         DC    AL4(RDMT)
         DC    AL4(FTWRT)
         DC    AL4(AMDET)
         DC    AL4(WRTPAD)
         DC    AL4(SD)
         DC    AL4(CLEANUP)
IAPBLDIO CSECT
*                                /*  PATCH AREA  */
         CNOP  0,4               FULLWORD BDWY
PATCH    DC    2XL((*-@MAINENT)/40)'0' FIVE PERCENT.
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IAPBLDIO CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
COUNTER  EQU   @02
CCWPTR   EQU   @06
BUFPTR   EQU   @07
AP1REG   EQU   @08
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR13P   EQU   @13
GPR15P   EQU   @15
AP1BLOCK EQU   0
AP1PRINT EQU   AP1BLOCK+8
AP1PFLG1 EQU   AP1BLOCK+144
AP1WRKA  EQU   AP1BLOCK+156
AP1CCWA  EQU   AP1BLOCK+160
AP1CCWAB EQU   AP1CCWA+1
AP1BUFAD EQU   AP1BLOCK+164
AP1BUFAB EQU   AP1BUFAD+1
AP1TIMFL EQU   AP1BLOCK+176
AP1TIMFA EQU   AP1TIMFL
AP1FM    EQU   AP1BLOCK+212
AP1SEEK  EQU   AP1BLOCK+213
CCHHR    EQU   AP1SEEK+3
CCHH     EQU   CCHHR
CC       EQU   CCHH
HH       EQU   CCHH+2
AP1CESK  EQU   AP1BLOCK+221
CECCHHR  EQU   AP1CESK+2
CECCHH   EQU   CECCHHR
CECC     EQU   CECCHH
CEHH     EQU   CECCHH+2
CER      EQU   CECCHHR+4
AP1FLG2  EQU   AP1BLOCK+244
AP1FHF   EQU   AP1FLG2
AP1FLG3  EQU   AP1BLOCK+245
AP1PTRN2 EQU   AP1FLG3
AP1FLG4  EQU   AP1BLOCK+246
AP1TSTNO EQU   AP1BLOCK+249
AP1DEVTP EQU   AP1BLOCK+250
AP1ETABA EQU   AP1BLOCK+252
AP1SKCNT EQU   AP1BLOCK+256
AP1LSTCC EQU   AP1BLOCK+258
AP1ERRTM EQU   AP1BLOCK+270
AP1ERRTF EQU   AP1BLOCK+300
AP1END   EQU   AP1BLOCK+360
ERRTAB   EQU   0
CCW      EQU   0
CCWADDRA EQU   CCW
CCWCOMCD EQU   CCWADDRA
@NM00005 EQU   CCWCOMCD
CCWADDRB EQU   CCWADDRA+1
CCWFLGS  EQU   CCW+4
CCWCC    EQU   CCWFLGS
CCWSKIP  EQU   CCWFLGS
CCWBYTE  EQU   CCW+6
WRKAREA  EQU   0
WRKAD    EQU   WRKAREA
WRKFLG   EQU   WRKAD
BYTE1    EQU   0
BYTE4    EQU   0
BYTE6    EQU   0
BYTE8    EQU   0
BYTE24   EQU   0
BYTE112  EQU   0
BYTE256  EQU   0
SEEK     EQU   0
SEEKCCHH EQU   SEEK+2
SEEKCC   EQU   SEEKCCHH
SEEKHH   EQU   SEEKCCHH+2
CNT      EQU   0
CNTCCHHR EQU   CNT
CNTCCHH  EQU   CNTCCHHR
CNTHH    EQU   CNTCCHH+2
CNTR     EQU   CNTCCHHR+4
CL0001@  EQU   0
BUFFER   EQU   0
@NM00008 EQU   WRKAREA
ZERO7    EQU   ZERO
CNTRKDD  EQU   CNTR
CNTKDD   EQU   CNTRKDD+1
CNTDD    EQU   CNTKDD+1
SDZERO   EQU   ZERO
R0DATA   EQU   ZERO
CNTHHR   EQU   CNTHH
HHR      EQU   HH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CNTK     EQU   CNTKDD
@NM00010 EQU   CNTRKDD
WRKHW2   EQU   @NM00008+2
WRKHW1   EQU   @NM00008
@NM00009 EQU   CNT+5
CNTCC    EQU   CNTCCHH
SEEKR    EQU   SEEK+6
SEEKBB   EQU   SEEK
WRKAB    EQU   WRKAD+1
WRKENDFL EQU   WRKFLG
@NM00007 EQU   CCW+5
CCWPCI   EQU   CCWFLGS
CCWSLI   EQU   CCWFLGS
CCWCD    EQU   CCWFLGS
CCWWR    EQU   @NM00005
CCWRD    EQU   @NM00005
@NM00006 EQU   @NM00005
DATACOMP EQU   ERRTAB
DCKCE    EQU   ERRTAB
WRTCK    EQU   ERRTAB
SKVERCK  EQU   ERRTAB
DCK      EQU   ERRTAB
AP1ENQAD EQU   AP1BLOCK+266
AP1DEVAD EQU   AP1BLOCK+262
AP1LSTHH EQU   AP1BLOCK+260
AP1RET   EQU   AP1BLOCK+251
AP1DCCNT EQU   AP1BLOCK+248
@NM00004 EQU   AP1BLOCK+247
AP1ENQD  EQU   AP1FLG4
AP1DEBCH EQU   AP1FLG4
AP1READ  EQU   AP1FLG4
AP1NORD  EQU   AP1FLG4
AP1RDERR EQU   AP1FLG3
AP1RDTST EQU   AP1FLG3
AP1VERIF EQU   AP1FLG3
AP1QUIT  EQU   AP1FLG3
AP1PRERR EQU   AP1FLG3
AP1ERROR EQU   AP1FLG3
AP1LST   EQU   AP1FLG3
AP1NOERP EQU   AP1FLG2
AP1EDP   EQU   AP1FLG2
AP1IOC   EQU   AP1FLG2
AP1NOWR  EQU   AP1FLG2
AP1IOECB EQU   AP1BLOCK+240
AP1IOBA  EQU   AP1BLOCK+236
AP1DEBA  EQU   AP1BLOCK+232
AP1DCBA  EQU   AP1BLOCK+228
CEBB     EQU   AP1CESK
R        EQU   CCHHR+4
BB       EQU   AP1SEEK+1
M        EQU   AP1SEEK
AP1SNS   EQU   AP1BLOCK+188
AP1CSW   EQU   AP1BLOCK+181
AP1PCODE EQU   AP1BLOCK+180
AP1TIMIN EQU   AP1TIMFA
AP1IOACT EQU   AP1TIMFA
AP1TCBAD EQU   AP1BLOCK+172
AP1TIMEA EQU   AP1BLOCK+168
@NM00003 EQU   AP1BUFAD
@NM00002 EQU   AP1CCWA
AP1RECB  EQU   AP1BLOCK+152
@NM00001 EQU   AP1BLOCK+150
AP1CNRPL EQU   AP1BLOCK+146
AP1CNCOD EQU   AP1BLOCK+145
AP1PRCLS EQU   AP1PFLG1
AP1PRNP  EQU   AP1PFLG1
AP1PROPN EQU   AP1PFLG1
AP1PRLIN EQU   AP1BLOCK+142
AP1PRPAG EQU   AP1BLOCK+140
AP1PRCOD EQU   AP1BLOCK+139
AP1PRMSG EQU   AP1PRINT+1
AP1PRASA EQU   AP1PRINT
AP1PDCBA EQU   AP1BLOCK+4
AP1HDR   EQU   AP1BLOCK
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00137 EQU   CE0001@
@RC00127 EQU   CE0001@
@RC00167 EQU   @RC00166
@RC00175 EQU   @RC00174
@RC00183 EQU   @RC00182
@RC00245 EQU   @RC00244
@RC00321 EQU   @RC00318
@RC00439 EQU   CE0001@
@RC00433 EQU   CE0001@
@RC00128 EQU   @RC00127
@RC00138 EQU   @RC00137
@RC00322 EQU   @RC00321
@ENDDATA EQU   *
         END   IAPBLDIO,(C'PLS1717',0701,77308)
