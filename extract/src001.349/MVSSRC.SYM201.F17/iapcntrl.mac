         TITLE 'IAPCNTRL - AP-1 MAIN CSECT                             *
                        '
IAPCNTRL CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IAPCNTRL  77.308'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @10,0                                            01S0001
@PSTART  LA    @11,4095(,@10)                                   01S0001
         LA    @12,4095(,@11)                                   01S0001
         USING @PSTART,@10                                      01S0001
         USING @PSTART+4095,@11                                 01S0001
         USING @PSTART+8190,@12                                 01S0001
         L     @00,@SIZDATD                                     01S0001
         GETMAIN  R,LV=(0)
         LR    @07,@01                                          01S0001
         USING @DATD,@07                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @07,8(,@13)                                      01S0001
         LR    @13,@07                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
         EJECT
*                                                               01S0265
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION ROUTINE GETS SPACE FOR CONTROL BLOCKS AND      */
*   /* BUILDS THEM. CALLS INITGET PROC TO GETMAIN AREAS AND SET UP   */
*   /* ADDRESSES. MOVES DCBS AND BUILDS IOB. CALLS INITDEVT TO FIND  */
*   /* DEVICE TYPE AND INITIALIZE AP1DEVTP. CALLS INITDEB TO BUILD   */
*   /* THE DEB. ATTACHES SUBTASK TO TIME FOR MISSING INTERRUPTS.     */
*   /* ISSUES NO MESSAGES.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0265
*   DO;                             /* MODESET MODE(SUP)             */
*     I10701='00000000'B;           /* OR MASK                       */
         MVI   I10701,B'00000000'                               01S0266
*     I10702='00000000'B;           /* AND MASK                      */
         MVI   I10702,B'00000000'                               01S0267
*     I10703='00000000'B;           /* RESERVED                      */
         MVI   I10703,B'00000000'                               01S0268
*     I10704='00001100'B;                                       01S0269
         MVI   I10704,B'00001100'                               01S0269
*     RESPECIFY                                                 01S0270
*       GPR01F RESTRICTED;                                      01S0270
*     GPR01F=I107;                  /* MODESET PARMLIST              */
         L     GPR01F,I107                                      01S0271
*     SVC(107);                     /* ISSUE MODESET SVC             */
         SVC   107                                              01S0272
*     RESPECIFY                                                 01S0273
*      (GPR01F) UNRESTRICTED;                                   01S0273
*   END;                            /* MODESET MODE(SUP) GET INTO
*                                      SUPERVISOR STATE              */
*                                                               01S0274
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN ROUTINE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0275
*                                                               01S0275
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN AREA FOR AP1BLOCK, PRINT DCB, SAVE AREA, TEST DCB,TEST*/
*   /* IOB, CCW BUILD AREA, AND MACRO WORK AREA.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0275
*   DO;                             /* GETMAIN (R) LV(LENGTH(AP1BLOCK
*                                      )+DATDLEN+PRDCBL+TESTDCBL+LENG
*                                      TH(IOBSTDRD)+LENGTH(IOBEXTEN)+
*                                      LENGTH(IOBAP1PT)+(LENGTH(CCW)*
*                                      MAXCCWS)+(LENGTH(WRKAREA)*WRKW
*                                      ORDS)+FUDGE)SP(DEBSP)         */
*     RESPECIFY                                                 01S0276
*      (GPR01F,                                                 01S0276
*       GPR00F) RESTRICTED;                                     01S0276
*     GPR00F=LENGTH(AP1BLOCK)+DATDLEN+PRDCBL+TESTDCBL+LENGTH(IOBSTDRD)+
*         LENGTH(IOBEXTEN)+LENGTH(IOBAP1PT)+(LENGTH(CCW)*MAXCCWS)+(
*         LENGTH(WRKAREA)*WRKWORDS)+FUDGE;/* LENGTH REQUESTED        */
         LA    GPR00F,616                                       01S0277
         AL    GPR00F,PRDCBL                                    01S0277
         AL    GPR00F,TESTDCBL                                  01S0277
         AL    GPR00F,@CF03848                                  01S0277
*     GPR01F=DEBSP;                 /* SP IN REG 1                   */
         LA    GPR01F,230                                       01S0278
*     GEN(SLL   GPR01F,24)                                      01S0279
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;              01S0279
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                    01S0280
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                    01S0281
         BCTR  GPR01F,0                                         01S0281
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0282
*     RESPECIFY                                                 01S0283
*      (GPR01F,                                                 01S0283
*       GPR00F) UNRESTRICTED;                                   01S0283
*   END;                            /* GETMAIN (R) LV(LENGTH(AP1BLOCK
*                                      )+DATDLEN+PRDCBL+TESTDCBL+LENG
*                                      TH(IOBSTDRD)+LENGTH(IOBEXTEN)+
*                                      LENGTH(IOBAP1PT)+(LENGTH(CCW)*
*                                      MAXCCWS)+(LENGTH(WRKAREA)*WRKW
*                                      ORDS)+FUDGE)SP(DEBSP)         */
*   RFY                                                         01S0285
*     GPR01F RSTD;                                              01S0285
*   AP1REG=GPR01F;                  /* BASE REG FOR AP1BLOCK         */
         LR    AP1REG,GPR01F                                    01S0286
*   RFY                                                         01S0287
*     GPR01F UNRSTD;                                            01S0287
*                                                               01S0287
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR AP1BLOCK                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0288
*   RFY                                                         01S0288
*    (GPR00P,                                                   01S0288
*     GPR01F,                                                   01S0288
*     GPR14P,                                                   01S0288
*     GPR15F) RSTD;                                             01S0288
*   GPR00P=AP1REG;                  /* ADDRESS OF AP1BLOCK           */
         LR    GPR00P,AP1REG                                    01S0289
*   GPR01F=LENGTH(AP1BLOCK);        /* LENGTH                        */
         LA    GPR01F,360                                       01S0290
*   GPR14P=0;                       /* DUMMY ADDRESS                 */
         SLR   GPR14P,GPR14P                                    01S0291
*   GPR15P=0;                       /* PAD CHAR 0, LENGTH 0          */
         SLR   GPR15P,GPR15P                                    01S0292
*   MVCL(GPR00P,GPR14P);            /* ZERO AP1BLOCK                 */
         MVCL  GPR00P,GPR14P                                    01S0293
*   RFY                                                         01S0294
*    (GPR00P,                                                   01S0294
*     GPR01F,                                                   01S0294
*     GPR14P,                                                   01S0294
*     GPR15F) UNRSTD;                                           01S0294
*                                                               01S0294
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT ADDRESSES IN AP1BLOCK                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0295
*   AP1HDR='AP1B';                  /* PUT IN ID                     */
         MVC   AP1HDR(4,AP1REG),@CC03242                        01S0295
*   AP1DEVAD='    ';                /* CLEAR DEVICE ADDR             */
         MVC   AP1DEVAD(4,AP1REG),@CC03243                      01S0296
*   AP1PDCBA=((AP1REG+LENGTH(AP1BLOCK)+DATDLEN+3)/4)*4;/* ADDR OF
*                                      PRINT DCB                     */
         LA    @00,619                                          01S0297
         ALR   @00,AP1REG                                       01S0297
         SRDA  @00,32                                           01S0297
         D     @00,@CF00040                                     01S0297
         SLA   @01,2                                            01S0297
         ST    @01,AP1PDCBA(,AP1REG)                            01S0297
*   AP1DCBA=AP1PDCBA+PRDCBL;        /* ADDR OF TEST DCB              */
         AL    @01,PRDCBL                                       01S0298
         ST    @01,AP1DCBA(,AP1REG)                             01S0298
*   AP1IOBA=AP1DCBA+TESTDCBL;       /* ADDR OF TEST IOB              */
         AL    @01,TESTDCBL                                     01S0299
         ST    @01,AP1IOBA(,AP1REG)                             01S0299
*   AP1CCWA=((AP1IOBA+LENGTH(IOBSTDRD)+LENGTH(IOBEXTEN)+LENGTH(IOBAP1PT
*       )+7)/8)*8;                  /* ADDR OF CCW AREA              */
         LR    @02,@01                                          01S0300
         AL    @02,@CF03282                                     01S0300
         SRDA  @02,32                                           01S0300
         D     @02,@CF00049                                     01S0300
         SLA   @03,3                                            01S0300
         ST    @03,AP1CCWA(,AP1REG)                             01S0300
*   AP1WRKA=AP1CCWA+(LENGTH(CCW)*MAXCCWS);/* ADDR OF WORK AREA       */
*                                                               01S0301
         AL    @03,@CF03845                                     01S0301
         ST    @03,AP1WRKA(,AP1REG)                             01S0301
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN FOR BUFFER AREA                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0302
*   DO;                             /* GETMAIN (R)              01S0302
*                                      LV(BUFFLEN)SP(DEBSP)          */
*     RESPECIFY                                                 01S0303
*      (GPR01F,                                                 01S0303
*       GPR00F) RESTRICTED;                                     01S0303
*     GPR00F=BUFFLEN;               /* LENGTH REQUESTED              */
         LA    GPR00F,864                                       01S0304
*     GPR01F=DEBSP;                 /* SP IN REG 1                   */
         LA    GPR01F,230                                       01S0305
*     GEN(SLL   GPR01F,24)                                      01S0306
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;              01S0306
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                    01S0307
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                    01S0308
         BCTR  GPR01F,0                                         01S0308
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0309
*     RESPECIFY                                                 01S0310
*      (GPR01F,                                                 01S0310
*       GPR00F) UNRESTRICTED;                                   01S0310
*   END;                            /* GETMAIN (R)              01S0311
*                                      LV(BUFFLEN)SP(DEBSP) GET AREA
*                                      TWO                           */
*                                                               01S0311
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT ADDRESS IN AP1BLOCK                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0312
*   RFY                                                         01S0312
*     GPR01F RSTD;                                              01S0312
*   AP1BUFAD=GPR01F;                /* ADDR OF BUFFER                */
         ST    GPR01F,AP1BUFAD(,AP1REG)                         01S0313
*   RFY                                                         01S0314
*     GPR01F UNRSTD;                                            01S0314
*                                                               01S0314
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS PARMS                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0315
*   IF PARMLEN=6&PARMDATA='NODATA' THEN/* REQUEST NODATA OPTION      */
         L     @06,@PC00001                                     01S0315
         CLC   PARMLEN(2,@06),@CH01082                          01S0315
         BNE   @RF00315                                         01S0315
         CLC   PARMDATA(6,@06),@CC03244                         01S0315
         BNE   @RF00315                                         01S0315
*     AP1NORD=ON;                                               01S0316
         OI    AP1NORD(AP1REG),B'10000000'                      01S0316
*   ELSE                                                        01S0317
*     ;                                                         01S0317
@RF00315 DS    0H                                               01S0318
*   IF PARMLEN=4&PARMDATA(1:4)='DATA' THEN/* REQUEST DATA OPTION     */
         L     @06,@PC00001                                     01S0318
         CLC   PARMLEN(2,@06),@CH00040                          01S0318
         BNE   @RF00318                                         01S0318
         CLC   PARMDATA(4,@06),@CC03245                         01S0318
         BNE   @RF00318                                         01S0318
*     AP1READ=ON;                                               01S0319
         OI    AP1READ(AP1REG),B'01000000'                      01S0319
*   ELSE                                                        01S0320
*     ;                                                         01S0320
*                                                               01S0320
@RF00318 DS    0H                                               01S0321
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE IN DCBS, OPEN PRINT, AND BUILD IOB                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0321
*   AP1DCBA->BYTE256(1:TESTDCBL)=ADDR(TESTDCB)->BYTE256(1:TESTDCBL);
         L     @06,AP1DCBA(,AP1REG)                             01S0321
         L     @15,TESTDCBL                                     01S0321
         BCTR  @15,0                                            01S0321
         LA    @14,TESTDCB                                      01S0321
         EX    @15,@SM03864                                     01S0321
*                                   /* MOVE IN TEST DCB              */
*   AP1PDCBA->BYTE256(1:PRDCBL)=ADDR(PRDCB)->BYTE256(1:PRDCBL);/*
*                                      MOVE IN PRINT DCB             */
         L     @06,AP1PDCBA(,AP1REG)                            01S0322
         L     @15,PRDCBL                                       01S0322
         BCTR  @15,0                                            01S0322
         LA    @14,PRDCB                                        01S0322
         EX    @15,@SM03864                                     01S0322
*   AP1PRNP=ON;                     /* GO TO NEW (FIRST) PAGE        */
         OI    AP1PRNP(AP1REG),B'01000000'                      01S0323
*   CALL COMM;                      /* GO TO NEW PAGE                */
         BAL   @14,COMM                                         01S0324
*   IOBSTDRD=IOBSTDRD&&IOBSTDRD;    /* CLEAR IOB AREA                */
         L     @06,AP1IOBA(,AP1REG)                             01S0325
         XC    IOBSTDRD(32,@06),IOBSTDRD(@06)                   01S0325
*   IOBCMDCH=ON;                    /* CMD CHAIN FOR ERPS            */
*   IOBUNREL=ON;                    /* UNRELATED REQUEST             */
         OI    IOBCMDCH(@06),B'01000010'                        01S0327
*   IOBECBPT=ADDR(AP1IOECB);        /* ECB ADDRESS                   */
         LA    @15,AP1IOECB(,AP1REG)                            01S0328
         ST    @15,IOBECBPT(,@06)                               01S0328
*   IOBDCBPT=AP1DCBA;               /* DCB ADDRESS                   */
         L     @15,AP1DCBA(,AP1REG)                             01S0329
         ST    @15,IOBDCBPT(,@06)                               01S0329
*   IOBAP1PT=AP1REG;                /* ADDR OF AP1BLOCK INTO IOB     */
         ST    AP1REG,IOBAP1PT(,@06)                            01S0330
*   IOBSTART=AP1CCWA;               /* ADDR OF CCWS INTO IOB         */
         L     @15,AP1CCWA(,AP1REG)                             01S0331
         ST    @15,IOBSTART(,@06)                               01S0331
*   IF AP1QUIT=ON THEN                                          01S0332
         TM    AP1QUIT(AP1REG),B'00001000'                      01S0332
         BO    @RT00332                                         01S0332
*     ;                             /* ERROR ALLREADY--SKIP FURTHER
*                                      PROCESSING                    */
*   ELSE                            /* NO ERROR FOUND SO FAR         */
*     DO;                                                       01S0334
*                                                               01S0334
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINES DEVICE TYPE AND SETS UP AP1DEVTP. FINDS DD CARD*/
*       /* ENTRY--IF NO DD ISSUES MSG 12. CHECKS UCB DEVICE TYPE FOR */
*       /* 3330, 3340 OR 3350--IF NONE, ISSUES MESSAGE 14.           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0335
*                                                               01S0335
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE DEVICE TYPE                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0335
*       DDPTR=ADDR(TIOENTRY);       /* 1ST DEV SEG OF TIOT           */
         L     @06,FLCCVT                                       01S0335
         L     @06,CVTTCBP(,@06)                                01S0335
         L     @06,TCBPTR(,@06)                                 01S0335
         L     DDPTR,TCBTIO(,@06)                               01S0335
         LA    DDPTR,TIOENTRY(,DDPTR)                           01S0335
*       RFY                                                     01S0336
*         TIOT1 BASED(DDPTR-LENGTH(TIOT1));                     01S0336
*       UCBPTR=0;                   /* CLEAR UCBPTR                  */
         SLR   UCBPTR,UCBPTR                                    01S0337
*       DO WHILE TIOELNGH^=0&UCBPTR=0;/* AS LONG AS THERE IS ANOTHER
*                                      DD ENTRY AND CORRECT ENTRY NOT
*                                      FOUND                         */
         B     @DE00338                                         01S0338
@DL00338 DS    0H                                               01S0339
*         IF TIOEDDNM='TESTDD  ' THEN/* CORRECT DD FOUND             */
         LR    @06,DDPTR                                        01S0339
         SL    @06,@CF00066                                     01S0339
         CLC   TIOEDDNM(8,@06),@CC03249                         01S0339
         BNE   @RF00339                                         01S0339
*           UCBPTR=TIOEFSRT;        /* GET UCB ADDRESS               */
         L     UCBPTR,TIOEFSRT-1(,@06)                          01S0340
         LA    UCBPTR,0(,UCBPTR)                                01S0340
*         ELSE                      /* NOT CORRECT DD                */
*           DDPTR=DDPTR+TIOELNGH;   /* INCR TO NEXT ENTRY            */
         B     @RC00339                                         01S0341
@RF00339 SLR   @06,@06                                          01S0341
         IC    @06,TIOELNGH-24(,DDPTR)                          01S0341
         ALR   DDPTR,@06                                        01S0341
*       END;                        /* DO WHILE                      */
@RC00339 DS    0H                                               01S0342
@DE00338 CLI   TIOELNGH-24(DDPTR),0                             01S0342
         BE    @DC00338                                         01S0342
         LTR   UCBPTR,UCBPTR                                    01S0342
         BZ    @DL00338                                         01S0342
@DC00338 DS    0H                                               01S0343
*       IF UCBPTR=0 THEN            /* NO DD CARD FOR TEST DEVICE    */
         LTR   UCBPTR,UCBPTR                                    01S0343
         BNZ   @RF00343                                         01S0343
*         DO;                                                   01S0344
*           AP1CNCOD=MNDD;          /* SETUP FOR DD STMT MISSING MSG */
         MVI   AP1CNCOD(AP1REG),X'0C'                           01S0345
*           CALL COMM;              /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0346
*           AP1QUIT=ON;             /* BYPASS ALL TESTING            */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0347
*         END;                                                  01S0348
*       ELSE                        /* OK SO FAR, CONTINUE           */
*         DO;                                                   01S0349
         B     @RC00343                                         01S0349
@RF00343 DS    0H                                               01S0350
*           AP1DEVAD(1:1)='0';      /* PUT EBCDIC ADDR IN AP1DEVAD
*                                      FROM UCB                      */
         MVI   AP1DEVAD(AP1REG),C'0'                            01S0350
*           AP1DEVAD(2:4)=UCBNAME;                              01S0351
         MVC   AP1DEVAD+1(3,AP1REG),UCBNAME(UCBPTR)             01S0351
*           IF UCB3DACC=ON THEN     /* DASD                          */
         TM    UCB3DACC(UCBPTR),B'00100000'                     01S0352
         BNO   @RF00352                                         01S0352
*             DO;                                               01S0353
*               IF UCBTBYT4=UCB3330 THEN/* 3330                      */
         CLI   UCBTBYT4(UCBPTR),X'09'                           01S0354
         BNE   @RF00354                                         01S0354
*                 AP1DEVTP=AP13330;                             01S0355
         MVI   AP1DEVTP(AP1REG),X'01'                           01S0355
*               ELSE                                            01S0356
*                 ;                 /* NOT 3330                      */
@RF00354 DS    0H                                               01S0357
*               IF UCBTBYT4=UCB3331 THEN/* 3330 MOD 2                */
         CLI   UCBTBYT4(UCBPTR),X'0D'                           01S0357
         BNE   @RF00357                                         01S0357
*                 AP1DEVTP=AP13331;                             01S0358
         MVI   AP1DEVTP(AP1REG),X'02'                           01S0358
*               ELSE                                            01S0359
*                 ;                                             01S0359
@RF00357 DS    0H                                               01S0360
*               IF UCBTBYT4=UCB3340 THEN/* 3344                      */
         CLI   UCBTBYT4(UCBPTR),X'0A'                           01S0360
         BNE   @RF00360                                         01S0360
*                 AP1DEVTP=AP13344;                             01S0361
         MVI   AP1DEVTP(AP1REG),X'03'                           01S0361
*               ELSE                                            01S0362
*                 ;                 /* NOT 3344                      */
@RF00360 DS    0H                                               01S0363
*               IF UCBTBYT4=UCB3350 THEN/* 3350                      */
         CLI   UCBTBYT4(UCBPTR),X'0B'                           01S0363
         BNE   @RF00363                                         01S0363
*                 AP1DEVTP=AP13350;                             01S0364
         MVI   AP1DEVTP(AP1REG),X'04'                           01S0364
*               ELSE                                            01S0365
*                 ;                 /* NOT 3350                      */
@RF00363 DS    0H                                               01S0366
*             END;                                              01S0366
*           ELSE                                                01S0367
*             ;                     /* NOT DASD                      */
@RF00352 DS    0H                                               01S0368
*           IF UCBVRDEV=ON THEN     /* VIO                           */
         TM    UCBVRDEV(UCBPTR),B'10000000'                     01S0368
         BNO   @RF00368                                         01S0368
*             AP1DEVTP=0;           /* DO NOT ACCEPT DEVICE          */
         MVI   AP1DEVTP(AP1REG),X'00'                           01S0369
*           ELSE                                                01S0370
*             ;                     /* NOT VIO -- OK                 */
@RF00368 DS    0H                                               01S0371
*           IF AP1DEVTP=0 THEN      /* NOT ELLIGIBLE DEVICE          */
         CLI   AP1DEVTP(AP1REG),0                               01S0371
         BNE   @RF00371                                         01S0371
*             DO;                                               01S0372
*               AP1CNCOD=MIDT;      /* SETUP 'INCORR DEV TYPE' MSG   */
         MVI   AP1CNCOD(AP1REG),X'0E'                           01S0373
*               CALL COMM;          /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0374
*               AP1QUIT=ON;         /* BYPASS TESTING                */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0375
*             END;                                              01S0376
*           ELSE                                                01S0377
*             ;                     /* OK SO FAR, CONTINUE           */
@RF00371 DS    0H                                               01S0378
*         END;                                                  01S0378
*     END;                                                      01S0379
@RC00343 DS    0H                                               01S0380
*   IF AP1QUIT=ON THEN                                          01S0380
@RT00332 TM    AP1QUIT(AP1REG),B'00001000'                      01S0380
         BO    @RT00380                                         01S0380
*     ;                             /* ERROR ALREADY--SKIP FURTHER
*                                      PROCESSING                    */
*   ELSE                            /* NO ERROR FOUND SO FAR         */
*     DO;                                                       01S0382
*                                                               01S0382
*       /*************************************************************/
*       /*                                                           */
*       /* DEB BUILD ROUTINE                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0383
*                                                               01S0383
*       /*************************************************************/
*       /*                                                           */
*       /* GETMAINS CORE FOR DEB. PUTS EXTENTS INTO DEB FOR WHOLE    */
*       /* PACK. POINTS APP ADDRESSES TO OUR APPENDAGES.             */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0383
*       WRKAD(1)=UCBPTR;            /* SAVE UCB ADDRESS IN NON FETCH
*                                      PROTECTED AREA                */
*                                                               01S0383
         L     @06,AP1WRKA(,AP1REG)                             01S0383
         ST    UCBPTR,WRKAD(,@06)                               01S0383
*       /*************************************************************/
*       /*                                                           */
*       /* GETMAIN AREA FOR DEB                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0384
*       DO;                         /* MODESET EXTKEY(DATAMGT)       */
*         SPKA(80);                 /* SET PSW KEY                   */
         LA    @09,80                                           01S0385
         SPKA  0(@09)                                           01S0385
*       END;                        /* MODESET EXTKEY(DATAMGT) DATA
*                                      MGT KEY                       */
*       DO;                         /* GETMAIN (R) LV(LENGTH(DEBBASIC
*                                      )+LENGTH(DEBDASD)+LENGTH(DEB))
*                                      SP(DEBSP)                     */
*         RESPECIFY                                             01S0388
*          (GPR01F,                                             01S0388
*           GPR00F) RESTRICTED;                                 01S0388
*         GPR00F=LENGTH(DEBBASIC)+LENGTH(DEBDASD)+LENGTH(DEB);/*
*                                      LENGTH REQUESTED              */
         LA    GPR00F,84                                        01S0389
*         GPR01F=DEBSP;             /* SP IN REG 1                   */
         LA    GPR01F,230                                       01S0390
*         GEN(SLL   GPR01F,24)                                  01S0391
*         NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;          01S0391
         SLL   GPR01F,24
*         GPR00F=GPR00F×GPR01F;     /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                    01S0392
*         GPR01F=-1;                /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                    01S0393
         BCTR  GPR01F,0                                         01S0393
*         SVC(10);                  /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0394
*         RESPECIFY                                             01S0395
*          (GPR01F,                                             01S0395
*           GPR00F) UNRESTRICTED;                               01S0395
*       END;                        /* GETMAIN (R) LV(LENGTH(DEBBASIC
*                                      )+LENGTH(DEBDASD)+LENGTH(DEB))
*                                      SP(DEBSP) GET DEB             */
*       RFY                                                     01S0397
*        (GPR01P,                                               01S0397
*         GPR03P) RSTD;                                         01S0397
*       GPR03P=GPR01P+LENGTH(DEB);  /* SAVE ADDRESS OF DEB BASIC
*                                      SECTION                       */
         LA    @09,36                                           01S0398
         LR    GPR03P,GPR01P                                    01S0398
         ALR   GPR03P,@09                                       01S0398
*       RFY                                                     01S0399
*         GPR01P UNRSTD;                                        01S0399
*       RFY                                                     01S0400
*         DEBBASIC BASED(GPR03P);   /* TEMP ADDRESSABILITY           */
*       DEBBASIC=DEBBASIC&&DEBBASIC;/* CLEAR DEB                     */
         XC    DEBBASIC(32,GPR03P),DEBBASIC(GPR03P)             01S0401
*       DEBDASD=DEBDASD&&DEBDASD;   /* CLEAR DEB                     */
         LA    @06,32                                           01S0402
         ALR   @06,GPR03P                                       01S0402
         XC    DEBDASD(16,@06),DEBDASD(@06)                     01S0402
*       DEBAPPAD=ADDR(DEBBASIC)-LENGTH(DEB);/* AVT ADDRESS           */
         LCR   @09,@09                                          01S0403
         ALR   @09,GPR03P                                       01S0403
         ST    @09,DEBAPPAD(,GPR03P)                            01S0403
*       DEBEXSCL=DEBEXDA;           /* EXTENT SCALE                  */
         MVI   DEBEXSCL(GPR03P),X'04'                           01S0404
*       DEBPREFX=DEBPREFX&&DEBPREFX;/* CLEAR DEB                     */
         L     @09,DEBAPPAD(,GPR03P)                            01S0405
         XC    DEBPREFX(16,@09),DEBPREFX(@09)                   01S0405
*       DEBEOEA=ADDR(CVTBRET);      /* DUMMY EOE                     */
         L     @06,FLCCVT                                       01S0406
         LA    @02,CVTBRET(,@06)                                01S0406
         ST    @02,DEBEOEA(,@09)                                01S0406
*       DEBSIOA=ADDR(IAPPFXAP);     /* POINT TO OUR PFX APP          */
         L     @15,@CV03170                                     01S0407
         ST    @15,DEBSIOA(,@09)                                01S0407
*       DEBSIONP=ONEPAGE;           /* FIX ONE PAGE                  */
         NI    DEBSIONP(@09),B'11110001'                        01S0408
         OI    DEBSIONP(@09),B'00000001'                        01S0408
*       DEBPGFX=ON;                 /* PFX APPENDAGE PRESENT         */
         OI    DEBPGFX(@09),B'10000000'                         01S0409
*       DEBPCIA=ADDR(CVTBRET);      /* DUMMY PCI                     */
         ST    @02,DEBPCIA(,@09)                                01S0410
*       DEBCEA=ADDR(CVTBRET);       /* DUMMY CE                      */
         ST    @02,DEBCEA(,@09)                                 01S0411
*       DEBXCEA=ADDR(IAPABNAP);     /* POINT TO OUR ABNORMAL APP     */
         L     @02,@CV03167                                     01S0412
         ST    @02,DEBXCEA(,@09)                                01S0412
*       DEBXCENP=ONEPAGE;           /* FIX ONE PAGE                  */
         NI    DEBXCENP(@09),B'11110001'                        01S0413
         OI    DEBXCENP(@09),B'00000001'                        01S0413
*       DEBLNGTH=(LENGTH(DEB)+LENGTH(DEBBASIC)+LENGTH(DEBDASD))/8;/*
*                                      LENGTH DEB                    */
         MVI   DEBLNGTH(@09),X'0A'                              01S0414
*       DEBNMEXT=1;                 /* NUMBER OF EXTENTS             */
         MVI   DEBNMEXT(GPR03P),X'01'                           01S0415
*       DEBDCBAD=AP1DCBA;           /* DCB ADDRESS                   */
         L     @09,AP1DCBA(,AP1REG)                             01S0416
         ST    @09,DEBDCBAD(,GPR03P)                            01S0416
*       DEBDEBID=DEBID×TCBPKF;      /* DEBID + KEY                   */
         L     @09,CVTTCBP(,@06)                                01S0417
         L     @09,TCBPTR(,@09)                                 01S0417
         MVC   DEBDEBID(1,GPR03P),TCBPKF(@09)                   01S0417
         OI    DEBDEBID(GPR03P),X'0F'                           01S0417
*       DEBUCBAD=WRKAD(1);          /* FROM INITDEVT                 */
         LA    @06,32                                           01S0418
         ALR   @06,GPR03P                                       01S0418
         L     @02,AP1WRKA(,AP1REG)                             01S0418
         L     @02,WRKAD(,@02)                                  01S0418
         ST    @02,DEBUCBAD(,@06)                               01S0418
*       DEBTCBAD=ADDR(TCB);         /* CURRENT TCB ADDRESS           */
*                                                               01S0419
         ST    @09,DEBTCBAD(,GPR03P)                            01S0419
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP DEB EXTENTS                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0420
*       DEBSTRCC='0000'X;           /* SET FIRST CYL                 */
         MVC   DEBSTRCC(2,@06),@CB03253                         01S0420
*       DEBSTRHH='0000'X;           /* SET FIRST HEAD                */
         MVC   DEBSTRHH(2,@06),@CB03253                         01S0421
*       IF AP1DEVTP=AP13330×AP1DEVTP=AP13331 THEN/* 3330 MOD 1 OR 11 */
         CLI   AP1DEVTP(AP1REG),1                               01S0422
         BE    @RT00422                                         01S0422
         CLI   AP1DEVTP(AP1REG),2                               01S0422
         BNE   @RF00422                                         01S0422
@RT00422 DS    0H                                               01S0423
*         DO;                                                   01S0423
*           DEBENDHH=HI3330HD;      /* LAST HEAD FOR 3330S           */
         LA    @09,32                                           01S0424
         ALR   @09,GPR03P                                       01S0424
         MVC   DEBENDHH(2,@09),@CB03072                         01S0424
*           IF AP1DEVTP=AP13330 THEN/* 3330 MOD 1                    */
         CLI   AP1DEVTP(AP1REG),1                               01S0425
         BNE   @RF00425                                         01S0425
*             DEBENDCC='0193'X;     /* LAST CYL 3330 MOD 1           */
         MVC   DEBENDCC(2,@09),@CB03254                         01S0426
*           ELSE                    /* 3330 MOD 11                   */
*             DEBENDCC='0327'X;     /* LAST CYL 3330 MOD 11          */
         B     @RC00425                                         01S0427
@RF00425 MVC   DEBENDCC+32(2,GPR03P),@CB03255                   01S0427
*         END;                                                  01S0428
*       ELSE                                                    01S0429
*         ;                         /* NOT 3330 MOD 1 OR 11          */
@RF00422 DS    0H                                               01S0430
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
@RC00422 CLI   AP1DEVTP(AP1REG),3                               01S0430
         BNE   @RF00430                                         01S0430
*         DO;                                                   01S0431
*           DEBENDHH=HI3344HD;      /* LAST HEAD 3344                */
         LA    @09,32                                           01S0432
         ALR   @09,GPR03P                                       01S0432
         MVC   DEBENDHH(2,@09),@CB03128                         01S0432
*           DEBENDCC='02B7'X;       /* LAST CYL 3344                 */
         MVC   DEBENDCC(2,@09),@CB03256                         01S0433
*         END;                                                  01S0434
*       ELSE                                                    01S0435
*         ;                         /* NOT 3344                      */
@RF00430 DS    0H                                               01S0436
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0436
         BNE   @RF00436                                         01S0436
*         DO;                                                   01S0437
*           DEBENDHH=HI3350HD;      /* LAST HEAD 3350                */
         LA    @09,32                                           01S0438
         ALR   @09,GPR03P                                       01S0438
         MVC   DEBENDHH(2,@09),@CB03126                         01S0438
*           DEBENDCC='022A'X;       /* LAST CYL 3350                 */
         MVC   DEBENDCC(2,@09),@CB03257                         01S0439
*         END;                                                  01S0440
*       ELSE                                                    01S0441
*         ;                         /* NOT 3350                      */
*                                                               01S0441
@RF00436 DS    0H                                               01S0442
*       /*************************************************************/
*       /*                                                           */
*       /* PUT DEB ON DEBCHAIN                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0442
*       DEBDEBAD=TCBDEB;            /* CURRENT FIRST INTO OUR CHAIN  */
         L     @09,FLCCVT                                       01S0442
         L     @09,CVTTCBP(,@09)                                01S0442
         L     @09,TCBPTR(,@09)                                 01S0442
         L     @06,TCBDEB(,@09)                                 01S0442
         ST    @06,DEBDEBAD(,GPR03P)                            01S0442
*       RFY                                                     01S0443
*         GPR04F RSTD;                                          01S0443
*       DO;                         /* MODESET EXTKEY(TCB)      01S0444
*                                      WORKREG(GPR04F)               */
*         GPR04F=TCBPKF;            /* GET KEY FROM TCB              */
         SLR   GPR04F,GPR04F                                    01S0445
         IC    GPR04F,TCBPKF(,@09)                              01S0445
*         SPKA(GPR04F);             /* SET PSW KEY                   */
         SPKA  0(GPR04F)                                        01S0446
*       END;                        /* MODESET EXTKEY(TCB)      01S0447
*                                      WORKREG(GPR04F) USER KEY      */
*       RFY                                                     01S0448
*         GPR04F UNRSTD;                                        01S0448
*       AP1DEBA=GPR03P;             /* PUT DEB ADDRESS IN AP1B       */
         ST    GPR03P,AP1DEBA(,AP1REG)                          01S0449
*       RFY                                                     01S0450
*         DEBBASIC;                 /* ADDRESS FROM AP1DEBAD         */
*       RFY                                                     01S0451
*         GPR03P UNRSTD;                                        01S0451
*       DO;                         /* MODESET KEY(ZERO)             */
*         I10701='00000000'B;       /* OR MASK                       */
         MVI   I10701,B'00000000'                               01S0453
*         I10702='00000000'B;       /* AND MASK                      */
         MVI   I10702,B'00000000'                               01S0454
*         I10703='00000000'B;       /* RESERVED                      */
         MVI   I10703,B'00000000'                               01S0455
*         I10704='00110000'B;                                   01S0456
         MVI   I10704,B'00110000'                               01S0456
*         RESPECIFY                                             01S0457
*           GPR01F RESTRICTED;                                  01S0457
*         GPR01F=I107;              /* MODESET PARMLIST              */
         L     GPR01F,I107                                      01S0458
*         SVC(107);                 /* ISSUE MODESET SVC             */
         SVC   107                                              01S0459
*         RESPECIFY                                             01S0460
*          (GPR01F) UNRESTRICTED;                               01S0460
*       END;                        /* MODESET KEY(ZERO) KEY 0 FOR
*                                      TCB                           */
*HANGDEB:                                                       01S0462
*       ;                           /* FOR CS LOOP                   */
HANGDEB  DS    0H                                               01S0463
*       CS(DEBDEBAD,AP1DEBA,TCBDEB);/* PUT OUR ADDR INTO TCB         */
         L     @09,AP1DEBA(,AP1REG)                             01S0463
         L     @06,DEBDEBAD(,@09)                               01S0463
         LR    @15,@09                                          01S0463
         L     @14,FLCCVT                                       01S0463
         L     @14,CVTTCBP(,@14)                                01S0463
         L     @14,TCBPTR(,@14)                                 01S0463
         CS    @06,@15,TCBDEB(@14)                              01S0463
         BZ    @BC00463                                         01S0463
         ST    @06,DEBDEBAD(,@09)                               01S0463
@BC00463 DS    0H                                               01S0464
*       BC(7,HANGDEB);              /* LOOP IF FIRST DEB CHANGED     */
         BC    7,HANGDEB                                        01S0464
*       DO;                         /* MODESET KEY(NZERO)            */
*         I10701='00000000'B;       /* OR MASK                       */
         MVI   I10701,B'00000000'                               01S0466
*         I10702='00000000'B;       /* AND MASK                      */
         MVI   I10702,B'00000000'                               01S0467
*         I10703='00000000'B;       /* RESERVED                      */
         MVI   I10703,B'00000000'                               01S0468
*         I10704='00100000'B;                                   01S0469
         MVI   I10704,B'00100000'                               01S0469
*         RESPECIFY                                             01S0470
*           GPR01F RESTRICTED;                                  01S0470
*         GPR01F=I107;              /* MODESET PARMLIST              */
         L     GPR01F,I107                                      01S0471
*         SVC(107);                 /* ISSUE MODESET SVC             */
         SVC   107                                              01S0472
*         RESPECIFY                                             01S0473
*          (GPR01F) UNRESTRICTED;                               01S0473
*       END;                        /* MODESET KEY(NZERO) USER KEY   */
*       AP1LSTCC=DEBENDCC;          /* SAVE LAST CYL NUMBER          */
         L     @09,AP1DEBA(,AP1REG)                             01S0475
         LA    @06,32                                           01S0475
         ALR   @06,@09                                          01S0475
         LH    @15,DEBENDCC(,@06)                               01S0475
         N     @15,@CF03868                                     01S0475
         STH   @15,AP1LSTCC(,AP1REG)                            01S0475
*       AP1LSTHH=DEBENDHH;          /* SAVE LAST HEAD                */
*                                                               01S0476
         LH    @06,DEBENDHH(,@06)                               01S0476
         N     @06,@CF03868                                     01S0476
         STH   @06,AP1LSTHH(,AP1REG)                            01S0476
*       /*************************************************************/
*       /*                                                           */
*       /* ALTER DCB FIELDS                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0477
*       DCBDEBAD=AP1DEBA;           /* POINT DCB TO DEB              */
         L     @06,AP1DCBA(,AP1REG)                             01S0477
         LA    @15,40                                           01S0477
         ALR   @15,@06                                          01S0477
         ST    @09,DCBDEBAD(,@15)                               01S0477
*       DCBIFLGS=DCBIFLG;           /* I-FLGS                        */
         MVC   DCBIFLGS(1,@15),DCBIFLG(@15)                     01S0478
*       DCBTIOT=0;                  /* CLEAR                         */
         SLR   @09,@09                                          01S0479
         STH   @09,DCBTIOT(,@15)                                01S0479
*       DCBMACRF=DCBMACR;           /* MACRF                         */
*                                                               01S0480
         MVC   DCBMACRF(2,@15),DCBMACR(@15)                     01S0480
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE DEBCHK ADD                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0481
*       RFY                                                     01S0481
*        (GPR01P) RSTD;                                         01S0481
*       GPR01P=AP1DCBA;             /* DCB ADDRESS                   */
         LR    GPR01P,@06                                       01S0482
*       RFY                                                     01S0483
*         GPR01P UNRSTD;                                        01S0483
*       GENERATE;                                               01S0484
         DEBCHK (GPR01P),TYPE=ADD,AM=EXCP ADD DEB
*       RFY                                                     01S0485
*         GPR15F RSTD;                                          01S0485
*       IF GPR15F^=0 THEN           /* DEBCHK ADD FAILED             */
         LTR   GPR15F,GPR15F                                    01S0486
         BZ    @RF00486                                         01S0486
*         DO;                                                   01S0487
*           RFY                                                 01S0488
*             GPR15F UNRSTD;                                    01S0488
*           AP1CNCOD=MUTO;          /* SETUP FOR OPEN FAILED MSG     */
         MVI   AP1CNCOD(AP1REG),X'0D'                           01S0489
*           CALL COMM;              /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0490
*           RFY                                                 01S0491
*             GPR15F RSTD;                                      01S0491
*           AP1QUIT=ON;             /* BYPASS TESTS                  */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0492
*         END;                                                  01S0493
*       ELSE                        /* DEBCHK ADD OK                 */
*         AP1DEBCH=ON;              /* DEB CHAINED AND DEBCHK ADDED  */
         B     @RC00486                                         01S0494
@RF00486 OI    AP1DEBCH(AP1REG),B'00100000'                     01S0494
*       RFY                                                     01S0495
*         GPR15F UNRSTD;                                        01S0495
@RC00486 DS    0H                                               01S0496
*       IF AP1QUIT=ON THEN                                      01S0496
         TM    AP1QUIT(AP1REG),B'00001000'                      01S0496
         BO    @RT00496                                         01S0496
*         ;                         /* ERROR ALLREADY--DONT CONTINUE */
*       ELSE                        /* NO ERROR FOUND SO FAR         */
*         DO;                                                   01S0498
*                                                               01S0498
*           /*********************************************************/
*           /*                                                       */
*           /* ATTACH TIMER SUBTASK                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0499
*           AP1TCBAD=TCBPTR;        /* OUR TCB FOR SUBTASK           */
         L     @09,FLCCVT                                       01S0499
         L     @09,CVTTCBP(,@09)                                01S0499
         L     @09,TCBPTR(,@09)                                 01S0499
         ST    @09,AP1TCBAD(,AP1REG)                            01S0499
*           DO;                     /* ATTACH EP(IAPTIMER) DPMOD(-1)
*                                      PARAM(AP1BLOCK) TCB(AP1TIMEA) */
*             I042=I042&&I042;      /* ZERO THE LIST                 */
         XC    I042(60),I042                                    01S0501
*             I04202=ADDR(IAPTIMER);/* EP/DE ADDRESS                 */
         LA    @09,IAPTIMER                                     01S0502
         STCM  @09,7,I04202                                     01S0502
*             I04216=' ';           /* DE OR ENTRY POINT ADDRESS
*                                      GIVEN                         */
         MVI   I04216+1,C' '                                    01S0503
         MVC   I04216+2(6),I04216+1                             01S0503
         MVI   I04216,C' '                                      01S0503
*             I04205=I04205×'00001000'B;/* STATUS BYTE               */
         LA    @09,8                                            01S0504
         SLR   @06,@06                                          01S0504
         IC    @06,I04205                                       01S0504
         OR    @09,@06                                          01S0504
         STC   @09,I04205                                       01S0504
*             I04213=-1;            /* ADJUST DISPATCHING PRIORITY   */
         MVC   I04213(2),@CH03240                               01S0505
*             IOPTLIST(1)=ADDR(AP1BLOCK);/* PROBLEM PROGRAM PARAMETER
*                                      ADDRESS                       */
         ST    AP1REG,IOPTLIST                                  01S0506
*             IOPTLIST(1)=IOPTLIST(1)×'80000000'X;/* INDICATE END OF
*                                      LIST                          */
         L     @09,IOPTLIST                                     01S0507
         O     @09,@CF03272                                     01S0507
         ST    @09,IOPTLIST                                     01S0507
*             I04226=LENGTH(I042);  /* LENGTH OF LIST                */
         MVC   I04226(2),@CH00135                               01S0508
*             RFY                                               01S0509
*              (GPR01P,                                         01S0509
*               GPR15P) RSTD;                                   01S0509
*             GPR01P=ADDR(IOPTLIST);/* PROBLEM PROGRAM LIST ADDRESS  */
         LA    GPR01P,IOPTLIST                                  01S0510
*             GPR15P=ADDR(I042);    /* ATTACH LIST ADDRESS           */
         LA    GPR15P,I042                                      01S0511
*             SVC(42);              /* ATTACH SVC                    */
         SVC   42                                               01S0512
*             AP1TIMEA=GPR01P;      /* SAVE NEW TCB ADDRESS          */
         ST    GPR01P,AP1TIMEA(,AP1REG)                         01S0513
*             RFY                                               01S0514
*              (GPR01P,                                         01S0514
*               GPR15P) UNRSTD;                                 01S0514
*           END;                    /* ATTACH EP(IAPTIMER) DPMOD(-1)
*                                      PARAM(AP1BLOCK) TCB(AP1TIMEA) */
*         END;                                                  01S0516
*     END;                                                      01S0517
@RT00496 DS    0H                                               01S0518
*   IF AP1QUIT=OFF THEN             /* OK - SO FAR                   */
@RT00380 TM    AP1QUIT(AP1REG),B'00001000'                      01S0518
         BNZ   @RF00518                                         01S0518
*     DO;                                                       01S0519
*       AP1CNCOD=MBTS;              /* SETUP FOR STARTED MESSAGE     */
         MVI   AP1CNCOD(AP1REG),X'02'                           01S0520
*       CALL COMM;                  /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0521
*     END;                                                      01S0522
*   ELSE                                                        01S0523
*     ;                             /* ERROR ENCOUNTERED             */
*                                                               01S0523
@RF00518 DS    0H                                               01S0524
*   /*****************************************************************/
*   /*                                                               */
*   /* HARDWARE TEST ROUTINE. IT CALLS IAPBLDIO WHICH, BASED ON      */
*   /* AP1TSTNO, BUILDS A CCW CHAIN. IF IT DETECTS A TIMEOUT, IT SETS*/
*   /* AP1ERROR AND AP1QUIT TO STOP FURTHER TESTING. IT CALLS        */
*   /* IAPCHKIO TO SEE IF TEST COMPLETED CORRECTLY. IF IAPCHKIO      */
*   /* RETURNS WITH AP1PRERR ON, IT PRINTS (CCW,CSW AND SNS). IF THE */
*   /* HEAD ERROR TABLES HAVE ENTRIES, IT FORMATS AND PRINTS THEM. IF*/
*   /* AP1QUIT OR AP1LST IS TURNED ON BY A HDWE TST, IT RETURNS.     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0524
*   AP1TSTNO=1;                     /* INITIALIZE TEST NUMBER        */
         MVI   AP1TSTNO(AP1REG),X'01'                           01S0524
*   DO WHILE AP1LST=OFF&AP1QUIT=OFF;/* UNITL LAST HDWE TEST HAS BEEN
*                                      EXECUTED OR ONE OF THE HDWE
*                                      TESTS HAS REQUESTED THAT NO
*                                      MORE BE RUN                   */
*                                                               01S0525
         B     @DE00525                                         01S0525
@DL00525 DS    0H                                               01S0526
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD CCW CHAINS AND SETUP FOR I/O                          */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0526
*     CALL IAPBLDIO;                /* BUILD CCWS BASED ON AP1TSTNO  */
*                                                               01S0526
         L     @15,@CV03168                                     01S0526
         BALR  @14,@15                                          01S0526
*     /***************************************************************/
*     /*                                                             */
*     /* DO THE I/O                                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0527
*     CALL IO;                      /* GO DO I/O                     */
*                                                               01S0527
         BAL   @14,IO                                           01S0527
*     /***************************************************************/
*     /*                                                             */
*     /* TEST I/O RETURN CODE                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0528
*     IF AP1PCODE=TIMC&AP1TSTNO^=1 THEN/* DEVICE NEVER RESPONDED TO
*                                      SIO-- NOT FIRST RECAL TEST    */
*                                                               01S0528
         CLI   AP1PCODE(AP1REG),X'48'                           01S0528
         BNE   @RF00528                                         01S0528
         CLI   AP1TSTNO(AP1REG),1                               01S0528
         BE    @RF00528                                         01S0528
*       /*************************************************************/
*       /*                                                           */
*       /* I/O ROUTINE TIMED OUT                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0529
*       DO;                                                     01S0529
*         AP1CNCOD=MDDR;            /* SETUP FOR TIMED OUT MESSAGE   */
         MVI   AP1CNCOD(AP1REG),X'09'                           01S0530
*         CALL COMM;                /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0531
*       END;                                                    01S0532
*     ELSE                                                      01S0533
*       ;                           /* I/O FINISHED                  */
*                                                               01S0533
@RF00528 DS    0H                                               01S0534
*     /***************************************************************/
*     /*                                                             */
*     /* TEST STATUS                                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0534
*     CALL IAPCHKIO;                /* CHECK STATUS OF TESTS         */
         L     @15,@CV03169                                     01S0534
         BALR  @14,@15                                          01S0534
*     IF AP1CNCOD^=0 THEN           /* CHECK HAD A CONSOLE MESSAGE   */
         CLI   AP1CNCOD(AP1REG),0                               01S0535
         BE    @RF00535                                         01S0535
*       CALL COMM;                  /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0536
*     ELSE                                                      01S0537
*       ;                           /* CHECK HAD NO CONSOLE MESSAGE  */
@RF00535 DS    0H                                               01S0538
*     IF AP1PRERR=ON THEN           /* ERROR OCCURED--PRINT STATUS   */
         TM    AP1PRERR(AP1REG),B'00010000'                     01S0538
         BNO   @RF00538                                         01S0538
*       DO;                                                     01S0539
*         CALL COMM;                /* PRINT TEST ID                 */
         BAL   @14,COMM                                         01S0540
*         CALL PRTCCW;              /* PRINT CCW, CSW, SNS           */
         BAL   @14,PRTCCW                                       01S0541
*         AP1PRERR=OFF;             /* STATUS PRINTED                */
         NI    AP1PRERR(AP1REG),B'11101111'                     01S0542
*       END;                                                    01S0543
*     ELSE                                                      01S0544
*       ;                           /* NO ERROR                      */
@RF00538 DS    0H                                               01S0545
*   END;                            /* DO WHILE                      */
*                                                               01S0545
@DE00525 TM    AP1LST(AP1REG),B'01001000'                       01S0545
         BZ    @DL00525                                         01S0545
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT MOVEABLE HEAD MATRIX                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0546
*   AP1WRKA->BYTE30=AP1WRKA->BYTE30&&AP1WRKA->BYTE30;/* CLEAR WORK
*                                      AREA FOR COMPARE              */
         L     @09,AP1WRKA(,AP1REG)                             01S0546
         XC    BYTE30(30,@09),BYTE30(@09)                       01S0546
*   IF AP1ERRTM^=AP1WRKA->BYTE30 THEN/* SOMETHING IN MOVEABLE HD TBL */
         CLC   AP1ERRTM(30,AP1REG),BYTE30(@09)                  01S0547
         BE    @RF00547                                         01S0547
*     DO;                                                       01S0548
*       AP1PRNP=ON;                 /* GO TO NEW PAGE                */
         OI    AP1PRNP(AP1REG),B'01000000'                      01S0549
*       CALL COMM;                  /* GO TO NEW PAGE                */
         BAL   @14,COMM                                         01S0550
*       AP1PRCOD=PMH1;                                          01S0551
         MVI   AP1PRCOD(AP1REG),X'01'                           01S0551
*       CALL COMM;                  /* PRINT TABLE NAME              */
         BAL   @14,COMM                                         01S0552
*       AP1PRCOD=PMH2;                                          01S0553
         MVI   AP1PRCOD(AP1REG),X'02'                           01S0553
*       CALL COMM;                  /* PRINT COLUMN HEADERS--LINE 1  */
         BAL   @14,COMM                                         01S0554
*       AP1PRCOD=PMH3;                                          01S0555
         MVI   AP1PRCOD(AP1REG),X'03'                           01S0555
*       CALL COMM;                  /* PRINT COLUMN HEADERS--LINE 2  */
         BAL   @14,COMM                                         01S0556
*       AP1ETABA=ADDR(AP1ERRTM);    /* POINT TO HD 0 ENTRY           */
         LA    @09,AP1ERRTM(,AP1REG)                            01S0557
         ST    @09,AP1ETABA(,AP1REG)                            01S0557
*       DO COUNTER=0 TO HI3350HD;   /* 30 HDS                        */
         SLR   COUNTER,COUNTER                                  01S0558
@DL00558 DS    0H                                               01S0559
*         CVD(COUNTER,WRKAREA(1));  /* CNVT HEAD NO TO DEC           */
         L     @06,AP1WRKA(,AP1REG)                             01S0559
         CVD   COUNTER,@TS00001                                 01S0559
         MVC   WRKAREA(4,@06),@TS00001+4                        01S0559
*         UNPK(AP1PRMSG(11:12),WRKAREA(1));/* UNPACK                 */
         UNPK  AP1PRMSG+10(2,AP1REG),WRKAREA(4,@06)             01S0560
*         AP1PRMSG(12)=AP1PRMSG(12)×ZONE;/* SET ZONE                 */
         OI    AP1PRMSG+11(AP1REG),X'F0'                        01S0561
*         IF DCK=ON THEN            /* DATA CHECK                    */
         L     @06,AP1ETABA(,AP1REG)                            01S0562
         TM    DCK(@06),B'10000000'                             01S0562
         BNO   @RF00562                                         01S0562
*           AP1PRMSG(23)='1';       /* SET IN TABLE                  */
         MVI   AP1PRMSG+22(AP1REG),C'1'                         01S0563
*         ELSE                                                  01S0564
*           ;                                                   01S0564
@RF00562 DS    0H                                               01S0565
*         IF SKVERCK=ON THEN        /* SEEK VERIFY CHECK             */
         L     @06,AP1ETABA(,AP1REG)                            01S0565
         TM    SKVERCK(@06),B'01000000'                         01S0565
         BNO   @RF00565                                         01S0565
*           AP1PRMSG(36)='1';       /* SET IN TABLE                  */
         MVI   AP1PRMSG+35(AP1REG),C'1'                         01S0566
*         ELSE                                                  01S0567
*           ;                                                   01S0567
@RF00565 DS    0H                                               01S0568
*         IF WRTCK=ON THEN          /* WRITE ERROR                   */
         L     @06,AP1ETABA(,AP1REG)                            01S0568
         TM    WRTCK(@06),B'00100000'                           01S0568
         BNO   @RF00568                                         01S0568
*           AP1PRMSG(49)='1';       /* SET IN TABLE                  */
         MVI   AP1PRMSG+48(AP1REG),C'1'                         01S0569
*         ELSE                                                  01S0570
*           ;                                                   01S0570
@RF00568 DS    0H                                               01S0571
*         IF DCKCE=ON THEN          /* DATA CHECK ON CE CYL          */
         L     @06,AP1ETABA(,AP1REG)                            01S0571
         TM    DCKCE(@06),B'00010000'                           01S0571
         BNO   @RF00571                                         01S0571
*           AP1PRMSG(61)='1';       /* SET IN TABLE                  */
         MVI   AP1PRMSG+60(AP1REG),C'1'                         01S0572
*         ELSE                                                  01S0573
*           ;                                                   01S0573
@RF00571 DS    0H                                               01S0574
*         IF DATACOMP=ON THEN       /* DATA COMPARE ERROR            */
         L     @06,AP1ETABA(,AP1REG)                            01S0574
         TM    DATACOMP(@06),B'00001000'                        01S0574
         BNO   @RF00574                                         01S0574
*           AP1PRMSG(73)='1';       /* SET IN TABLE                  */
         MVI   AP1PRMSG+72(AP1REG),C'1'                         01S0575
*         ELSE                                                  01S0576
*           ;                                                   01S0576
@RF00574 DS    0H                                               01S0577
*         CALL COMM;                /* PRINT ENTRY FOR THIS HEAD     */
         BAL   @14,COMM                                         01S0577
*         AP1ETABA=AP1ETABA+1;      /* POINT TO NEXT HEAD ENTRY      */
         LA    @06,1                                            01S0578
         AL    @06,AP1ETABA(,AP1REG)                            01S0578
         ST    @06,AP1ETABA(,AP1REG)                            01S0578
*       END;                        /* OF DO COUNTER                 */
         AL    COUNTER,@CF00045                                 01S0579
         C     COUNTER,@CF03126                                 01S0579
         BNH   @DL00558                                         01S0579
*     END;                          /* OF DO                         */
*   ELSE                                                        01S0581
*     ;                             /* NO MOVEABLE HEAD ERRORS       */
*                                                               01S0581
@RF00547 DS    0H                                               01S0582
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT FIXED HEAD MATRIX                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0582
*   AP1WRKA->BYTE60=AP1WRKA->BYTE60&&AP1WRKA->BYTE60;/* CLEAR WORK
*                                      AREA FOR COMPARE              */
         L     @09,AP1WRKA(,AP1REG)                             01S0582
         XC    BYTE60(60,@09),BYTE60(@09)                       01S0582
*   IF AP1ERRTF^=AP1WRKA->BYTE60 THEN/* SOMETHING IN FIXED HEAD TABLE*/
         CLC   AP1ERRTF(60,AP1REG),BYTE60(@09)                  01S0583
         BE    @RF00583                                         01S0583
*     DO;                                                       01S0584
*       AP1PRNP=ON;                 /* GO TO NEW PAGE                */
         OI    AP1PRNP(AP1REG),B'01000000'                      01S0585
*       CALL COMM;                  /* GO TO NEW PAGE                */
         BAL   @14,COMM                                         01S0586
*       AP1PRCOD=PFH1;                                          01S0587
         MVI   AP1PRCOD(AP1REG),X'04'                           01S0587
*       CALL COMM;                  /* PRINT TABLE NAME              */
         BAL   @14,COMM                                         01S0588
*       AP1PRCOD=PFH2;                                          01S0589
         MVI   AP1PRCOD(AP1REG),X'05'                           01S0589
*       CALL COMM;                  /* PRINT COLUMN HEADERS--LINE 1  */
         BAL   @14,COMM                                         01S0590
*       AP1PRCOD=PFH3;                                          01S0591
         MVI   AP1PRCOD(AP1REG),X'06'                           01S0591
*       CALL COMM;                  /* PRINT COLUMN HEADERS--LINE 2  */
         BAL   @14,COMM                                         01S0592
*       AP1ETABA=ADDR(AP1ERRTF);    /* POINT TO ERROR TABLE          */
         LA    @09,AP1ERRTF(,AP1REG)                            01S0593
         ST    @09,AP1ETABA(,AP1REG)                            01S0593
*       DO COUNTER=0 TO HI3350HD;   /* 29 PAIRS OF HEADS             */
         SLR   COUNTER,COUNTER                                  01S0594
@DL00594 DS    0H                                               01S0595
*         CVD(COUNTER,WRKAREA(1));  /* CNVT HEAD NO TO DEC           */
         L     @06,AP1WRKA(,AP1REG)                             01S0595
         CVD   COUNTER,@TS00001                                 01S0595
         MVC   WRKAREA(4,@06),@TS00001+4                        01S0595
*         UNPK(AP1PRMSG(11:12),WRKAREA(1));/* UNPACK                 */
         UNPK  AP1PRMSG+10(2,AP1REG),WRKAREA(4,@06)             01S0596
*         AP1PRMSG(12)=AP1PRMSG(12)×ZONE;/* SET ZONE                 */
         OI    AP1PRMSG+11(AP1REG),X'F0'                        01S0597
*         COUNTER2=COUNTER+(HI3350HD+1);/* INCR TO 2ND SET           */
         LA    COUNTER2,30                                      01S0598
         ALR   COUNTER2,COUNTER                                 01S0598
*         CVD(COUNTER2,WRKAREA(1)); /* CNVT HEAD NO TO DEC           */
         CVD   COUNTER2,@TS00001                                01S0599
         MVC   WRKAREA(4,@06),@TS00001+4                        01S0599
*         UNPK(AP1PRMSG(50:51),WRKAREA(1));/* UNPACK                 */
         UNPK  AP1PRMSG+49(2,AP1REG),WRKAREA(4,@06)             01S0600
*         AP1PRMSG(51)=AP1PRMSG(51)×ZONE;/* SET ZONE                 */
         OI    AP1PRMSG+50(AP1REG),X'F0'                        01S0601
*         IF DCK=ON THEN            /* DATA CHECK ON LOW HEAD        */
         L     @06,AP1ETABA(,AP1REG)                            01S0602
         TM    DCK(@06),B'10000000'                             01S0602
         BNO   @RF00602                                         01S0602
*           AP1PRMSG(25)='1';       /* PUT IN TABLE                  */
         MVI   AP1PRMSG+24(AP1REG),C'1'                         01S0603
*         ELSE                                                  01S0604
*           ;                                                   01S0604
@RF00602 DS    0H                                               01S0605
*         IF SKVERCK=ON THEN        /* SEEK VER CHK ON LOW HEAD      */
         L     @06,AP1ETABA(,AP1REG)                            01S0605
         TM    SKVERCK(@06),B'01000000'                         01S0605
         BNO   @RF00605                                         01S0605
*           AP1PRMSG(38)='1';       /* PUT IN TABLE                  */
         MVI   AP1PRMSG+37(AP1REG),C'1'                         01S0606
*         ELSE                                                  01S0607
*           ;                                                   01S0607
@RF00605 DS    0H                                               01S0608
*         IF(AP1ETABA+30)->DCK=ON THEN/* DATA CHK ON HI HEAD         */
         L     @06,AP1ETABA(,AP1REG)                            01S0608
         TM    DCK+30(@06),B'10000000'                          01S0608
         BNO   @RF00608                                         01S0608
*           AP1PRMSG(64)='1';       /* PUT IN TABLE                  */
         MVI   AP1PRMSG+63(AP1REG),C'1'                         01S0609
*         ELSE                                                  01S0610
*           ;                                                   01S0610
@RF00608 DS    0H                                               01S0611
*         IF(AP1ETABA+30)->SKVERCK=ON THEN/* SEEK VER CHK ON HI HEAD */
         L     @06,AP1ETABA(,AP1REG)                            01S0611
         TM    SKVERCK+30(@06),B'01000000'                      01S0611
         BNO   @RF00611                                         01S0611
*           AP1PRMSG(77)='1';       /* PUT IN TABLE                  */
         MVI   AP1PRMSG+76(AP1REG),C'1'                         01S0612
*         ELSE                                                  01S0613
*           ;                                                   01S0613
@RF00611 DS    0H                                               01S0614
*         CALL COMM;                /* PRINT ENTRY FOR THESE HEADS   */
         BAL   @14,COMM                                         01S0614
*         AP1ETABA=AP1ETABA+1;      /* POINT TO NEXT HEAD ENTRIES    */
         LA    @06,1                                            01S0615
         AL    @06,AP1ETABA(,AP1REG)                            01S0615
         ST    @06,AP1ETABA(,AP1REG)                            01S0615
*       END;                        /* OF DO COUNTER                 */
         AL    COUNTER,@CF00045                                 01S0616
         C     COUNTER,@CF03126                                 01S0616
         BNH   @DL00594                                         01S0616
*     END;                          /* OF DO                         */
*   ELSE                                                        01S0618
*     ;                             /* FIXED HEAD TABLE EMPTY        */
*                                                               01S0618
@RF00583 DS    0H                                               01S0619
*   /*****************************************************************/
*   /*                                                               */
*   /* WTO A MESSAGE INDICATING THE RESULTS OF THE HARDWARE TESTS    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0619
*   IF AP1ERROR=ON THEN             /* ERROR DETECTED BY HDWE TEST   */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0619
         BNO   @RF00619                                         01S0619
*     DO;                                                       01S0620
*       AP1RET=AP1ERRET;            /* SET RETURN CODE TO ERROR FOUND*/
         MVI   AP1RET(AP1REG),X'08'                             01S0621
*       AP1CNCOD=MSDP;              /* SETUP FOR 'DRIVE PROB' MSG    */
         MVI   AP1CNCOD(AP1REG),X'03'                           01S0622
*       CALL COMM;                  /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0623
*     END;                                                      01S0624
*   ELSE                            /* NO ERRORS--GO TO READ PORTION */
*     IF AP1QUIT=OFF THEN           /* TEST FINISHED WITH NO ERRORS  */
         B     @RC00619                                         01S0625
@RF00619 TM    AP1QUIT(AP1REG),B'00001000'                      01S0625
         BNZ   @RF00625                                         01S0625
*       DO;                                                     01S0626
*         AP1CNCOD=MNDP;            /* SETUP FOR NO HDWE PROBLEM MSG */
         MVI   AP1CNCOD(AP1REG),X'0A'                           01S0627
*         CALL COMM;                /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0628
*       END;                                                    01S0629
*     ELSE                          /* UNABLE TO TEST--MSG ALREADY
*                                      ISSUED                        */
*       AP1RET=AP1QRET;             /* SET RETURN CODE UNABLE TO TEST*/
*                                                               01S0630
         B     @RC00625                                         01S0630
@RF00625 MVI   AP1RET(AP1REG),X'0C'                             01S0630
*   /*****************************************************************/
*   /*                                                               */
*   /* READ TESTING -DO IF NO DRIVE PROBLEMS AND IF OPERATOR REQUESTS*/
*   /* IT EITHER BY PARM OR REPLY TO WTOR                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0631
*   IF AP1QUIT=OFF&AP1NORD=OFF&AP1ERROR=OFF THEN/* NO HDWE BUGS AND
*                                      PARM^=NOREAD                  */
@RC00625 DS    0H                                               01S0631
@RC00619 TM    AP1QUIT(AP1REG),B'00001000'                      01S0631
         BNZ   @RF00631                                         01S0631
         TM    AP1NORD(AP1REG),B'10000000'                      01S0631
         BNZ   @RF00631                                         01S0631
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0631
         BNZ   @RF00631                                         01S0631
*     IF AP1READ=ON THEN            /* PARM=READ                     */
         TM    AP1READ(AP1REG),B'01000000'                      01S0632
         BNO   @RF00632                                         01S0632
*       AP1VERIF=ON;                /* DO VERIFY TEST                */
         OI    AP1VERIF(AP1REG),B'00000100'                     01S0633
*     ELSE                          /* PARM=CONS OR NOT SPECIFIED    */
*       DO;                                                     01S0634
         B     @RC00632                                         01S0634
@RF00632 DS    0H                                               01S0635
*         DO WHILE AP1CNRPL^='YES '&AP1CNRPL^='NO  ';           01S0635
         B     @DE00635                                         01S0635
@DL00635 DS    0H                                               01S0636
*           AP1CNCOD=MDVQ;          /* SETUP FOR 'DATA VERIF' MSG    */
         MVI   AP1CNCOD(AP1REG),X'01'                           01S0636
*           AP1CNRPL='    ';        /* CLEAR REPLY AREA              */
         MVC   AP1CNRPL(4,AP1REG),@CC03243                      01S0637
*           CALL COMM;              /* SEND MSG TO CONSOLE AND WAIT
*                                      FOR REPLY                     */
         BAL   @14,COMM                                         01S0638
*         END;                      /* OF DO WHILE                   */
@DE00635 CLC   AP1CNRPL(4,AP1REG),@CC03285                      01S0639
         BE    @DC00635                                         01S0639
         CLC   AP1CNRPL(4,AP1REG),@CC03286                      01S0639
         BNE   @DL00635                                         01S0639
@DC00635 DS    0H                                               01S0640
*         IF AP1CNRPL='YES ' THEN   /* OPERATOR WANTS DATA VERIF     */
         CLC   AP1CNRPL(4,AP1REG),@CC03285                      01S0640
         BNE   @RF00640                                         01S0640
*           AP1VERIF=ON;            /* DO VERIFY TESTS               */
         OI    AP1VERIF(AP1REG),B'00000100'                     01S0641
*         ELSE                                                  01S0642
*           ;                       /* OPERATOR DOESNT WANT VERIFY   */
@RF00640 DS    0H                                               01S0643
*       END;                                                    01S0643
*   ELSE                                                        01S0644
*     ;                             /* HARDWARE ERROR OR PARM=NODATA */
@RF00631 DS    0H                                               01S0645
*   IF AP1VERIF=ON THEN             /* DO READ VERIFY TESTS          */
@RC00631 TM    AP1VERIF(AP1REG),B'00000100'                     01S0645
         BNO   @RF00645                                         01S0645
*     DO;                                                       01S0646
*       AP1CNCOD=MDVS;              /* SET UP VERIFY STARTED         */
         MVI   AP1CNCOD(AP1REG),X'0F'                           01S0647
*       CALL COMM;                  /* SEND MSG TO CONSOLE           */
*                                                               01S0648
         BAL   @14,COMM                                         01S0648
*       /*************************************************************/
*       /*                                                           */
*       /* DATA VERIFICATION ROUTINE. THIS ROUTINE BUILDS THE CCW    */
*       /* CHAINS TO VERIFY THE DATA. IF AN ERROR IS DETECTED, IT    */
*       /* SETS AP1ERROR AND PRINTS ERROR INFORMATION.               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0649
*                                                               01S0649
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE FOR FIRST READ PASS                            */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0649
*       AP1RDTST=ON;                /* USE ERP'S                     */
*       AP1LST=OFF;                 /* RESET INDICATOR               */
         OI    AP1RDTST(AP1REG),B'00000010'                     01S0650
         NI    AP1LST(AP1REG),B'10111111'                       01S0650
*       AP1FM=READFM;               /* SET FILEMODE TO READ ONLY     */
         MVC   AP1FM(1,AP1REG),READFM                           01S0651
*       AP1SEEK=AP1SEEK&&AP1SEEK;   /* SET SEEK TO CYL 0, HD 0       */
*                                                               01S0652
         XC    AP1SEEK(8,AP1REG),AP1SEEK(AP1REG)                01S0652
*       /*************************************************************/
*       /*                                                           */
*       /* GET INTO DEB KEY TO SET DEBENDCC TO ZERO                  */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0653
*       DO;                         /* MODESET EXTKEY(DATAMGT)       */
*         SPKA(80);                 /* SET PSW KEY                   */
         LA    @09,80                                           01S0654
         SPKA  0(@09)                                           01S0654
*       END;                        /* MODESET EXTKEY(DATAMGT) DATA
*                                      MGT KEY                       */
*       DEBENDCC=0;                 /* READ FIRST CYLINDER           */
         L     @09,AP1DEBA(,AP1REG)                             01S0656
         SLR   @06,@06                                          01S0656
         STH   @06,DEBENDCC+32(,@09)                            01S0656
*       RFY                                                     01S0657
*         GPR04F RSTD;                                          01S0657
*       DO;                         /* MODESET EXTKEY(TCB)      01S0658
*                                      WORKREG(GPR04F)               */
*         GPR04F=TCBPKF;            /* GET KEY FROM TCB              */
         L     @09,FLCCVT                                       01S0659
         L     @09,CVTTCBP(,@09)                                01S0659
         L     @09,TCBPTR(,@09)                                 01S0659
         SLR   GPR04F,GPR04F                                    01S0659
         IC    GPR04F,TCBPKF(,@09)                              01S0659
*         SPKA(GPR04F);             /* SET PSW KEY                   */
         SPKA  0(GPR04F)                                        01S0660
*       END;                        /* MODESET EXTKEY(TCB)      01S0661
*                                      WORKREG(GPR04F) USER KEY      */
*       RFY                                                     01S0662
*         GPR04F UNRSTD;                                        01S0662
*                                                               01S0662
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE DATA CHECK COUNTER TO NUMBER OF ALTERNATES +1  */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0663
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0663
         BNE   @RF00663                                         01S0663
*         AP1DCCNT=151;             /* SET COUNTER TO ALTERNATES + 1 */
         MVI   AP1DCCNT(AP1REG),X'97'                           01S0664
*       ELSE                        /* NOT 3350                      */
*         IF AP1DEVTP=AP13344 THEN  /* 3340                          */
         B     @RC00663                                         01S0665
@RF00663 CLI   AP1DEVTP(AP1REG),3                               01S0665
         BNE   @RF00665                                         01S0665
*           AP1DCCNT=25;            /* SET COUNTER TO ALTERNATES + 1 */
         MVI   AP1DCCNT(AP1REG),X'19'                           01S0666
*         ELSE                      /* 3330 OR 3330-11               */
*           AP1DCCNT=134;           /* SET COUNTER TO ALTERNATES + 1 */
*                                                               01S0667
         B     @RC00665                                         01S0667
@RF00665 MVI   AP1DCCNT(AP1REG),X'86'                           01S0667
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD FIRST CCW CHAIN                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0668
*       CALL READBLD1;              /* BUILD CCW CHAIN 1             */
*                                                               01S0668
@RC00665 DS    0H                                               01S0668
@RC00663 BAL   @14,READBLD1                                     01S0668
*       /*************************************************************/
*       /*                                                           */
*       /* BEGIN READ PASS                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0669
*       DO WHILE AP1QUIT=OFF&AP1LST=OFF;/* BEGIN FIRST READ PASS     */
*                                                               01S0669
         B     @DE00669                                         01S0669
@DL00669 DS    0H                                               01S0670
*         /***********************************************************/
*         /*                                                         */
*         /* DO THE I/O                                              */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0670
*         CALL IO;                  /* GO DO I/O                     */
*                                                               01S0670
         BAL   @14,IO                                           01S0670
*         /***********************************************************/
*         /*                                                         */
*         /* TEST I/O RETURN CODE                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0671
*         IF AP1PCODE=TIMC THEN     /* NO RESPONSE WITHIN TIME LIMIT */
*                                                               01S0671
         CLI   AP1PCODE(AP1REG),X'48'                           01S0671
         BNE   @RF00671                                         01S0671
*           /*********************************************************/
*           /*                                                       */
*           /* TIMED OUT                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0672
*           DO;                                                 01S0672
*             AP1CNCOD=MDDR;        /* SET UP TIMED-OUT MSG          */
         MVI   AP1CNCOD(AP1REG),X'09'                           01S0673
*             CALL COMM;            /* ISSUE MSG TO CONSOLE          */
         BAL   @14,COMM                                         01S0674
*             CALL BADATA;          /* DATA FMT UNACCEPTABLE MSG     */
         BAL   @14,BADATA                                       01S0675
*           END;                    /* END DO                        */
*         ELSE                      /* RESPONDED WITHIN TIME LIMIT   */
*           DO;                                                 01S0677
*                                                               01S0677
         B     @RC00671                                         01S0677
@RF00671 DS    0H                                               01S0678
*             /*******************************************************/
*             /*                                                     */
*             /* I/O COMPLETED--CHECK STATUS                         */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0678
*             IF AP1PCODE=EXTC THEN /* END OF EXTENT                 */
*                                                               01S0678
         CLI   AP1PCODE(AP1REG),X'42'                           01S0678
         BNE   @RF00678                                         01S0678
*               /*****************************************************/
*               /*                                                   */
*               /* END OF EXTENT                                     */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0679
*               DO;                                             01S0679
*                 CALL READBLD1;    /* BUILD CCW CHAIN ONE           */
         BAL   @14,READBLD1                                     01S0680
*                 CALL UPDTCC;      /* INCREMENT CC AND CONTINUE     */
         BAL   @14,UPDTCC                                       01S0681
*               END;                                            01S0682
*             ELSE                  /* NOT EOE                       */
*               IF AP1PCODE=ERRC&(CSWUNEXP=ON×CSWUNCHK=ON×CSWERR1^=
*                   '0000'B×CSWSTAT2^='00000000'B) THEN/* ERROR 01S0683
*                                      STATUS                        */
         B     @RC00678                                         01S0683
@RF00678 CLI   AP1PCODE(AP1REG),X'41'                           01S0683
         BNE   @RF00683                                         01S0683
         LA    @09,AP1CSW(,AP1REG)                              01S0683
         BCTR  @09,0                                            01S0683
         TM    CSWUNEXP(@09),B'00000011'                        01S0683
         BNZ   @RT00683                                         01S0683
         TM    CSWERR1(@09),B'11110000'                         01S0683
         BNZ   @RT00683                                         01S0683
         CLI   CSWSTAT2(@09),B'00000000'                        01S0683
         BE    @RF00683                                         01S0683
@RT00683 DS    0H                                               01S0684
*                 IF CSWUNEXP=ON THEN/* EOD RECORD                   */
         LA    @09,AP1CSW(,AP1REG)                              01S0684
         TM    CSWUNEXP-1(@09),B'00000001'                      01S0684
         BNO   @RF00684                                         01S0684
*                   IF AP1BUFAD->CNTHHR>HHR&AP1BUFAD->CNTHH<=AP1LSTHH
*                     THEN          /* EOD RECORD COUNT OK           */
*                                                               01S0685
         L     @09,AP1BUFAD(,AP1REG)                            01S0685
         CLC   CNTHHR(3,@09),HHR(AP1REG)                        01S0685
         BNH   @RF00685                                         01S0685
         SLR   @06,@06                                          01S0685
         ICM   @06,3,CNTHH(@09)                                 01S0685
         CH    @06,AP1LSTHH(,AP1REG)                            01S0685
         BH    @RF00685                                         01S0685
*                     /***********************************************/
*                     /*                                             */
*                     /* EOD--OK                                     */
*                     /*                                             */
*                     /***********************************************/
*                                                               01S0686
*                     DO;                                       01S0686
*                       HHR=AP1BUFAD->CNTHHR;/* SET SEEK TO LAST
*                                      COUNT                         */
*                                                               01S0687
         MVC   HHR(3,AP1REG),CNTHHR(@09)                        01S0687
*                       /*********************************************/
*                       /*                                           */
*                       /* READBLD2 ROUTINE BUILDS CCW CHAIN TO READ */
*                       /* RECORDS EXCEPT RECORD ZERO FROM EOD RECORD*/
*                       /* TO END OF CYLINDER.                       */
*                       /*                                           */
*                       /*********************************************/
*                                                               01S0688
*/*  CCW CHAIN:                                                 01S0688
*        SID,BUFF,CC,5               SEARCH FOR EOD RECORD     @ZM01503
*        TIC,*-8                                                01S0688
*        MT-RDCNT,BUFF,CC,8          READ COUNT, MULTI-TRACK    01S0688
*        RD-KD,0,CC-SKIP-SLI,65535   CHECK KEY - DATA           01S0688
*        TIC,*-16                    LOOP - READ TO END OF CYL       */
*                                                               01S0688
*                       CCWPTR=1;   /* FIRST SLOT                    */
         LA    @09,1                                            01S0688
         LR    CCWPTR,@09                                       01S0688
*                       CCW(CCWPTR)=SIDCCCCW;/* SID,0,CC,5           */
         LR    @06,CCWPTR                                       01S0689
         SLA   @06,3                                            01S0689
         L     @03,AP1CCWA(,AP1REG)                             01S0689
         ALR   @06,@03                                          01S0689
         AL    @06,@CF03871                                     01S0689
         MVC   CCW(8,@06),SIDCCCCW                              01S0689
*                       CCWADDRB(CCWPTR)=AP1BUFAB;/* SEARCH ON  01S0690
*                                      ADDRESS READ          @ZM01503*/
         LR    @06,CCWPTR                                       01S0690
         SLA   @06,3                                            01S0690
         ALR   @06,@03                                          01S0690
         AL    @06,@CF03872                                     01S0690
         MVC   CCWADDRB-1(3,@06),AP1BUFAB(AP1REG)               01S0690
*                       CCWPTR=CCWPTR+1;/* NEXT SLOT                 */
         ALR   CCWPTR,@09                                       01S0691
*                       CCW(CCWPTR)=TICCCW;/* TIC,0,0,0              */
         LR    @06,CCWPTR                                       01S0692
         SLA   @06,3                                            01S0692
         ALR   @06,@03                                          01S0692
         AL    @06,@CF03871                                     01S0692
         MVC   CCW(8,@06),TICCCW                                01S0692
*                       CCWADDRB(CCWPTR)=AP1CCWA+(CCWPTR-2)*LENGTH(CCW)
*                           ;       /* TIC TO SID                    */
         LR    @06,CCWPTR                                       01S0693
         SLA   @06,3                                            01S0693
         LR    @15,CCWPTR                                       01S0693
         BCTR  @15,0                                            01S0693
         BCTR  @15,0                                            01S0693
         SLA   @15,3                                            01S0693
         ALR   @15,@03                                          01S0693
         ALR   @06,@03                                          01S0693
         AL    @06,@CF03872                                     01S0693
         STCM  @15,7,CCWADDRB-1(@06)                            01S0693
*                       CCWPTR=CCWPTR+1;/* NEXT SLOT                 */
         ALR   CCWPTR,@09                                       01S0694
*                       CCW(CCWPTR)=MRCCCCCW;/* MT-RDCNT,0,CC,8      */
         LR    @06,CCWPTR                                       01S0695
         SLA   @06,3                                            01S0695
         ALR   @06,@03                                          01S0695
         AL    @06,@CF03871                                     01S0695
         MVC   CCW(8,@06),MRCCCCCW                              01S0695
*                       CCWADDRB(CCWPTR)=AP1BUFAB;/* READ INTO BUFFER*/
         LR    @06,CCWPTR                                       01S0696
         SLA   @06,3                                            01S0696
         ALR   @06,@03                                          01S0696
         AL    @06,@CF03872                                     01S0696
         MVC   CCWADDRB-1(3,@06),AP1BUFAB(AP1REG)               01S0696
*                       CCWPTR=CCWPTR+1;/* NEXT SLOT                 */
         ALR   CCWPTR,@09                                       01S0697
*                       CCW(CCWPTR)=RKDSSCCW;/*                 01S0698
*                                      RKD,0,CC-SKIP-SLI,65535       */
         LR    @06,CCWPTR                                       01S0698
         SLA   @06,3                                            01S0698
         ALR   @06,@03                                          01S0698
         AL    @06,@CF03871                                     01S0698
         MVC   CCW(8,@06),RKDSSCCW                              01S0698
*                       CCWPTR=CCWPTR+1;/* NEXT SLOT                 */
         ALR   CCWPTR,@09                                       01S0699
*                       CCW(CCWPTR)=TICCCW;/* TIC,0,0,0              */
         LR    @09,CCWPTR                                       01S0700
         SLA   @09,3                                            01S0700
         ALR   @09,@03                                          01S0700
         AL    @09,@CF03871                                     01S0700
         MVC   CCW(8,@09),TICCCW                                01S0700
*                       CCWADDRB(CCWPTR)=AP1CCWA+(CCWPTR-3)*LENGTH(CCW)
*                           ;       /* TIC TO RD CNT CCW CHAIN 2     */
         LR    @09,CCWPTR                                       01S0701
         SLA   @09,3                                            01S0701
         LR    @06,CCWPTR                                       01S0701
         SL    @06,@CF00139                                     01S0701
         SLA   @06,3                                            01S0701
         ALR   @06,@03                                          01S0701
         ALR   @03,@09                                          01S0701
         AL    @03,@CF03872                                     01S0701
         STCM  @06,7,CCWADDRB-1(@03)                            01S0701
*                     END;                                      01S0702
*                   ELSE            /* EOD RECORD COUNT BAD          */
*                                                               01S0703
*                     /***********************************************/
*                     /*                                             */
*                     /* EOD--POSSIBLE LOOP OR INVALID SEEK          */
*                     /*                                             */
*                     /***********************************************/
*                                                               01S0703
*                     CALL BADATA;  /* HANDLE BAD EOD RECORD         */
         B     @RC00685                                         01S0703
@RF00685 BAL   @14,BADATA                                       01S0703
*                 ELSE              /* NOT EOD RECORD                */
*                   IF SNSNRF=ON&CCWCOMCD(1)=SID&CSWADDRB=AP1CCWA+
*                       LENGTH(CCW) THEN/* COULDNT FIND EXPECTED EOD */
         B     @RC00684                                         01S0704
@RF00684 TM    SNSNRF+188(AP1REG),B'00001000'                   01S0704
         BNO   @RF00704                                         01S0704
         L     @09,AP1CCWA(,AP1REG)                             01S0704
         CLI   CCWCOMCD(@09),49                                 01S0704
         BNE   @RF00704                                         01S0704
         LA    @06,AP1CSW(,AP1REG)                              01S0704
         AL    @09,@CF00049                                     01S0704
         BCTR  @06,0                                            01S0704
         L     @06,CSWADDRB-1(,@06)                             01S0704
         LA    @06,0(,@06)                                      01S0704
         CR    @09,@06                                          01S0704
         BNE   @RF00704                                         01S0704
*                     DO;                                       01S0705
*                       CALL BADATA;/* HANDLE BAD EOD RECORD         */
         BAL   @14,BADATA                                       01S0706
*                       CALL PRTCCW;/* PRINT CSW, CCW, SNS           */
         BAL   @14,PRTCCW                                       01S0707
*                     END;                                      01S0708
*                   ELSE            /* CHECK FOR OTHER ERRORS        */
*                     DO;                                       01S0709
         B     @RC00704                                         01S0709
@RF00704 DS    0H                                               01S0710
*                       IF SNSNRF=ON THEN/* NRF ON ERP CCW--TRYING TO
*                                      FIND NEXT PART OF OVERFLOW
*                                      RECORD                        */
         TM    SNSNRF+188(AP1REG),B'00001000'                   01S0710
         BNO   @RF00710                                         01S0710
*                         CALL SNSCCHH;/* GET CCHH FROM SNS TO RETRY
*                                      TRK                           */
         BAL   @14,SNSCCHH                                      01S0711
*                       ELSE        /* ERROR ON TRACK                */
*                         CALL BADTRK;/* HANDLES UNREADABLE TRACK    */
         B     @RC00710                                         01S0712
@RF00710 BAL   @14,BADTRK                                       01S0712
*                       CALL READBLD1;/* BUILD CCW CHAIN 1           */
@RC00710 BAL   @14,READBLD1                                     01S0713
*                     END;                                      01S0714
*               ELSE                /* ERROR POST CODE WITH NO ERROR */
*                 DO;                                           01S0715
         B     @RC00683                                         01S0715
@RF00683 DS    0H                                               01S0716
*                   CALL BADATA;    /* DATA FMT UNACCEPTABLE MSG     */
         BAL   @14,BADATA                                       01S0716
*                   CALL PRTCCW;    /* PRT CCW, CSW, SNS             */
         BAL   @14,PRTCCW                                       01S0717
*                 END;              /* END DO                        */
*           END;                    /* END DO                        */
@RC00683 DS    0H                                               01S0719
@RC00678 DS    0H                                               01S0720
*       END;                        /* END DO WHILE                  */
*                                                               01S0720
@RC00671 DS    0H                                               01S0720
@DE00669 TM    AP1QUIT(AP1REG),B'01001000'                      01S0720
         BZ    @DL00669                                         01S0720
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE FOR SECOND READ PASS                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0721
*       AP1LST=OFF;                 /* RESET INDICATOR               */
         NI    AP1LST(AP1REG),B'10111111'                       01S0721
*       AP1SEEK=AP1SEEK&&AP1SEEK;   /* SET SEEK TO CYL 0, HD 0       */
*                                                               01S0722
         XC    AP1SEEK(8,AP1REG),AP1SEEK(AP1REG)                01S0722
*       /*************************************************************/
*       /*                                                           */
*       /* GET INTO DEB KEY                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0723
*       DO;                         /* MODESET EXTKEY(DATAMGT)       */
*         SPKA(80);                 /* SET PSW KEY                   */
         LA    @09,80                                           01S0724
         SPKA  0(@09)                                           01S0724
*       END;                        /* MODESET EXTKEY(DATAMGT) DATA
*                                      MGT KEY                       */
*       DEBENDCC=0;                 /* READ FIRST CYLINDER           */
         L     @09,AP1DEBA(,AP1REG)                             01S0726
         SLR   @06,@06                                          01S0726
         STH   @06,DEBENDCC+32(,@09)                            01S0726
*       RFY                                                     01S0727
*         GPR04F RSTD;                                          01S0727
*       DO;                         /* MODESET EXTKEY(TCB)      01S0728
*                                      WORKREG(GPR04F)               */
*         GPR04F=TCBPKF;            /* GET KEY FROM TCB              */
         L     @09,FLCCVT                                       01S0729
         L     @09,CVTTCBP(,@09)                                01S0729
         L     @09,TCBPTR(,@09)                                 01S0729
         SLR   GPR04F,GPR04F                                    01S0729
         IC    GPR04F,TCBPKF(,@09)                              01S0729
*         SPKA(GPR04F);             /* SET PSW KEY                   */
         SPKA  0(GPR04F)                                        01S0730
*       END;                        /* MODESET EXTKEY(TCB)      01S0731
*                                      WORKREG(GPR04F) USER KEY      */
*       RFY                                                     01S0732
*         GPR04F UNRSTD;                                        01S0732
*                                                               01S0732
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE DATA CHECK COUNTER                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0733
*       IF AP1DEVTP=AP13350 THEN    /* 3350                          */
         CLI   AP1DEVTP(AP1REG),4                               01S0733
         BNE   @RF00733                                         01S0733
*         AP1DCCNT=151;             /* SET COUNTER TO ALTERNATES + 1 */
         MVI   AP1DCCNT(AP1REG),X'97'                           01S0734
*       ELSE                        /* NOT 3350                      */
*         IF AP1DEVTP=AP13344 THEN  /* 3340                          */
         B     @RC00733                                         01S0735
@RF00733 CLI   AP1DEVTP(AP1REG),3                               01S0735
         BNE   @RF00735                                         01S0735
*           AP1DCCNT=25;            /* SET COUNTER TO ALTERNATES + 1 */
         MVI   AP1DCCNT(AP1REG),X'19'                           01S0736
*         ELSE                      /* 3330 OR 3330-11               */
*           AP1DCCNT=134;           /* SET COUNTER TO ALTERNATES + 1 */
*                                                               01S0737
         B     @RC00735                                         01S0737
@RF00735 MVI   AP1DCCNT(AP1REG),X'86'                           01S0737
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD CCW CHAIN FOR SECOND READ PASS. READBLD3 ROUTINE    */
*       /* BUILDS CCW CHAIN TO READ RECORD ZEROS TO END OF CYLINDER  */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0738
*/*  CCW CHAIN:                                                 01S0738
*        RD-R0,BUFF,CD,8             READ COUNT                 01S0738
*        RD-R0,0,CC-SKIP-SLI,65535   CHECK KEY - DATA           01S0738
*        SET-SECTOR,BUFF+8,CC,1      HIGH DATA SECTOR           01S0738
*        MT-R0,BUFF,CD,8             READ COUNT FOR EOD         01S0738
*        RD-R0,0,CC-SKIP-SLI,65535   CHECK KEY - DATA           01S0738
*        TIC,*-24                    LOOP - READ TO END OF CYL       */
*                                                               01S0738
*       CCWPTR=1;                   /* FIRST SLOT                    */
@RC00735 DS    0H                                               01S0738
@RC00733 LA    @09,1                                            01S0738
         LR    CCWPTR,@09                                       01S0738
*       CCW(CCWPTR)=RR0CDCCW;       /* RR0,0,CD,8                    */
         LR    @06,CCWPTR                                       01S0739
         SLA   @06,3                                            01S0739
         L     @03,AP1CCWA(,AP1REG)                             01S0739
         ALR   @06,@03                                          01S0739
         AL    @06,@CF03871                                     01S0739
         MVC   CCW(8,@06),RR0CDCCW                              01S0739
*       CCWADDRB(CCWPTR)=AP1BUFAD;  /* INTO BUFFER                   */
         LR    @06,CCWPTR                                       01S0740
         SLA   @06,3                                            01S0740
         L     @15,AP1BUFAD(,AP1REG)                            01S0740
         ALR   @06,@03                                          01S0740
         AL    @06,@CF03872                                     01S0740
         STCM  @15,7,CCWADDRB-1(@06)                            01S0740
*       CCWPTR=CCWPTR+1;            /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S0741
*       CCW(CCWPTR)=RR0SSCCW;       /* RR0,0,CC-SKIP-SLI,65535       */
         LR    @06,CCWPTR                                       01S0742
         SLA   @06,3                                            01S0742
         ALR   @06,@03                                          01S0742
         AL    @06,@CF03871                                     01S0742
         MVC   CCW(8,@06),RR0SSCCW                              01S0742
*       CCWPTR=CCWPTR+1;            /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S0743
*       CCW(CCWPTR)=SSCCCCW;        /* SET SECTOR,0,CC,1             */
         LR    @09,CCWPTR                                       01S0744
         SLA   @09,3                                            01S0744
         ALR   @09,@03                                          01S0744
         AL    @09,@CF03871                                     01S0744
         MVC   CCW(8,@09),SSCCCCW                               01S0744
*       CCWADDRB(CCWPTR)=AP1BUFAB+LENGTH(CNT);/* SECTOR IN BUFFER    */
         LR    @09,CCWPTR                                       01S0745
         SLA   @09,3                                            01S0745
         LA    @06,8                                            01S0745
         L     @14,AP1BUFAB-1(,AP1REG)                          01S0745
         LA    @14,0(,@14)                                      01S0745
         ALR   @14,@06                                          01S0745
         ALR   @03,@09                                          01S0745
         AL    @03,@CF03872                                     01S0745
         STCM  @14,7,CCWADDRB-1(@03)                            01S0745
*       IF AP1DEVTP=AP13344 THEN    /* 3344                          */
         CLI   AP1DEVTP(AP1REG),3                               01S0746
         BNE   @RF00746                                         01S0746
*         EVAL(AP1BUFAD+LENGTH(CNT))->BYTE1=63;/* SECTOR 63          */
         ALR   @15,@06                                          01S0747
         MVI   BYTE1(@15),X'3F'                                 01S0747
*       ELSE                        /* NOT 3344                      */
*         EVAL(AP1BUFAD+LENGTH(CNT))->BYTE1=127;/* SECTOR 127        */
         B     @RC00746                                         01S0748
@RF00746 LA    @09,8                                            01S0748
         AL    @09,AP1BUFAD(,AP1REG)                            01S0748
         MVI   BYTE1(@09),X'7F'                                 01S0748
*       CCWPTR=CCWPTR+1;            /* NEXT SLOT                     */
@RC00746 LA    @09,1                                            01S0749
         ALR   CCWPTR,@09                                       01S0749
*       CCW(CCWPTR)=MR0CDCCW;       /* MTRR0,0,CD,8                  */
         LR    @06,CCWPTR                                       01S0750
         SLA   @06,3                                            01S0750
         L     @03,AP1CCWA(,AP1REG)                             01S0750
         ALR   @06,@03                                          01S0750
         AL    @06,@CF03871                                     01S0750
         MVC   CCW(8,@06),MR0CDCCW                              01S0750
*       CCWADDRB(CCWPTR)=AP1BUFAD;  /* INTO BUFFER                   */
         LR    @06,CCWPTR                                       01S0751
         SLA   @06,3                                            01S0751
         L     @15,AP1BUFAD(,AP1REG)                            01S0751
         ALR   @06,@03                                          01S0751
         AL    @06,@CF03872                                     01S0751
         STCM  @15,7,CCWADDRB-1(@06)                            01S0751
*       CCWPTR=CCWPTR+1;            /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S0752
*       CCW(CCWPTR)=RR0SSCCW;       /* RR0,0,CC-SKIP-SLI,65535       */
         LR    @06,CCWPTR                                       01S0753
         SLA   @06,3                                            01S0753
         ALR   @06,@03                                          01S0753
         AL    @06,@CF03871                                     01S0753
         MVC   CCW(8,@06),RR0SSCCW                              01S0753
*       CCWPTR=CCWPTR+1;            /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S0754
*       CCW(CCWPTR)=TICCCW;         /* TIC,0,0,0                     */
         LR    @09,CCWPTR                                       01S0755
         SLA   @09,3                                            01S0755
         ALR   @09,@03                                          01S0755
         AL    @09,@CF03871                                     01S0755
         MVC   CCW(8,@09),TICCCW                                01S0755
*       CCWADDRB(CCWPTR)=AP1CCWA+(CCWPTR-4)*LENGTH(CCW);/* TIC TO SET
*                                      SECTOR                        */
*                                                               01S0756
         LR    @09,CCWPTR                                       01S0756
         SLA   @09,3                                            01S0756
         LR    @06,CCWPTR                                       01S0756
         SL    @06,@CF00040                                     01S0756
         SLA   @06,3                                            01S0756
         ALR   @06,@03                                          01S0756
         ALR   @03,@09                                          01S0756
         AL    @03,@CF03872                                     01S0756
         STCM  @06,7,CCWADDRB-1(@03)                            01S0756
*       /*************************************************************/
*       /*                                                           */
*       /* BEGIN READ PASS                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0757
*       DO WHILE AP1QUIT=OFF&AP1LST=OFF;/* BEGIN SECOND READ PASS    */
         B     @DE00757                                         01S0757
@DL00757 DS    0H                                               01S0758
*         CALL IO;                  /* GO DO I/O                     */
*                                                               01S0758
         BAL   @14,IO                                           01S0758
*         /***********************************************************/
*         /*                                                         */
*         /* TEST I/O RETURN CODE                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0759
*         IF AP1PCODE=TIMC THEN     /* NO RESPONSE WITHIN TIME LIMIT */
*                                                               01S0759
         CLI   AP1PCODE(AP1REG),X'48'                           01S0759
         BNE   @RF00759                                         01S0759
*           /*********************************************************/
*           /*                                                       */
*           /* TIMED OUT                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0760
*           DO;                                                 01S0760
*             AP1CNCOD=MDDR;        /* SET UP TIMED-OUT MSG          */
         MVI   AP1CNCOD(AP1REG),X'09'                           01S0761
*             CALL COMM;            /* ISSUE MSG TO CONSOLE          */
         BAL   @14,COMM                                         01S0762
*             CALL BADATA;          /* DATA FMT UNACCEPTABLE MSG     */
         BAL   @14,BADATA                                       01S0763
*           END;                    /* END DO                        */
*         ELSE                      /* RESPONDED WITHIN TIME LIMIT   */
*           DO;                                                 01S0765
*                                                               01S0765
         B     @RC00759                                         01S0765
@RF00759 DS    0H                                               01S0766
*             /*******************************************************/
*             /*                                                     */
*             /* I/O COMPLETED--CHECK STATUS                         */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0766
*             IF AP1PCODE=EXTC THEN /* END OF EXTENT                 */
*                                                               01S0766
         CLI   AP1PCODE(AP1REG),X'42'                           01S0766
         BNE   @RF00766                                         01S0766
*               /*****************************************************/
*               /*                                                   */
*               /* END OF EXTENT                                     */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0767
*               CALL UPDTCC;        /* INCREMENT CC AND CONTINUE     */
         BAL   @14,UPDTCC                                       01S0767
*             ELSE                  /* NOT EOE                       */
*               IF AP1PCODE=ERRC&(CSWUNEXP=ON×CSWUNCHK=ON×CSWERR1^=
*                   '0000'B×CSWSTAT2^='00000000'B) THEN/* ERROR 01S0768
*                                      STATUS                        */
         B     @RC00766                                         01S0768
@RF00766 CLI   AP1PCODE(AP1REG),X'41'                           01S0768
         BNE   @RF00768                                         01S0768
         LA    @09,AP1CSW(,AP1REG)                              01S0768
         BCTR  @09,0                                            01S0768
         TM    CSWUNEXP(@09),B'00000011'                        01S0768
         BNZ   @RT00768                                         01S0768
         TM    CSWERR1(@09),B'11110000'                         01S0768
         BNZ   @RT00768                                         01S0768
         CLI   CSWSTAT2(@09),B'00000000'                        01S0768
         BE    @RF00768                                         01S0768
@RT00768 DS    0H                                               01S0769
*                 IF CSWUNEXP=ON THEN/* EOD RECORD                   */
*                                                               01S0769
         LA    @09,AP1CSW(,AP1REG)                              01S0769
         TM    CSWUNEXP-1(@09),B'00000001'                      01S0769
         BNO   @RF00769                                         01S0769
*                   /*************************************************/
*                   /*                                               */
*                   /* END OF DATA--OK                               */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0770
*                   IF AP1BUFAD->CNTHH>HH&AP1BUFAD->CNTHH<=AP1LSTHH
*                     THEN          /* EOD RECORD COUNT OK           */
         L     @09,AP1BUFAD(,AP1REG)                            01S0770
         CLC   CNTHH(2,@09),HH(AP1REG)                          01S0770
         BNH   @RF00770                                         01S0770
         SLR   @06,@06                                          01S0770
         ICM   @06,3,CNTHH(@09)                                 01S0770
         CH    @06,AP1LSTHH(,AP1REG)                            01S0770
         BH    @RF00770                                         01S0770
*                     DO;                                       01S0771
*                       HHR=AP1BUFAD->CNTHHR;/* SET SEEK TO LAST
*                                      COUNT                         */
*                                                               01S0772
         MVC   HHR(3,AP1REG),CNTHHR(@09)                        01S0772
*                       /*********************************************/
*                       /*                                           */
*                       /* UPDATE SEEK TO NEXT TRACK                 */
*                       /*                                           */
*                       /*********************************************/
*                                                               01S0773
*                       CALL UPDTHH;/* TO NXT TRK                    */
         BAL   @14,UPDTHH                                       01S0773
*                     END;                                      01S0774
*                   ELSE            /* EOD RECORD COUNT BAD          */
*                                                               01S0775
*                     /***********************************************/
*                     /*                                             */
*                     /* EOD--POSSIBLE LOOP                          */
*                     /*                                             */
*                     /***********************************************/
*                                                               01S0775
*                     CALL BADATA;  /* HANDLE BAD EOD RECORD         */
         B     @RC00770                                         01S0775
@RF00770 BAL   @14,BADATA                                       01S0775
*                 ELSE              /* NOT EOD RECORD                */
*                   CALL BADTRK;    /* HANDLES UNREADABLE TRACK      */
         B     @RC00769                                         01S0776
@RF00769 BAL   @14,BADTRK                                       01S0776
*               ELSE                /* ERROR POST CODE WITH NO ERROR */
*                 DO;                                           01S0777
         B     @RC00768                                         01S0777
@RF00768 DS    0H                                               01S0778
*                   CALL BADATA;    /* DATA FMT UNACCEPTABLE MSG     */
         BAL   @14,BADATA                                       01S0778
*                   CALL PRTCCW;    /* PRT CCW, CSW, SNS             */
         BAL   @14,PRTCCW                                       01S0779
*                 END;              /* END DO                        */
*           END;                    /* END DO                        */
@RC00768 DS    0H                                               01S0781
@RC00766 DS    0H                                               01S0782
*       END;                        /* END DO WHILE                  */
*                                                               01S0782
@RC00759 DS    0H                                               01S0782
@DE00757 TM    AP1QUIT(AP1REG),B'01001000'                      01S0782
         BZ    @DL00757                                         01S0782
*       /*************************************************************/
*       /*                                                           */
*       /* WTO A MESSAGE INDICATING THE RESULTS OF THE DATA          */
*       /* VERIFICATION TEST                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0783
*       IF AP1ERROR=ON×AP1RDERR=ON THEN/* A BAD RECORD FOUND         */
         TM    AP1ERROR(AP1REG),B'00100001'                     01S0783
         BZ    @RF00783                                         01S0783
*         DO;                                                   01S0784
*           AP1RET=AP1ERRET;        /* SET RETURN CODE--ERROR FOUND  */
         MVI   AP1RET(AP1REG),X'08'                             01S0785
*           IF AP1ERROR=ON THEN     /* DRIVE ERROR                   */
         TM    AP1ERROR(AP1REG),B'00100000'                     01S0786
         BNO   @RF00786                                         01S0786
*             AP1CNCOD=MSDP;        /* SET UP DRIVE PROB MSG         */
         MVI   AP1CNCOD(AP1REG),X'03'                           01S0787
*           ELSE                    /* ONLY READ ERROR               */
*             AP1CNCOD=MCRD;        /* SET UNABLE TO READ MSG        */
         B     @RC00786                                         01S0788
@RF00786 MVI   AP1CNCOD(AP1REG),X'05'                           01S0788
*           CALL COMM;              /* SEND MSG TO CONSOLE           */
@RC00786 BAL   @14,COMM                                         01S0789
*         END;                                                  01S0790
*       ELSE                        /* NO ERRORS                     */
*         IF AP1QUIT=OFF THEN       /* TEST FINISHED WITH NO ERRORS  */
         B     @RC00783                                         01S0791
@RF00783 TM    AP1QUIT(AP1REG),B'00001000'                      01S0791
         BNZ   @RF00791                                         01S0791
*           DO;                                                 01S0792
*             AP1CNCOD=MADR;        /* SETUP FOR 'NO DATA PROBS' MSG */
         MVI   AP1CNCOD(AP1REG),X'06'                           01S0793
*             CALL COMM;            /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0794
*           END;                                                01S0795
*         ELSE                      /* UNABLE TO TEST--MSG ALREADY
*                                      ISSUED                        */
*           AP1RET=AP1QRET;         /* SET RETURN CODE--UNABLE TO
*                                      TEST                          */
         B     @RC00791                                         01S0796
@RF00791 MVI   AP1RET(AP1REG),X'0C'                             01S0796
*     END;                                                      01S0797
*   ELSE                                                        01S0798
*     ;                             /* SKIP READ VERIFY TEST         */
*                                                               01S0798
@RF00645 DS    0H                                               01S0799
*   /*****************************************************************/
*   /*                                                               */
*   /* TESTING FINISHED -- CLEANUP                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0799
*   AP1CNCOD=MPC;                   /* SETUP FOR COMPLETED MSG       */
@RC00645 MVI   AP1CNCOD(AP1REG),X'07'                           01S0799
*   CALL COMM;                      /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0800
*   AP1PRCLS=ON;                    /* SETUP FOR CLOSE PRINTER       */
         OI    AP1PRCLS(AP1REG),B'00100000'                     01S0801
*   CALL COMM;                      /* CLOSE IT                      */
*                                                               01S0802
         BAL   @14,COMM                                         01S0802
*   /*****************************************************************/
*   /*                                                               */
*   /* TERMINATION ROUTINE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0803
*                                                               01S0803
*   /*****************************************************************/
*   /*                                                               */
*   /* DETACHES TIMER, FREES SPACE GOTTEN BY INIT ROUTINE, DELETES   */
*   /* DEB AND DEQS                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0803
*                                                               01S0803
*   /*****************************************************************/
*   /*                                                               */
*   /* DETACH TIMER SUBTASK                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0803
*   IF AP1TIMEA^=0 THEN             /* SUBTASK EXISTS                */
         L     @09,AP1TIMEA(,AP1REG)                            01S0803
         LTR   @09,@09                                          01S0803
         BZ    @RF00803                                         01S0803
*     DO;                           /* DETACH (AP1TIMEA)             */
*       RESPECIFY                                               01S0805
*        (GPR01P) RESTRICTED;                                   01S0805
*       GPR01P=ADDR(AP1TIMEA);      /* TCB ADDRESS                   */
         LA    GPR01P,AP1TIMEA(,AP1REG)                         01S0806
*       SVC(62);                    /* DETACH SVC                    */
         SVC   62                                               01S0807
*       RESPECIFY                                               01S0808
*        (GPR01P) UNRESTRICTED;                                 01S0808
*     END;                          /* DETACH (AP1TIMEA) ADDRESS OF
*                                      SUB TCB                       */
*   ELSE                                                        01S0810
*     ;                             /* NO SUBTASK TO DETACH          */
*                                                               01S0810
@RF00803 DS    0H                                               01S0811
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE DEBCHK DELETE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0811
*   IF AP1DEBCH=ON THEN             /* DEBCHK ADD DONE               */
         TM    AP1DEBCH(AP1REG),B'00100000'                     01S0811
         BNO   @RF00811                                         01S0811
*     DO;                                                       01S0812
*       RFY                                                     01S0813
*        (GPR15F,                                               01S0813
*         GPR00F,                                               01S0813
*         GPR01P) RSTD;                                         01S0813
*       GPR01P=AP1DCBA;             /* DCB ADDRESS                   */
         L     GPR01P,AP1DCBA(,AP1REG)                          01S0814
*       GENERATE;                                               01S0815
         DEBCHK (GPR01P),TYPE=DELETE,AM=EXCP DELETE DEB
*       RFY                                                     01S0816
*        (GPR15F,                                               01S0816
*         GPR00F,                                               01S0816
*         GPR01P) UNRSTD;                                       01S0816
*     END;                                                      01S0817
*   ELSE                                                        01S0818
*     ;                             /* DEBCHK ADD NOT DONE--DONT DEL */
*                                                               01S0818
@RF00811 DS    0H                                               01S0819
*   /*****************************************************************/
*   /*                                                               */
*   /* DECHAIN DEB                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0819
*   DO;                             /* MODESET KEY(ZERO)             */
*     I10701='00000000'B;           /* OR MASK                       */
         MVI   I10701,B'00000000'                               01S0820
*     I10702='00000000'B;           /* AND MASK                      */
         MVI   I10702,B'00000000'                               01S0821
*     I10703='00000000'B;           /* RESERVED                      */
         MVI   I10703,B'00000000'                               01S0822
*     I10704='00110000'B;                                       01S0823
         MVI   I10704,B'00110000'                               01S0823
*     RESPECIFY                                                 01S0824
*       GPR01F RESTRICTED;                                      01S0824
*     GPR01F=I107;                  /* MODESET PARMLIST              */
         L     GPR01F,I107                                      01S0825
*     SVC(107);                     /* ISSUE MODESET SVC             */
         SVC   107                                              01S0826
*     RESPECIFY                                                 01S0827
*      (GPR01F) UNRESTRICTED;                                   01S0827
*   END;                            /* MODESET KEY(ZERO) SUPERVISOR
*                                      KEY                           */
*                                                               01S0828
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN LOCAL LOCK                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0829
*   RFY                                                         01S0829
*    (GPR02F,                                                   01S0829
*     GPR04F,                                                   01S0829
*     GPR09F,                                                   01S0829
*     GPR11F,                                                   01S0829
*     GPR12F,                                                   01S0829
*     GPR13F) RSTD;                                             01S0829
*   GPR02F=GPR11F;                  /* SAVE REG 11                   */
         LR    GPR02F,GPR11F                                    01S0830
*   GPR04F=GPR12F;                  /* SAVE REG 12                   */
         LR    GPR04F,GPR12F                                    01S0831
*   GPR09F=GPR13F;                  /* SAVE REG 13                   */
         LR    GPR09F,GPR13F                                    01S0832
*SET:                                                           01S0833
*   DO;                             /* SETLOCK (OBTAIN) MODE(UNCOND)
*                                      TYPE(LOCAL) RELATED(REL)      */
SET      DS    0H                                               01S0834
*     RFY                                                       01S0834
*      (GPR11P,                                                 01S0834
*       GPR12P,                                                 01S0834
*       GPR13P,                                                 01S0834
*       GPR14P) RSTD;                                           01S0834
*     GPR13P=PSALITA;               /* ADDRESS OF LOCK INTERFACE
*                                      TABLE.                        */
         L     GPR13P,PSALITA                                   01S0835
*     GEN(LM GPR11P,GPR13P,576(GPR13P));/* LOAD LOCKWORD, CLHT AND
*                                      ENTRY ADRS.                   */
         LM GPR11P,GPR13P,576(GPR13P)
*     GEN(BALR GPR14P,GPR13P);      /* BALR TO SETLOCK RTN.          */
         BALR GPR14P,GPR13P
*     RFY                                                       01S0838
*      (GPR11P,                                                 01S0838
*       GPR12P,                                                 01S0838
*       GPR13P,                                                 01S0838
*       GPR14P) UNRSTD;                                         01S0838
*   END;                            /* SETLOCK (OBTAIN) MODE(UNCOND)
*                                      TYPE(LOCAL) RELATED(REL)      */
*   GPR13F=GPR09F;                  /* RESTORE REG 13                */
         LR    GPR13F,GPR09F                                    01S0840
*   GPR12F=GPR04F;                  /* RESTORE REG 12                */
         LR    GPR12F,GPR04F                                    01S0841
*   GPR11F=GPR02F;                  /* RESTORE REG 11                */
         LR    GPR11F,GPR02F                                    01S0842
*   RFY                                                         01S0843
*    (GPR02F,                                                   01S0843
*     GPR04F,                                                   01S0843
*     GPR09F,                                                   01S0843
*     GPR11F,                                                   01S0843
*     GPR12F,                                                   01S0843
*     GPR13F) UNRSTD;                                           01S0843
*   DEBPTR=ADDR(TCBDEB)+ADDR(DEBBASIC)-ADDR(DEBDEBAD);/* ADDRESS TCB
*                                      AS IF TCBDEB WERE IN A DEB    */
         L     @09,FLCCVT                                       01S0844
         L     @09,CVTTCBP(,@09)                                01S0844
         L     DEBPTR,TCBPTR(,@09)                              01S0844
         LA    DEBPTR,TCBDEB(,DEBPTR)                           01S0844
         L     @09,AP1DEBA(,AP1REG)                             01S0844
         ALR   DEBPTR,@09                                       01S0844
         LA    @09,DEBDEBAD(,@09)                               01S0844
         SLR   DEBPTR,@09                                       01S0844
*   DO WHILE DEBPTR->DEBDEBB^=0&DEBPTR->DEBDEBB^=AP1DEBA;/* WHILE
*                                      HAVNT FOUND OUR DEB AND NOT
*                                      END OF CHAIN                  */
         B     @DE00845                                         01S0845
@DL00845 DS    0H                                               01S0846
*     DEBPTR=DEBPTR->DEBDEBB;       /* POINT TO NEXT DEB IN CHAIN    */
         L     @09,DEBDEBB-1(,DEBPTR)                           01S0846
         LA    @09,0(,@09)                                      01S0846
         LR    DEBPTR,@09                                       01S0846
*   END;                            /* OF DO WHILE                   */
@DE00845 L     @09,DEBDEBB-1(,DEBPTR)                           01S0847
         LA    @09,0(,@09)                                      01S0847
         LTR   @09,@09                                          01S0847
         BZ    @DC00845                                         01S0847
         C     @09,AP1DEBA(,AP1REG)                             01S0847
         BNE   @DL00845                                         01S0847
@DC00845 DS    0H                                               01S0848
*   IF DEBPTR->DEBDEBB^=0 THEN      /* FOUND OUR DEB                 */
         L     @09,DEBDEBB-1(,DEBPTR)                           01S0848
         LA    @09,0(,@09)                                      01S0848
         LTR   @09,@09                                          01S0848
         BZ    @RF00848                                         01S0848
*     DEBPTR->DEBDEBB=DEBDEBB;      /* DE-CHAIN--MOVE OUR DEB PTR
*                                      INTO PREVIOUS DEB             */
         L     @09,AP1DEBA(,AP1REG)                             01S0849
         MVC   DEBDEBB(3,DEBPTR),DEBDEBB(@09)                   01S0849
*   ELSE                                                        01S0850
*     ;                             /* DIDNT FIND OUR DEB--ASSUME
*                                      ALREADY DE-CHAINED            */
*                                                               01S0850
@RF00848 DS    0H                                               01S0851
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE LOCAL LOCK                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0851
*   RFY                                                         01S0851
*    (GPR02F,                                                   01S0851
*     GPR04F,                                                   01S0851
*     GPR09F,                                                   01S0851
*     GPR11F,                                                   01S0851
*     GPR12F,                                                   01S0851
*     GPR13F) RSTD;                                             01S0851
*   GPR02F=GPR11F;                  /* SAVE REG 11                   */
         LR    GPR02F,GPR11F                                    01S0852
*   GPR04F=GPR12F;                  /* SAVE REG 12                   */
         LR    GPR04F,GPR12F                                    01S0853
*   GPR09F=GPR13F;                  /* SAVE REG 13                   */
         LR    GPR09F,GPR13F                                    01S0854
*REL:                                                           01S0855
*   DO;                             /* SETLOCK (RELEASE) TYPE(LOCAL)
*                                      RELATED(SET)                  */
REL      DS    0H                                               01S0856
*     RFY                                                       01S0856
*      (GPR11P,                                                 01S0856
*       GPR12P,                                                 01S0856
*       GPR13P,                                                 01S0856
*       GPR14P) RSTD;                                           01S0856
*     GPR13P=PSALITA;               /* ADDRESS OF LOCK INTERFACE
*                                      TABLE.                        */
         L     GPR13P,PSALITA                                   01S0857
*     GEN(LM GPR11P,GPR13P,588(GPR13P));/* LOAD LOCKWORD, CLHT AND
*                                      ENTRY ADRS.                   */
         LM GPR11P,GPR13P,588(GPR13P)
*     GEN(BALR GPR14P,GPR13P);      /* BALR TO SETLOCK RTN.          */
         BALR GPR14P,GPR13P
*     RFY                                                       01S0860
*      (GPR11P,                                                 01S0860
*       GPR12P,                                                 01S0860
*       GPR13P,                                                 01S0860
*       GPR14P) UNRSTD;                                         01S0860
*   END;                            /* SETLOCK (RELEASE) TYPE(LOCAL)
*                                      RELATED(SET)                  */
*   GPR13F=GPR09F;                  /* RESTORE REG 13                */
         LR    GPR13F,GPR09F                                    01S0862
*   GPR12F=GPR04F;                  /* RESTORE REG 12                */
         LR    GPR12F,GPR04F                                    01S0863
*   GPR11F=GPR02F;                  /* RESTORE REG 11                */
         LR    GPR11F,GPR02F                                    01S0864
*   RFY                                                         01S0865
*    (GPR02F,                                                   01S0865
*     GPR04F,                                                   01S0865
*     GPR09F,                                                   01S0865
*     GPR11F,                                                   01S0865
*     GPR12F,                                                   01S0865
*     GPR13F) UNRSTD;                                           01S0865
*   DO;                             /* MODESET KEY(NZERO)            */
*     I10701='00000000'B;           /* OR MASK                       */
         MVI   I10701,B'00000000'                               01S0867
*     I10702='00000000'B;           /* AND MASK                      */
         MVI   I10702,B'00000000'                               01S0868
*     I10703='00000000'B;           /* RESERVED                      */
         MVI   I10703,B'00000000'                               01S0869
*     I10704='00100000'B;                                       01S0870
         MVI   I10704,B'00100000'                               01S0870
*     RESPECIFY                                                 01S0871
*       GPR01F RESTRICTED;                                      01S0871
*     GPR01F=I107;                  /* MODESET PARMLIST              */
         L     GPR01F,I107                                      01S0872
*     SVC(107);                     /* ISSUE MODESET SVC             */
         SVC   107                                              01S0873
*     RESPECIFY                                                 01S0874
*      (GPR01F) UNRESTRICTED;                                   01S0874
*   END;                            /* MODESET KEY(NZERO) BACK TO
*                                      USERS KEY                     */
*                                                               01S0875
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQ - ENQ DONE IN IAPCHKIO ON BASE ADDR OF SPINDLE            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0876
*   IF AP1ENQD=ON THEN              /* ENQ WAS DONE                  */
         TM    AP1ENQD(AP1REG),B'00010000'                      01S0876
         BNO   @RF00876                                         01S0876
*     DO;                           /* DEQ (QNAME,AP1ENQAD,LENGTH(AP1
*                                      ENQAD),SYSTEM) RET(NONE)      */
*       I048(1:20)=I048(1:20)&&I048(1:20);                      01S0878
         XC    I048(20),I048                                    01S0878
*       RFY                                                     01S0879
*         GPR01F RESTRICTED;                                    01S0879
*       I04804(1)='11000000'B;      /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                               01S0880
*       I04805(1)=LENGTH(AP1ENQAD); /* SET LENGTH                    */
         MVI   I04805,X'04'                                     01S0881
*       I04806(1)='01000000'B;      /* OPTIONS                       */
         MVI   I04806,B'01000000'                               01S0882
*       I04807(1)=ADDR(QNAME);      /* QNAME ADDRESS                 */
         LA    @09,QNAME                                        01S0883
         ST    @09,I04807                                       01S0883
*       I04808(1)=ADDR(AP1ENQAD);   /* RNAME ADDRESS                 */
         LA    @09,AP1ENQAD(,AP1REG)                            01S0884
         ST    @09,I04808                                       01S0884
*       GPR01F=ADDR(I04802);                                    01S0885
         LA    GPR01F,I04802                                    01S0885
*       SVC(48);                                                01S0886
         SVC   48                                               01S0886
*       RFY                                                     01S0887
*         GPR01F UNRESTRICTED;                                  01S0887
*     END;                          /* DEQ (QNAME,AP1ENQAD,LENGTH(AP1
*                                      ENQAD),SYSTEM) RET(NONE)      */
*   ELSE                                                        01S0889
*     ;                             /* ENQ NOT DONE--DONT DEQ        */
*                                                               01S0889
@RF00876 DS    0H                                               01S0890
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAINS                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0890
*                                                               01S0890
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE BUFFER                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0890
*   DO;                             /* FREEMAIN(R)              01S0890
*                                      LV(BUFFLEN)SP(DEBSP)A(BUFFER) */
*     RESPECIFY                                                 01S0891
*      (GPR01F,                                                 01S0891
*       GPR00F) RESTRICTED;                                     01S0891
*     GPR00F=BUFFLEN;               /* LENGTH REQUESTED              */
         LA    GPR00F,864                                       01S0892
*     GPR01F=DEBSP;                 /* SP IN REG 1                   */
         LA    GPR01F,230                                       01S0893
*     GEN(SLL   GPR01F,24)                                      01S0894
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;              01S0894
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                    01S0895
*     GPR01F=ADDR(BUFFER);          /* SET REGISTER ONE              */
         L     GPR01F,AP1BUFAD(,AP1REG)                         01S0896
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0897
*     RESPECIFY                                                 01S0898
*      (GPR01F,                                                 01S0898
*       GPR00F) UNRESTRICTED;                                   01S0898
*   END;                            /* FREEMAIN(R)              01S0899
*                                      LV(BUFFLEN)SP(DEBSP)A(BUFFER)
*                                      FREE BUFR                     */
*                                                               01S0899
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE DEB                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0900
*   IF AP1DEBA^=0 THEN              /* DEB EXISTS                    */
         L     @09,AP1DEBA(,AP1REG)                             01S0900
         LTR   @09,@09                                          01S0900
         BZ    @RF00900                                         01S0900
*     DO;                                                       01S0901
*       DO;                         /* MODESET EXTKEY(DATAMGT)       */
*         SPKA(80);                 /* SET PSW KEY                   */
         LA    @09,80                                           01S0903
         SPKA  0(@09)                                           01S0903
*       END;                        /* MODESET EXTKEY(DATAMGT) DEB
*                                      KEY                           */
*       RFY                                                     01S0905
*         DEB BASED(DEBAPPB);       /* SO FREEMAIN WONT GET HI BYTE  */
*       DO;                         /* FREEMAIN(R) LV(LENGTH(DEBBASIC
*                                      )+LENGTH(DEB)+LENGTH(DEBDASD))
*                                      SP(DEBSP)A(DEB)               */
*         RESPECIFY                                             01S0907
*          (GPR01F,                                             01S0907
*           GPR00F) RESTRICTED;                                 01S0907
*         GPR00F=LENGTH(DEBBASIC)+LENGTH(DEB)+LENGTH(DEBDASD);/*
*                                      LENGTH REQUESTED              */
         LA    GPR00F,84                                        01S0908
*         GPR01F=DEBSP;             /* SP IN REG 1                   */
         LA    GPR01F,230                                       01S0909
*         GEN(SLL   GPR01F,24)                                  01S0910
*         NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;          01S0910
         SLL   GPR01F,24
*         GPR00F=GPR00F×GPR01F;     /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                    01S0911
*         GPR01F=ADDR(DEB);         /* SET REGISTER ONE              */
         L     @09,AP1DEBA(,AP1REG)                             01S0912
         L     GPR01F,DEBAPPB-1(,@09)                           01S0912
         LA    GPR01F,0(,GPR01F)                                01S0912
*         SVC(10);                  /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0913
*         RESPECIFY                                             01S0914
*          (GPR01F,                                             01S0914
*           GPR00F) UNRESTRICTED;                               01S0914
*       END;                        /* FREEMAIN(R) LV(LENGTH(DEBBASIC
*                                      )+LENGTH(DEB)+LENGTH(DEBDASD))
*                                      SP(DEBSP)A(DEB) FREE DEB      */
*       RFY                                                     01S0916
*         DEB;                      /* RESET                         */
*       RFY                                                     01S0917
*         GPR04F RSTD;                                          01S0917
*       DO;                         /* MODESET EXTKEY(TCB)      01S0918
*                                      WORKREG(GPR04F)               */
*         GPR04F=TCBPKF;            /* GET KEY FROM TCB              */
         L     @09,FLCCVT                                       01S0919
         L     @09,CVTTCBP(,@09)                                01S0919
         L     @09,TCBPTR(,@09)                                 01S0919
         SLR   GPR04F,GPR04F                                    01S0919
         IC    GPR04F,TCBPKF(,@09)                              01S0919
*         SPKA(GPR04F);             /* SET PSW KEY                   */
         SPKA  0(GPR04F)                                        01S0920
*       END;                        /* MODESET EXTKEY(TCB)      01S0921
*                                      WORKREG(GPR04F) USER KEY      */
*       RFY                                                     01S0922
*         GPR04F UNRSTD;                                        01S0922
*     END;                                                      01S0923
*   ELSE                                                        01S0924
*     ;                             /* DEB DOES NOT EXIST            */
*                                                               01S0924
@RF00900 DS    0H                                               01S0925
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE AP1BLOCK                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0925
*   RFY                                                         01S0925
*     GPR09F RSTD;                                              01S0925
*   GPR09F=AP1RET;                  /* SAVE RETURN CODE              */
         SLR   GPR09F,GPR09F                                    01S0926
         IC    GPR09F,AP1RET(,AP1REG)                           01S0926
*   RFY                                                         01S0927
*     GPR01F RSTD;                                              01S0927
*   RFY                                                         01S0928
*     GPR01F UNRSTD;                                            01S0928
*   DO;                             /* FREEMAIN(R) LV(LENGTH(AP1BLOCK
*                                      )+DATDLEN+PRDCBL+TESTDCBL+LENG
*                                      TH(IOBSTDRD)+LENGTH(IOBEXTEN)+
*                                      LENGTH(IOBAP1PT)+(LENGTH(CCW)*
*                                      MAXCCWS)+(LENGTH(WRKAREA)*WRKW
*                                      ORDS)+FUDGE)SP(DEBSP)A(AP1BLOC
*                                      K)                            */
*     RESPECIFY                                                 01S0930
*      (GPR01F,                                                 01S0930
*       GPR00F) RESTRICTED;                                     01S0930
*     GPR00F=LENGTH(AP1BLOCK)+DATDLEN+PRDCBL+TESTDCBL+LENGTH(IOBSTDRD)+
*         LENGTH(IOBEXTEN)+LENGTH(IOBAP1PT)+(LENGTH(CCW)*MAXCCWS)+(
*         LENGTH(WRKAREA)*WRKWORDS)+FUDGE;/* LENGTH REQUESTED        */
         LA    GPR00F,616                                       01S0931
         AL    GPR00F,PRDCBL                                    01S0931
         AL    GPR00F,TESTDCBL                                  01S0931
         AL    GPR00F,@CF03848                                  01S0931
*     GPR01F=DEBSP;                 /* SP IN REG 1                   */
         LA    GPR01F,230                                       01S0932
*     GEN(SLL   GPR01F,24)                                      01S0933
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;              01S0933
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                    01S0934
*     GPR01F=ADDR(AP1BLOCK);        /* SET REGISTER ONE              */
         LR    GPR01F,AP1REG                                    01S0935
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                               01S0936
*     RESPECIFY                                                 01S0937
*      (GPR01F,                                                 01S0937
*       GPR00F) UNRESTRICTED;                                   01S0937
*   END;                            /* FREEMAIN(R) LV(LENGTH(AP1BLOCK
*                                      )+DATDLEN+PRDCBL+TESTDCBL+LENG
*                                      TH(IOBSTDRD)+LENGTH(IOBEXTEN)+
*                                      LENGTH(IOBAP1PT)+(LENGTH(CCW)*
*                                      MAXCCWS)+(LENGTH(WRKAREA)*WRKW
*                                      ORDS)+FUDGE)SP(DEBSP)A(AP1BLOC
*                                      K)                            */
*   RETURN CODE(GPR09F);            /* RETURN WITH RETURN CODE       */
         L     @13,4(,@13)                                      01S0939
         L     @00,@SIZDATD                                     01S0939
         LR    @01,@07                                          01S0939
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@09                                          01S0939
         L     @14,12(,@13)                                     01S0939
         LM    @00,@12,20(@13)                                  01S0939
         BR    @14                                              01S0939
*   RFY                                                         01S0940
*     GPR09F UNRSTD;                                            01S0940
         EJECT
*                                                               01S0941
*   /*****************************************************************/
*   /*                                                               */
*   /* BADATA: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0941
*BADATA:                                                        01S0941
*   PROC;                           /* INTERNAL PROCEEDURE           */
*                                                               01S0941
BADATA   STM   @14,@12,@SA00002                                 01S0941
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT MESSAGES FOR BAD DATA FORMAT AND SET AP1QUIT            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0942
*   AP1QUIT=ON;                     /* END TESTING                   */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S0942
*   AP1CNCOD=MDFU;                  /* DATA FORMAT UNACCEPTABLE      */
         MVI   AP1CNCOD(AP1REG),X'04'                           01S0943
*   CALL COMM;                      /* SEND MSG TO CONSOLE           */
         BAL   @14,COMM                                         01S0944
*   AP1PRCOD=PVERDFU;               /* DATA FORMAT UNACCEPTABLE      */
         MVI   AP1PRCOD(AP1REG),X'23'                           01S0945
*   CNVTPRM(1)=ADDR(CC);            /* INAREA                @ZM01497*/
         LA    @09,CC(,AP1REG)                                  01S0946
         ST    @09,CNVTPRM                                      01S0946
*   CNVTPRM(2)=ADDR(AP1PRMSG)+41;   /* OUTAREA               @ZM01497*/
         LA    @09,AP1PRMSG(,AP1REG)                            01S0947
         AL    @09,@CF03317                                     01S0947
         ST    @09,CNVTPRM+4                                    01S0947
*   CNVTPRM(3)=ADDR(LENGTH(CC));    /* BYTES                 @ZM01497*/
         LA    @09,@CF00060                                     01S0948
         ST    @09,CNVTPRM+8                                    01S0948
*   RFY                                                         01S0949
*     GPR01P RSTD;                  /*                       @ZM01497*/
*   GPR01P=ADDR(CNVTPRM);           /* POINT TO PARMS        @ZM01497*/
         LA    GPR01P,CNVTPRM                                   01S0950
*   CALL CVTEBCDX;                  /* CNVT CC TO EBCDIC     @ZM01497*/
         BAL   @14,CVTEBCDX                                     01S0951
*   RFY                                                         01S0952
*     GPR01P UNRSTD;                /*                       @ZM01497*/
*   CALL COMM;                      /* PRINT MESSAGE                 */
         BAL   @14,COMM                                         01S0953
*   END;                            /* OF BADATA PROC                */
@EL00002 DS    0H                                               01S0954
@EF00002 DS    0H                                               01S0954
@ER00002 LM    @14,@12,@SA00002                                 01S0954
         BR    @14                                              01S0954
         EJECT
*                                                               01S0955
*   /*****************************************************************/
*   /*                                                               */
*   /* PRTCCW: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0955
*PRTCCW:                                                        01S0955
*   PROC;                           /* INTERNAL TO AP1 PROC          */
*                                                               01S0955
PRTCCW   STM   @14,@12,@SA00003                                 01S0955
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT CCW, CSW AND SNS AND PRINT                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0956
*   AP1PRCOD=PFCCW;                 /* FAILING CCW CSW MESSAGE       */
         MVI   AP1PRCOD(AP1REG),X'19'                           01S0956
*   IF CSWADDRB^=0 THEN             /* CCW EXISTS                    */
         LA    @09,AP1CSW(,AP1REG)                              01S0957
         BCTR  @09,0                                            01S0957
         L     @09,CSWADDRB-1(,@09)                             01S0957
         LA    @09,0(,@09)                                      01S0957
         LTR   @09,@09                                          01S0957
         BZ    @RF00957                                         01S0957
*     DO;                           /*                       @ZM01497*/
*       CNVTPRM(1)=CSWADDRB-LENGTH(CCW);/* INAREA            @ZM01497*/
         SL    @09,@CF00049                                     01S0959
         ST    @09,CNVTPRM                                      01S0959
*       CNVTPRM(2)=ADDR(AP1PRMSG)+21;/* OUTAREA              @ZM01497*/
         LA    @09,AP1PRMSG(,AP1REG)                            01S0960
         AL    @09,@CF03033                                     01S0960
         ST    @09,CNVTPRM+4                                    01S0960
*       CNVTPRM(3)=ADDR(LENGTH(CCW));/* BYTES                @ZM01497*/
         LA    @09,@CF00049                                     01S0961
         ST    @09,CNVTPRM+8                                    01S0961
*       RFY                                                     01S0962
*         GPR01P RSTD;              /*                       @ZM01497*/
*       GPR01P=ADDR(CNVTPRM);       /* POINT TO PARMS        @ZM01497*/
         LA    GPR01P,CNVTPRM                                   01S0963
*       CALL CVTEBCDX;              /* CNVT CCW TO EBCDIC    @ZM01497*/
         BAL   @14,CVTEBCDX                                     01S0964
*       RFY                                                     01S0965
*         GPR01P UNRSTD;            /*                       @ZM01497*/
*     END;                          /*                       @ZM01497*/
*   ELSE                                                        01S0967
*     ;                             /* NO CCW                        */
@RF00957 DS    0H                                               01S0968
*   CNVTPRM(1)=ADDR(AP1CSW)-1;      /* INAREA                @ZM01497*/
         LA    @09,AP1CSW(,AP1REG)                              01S0968
         BCTR  @09,0                                            01S0968
         ST    @09,CNVTPRM                                      01S0968
*   CNVTPRM(2)=ADDR(AP1PRMSG)+48;   /* OUTAREA               @ZM01497*/
         LA    @09,AP1PRMSG(,AP1REG)                            01S0969
         AL    @09,@CF00997                                     01S0969
         ST    @09,CNVTPRM+4                                    01S0969
*   CNVTPRM(3)=ADDR(LENGTH(CSW));   /* BYTES                 @ZM01497*/
         LA    @09,@CF00049                                     01S0970
         ST    @09,CNVTPRM+8                                    01S0970
*   RFY                                                         01S0971
*     GPR01P RSTD;                  /*                       @ZM01497*/
*   GPR01P=ADDR(CNVTPRM);           /* POINT TO PARMS        @ZM01497*/
         LA    GPR01P,CNVTPRM                                   01S0972
*   CALL CVTEBCDX;                  /* CNVT CSW TO EBCDIC    @ZM01497*/
         BAL   @14,CVTEBCDX                                     01S0973
*   RFY                                                         01S0974
*     GPR01P UNRSTD;                /*                       @ZM01497*/
*   AP1PRMSG(49:50)='  ';           /* BLANK FIRST BYTE OF CSW       */
         MVC   AP1PRMSG+48(2,AP1REG),@CC03322                   01S0975
*   CNVTPRM(1)=ADDR(AP1PCODE)-1;    /* INAREA                @ZM01497*/
         LA    @09,AP1PCODE(,AP1REG)                            01S0976
         BCTR  @09,0                                            01S0976
         ST    @09,CNVTPRM                                      01S0976
*   CNVTPRM(2)=ADDR(AP1PRMSG)+75;   /* OUTAREA               @ZM01497*/
         LA    @09,AP1PRMSG(,AP1REG)                            01S0977
         AL    @09,@CF03323                                     01S0977
         ST    @09,CNVTPRM+4                                    01S0977
*   CNVTPRM(3)=ADDR(PCODELN1);      /* L(AP1PCODE)+1 BYTES   @ZM01497*/
         LA    @09,PCODELN1                                     01S0978
         ST    @09,CNVTPRM+8                                    01S0978
*   RFY                                                         01S0979
*     GPR01P RSTD;                  /*                       @ZM01497*/
*   GPR01P=ADDR(CNVTPRM);           /* POINT TO PARMS        @ZM01497*/
         LA    GPR01P,CNVTPRM                                   01S0980
*   CALL CVTEBCDX;                  /* CNVT POST CD TO EBCDIC   01S0981
*                                                            @ZM01497*/
         BAL   @14,CVTEBCDX                                     01S0981
*   RFY                                                         01S0982
*     GPR01P UNRSTD;                /*                       @ZM01497*/
*   AP1PRMSG(76:77)='  ';           /* BLANK FIRST BYTE              */
         MVC   AP1PRMSG+75(2,AP1REG),@CC03322                   01S0983
*   CALL COMM;                      /* PRINT CCW AND CSW             */
         BAL   @14,COMM                                         01S0984
*   AP1PRCOD=PFSNS;                 /* FAILING SENSE MESSAGE         */
         MVI   AP1PRCOD(AP1REG),X'1A'                           01S0985
*   CNVTPRM(1)=ADDR(AP1SNS);        /* INAREA                @ZM01497*/
         LA    @09,AP1SNS(,AP1REG)                              01S0986
         ST    @09,CNVTPRM                                      01S0986
*   CNVTPRM(2)=ADDR(AP1PRMSG)+12;   /* OUTAREA               @ZM01497*/
         LA    @09,AP1PRMSG(,AP1REG)                            01S0987
         AL    @09,@CF00035                                     01S0987
         ST    @09,CNVTPRM+4                                    01S0987
*   CNVTPRM(3)=ADDR(LENGTH(SNSD));  /* BYTES                 @ZM01497*/
         LA    @09,@CF00066                                     01S0988
         ST    @09,CNVTPRM+8                                    01S0988
*   RFY                                                         01S0989
*     GPR01P RSTD;                  /*                       @ZM01497*/
*   GPR01P=ADDR(CNVTPRM);           /* POINT TO PARMS        @ZM01497*/
         LA    GPR01P,CNVTPRM                                   01S0990
*   CALL CVTEBCDX;                  /* CNVT SNS TO EBCDIC    @ZM01497*/
         BAL   @14,CVTEBCDX                                     01S0991
*   RFY                                                         01S0992
*     GPR01P UNRSTD;                /*                       @ZM01497*/
*   CALL COMM;                      /* PRINT SNS                     */
         BAL   @14,COMM                                         01S0993
*   END;                            /* OF PRTCCW PROC                */
@EL00003 DS    0H                                               01S0994
@EF00003 DS    0H                                               01S0994
@ER00003 LM    @14,@12,@SA00003                                 01S0994
         BR    @14                                              01S0994
         EJECT
*                                                               01S0995
*   /*****************************************************************/
*   /*                                                               */
*   /* IO: PROCEDURE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0995
*IO:                                                            01S0995
*   PROC;                           /* INTERNAL TO AP1 PROC          */
*                                                               01S0995
IO       STM   @14,@12,@SA00004                                 01S0995
*   /*****************************************************************/
*   /*                                                               */
*   /* DOES ACTUAL I/O TO TEST DEVICE. SETS UP INTERFACE TO EXCP AND */
*   /* CALLS IT. SUBTASK IAPTIMER CHECKS TO SEE IF I/O HAS GONE 1 TO */
*   /* 2 MINUTES WITHOUT RESPONSE AND PURGES IT.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0996
*                                                               01S0996
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0996
*   AP1IOC=OFF;                     /* RESET I/O COMPLETE FLAG       */
*   AP1EDP=OFF;                     /* RESET ENV DATA FLAG           */
         NI    AP1IOC(AP1REG),B'10011111'                       01S0997
*   IOBSEEK=AP1SEEK;                /* SET UP IOB SEEK               */
*                                                               01S0998
         L     @09,AP1IOBA(,AP1REG)                             01S0998
         MVC   IOBSEEK(8,@09),AP1SEEK(AP1REG)                   01S0998
*   /*****************************************************************/
*   /*                                                               */
*   /* GET INTO DEB KEY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0999
*   DO;                             /* MODESET EXTKEY(DATAMGT)       */
*     SPKA(80);                     /* SET PSW KEY                   */
         LA    @09,80                                           01S1000
         SPKA  0(@09)                                           01S1000
*   END;                            /* MODESET EXTKEY(DATAMGT) DATA
*                                      MGT KEY                       */
*   DEBDVMOD=AP1FM;                 /* SET UP DEB FILE MASK          */
         L     @09,AP1DEBA(,AP1REG)                             01S1002
         MVC   DEBDVMOD+32(1,@09),AP1FM(AP1REG)                 01S1002
*   RFY                                                         01S1003
*     GPR04F RSTD;                                              01S1003
*   DO;                             /* MODESET EXTKEY(TCB)      01S1004
*                                      WORKREG(GPR04F)               */
*     GPR04F=TCBPKF;                /* GET KEY FROM TCB              */
         L     @09,FLCCVT                                       01S1005
         L     @09,CVTTCBP(,@09)                                01S1005
         L     @09,TCBPTR(,@09)                                 01S1005
         SLR   GPR04F,GPR04F                                    01S1005
         IC    GPR04F,TCBPKF(,@09)                              01S1005
*     SPKA(GPR04F);                 /* SET PSW KEY                   */
         SPKA  0(GPR04F)                                        01S1006
*   END;                            /* MODESET EXTKEY(TCB)      01S1007
*                                      WORKREG(GPR04F) USER KEY      */
*   RFY                                                         01S1008
*     GPR04F UNRSTD;                                            01S1008
*                                                               01S1008
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP UNTIL I/O COMPLETE (WITH NO ERPS FOR HDWE TEST)          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1009
*   DO WHILE AP1IOC=OFF;            /* WHILE I/O NOT COMPLETE        */
         B     @DE01009                                         01S1009
@DL01009 DS    0H                                               01S1010
*     AP1SNS=AP1SNS&&AP1SNS;        /* CLEAR SENSE                   */
*                                                               01S1010
         XC    AP1SNS(24,AP1REG),AP1SNS(AP1REG)                 01S1010
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE SYSEVENT DONTSWAP                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1011
*     GENERATE;                                                 01S1011
*                                                               01S1011
         SYSEVENT DONTSWAP       DONT SWAP
*     /***************************************************************/
*     /*                                                             */
*     /* SETUP FOR EXCP                                              */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1012
*     AP1IOC=ON;                    /* ASSUME I/O COMPLETE--WILL BE
*                                      RESET BY ABN APP IF EDP       */
         OI    AP1IOC(AP1REG),B'01000000'                       01S1012
*     RFY                                                       01S1013
*       GPR01P RSTD;                                            01S1013
*     GPR01P=AP1IOBA;               /* GET IOB FOR EXCP              */
*                                                               01S1014
         L     GPR01P,AP1IOBA(,AP1REG)                          01S1014
*     /***************************************************************/
*     /*                                                             */
*     /* EXCP                                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1015
*     GENERATE;                                                 01S1015
        EXCP  (1)                IOB ADDRESS IN REG 1
*     RFY                                                       01S1016
*       GPR01P UNRSTD;                                          01S1016
*     AP1IOACT=ON;                  /* I/O ACTIVE                    */
*                                                               01S1017
         OI    AP1IOACT(AP1REG),B'10000000'                     01S1017
*     /***************************************************************/
*     /*                                                             */
*     /* WAIT ON I/O                                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1018
*     DO;                           /* WAIT ECB(AP1IOECB)            */
*       RESPECIFY                                               01S1019
*        (GPR00P,                                               01S1019
*         GPR01P) RESTRICTED;                                   01S1019
*       GPR00P=1;                   /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                         01S1020
*       GPR01P=ADDR(AP1IOECB);      /* ADDRESS OF ECB                */
         LA    GPR01P,AP1IOECB(,AP1REG)                         01S1021
*       SVC(1);                     /* WAIT SVC                      */
         SVC   1                                                01S1022
*       RESPECIFY                                               01S1023
*        (GPR00P,                                               01S1023
*         GPR01P) UNRESTRICTED;                                 01S1023
*     END;                          /* WAIT ECB(AP1IOECB)            */
*     AP1IOACT=OFF;                 /* I/O FINISHED                  */
*     AP1TIMIN=OFF;                 /* RESET TIMER                   */
*                                                               01S1026
         NI    AP1IOACT(AP1REG),B'00111111'                     01S1026
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE SYSEVENT OKSWAP                                       */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1027
*     GENERATE;                                                 01S1027
*                                                               01S1027
         SYSEVENT OKSWAP         OK TO SWAP
*     /***************************************************************/
*     /*                                                             */
*     /* MAP I/O STATUS TO AP1BLOCK. SENSE WAS MAPPED BY ABNORMAL END*/
*     /* APPENDAGE                                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1028
*     AP1CSW=IOBCSW;                /* MAP CSW                       */
         L     @09,AP1IOBA(,AP1REG)                             01S1028
         MVC   AP1CSW(7,AP1REG),IOBCSW(@09)                     01S1028
*     AP1PCODE=AP1IOECB(1:1);       /* MAP POST CODE                 */
         MVC   AP1PCODE(1,AP1REG),AP1IOECB(AP1REG)              01S1029
*   END;                            /* DO WHILE                      */
@DE01009 TM    AP1IOC(AP1REG),B'01000000'                       01S1030
         BZ    @DL01009                                         01S1030
*   END;                            /* OF IO PROC                    */
@EL00004 DS    0H                                               01S1031
@EF00004 DS    0H                                               01S1031
@ER00004 LM    @14,@12,@SA00004                                 01S1031
         BR    @14                                              01S1031
         EJECT
*                                                               01S1032
*   /*****************************************************************/
*   /*                                                               */
*   /* CVTEBCDX: PROCEDURE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1032
*CVTEBCDX:                                                      01S1032
*   PROC(INAREA,OUTAREA,BYTES);     /* INTERNAL TO AP1 PROC          */
*                                                               01S1032
CVTEBCDX STM   @14,@12,@SA00005                                 01S1032
         MVC   @PC00005(12),0(@01)                              01S1032
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERTS BINARY DATA IN STORAGE TO EBCDIC DATA IN STORAGE.    */
*   /* INAREA IS AREA CONTAINING BINARY DATA. OUTAREA IS AREA TO     */
*   /* CONTAIN EBCDIC DATA IN THE FORM XXXX XXXX.... BYTES IS NUMBER */
*   /* OF BYTES IN INAREA.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1033
*   RFY                                                         01S1033
*    (GPR00F,                                                   01S1033
*     GPR01P) RSTD;                                             01S1033
*                                                               01S1033
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT TWO BINARY BYTES AT A TIME                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1034
*   DO COUNTER=1 TO(BYTES/2);       /* TWO BYTES AT A TIME           */
         LA    COUNTER,1                                        01S1034
         B     @DE01034                                         01S1034
@DL01034 DS    0H                                               01S1035
*     GPR00F=ADDR(INAREA)->FIXED16(COUNTER);/* GET HALFWORD  @ZM01497*/
*                                                               01S1035
         LR    @06,COUNTER                                      01S1035
         ALR   @06,@06                                          01S1035
         L     @15,@PC00005                                     01S1035
         BCTR  @15,0                                            01S1035
         BCTR  @15,0                                            01S1035
         LH    GPR00F,FIXED16(@06,@15)                          01S1035
         N     GPR00F,@CF03868                                  01S1035
*     /***************************************************************/
*     /*                                                             */
*     /* OF BINARY                                           @ZM01497*/
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1036
*     GPR01P=ADDR(OUTAREA)+(5*(COUNTER-1));/* AREA FOR EBCDIC   01S1036
*                                                            @ZM01497*/
*                                                               01S1036
         L     GPR01P,@PC00005+4                                01S1036
         LR    @06,COUNTER                                      01S1036
         BCTR  @06,0                                            01S1036
         MH    @06,@CH00085                                     01S1036
         ALR   GPR01P,@06                                       01S1036
*     /***************************************************************/
*     /*                                                             */
*     /* REG0 CONTAINS HALFWORD OF BINARY INFO (SIGN IGNORED)..REG1  */
*     /* POINTS TO FULLWORD TO CONTAIN EBCDIC REPRESENTATION         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1037
*     RFY                                                       01S1037
*      (GPR02F,                                                 01S1037
*       GPR03F) RSTD;                                           01S1037
*     GENERATE;                                                 01S1038
*                      INPUT =   0000WXYZ
         SLL   @00,12            0WXYZ000
         ST    @00,0(@01)
         UNPK  0(4,@01),0(3,@01) FWFXFY0Z
         OI    3(@01),X'F0'      FWFXFYFZ
         LA    @00,4             LOOP COUNTER
LOOPEBCD CLI   0(@01),X'F9'      IS IT A NUMBER
         BNH   NUMBER
         IC    @02,0(@01)        GET CHARACTER
         SH    @02,=X'0039'      CHANGE TO ALPHA
         STC   @02,0(@01)        PUT IT BACK
NUMBER   LA    @01,1(@01)        GO TO NEXT CHAR
         BCT   @00,LOOPEBCD      AGAIN
*     RFY                                                       01S1039
*      (GPR02F,                                                 01S1039
*       GPR03F) UNRSTD;                                         01S1039
*   END;                            /* OF DO                         */
         AL    COUNTER,@CF00045                                 01S1040
@DE01034 L     @06,@PC00005+8                                   01S1040
         L     @02,BYTES(,@06)                                  01S1040
         SRDA  @02,32                                           01S1040
         D     @02,@CF00060                                     01S1040
         CR    COUNTER,@03                                      01S1040
         BNH   @DL01034                                         01S1040
*   RFY                                                         01S1041
*    (GPR00F,                                                   01S1041
*     GPR01P) UNRSTD;                                           01S1041
*   END;                            /* OF CVTEBCDX PROC              */
@EL00005 DS    0H                                               01S1042
@EF00005 DS    0H                                               01S1042
@ER00005 LM    @14,@12,@SA00005                                 01S1042
         BR    @14                                              01S1042
         EJECT
*                                                               01S1043
*   /*****************************************************************/
*   /*                                                               */
*   /* COMM: PROCEDURE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1043
*COMM:                                                          01S1043
*   PROC;                           /* INTERNAL TO AP1 PROC          */
*                                                               01S1043
COMM     STM   @14,@12,@SA00006                                 01S1043
*   /*****************************************************************/
*   /*                                                               */
*   /* CALLS PRINT OR CONS PROCS. IF AP1CNCOD IS NON-ZERO, THE       */
*   /* CONSOLE PROC IS CALLED AND CONSOLE MESSAGES AND REPLIES ARE   */
*   /* SENT TO THE PRINTER. IF AP1CNCOD IS ZERO, THE PRINT PROC IS   */
*   /* CALLED.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1044
*/* CNCOD  TYPE    TEXT     (XXX = DEVICE ADDRESS)              01S1044
*    01    WTOR    XXX DO YOU WANT TO RUN DATA VERIFICATION TEST,
*                        YES OR NO?                             01S1044
*    02    WTO     XXX AP1 STARTED                              01S1044
*    03    WTO     XXX SUSPECTED DRIVE PROBLEM                  01S1044
*    04    WTO     XXX DATA FORMAT UNACCEPTABLE, TESTING TERMINATED
*    05    WTO     XXX ERROR READING DATA                       01S1044
*    06    WTO     XXX ALL DATA 'MACHINE READABLE' WITHOUT ERRORS
*    07    WTO     XXX AP1 ENDED                                01S1044
*    08    WTO     XXX WRITE TESTS BYPASSED                     01S1044
*    09    WTO     XXX I/O TIMEOUT, TESTING TERMINATED          01S1044
*    10    WTO     XXX NO DRIVE PROBLEMS FOUND                  01S1044
*    11    WTO     XXX SYSOUT OPEN FAILED, TESTING TERMINATED   01S1044
*    12    WTO     XXX NO ''TESTDD'' DD CARD, TESTING BYPASSED  01S1044
*    13    WTO     XXX UNABLE TO OPEN ''TESTDD'', TESTING TERMINATED
*    14    WTO     XXX INCORRECT DEVICE TYPE, TESTING TERMINATED
*    15    WTO     XXX DATA VERIFICATION TEST STARTED           01S1044
*    16    WTO     XXX WRITE INHIBIT SWITCH ON, WRITE TESTS BYPASSED
*    17    WTO     XXX DEVICE NOT READY, TESTING TERMINATED     01S1044
*                                                               01S1044
*    PRCOD  TEXT                                                01S1044
*    01  '          M O V E A B L E   H E A D   E R R O R   T A B L E'
*    02  '      HEAD NUMBER  DATA CHK   SEEK VERIFY   WRITE CHK   DATA
*         CHK    DATA COMP'                                     01S1044
*    03  '                                CHECK                 01S1044
*        CE CYL     ERROR'                                      01S1044
*    04  '          F I X E D   H E A D   E R R O R   T A B L E'
*    05  '      HEAD NUMBER   DATA CHECK   SEEK VERIFY   HEAD NUMBER
*         DATA CHECK   SEEK VERIFY'                             01S1044
*    06  '                                   CHECK              01S1044
*                        CHECK'                                 01S1044
*    07  'SENSE TEST'                                           01S1044
*    08  'RECALIBRATE TEST'                                     01S1044
*    09  'RHAMH TEST'                                           01S1044
*    10  'RHAFH TEST'                                           01S1044
*    11  'SK192 TEST'                                           01S1044
*    12  'SKINCR TEST'                                          01S1044
*    13  'SKMAX TEST'                                           01S1044
*    14  'SKRAN TEST'                                           01S1044
*    15  'RHA TEST'                                             01S1044
*    16  'WRT TEST'                                             01S1044
*    17  'RR01 TEST'                                            01S1044
*    18  'RR01 DATA COMPARE ERROR--EXP =                       REC ='
*    19  'RDMT TEST'                                            01S1044
*    20  'RDMT DATA COMPARE ERROR--EXP =                       REC ='
*    21  'FTWRT TEST'                                           01S1044
*    22  'AMDET TEST'                                           01S1044
*    23  'AMDET DATA COMPARE ERROR--EXP =                      REC ='
*    24  'SD TEST'                                              01S1044
*    25  '      FAILING CCW =                        CSW =      01S1044
*                 ECB ='                                        01S1044
*    26  '      SNS ='                                          01S1044
*    27  'WRT WRITE INIHIBIT SWITCH ON'                         01S1044
*    28  'WRTPAD TEST'                                          01S1044
*    29  'WRTPAD READ WRONG RECORD--EXP =                       REC ='
*    30  'DATAVER DATA CHECKS EXCEEDED THRESHOLD'               01S1044
*    31  'DATAVER DATA CHECK CCHH ='                            01S1044
*    32  'DATAVER TEST'                                         01S1044
*    33  'CLEANUP TEST'                                         01S1044
*    34  'RHA HA INCORRECT -- EXP=            REC='             01S1044
*    35  'DATAVER DATA FORMAT UNACCEPTABLE ON CYL'              01S1044
*    36  'RPS TEST'                                             01S1044
*                                                                    */
*                                                               01S1044
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSOLE MESSAGE ADDRESSES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1044
*   DCL                                                         01S1044
*     CNMSGPTR(17) PTR(31) INIT(ADDR(CNMSG01),ADDR(CNMSG02),ADDR(
*         CNMSG03),ADDR(CNMSG04),ADDR(CNMSG05),ADDR(CNMSG06),ADDR(
*         CNMSG07),ADDR(CNMSG08),ADDR(CNMSG09),ADDR(CNMSG10),ADDR(
*         CNMSG11),ADDR(CNMSG12),ADDR(CNMSG13),ADDR(CNMSG14),ADDR(
*         CNMSG15),ADDR(CNMSG16),ADDR(CNMSG17));/* ARRAY OF CONSOLE
*                                      MESSAGE ADDRESSES             */
*                                                               01S1044
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINTER MESSAGE ADDRESSES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1045
*   DCL                                                         01S1045
*     PRMSGPTR(36) PTR(31) INIT(ADDR(PRMSG01),ADDR(PRMSG02),ADDR(
*         PRMSG03),ADDR(PRMSG04),ADDR(PRMSG05),ADDR(PRMSG06),ADDR(
*         PRMSG07),ADDR(PRMSG08),ADDR(PRMSG09),ADDR(PRMSG10),ADDR(
*         PRMSG11),ADDR(PRMSG12),ADDR(PRMSG13),ADDR(PRMSG14),ADDR(
*         PRMSG15),ADDR(PRMSG16),ADDR(PRMSG17),ADDR(PRMSG18),ADDR(
*         PRMSG19),ADDR(PRMSG20),ADDR(PRMSG21),ADDR(PRMSG22),ADDR(
*         PRMSG23),ADDR(PRMSG24),ADDR(PRMSG25),ADDR(PRMSG26),ADDR(
*         PRMSG27),ADDR(PRMSG28),ADDR(PRMSG29),ADDR(PRMSG30),ADDR(
*         PRMSG31),ADDR(PRMSG32),ADDR(PRMSG33),ADDR(PRMSG34),ADDR(
*         PRMSG35),ADDR(PRMSG36));  /* ADDRESSES OF PRINTER MESSAGES */
*                                                               01S1045
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSOLE MESSAGES                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1046
*   DCL                                                         01S1046
*     1 CNMSG01 LOCAL,                                          01S1046
*      2 * FIXED(8) INIT(3),        /* REPLY LENGTH                  */
*      2 * PTR(24) INIT(0),         /* REPLY ADDRESS                 */
*      2 * PTR(31) INIT(0),         /* REPLY ECB ADDRESS             */
*      2 * FIXED(15) INIT(68),      /* MESSAGE LENGTH                */
*      2 * BIT(16) INIT('8000'X),   /* MCS FLAGS                     */
*      2 * CHAR(64) INIT(                                       01S1046
*'IAP001A XXX DO YOU WANT TO RUN DATA VERIFICATION TEST, YES OR NO'),
*      2 * BIT(32) INIT('40001000'X);/* DESC=2, ROUT=4               */
*   DCL                                                         01S1047
*     1 CNMSG02 LOCAL,                                          01S1047
*      2 * FIXED(8) INIT(0),                                    01S1047
*      2 * PTR(24) INIT(0),                                     01S1047
*      2 * PTR(31) INIT(0),                                     01S1047
*      2 * FIXED(15) INIT(27),                                  01S1047
*      2 * BIT(16) INIT('8000'X),                               01S1047
*      2 * CHAR(23) INIT('IAP002I XXX AP1 STARTED'),            01S1047
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1048
*     1 CNMSG03 LOCAL,                                          01S1048
*      2 * FIXED(8) INIT(0),                                    01S1048
*      2 * PTR(24) INIT(0),                                     01S1048
*      2 * PTR(31) INIT(0),                                     01S1048
*      2 * FIXED(15) INIT(39),                                  01S1048
*      2 * BIT(16) INIT('8000'X),                               01S1048
*      2 * CHAR(35) INIT('IAP003I XXX SUSPECTED DRIVE PROBLEM'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1049
*     1 CNMSG04 LOCAL,                                          01S1049
*      2 * FIXED(8) INIT(0),                                    01S1049
*      2 * PTR(24) INIT(0),                                     01S1049
*      2 * PTR(31) INIT(0),                                     01S1049
*      2 * FIXED(15) INIT(60),                                  01S1049
*      2 * BIT(16) INIT('8000'X),                               01S1049
*      2 * CHAR(56) INIT(                                       01S1049
*            'IAP004I XXX DATA FORMAT UNACCEPTABLE, TESTING TERMINATED'
*            ),                                                 01S1049
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1050
*     1 CNMSG05 LOCAL,                                          01S1050
*      2 * FIXED(8) INIT(0),                                    01S1050
*      2 * PTR(24) INIT(0),                                     01S1050
*      2 * PTR(31) INIT(0),                                     01S1050
*      2 * FIXED(15) INIT(34),                                  01S1050
*      2 * BIT(16) INIT('8000'X),                               01S1050
*      2 * CHAR(30) INIT('IAP005I XXX ERROR READING DATA'),     01S1050
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1051
*     1 CNMSG06 LOCAL,                                          01S1051
*      2 * FIXED(8) INIT(0),                                    01S1051
*      2 * PTR(24) INIT(0),                                     01S1051
*      2 * PTR(31) INIT(0),                                     01S1051
*      2 * FIXED(15) INIT(58),                                  01S1051
*      2 * BIT(16) INIT('8000'X),                               01S1051
*      2 * CHAR(54) INIT(                                       01S1051
*            'IAP006I XXX ALL DATA ''MACHINE READABLE'' WITHOUT ERRORS'
*            ),                                                 01S1051
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1052
*     1 CNMSG07 LOCAL,                                          01S1052
*      2 * FIXED(8) INIT(0),                                    01S1052
*      2 * PTR(24) INIT(0),                                     01S1052
*      2 * PTR(31) INIT(0),                                     01S1052
*      2 * FIXED(15) INIT(25),                                  01S1052
*      2 * BIT(16) INIT('8000'X),                               01S1052
*      2 * CHAR(21) INIT('IAP007I XXX AP1 ENDED'),              01S1052
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1053
*     1 CNMSG08 LOCAL,                                          01S1053
*      2 * FIXED(8) INIT(0),                                    01S1053
*      2 * PTR(24) INIT(0),                                     01S1053
*      2 * PTR(31) INIT(0),                                     01S1053
*      2 * FIXED(15) INIT(36),                                  01S1053
*      2 * BIT(16) INIT('8000'X),                               01S1053
*      2 * CHAR(32) INIT('IAP008I XXX WRITE TESTS BYPASSED'),   01S1053
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1054
*     1 CNMSG09 LOCAL,                                          01S1054
*      2 * FIXED(8) INIT(0),                                    01S1054
*      2 * PTR(24) INIT(0),                                     01S1054
*      2 * PTR(31) INIT(0),                                     01S1054
*      2 * FIXED(15) INIT(47),                                  01S1054
*      2 * BIT(16) INIT('8000'X),                               01S1054
*      2 * CHAR(43) INIT('IAP009I XXX I/O TIMEOUT, TESTING TERMINATED')
*         ,                                                     01S1054
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1055
*     1 CNMSG10 LOCAL,                                          01S1055
*      2 * FIXED(8) INIT(0),                                    01S1055
*      2 * PTR(24) INIT(0),                                     01S1055
*      2 * PTR(31) INIT(0),                                     01S1055
*      2 * FIXED(15) INIT(39),                                  01S1055
*      2 * BIT(16) INIT('8000'X),                               01S1055
*      2 * CHAR(35) INIT('IAP010I XXX NO DRIVE PROBLEMS FOUND'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1056
*     1 CNMSG11 LOCAL,                                          01S1056
*      2 * FIXED(8) INIT(0),                                    01S1056
*      2 * PTR(24) INIT(0),                                     01S1056
*      2 * PTR(31) INIT(0),                                     01S1056
*      2 * FIXED(15) INIT(54),                                  01S1056
*      2 * BIT(16) INIT('8000'X),                               01S1056
*      2 * CHAR(50) INIT(                                       01S1056
*            'IAP011I XXX SYSOUT OPEN FAILED, TESTING TERMINATED'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1057
*     1 CNMSG12 LOCAL,                                          01S1057
*      2 * FIXED(8) INIT(0),                                    01S1057
*      2 * PTR(24) INIT(0),                                     01S1057
*      2 * PTR(31) INIT(0),                                     01S1057
*      2 * FIXED(15) INIT(53),                                  01S1057
*      2 * BIT(16) INIT('8000'X),                               01S1057
*      2 * CHAR(49) INIT(                                       01S1057
*            'IAP012I XXX NO ''TESTDD'' DD CARD, TESTING BYPASSED'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1058
*     1 CNMSG13 LOCAL,                                          01S1058
*      2 * FIXED(8) INIT(0),                                    01S1058
*      2 * PTR(24) INIT(0),                                     01S1058
*      2 * PTR(31) INIT(0),                                     01S1058
*      2 * FIXED(15) INIT(59),                                  01S1058
*      2 * BIT(16) INIT('8000'X),                               01S1058
*      2 * CHAR(55) INIT(                                       01S1058
*            'IAP013I XXX UNABLE TO OPEN ''TESTDD'', TESTING TERMINATED
*            ),                                                 01S1058
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1059
*     1 CNMSG14 LOCAL,                                          01S1059
*      2 * FIXED(8) INIT(0),                                    01S1059
*      2 * PTR(24) INIT(0),                                     01S1059
*      2 * PTR(31) INIT(0),                                     01S1059
*      2 * FIXED(15) INIT(57),                                  01S1059
*      2 * BIT(16) INIT('8000'X),                               01S1059
*      2 * CHAR(53) INIT(                                       01S1059
*            'IAP014I XXX INCORRECT DEVICE TYPE, TESTING TERMINATED'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1060
*     1 CNMSG15 LOCAL,                                          01S1060
*      2 * FIXED(8) INIT(0),                                    01S1060
*      2 * PTR(24) INIT(0),                                     01S1060
*      2 * PTR(31) INIT(0),                                     01S1060
*      2 * FIXED(15) INIT(46),                                  01S1060
*      2 * BIT(16) INIT('8000'X),                               01S1060
*      2 * CHAR(42) INIT('IAP015I XXX DATA VERIFICATION TEST STARTED'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1061
*     1 CNMSG16 LOCAL,                                          01S1061
*      2 * FIXED(8) INIT(0),                                    01S1061
*      2 * PTR(24) INIT(0),                                     01S1061
*      2 * PTR(31) INIT(0),                                     01S1061
*      2 * FIXED(15) INIT(61),                                  01S1061
*      2 * BIT(16) INIT('8000'X),                               01S1061
*      2 * CHAR(57) INIT(                                       01S1061
*            'IAP016I XXX WRITE INHIBIT SWITCH ON, WRITE TESTS BYPASSED
*            ),                                                 01S1061
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*   DCL                                                         01S1062
*     1 CNMSG17 LOCAL,                                          01S1062
*      2 * FIXED(8) INIT(0),                                    01S1062
*      2 * PTR(24) INIT(0),                                     01S1062
*      2 * PTR(31) INIT(0),                                     01S1062
*      2 * FIXED(15) INIT(52),                                  01S1062
*      2 * BIT(16) INIT('8000'X),                               01S1062
*      2 * CHAR(48) INIT(                                       01S1062
*            'IAP017I XXX DEVICE NOT READY, TESTING TERMINATED'),
*      2 * BIT(32) INIT('10001000'X);/* DESC=4, ROUT=4               */
*                                                               01S1062
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINTER MESSAGES                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1063
*   DCL                                                         01S1063
*     HEADER CHAR(110) INIT('         A P 1    A N A L Y S I S  P R O G
*R A M   O N E                                       PAGE');/* PAGE
*                                      HEADER                        */
*   DCL                                                         01S1064
*     1 PRMSG01 LOCAL,                                          01S1064
*      2 * FIXED(15) INIT(60),                                  01S1064
*      2 * CHAR(60) INIT(                                       01S1064
*'           M O V E A B L E   H E A D   E R R O R   T A B L E');
*   DCL                                                         01S1065
*     1 PRMSG02 LOCAL,                                          01S1065
*      2 * FIXED(15) INIT(77),                                  01S1065
*      2 * CHAR(77) INIT('      HEAD NUMBER  DATA CHK   SEEK VERIFY   W
*ITE CHK   DATA CHK    DATA COMP');                             01S1065
*   DCL                                                         01S1066
*     1 PRMSG03 LOCAL,                                          01S1066
*      2 * FIXED(15) INIT(75),                                  01S1066
*      2 * CHAR(75) INIT('                                 CHECK
*            CE CYL      ERROR');                               01S1066
*   DCL                                                         01S1067
*     1 PRMSG04 LOCAL,                                          01S1067
*      2 * FIXED(15) INIT(53),                                  01S1067
*      2 * CHAR(53) INIT(                                       01S1067
*            '          F I X E D   H E A D   E R R O R   T A B L E');
*   DCL                                                         01S1068
*     1 PRMSG05 LOCAL,                                          01S1068
*      2 * FIXED(15) INIT(83),                                  01S1068
*      2 * CHAR(83) INIT('      HEAD NUMBER  DATA CHECK   SEEK VERIFY
*HEAD NUMBER  DATA CHECK   SEEK VERIFY');                       01S1068
*   DCL                                                         01S1069
*     1 PRMSG06 LOCAL,                                          01S1069
*      2 * FIXED(15) INIT(80),                                  01S1069
*      2 * CHAR(80) INIT('                                   CHECK
*                             CHECK');                          01S1069
*   DCL                                                         01S1070
*     1 PRMSG07 LOCAL,                                          01S1070
*      2 * FIXED(15) INIT(8),                                   01S1070
*      2 * CHAR(8) INIT('SNS TEST');                            01S1070
*   DCL                                                         01S1071
*     1 PRMSG08 LOCAL,                                          01S1071
*      2 * FIXED(15) INIT(10),                                  01S1071
*      2 * CHAR(10) INIT('RECAL TEST');                         01S1071
*   DCL                                                         01S1072
*     1 PRMSG09 LOCAL,                                          01S1072
*      2 * FIXED(15) INIT(10),                                  01S1072
*      2 * CHAR(10) INIT('RHAMH TEST');                         01S1072
*   DCL                                                         01S1073
*     1 PRMSG10 LOCAL,                                          01S1073
*      2 * FIXED(15) INIT(10),                                  01S1073
*      2 * CHAR(10) INIT('RHAFH TEST');                         01S1073
*   DCL                                                         01S1074
*     1 PRMSG11 LOCAL,                                          01S1074
*      2 * FIXED(15) INIT(10),                                  01S1074
*      2 * CHAR(10) INIT('SK192 TEST');                         01S1074
*   DCL                                                         01S1075
*     1 PRMSG12 LOCAL,                                          01S1075
*      2 * FIXED(15) INIT(11),                                  01S1075
*      2 * CHAR(11) INIT('SKINCR TEST');                        01S1075
*   DCL                                                         01S1076
*     1 PRMSG13 LOCAL,                                          01S1076
*      2 * FIXED(15) INIT(10),                                  01S1076
*      2 * CHAR(10) INIT('SKMAX TEST');                         01S1076
*   DCL                                                         01S1077
*     1 PRMSG14 LOCAL,                                          01S1077
*      2 * FIXED(15) INIT(10),                                  01S1077
*      2 * CHAR(10) INIT('SKRAN TEST');                         01S1077
*   DCL                                                         01S1078
*     1 PRMSG15 LOCAL,                                          01S1078
*      2 * FIXED(15) INIT(8),                                   01S1078
*      2 * CHAR(8) INIT('RHA TEST');                            01S1078
*   DCL                                                         01S1079
*     1 PRMSG16 LOCAL,                                          01S1079
*      2 * FIXED(15) INIT(8),                                   01S1079
*      2 * CHAR(8) INIT('WRT TEST');                            01S1079
*   DCL                                                         01S1080
*     1 PRMSG17 LOCAL,                                          01S1080
*      2 * FIXED(15) INIT(9),                                   01S1080
*      2 * CHAR(9) INIT('RR01 TEST');                           01S1080
*   DCL                                                         01S1081
*     1 PRMSG18 LOCAL,                                          01S1081
*      2 * FIXED(15) INIT(58),                                  01S1081
*      2 * CHAR(58) INIT(                                       01S1081
*'RR01 DATA COMPARE ERROR--EXP =                       REC ='); 01S1081
*   DCL                                                         01S1082
*     1 PRMSG19 LOCAL,                                          01S1082
*      2 * FIXED(15) INIT(9),                                   01S1082
*      2 * CHAR(9) INIT('RDMT TEST');                           01S1082
*   DCL                                                         01S1083
*     1 PRMSG20 LOCAL,                                          01S1083
*      2 * FIXED(15) INIT(58),                                  01S1083
*      2 * CHAR(58) INIT(                                       01S1083
*'RDMT DATA COMPARE ERROR--EXP =                       REC ='); 01S1083
*   DCL                                                         01S1084
*     1 PRMSG21 LOCAL,                                          01S1084
*      2 * FIXED(15) INIT(10),                                  01S1084
*      2 * CHAR(10) INIT('FTWRT TEST');                         01S1084
*   DCL                                                         01S1085
*     1 PRMSG22 LOCAL,                                          01S1085
*      2 * FIXED(15) INIT(10),                                  01S1085
*      2 * CHAR(10) INIT('AMDET TEST');                         01S1085
*   DCL                                                         01S1086
*     1 PRMSG23 LOCAL,                                          01S1086
*      2 * FIXED(15) INIT(59),                                  01S1086
*      2 * CHAR(59) INIT(                                       01S1086
*'AMDET DATA COMPARE ERROR--EXP =                       REC =');
*   DCL                                                         01S1087
*     1 PRMSG24 LOCAL,                                          01S1087
*      2 * FIXED(15) INIT(7),                                   01S1087
*      2 * CHAR(7) INIT('SD TEST');                             01S1087
*   DCL                                                         01S1088
*     1 PRMSG25 LOCAL,                                          01S1088
*      2 * FIXED(15) INIT(75),                                  01S1088
*      2 * CHAR(75) INIT('      FAILING CCW =                        CS
* =                      ECB =');                               01S1088
*   DCL                                                         01S1089
*     1 PRMSG26 LOCAL,                                          01S1089
*      2 * FIXED(15) INIT(11),                                  01S1089
*      2 * CHAR(11) INIT('      SNS =');                        01S1089
*   DCL                                                         01S1090
*     1 PRMSG27 LOCAL,                                          01S1090
*      2 * FIXED(15) INIT(27),                                  01S1090
*      2 * CHAR(27) INIT('WRT WRITE INHIBIT SWITCH ON');        01S1090
*   DCL                                                         01S1091
*     1 PRMSG28 LOCAL,                                          01S1091
*      2 * FIXED(15) INIT(11),                                  01S1091
*      2 * CHAR(11) INIT('WRTPAD TEST');                        01S1091
*   DCL                                                         01S1092
*     1 PRMSG29 LOCAL,                                          01S1092
*      2 * FIXED(15) INIT(59),                                  01S1092
*      2 * CHAR(59) INIT(                                       01S1092
*'WRTPAD READ WRONG RECORD--EXP =                       REC =');
*   DCL                                                         01S1093
*     1 PRMSG30 LOCAL,                                          01S1093
*      2 * FIXED(15) INIT(38),                                  01S1093
*      2 * CHAR(38) INIT('DATAVER DATA CHECKS EXCEEDED THRESHOLD');
*   DCL                                                         01S1094
*     1 PRMSG31 LOCAL,                                          01S1094
*      2 * FIXED(15) INIT(25),                                  01S1094
*      2 * CHAR(25) INIT('DATAVER DATA CHECK CCHH =');          01S1094
*   DCL                                                         01S1095
*     1 PRMSG32 LOCAL,                                          01S1095
*      2 * FIXED(15) INIT(12),                                  01S1095
*      2 * CHAR(12) INIT('DATAVER TEST');                       01S1095
*   DCL                                                         01S1096
*     1 PRMSG33 LOCAL,                                          01S1096
*      2 * FIXED(15) INIT(12),                                  01S1096
*      2 * CHAR(12) INIT('CLEANUP TEST');                       01S1096
*   DCL                                                         01S1097
*     1 PRMSG34 LOCAL,                                          01S1097
*      2 * FIXED(15) INIT(40),                                  01S1097
*      2 * CHAR(40) INIT('RHA HA INCORRECT -- EXP=            REC=');
*   DCL                                                         01S1098
*     1 PRMSG35 LOCAL,                                          01S1098
*      2 * FIXED(15) INIT(39),                                  01S1098
*      2 * CHAR(39) INIT('DATAVER DATA FORMAT UNACCEPTABLE ON CYL');
*   DCL                                                         01S1099
*     1 PRMSG36 LOCAL,                                          01S1099
*      2 * FIXED(15) INIT(8),                                   01S1099
*      2 * CHAR(8) INIT('RPS TEST');                            01S1099
         EJECT
*                                                               01S1100
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF CONSOLE OR PRINTER REQUEST                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1100
*   IF AP1CNCOD^=0 THEN             /* CONSOLE REQUEST               */
*                                                               01S1100
         CLI   AP1CNCOD(AP1REG),0                               01S1100
         BE    @RF01100                                         01S1100
*     /***************************************************************/
*     /*                                                             */
*     /* REQUEST FOR CONSOLE                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1101
*     DO;                                                       01S1101
*                                                               01S1101
*       /*************************************************************/
*       /*                                                           */
*       /* PUT CONSOLE MESSAGE IN WORK AREA                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1102
*       CNMSGXX=CNMSGPTR(AP1CNCOD)->CNMSGXX;/* MOVE IT IN            */
         L     @09,AP1WRKA(,AP1REG)                             01S1102
         SLR   @06,@06                                          01S1102
         IC    @06,AP1CNCOD(,AP1REG)                            01S1102
         SLA   @06,2                                            01S1102
         L     @06,CNMSGPTR-4(@06)                              01S1102
         MVC   CNMSGXX(80,@09),CNMSGXX(@06)                     01S1102
*       CALL CONS;                  /* WTO-WTOR                      */
         BAL   @14,CONS                                         01S1103
*       IF AP1PROPN=ON THEN         /* PRINTER OPEN                  */
         TM    AP1PROPN(AP1REG),B'10000000'                     01S1104
         BNO   @RF01104                                         01S1104
*         DO;                       /* SEND CONSOLE MESSAGE TO SYSOUT*/
*           AP1PRMSG=CNMSGXXT(1:CNMSGXXL-4);/* MOVE CONSOLE MESSAGE
*                                      TO PRINT BUFFER               */
         MVI   AP1PRMSG+1(AP1REG),C' '                          01S1106
         MVC   AP1PRMSG+2(128,AP1REG),AP1PRMSG+1(AP1REG)        01S1106
         L     @09,AP1WRKA(,AP1REG)                             01S1106
         LH    @06,CNMSGXXL(,@09)                               01S1106
         SL    @06,@CF00085                                     01S1106
         EX    @06,@SM03874                                     01S1106
*           CALL PRINT;             /* PRINT MESSAGE                 */
         BAL   @14,PRINT                                        01S1107
*           IF MSGRLEN^=0 THEN      /* WTOR                          */
         L     @09,AP1WRKA(,AP1REG)                             01S1108
         CLI   MSGRLEN(@09),0                                   01S1108
         BE    @RF01108                                         01S1108
*             DO;                                               01S1109
*               AP1PRMSG=AP1CNRPL;  /* MOVE REPLY TO PRINT BUFFER    */
         MVI   AP1PRMSG+4(AP1REG),C' '                          01S1110
         MVC   AP1PRMSG+5(125,AP1REG),AP1PRMSG+4(AP1REG)        01S1110
         MVC   AP1PRMSG(4,AP1REG),AP1CNRPL(AP1REG)              01S1110
*               CALL PRINT;         /* PRINT REPLY                   */
         BAL   @14,PRINT                                        01S1111
*             END;                                              01S1112
*           ELSE                                                01S1113
*             ;                                                 01S1113
@RF01108 DS    0H                                               01S1114
*         END;                                                  01S1114
*       ELSE                                                    01S1115
*         ;                                                     01S1115
@RF01104 DS    0H                                               01S1116
*       AP1CNCOD=0;                 /* RESET                         */
         MVI   AP1CNCOD(AP1REG),X'00'                           01S1116
*     END;                                                      01S1117
*   ELSE                            /* PRINTER REQUEST               */
*     DO;                                                       01S1118
*                                                               01S1118
         B     @RC01100                                         01S1118
@RF01100 DS    0H                                               01S1119
*       /*************************************************************/
*       /*                                                           */
*       /* REQUEST FOR PRINTER                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1119
*       IF AP1PRCOD^=0 THEN         /* PRINT REQUEST                 */
*                                                               01S1119
         CLI   AP1PRCOD(AP1REG),0                               01S1119
         BE    @RF01119                                         01S1119
*         /***********************************************************/
*         /*                                                         */
*         /* MOVE IN PRINT MESSAGE                                   */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S1120
*         AP1PRMSG(1:PRMSGPTR(AP1PRCOD)->PRMSGXXL)=AP1PRMSG×PRMSGPTR(
*             AP1PRCOD)->PRMSGXXT;  /* OR IN TEXT                    */
         SLR   @09,@09                                          01S1120
         IC    @09,AP1PRCOD(,AP1REG)                            01S1120
         SLA   @09,2                                            01S1120
         L     @09,PRMSGPTR-4(@09)                              01S1120
         LH    @06,PRMSGXXL(,@09)                               01S1120
         BCTR  @06,0                                            01S1120
         MVC   @TS00001(130),AP1PRMSG(AP1REG)                   01S1120
         OC    @TS00001(130),PRMSGXXT(@09)                      01S1120
         EX    @06,@SM03876                                     01S1120
*       ELSE                                                    01S1121
*         ;                         /* NEWPAGE OR CLOSE REQUEST      */
@RF01119 DS    0H                                               01S1122
*       CALL PRINT;                 /* PRINT, NEW PAGE, OR CLOSE     */
         BAL   @14,PRINT                                        01S1122
*       AP1PRCOD=0;                 /* RESET                         */
         MVI   AP1PRCOD(AP1REG),X'00'                           01S1123
*       IF AP1CNCOD=MSOF THEN       /* OPEN REQUEST THAT FAILED      */
         CLI   AP1CNCOD(AP1REG),11                              01S1124
         BNE   @RF01124                                         01S1124
*         DO;                                                   01S1125
*           CNMSGXX=CNMSGPTR(MSOF)->CNMSGXX;/* MOVE IN MESSAGE       */
         L     @09,AP1WRKA(,AP1REG)                             01S1126
         L     @06,CNMSGPTR+40                                  01S1126
         MVC   CNMSGXX(80,@09),CNMSGXX(@06)                     01S1126
*           CALL CONS;              /* TELL OPR PRINT WOULDNT OPEN   */
         BAL   @14,CONS                                         01S1127
*           AP1CNCOD=0;             /* RESET                         */
         MVI   AP1CNCOD(AP1REG),X'00'                           01S1128
*         END;                                                  01S1129
*       ELSE                                                    01S1130
*         ;                         /* EVERYTHING OK                 */
@RF01124 DS    0H                                               01S1131
*     END;                                                      01S1131
         EJECT
*                                                               01S1132
*   /*****************************************************************/
*   /*                                                               */
*   /* CONS: PROCEDURE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1132
*CONS:                                                          01S1132
*   PROC;                           /* INTERNAL TO COMM PROC         */
*                                                               01S1132
         B     @PB00007                                         01S1132
CONS     STM   @14,@12,@SA00007                                 01S1132
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC SENDS MESSAGES TO THE CONSOLE AND PASSES THE REPLIES*/
*   /* TO THE CALLER. THERE ARE TWO TYPES OF MESSAGES IT HANDLES: WTO*/
*   /* AND WTOR. THE WTO IS JUST PRINTED TO THE CONSOLE. THE WTOR IS */
*   /* PRINTED TO THE CONSOLE AND A REPLY IS WAITED FOR.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1133
*                                                               01S1133
*   /*****************************************************************/
*   /*                                                               */
*   /* FINISH MESSAGE                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1133
*   MSGDEVAD=AP1DEVAD(2:4);         /* MOVE DEVICE ADDRESS TO WORK
*                                      AREA                          */
*                                                               01S1133
         L     @09,AP1WRKA(,AP1REG)                             01S1133
         MVI   MSGDEVAD+3(@09),C' '                             01S1133
         MVC   MSGDEVAD(3,@09),AP1DEVAD+1(AP1REG)               01S1133
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF WTO OR WTOR                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1134
*   IF MSGRLEN=0 THEN               /* ISSUE WTO                     */
         CLI   MSGRLEN(@09),0                                   01S1134
         BNE   @RF01134                                         01S1134
*     DO;                                                       01S1135
*       RFY                                                     01S1136
*        (GPR01P) RSTD;                                         01S1136
*       GPR01P=ADDR(CNMSGXXL);      /* POINT TO BEGIN OF WTO         */
*                                                               01S1137
         LA    GPR01P,CNMSGXXL(,@09)                            01S1137
*       /*************************************************************/
*       /*                                                           */
*       /* WTO                                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1138
*       GENERATE;                                               01S1138
         WTO   MF=(E,(GPR01P))   WTO SELECTED MESSAGE
*       RFY                                                     01S1139
*        (GPR01P) UNRSTD;                                       01S1139
*     END;                                                      01S1140
*   ELSE                            /* ISSUE WTOR                    */
*     DO;                                                       01S1141
         B     @RC01134                                         01S1141
@RF01134 DS    0H                                               01S1142
*       AP1RECB=0;                  /* CLEAR ECB                     */
         SLR   @09,@09                                          01S1142
         ST    @09,AP1RECB(,AP1REG)                             01S1142
*       MSGECBA=ADDR(AP1RECB);      /* POINT TO ECB                  */
         L     @09,AP1WRKA(,AP1REG)                             01S1143
         LA    @06,AP1RECB(,AP1REG)                             01S1143
         ST    @06,MSGECBA(,@09)                                01S1143
*       MSGRPTR=ADDR(AP1CNRPL);     /* ADDRESS OF REPLY AREA         */
         LA    @06,AP1CNRPL(,AP1REG)                            01S1144
         STCM  @06,7,MSGRPTR(@09)                               01S1144
*       RFY                                                     01S1145
*         GPR01P RSTD;                                          01S1145
*       GPR01P=ADDR(CNMSGXX);       /* POINT TO BEGIN OF WTOR        */
*                                                               01S1146
         LR    GPR01P,@09                                       01S1146
*       /*************************************************************/
*       /*                                                           */
*       /* WTOR                                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1147
*       GENERATE;                                               01S1147
         WTOR  ,,,,MF=(E,(GPR01P)) WTOR SELECTED MESSAGE
*       RFY                                                     01S1148
*         GPR01P UNRSTD;                                        01S1148
*                                                               01S1148
*       /*************************************************************/
*       /*                                                           */
*       /* WAIT ON THE REPLY                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1149
*       DO;                         /* WAIT ECB(AP1RECB)             */
*         RESPECIFY                                             01S1150
*          (GPR00P,                                             01S1150
*           GPR01P) RESTRICTED;                                 01S1150
*         GPR00P=1;                 /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                         01S1151
*         GPR01P=ADDR(AP1RECB);     /* ADDRESS OF ECB                */
         LA    GPR01P,AP1RECB(,AP1REG)                          01S1152
*         SVC(1);                   /* WAIT SVC                      */
         SVC   1                                                01S1153
*         RESPECIFY                                             01S1154
*          (GPR00P,                                             01S1154
*           GPR01P) UNRESTRICTED;                               01S1154
*       END;                        /* WAIT ECB(AP1RECB) FOR THE
*                                      REPLY                         */
*     END;                                                      01S1156
*   END;                            /* OF CONS PROC                  */
@EL00007 DS    0H                                               01S1157
@EF00007 DS    0H                                               01S1157
@ER00007 LM    @14,@12,@SA00007                                 01S1157
         BR    @14                                              01S1157
         EJECT
*                                                               01S1158
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT: PROCEDURE                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1158
*PRINT:                                                         01S1158
*   PROC;                           /* INTERNAL TO COMM PROC         */
*                                                               01S1158
PRINT    STM   @14,@12,@SA00008                                 01S1158
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC PRINTS MESSAGES TO SYSPRINT-- IT IS PASSED AP1PRCLS */
*   /* (INDICATES CLOSE REQUEST), AP1PRMSG (THE ACTUAL MESSAGE), AND */
*   /* AP1PRNP (INDICATES GO TO NEW PAGE). IT PRINTS 55 LINES TO A   */
*   /* PAGE UNLESS TOLD TO GO TO A NEW PAGE BEFORE 55 LINES. EACH    */
*   /* PAGE HAS A HEADER WITH THE PAGE NUMBER IN IT.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1159
*   IF AP1PRCLS=ON THEN             /* CLOSE REQUEST                 */
*                                                               01S1159
         TM    AP1PRCLS(AP1REG),B'00100000'                     01S1159
         BNO   @RF01159                                         01S1159
*     /***************************************************************/
*     /*                                                             */
*     /* CLOSE REQUEST                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1160
*     IF AP1PROPN=ON THEN           /* PRINT OPEN                    */
         TM    AP1PROPN(AP1REG),B'10000000'                     01S1160
         BNO   @RF01160                                         01S1160
*       DO;                                                     01S1161
*         AP1PROPN=OFF;             /* WILL CLOSE                    */
         NI    AP1PROPN(AP1REG),B'01111111'                     01S1162
*         RFY                                                   01S1163
*          (GPR01P,                                             01S1163
*           GPR02P) RSTD;                                       01S1163
*         GPR01P=AP1WRKA;           /* PUT PARM ADDR IN REG 1        */
         L     @09,AP1WRKA(,AP1REG)                             01S1164
         LR    GPR01P,@09                                       01S1164
*         WRKFLG(1)=0;              /* ZERO FLAGS                    */
         MVI   WRKFLG(@09),X'00'                                01S1165
*         WRKENDFL(1)=ON;           /* END OF LIST                   */
         OI    WRKENDFL(@09),B'10000000'                        01S1166
*         GPR02P=AP1PDCBA;          /* PRINT DCB ADDRESS             */
*                                                               01S1167
         L     GPR02P,AP1PDCBA(,AP1REG)                         01S1167
*         /***********************************************************/
*         /*                                                         */
*         /* CLOSE                                                   */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S1168
*         GENERATE;                                             01S1168
         CLOSE ((GPR02P)),MF=(E,(GPR01P))
*         RFY                                                   01S1169
*          (GPR01P,                                             01S1169
*           GPR02P) UNRSTD;                                     01S1169
*       END;                                                    01S1170
*     ELSE                                                      01S1171
*       ;                           /* NOT OPEN--CANT CLOSE          */
@RF01160 DS    0H                                               01S1172
*   ELSE                            /* PRINT REQUEST                 */
*                                                               01S1172
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT OR NEW PAGE REQUEST                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1172
*     DO;                                                       01S1172
         B     @RC01159                                         01S1172
@RF01159 DS    0H                                               01S1173
*       IF AP1PROPN=OFF THEN        /* HAVENT YET OPENED             */
         TM    AP1PROPN(AP1REG),B'10000000'                     01S1173
         BNZ   @RF01173                                         01S1173
*         DO;                                                   01S1174
*           RFY                                                 01S1175
*            (GPR01P,                                           01S1175
*             GPR02P) RSTD;                                     01S1175
*           GPR01P=AP1WRKA;         /* PUT PARM ADDR IN REG 1        */
         L     @09,AP1WRKA(,AP1REG)                             01S1176
         LR    GPR01P,@09                                       01S1176
*           WRKFLG(1)=0;            /* ZERO FLAGS                    */
         MVI   WRKFLG(@09),X'00'                                01S1177
*           WRKENDFL(1)=ON;         /* END OF LIST                   */
         OI    WRKENDFL(@09),B'10000000'                        01S1178
*           GPR02P=AP1PDCBA;        /* PRINT DCB ADDRESS             */
*                                                               01S1179
         L     GPR02P,AP1PDCBA(,AP1REG)                         01S1179
*           /*********************************************************/
*           /*                                                       */
*           /* OPEN                                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S1180
*           GENERATE;                                           01S1180
         OPEN  ((GPR02P),(OUTPUT)),MF=(E,(GPR01P))
*           RFY                                                 01S1181
*            (GPR01P,                                           01S1181
*             GPR02P) UNRSTD;                                   01S1181
*           RFY                                                 01S1182
*             IHADCB BASED(AP1PDCBA);/* ADDRESS PRINTER DCB          */
*           IF DCBOFOPN=ON          /* CHECK OPENFLG                 */
*             THEN                  /* OPEN WORKED                   */
         L     @09,AP1PDCBA(,AP1REG)                            01S1183
         TM    DCBOFOPN+40(@09),B'00010000'                     01S1183
         BNO   @RF01183                                         01S1183
*             AP1PROPN=ON;          /* INDICATE SUCCESSFUL OPEN      */
         OI    AP1PROPN(AP1REG),B'10000000'                     01S1184
*           ELSE                    /* OPEN FAILED                   */
*             DO;                                               01S1185
         B     @RC01183                                         01S1185
@RF01183 DS    0H                                               01S1186
*               AP1CNCOD=MSOF;      /* SETUP FOR 'OPEN FAILED' MSG   */
         MVI   AP1CNCOD(AP1REG),X'0B'                           01S1186
*               AP1QUIT=ON;         /* DONT DO ANY TESTS             */
         OI    AP1QUIT(AP1REG),B'00001000'                      01S1187
*             END;                                              01S1188
*           RFY                                                 01S1189
*             IHADCB;               /* ADDRESS TEST DCB              */
@RC01183 DS    0H                                               01S1190
*         END;                                                  01S1190
*       ELSE                                                    01S1191
*         ;                         /* OPEN                          */
*                                                               01S1191
@RF01173 DS    0H                                               01S1192
*       /*************************************************************/
*       /*                                                           */
*       /* CONTINUE IF OPEN                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1192
*       IF AP1PROPN=ON THEN         /* OPEN                          */
         TM    AP1PROPN(AP1REG),B'10000000'                     01S1192
         BNO   @RF01192                                         01S1192
*         DO;                                                   01S1193
*           IF AP1PRNP=ON THEN      /* NEW PAGE REQUEST              */
*                                                               01S1194
         TM    AP1PRNP(AP1REG),B'01000000'                      01S1194
         BNO   @RF01194                                         01S1194
*             /*******************************************************/
*             /*                                                     */
*             /* NEW PAGE REQUEST                                    */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S1195
*             DO;                                               01S1195
*               AP1PRNP=OFF;        /* RESET                         */
         NI    AP1PRNP(AP1REG),B'10111111'                      01S1196
*               IF AP1PRLIN^=HDRLEN THEN/* NOT ALREADY ON NEW PAGE   */
         CLC   AP1PRLIN(2,AP1REG),@CH00139                      01S1197
         BE    @RF01197                                         01S1197
*                 AP1PRLIN=PAGEFULL;/* INDICATE PAGE FULL            */
         MVC   AP1PRLIN(2,AP1REG),@CH03120                      01S1198
*               ELSE                                            01S1199
*                 ;                 /* ON NEW PAGE ALREADY--IGNORE
*                                      REQUEST                       */
@RF01197 DS    0H                                               01S1200
*             END;                                              01S1200
*           ELSE                    /* PRINT REQUEST                 */
*                                                               01S1201
*             /*******************************************************/
*             /*                                                     */
*             /* VANILLA PRINT REQUEST                               */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S1201
*             DO;                                               01S1201
*                                                               01S1201
         B     @RC01194                                         01S1201
@RF01194 DS    0H                                               01S1202
*               /*****************************************************/
*               /*                                                   */
*               /* PUT RECORD TO PRINTER                             */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S1202
*               RFY                                             01S1202
*                (GPR00P,                                       01S1202
*                 GPR01P) RSTD;                                 01S1202
*               GPR00P=ADDR(AP1PRASA);/* BUFFER ADDRESS              */
         LA    GPR00P,AP1PRASA(,AP1REG)                         01S1203
*               GPR01P=AP1PDCBA;    /* ADDRESS OF DCB                */
         L     GPR01P,AP1PDCBA(,AP1REG)                         01S1204
*               GENERATE;                                       01S1205
         PUT   (GPR01P),(GPR00P) PRINT DCB
*               RFY                                             01S1206
*                (GPR00P,                                       01S1206
*                 GPR01P) UNRSTD;                               01S1206
*               AP1PRLIN=AP1PRLIN+1;/* INCREMENT TO NEXT LINE        */
         LA    @09,1                                            01S1207
         AH    @09,AP1PRLIN(,AP1REG)                            01S1207
         STH   @09,AP1PRLIN(,AP1REG)                            01S1207
*               AP1PRASA=' ';       /* PRINT NEXT LINE WITHOUT SPACE */
         MVI   AP1PRASA(AP1REG),C' '                            01S1208
*             END;                                              01S1209
*           IF AP1PRLIN=PAGEFULL THEN/* GO TO NEW PAGE               */
*                                                               01S1210
@RC01194 CLC   AP1PRLIN(2,AP1REG),@CH03120                      01S1210
         BNE   @RF01210                                         01S1210
*             /*******************************************************/
*             /*                                                     */
*             /* GO TO NEW PAGE                                      */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S1211
*             DO;                                               01S1211
*               AP1PRASA='1';       /* SKIP TO CHAN 1                */
*                                                               01S1212
         MVI   AP1PRASA(AP1REG),C'1'                            01S1212
*               /*****************************************************/
*               /*                                                   */
*               /* BUILD PAGE HEADER                                 */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S1213
*               AP1PRMSG=HEADER;    /* MOVE IN HEADER                */
         MVI   AP1PRMSG+110(AP1REG),C' '                        01S1213
         MVC   AP1PRMSG+111(19,AP1REG),AP1PRMSG+110(AP1REG)     01S1213
         MVC   AP1PRMSG(110,AP1REG),HEADER                      01S1213
*               AP1PRPAG=AP1PRPAG+1;/* INCR PAGE NUMBER              */
         LA    @09,1                                            01S1214
         AH    @09,AP1PRPAG(,AP1REG)                            01S1214
         STH   @09,AP1PRPAG(,AP1REG)                            01S1214
*               CVD(AP1PRPAG,WRKAREA(1));/* CNVT PAGE TO DEC         */
         L     @06,AP1WRKA(,AP1REG)                             01S1215
         CVD   @09,@TS00001                                     01S1215
         MVC   WRKAREA(4,@06),@TS00001+4                        01S1215
*               UNPK(AP1PRMSG(111:114),WRKAREA(1));/* UNPACK         */
         UNPK  AP1PRMSG+110(4,AP1REG),WRKAREA(4,@06)            01S1216
*               AP1PRMSG(114)=AP1PRMSG(114)×ZONE;/* SET ZONE         */
*                                                               01S1217
         OI    AP1PRMSG+113(AP1REG),X'F0'                       01S1217
*               /*****************************************************/
*               /*                                                   */
*               /* PUT RECORD TO PRINTER                             */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S1218
*               RFY                                             01S1218
*                (GPR00P,                                       01S1218
*                 GPR01P) RSTD;                                 01S1218
*               GPR00P=ADDR(AP1PRASA);/* BUFFER ADDRESS              */
         LA    GPR00P,AP1PRASA(,AP1REG)                         01S1219
*               GPR01P=AP1PDCBA;    /* ADDRESS OF DCB                */
         L     GPR01P,AP1PDCBA(,AP1REG)                         01S1220
*               GENERATE;                                       01S1221
         PUT   (GPR01P),(GPR00P) PRINT DCB
*               RFY                                             01S1222
*                (GPR00P,                                       01S1222
*                 GPR01P) UNRSTD;                               01S1222
*               AP1PRASA='-';       /* SKIP TWO LINES                */
         MVI   AP1PRASA(AP1REG),C'-'                            01S1223
*               AP1PRLIN=HDRLEN;    /* HAVE ACCOUNTED FOR 3 LINES    */
         MVC   AP1PRLIN(2,AP1REG),@CH00139                      01S1224
*             END;                                              01S1225
*           ELSE                                                01S1226
*             ;                     /* DONT GO TO NEW PAGE           */
@RF01210 DS    0H                                               01S1227
*         END;                                                  01S1227
*       ELSE                                                    01S1228
*         ;                         /* OPEN DIDNT WORK--OR CLOSE
*                                      REQUEST                       */
*                                                               01S1228
@RF01192 DS    0H                                               01S1229
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE BUFFER FOR NEXT MESSAGE                        */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1229
*       AP1PRMSG=' ';               /* CLEAR BUFFER                  */
         MVI   AP1PRMSG+1(AP1REG),C' '                          01S1229
         MVC   AP1PRMSG+2(128,AP1REG),AP1PRMSG+1(AP1REG)        01S1229
         MVI   AP1PRMSG(AP1REG),C' '                            01S1229
*     END;                                                      01S1230
*   END;                            /* PROC                          */
@EL00008 DS    0H                                               01S1231
@EF00008 DS    0H                                               01S1231
@ER00008 LM    @14,@12,@SA00008                                 01S1231
         BR    @14                                              01S1231
*   END;                            /* OF PROC                       */
@EL00006 DS    0H                                               01S1232
@EF00006 DS    0H                                               01S1232
@ER00006 LM    @14,@12,@SA00006                                 01S1232
         BR    @14                                              01S1232
         EJECT
*                                                               01S1233
*   /*****************************************************************/
*   /*                                                               */
*   /* READBLD1: PROCEDURE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1233
*READBLD1:                                                      01S1233
*   PROC;                                                       01S1233
*                                                               01S1233
READBLD1 STM   @14,@12,12(@13)                                  01S1233
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILDS CCW CHAIN TO READ RECORDS EXCEPT RECORD ZERO FROM START*/
*   /* OF A TRACK TO END OF CYLINDER                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1234
*/*           CCW CHAIN:                                        01S1234
*                   RD HA,0,SKIP-CC,5      POSITION ON HA       01S1234
*                   MT-RD CNT,BUFF,CC,8    READ COUNT FOR RESTART
*                   RD KD,0,CC-SKIP-SLI,65535 CRC CHECK DATA    01S1234
*                   TIC,*-16,0,0           REPEAT UNTIL END OF CYL
*                                                                    */
*                                                               01S1234
*   CCWPTR=1;                       /* FIRST SLOT                    */
         LA    @09,1                                            01S1234
         LR    CCWPTR,@09                                       01S1234
*   CCW(CCWPTR)=RHACSCCW;           /* RHA,0,SKIP-CC,5               */
         LR    @06,CCWPTR                                       01S1235
         SLA   @06,3                                            01S1235
         L     @03,AP1CCWA(,AP1REG)                             01S1235
         ALR   @06,@03                                          01S1235
         AL    @06,@CF03871                                     01S1235
         MVC   CCW(8,@06),RHACSCCW                              01S1235
*   CCWPTR=CCWPTR+1;                /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S1236
*   CCW(CCWPTR)=MRCCCCCW;           /* MT-RDCNT,0,CC,8               */
         LR    @06,CCWPTR                                       01S1237
         SLA   @06,3                                            01S1237
         ALR   @06,@03                                          01S1237
         AL    @06,@CF03871                                     01S1237
         MVC   CCW(8,@06),MRCCCCCW                              01S1237
*   CCWADDRB(CCWPTR)=AP1BUFAB;      /* READ INTO BUFFER              */
         LR    @06,CCWPTR                                       01S1238
         SLA   @06,3                                            01S1238
         ALR   @06,@03                                          01S1238
         AL    @06,@CF03872                                     01S1238
         MVC   CCWADDRB-1(3,@06),AP1BUFAB(AP1REG)               01S1238
*   CCWPTR=CCWPTR+1;                /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S1239
*   CCW(CCWPTR)=RKDSSCCW;           /* RKD,0,CC-SKIP-SLI,65535       */
         LR    @06,CCWPTR                                       01S1240
         SLA   @06,3                                            01S1240
         ALR   @06,@03                                          01S1240
         AL    @06,@CF03871                                     01S1240
         MVC   CCW(8,@06),RKDSSCCW                              01S1240
*   CCWPTR=CCWPTR+1;                /* NEXT SLOT                     */
         ALR   CCWPTR,@09                                       01S1241
*   CCW(CCWPTR)=TICCCW;             /* TIC,0,0,0                     */
         LR    @09,CCWPTR                                       01S1242
         SLA   @09,3                                            01S1242
         ALR   @09,@03                                          01S1242
         AL    @09,@CF03871                                     01S1242
         MVC   CCW(8,@09),TICCCW                                01S1242
*   CCWADDRB(CCWPTR)=AP1CCWA+(CCWPTR-3)*LENGTH(CCW);/* TIC TO RD CNT */
         LR    @09,CCWPTR                                       01S1243
         SLA   @09,3                                            01S1243
         LR    @06,CCWPTR                                       01S1243
         SL    @06,@CF00139                                     01S1243
         SLA   @06,3                                            01S1243
         ALR   @06,@03                                          01S1243
         ALR   @03,@09                                          01S1243
         AL    @03,@CF03872                                     01S1243
         STCM  @06,7,CCWADDRB-1(@03)                            01S1243
*   END;                            /* END OF PROC                   */
@EL00009 DS    0H                                               01S1244
@EF00009 DS    0H                                               01S1244
@ER00009 LM    @14,@12,12(@13)                                  01S1244
         BR    @14                                              01S1244
         EJECT
*                                                               01S1245
*   /*****************************************************************/
*   /*                                                               */
*   /* SNSCCHH: PROCEDURE                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1245
*SNSCCHH:                                                       01S1245
*   PROC;                                                       01S1245
*                                                               01S1245
SNSCCHH  STM   @14,@12,12(@13)                                  01S1245
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVES CCHH IN BYTES 5 & 6 OF SENSE DATA INTO CCHH IN AP1SEEK  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1246
*   CCHH=0;                         /* CLEAR DESTINATION             */
         SLR   @09,@09                                          01S1246
         ST    @09,CCHH(,AP1REG)                                01S1246
*   HH(2)=SNS6&HDMASK;              /* SET HEAD VALUE                */
         LA    @09,188                                          01S1247
         ALR   @09,AP1REG                                       01S1247
         MVC   HH+1(1,AP1REG),SNS6(@09)                         01S1247
         NI    HH+1(AP1REG),X'1F'                               01S1247
*   CC(2)=SNS5;                     /* CYLINDER BYTE 2               */
         MVC   CC+1(1,AP1REG),SNS5(@09)                         01S1248
*   IF AP1DEVTP=AP13330 THEN        /* 3330 MOD 1                    */
         CLI   AP1DEVTP(AP1REG),1                               01S1249
         BNE   @RF01249                                         01S1249
*     IF SNSCYLB=ON THEN            /* CYLINDER 256                  */
         TM    SNSCYLB(@09),B'01000000'                         01S1250
         BNO   @RF01250                                         01S1250
*       CC(1)='01'X;                /* SET CYLINDER 256              */
         MVI   CC(AP1REG),X'01'                                 01S1251
*     ELSE                                                      01S1252
*       ;                           /* LESS THAN 256                 */
@RF01250 DS    0H                                               01S1253
*   ELSE                            /* NOT 3330 MOD 1                */
*     DO;                                                       01S1253
         B     @RC01249                                         01S1253
@RF01249 DS    0H                                               01S1254
*       IF SNSCYLB=ON THEN          /* CYLINDER 512                  */
         TM    SNSCYLB+188(AP1REG),B'01000000'                  01S1254
         BNO   @RF01254                                         01S1254
*         CC(1)='02'X;              /* SET CYLINDER 512              */
         MVI   CC(AP1REG),X'02'                                 01S1255
*       ELSE                                                    01S1256
*         ;                         /* SNSCYLB IS OFF                */
@RF01254 DS    0H                                               01S1257
*       IF SNSCYLC=ON THEN          /* CYLINDER 256                  */
         TM    SNSCYLC+188(AP1REG),B'00100000'                  01S1257
         BNO   @RF01257                                         01S1257
*         CC(1)=CC(1)×'01'X;        /* SET CYLINDER 256              */
         OI    CC(AP1REG),X'01'                                 01S1258
*       ELSE                                                    01S1259
*         ;                         /* SNSCYLC IS OFF                */
@RF01257 DS    0H                                               01S1260
*     END;                          /* END DO                        */
*   END;                            /* END SNSCCHH PROC              */
@EL00010 DS    0H                                               01S1261
@EF00010 DS    0H                                               01S1261
@ER00010 LM    @14,@12,12(@13)                                  01S1261
         BR    @14                                              01S1261
         EJECT
*                                                               01S1262
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDTCC: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1262
*UPDTCC:                                                        01S1262
*   PROC;                                                       01S1262
*                                                               01S1262
UPDTCC   STM   @14,@12,12(@13)                                  01S1262
*   /*****************************************************************/
*   /*                                                               */
*   /* SETS SEEK TO NEXT CYL OR SETS AP1LST IF OUT OF EXTENT         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1263
*   HHR=0;                          /* SET TRACK SEEK TO ZERO        */
*                                                               01S1263
         SLR   @09,@09                                          01S1263
         STCM  @09,7,HHR(AP1REG)                                01S1263
*   /*****************************************************************/
*   /*                                                               */
*   /* GET INTO DEB KEY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1264
*   DO;                             /* MODESET EXTKEY(DATAMGT)       */
*     SPKA(80);                     /* SET PSW KEY                   */
         LA    @09,80                                           01S1265
         SPKA  0(@09)                                           01S1265
*   END;                            /* MODESET EXTKEY(DATAMGT) DATA
*                                      MGT KEY                       */
*   DEBENDCC=DEBENDCC+1;            /* INCREMENT CYL BY ONE          */
         LA    @09,32                                           01S1267
         AL    @09,AP1DEBA(,AP1REG)                             01S1267
         LA    @06,1                                            01S1267
         LH    @15,DEBENDCC(,@09)                               01S1267
         N     @15,@CF03868                                     01S1267
         ALR   @06,@15                                          01S1267
         STH   @06,DEBENDCC(,@09)                               01S1267
*   RFY                                                         01S1268
*     GPR04F RSTD;                                              01S1268
*   DO;                             /* MODESET EXTKEY(TCB)      01S1269
*                                      WORKREG(GPR04F)               */
*     GPR04F=TCBPKF;                /* GET KEY FROM TCB              */
         L     @06,FLCCVT                                       01S1270
         L     @06,CVTTCBP(,@06)                                01S1270
         L     @06,TCBPTR(,@06)                                 01S1270
         SLR   GPR04F,GPR04F                                    01S1270
         IC    GPR04F,TCBPKF(,@06)                              01S1270
*     SPKA(GPR04F);                 /* SET PSW KEY                   */
         SPKA  0(GPR04F)                                        01S1271
*   END;                            /* MODESET EXTKEY(TCB)      01S1272
*                                      WORKREG(GPR04F) USER KEY      */
*   RFY                                                         01S1273
*     GPR04F UNRSTD;                                            01S1273
*   CC=DEBENDCC;                    /* SET AP1SEEK                   */
         MVC   CC(2,AP1REG),DEBENDCC(@09)                       01S1274
*   IF CC>AP1LSTCC THEN             /* CYL BEYOND PACK LIMIT         */
         LH    @09,CC(,AP1REG)                                  01S1275
         N     @09,@CF03868                                     01S1275
         CH    @09,AP1LSTCC(,AP1REG)                            01S1275
         BNH   @RF01275                                         01S1275
*     AP1LST=ON;                    /* FINISHED                      */
         OI    AP1LST(AP1REG),B'01000000'                       01S1276
*   ELSE                                                        01S1277
*     ;                             /* CONTINUE READ PASS            */
@RF01275 DS    0H                                               01S1278
*   END;                            /* END OF UPDTCC PROC            */
@EL00011 DS    0H                                               01S1278
@EF00011 DS    0H                                               01S1278
@ER00011 LM    @14,@12,12(@13)                                  01S1278
         BR    @14                                              01S1278
         EJECT
*                                                               01S1279
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDTHH: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1279
*UPDTHH:                                                        01S1279
*   PROC;                           /* INTERNAL TO AP1 PROC          */
*                                                               01S1279
UPDTHH   STM   @14,@12,@SA00012                                 01S1279
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATES AP1SEEK TO NEXT TRACK                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1280
*   R=0;                            /* SET R TO 0                    */
         MVI   R(AP1REG),X'00'                                  01S1280
*   IF HH>=AP1LSTHH THEN            /* END OF CYLINDER               */
         LH    @09,HH(,AP1REG)                                  01S1281
         N     @09,@CF03868                                     01S1281
         CH    @09,AP1LSTHH(,AP1REG)                            01S1281
         BL    @RF01281                                         01S1281
*     CALL UPDTCC;                  /* GO TO NEXT CYL                */
         BAL   @14,UPDTCC                                       01S1282
*   ELSE                            /* NOT EOC YET                   */
*     HH=HH+1;                      /* GO TO NEXT TRACK              */
         B     @RC01281                                         01S1283
@RF01281 LA    @09,1                                            01S1283
         LH    @06,HH(,AP1REG)                                  01S1283
         N     @06,@CF03868                                     01S1283
         ALR   @09,@06                                          01S1283
         STH   @09,HH(,AP1REG)                                  01S1283
*   END;                            /* OF UPDTHH PROC                */
@EL00012 DS    0H                                               01S1284
@EF00012 DS    0H                                               01S1284
@ER00012 LM    @14,@12,@SA00012                                 01S1284
         BR    @14                                              01S1284
         EJECT
*                                                               01S1285
*   /*****************************************************************/
*   /*                                                               */
*   /* BADTRK: PROCEDURE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1285
*BADTRK:                                                        01S1285
*   PROC;                           /* INTERNAL TO IAPCNTRL          */
*                                                               01S1285
BADTRK   STM   @14,@12,@SA00013                                 01S1285
*   /*****************************************************************/
*   /*                                                               */
*   /* HANDLES UNREADABLE TRK ON DATA SCAN                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1286
*   IF SNSIFMT=ON×SNSDATA=ON×(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF)
*     THEN                          /* ITF OR DATA CK                */
         LA    @09,188                                          01S1286
         ALR   @09,AP1REG                                       01S1286
         TM    SNSIFMT(@09),B'01000000'                         01S1286
         BO    @RT01286                                         01S1286
         TM    SNSDATA(@09),B'00001000'                         01S1286
         BO    @RT01286                                         01S1286
         TM    SNSEQU(@09),B'00010000'                          01S1286
         BNO   @RF01286                                         01S1286
         CLI   SNS7(@09),X'10'                                  01S1286
         BNE   @RF01286                                         01S1286
         MVC   @TS00001(1),SNS17(@09)                           01S1286
         NI    @TS00001,X'FE'                                   01S1286
         CLI   @TS00001,X'C0'                                   01S1286
         BNE   @RF01286                                         01S1286
@RT01286 DS    0H                                               01S1287
*     DO;                                                       01S1287
*       CALL SNSCCHH;               /* SET SEEK TO SENSE DATA        */
         BAL   @14,SNSCCHH                                      01S1288
*       IF SNSDATA=ON×(SNSEQU=ON&SNS7=FMT10&(SNS17&NDFMSK)=NDF) THEN
         LA    @09,188                                          01S1289
         ALR   @09,AP1REG                                       01S1289
         TM    SNSDATA(@09),B'00001000'                         01S1289
         BO    @RT01289                                         01S1289
         TM    SNSEQU(@09),B'00010000'                          01S1289
         BNO   @RF01289                                         01S1289
         CLI   SNS7(@09),X'10'                                  01S1289
         BNE   @RF01289                                         01S1289
         MVC   @TS00001(1),SNS17(@09)                           01S1289
         NI    @TS00001,X'FE'                                   01S1289
         CLI   @TS00001,X'C0'                                   01S1289
         BNE   @RF01289                                         01S1289
@RT01289 DS    0H                                               01S1290
*                                   /* DATA CK                       */
*                                                               01S1290
*         /***********************************************************/
*         /*                                                         */
*         /* DATA CHECK                                              */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S1290
*         DO;                                                   01S1290
*           AP1PRCOD=PVERDCK;       /* DATACHECK MSG                 */
         MVI   AP1PRCOD(AP1REG),X'1F'                           01S1291
*           CNVTPRM(1)=ADDR(CCHH);  /* INAREA                @ZM01497*/
         LA    @09,CCHH(,AP1REG)                                01S1292
         ST    @09,CNVTPRM                                      01S1292
*           CNVTPRM(2)=ADDR(AP1PRMSG)+26;/* OUTAREA          @ZM01497*/
         LA    @09,AP1PRMSG(,AP1REG)                            01S1293
         AL    @09,@CF03041                                     01S1293
         ST    @09,CNVTPRM+4                                    01S1293
*           CNVTPRM(3)=ADDR(LENGTH(CCHH));/* BYTES           @ZM01497*/
         LA    @09,@CF00040                                     01S1294
         ST    @09,CNVTPRM+8                                    01S1294
*           RFY                                                 01S1295
*             GPR01P RSTD;          /*                       @ZM01497*/
*           GPR01P=ADDR(CNVTPRM);   /* POINT TO PARMS        @ZM01497*/
         LA    GPR01P,CNVTPRM                                   01S1296
*           CALL CVTEBCDX;          /* CNVT CCHH TO EBCDIC   @ZM01497*/
         BAL   @14,CVTEBCDX                                     01S1297
*           RFY                                                 01S1298
*             GPR01P UNRSTD;        /*                       @ZM01497*/
*           CALL COMM;              /* PRINT MSG                     */
*                                                               01S1299
         BAL   @14,COMM                                         01S1299
*           /*********************************************************/
*           /*                                                       */
*           /* PRINT CCW, CSW, SENSE                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S1300
*           CALL PRTCCW;            /* PRINT                         */
         BAL   @14,PRTCCW                                       01S1300
*           AP1RDERR=ON;            /* INDICATE READ ERROR           */
*                                                               01S1301
         OI    AP1RDERR(AP1REG),B'00000001'                     01S1301
*           /*********************************************************/
*           /*                                                       */
*           /* TEST FOR ERROR THRESHOLD                              */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S1302
*           AP1DCCNT=AP1DCCNT-1;    /* DECREMENT DCK COUNTER         */
         SLR   @09,@09                                          01S1302
         IC    @09,AP1DCCNT(,AP1REG)                            01S1302
         BCTR  @09,0                                            01S1302
         STC   @09,AP1DCCNT(,AP1REG)                            01S1302
*           IF AP1DCCNT=0 THEN      /* MAX NO. ERRORS REACHED        */
         CLI   AP1DCCNT(AP1REG),0                               01S1303
         BNE   @RF01303                                         01S1303
*             DO;                                               01S1304
*               AP1LST=ON;          /* END FIRST TEST                */
         OI    AP1LST(AP1REG),B'01000000'                       01S1305
*               AP1PRCOD=PVERDCE;   /* THRESHOLD EXCEEDED MSG        */
         MVI   AP1PRCOD(AP1REG),X'1E'                           01S1306
*               CALL COMM;          /* PRINT MSG                     */
         BAL   @14,COMM                                         01S1307
*             END;                  /* END DO                        */
*           ELSE                                                01S1309
*             ;                     /* COUNTER NON-ZERO              */
@RF01303 DS    0H                                               01S1310
*         END;                      /* END DO                        */
*       ELSE                                                    01S1311
*         ;                         /* NOT DATA CHECK (ITF)          */
*                                                               01S1311
@RF01289 DS    0H                                               01S1312
*       /*************************************************************/
*       /*                                                           */
*       /* UPDATE SEEK TO NEXT TRACK                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S1312
*       CALL UPDTHH;                /* TO NXT TRK                    */
         BAL   @14,UPDTHH                                       01S1312
*     END;                          /* END DO                        */
*   ELSE                            /* NOT DATA CHECK OR ITF         */
*     DO;                                                       01S1314
         B     @RC01286                                         01S1314
@RF01286 DS    0H                                               01S1315
*       AP1ERROR=ON;                /* INDICATE ERROR OCCURED        */
*       AP1QUIT=ON;                 /* END ALL TESTING               */
         OI    AP1ERROR(AP1REG),B'00101000'                     01S1316
*       AP1PRCOD=PVERER;            /* DATAVER ERROR MSG             */
         MVI   AP1PRCOD(AP1REG),X'20'                           01S1317
*       CALL COMM;                  /* PRINT MSG                     */
         BAL   @14,COMM                                         01S1318
*       CALL PRTCCW;                /* PRT CCW, CSW, SNS             */
         BAL   @14,PRTCCW                                       01S1319
*     END;                          /* END DO                        */
*   END;                            /* OF BADTRK PROC                */
@EL00013 DS    0H                                               01S1321
@EF00013 DS    0H                                               01S1321
@ER00013 LM    @14,@12,@SA00013                                 01S1321
         BR    @14                                              01S1321
         EJECT
*                                                               01S1322
*   /*****************************************************************/
*   /*                                                               */
*   /* MACRO DECLARES                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1322
*   DCL                                                         01S1322
*     1 I107 DEF(ILIST) BDY(WORD),  /* DEFINE LIST                   */
*      2 I10701 BIT(8),             /* OR MASK                       */
*      2 I10702 BIT(8),             /* AND MASK                      */
*      2 I10703 BIT(8),             /* RESERVED                      */
*      2 I10704 BIT(8);                                         01S1322
*   DCL                                                         01S1323
*     1 I048 DEF(ILIST) CHAR(32767) BDY(WORD),                  01S1323
*       3 I04801 PTR(31),           /* TCB ADDR                      */
*       3 I04802(*) CHAR(12) BDY(WORD),                         01S1323
*         5 I04803 PTR(31),         /* UCB @ IN LAST ENTRY           */
*           7 I04804 BIT(8),        /* FLAGS                         */
*           7 I04805 PTR(8),        /* MINOR RESOURCE NAME LENGTH    */
*           7 I04806 BIT(8),        /* FLAGS                         */
*           7 * CHAR(1),            /* CONTROL PROGRAM USE           */
*         5 I04807 PTR(31),         /* MAJOR RESOURCE NAME @         */
*         5 I04808 PTR(31);         /* MINOR RESOURCE NAME @         */
*   DCL                                                         01S1324
*     1 I042 DEF(ILIST),            /* ATTACH LIST                   */
*      2 I04201 PTR(8),             /* DE-FLAG                       */
*      2 I04202 PTR(24),            /* EP/DE ADDRESS                 */
*      2 I04203 PTR(8),             /* RESERVED                      */
*      2 I04204 PTR(24),            /* DCB ADDRESS                   */
*      2 I04205 PTR(8),             /* STATUS BYTE                   */
*      2 I04206 PTR(24),            /* ECB ADDRESS                   */
*      2 I04207 PTR(8),             /* STATUS BYTE                   */
*      2 I04208 PTR(24),            /* SUBPOOL LIST OR NUMBER        */
*      2 I04209 PTR(8),             /* STATUS BYTE                   */
*      2 I04210 PTR(24),            /* SUBPOOL LIST OR NUMBER        */
*      2 I04211 PTR(8),             /* RESERVED                      */
*      2 I04212 PTR(24),            /* END-OF-TASK EXIT ADDRESS      */
*      2 I04213 FIXED(15),          /* PRIORITY ADJUSTMENT VALUE     */
*      2 I04214 PTR(8),             /* PRIORITY ADJUSTMENT VALUE     */
*      2 I04215 PTR(8),             /* STATUS BYTE                   */
*      2 I04216 CHAR(8),            /* ENTRY POINT NAME              */
*      2 I04217 PTR(31),            /* JSCB ADDRESS                  */
*      2 I04218 PTR(8),             /* TASK ID                       */
*      2 I04219 PTR(24),            /* STAI/ESTAI PARM-LIST ADDR     */
*      2 I04220 PTR(8),             /* STATUS BYTE                   */
*      2 I04221 PTR(24),            /* STAI/ESTAI EXIT ADDRESS       */
*      2 I04222 PTR(8),             /* RESERVED                      */
*      2 I04223 PTR(24),            /* TASKLIB DCB ADDRESS           */
*      2 I04224 PTR(8),             /* STATUS BYTE                   */
*      2 I04225 PTR(8),             /* RESERVED                      */
*      2 I04226 FIXED(15),          /* LENGTH OF THIS LIST           */
*      2 I04227 PTR(31);            /* SUBPOOL LIST OR NUMBER        */
*   DECLARE                                                     01S1325
*     ILIST CHAR(60) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S1326
*     I031F FIXED(31) BASED,                                    01S1326
*     I031P PTR(31) BASED,                                      01S1326
*     I015F FIXED(15) BASED,                                    01S1326
*     I015P PTR(15) BASED,                                      01S1326
*     I008P PTR(8) BASED,                                       01S1326
*     I001C CHAR(1) BASED;                                      01S1326
*   DECLARE                                                     01S1327
*     IOPTLIST(1) PTR(31) BDY(WORD);/* OPTION LIST ARRAY             */
*                                                               01S1327
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERATE MACRO DSECTS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1328
*   GEN DATA DEFS(PATCH);                                       01S1328
*   END                             /* OF PROCEDURE                  */
*                                                               01S1329
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AP1BLOCK)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSUT5  (INIT    )                                       */
*/*%INCLUDE SYSUT5  (INITGET )                                       */
*/*%INCLUDE SYSUT5  (INITDEVT)                                       */
*/*%INCLUDE SYSUT5  (INITDEB )                                       */
*/*%INCLUDE SYSUT5  (HDWETST )                                       */
*/*%INCLUDE SYSUT5  (READTST )                                       */
*/*%INCLUDE SYSUT5  (READBLD2)                                       */
*/*%INCLUDE SYSUT5  (READBLD3)                                       */
*/*%INCLUDE SYSUT5  (TERM    )                                       */
*                                                               01S1329
*       ;                                                       01S1329
@EL00001 L     @13,4(,@13)                                      01S1329
@EF00001 L     @00,@SIZDATD                                     01S1329
         LR    @01,@07                                          01S1329
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S1329
         BR    @14                                              01S1329
@DATA    DS    0H
@CH01082 DC    H'6'
@CH03120 DC    H'55'
@CH00135 DC    H'60'
@CH03240 DC    H'-1'
@SM03864 MVC   BYTE256(0,@06),BYTE256(@14)
@SM03874 MVC   AP1PRMSG(0,AP1REG),CNMSGXXT(@09)
@SM03876 MVC   AP1PRMSG(0,AP1REG),@TS00001
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00006 DS    15F
@SA00004 DS    15F
@SA00003 DS    15F
@SA00002 DS    15F
@SA00013 DS    15F
@SA00012 DS    15F
@SA00005 DS    15F
@PC00005 DS    3F
@SA00007 DS    15F
@SA00008 DS    15F
IAPCNTRL CSECT
         DS    0F
@CF00045 DC    F'1'
@CF00060 DC    F'2'
@CF00139 DC    F'3'
@CH00139 EQU   @CF00139+2
@CF00040 DC    F'4'
@CH00040 EQU   @CF00040+2
@CF00085 DC    F'5'
@CH00085 EQU   @CF00085+2
@CF00049 DC    F'8'
@CF00035 DC    F'12'
@CF03033 DC    F'21'
@CF00066 DC    F'24'
@CF03041 DC    F'26'
@CF03317 DC    F'41'
@CF00997 DC    F'48'
@CF03282 DC    F'51'
@CF03323 DC    F'75'
@CF03845 DC    F'800'
@CF03848 DC    F'934'
@CF03871 DC    F'-8'
@CF03872 DC    F'-7'
@CF03272 DC    XL4'80000000'
@CF03868 DC    XL4'0000FFFF'
@CF03126 DC    XL4'001D'
@DATD    DSECT
         DS    0D
BUFPTR   DS    A
         DS    0D
@TS00001 DS    CL130
         DS    CL6
ILIST    DS    CL60
CNVTPRM  DS    3A
IOPTLIST DS    1A
IAPCNTRL CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03167 DC    V(IAPABNAP)
@CV03168 DC    V(IAPBLDIO)
@CV03169 DC    V(IAPCHKIO)
@CV03170 DC    V(IAPPFXAP)
         DS    0D
PCODELN1 DC    AL4(1+1)
@CC03249 DC    C'TESTDD  '
@CC03244 DC    C'NODATA'
@CC03242 DC    C'AP1B'
@CC03243 DC    C'    '
@CC03245 DC    C'DATA'
@CC03285 DC    C'YES '
@CC03286 DC    C'NO  '
@CC03322 EQU   @CC03243
@CB03072 DC    X'0012'
@CB03126 DC    X'001D'
@CB03128 DC    X'000B'
@CB03253 DC    X'0000'
@CB03254 DC    X'0193'
@CB03255 DC    X'0327'
@CB03256 DC    X'02B7'
@CB03257 DC    X'022A'
IAPTIMER DC    CL8'IAPTIMER'
ZERO     DC    X'0000000000000000'
QNAME    DC    CL8'AP1QNAME'
SSCCCCW  DC    X'2300000040000001'
RHACSCCW DC    X'1A00000050000005'
TICCCW   DC    X'0800000000000000'
SIDCCCCW DC    X'3100000040000005'
MRCCCCCW DC    X'9200000040000008'
RKDSSCCW DC    X'0E0000007000FFFF'
RR0CDCCW DC    X'1600000080000008'
RR0SSCCW DC    X'160000007000FFFF'
MR0CDCCW DC    X'9600000080000008'
READFM   DC    X'40'
         DS    CL1
CNMSG01  DS    CL80
         ORG   CNMSG01
@NM00082 DC    AL1(3)
@NM00083 DC    AL3(0)
@NM00084 DC    A(0)
@NM00085 DC    H'68'
@NM00086 DC    X'8000'
@NM00087 DC    CL64'IAP001A XXX DO YOU WANT TO RUN DATA VERIFICATION TEC
               ST, YES OR NO'
@NM00088 DC    X'40001000'
         ORG   CNMSG01+80
CNMSG02  DS    CL39
         ORG   CNMSG02
@NM00089 DC    AL1(0)
@NM00090 DC    AL3(0)
@NM00091 DC    A(0)
@NM00092 DC    H'27'
@NM00093 DC    X'8000'
@NM00094 DC    CL23'IAP002I XXX AP1 STARTED'
@NM00095 DC    X'10001000'
         ORG   CNMSG02+39
         DS    CL1
CNMSG03  DS    CL51
         ORG   CNMSG03
@NM00096 DC    AL1(0)
@NM00097 DC    AL3(0)
@NM00098 DC    A(0)
@NM00099 DC    H'39'
@NM00100 DC    X'8000'
@NM00101 DC    CL35'IAP003I XXX SUSPECTED DRIVE PROBLEM'
@NM00102 DC    X'10001000'
         ORG   CNMSG03+51
         DS    CL1
CNMSG04  DS    CL72
         ORG   CNMSG04
@NM00103 DC    AL1(0)
@NM00104 DC    AL3(0)
@NM00105 DC    A(0)
@NM00106 DC    H'60'
@NM00107 DC    X'8000'
@NM00108 DC    CL56'IAP004I XXX DATA FORMAT UNACCEPTABLE, TESTING TERMIC
               NATED'
@NM00109 DC    X'10001000'
         ORG   CNMSG04+72
CNMSG05  DS    CL46
         ORG   CNMSG05
@NM00110 DC    AL1(0)
@NM00111 DC    AL3(0)
@NM00112 DC    A(0)
@NM00113 DC    H'34'
@NM00114 DC    X'8000'
@NM00115 DC    CL30'IAP005I XXX ERROR READING DATA'
@NM00116 DC    X'10001000'
         ORG   CNMSG05+46
         DS    CL2
CNMSG06  DS    CL70
         ORG   CNMSG06
@NM00117 DC    AL1(0)
@NM00118 DC    AL3(0)
@NM00119 DC    A(0)
@NM00120 DC    H'58'
@NM00121 DC    X'8000'
@NM00122 DC    CL54'IAP006I XXX ALL DATA ''MACHINE READABLE'' WITHOUT EC
               RRORS'
@NM00123 DC    X'10001000'
         ORG   CNMSG06+70
         DS    CL2
CNMSG07  DS    CL37
         ORG   CNMSG07
@NM00124 DC    AL1(0)
@NM00125 DC    AL3(0)
@NM00126 DC    A(0)
@NM00127 DC    H'25'
@NM00128 DC    X'8000'
@NM00129 DC    CL21'IAP007I XXX AP1 ENDED'
@NM00130 DC    X'10001000'
         ORG   CNMSG07+37
         DS    CL3
CNMSG08  DS    CL48
         ORG   CNMSG08
@NM00131 DC    AL1(0)
@NM00132 DC    AL3(0)
@NM00133 DC    A(0)
@NM00134 DC    H'36'
@NM00135 DC    X'8000'
@NM00136 DC    CL32'IAP008I XXX WRITE TESTS BYPASSED'
@NM00137 DC    X'10001000'
         ORG   CNMSG08+48
CNMSG09  DS    CL59
         ORG   CNMSG09
@NM00138 DC    AL1(0)
@NM00139 DC    AL3(0)
@NM00140 DC    A(0)
@NM00141 DC    H'47'
@NM00142 DC    X'8000'
@NM00143 DC    CL43'IAP009I XXX I/O TIMEOUT, TESTING TERMINATED'
@NM00144 DC    X'10001000'
         ORG   CNMSG09+59
         DS    CL1
CNMSG10  DS    CL51
         ORG   CNMSG10
@NM00145 DC    AL1(0)
@NM00146 DC    AL3(0)
@NM00147 DC    A(0)
@NM00148 DC    H'39'
@NM00149 DC    X'8000'
@NM00150 DC    CL35'IAP010I XXX NO DRIVE PROBLEMS FOUND'
@NM00151 DC    X'10001000'
         ORG   CNMSG10+51
         DS    CL1
CNMSG11  DS    CL66
         ORG   CNMSG11
@NM00152 DC    AL1(0)
@NM00153 DC    AL3(0)
@NM00154 DC    A(0)
@NM00155 DC    H'54'
@NM00156 DC    X'8000'
@NM00157 DC    CL50'IAP011I XXX SYSOUT OPEN FAILED, TESTING TERMINATED'
@NM00158 DC    X'10001000'
         ORG   CNMSG11+66
         DS    CL2
CNMSG12  DS    CL65
         ORG   CNMSG12
@NM00159 DC    AL1(0)
@NM00160 DC    AL3(0)
@NM00161 DC    A(0)
@NM00162 DC    H'53'
@NM00163 DC    X'8000'
@NM00164 DC    CL49'IAP012I XXX NO ''TESTDD'' DD CARD, TESTING BYPASSEDC
               '
@NM00165 DC    X'10001000'
         ORG   CNMSG12+65
         DS    CL3
CNMSG13  DS    CL71
         ORG   CNMSG13
@NM00166 DC    AL1(0)
@NM00167 DC    AL3(0)
@NM00168 DC    A(0)
@NM00169 DC    H'59'
@NM00170 DC    X'8000'
@NM00171 DC    CL55'IAP013I XXX UNABLE TO OPEN ''TESTDD'', TESTING TERMC
               INATED'
@NM00172 DC    X'10001000'
         ORG   CNMSG13+71
         DS    CL1
CNMSG14  DS    CL69
         ORG   CNMSG14
@NM00173 DC    AL1(0)
@NM00174 DC    AL3(0)
@NM00175 DC    A(0)
@NM00176 DC    H'57'
@NM00177 DC    X'8000'
@NM00178 DC    CL53'IAP014I XXX INCORRECT DEVICE TYPE, TESTING TERMINATC
               ED'
@NM00179 DC    X'10001000'
         ORG   CNMSG14+69
         DS    CL3
CNMSG15  DS    CL58
         ORG   CNMSG15
@NM00180 DC    AL1(0)
@NM00181 DC    AL3(0)
@NM00182 DC    A(0)
@NM00183 DC    H'46'
@NM00184 DC    X'8000'
@NM00185 DC    CL42'IAP015I XXX DATA VERIFICATION TEST STARTED'
@NM00186 DC    X'10001000'
         ORG   CNMSG15+58
         DS    CL2
CNMSG16  DS    CL73
         ORG   CNMSG16
@NM00187 DC    AL1(0)
@NM00188 DC    AL3(0)
@NM00189 DC    A(0)
@NM00190 DC    H'61'
@NM00191 DC    X'8000'
@NM00192 DC    CL57'IAP016I XXX WRITE INHIBIT SWITCH ON, WRITE TESTS BYC
               PASSED'
@NM00193 DC    X'10001000'
         ORG   CNMSG16+73
         DS    CL3
CNMSG17  DS    CL64
         ORG   CNMSG17
@NM00194 DC    AL1(0)
@NM00195 DC    AL3(0)
@NM00196 DC    A(0)
@NM00197 DC    H'52'
@NM00198 DC    X'8000'
@NM00199 DC    CL48'IAP017I XXX DEVICE NOT READY, TESTING TERMINATED'
@NM00200 DC    X'10001000'
         ORG   CNMSG17+64
PRMSG01  DS    CL62
         ORG   PRMSG01
@NM00201 DC    H'60'
@NM00202 DC    CL60'           M O V E A B L E   H E A D   E R R O R   C
               T A B L E'
         ORG   PRMSG01+62
PRMSG02  DS    CL79
         ORG   PRMSG02
@NM00203 DC    H'77'
@NM00204 DC    CL77'      HEAD NUMBER  DATA CHK   SEEK VERIFY   WRITE CC
               HK   DATA CHK    DATA COMP'
         ORG   PRMSG02+79
         DS    CL1
PRMSG03  DS    CL77
         ORG   PRMSG03
@NM00205 DC    H'75'
@NM00206 DC    CL75'                                 CHECK             C
                      CE CYL      ERROR'
         ORG   PRMSG03+77
         DS    CL1
PRMSG04  DS    CL55
         ORG   PRMSG04
@NM00207 DC    H'53'
@NM00208 DC    CL53'          F I X E D   H E A D   E R R O R   T A B LC
                E'
         ORG   PRMSG04+55
         DS    CL1
PRMSG05  DS    CL85
         ORG   PRMSG05
@NM00209 DC    H'83'
@NM00210 DC    CL83'      HEAD NUMBER  DATA CHECK   SEEK VERIFY   HEAD C
               NUMBER  DATA CHECK   SEEK VERIFY'
         ORG   PRMSG05+85
         DS    CL1
PRMSG06  DS    CL82
         ORG   PRMSG06
@NM00211 DC    H'80'
@NM00212 DC    CL80'                                   CHECK           C
                                       CHECK'
         ORG   PRMSG06+82
PRMSG07  DS    CL10
         ORG   PRMSG07
@NM00213 DC    H'8'
@NM00214 DC    CL8'SNS TEST'
         ORG   PRMSG07+10
PRMSG08  DS    CL12
         ORG   PRMSG08
@NM00215 DC    H'10'
@NM00216 DC    CL10'RECAL TEST'
         ORG   PRMSG08+12
PRMSG09  DS    CL12
         ORG   PRMSG09
@NM00217 DC    H'10'
@NM00218 DC    CL10'RHAMH TEST'
         ORG   PRMSG09+12
PRMSG10  DS    CL12
         ORG   PRMSG10
@NM00219 DC    H'10'
@NM00220 DC    CL10'RHAFH TEST'
         ORG   PRMSG10+12
PRMSG11  DS    CL12
         ORG   PRMSG11
@NM00221 DC    H'10'
@NM00222 DC    CL10'SK192 TEST'
         ORG   PRMSG11+12
PRMSG12  DS    CL13
         ORG   PRMSG12
@NM00223 DC    H'11'
@NM00224 DC    CL11'SKINCR TEST'
         ORG   PRMSG12+13
         DS    CL1
PRMSG13  DS    CL12
         ORG   PRMSG13
@NM00225 DC    H'10'
@NM00226 DC    CL10'SKMAX TEST'
         ORG   PRMSG13+12
PRMSG14  DS    CL12
         ORG   PRMSG14
@NM00227 DC    H'10'
@NM00228 DC    CL10'SKRAN TEST'
         ORG   PRMSG14+12
PRMSG15  DS    CL10
         ORG   PRMSG15
@NM00229 DC    H'8'
@NM00230 DC    CL8'RHA TEST'
         ORG   PRMSG15+10
PRMSG16  DS    CL10
         ORG   PRMSG16
@NM00231 DC    H'8'
@NM00232 DC    CL8'WRT TEST'
         ORG   PRMSG16+10
PRMSG17  DS    CL11
         ORG   PRMSG17
@NM00233 DC    H'9'
@NM00234 DC    CL9'RR01 TEST'
         ORG   PRMSG17+11
         DS    CL1
PRMSG18  DS    CL60
         ORG   PRMSG18
@NM00235 DC    H'58'
@NM00236 DC    CL58'RR01 DATA COMPARE ERROR--EXP =                     C
                 REC ='
         ORG   PRMSG18+60
PRMSG19  DS    CL11
         ORG   PRMSG19
@NM00237 DC    H'9'
@NM00238 DC    CL9'RDMT TEST'
         ORG   PRMSG19+11
         DS    CL1
PRMSG20  DS    CL60
         ORG   PRMSG20
@NM00239 DC    H'58'
@NM00240 DC    CL58'RDMT DATA COMPARE ERROR--EXP =                     C
                 REC ='
         ORG   PRMSG20+60
PRMSG21  DS    CL12
         ORG   PRMSG21
@NM00241 DC    H'10'
@NM00242 DC    CL10'FTWRT TEST'
         ORG   PRMSG21+12
PRMSG22  DS    CL12
         ORG   PRMSG22
@NM00243 DC    H'10'
@NM00244 DC    CL10'AMDET TEST'
         ORG   PRMSG22+12
PRMSG23  DS    CL61
         ORG   PRMSG23
@NM00245 DC    H'59'
@NM00246 DC    CL59'AMDET DATA COMPARE ERROR--EXP =                    C
                  REC ='
         ORG   PRMSG23+61
         DS    CL1
PRMSG24  DS    CL9
         ORG   PRMSG24
@NM00247 DC    H'7'
@NM00248 DC    CL7'SD TEST'
         ORG   PRMSG24+9
         DS    CL1
PRMSG25  DS    CL77
         ORG   PRMSG25
@NM00249 DC    H'75'
@NM00250 DC    CL75'      FAILING CCW =                        CSW =   C
                                  ECB ='
         ORG   PRMSG25+77
         DS    CL1
PRMSG26  DS    CL13
         ORG   PRMSG26
@NM00251 DC    H'11'
@NM00252 DC    CL11'      SNS ='
         ORG   PRMSG26+13
         DS    CL1
PRMSG27  DS    CL29
         ORG   PRMSG27
@NM00253 DC    H'27'
@NM00254 DC    CL27'WRT WRITE INHIBIT SWITCH ON'
         ORG   PRMSG27+29
         DS    CL1
PRMSG28  DS    CL13
         ORG   PRMSG28
@NM00255 DC    H'11'
@NM00256 DC    CL11'WRTPAD TEST'
         ORG   PRMSG28+13
         DS    CL1
PRMSG29  DS    CL61
         ORG   PRMSG29
@NM00257 DC    H'59'
@NM00258 DC    CL59'WRTPAD READ WRONG RECORD--EXP =                    C
                  REC ='
         ORG   PRMSG29+61
         DS    CL1
PRMSG30  DS    CL40
         ORG   PRMSG30
@NM00259 DC    H'38'
@NM00260 DC    CL38'DATAVER DATA CHECKS EXCEEDED THRESHOLD'
         ORG   PRMSG30+40
PRMSG31  DS    CL27
         ORG   PRMSG31
@NM00261 DC    H'25'
@NM00262 DC    CL25'DATAVER DATA CHECK CCHH ='
         ORG   PRMSG31+27
         DS    CL1
PRMSG32  DS    CL14
         ORG   PRMSG32
@NM00263 DC    H'12'
@NM00264 DC    CL12'DATAVER TEST'
         ORG   PRMSG32+14
PRMSG33  DS    CL14
         ORG   PRMSG33
@NM00265 DC    H'12'
@NM00266 DC    CL12'CLEANUP TEST'
         ORG   PRMSG33+14
PRMSG34  DS    CL42
         ORG   PRMSG34
@NM00267 DC    H'40'
@NM00268 DC    CL40'RHA HA INCORRECT -- EXP=            REC='
         ORG   PRMSG34+42
PRMSG35  DS    CL41
         ORG   PRMSG35
@NM00269 DC    H'39'
@NM00270 DC    CL39'DATAVER DATA FORMAT UNACCEPTABLE ON CYL'
         ORG   PRMSG35+41
         DS    CL1
PRMSG36  DS    CL10
         ORG   PRMSG36
@NM00271 DC    H'8'
@NM00272 DC    CL8'RPS TEST'
         ORG   PRMSG36+10
HEADER   DC    CL110'         A P 1    A N A L Y S I S  P R O G R A M  C
                O N E                                       PAGE'
         DS    CL2
CNMSGPTR DC    AL4(CNMSG01)
         DC    AL4(CNMSG02)
         DC    AL4(CNMSG03)
         DC    AL4(CNMSG04)
         DC    AL4(CNMSG05)
         DC    AL4(CNMSG06)
         DC    AL4(CNMSG07)
         DC    AL4(CNMSG08)
         DC    AL4(CNMSG09)
         DC    AL4(CNMSG10)
         DC    AL4(CNMSG11)
         DC    AL4(CNMSG12)
         DC    AL4(CNMSG13)
         DC    AL4(CNMSG14)
         DC    AL4(CNMSG15)
         DC    AL4(CNMSG16)
         DC    AL4(CNMSG17)
PRMSGPTR DC    AL4(PRMSG01)
         DC    AL4(PRMSG02)
         DC    AL4(PRMSG03)
         DC    AL4(PRMSG04)
         DC    AL4(PRMSG05)
         DC    AL4(PRMSG06)
         DC    AL4(PRMSG07)
         DC    AL4(PRMSG08)
         DC    AL4(PRMSG09)
         DC    AL4(PRMSG10)
         DC    AL4(PRMSG11)
         DC    AL4(PRMSG12)
         DC    AL4(PRMSG13)
         DC    AL4(PRMSG14)
         DC    AL4(PRMSG15)
         DC    AL4(PRMSG16)
         DC    AL4(PRMSG17)
         DC    AL4(PRMSG18)
         DC    AL4(PRMSG19)
         DC    AL4(PRMSG20)
         DC    AL4(PRMSG21)
         DC    AL4(PRMSG22)
         DC    AL4(PRMSG23)
         DC    AL4(PRMSG24)
         DC    AL4(PRMSG25)
         DC    AL4(PRMSG26)
         DC    AL4(PRMSG27)
         DC    AL4(PRMSG28)
         DC    AL4(PRMSG29)
         DC    AL4(PRMSG30)
         DC    AL4(PRMSG31)
         DC    AL4(PRMSG32)
         DC    AL4(PRMSG33)
         DC    AL4(PRMSG34)
         DC    AL4(PRMSG35)
         DC    AL4(PRMSG36)
IAPCNTRL CSECT
TESTDCB  DCB   DDNAME=TESTDD,DSORG=PS,DEVD=DA,MACRF=(E)
TESTDCBL DC    A(*-TESTDCB)      LENGTH OF TEST DCB
PRDCB    DCB   DDNAME=SYSPRINT,BLKSIZE=131,DEVD=DA,LRECL=131,         XX
               MACRF=(PM),RECFM=FBA,DSORG=PS
PRDCBL   DC    A(*-PRDCB)        LENGTH OF PRINTER DCB
IAPCNTRL CSECT
*                                /*  PATCH AREA  */
         CNOP  0,4               FULLWORD BDWY
PATCH    DC    3XL((*-@MAINENT)/60)'0' FIVE PERCENT.
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IAPCNTRL CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
COUNTER2 EQU   @02
COUNTER  EQU   @09
CCWPTR   EQU   @02
DDPTR    EQU   @02
DEBPTR   EQU   @03
UCBPTR   EQU   @09
AP1REG   EQU   @08
GPR00P   EQU   @00
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR01F   EQU   @01
GPR15P   EQU   @15
GPR15F   EQU   @15
GPR02P   EQU   @02
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR09F   EQU   @09
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR14F   EQU   @14
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
AP1BLOCK EQU   0
AP1HDR   EQU   AP1BLOCK
AP1PDCBA EQU   AP1BLOCK+4
AP1PRINT EQU   AP1BLOCK+8
AP1PRASA EQU   AP1PRINT
AP1PRMSG EQU   AP1PRINT+1
AP1PRCOD EQU   AP1BLOCK+139
AP1PRPAG EQU   AP1BLOCK+140
AP1PRLIN EQU   AP1BLOCK+142
AP1PFLG1 EQU   AP1BLOCK+144
AP1PROPN EQU   AP1PFLG1
AP1PRNP  EQU   AP1PFLG1
AP1PRCLS EQU   AP1PFLG1
AP1CNCOD EQU   AP1BLOCK+145
AP1CNRPL EQU   AP1BLOCK+146
AP1RECB  EQU   AP1BLOCK+152
AP1WRKA  EQU   AP1BLOCK+156
AP1CCWA  EQU   AP1BLOCK+160
AP1BUFAD EQU   AP1BLOCK+164
AP1BUFAB EQU   AP1BUFAD+1
AP1TIMEA EQU   AP1BLOCK+168
AP1TCBAD EQU   AP1BLOCK+172
AP1TIMFL EQU   AP1BLOCK+176
AP1TIMFA EQU   AP1TIMFL
AP1IOACT EQU   AP1TIMFA
AP1TIMIN EQU   AP1TIMFA
AP1PCODE EQU   AP1BLOCK+180
AP1CSW   EQU   AP1BLOCK+181
AP1SNS   EQU   AP1BLOCK+188
AP1FM    EQU   AP1BLOCK+212
AP1SEEK  EQU   AP1BLOCK+213
CCHHR    EQU   AP1SEEK+3
CCHH     EQU   CCHHR
CC       EQU   CCHH
HH       EQU   CCHH+2
R        EQU   CCHHR+4
AP1CESK  EQU   AP1BLOCK+221
CECCHHR  EQU   AP1CESK+2
CECCHH   EQU   CECCHHR
AP1DCBA  EQU   AP1BLOCK+228
AP1DEBA  EQU   AP1BLOCK+232
AP1IOBA  EQU   AP1BLOCK+236
AP1IOECB EQU   AP1BLOCK+240
AP1FLG2  EQU   AP1BLOCK+244
AP1IOC   EQU   AP1FLG2
AP1EDP   EQU   AP1FLG2
AP1FLG3  EQU   AP1BLOCK+245
AP1LST   EQU   AP1FLG3
AP1ERROR EQU   AP1FLG3
AP1PRERR EQU   AP1FLG3
AP1QUIT  EQU   AP1FLG3
AP1VERIF EQU   AP1FLG3
AP1RDTST EQU   AP1FLG3
AP1RDERR EQU   AP1FLG3
AP1FLG4  EQU   AP1BLOCK+246
AP1NORD  EQU   AP1FLG4
AP1READ  EQU   AP1FLG4
AP1DEBCH EQU   AP1FLG4
AP1ENQD  EQU   AP1FLG4
AP1DCCNT EQU   AP1BLOCK+248
AP1TSTNO EQU   AP1BLOCK+249
AP1DEVTP EQU   AP1BLOCK+250
AP1RET   EQU   AP1BLOCK+251
AP1ETABA EQU   AP1BLOCK+252
AP1LSTCC EQU   AP1BLOCK+258
AP1LSTHH EQU   AP1BLOCK+260
AP1DEVAD EQU   AP1BLOCK+262
AP1ENQAD EQU   AP1BLOCK+266
AP1ERRTM EQU   AP1BLOCK+270
AP1ERRTF EQU   AP1BLOCK+300
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBTIOT  EQU   IHADCS25
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS28 EQU   0
IHADCS44 EQU   0
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
DCBCNTRL EQU   IHADCS40+12
DCBEROPT EQU   DCBCNTRL
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCMDCH EQU   IOBFLAG1
IOBCYCCK EQU   IOBFLAG1
IOBUNREL EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBDEBB  EQU   DEBDEBAD+1
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBNMEXT EQU   DEBUSRPG
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBDEBID EQU   DEBPROTG
DEBAPPAD EQU   DEBBASIC+28
DEBEXSCL EQU   DEBAPPAD
DEBAPPB  EQU   DEBAPPAD+1
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBDVMOD EQU   DEBUCBAD
DEBSTRCC EQU   DEBDASD+6
DEBSTRHH EQU   DEBDASD+8
DEBENDCC EQU   DEBDASD+10
DEBENDHH EQU   DEBDASD+12
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPGFX  EQU   DEBSIOAB
DEBSIONP EQU   DEBSIOAB
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBXCENP EQU   DEBXCEAB
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBLNGTH EQU   DEBPREFX+12
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBDEB   EQU   TCB+8
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
TIOT1    EQU   0
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBVRDEV EQU   UCBJBNR
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00072 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
BUFFER   EQU   0
ERRTAB   EQU   0
DCK      EQU   ERRTAB
SKVERCK  EQU   ERRTAB
WRTCK    EQU   ERRTAB
DCKCE    EQU   ERRTAB
DATACOMP EQU   ERRTAB
CCW      EQU   0
CCWADDRA EQU   CCW
CCWCOMCD EQU   CCWADDRA
@NM00073 EQU   CCWCOMCD
CCWADDRB EQU   CCWADDRA+1
CCWFLGS  EQU   CCW+4
WRKAREA  EQU   0
WRKAD    EQU   WRKAREA
WRKFLG   EQU   WRKAD
WRKENDFL EQU   WRKFLG
CNMSGXX  EQU   0
MSGRPLY  EQU   CNMSGXX
MSGRLEN  EQU   MSGRPLY
MSGRPTR  EQU   MSGRPLY+1
MSGECBA  EQU   CNMSGXX+4
CNMSGXXL EQU   CNMSGXX+8
CNMSGXXT EQU   CNMSGXX+12
MSGDEVAD EQU   CNMSGXXT+8
PRMSGXX  EQU   0
PRMSGXXL EQU   PRMSGXX
PRMSGXXT EQU   PRMSGXX+2
BYTE1    EQU   0
BYTE30   EQU   0
BYTE60   EQU   0
BYTE256  EQU   0
FIXED16  EQU   0
SEEK     EQU   0
SEEKCCHH EQU   SEEK+2
CSW      EQU   0
CSWADDRA EQU   CSW
CSWADDRB EQU   CSWADDRA+1
CSWSTATS EQU   CSW+4
CSWSTAT1 EQU   CSWSTATS
CSWERR1  EQU   CSWSTAT1
CSWUNCHK EQU   CSWSTAT1
CSWUNEXP EQU   CSWSTAT1
CSWSTAT2 EQU   CSWSTATS+1
SNSD     EQU   0
SNS0     EQU   SNSD
SNSEQU   EQU   SNS0
SNSDATA  EQU   SNS0
SNS1     EQU   SNSD+1
SNSIFMT  EQU   SNS1
SNSNRF   EQU   SNS1
SNS2     EQU   SNSD+2
SNS5     EQU   SNSD+5
SNS6     EQU   SNSD+6
SNSCYLB  EQU   SNS6
SNSCYLC  EQU   SNS6
SNS7     EQU   SNSD+7
SNS17    EQU   SNSD+17
ECBCC    EQU   0
CNT      EQU   0
CNTCCHHR EQU   CNT
CNTCCHH  EQU   CNTCCHHR
CNTHH    EQU   CNTCCHH+2
CNTR     EQU   CNTCCHHR+4
BYTE6    EQU   0
BYTE8    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
UCBBGN   EQU   0
PARM     EQU   0
PARMLEN  EQU   PARM
PARMDATA EQU   PARM+2
INAREA   EQU   0
OUTAREA  EQU   0
BYTES    EQU   0
HHR      EQU   HH
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBPRTOV EQU   IOBNFLG1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
PSARSVTE EQU   PSARSVT
TIOENTRY EQU   TIOT1+24
TIOELNGH EQU   TIOENTRY
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
TIOEFSRT EQU   TIOENTRY+17
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00071 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
IOBAP1PT EQU   IOBSEEK+8
@NM00076 EQU   WRKAREA
CNTRKDD  EQU   CNTR
CNTKDD   EQU   CNTRKDD
CNTHHR   EQU   CNTHH
I107     EQU   ILIST
I10701   EQU   I107
I10702   EQU   I107+1
I10703   EQU   I107+2
I10704   EQU   I107+3
I042     EQU   ILIST
I04202   EQU   I042+1
I04205   EQU   I042+8
I04213   EQU   I042+24
I04216   EQU   I042+28
I04226   EQU   I042+54
I048     EQU   ILIST
I04802   EQU   I048+4
I04803   EQU   I04802
I04804   EQU   I04803
I04805   EQU   I04803+1
I04806   EQU   I04803+2
I04807   EQU   I04802+4
I04808   EQU   I04802+8
FLC      EQU   PSA
WRKAREAD EQU   WRKAREA
ZERO1    EQU   ZERO
ZERO6    EQU   ZERO
ZERO7    EQU   ZERO
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00273 EQU   I04803+3
I04801   EQU   I048
I04227   EQU   I042+56
I04225   EQU   I042+53
I04224   EQU   I042+52
I04223   EQU   I042+49
I04222   EQU   I042+48
I04221   EQU   I042+45
I04220   EQU   I042+44
I04219   EQU   I042+41
I04218   EQU   I042+40
I04217   EQU   I042+36
I04215   EQU   I042+27
I04214   EQU   I042+26
I04212   EQU   I042+21
I04211   EQU   I042+20
I04210   EQU   I042+17
I04209   EQU   I042+16
I04208   EQU   I042+13
I04207   EQU   I042+12
I04206   EQU   I042+9
I04204   EQU   I042+5
I04203   EQU   I042+4
I04201   EQU   I042
CNTDD    EQU   CNTKDD+1
CNTK     EQU   CNTKDD
WRKHW2   EQU   @NM00076+2
WRKHW1   EQU   @NM00076
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00071
UCBSKPFG EQU   @NM00071
UCBRIPND EQU   @NM00071
UCBRTIAC EQU   @NM00071
UCBRSV79 EQU   @NM00071
UCBRSV78 EQU   @NM00071
UCBRSV77 EQU   @NM00071
UCBOLTEP EQU   @NM00071
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00070 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00068 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00067 EQU   POOLSTAR
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBM     EQU   IOBSEEK
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBSEGMT EQU   IOBPRTOV
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00081 EQU   CNT+5
CNTCC    EQU   CNTCCHH
ECBPOST  EQU   ECBCC
ECBWAIT  EQU   ECBCC
@NM00080 EQU   SNSD+8
SNSHD1   EQU   SNS6
SNSHD2   EQU   SNS6
SNSHD4   EQU   SNS6
SNSHD8   EQU   SNS6
SNSHD16  EQU   SNS6
SNSCYLA  EQU   SNS6
SNS4     EQU   SNSD+4
SNS3     EQU   SNSD+3
SNSFHF   EQU   SNS2
SNSEMU   EQU   SNS2
SNSEDAT  EQU   SNS2
@NM00079 EQU   SNS2
SNSCORR  EQU   SNS2
SNSWRPS  EQU   SNS2
SNSOFLO  EQU   SNS1
SNSINHI  EQU   SNS1
SNSFP    EQU   SNS1
@NM00078 EQU   SNS1
SNSEOC   EQU   SNS1
SNSPERM  EQU   SNS1
SNSSKCK  EQU   SNS0
SNSTCC   EQU   SNS0
SNSOVRN  EQU   SNS0
SNSBUSO  EQU   SNS0
SNSINT   EQU   SNS0
SNSCREJ  EQU   SNS0
CSWBYTE  EQU   CSW+6
@NM00077 EQU   CSWSTAT1
CSWKEY   EQU   CSWADDRA
SEEKR    EQU   SEEK+6
SEEKHH   EQU   SEEKCCHH+2
SEEKCC   EQU   SEEKCCHH
SEEKBB   EQU   SEEK
MSG      EQU   CNMSGXXT+12
MSGID    EQU   CNMSGXXT
MSGFLAGS EQU   CNMSGXX+10
WRKAB    EQU   WRKAD+1
CCWBYTE  EQU   CCW+6
@NM00075 EQU   CCW+5
CCWPCI   EQU   CCWFLGS
CCWSKIP  EQU   CCWFLGS
CCWSLI   EQU   CCWFLGS
CCWCC    EQU   CCWFLGS
CCWCD    EQU   CCWFLGS
CCWWR    EQU   @NM00073
CCWRD    EQU   @NM00073
@NM00074 EQU   @NM00073
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00072
UCBHALI  EQU   @NM00072
UCBRSV09 EQU   @NM00072
UCBRSV08 EQU   @NM00072
UCBRSV07 EQU   @NM00072
UCBRSV06 EQU   @NM00072
UCBRSV05 EQU   @NM00072
UCBRSV04 EQU   @NM00072
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00069 EQU   UCB
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
@NM00066 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00065 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00064 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00063 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00062 EQU   TCBWORDS
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00037 EQU   DEBACS08+12
@NM00036 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00035 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00034 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDCBB  EQU   DEBDCBAD+1
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSTRTB EQU   IOBSTART+1
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBPB EQU   IOBECBPT+1
IOBECBCC EQU   IOBECBPT
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00033 EQU   IHADCS40+16
DCBCNTRA EQU   DCBCNTRL+1
@NM00032 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
DCBLRECL EQU   IHADCS40+10
@NM00031 EQU   IHADCS40+9
@NM00030 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00029 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
@NM00028 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00027 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00026 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00025 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00024 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00023 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
@NM00022 EQU   IHADCS44+10
DCBXENDA EQU   IHADCS44+8
DCBCENDA EQU   IHADCS44+6
DCBSIOA  EQU   IHADCS44+4
DCBPCIA  EQU   IHADCS44+2
DCBEOEA  EQU   IHADCS44
@NM00021 EQU   IHADCS28+1
@NM00020 EQU   IHADCS28
DCBPUTA  EQU   DCBGETA
@NM00019 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00018 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00017 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00016 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00015 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00014 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00013 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00012 EQU   DCBDSRG1
@NM00011 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00010 EQU   IHADCS01+5
@NM00009 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00008 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00007 EQU   IHADCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00006 EQU   CVTFIX+248
@NM00005 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
AP1END   EQU   AP1BLOCK+360
AP1SKCNT EQU   AP1BLOCK+256
@NM00004 EQU   AP1BLOCK+247
AP1PTRN2 EQU   AP1FLG3
AP1NOERP EQU   AP1FLG2
AP1FHF   EQU   AP1FLG2
AP1NOWR  EQU   AP1FLG2
CER      EQU   CECCHHR+4
CEHH     EQU   CECCHH+2
CECC     EQU   CECCHH
CEBB     EQU   AP1CESK
BB       EQU   AP1SEEK+1
M        EQU   AP1SEEK
@NM00003 EQU   AP1BUFAD
AP1CCWAB EQU   AP1CCWA+1
@NM00002 EQU   AP1CCWA
@NM00001 EQU   AP1BLOCK+150
@NM00061 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00060 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00059 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00058 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00057 EQU   FLCFSA
@NM00056 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00055 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00054 EQU   FLCIOA
@NM00053 EQU   FLCMCLA+15
@NM00052 EQU   FLCMCLA+14
@NM00051 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00050 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00049 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00048 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00047 EQU   FLCPER
@NM00046 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00045 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00044 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00043 EQU   FLCPIILC
@NM00042 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00041 EQU   FLCSVILC
@NM00040 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00039 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00038 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00425 EQU   @RC00422
@RC00632 EQU   @RC00631
@RC00704 EQU   @RC00683
@RC00684 EQU   @RC00683
@RC00769 EQU   @RC00768
@RC00791 EQU   @RC00645
@RC00783 EQU   @RC00645
@RC01134 EQU   @EL00007
@RC01159 EQU   @EL00008
@PB00008 EQU   @EL00006
@RC01249 EQU   @EL00010
@RC01281 EQU   @EL00012
@RC01286 EQU   @EL00013
@RC00685 EQU   @RC00684
@RC00770 EQU   @RC00769
@PB00007 EQU   @PB00008
@RC01100 EQU   @PB00007
@ENDDATA EQU   *
         END   IAPCNTRL,(C'PLS1733',0701,77308)
