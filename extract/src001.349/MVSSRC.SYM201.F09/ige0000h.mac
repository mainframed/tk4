         TITLE 'HOST ERP LOAD 1 (IGE0000H) VS2'
IGE0000H START X'00'
*
*********************************************************************
*
*01 MODULE-NAME = IGE0000H
*
*01 DESCRIPTIVE NAME = HOST 3851 ERROR RECOVERY PROCEDURES
*
*01 COPYRIGHT = NONE
*
*01 STATUS = VS2 REL 3.0 VERSION 1.
*
*01 FUNCTION = ?????????????????
*
*01 NOTES
*
*02    DEPENDENCIES = NONE
*
*02    RESTRICTIONS = IF A COMND IS INADVERTENTLY ISSUED TO THE DEVICE
*      WITH A OP CODE OF X'FF', THE SWAP FUNCTION WILL BE ATTEMPTED.
*
*02    REGISTER CONVENTIONS =
*      REG0      0    WORK REG
*      IOSBPTR   1    IOSB POINTER
*      REG2      2    WORK REG
*      REG3      3    WORK REG
*      CVTXTN    4    CVT EXTENTION POINTER
*      CVTREG    5    CVT POINTER
*      EWAPTR    6    EWA POINTER
*      PRIUCB    7    ADDRESS OF PRIMARY UCB
*      ALTUCB    8    ADDRESS OF ALTERNATE UCB
*      CCWPTR    9    ADDRESS OF CCW IN ERROR
*      CTLPTR    10   SSC CONTROL BLOCK POINTER
*      BASEREG   11   BASE REG
*      REGC      12   WORK REG
*      REGD      13   WORK REG
*      BALRREG   14   BRANCH REG
*      REGF      15   WORK REG
*
*02    PATCH LABEL = ERPMAINT
*
*01 MODULE TYPE = LOAD MODULE
*
*02    PROCESSER = ASSEMBLER XF
*
*02    MODULE SIZE = 4096 BYTES
*
*02    ATTRIBUTES = RE-ENTRANT, DISABLED, PRIVILEGED
*
*01 ENTRY POINT = IGE0000H
*
*02    PURPOSE =
*      1. INITIAL CALL OF THE ERP FOR A ERROR CONDITION.
*      2. RETURN FROM A ERP RETRY SIO.
*
*02    LINKAGE = IOS WILL CALL THE ERP WITH REG 1 = POINTER TO IOSB AND
*      REG 15 = BASE ADDRESS OF THE MODULE.
*
*01 INPUT = CONTROL BLOCKS 'IOSB', 'EWA' AND THE 'UCB' WILL BE
*   INITIALIZED BY IOS PRIOR TO ENTRY.
*
*01 OUTPUT = NONE
*
*01 EXIT NORMAL = IOSB FLAGS 'ERR' AND 'EX' WILL BE SET TO;
*   1. 'ERR' = 1, 'EX' = 1 TO DO A ERP RETRY SIO.
*   2. 'ERR' = 0, 'EX' = 1 TO EXIT PERMANENT ERROR.
*   3. 'ERR' = 0, 'EX' = 0 TO EXIT RECOVERED ERROR.
*
*01 EXIT ERROR = NONE
*
*01 EXTERNAL REFERENCES =
*
*02    ROUTINES = SVC 35 (WRITE TO OPERATOR SVC), IGE0025C (SYSTEM WTO
*   ROUTINE) AND IGE0025F (OBR ROUTINE).
*
*02    DATA AREAS = NONE
*
*02    CONTROL BLOCKS = CVT, UCB, IOSB, EWA AND IEZSSC.
*
*01 TABLES = NONE
*
*01 MACROS = WTO AND TIME.
*
*01 CHANGE ACTIVITY = ???????????
*
*********************************************************************
         EJECT
*
*              GENERAL REGISTER EQUATES
*
REG0     EQU   0
IOSBPTR  EQU   1
REG2     EQU   2
REG3     EQU   3
CVTXTN   EQU   4
CVTREG   EQU   5
EWAPTR   EQU   6
PRIUCB   EQU   7
ALTUCB   EQU   8
CCWPTR   EQU   9
CTLPTR   EQU   10
BASEREG  EQU   11
REGC     EQU   12
REGD     EQU   13
BALRREG  EQU   14
REGF     EQU   15                      WORK REG
*
         EJECT
*        IOSB FLAG C BIT MEANINGS
FLCLOOP  EQU   X'10'
*        EWA   EWAFLAG3 3851 FLAG BIT MEANINGS
EWA3SAVE EQU   X'80'
EWA3SWAP EQU   X'40'
EWA3OPER EQU   X'20'
EWA3SUS  EQU   X'08'
EWA3CCH  EQU   X'04'
*
*        ALTERNATE UCB OFFSETS
ALTSTAT  EQU   3
ALTFLA   EQU   6
ALTCHAN  EQU   4
ALTNAME  EQU   13
*
*        GENERAL PROGRAM EQUATES
C0       EQU   0
C1       EQU   1
C2       EQU   2
C3       EQU   3
C4       EQU   4
C7       EQU   7
C8       EQU   8
C10      EQU   10                      COUNT OF 10
C16      EQU   16
C24      EQU   24                      COUNT OF 24
C32      EQU   32
C33      EQU   33
C37      EQU   37
C43      EQU   43
C47      EQU   47
CCC      EQU   X'04'                   CHANNEL CONTROL CHK
CDC      EQU   X'08'                   CHANNEL DATA CHK
CHN      EQU   X'01'                   CHAINING CHECK
CMDCHN   EQU   X'40'                   COMMAND CHAIN FLAG
COD41    EQU   X'41'                   COMPLETION CODE 41
CUBZY    EQU   X'50'                   STS MOD AND BUSY BITS
EOT      EQU   X'FF'                   END OF TABLE INDICATOR
EXEC     EQU   X'87'                   EXECUTE COMND OP CODE
FIFTEEN  EQU   15                      SVC 15 CODE
FIVE     EQU   X'05'                   COUNT OF 5
ICC      EQU   X'02'                   INTERFACE CONTROL CHK
ILI      EQU   X'40'                   INCORRECT LENGTH
INTCOD44 EQU   X'44'                   INTERCEPT CODE 44
INTCOD7E EQU   X'7E'                   INTERCEPT CODE 7E
LOC10    EQU   16                      ADDR OF CVT
NOP      EQU   X'03'                   NOP OP CODE
OBRRTN   EQU   256                     OBR RTN CALL CODE
OF       EQU   X'0F'                   MASK OF  ZERO-FOX
OPERSWAP EQU   X'FF'                   OP CODE OF X'FF'
PGM      EQU   X'20'                   PROGRAM CHK
PROT     EQU   X'10'                   PROTECTION CHK
SNSOP    EQU   X'04'                   OP CODE FOR SENSE
SUSPEND  EQU   X'06'                   DEV END + UNIT CHK
THREE    EQU   3                       SVC 3 CODE
TIC      EQU   X'08'                   OP CODE OF TIC COMND
UNCK     EQU   X'02'                   UNIT CHK
WTORTN   EQU   253                     WTO RTN CALL CODE
ZERO     EQU   X'00'
*
         EJECT
         USING IOSB,IOSBPTR
         USING EWA,EWAPTR
         USING UCB,PRIUCB
         USING CVTMAP,CVTREG
         USING CVTXTNT2,CVTXTN
         USING ICB2SSCB,CTLPTR
         USING *,BASEREG
*******************
*        SET UP REGS FOR BASE AND CONTROL BLOCK POINTERS.
*        GET CCW IN ERROR ADDRESS.
*******************
ERR000   EQU   *
         LR    BASEREG,REGF            GET BASE REG
         B     ERR001
         DC    C'IGE0000H 05/22/4'
ERR001   EQU   *
         L     PRIUCB,IOSUCB           GET UCB ADDR
         SH    PRIUCB,H512             POINT TO PREFIX
         L     EWAPTR,IOSERP           GET EWA ADDR
         L     CCWPTR,IOSCC            GET ERROR CCW ADDR
         LA    CCWPTR,C0(CCWPTR)       ZERO HI ORDER BYTE
         SH    CCWPTR,H8               POINT TO ERROR CCW
         L     CVTREG,LOC10            GET ADR OF CVT
         L     CVTXTN,CVTEXT2          GET ADDR OF CVT EXT
         L     CTLPTR,CVTICB           GET ADDR OF SSC CTL BLOCK
         L     ALTUCB,ICBAUCB          GET ADDR OF ALT UCB
         EJECT
*******************
*        INSURE THAT MSG AND LOG ARE ZEROED
*******************
         NI    IOSFLB,X'FF'-IOSMSG-IOSLOG  ZERO LOG AND MSG
         OI    IOSFLA,IOSEX            SET EXCEPTION FLAG ON
         SPACE 1
*******************
*        IS THIS THE FIRST ENTRY TO THE ERP
*        IF YES CLEAR ALL ERP FLAGS EXCEPT LOOP. RESET THE ERROR
*        COUNTERS AND SET THE ERP IN CONTROL.
*******************
         TM    IOSFLA,IOSERR           1ST ENTRY TO ERP
         BO    ERR020                  BR NO
*********
         MVI   EWAFLG3,ZERO           CLR ALL
         MVI   EWACNTR2,ZERO           CLR ERR CNTR
         OI    IOSFLA,IOSERR+IOSEX     SET ERP IN CONTROL
         SPACE 1
*******************
*        IS UNIT CHECK ON. IF YES, WE HAVE SENSE AND A ERROR CONDITION.
*******************
ERR020   EQU   *
         TM    IOSTSA,UNCK             IS UNIT CHK ON
         BO    ERR060                  BR YES
         SPACE 1
*******************
*        IF UNIT CHECK IS NOT ON, DO WE HAVE A CONTROL UNIT BUSY COND.
*        IF YES GO TO REISSUE THE OPERATION.
*******************
         TM    IOSTSA,CUBZY            IS IT CU BUSY
         BO    ERR2000                 BR YES TO EXIT
         SPACE 1
*******************
*        WE DONT HAVE UNIT CHECK OR A CU BUSY SO ZERO THE SENSE AREA.
*******************
ERR040   EQU   *
         XC    EWASNS(C32),EWASNS      ZERO SENSE AREA
         SPACE 1
*******************
*        DID WE SAVE THE USER CCW ADDRESS. IF YES, RESTORE THE IOSB
*        WITH THAT ADDRESS.
*******************
ERR060   EQU   *
         TM    EWAFLG3,EWA3SAVE        DID WE SAVE THE USER CCW
         BZ    ERR070                  BR NO
         L     REG2,UCBDEV+C4          GET SAVED CCW ADDR
         ST    REG2,IOSVST             STORE VIRT ADDR
         LRA   REG2,C0(REG2)           CONVERT TO REAL
         ST    REG2,IOSRST             STORE REAL ADDR
         SPACE 1
*******************
*        IS SWAP LOOP ON. IF YES WE ARE RE-ENTERING THE ERP AFTER
*        PRINTING A MSG AND RECORDING ON LOGREC FOR A SWAP .
*        WE WILL GO TO HANDLE THE SWAP FUNCTION.
*******************
ERR070   EQU   *
         TM    EWAFLG3,EWA3SWAP        IS SWAP  ON
         BO    ERR497                  BR IF ON
         TM    IOSFLC,FLCLOOP          IS LOOP ON
         BO    ERR496                  BR YES
         EJECT
*******************
*        IS IT COND CODE 3. IF YES, GO TO HANDLE THE SWAP.
*******************
         TM    IOSCC,IOSCC3            IS IT COND CODE 3
         BO    ERR440                  BR YES
         SPACE 1
********************
*        IS IT A INTERCEPT CONDITION. IF YES GO TO PERM ERR
********************
         CLI   IOSCOD,INTCOD7E         IS IT A INTERCEPT
         BNE   ERR072                  BR NO
         MVI   IOSCOD,INTCOD44         SET COMP CODE TO X'44'
         B     ERR412                  GO TO OBR -PERM ERR EXIT
         SPACE 1
*******************
*        WAS THE CSW ADDRESS ZERO. IF YES, GO TO PERMANENT ERROR.
*******************
ERR072   EQU   *
         LTR   CCWPTR,CCWPTR           IS CCW ADDR ZERO
         BM    ERR460                  BR YES
         SPACE 1
*******************
*        IF COMMAND CHAINING, DID THE CCW STRING BREAK IN A
*        DIFFERENT SPOT. IF YES, RESET THE ERROR COUNTERS AND SAVE
*        THE NEW CCW IN ERROR ADDRESS.
*******************
         C     CCWPTR,IOSVST           DID CMD CHAIN BREAK IN NEW SPOT
         BE    ERR075                  BR NO
         NI    EWAFLG3,X'FF'-EWA3CCH  CLR CCH CNTR
         MVI   EWACNTR2,ZERO           CLR ERR CNTR
         ST    CCWPTR,IOSVST           STORE NEW ADDR IN VIRT
         LRA   REG2,C0(CCWPTR)         GET REAL ADDR
         ST    REG2,IOSRST             STORE IN REAL
         SPACE 1
*******************
*        IS IT A COMMAND REJECT. IF YES, IS THE CCW OP CODE A X'FF'
*        FOR A OPERATOR SWAP. IF ITS A OPERATOR SWAP GO TO LOAD 7.
*        IF NOT, GO TO PERMANENT ERROR.
*******************
ERR075   EQU   *
         TM    EWOSNS0,EWOCREJ         IS IT COMND REJ
         BZ    ERR080                  BR NO
         CLI   C0(CCWPTR),OPERSWAP     IS OP CODE X'FF' OPER SWAP
         BE    ERR494                  BR YES
         B     ERR460                  BR NO
         SPACE 1
*******************
*        IS IT INTERVENTION REQUIRED AND FORMAT 1. IF YES, GO TO
*        PERMANENT ERROR.
*******************
ERR080   EQU   *
         TM    EWOSNS0,EWOINT          IS IT INT REQ
         BZ    ERR090                  BR NO
         TM    EWOSNS3,EWOFOR1         IS IT FORMAT 1
         BO    ERR470                  BR YES
         SPACE 1
*******************
*        IS IT A SENSE FAILURE. IF YES CALL THE EQ CHK A PERM ERR.
*******************
ERR090   EQU   *
         TM    EWOSNS0,EWOEQU          IS IT EQ CHK
         BZ    ERR100                  BR NO
         CLI   C0(CCWPTR),SNSOP        IS IT A SNS OP CODE
         BE    ERR460                  BR YES TO PERM ERR
         SPACE 1
*******************
*        IS IT EQUIPMENT CHECK AND PERMANENT ERROR. IF YES, GO
*        TO SWAP.
*******************
ERR100   EQU   *
         TM    EWOSNS0,EWOEQU+EWOPERR  IS IT EQ CHK AND PERM ERR
         BO    ERR430                  BR YES
         SPACE 1
*******************
*        IS IT HOST RETRY. IF YES RETRY THE OPERATION.
*******************
         TM    EWOSNS0,EWOHRET         IS IT HOST RETRY
         BO    ERR2000                 BR YES TO RETRY
         SPACE 1
*******************
*        IS IT A CCH (ICC/CCC) ERROR. IF YES, GO TO CCH CODE.
*******************
         TM    IOSTSB,ICC+CCC          IS IT CCH ERR
         BNZ   ERR300                  BR YES TO CCH CODE
         SPACE 1
*******************
*        IS IT INTERVENTION REQUIRED OR ENVIROMENTAL DATA. IF YES,
*        GO SEE IF IT IS A SUSPEND CONDITION.
*******************
ERR120   EQU   *
         TM    EWOSNS0,EWOINT+EWOENV   INT REQ OR ENV DATA
         BNZ   ERR200                  BR IF EITHER ON
         SPACE 1
*******************
*        IS IT EQUIPMENT CHECK OR BUS OUT. IF YES, GO ATTEMPT A
*        RETRY.
*******************
         TM    EWOSNS0,EWOEQU+EWOBUSO  EQ CHK OR BUS OUT
         BNZ   ERR400                  BR IF EITHER ON
         SPACE 1
*******************
*        IS IT CHANNEL DATA CHECK OR CHAINING CHECK. IF YES, GO
*        RETRY.
*******************
         TM    IOSTSB,CDC+CHN          CHAN DATA CK OR CHAIN CK
         BNZ   ERR400                  BR IF EITHER ON
         SPACE 1
*******************
*        IS IT PROGRAM CHECK, PROTECTION CHECK OR INCORRECT LENGTH.
*        IS YES, GO TO PERMANENT ERROR.
*******************
         TM    IOSTSB,PGM+PROT+ILI     PGM CK, PROT CK OR ILI
         BNZ   ERR460                  BR IF ANY BIT ON
         SPACE 1
*******************
*        NO ERRORS HAVE BEEN FOUND. IF UNIT CHK IS ON,
*        GO TO PERM ERROR.
*******************
         TM    IOSTSA,UNCK             IS UNIT CHK ON
         BO    ERR460                  BR YES TO PERM ERR
         SPACE 1
*******************
*        NO STATUS OR SENSE ERRORS HAVE BEEN FOUND. CALL THE
*        ERROR RECOVERED AND EXIT THE ERP.
*******************
ERR130   EQU   *
         MVI   EWAFLG3,ZERO           CLR ERP FLAGS
         MVI   EWACNTR2,ZERO           CLR ERP ERR CNTR
         NI    IOSFLA,X'FF'-IOSERR-IOSEX  SET ERR RECOVERED
         B     ERR2000                 BR TO EXIT
         EJECT
*******************
*        IS IT A SUSPEND CONDITION (DEV END + UNIT CHK ONLY).
*        IF NO, GO CHECK FURTHER. IF YES, BUILD THE SUSPEND CCW.
*        IF THE COMMAND WAS CHAINED, TIC TO THE NEXT USER CCW.
*        IF NO CHAINING CHAIN THE SUSPEND CCW TO A NOP.
*******************
ERR200   EQU   *
         CLI   IOSTSA,SUSPEND          IS IT A SUSPEND CONDITION
         BNE   ERR240                  BR NO
         OI    EWAFLG3,EWA3SUS+EWA3SAVE    SET SUSPEND BIT ON
         MVC   EWOCCW1(C16),CCWSUS     MOVE SUSPEND CCWS TO EWA
         MVC   UCBDEV+C4(C4),IOSVST    SAVE USER CCW ADR
         LA    REG2,EWOCCW1            GET VIRT ADR OF CCWS
         ST    REG2,IOSVST             PUT IN IOSB
         LRA   REG2,EWOCCW1            GET REAL CCW ADDR
         ST    REG2,IOSRST             SET IN IOSB START FIELD
         LRA   REG2,C8(CCWPTR)         GET ADR OF ERR CCW+8
         CLI   C8(CCWPTR),TIC          IS CCW+8 A TIC
         BNE   ERR220                  BR NO
         L     REG2,C8(CCWPTR)         GET THE TIC TO ADR
         LA    REG2,C0(REG2)           ZERO HI ORDER BYTE
ERR220   EQU   *
         ST    REG2,EWOCCW2            SET TIC TO ADR IN SUSPEND TIC
         MVI   EWOCCW2,TIC             SET TIC OP CODE BACK IN CCW
*        MORE DETAIL  ???????????
         TM    C4(CCWPTR),CMDCHN       IS ERR CCW CHAINED
         BO    ERR240                  BR YES
         MVI   EWOCCW2,NOP             SET 2ND CCW TO A NOP
         SPACE 1
*******************
*        IS IT INTERVENTION REQUIRED. IF YES, GO TO PRINT MSG
*        AND RETRY. IF NO, ITS ENVIROMENTAL DATA, GO RECORD
*        AND RETRY.
*******************
ERR240   EQU   *
         TM    EWOSNS0,EWOINT          IS IT INT REQ
         BO    ERR480                  BR YES
         B     ERR405                  BR NO
         EJECT
*******************
*        CCH CODE.
*        IS THIS THE SECOND TIME FOR THIS ERROR. IF YES, GO TO
*        PERMANENT ERROR.
*******************
ERR300   EQU   *
         TM    EWAFLG3,EWA3CCH        2ND TIME FOR THIS ERR
         BO    ERR380                  BR YES
         SPACE 1
*******************
*        WAS ERROR ON A TIO, HIO OR IS THE NO RETRY BIT ON IN ERPIB.
*        IF ANY, GO TO PERMANENT ERROR.
*******************
         TM    EWARGFG1,EWACTIO+EWACHIO+EWANORTY  ERR ON HIO,TIO OR?
         BNZ   ERR380                  BR IF ANY BITS ON
         SPACE 1
*******************
*        WAS THE ERROR ON A INTERRUPT OR A COND CODE 1. IF NEITHER
*        OR BOTH, GO TO PERMANENT ERROR.
*******************
         TM    EWARGFG1,EWACSIO+EWACINT  ERR ON SIO OR INTERRUPT
         BO    ERR380                  BR BOTH ON
         BZ    ERR380                  BR NEITHER ON
         SPACE 1
*******************
*        IS IT A COND CODE 1. IF YES, THE CCW CAN BE RESTARTED SO
*        BYPASS SOME ERROR TESTING.
*******************
         TM    IOSCC,IOSCC1            IS IT COND CODE 1
         BO    ERR330                  BR YES
         SPACE 1
*******************
*        ARE VALIDITY BITS ALL ON. IF ANY OFF, GO TO PERM ERROR.
*******************
         TM    EWAXCSW1,EWACSQV+EWACUNS+EWACCMD  SEQ, STATUS,CMD OK
         BNO   ERR380                  BR IF ANY OFF
         SPACE 1
*******************
*        ONLY TERM CODES OF 0 OR 1 ARE RETRIABLE. IF TERM CODE IS
*        2 OR 3 GO TO PERM ERROR.
*******************
*        SET UP RESTART STUFF  ????????????????
ERR330   EQU   *
         TM    EWAXCSW2,EWATER3        IS TERM CODE 3
         BO    ERR380                   BR YES
         TM    EWAXCSW2,EWATER2        IS TERM CODE 2
         BO    ERR380                  BR YES
         SPACE 1
*******************
*        ONLY  SEQ CODE OF 1,2 OR 3 ARE RETRIABLE. IF IT IS SEQ
*        CODE 0,4,5,6 OR 7 GO TO PERM ERROR.
*******************
         TM    EWAXCSW2,EWASEQ4        IS SEQ CODE 4,5,6,7
         BO    ERR380                  BR YES
         TM    EWAXCSW2,EWASEQ7        IS SEQ CODE 0
         BZ    ERR380                  BR YES
         SPACE 1
*******************
*        ZERO THE ERPIB, SET THE CCH COUNTER BIT ON AND GO TO
*        RETRY THE OPERATION.
*******************
ERR360   EQU   *
         XC    EWAERPIB(C8),EWAERPIB   ZERO ERPIB
         OI    EWAFLG3,EWA3CCH        SET CCH CNTR ON
         B     ERR2000                 BR
         SPACE 1
*******************
*        ZERO THE ERPIB AND GO TO PERM ERROR.
*******************
ERR380   EQU   *
         XC    EWAERPIB(C8),EWAERPIB   ZERO ERPIB
         B     ERR460                  BR
         EJECT
*******************
*        IS THE ERROR COUNTER = 5. IF NO, GO ATTEMPT A RETRY. IF YES,
*        SEE IF A SWAP IS REQUIRED.
*******************
ERR400   EQU   *
         CLI   EWACNTR2,FIVE           IS ERR EQUAL TO FIVE
         BE    ERR430                  BR YES
         SPACE 1
*******************
*        STEP THE ERROR COUNTER BY ONE.
*******************
         IC    REG2,EWACNTR2           GET ERR CNTR
         LA    REG2,C1(REG2)           STEP BY ONE
         STC   REG2,EWACNTR2           PUT BACK
         SPACE 1
*******************
*        IS IT EQ CHK OR ENVIROMENTAL DATA. IF NEITHER GO RETRY.
*        IF EITHER GO CHECK FOR CEM AND SUU.
*******************
ERR405   EQU   *
         TM    EWOSNS0,EWOEQU          IS IT EQ CHK
         BO    ERR407                  BR YES
         TM    EWOSNS0,EWOENV          IS IT ENVIROMENTAL DATA
         BZ    ERR2000                 BR NO TO EXIT SVC 15 RETRY
         SPACE 1
*******************
*        IS IT CEM AND/OR SUU. IF BOTH ERP WILL PRINT SUU AND WTO WILL
*        PRINT THE OTHER. IF ONLY ONE WTO WILL PRINT IT. THEN GO RETRY.
*******************
         TM    EWOSNS1,EWOCEM+EWOSUU   IS IT CE MSG AND SUU
         BZ    ERR412                  BR IF BOTH NOT ON TO RETRY
         BNO   ERR475                  BR ONE ON, GO TO WTO TO PRINT
         BAL   REG3,ERRSUU             GO PRT SUU MSG
         B     ERR475                  BR
         SPACE 1
*******************
*        IF NEITHER CEM AND/OR SUU GO TO RETRY. IF EITHER OR BOTH THE
*        ERP WILL PRINT THE MESSAGE(S). THEN GO RETRY.
*******************
ERR407   EQU   *
         TM    EWOSNS1,EWOCEM+EWOSUU   IS CE MSG OR SUU ON
         BZ    ERR2000                 BR IF NEITHER ON
         TM    EWOSNS1,EWOSUU          IS IT SUU MESSAGE
         BZ    ERR410                  BR NO
         BAL   REG3,ERRSUU             GO PRT SUU MSG
ERR410   EQU   *
         TM    EWOSNS1,EWOCEM          IS IT CEM MESSAGE
         BZ    ERR475                  GO TO WTO TO PRT EQ CK MSG
         BAL   REG3,ERRCEM             GO PRT CEM MSG
         B     ERR475                  GO TO WTO TO PRT EQ CK MSG
         SPACE 1
*******************
*        SET LOG ON AND EXIT TO OBR.
*******************
ERR412   EQU   *
         OI    IOSFLB,IOSLOG           SET LOG ON
         LA    REGD,OBRRTN             GET XCTL CODE FOR OBR
         B     ERR1000                 BR
         SPACE 1
*******************
*        IS IT EQUIPMENT CHECK OR BUS OUT. IF EITHER, SET UP TO
*        GO TO THE SWAP CODE. IF NEITHER  EXIT PERM ERROR.
*******************
ERR430   EQU   *
         TM    EWOSNS0,EWOEQU+EWOBUSO  EQ CHK OR BUS OUT
         BZ    ERR460                  BR IF NEITHER ON
         SPACE 1
*******************
*        SET MSG ON. IF CEM ON GO PRINT CEM MESSAGE.
*******************
         OI    IOSFLB,IOSMSG           SET MSG ON
         TM    EWOSNS1,EWOCEM          IS CE MSG ON
         BZ    ERR434                  BR NO
         BAL   REG3,ERRCEM             GO PRT CEM MSG
         SPACE 1
*******************
*        IF SUU ON GO PRINT SUU MESSAGE.
*******************
ERR434   EQU   *
         TM    EWOSNS1,EWOSUU          IS SUU ON
         BZ    ERR436                  BR NO
         BAL   REG3,ERRSUU             GO PRT SUU MSG
         SPACE 1
********************
*        IF IT IS EQ CHK AND PERM ERR BIT, WE ONLY WANT TO SWAP IF
*        IT IS FORMAT 1 OR FORMAT 2 IN BYTE 3 OF SENSE. OTHERWISE
*        CALL IT A PERM ERROR ONLY.
*******************
ERR436   EQU   *
         TM    EWOSNS0,EWOEQU+EWOPERR  IS IT EQ CK AND PERM ERR
         BNO   ERR440                  BR IF BOTH NOT ON
         TM    EWOSNS3,EWOFOR1+EWOFOR2 IS IT FORMAT 1 OR 2
         BZ    ERR470                  BR IF NEITHER TO PERM ERR
         SPACE 1
*******************
*        WE MUST SWAP SO WE WILL INSURE THAT THE MSG AND LOGGING
*        REQUIRED IS DONE BEFOR THE UCBS ARE SWAPPED.
*        SET SWAP LOOP ON, SET THE PERM BIT ON IN SENSE FOR EREP
*        AND EXIT.
*        WE WILL EXIT THRU OBR/WTO AND IOS WILL CALL US BACK BECAUSE
*        THE ERP IS STILL IN CONTROL. THE ERP WILL
*        LOOK FOR THE LOOP BIT ON WHEN IT IS CALLED AND GO
*        TO DO THE SWAP.
*******************
ERR440   EQU   *
         OI    IOSFLC,FLCLOOP          SET LOOP ON
         OI    EWOSNS0,EWOPERR         SET PERM ERR BIT ON IN SNS
         SPACE 3
         B     ERR480                  BR
         SPACE 1
*******************
*        SET MSG ON.
*******************
ERR460   EQU   *
         OI    IOSFLB,IOSMSG           SET MSG ON
         SPACE 1
*******************
*        SET ERP TO PERMANENT ERROR.
*******************
ERR470   EQU   *
         NI    IOSFLA,X'FF'-IOSERR SET ERR TO PERMANENT
         B     ERR480                  BR
         SPACE 1
*******************
*        SET MSG ON.
*******************
ERR475   EQU   *
         OI    IOSFLB,IOSMSG           SET MSG ON
         SPACE 1
*******************
*        SET LOG ON.
*******************
ERR480   EQU   *
         OI    IOSFLB,IOSLOG           SET LOG ON
         SPACE 1
*******************
*        SET UP XCTL FOR WTO ROUTINE.
*******************
ERR490   EQU   *
         LA    REGD,WTORTN             GET XCTL CODE FOR WTO
         B     ERR1000                 BR
         SPACE 1
*******************
*        SET OPERATOR SWAP ON.
*******************
ERR494   EQU   *
         OI    EWAFLG3,EWA3OPER       SET OPER SWAP ON
         B     ERR497                  BR ON
ERR496   EQU   *
         TM    IOSCC,IOSCC3            IS IT COND CODE 3
         BO    ERR497                  BR YES
         CLC   IOSTSA(C2),STATOK       IS CSW CHAN-DEV END ONLY
         BE    ERR130                  BR YES TO EXIT OK
ERR497   EQU   *
         B     ERR500                  BR TO SWAP CODE
*********************
         EJECT
*******************
*        SET UP PART OF CEM MESSAGE.
*******************
ERRCEM   EQU   *
         MVC   EWOMSG(C37),WTOMSG      MOVE MSG TO EWA
         MVC   EWOWTOB(C3),MSGFRU      MOVE FRU TO MSG
         B     MSG100                  BR
         SPACE 1
*******************
*        SET UP PART OF SUU MESSAGE.
*******************
ERRSUU   EQU   *
         MVC   EWOMSG(C37),WTOMSG      MOVE MSG TO EWA
         MVC   EWOWTOB(C3),MSGSUU      MOVE SUU TO MSG
         SPACE 1
*******************
*        COMPLETE THE ERROR MESSAGE. AND DO A WTO.
*******************
MSG100   EQU   *
         MVC   EWOWTOA(C3),UCBNAME     MOVE DEV ADR TO MSG
         LR    REG2,IOSBPTR            SAVE IOSB REG
         TIME  DEC
         LR    IOSBPTR,REG2            RESTORE REG 1
         ST    REG0,EWOWORK1           STORE TIME IN EWA
         OI    EWOWORK1+C3,OF          SET IN SIGN
         UNPK  EWOWORK1(C7),EWOWORK1(C4)  UNPACK TO PRTABLE HEX
         MVC   EWOWTOD(C2),EWOWORK1    MOVE IN HOUR
         MVC   EWOWTOF(C2),EWOWORK1+C2  MOVE MINS TO MSG
         MVC   EWOWTOG(C2),EWOWORK1+C4  MOVE SECS TO MSG
*        GET TIME AND PUT IN MSG
         LR    REG2,IOSBPTR            SAVE REG 1
         LA    IOSBPTR,EWOMSG          GET ADR OF MSG
         WTO   MF=(E,(1))
         LR    IOSBPTR,REG2            RESTORE REG 1
         BR    REG3                    RETURN TO CALLER
         EJECT
*        CONTROL UNIT SWAP CODE
*
ERR500   EQU   *
********************
*        SET SWAP LOOP FLAG OFF
********************
         NI    IOSFLC,X'FF'-FLCLOOP     SET SWAP LOOP FLAG OFF
         SPACE 1
********************
*        ARE WE ALREADY IN A CONTROL UNIT SWAP
*        BRANCH YES, TO SEE IF IT WAS COMPLETED OK.
********************
         TM    EWAFLG3,EWA3SWAP       ARE WE IN A SWAP NOW
         BO    ERR700                  BR YES , TEST FOR ERRS
         SPACE 1
********************
*        IS THE ALERNATE CONTROL UNIT 'GENED', 'ONLINE' AND 'READY'.
*        BRANCH IF NOT TO PRINT 'SWAP IMPOSSIBLE'.
********************
ERR520   EQU   *
         LTR   ALTUCB,ALTUCB           IS ALT UCB GENED
         BZ    ERR850                  BR NO
         TM    ALTSTAT(ALTUCB),UCBONLI  IS ALT UCB ONLINE
         BZ    ERR850                  BR NO TO PRT MSG
         TM    ALTFLA(ALTUCB),UCBNRY    IS ALT UCB READY
         BO    ERR850                  BR NO TO PRT MSG
         SPACE 1
********************
*        SET 'SWAP IN PROCESS' ON.
********************
         OI    EWAFLG3,EWA3SWAP SET SWAP IN PROCESS ON
         SPACE 1
********************
*        FIND THE ALTERNATE AND PRIMARY UCB SLOTS IN THE UCB LOOKUP
*        TABLE. SWAP THE CONTENTS OF THESE SLOTS.
********************
         L     REG2,CVTILK2            GET ADDR OF UCB LOOKUP TABLE
         LR    REGC,REG2                 IN REG 2 AND 12
         LR    REGD,PRIUCB             GET PRIMARY UCB ADDR
         AH    REGD,H512               ADD HEX 200 TO RESTORE UCB ADDR
         SPACE 1
********************
*        FIND UCB LOOKUP SLOT FOR ALTERNATE FIRST
*        IF CANT FIND BY END OF TABLE GO TO ERROR CODE
********************
ERR540   EQU   *
         CLM   ALTUCB,C3,C0(REG2)      'TO' UCB LOOKUP SLOT
         BE    ERR545                  BR YES TO CHECK 'FROM' UCB
         LA    REG2,C2(REG2)           STEP TO NEXT SLOT
         TM    C1(REG2),EOT            IS IT END OF TABLE
         BO    ERR850                  BR YES TO ERR CODE
         B     ERR540                  BR TO TEST NEXT SLOT
         SPACE 1
********************
*        FIND UCB LOOKUP SLOT FOR PRIMARY NOW
*        IF CANT FIND BY END OF TABLE GO TO ERROR CODE
********************
ERR545   EQU   *
         CLM   REGD,C3,C0(REGC)       'FROM' UCB LOOKUP SLOT
         BE    ERR550                  BR YES TO CK END
         LA    REGC,C2(REGC)           STEP TO NEXT SLOT
         TM    C1(REGC),EOT            IS IT END OF TABLE
         BO    ERR850                  BR YES TO ERR CODE
         B     ERR545                  BR TO TEST NEXT SLOT
         SPACE 1
********************
*        HAVE FOUND BOTH SLOTS. SWAP THEM IN THE TABLE.
********************
ERR550   EQU   *
         STH   REGD,C0(REG2)           STORE PRI IN ALT SLOT
         STH   ALTUCB,C0(REGC)         STORE ALT IN PRI SLOT
         SPACE 1
********************
*        SWAP THE FOLLOWING CONTENTS OF THE PRIMARY AND ALTERNATE UCBS.
*        'UCBNAME' (DEVICE ADDR IN BCD) AND 'UCBCHAN' (DEVICE ADDR IN
*        HEX).
********************
ERR555   EQU   *
         LH    REGC,UCBCHAN           GET HEX CUU OF PRIMARY
         LH    REGD,ALTCHAN(ALTUCB)  GET HEX CUU OF ALTERNATE
         STH   REGC,ALTCHAN(ALTUCB)  SWAP PRIMARY AND ALTERNATE
         STH   REGD,UCBCHAN            UCB HEX CUU ADDRS
         MVC   EWOWORK1(C3),UCBNAME    SAVE PRIMARY UCB BCD CUU
         MVC   UCBNAME(C3),ALTNAME(ALTUCB)  ALT BCD CUU TO
         MVC   ALTNAME(C3,ALTUCB),EWOWORK1
         NI    ALTSTAT(ALTUCB),X'FF'-UCBONLI  SET NEW ALT UCB OFFLINE
         SPACE 1
********************
*        PRINT MESSAGE;
*        'SWAP TO ZZZ STARTED,XXX OFFLINE'
*        XXX IS THE 'NEW' PRIMARY DEVICE
*        ZZZ IS THE 'NEW' ALTERNATE DEVICE.
********************
         MVC   EWOMSG(C47),WTOMSGD     MOVE MSG TO EWA
         MVC   EWOWTOC(C3),UCBNAME          MOVE PRI UCB CUU TO MSG
         MVC   EWOWTOH(C3),ALTNAME(ALTUCB)  MOVE ALT UCB CUU TO MSG
         LR    REG2,IOSBPTR            SAVE REG 1
         LA    IOSBPTR,EWOMSG          GET ADDR OF MSG
         WTO   MF=(E,(1))
         LR    IOSBPTR,REG2            RESTORE REG 1
         SPACE 1
********************
*        MOVE THE FOUR 'SWAP' CCWS TO THE EWA AND SET UP TO SIO TO
*        THEM. THE CCWS ARE CHAINED 'SWITCH', INITIALIZE', 'HOST
*        READY FOR MESSAGES' .
********************
ERR600   EQU   *
         OI    EWAFLG3,EWA3SAVE       SET CCW SAVE BIT ON
         MVC   UCBDEV+C4(C4),IOSVST    SAVE USER VIRT ADR
         MVC   EWOCCW1(C24),CCWSW      MOVE SWAP CCWS TO EWA
         MVC   EWOINIT(C4),INIT        MOVE INIT DATA TO EWA
         MVC   EWOHRM(C4),HRM          MOVE HRM DATA TO EWA
         LRA   REG2,EWOINIT            GET REAL ADDR OF INIT DATA
         ST    REG2,EWOCCW2            STORE ADDR IN CCW
         MVI   EWOCCW2,EXEC            RESTORE CCW OP CODE
         LRA   REG2,EWOHRM             GET REAL ADDR OF HRM DATA
         ST    REG2,EWOCCW3            STORE ADDR IN CCW
         MVI   EWOCCW3,EXEC            RESTORE CCW OP CODE
         LA    REG2,EWOCCW1            GET ADR OF 1ST SWAP CCW
         ST    REG2,IOSVST             STORE VIRT CCW ADR IN IOSB
         LRA   REG2,C0(REG2)           GET REAL ADR
         ST    REG2,IOSRST             STORE REAL CCW ADR IN IOSB
         SPACE 1
********************
*        DO A ERP SIO 'SVC 15' AND 'SVC 3'.
********************
ERR620   EQU   *
         B     ERR2000                 BR TO EXIT
         EJECT
********************
*        HAVE WE COMPLETED THE SWAP WITHOUT ERROR.
*        IS IT CONDITION CODE 3 OR UNIT CHECK.
*        BRANCH YES, TO HANDLE SWAP FAILURE.
********************
ERR700   EQU   *
         TM    IOSCC,IOSCC3            IS IT COND CODE 3
         BO    ERR785                   BR YES TO ERR CHECK
ERR720   EQU   *
         CLC   IOSTSA(C2),STATOK       IS CSW STATUS CHAN-DEV END
         BNE   ERR790                  BR NOT OK TO ERR CHK
         SPACE 1
********************
*        PRINT MESSAGE;
*        'SWAP TO ZZZ ENDED'
*        ZZZ IS THE 'NEW' PRIMARY DEVICE.
********************
         MVC   EWOMSG(C33),WTOMSGA     MOVE MSG TO EWA
         MVC   EWOWTOC(C3),UCBNAME  MOVE PRIMARY CUU TO MSG
         LR    REG2,IOSBPTR            SAVE REG 1
         LA    IOSBPTR,EWOMSG          GET ADDR OF MSG
         WTO   MF=(E,(1))
         LR    IOSBPTR,REG2            RESTORE REG 1
         SPACE 1
********************
*        WAS THIS A OPERATOR SWAP
*        BRANCH NO, TO REISSUE THE USER CCW(S).
********************
         TM    EWAFLG3,EWA3OPER       IS OPER SWAP ON
         BZ    ERR780                  BR NO
         SPACE 1
********************
*        SET RECOVERED ERROR INDICATION AND GO TO EXIT ERP.
********************
ERR750   EQU   *
         NI    IOSFLA,X'FF'-IOSERR-IOSEX  SET TO RECOVERED
         SPACE 1
********************
*        GO TO DO A SVC 15, SVC 3.
********************
ERR780   EQU   *
         MVI   EWACNTR2,C1            SET ERR CNTR TO 1
         NI    EWAFLG3,X'FF'-EWA3SWAP-EWA3OPER  ZERO FLAGS
         B     ERR2000                 BR TO EXIT
         EJECT
ERR785   EQU   *
         MVI   IOSCOD,COD41            SET COMPLETION CODE TO 41
         B     ERR795                  BR ON
         SPACE 1
*************************
*        SET MESSAGE BIT ON
*************************
ERR790   EQU   *
         OI    IOSFLB,IOSMSG           SET MSG ON
         SPACE 1
*************************
*        SET LOG BIT ON
*************************
ERR795   EQU   *
         OI    IOSFLB,IOSLOG           SET LOG ON
         SPACE 1
********************
*        PRINT MESSAGE;
*        'SWAP TO ZZZ FAILED, ZZZ OFFLINE'
*        ZZZ IS THE NEW PRIMARY DEVICE.
********************
ERR800   EQU   *
         MVC   EWOMSG(C47),WTOMSGC     MOVE MSG TO EWA
         MVC   EWOWTOC(C3),UCBNAME     MOVE DEV ADDR TO MSG
         MVC   EWOWTOH(C3),UCBNAME     MOVE DEV ADR TO MSG
         LR    REG2,IOSBPTR            SAVE REG 1
         LA    IOSBPTR,EWOMSG          GET ADDR OF MESSAGE
         WTO   MF=(E,(1))
         LR    IOSBPTR,REG2            RESTORE REG 1
*
         NI    IOSFLA,X'FF'-IOSERR     SET TO PERM ERR
         NI    UCBSTAT,X'FF'-UCBONLI   SET PRIMARY UCB OFFLINE
         LA    REGD,WTORTN             GET ADDR OF WTO RTN
         B     ERR1000                 GO XCTL TO WTO
         SPACE 1
*******************
*        THE ALTERNATE DEVICE IS 'NOT GENED', 'NOT ONLINE', 'NOT READY'
*        OR THE UCB LOOK UP SLOT COUND NOT BE FOUND.
*******************
ERR850   EQU   *
*******************
*        PRINT MESSAGE;
*        'XXX UNUSABLE, ZZZ NOT AVAIL'
*        IF THE ALTERNATE IS NOT GENED THE ZZZ WILL BE 'ALT'
*******************
         MVC   EWOMSG(C43),WTOMSGB     MOVE MSG TO EWA
         MVC   EWOWTOA(C3),UCBNAME     MOVE PRI ADR TO MSG
         MVC   EWOWTOB(C10),MSGUNU     SET IN MSG 'UNUSABLE, '
         TM    EWAFLG3,EWA3OPER        IS IT A OPER SWAP
         BZ    ERR860                  BR NO
         MVC   EWOWTOB(C10),MSGOPER    SET IN MSG 'OPER SWAP-'
ERR860   EQU   *
         MVC   EWOWTOE(C3),MSGALT      MOVE 'ALT' TO MSG
         LTR   ALTUCB,ALTUCB           IS ALT UCB AVALI
         BZ    ERR865                  BR IF NOT GENED
         MVC   EWOWTOE(C3),ALTNAME(ALTUCB)   MOVE IN ALT DEV ADDR
ERR865   EQU   *
         LR    REG2,IOSBPTR            SAVE REG 1
         LA    IOSBPTR,EWOMSG          GET ADDR OF MSG
         WTO   MF=(E,(1))
         LR    IOSBPTR,REG2            RESTORE REG 1
         SPACE 1
*******************
*        SET PRIMARY UCB 'OFFLINE'
*        SET 'PERMANENT ERROR' IN IOSB
*        SET 'MSG' AND 'LOG' ON AND EXIT TO WTO FOR A MESSAGE AND TO
*        RECORD ON LOGREC.
*******************
ERR870   EQU   *
         TM    EWAFLG3,EWA3OPER        IS IT OPER SWAP
         BO    ERR875                  BR YES
         NI    UCBSTAT,X'FF'-UCBONLI   SET PRI UCB OFFLINE
ERR875   EQU   *
         NI    IOSFLA,X'FF'-IOSERR     SET TO PERM ERR
         B     ERR2000                 BR NO TO SVC 15 EXIT
*
         EJECT
*******************
*        EXIT FROM ERP VIA XCTL.
*******************
ERR1000  EQU   *
         L     BALRREG,CVTXTLER        GET XCTL RTN ADDR
         BR    BALRREG                 XCTL TO NEXT RTN
         SPACE 4
*******************
*        EXIT SVC-15  SVC-3
*******************
ERR2000  EQU   *
         SVC   FIFTEEN
         SVC   THREE
         EJECT
         DS    0F
CCWSW    CCW   X'44',0,X'60',1
CCWINIT  CCW   X'87',INIT,X'60',4
CCWHRM   CCW   X'87',HRM,X'20',4
INIT     DC    X'1000C000'
HRM      DC    X'20000000'
*
CCWSUS   CCW   X'A3',0,X'60',1
CCWTIC   CCW   X'08',0,X'00',1
*
         DS    0F
H2       DC    H'2'
H8       DC    H'8'
H512     DC    H'512'
STATOK   DC    X'0C00'
*--------------------------------------------------------------------
         DS    0F
WTOMSGA  DS    0F
         DC    AL2(MSGENDA-MSGNOA)
         DC    X'8000'
MSGNOA   DC    C'IEA000I SWAP TO ZZZ ENDED'
         DC    X'10002040'
MSGENDA  EQU   *
*--------------------------------------------------------------------
*
WTOMSGB  DS    0F
         DC    AL2(MSGENDB-MSGNOB)
         DC    X'8000'
MSGNOB   DC    C'IEA000I XXX UNUSABLE, ZZZ NOT AVAIL'
         DC    X'10002040'
MSGENDB  EQU   *
*--------------------------------------------------------------------
*
WTOMSGC  DS    0F
         DC    AL2(MSGENDC-MSGNOC)
         DC    X'8000'
MSGNOC   DC    C'IEA000I SWAP TO ZZZ FAILED, ZZZ OFFLINE'
         DC    X'10002040'
MSGENDC  EQU   *
*--------------------------------------------------------------------
*
WTOMSGD  DS    0F
         DC    AL2(MSGENDD-MSGNOD)
         DC    X'8000'
MSGNOD   DC    C'IEA000I SWAP TO ZZZ STARTED,XXX OFFLINE'
         DC    X'10002040'
MSGENDD  EQU   *
*--------------------------------------------------------------------
*
WTOMSG   DS    0F
         DC    AL2(MSGEND-MSGNO)
         DC    X'8000'
MSGNO    DC    C'IEA000I '
MSGTXTA  DC    C'XXX ZZZ'
MSGTXTB  DC    C',,,,,,'
MSGTXTC  DC    C'XX.XX.XX'
ROUTE    DC    X'10002040'
MSGEND   EQU   *
*--------------------------------------------------------------------
MSGALT   DC    C'ALT '
MSGSUU   DC    C'SUU '
MSGFRU   DC    C'CEM '
MSGUNU   DC    C'UNUSABLE, '
MSGOPER  DC    C'OPER SWAP-'
ERPMAINT EQU   *
         DC    AL2(MAINTEND-ERPMAINT)
         ORG   ERR000+4080
         DC    C'IGE0000H //END//'
MAINTEND EQU   *
         EJECT
         IECDIOSB
         EJECT
         IECDERWA
         SPACE 3
*////////////////////////////////////////////////////////////////////
*
*////////////////////////////////////////////////////////////////////
         ORG   EWAIERP
EWOSNS   DS    XL32
         ORG   EWOSNS
EWOSNS0  DS    XL1
EWOCREJ  EQU   X'80'                   COMMAND REJECT
EWOINT   EQU   X'40'                   INTERVENTION REQUIRED
EWOBUSO  EQU   X'20'                   BUS OUT CHECK
EWOEQU   EQU   X'10'                   EQUIPMENT CHECK
EWO4     EQU   X'08'
EWOHRET  EQU   X'04'                   HOST RETRY
EWOPERR  EQU   X'02'                   PERMANENT ERROR
EWOENV   EQU   X'01'                   ENVIROMENTAL DATA
EWOSNS1  DS    XL1
EWOCEM   EQU   X'80'                   CE MESSAGE
EWOSUU   EQU   X'40'                   SUBSYSTEM UNIT UNUSABLE
EWOSNS2  DS    XL1
EWOSNS3  DS    XL1
EWOFOR1  EQU   X'40'                   FORMAT 1
EWOFOR2  EQU   X'20'                   FORMAT 2
EWOSNS4  DS    XL1
EWOSNS5  DS    XL1
EWOSNS6  DS    XL1
EWOSNS7  DS    XL1
EWOSNS8  DS    XL1
EWOSNS9  DS    XL1
EWOSNS10 DS    XL1
EWOSNS11 DS    XL1
EWOSNS12 DS    XL1
EWOSNS13 DS    XL1
EWOSNS14 DS    XL1
EWOSNS15 DS    XL1
EWOSNS16 DS    XL1
EWOSNS17 DS    XL1
EWOSNS18 DS    XL1
EWOSNS19 DS    XL1
EWOSNS20 DS    XL1
EWOSNS21 DS    XL1
EWOSNS22 DS    XL1
EWOSNS23 DS    XL1
EWOSNS24 DS    XL1
EWOSNS25 DS    XL1
EWOSNS26 DS    XL1
EWOSNS27 DS    XL1
EWOSNS28 DS    XL1
EWOSNS29 DS    XL1
EWOSNS30 DS    XL1
EWOSNS31 DS    XL1
*
EWOCCWS  DS    XL24
         ORG   EWOCCWS
EWOCCW1  DS    XL8
EWOCCW2  DS    XL8
EWOCCW3  DS    XL8
EWOWORK1 DS    XL4
EWOWORK2 DS    XL4
         ORG   EWOWORK1
EWOINIT  DS    XL4
EWOHRM   DS    XL4
EWOMSG   DS    XL47
         ORG   EWOMSG
EWOWTO   DS    XL12
EWOWTOA  DS    XL4
EWOWTOB  DS    XL4
EWOWTOC  DS    XL5
EWOWTOD  DS    XL1
EWOWTOE  DS    XL2
EWOWTOF  DS    XL3
EWOWTOG  DS    XL1
EWOWTOH  DS    XL11
EWOWTORT DS    XL4
*
EWOSPARE DS    XL17
EWOEND   EQU   *
         EJECT
         IEFUCBOB                      LIST=YES,PREFIX=YES
         EJECT
         CVT   DSECT=YES,LIST=NO
         EJECT
         IEZSSC
         END
