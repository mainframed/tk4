         TITLE 'BLSR3270--BLSR327H--CLOSED, INDEPENDENT SUBROUTINES'
*---------------------------------------------------------------------*
*                                                                     *
*BLSR327H--REDEFINE ALLOCATION OF WINDOWS A, B, C, AND D              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
*---------------------------------------------------------------------*
*        VALIDATE THE USERS REQUEST AS TO SIZES AND SUM               *
*---------------------------------------------------------------------*
         SPACE
BLSR327H OI    FLAG1,FLAG1LIN     DISPLAY RESULTING ALLOCATION
         SLR   RF,RF              CLEAR IT
         LA    R0,4               NUMBER OF AREAS WE LET HIM DEFINE
         SLR   R4,R4              CLEAR IT
         SLR   R5,R5              DITTO - INDEX CURRENT AREA DEF
         LA    RE,19              MAX NUMBER LINES HE CAN ALLOCATE
LH000200 IC    RF,NEWLINES(R5)    HOW MUCH DID HE ASK FOR HERE
         CR    RF,RE              MORE THAN WE HAVE TO GIVE?
         BNH   LH000300           NO
         STC   RE,NEWLINES(R5)    YES, FORCE REMAINDER HERE
         LR    RF,RE              FORCE REMAINDER TO ZERO
LH000300 SLR   RE,RF              DECREMENT NUMBER LINES AVAIL
         LA    R5,1(0,R5)         INCREMENT INDEX VALUE
         BCT   R0,LH000200        CHECK REST OF HIS REQUEST
         SPACE 2
*---------------------------------------------------------------------*
*        RE NOW HAS UNALLOCATED LINES COUNT, AND ALLOCATION IS VALID. *
*        SCHEDULE ANY REWRITES REQUIRED                               *
*---------------------------------------------------------------------*
         SPACE
         CLC   WKALINES(4),NEWLINES ANY CHANGES INDICATED?
         BER   R3                 SAME AS BEFORE
         MVC   WKALINES(4),NEWLINES DIFFERENT, UPDATE OLD VALUES
         SLR   R4,RF              BYTE VALUE INDEX OF UN-EQUAL ALLOC
         SLR   RF,RF              ASSUME NO NULL LINE ON ROW 6
         CH    RE,=H'3'           CAN WE PUT A NULL LINE AT POSIT 6?
         BNH   LH000400           NO
         LA    RF,1               INITIALIZE INDEX FOR FIRST AREA
         BCTR  RE,0               DECREMENT NUMBER OF NULL LINES
LH000400 ST    RF,WKALNCTV        INIT FIRST LINE CONTROL VECTOR
         LA    R0,3               NUMBER OF SLOTS LEFT IN LNCTV
         SLR   R1,R1              CLEAR SOME REGS - INDEX LNCTV
         SLR   R6,R6              INDEX LINES ALLOCATION
         SLR   R7,R7              NEXT AREA'S ALLOCATION
LH000500 IC    R7,NEWLINES(R6)    PICK UP NEXT ALLOCATION
         ALR   RF,R7              ADD TO PREVIOUS INDEX
         LTR   RE,RE              ANY NULLS LEFT TO INSERT?
         BZ    LH000600           NO
         BCTR  RE,0               YES, DECREMENT SPARE COUNT
         LA    RF,1(0,RF)         AND INCREMENT INDEX VALUE
LH000600 ST    RF,WKALNCTV+4(R1)  SET NEW INDEX
         LA    R1,4(0,R1)         INCREMENT WORD INDEX REGISTER
         LA    R6,1(0,R6)         INCREMENT BYTE INDEX REGISTER
         BCT   R0,LH000500        GO CHECK NEXT AREA, IF ANY
         SPACE 2
*---------------------------------------------------------------------*
*        LINE CONTROL INDEX UPDATED, NOW MARK CONTROL VECTOR. THE     *
*        SCREEN MUST BE RE-WRITTEN BELOW THE FIRST CHANGE IN ITS      *
*        ALLOCATION                                                   *
*---------------------------------------------------------------------*
         SPACE
         XC    NEWLNCTL(19),NEWLNCTL CLEAR CURRENT UPDATE CONTROL
         LA    R0,4               NUMBER OF AREAS
         LA    RF,1               BYTE INDEX VALUE, AND AREA NUMBER
         SLR   R1,R1              WORD INDEX FOR WKALNCTV
LH000700 L     R6,WKALNCTV(R1)    FETCH INDEX INTO LNCTL
         IC    RE,NEWLINES-1(RF)  NUMBER LINES THIS AREA
         LTR   RE,RE              ANY LINES THIS AREA?
         BZ    LH000900           NO
LH000800 STC   RF,NEWLNCTL(R6)    YES, MARK THE UPDATE CONTROL
         LA    R6,1(0,R6)         INDEX NEXT BYTE IN UPDATE CTL
         BCT   RE,LH000800        HIT ALL OF THEM
LH000900 LA    R1,4(0,R1)         UPDATE WORD INDEX
         LA    RF,1(RF)           UPDATE BYTE INDEX AND AREA ID
         BCT   R0,LH000700        DO ALL AREAS
         SPACE 2
*---------------------------------------------------------------------*
*        CONTROLS ALL SET, MARK AREAS TO BE RE-WRITTEN                *
*---------------------------------------------------------------------*
         SPACE
         LA    R6,WKALNCTL        POINT TO OLD VALUES
         LA    R4,NEWLNCTL        POINT TO NEW VALUES
         LA    R7,19              NUMBER OF BYTES TO CHECK
         LR    R5,R7              FIELDS HAVE EQUAL LENGTH
         LR    RF,R4              SAVE START ADDR
         CLCL  R6,R4              CHECK NEW AGAINST OLD
         SLR   R4,RF              OFFSET OF FIRST NEW AREA 0-18
         MVC   WKALNCTL(19),NEWLNCTL UPDATE THE VALUES BLSR327B USES
         SPACE 2
*---------------------------------------------------------------------*
*        HAVE THE RIGHT AREA TO UPDATE... IS THE OFFSET CORRECT?      *
*---------------------------------------------------------------------*
         SPACE
         IC    R7,0(R6)           SEE WHERE WE STOPPED
         SLA   R7,2               FORM WORD INDEX, TEST FOR NULL LINE
         BZ    LH001000           WE WILL INSERT A NULL HERE
         L     R7,WKALNCTV-4(R7)  PICK UP INDEX INTO LNCTL
         CR    R7,R4              STARTING POSITION SAME OR HIGHER?
         BNL   LH001000           YES
         LA    R6,WKALNCTL(R7)    NO, GET CORRECT RE-WRITE START
         LR    R4,R7              AND CORRECT OFFSET FROM LNCTL
LH001000 LA    RE,18              MAX EXECUTE LENGTH
         SLR   RE,R4              EX LENGTH TO USE
         EX    RE,IG000300        MARK ALL AFTER THIS ONE
         BR    R3                 GO BACK THE RIGHT WAY
