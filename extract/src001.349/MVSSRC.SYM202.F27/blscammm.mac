         MACRO
&N       BLSCAMMM &NXT,&ID,&T,&AMS,&OPEN=(,(INPUT,DISP)),              *
               &DDNAME=,                                               *
               &DSN=,&VOL=,&UNIT=,                                     *
               &SPACE=,&LABEL=,&SSREQ=,&PASSW=,&PERMA=,&CNVRT=,        *
               &DISP=(SHR,KEEP,KEEP),                                  *
               &DYRB=AL,                                               *
               &RTDATA=(RTDDN,RTDSN,RTVOL,RTORG),                      *
               &SYSOUT=
.** START OF SPECIFICATIONS *******************************************
.*
.*  MACRO NAME= BLSCAMMM
.*
.*  DESCRIPTIVE NAME= IPCS DAS ALLOCATION MODEL GENERATOR MACRO
.*
.*  COPYRIGHT= NONE
.*
.*  STATUS= SU57 RELEASE 1, LEVEL 0
.*
.*  FUNCTION= GENERATE ALLOCATION AND ACCESS CONTROL BLOCK MODELS FOR
.*            IPCS DAS DATA SETS. EACH MODEL CONSISTS OF THE FOLLOWING:
.*              MODEL COMPONENT ADDRESS LIST
.*              DATA SET ACCESS CONTROL BLOCK MODELS
.*                OPEN/CLOSE PARAMETER LIST MODEL
.*                VSAM ACB AND RPL MODELS
.*                OR
.*                QSAM DCB MODEL
.*              DYNAMIC ALLOCATION PARAMETER LIST MODELS
.*                DYNAMIC ALLOCATION REQUEST BLOCK MODEL
.*                TEXT UNIT POINTER LIST MODEL
.*                TEXT UNIT MODELS
.*              FOR NEW VSAM DATA SETS, THE ACCESS METHOD SERVICES
.*              COMMAND TEXT (SYSIN) STREAM MODEL
.*
.*  NOTES= NONE
.*
.*  MODULE TYPE= DATA AREA GENERATION MACRO
.*
.*     PROCESSOR= ASSEMBLER F
.*
.*     ATTRIBUTES= REENTRABLE (READ ONLY DATA)
.*
.*  INVOCATION SYNTAX=
.*
.*   LOCSYMB BLSCAMMM NEXTLOC,MODEL,TYPE,AMS
.*
.*                    [×,ALLOCATION MODEL KEYWORDS×
.*
.*
.*           LOCSYMB
.*             1 TO 3 BYTE LOCATION SYMBOL NAME TO PERMIT THE
.*             CONSTRUCTION OF A SINGLE THREADED LIST OF MODELS WITHIN
.*             THE BLSCAMOD MODULE.
.*
.*           NEXTLOC
.*             1 TO 3 BYTE LOCATION SYMBOL OF THE MODEL THAT IS CHAINED
.*             AS THE SUCCESSOR OF THIS MODEL. FOR THE LAST MODEL IN
.*             THE CHAIN, THIS PARAMETER IS 0.
.*
.*           MODEL
.*             1 TO 8 BYTE ALLOCATION MODEL NAME. THIS PARAMETER IS
.*             PLACED INTO AN 8 BYTE FIELD LEFT JUSTIFIED AND PADDED
.*             WITH BLANKS. THIS NAME IS SEARCHED UPON BY THE
.*             ALLOCATION FUNCTION AND THE CONTENTS OF THE MODEL ARE
.*             MOVED INTO GETMAINED SPACE TO INITIALIZE THE DATA SET
.*             CONTROL BLOCKS.
.*
.*           TYPE
.*             THE TYPE PARAMETER CONTROLS THE RESERVATION OF SPACE FOR
.*             THE VSAM ACB AND RPL OR THE QSAM DCB. VALID VALUES ARE:
.*               V (DEFAULT) CAUSES THE GENERATION OF
.*                           A 76 BYTE FIELD LABELED ACBNN AND
.*                           A 76 BYTE FIELD LABELED RPLNN. NN IS THE
.*                           1 TO 3 BYTE LOCSYMB FOR THIS MODEL.
.*                           IT IS ASSUMED THAT THE USER WILL CODE AN
.*                           AN ACB MACRO ORIGINED AT ACBNN AND AN RPL
.*                           MACRO ORIGINED AT RPLNN FOR A VSAM
.*                           DATA SET.
.*
.*               (V,LRECL)   CAUSES THE GENERATION OF THE ACB AND RPL
.*                           AS STATED FOR THE 'V' ENTRY. IN ADDITION,
.*                           IT INITIALIZES A FIELD IN THE MODEL
.*                           COMPONENT LIST WITH THE VALUE OF THE
.*                           LRECL SUB PARAMETER. LRECL MUST BE
.*                           A SELF DEFINING NUMERIC VALUE.
.*
.*               Q           CAUSES THE GENERATION A 96 BYTE FIELD
.*                           LABELED DCBNN. NN IS THE 1 TO 3 BYTE
.*                           LOCSYMB FOR THIS MODEL. IT IS ASSUMED THAT
.*                           THE USER WILL CODE A DCB MACRO ORIGINED
.*                           AT DCBNN FOR A QSAM DATA SET.
.*
.*           AMS
.*             VALID PARAMETER VALUE IS 'AMS'.
.*             THE AMS PARAMETER CAUSES THE GENERATION OF AN ENTRY
.*             IN THE MODEL COMPONENT LIST THAT CONTAINS THE NAME
.*             AMSNN. NN IS THE 1 TO 3 BYTE LOCSYMB FOR THIS MODEL.
.*             IT IS ASSUMED THAT THE USER WILL CODE AN AMS SYSIN TEXT
.*             LIST NAMED AMSNN. THE FORMAT OF THE AMS SYSIN TEXT LIST
.*             IS SPECIFIED IN THE BLSCAMIN MODULE PROLOG.
.*
.*           ALLOCATION MODEL KEYWORD PARAMETERS:
.*             FOR FURTHER INFORMATION REGARDING THE USE OF THE
.*             KEYWORDS THAT FOLLOW (EXECEPT OPEN) SEE OS/VS2 SYSTEM
.*             PROGRAMMING LIBRARY: JOB MANAGEMENT GC28-0627, DYNAMIC
.*             ALLOCATION.
.*
.*             OPEN=(OPEN MACRO LIST POSITIONAL PARAMETER LIST)
.*                  DEFAULT: OPEN=(,(INPUT,DISP))
.*                  SEE OS/VS2 MVS DATA MANAGEMENT MACRO INSTRUCTIONS
.*                  GC26-3878 FOR INFORMATION ABOUT OPEN SUB-
.*                  PARAMETERS.
.*
.*             DYRB=( VERB ×,FLAGS1× ×,FLAGS2× )
.*                         ×,      ×
.*
.*                  VERB (REQUIRED PARAMETER)
.*                   ONLY VALID VALUE: AL
.*
.*                  FLAGS1 (OPTIONAL PARAMETER)
.*                   ONE OR MORE OF THE FOLLOWING VALUES:
.*                    (ONCVN,NOCVN,NOMNT,JBSYS)
.*
.*                  FLAGS2 (OPTIONAL PARAMETER)
.*                   ONE OR MORE OF THE FOLLOWING VALUES:
.*                    (WTVOL,WTDSN,NORES,WTUNT,OFFLN,TIONQ,CATLG,
.*                     MOUNT,UDEVT,PCINT)
.*
.*                  DEFAULT: DYRB=AL
.*
.*             RTDATA=(DATA RETURN VALUES)
.*                    ONE OR MORE OF THE FOLLOWING VALUES:
.*                      (RTDDN,RTDSN,RTVOL,RTORG)
.*                    DEFAULT: RTDATA=(RTDDN,RTDSN,RTVOL,RTORG)
.*
.*             DDNAME=FILE NAME
.*
.*             DSN='DATA SET NAME'
.*
.*             VOL=VOLUME SERIAL
.*
.*             UNIT=UNIT NAME
.*
.*                     × TRK          ×
.*             SPACE=( × CYL          × ,
.*                     × BLOCK LENGTH ×
.*
.*                     (PRIMARY QUANTITY ×,SECONDARY QUANTITY×)
.*
.*                     ×,RLSE × ×,CONTIG × ×,ROUND ×)
.*                     ×,     × ×,       ×
.*
.*             DISP=(×NEW × ×,DELETE × ×,DELETE ×)
.*                   ×OLD × ×,KEEP   × ×,KEEP   ×
.*                   ×SHR × ×,CATLG  × ×,CATLG  ×
.*                   ×MOD × ×,UNCATLG× ×,UNCATLG×
.*                   ×,   × ×,       ×
.*
.*                  DEFAULT: DISP=(SHR,KEEP,KEEP)
.*
.*             LABEL=( ×DATA SET SEQUENCE NUMBER× ×,SL ×
.*                                                ×,NL ×
.*                                                ×,BLP×
.*                                                ×,LTM×
.*                                                ×,   ×
.*
.*                     ×,PASSWORD× ×,RETPD×)
.*                     ×,NOPWREAD×
.*
.*             PASSW=PASSWORD
.*
.*             SSREQ= SUB-SYSTEM NAME
.*
.*             PERMA=PERMA
.*
.*             CNVRT=CNVRT
.*
.*             SYSOUT=( ×SYSOUT CLASS× ×,PROGRAM NAME× )
.*
.*  OUTPUT= SPACE IS ALLOCATED AND INITIALIZED FOR A DATA SET MODEL.
.*
.*  EXIT NORMAL=  N/A
.*
.*  EXIT ERROR= N/A
.*
.*  EXTERNAL REFERENCES= SEE BELOW
.*
.*     ROUTINES= NONE
.*
.*     DATA AREAS=  NONE
.*
.*     CONTROL BLOCKS=  ACB
.*                      DCB
.*                      RPL
.*                      AMS SYSIN TEXT LIST
.*
.*  TABLES=  NONE
.*
.*  MACROS=  OPEN  MVS SYSTEM MACRO (LIST FORM)
.*           BLSCAMM1  COUNT PARAMETER SUBLIST ENTRIES
.*           BLSCAMM2  OBTAIN PARAMETER SUBLIST ENTRY CHARACTER STRING
.*
.*  CHANGE ACTIVITY=
.*         THIS MODULE IS WRITTEN FOR @G57LPSR
.*
.*  MESSAGES ISSUED=
.*     MACRO COMPILE TIME MESSAGES (MNOTE MESSAGES)
.*     8,VALUE '&TT' INVALID FOR DATA SET TYPE CODE. MUST BE 'V'
.*       OR 'Q'. THE ACB/DCB AND RPL ADDRESSES ARE SET TO ZERO.
.*     8,VALUE '&AMS' INVALID FOR AMS REQUEST PARAMETER. ADDRESS OF
.*       AMS SYSIN TEXT IS SET TO ZERO.
.*     8,'&VERB' IS AN INVALID DYRB VERB. DYRB VERB CODE IS SET TO
.*        ZERO.
.*     8,INVALID FLAGSX LIST. NO FLAGSX BITS ARE SET.
.*     8,'VALUE' IS AN INVALID VALUE FOR 'DYRB(Y,Z)'. NO FLAGSX BIT IS
.*       SET.
.*     8,'VALUE' IS AN INVALID VALUE FOR 'PARMNAME(FIELD)'. NO TEXT
.*       UNIT IS BUILT.
.*     8,'DSN' KEY OPERAND MUST BE ENCLOSED IN QUOTES. NO 'DSN' TEXT
.*       UNIT IS BUILT.
.*     8,'KEYNAME1' KEY IS REQUIRED WITH 'KEYNAME2' KEY. NO 'KEYNAME2'
.*       TEXT UNIT IS BUILT.
.*     8,'PARMNAME' IS A REQUIRED PARAMETER. NO TEXT UNIT IS BUILT.
.*     8,INVALID PRIMARY SPACE QUANTITY. NO TEXT UNIT IS BUILT.
.*     8,INVALID SECONDARY SPACE QUANTITY. NO TEXT UNIT IS BUILT.
.*
.*  DATA SETS ACCESSED= NONE
.*
.** END OF SPECIFICATIONS *********************************************
         GBLA  &BLSCAGA            SUBLIST PARAMETER COUNT OR NUMBER
         GBLC  &BLSCAGC            SUBLIST CHARACTER STRING
         LCLA  &CTR                LOOP COUNTER
         LCLA  &A                  ARITHMETIC TEMPORARY
         LCLC  &C                  CHARACTER TEMPORARY
.*   SET UP DEFAULTS FOR DATA SET TYPE
         LCLC  &TT
&TT      SETC  '&T(1)'             PICK UP DATA SET TYPE CODE
         AIF   ('&TT' NE '').TSET  TEST FOR NULL
&TT      SETC  'V'                 SET DEFAULT TO VSAM
.TSET    ANOP
&C       SETC  '0'                 DEFLT VSAM ESDS PSEUDO REL REC LRECL
         AIF   (N'&T LT 2 OR '&TT' NE 'V').TSET1   TEST FOR NULL
&C       SETC  '&T(2)'             SET VSAM ESDS PSEUDO REL REC LRECL
.TSET1   ANOP
.* BEGIN MODEL CODE GENERATION
         DS    0D
&N       DC    A(&NXT)             ADDRESS OF NEXT MODEL
         DC    A(0)                RESERVED
         DC    CL8'&ID'            MODEL NAME
         AIF   ('&TT' EQ 'V').ACB     TEST FOR VSAM DATA SET
         AIF   ('&TT' EQ 'Q').DCB     TEST FOR QSAM (NON-VSAM) DATA SET
         MNOTE 8,'VALUE ''&TT'' INVALID FOR DATA SET TYPE CODE. MUST BE*
               ''V'' OR ''Q''. THE ACB/DCB AND RPL ADDRESSES ARE SET TO*
                ZERO.'
         DC    2A(0)               DUMMY ACB/DCB AND RPL ADDRESSES
         AGO   .JOIN1
.ACB     ANOP
         DC    A(ACB&N)            ADDRESS OF ACB CONTROL BLOCK
         DC    A(RPL&N)            ADDRESS OF RPL CONTROL BLOCK
         AGO   .JOIN1
.DCB     ANOP
         DC    A(DCB&N)            ADDRESS OF DCB CONTROL BLOCK
         DC    A(0)                UNUSED FOR QSAM
.JOIN1   ANOP
         DC    A(OPCL&N)           ADDRESS OF OPEN/CLOSE LIST
         DC    A(DYRB&N)           ADDRESS OF DYNALLOC REQUEST BLOCK
         AIF   ('&AMS' EQ 'AMS').AMS TEST FOR AMS REQUESTED
         AIF   ('&AMS' EQ '').AMSNUL TEST FOR AMS NOT REQUESTED
         MNOTE 8,'VALUE ''&AMS'' INVALID FOR AMS REQUEST PARAMETER. ADD*
               RESS OF AMS SYSIN TEXT IS SET TO ZERO.'
.AMSNUL  ANOP
         DC    A(0)                NO AMS SYSIN TEXT SUPPLIED
         AGO   .JOIN2
.AMS     DC    A(AMS&N)            ADDRESS OF AMS SYSIN TEXT
.JOIN2   ANOP
         DC    F'&C'               VSAM ESDS PSEUDO RELATIVE REC LRECL
         AIF   ('&TT' EQ 'V').ACB1    TEST FOR VSAM DATA SET
         AIF   ('&TT' EQ 'Q').DCB1    TEST FOR QSAM DATA SET
         AGO   .JOIN3
.ACB1    ANOP
         DS    0F
ACB&N    DC    XL76'0'             RESERVE SPACE FOR ACB
RPL&N    DC    XL76'0'             RESERVE SPACE FOR RPL
         AGO   .JOIN3
.DCB1    ANOP
         DS    0F
DCB&N    DC    XL96'0'             RESERVE SPACE FOR DCB
.JOIN3   ANOP
*   OPEN/CLOSE LIST
         DS    4A(0)               RESERVE SPACE FOR OPEN/CLOSE LIST
         ORG   *-16                RESET TO LIST ORIGIN
OPCL&N   OPEN  &OPEN,MF=L          OPEN/CLOSE LIST MODEL
         ORG   ,                   RESTORE LOC COUNTER
.*   DYNAMIC ALLOCATION REQUEST BLOCK
.*   BUILD THE DYRB VERB FIELD
         LCLC  &VERB               TEMP FOR VERB CODE
.AL      AIF   ('&DYRB(1)' NE 'AL').VBT TEST FOR DSNAME ALLOCATE VERB
&VERB    SETC  '1'
         AGO   .VBT                BRANCH AROUND REST OF VERBS
.* THESE VERBS DISABLED BECAUSE TEXT UNITS FOR THEM NOT BUILT
.UN      AIF   ('&DYRB(1)' NE 'UN').CC TEST FOR UNALLOCATE VERB
&VERB    SETC  '2'
.CC      AIF   ('&DYRB(1)' NE 'CC').DC TEST FOR CONCATENATE VERB
&VERB    SETC  '3'
.DC      AIF   ('&DYRB(1)' NE 'DC').RI TEST FOR DECONCATENATE VERB
&VERB    SETC  '4'
.RI      AIF   ('&DYRB(1)' NE 'RI').DN TEST FOR REMOVE IN-USE ATTR VERB
&VERB    SETC  '5'
.DN      AIF   ('&DYRB(1)' NE 'DN').IN TEST FOR DDANME ALLOCATE VERB
&VERB    SETC  '6'
.IN      AIF   ('&DYRB(1)' NE 'IN').VBT TEST FOR RETRIEVE INFORMATION
&VERB    SETC  '7'
.VBT     AIF   ('&VERB' NE '').VBOK TEST FOR VALID VERB
&VERB    SETC  '0'                 INVALID VERB CODE
         MNOTE 8,'''&VERB'' IS AN INVALID DYRB VERB. DYRB VERB CODE IS *
               SET TO ZERO.'
.VBOK    ANOP
.*   BUILD THE DYRB FLAGS1 FIELD
         LCLB  &F(16)              FLAGS1 BIT MAP
         LCLC  &FLAGS1             FLAGS1 TEMP
         BLSCAMM1 &DYRB(2)         COUNT FLAGS1 ENTRIES INTO &BLSCAGA
         AIF   (&BLSCAGA GE 0).FL1A TEST FOR VALID FIELD
         MNOTE 8,'INVALID FLAGS1 LIST, NO FLAGS1 BITS ARE SET'
.FL1A    ANOP
&CTR     SETA  &BLSCAGA            COUNT OF FLAGS TO BE SET
         AGO   .TEST1
.* LOOP TO EXAMINE ALL FLAGS1 PARAMETERS SUPPLIED
.LOOP1   ANOP
         BLSCAMM2 &DYRB(2),&CTR   EXTRACT PARM SUBLIST CHAR STRING
.*                                INTO &BLSCAGA
&C       SETC  '&BLSCAGC'         MAKE LOCAL COPY OF SUB-PARAMETER
         AIF   ('&C' EQ 'ONCVN' OR '&C' EQ 'NOCVN' OR '&C' EQ 'NOMNT'  *
               OR '&C' EQ 'JBSYS').OK1  TEST FOR VALID SUB-FIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DYRB(2,&CTR)''.  NO *
               FLAGS1 BIT IS SET.'
         AGO   .CNT1
.OK1     ANOP
         AIF   ('&C' NE 'ONCVN').F1 TEST NOT CONVERIBLE ALLOC
&F(1)    SETB  1                   EXISTING ALLOC MUST HAVE CONVERTIBLE
.*                                 ATTRIBUTE TO BE USED FOR THIS REQUST
.F1     AIF   ('&C' NE 'NOCVN').F2 TEST NOT NO EXISTING ALLOC
&F(2)    SETB  1                   DON'T USE EXISTING ALLOC FOR REQUEST
.F2     AIF   ('&C' NE 'NOMNT').F3 TEST NOT NO MOUNT OR OFFLINE DEVS
&F(3)    SETB  1                   DO NOT MOUNT VOLS OR OFFLINE DEVICES
.F3     AIF   ('&C' NE 'JBSYS').CNT1 TEST NOT DATA LIKE SYSOUT
&F(4)    SETB  1                   TREAT THIS DATA SET LIKE SYSOUT
.CNT1    ANOP
&CTR     SETA  &CTR-1              DECREMENT SUB-FIELD COUNTER
.TEST1   AIF   (&CTR GT 0).LOOP1
.* LOOP END, NOW GENERATE FLAGS1 FIELD
&FLAGS1  SETC  '&F(1)&F(2)&F(3)&F(4)&F(5)&F(6)&F(7)&F(8).00000000'
.*   BUILD THE DYRB FLAGS2 FIELD
         LCLB  &G(32)              FLAGS2 BIT MAP
         LCLC  &FLAGS2             FLAGS2 TEMP
         BLSCAMM1 &DYRB(3)         COUNT FLAGS2 ENTRIES INTO &BLSCAGA
         AIF   (&BLSCAGA GE 0).FL2A TEST FOR VALID FIELD
         MNOTE 8,'INVALID FLAGS2 LIST, NO FLAGS2 BITS ARE SET'
.FL2A    ANOP
&CTR     SETA  &BLSCAGA            COUNT OF FLAGS TO BE SET
         AGO   .TEST2
.* LOOP TO EXAMINE ALL FLAGS2 PARAMETERS SUPPLIED
.LOOP2   ANOP
         BLSCAMM2 &DYRB(3),&CTR    EXTRACT PARM SUBLIST CHAR STRING
.*                                 INTO &BLSCAGA
&C       SETC  '&BLSCAGC'          MAKE LOCAL COPY OF SUB-PARAMETER
         AIF   ('&C' EQ 'WTVOL' OR '&C' EQ 'WTDSN' OR '&C' EQ 'NORES'  *
               OR '&C' EQ 'WTUNT' OR '&C' EQ 'OFFLN' OR '&C' EQ        *
               'TIONQ').OK2 TEST FOR VALID SUB-FIELD
         AIF   ('&C' EQ 'CATLG' OR '&C' EQ 'MOUNT' OR '&C' EQ 'UDEVT'  *
               OR '&C' EQ 'PCINT').OK2  TEST FOR VALID SUB-FIELD
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DYRB(3,&CTR)''.  NO *
               FLAGS2 BIT IS SET.'
         AGO   .CNT2
.OK2     ANOP
         AIF   ('&C' NE 'WTVOL').G2 TEST NOT WAIT FOR VOLUMES
&G(1)    SETB  1                   WAIT FOR VOLUMES
.G2      AIF   ('&C' NE 'WTDSN').G3 TEST NOT WAIT FOR DSNAME
&G(2)    SETB  1                   WAIT FOR DSNAME
.G3      AIF   ('&C' NE 'NORES').G4 TEST NOT DON'T RESERVE DATA SETS
&G(3)    SETB  1                   DO NOT RESERVE DATA SETS
.G4      AIF   ('&C' NE 'WTUNT').G5 TEST NOT WAIT FOR UNITS
&G(4)    SETB  1                   WAIT FOR UNITS
.G5      AIF   ('&C' NE 'OFFLN').G6 TEST NOT CONSIDER OFFLINE DEVICES
&G(5)    SETB  1                   CONSIDER OFFLINE DEVICES
.G6      AIF   ('&C' NE 'TIONQ').G7 TEST NOT TIOT ENQUED
&G(6)    SETB  1                   TIOT ENQ ALREADY PERFORMED
.G7      AIF   ('&C' NE 'CATLG').G8 TEST NOT SET CATALOG INDS
&G(7)    SETB  1                   SET SPECIAL CATALOG DATA SET INDS
.G8      AIF   ('&C' NE 'MOUNT').G9 TEST NOT VOLUMES MAY BE MOUNTED
&G(8)    SETB  1                   VOLUMES MAY BE MOUNTED
.G9      AIF   ('&C' NE 'UDEVT').G10 TEST NOT UNITPARM IS DEVTYPE
&G(9)    SETB  1                   UNITNAME PARAMETER IS A DEVICE TYPE
.G10     AIF   ('&C' NE 'PCINT').CNT2 TEST NOT ALLOC PRIVATE CATALOG
&G(10)   SETB  1                   ALLOCATE A PRIVATE CATALOG FOR INIT
.CNT2    ANOP
&CTR     SETA  &CTR-1              DECREMENT SUB-FIELD COUNTER
.TEST2   AIF   (&CTR GT 0).LOOP2
.* LOOP END, NOW GENERATE FLAGS2 FIELD
&FLAGS2  SETC  '&G(1)&G(2)&G(3)&G(4)&G(5)&G(6)&G(7)&G(8)&G(9)&G(10)&G(1*
               1)&G(12)&G(13)&G(14)&G(15)&G(16).0000000000000000'
.*   BUILD TEXT UNIT POINTERS
         LCLA  &NTUDEF             NUMBER OF TEXT UNITS DEFINED
&NTUDEF  SETA  29                  INITIALIZE
         LCLB  &P(29)              TEXT UNIT PARAMETER BIT MAP
         LCLC  &TPA(29)            TEXT UNIT ADDRESS MODELS
.* INITIALIZE TEXT UNIT POINTER ADDRESS MODELS
&TPA(1)  SETC  'RTDDN'
&TPA(2)  SETC  'RTDSN'
&TPA(3)  SETC  'RTVOL'
&TPA(4)  SETC  'RTORG'
&TPA(5)  SETC  'DDNAM'
&TPA(6)  SETC  'DSNAM'
&TPA(7)  SETC  'VLSER'
&TPA(8)  SETC  'UNIT'
&TPA(9)  SETC  'SSREQ'
&TPA(10) SETC  'PASSW'
&TPA(11) SETC  'PERMA'
&TPA(12) SETC  'CNVRT'
&TPA(13) SETC  'STATS'
&TPA(14) SETC  'NDISP'
&TPA(15) SETC  'CDISP'
&TPA(16) SETC  'TRK'
&TPA(17) SETC  'CYL'
&TPA(18) SETC  'BLKLN'
&TPA(19) SETC  'PRIME'
&TPA(20) SETC  'SECND'
&TPA(21) SETC  'RLSE'
&TPA(22) SETC  'SPFRM'
&TPA(23) SETC  'ROUND'
&TPA(24) SETC  'DSSEQ'
&TPA(25) SETC  'LABEL'
&TPA(26) SETC  'PASPR'
&TPA(27) SETC  'RETPD'
&TPA(28) SETC  'SYSOC'
&TPA(29) SETC  'SYSOP'
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE RTDATA KEYWORD
&CTR     SETA  N'&RTDATA           COUNT OF SUBFIELDS
         AGO   .TEST3
.* LOOP TO EXAMINE ALL RTDATA PARAMETERS SUPPLIED
.LOOP3   ANOP
&C       SETC  '&RTDATA(&CTR)'     MAKE LOCAL COPY OF SUB-PARAMETER
         AIF   ('&C' EQ 'RTDDN' OR '&C' EQ 'RTDSN' OR '&C' EQ 'RTVOL'  *
               OR '&C' EQ 'RTORG').OK3  TEST FOR VALID SUB-FIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''RTDATA(&CTR)''.  NO *
               TEXT UNIT IS BUILT'
         AGO   .CNT3
.OK3     ANOP
         AIF   ('&C' NE 'RTDDN').P2 TEST NOT RETURN DDNAME
&P(1)    SETB  1                   RETURN ASSOCIATED DDNAME
.P2      AIF   ('&C' NE 'RTDSN').P3 TEST NOT RETURN DSNAME
&P(2)    SETB  1                   RETURN ALLOCATED DATA SET NAME
.P3      AIF   ('&C' NE 'RTVOL').P4 TEST NOT RETURN VOLSER
&P(3)    SETB  1                   RETURN VOLUME SERIAL
.P4      AIF   ('&C' NE 'RTORG').CNT3 TEST NOT RETURN DSORG
&P(4)    SETB  1                   RETURN THE DATA SET ORGANIZATION
.CNT3    ANOP
&CTR     SETA  &CTR-1              DECREMENT SUB-FIELD COUNTER
.TEST3   AIF   (&CTR GT 0).LOOP3
.*    LOOP END
.*   DO SET UP FOR THE DDNAME KEYWORD
&P(5)    SETB  ('&DDNAME' NE '')   DDNAME KEYWORD PRESENT
.*   DO SET UP FOR THE DSN KEYWORD
         AIF   ('&DSN' EQ '').END6 DSN KEY NOT PRESENT
&C       SETC  '&DSN'(1,1)         FIRST BYTE OF DS NAME
         AIF   ('&C' EQ '''').OK6  SHOULD BE SINGLE QUOTE
         MNOTE 8,'''DSN'' KEY OPERAND MUST BE ENCLOSED IN SINGLE QUOTES*
               . NO ''DSN'' TEXT UNIT IS BUILT'
         AGO   .END6
.OK6     ANOP
&P(6)    SETB  1                   DSN KEYWORD PRESENT
.END6    ANOP
.*   DO SET UP FOR THE VOL KEYWORD
&P(7)    SETB  ('&VOL' NE '')      VOL KEYWORD PRESENT
.*   DO SET UP FOR THE UNIT KEYWORD
&P(8)    SETB  ('&UNIT' NE '')     UNIT KEYWORD PRESENT
.*   DO SET UP FOR THE SSREQ KEYWORD
&P(9)    SETB  ('&SSREQ' NE '')    SSREQ KEYWORD PRESENT
.*   DO SET UP FOR THE PASSWORD KEYWORD
         AIF   ('&PASSW' EQ '').END10 PASSW KEY NOT PRESENT
         AIF   ('&DSN' NE '').OK10 DSN KEY MUST BE ALSO PRESENT
         MNOTE 8,'''DSN'' KEY IS REQUIRED WITH ''PASSW'' KEY. NO ''PASS*
               WORD'' TEXT UNIT IS BUILT'
         AGO   .END10
.OK10    ANOP
&P(10)   SETB  1                   PASSW KEYWORD PRESENT
.END10   ANOP
.*   DO SET UP FOR THE PERMA KEYWORD
         AIF   ('&PERMA' EQ '').END11 PERMA KEY NOT PRESENT
         AIF   ('&CNVRT' EQ '').OK11 CNVRT KEY MUST NOT BE PRESENT
         MNOTE 8,'''CNVRT'' KEY IS INVALID WITH ''PERMA'' KEY. NO ''PER*
               MA'' TEXT UNIT IS BUILT'
         AGO   .END11
.OK11    ANOP
&P(11)   SETB  1                   PERMA KEYWORD PRESENT
.END11   ANOP
&P(12)   SETB  ('&CNVRT' NE '')    CNVRT KEYWORD PRESENT
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE DISP KEYWORD
         LCLA  &STATS,&NDISP,&CDISP
&CTR     SETA  N'&DISP             COUNT OF SUBFIELDS
         AIF   (&CTR EQ 0).END15   TEST IF DISP KEYWORD NOT SPECIFIED
.*   DISP KEY IS MUTUALLY EXCLUSIVE WITH SYSOUT KEY
         AIF   ('&SYSOUT' EQ '').P13AA SYSOUT KEY MUST NOT BE PRESENT
         MNOTE 8,'''SYSOUT'' KEY IS INVALID WITH ''DISP'' KEY. NO ''DIS*
               P'' TEXT UNITS ARE BUILT'
         AGO   .END15
.P13AA   ANOP
.*    EXAMINE THE STATUS SUB-FIELD
&C       SETC  '&DISP(1)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END13  TEST STATUS=NULL
.P13A    AIF   ('&C' NE 'OLD').P13B TEST NOT STATUS=OLD
&STATS   SETA  1                   STATUS=OLD
.P13B    AIF   ('&C' NE 'MOD').P13C TEST NOT STATUS=MOD
&STATS   SETA  2                   STATUS=MOD
.P13C    AIF   ('&C' NE 'NEW').P13D TEST NOT STATUS=NEW
&STATS   SETA  4                   STATUS=NEW
.P13D    AIF   ('&C' NE 'SHR').P13E TEST NOT STATUS=SHR
&STATS   SETA  8                   STATUS=SHR
.P13E    AIF   (&STATS NE 0).OK13  TEST FOR VALID SUBFIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DISP(1)''.  NO TEXT *
               UNIT IS BUILT'
         AGO   .END13
.OK13    ANOP
&P(13)   SETB  1                   STATUS SUB-FIELD PRESENT
.END13   ANOP
.*   EXAMINE THE NORMAL DISPOSITION SUB-FIELD
         AIF   (&CTR LT 2).END15   TEST IF NORMAL DISP NOT SPECIFIED
&C       SETC  '&DISP(2)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END14  TEST NORMAL DISP=NULL
.P14A    AIF   ('&C' NE 'UNCATLG').P14B TEST NOT NORMAL DISP=UNCATLG
&NDISP   SETA  1                   NORMAL DISP=UNCATLG
.P14B    AIF   ('&C' NE 'CATLG').P14C TEST NOT NORMAL DISP=CATLG
&NDISP   SETA  2                   NORMAL DISP=CATLG
.P14C    AIF   ('&C' NE 'DELETE').P14D TEST NOT NORMAL DISP=DELETE
&NDISP   SETA  4                   NORMAL DISP=DELETE
.P14D    AIF   ('&C' NE 'KEEP').P14E TEST NOT NORMAL DISP=KEEP
&NDISP   SETA  8                   NORMAL DISP=KEEP
.P14E    AIF   (&NDISP NE 0).OK14  TEST FOR VALID SUBFIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DISP(2)''.  NO TEXT *
               UNIT IS BUILT'
         AGO   .END14
.OK14    ANOP
&P(14)   SETB  1                   NORMAL DISP SUB-FIELD PRESENT
.END14   ANOP
.*   EXAMINE THE CONDITIONAL DISPOSITION SUB-FIELD
         AIF   (&CTR LT 3).END15   TEST IF CONDITION DISP NOT SPECIFIED
&C       SETC  '&DISP(3)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END15  TEST CONDITIONAL DISP=NULL
.P15A    AIF   ('&C' NE 'UNCATLG').P15B TEST NOT CONDITION DISP=UNCATLG
&CDISP   SETA  1                   CONDITIONAL DISP=UNCATLG
.P15B    AIF   ('&C' NE 'CATLG').P15C TEST NOT CONDITIONAL DISP=CATLG
&CDISP   SETA  2                   CONDITIONAL DISP=CATLG
.P15C    AIF   ('&C' NE 'DELETE').P15D TEST NOT CONDITIONAL DISP=DELETE
&CDISP   SETA  4                   CONDITIONAL DISP=DELETE
.P15D    AIF   ('&C' NE 'KEEP').P15E TEST NOT CONDITIONAL DISP=KEEP
&CDISP   SETA  8                   CONDITIONAL DISP=KEEP
.P15E    AIF   (&CDISP NE 0).OK15  TEST FOR VALID SUBFIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''DISP(3)''.  NO TEXT *
               UNIT IS BUILT'
         AGO   .END15
.OK15    ANOP
&P(15)   SETB  1                   CONDITIONAL DISP SUB-FIELD PRESENT
.END15   ANOP
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE SPACE KEYWORD
&CTR     SETA  N'&SPACE             COUNT OF SUBFIELDS
         AIF   (&CTR EQ 0).END23   TEST IF SPACE KEYWORD NOT SPECIFIED
.*    EXAMINE THE TYPE SUB-FIELD
&C       SETC  '&SPACE(1)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' NE '').P16    TEST NOT TYPE=NULL
         MNOTE 8,'SPACE(1) IS A REQUIRED PARAMETER. NO TEXT UNIT IS BUI*
               LT'
         AGO   .END18
.P16     AIF   ('&C' NE 'TRK').P17 TEST NOT TYPE=TRK
&P(16)   SETB  1                   TYPE=TRK
         AGO   .END18
.P17     AIF   ('&C' NE 'CYL').P18 TEST NOT TYPE=CYL
&P(17)   SETB  1                   TYPE=CYL
         AGO   .END18
.P18     ANOP
&P(18)   SETB  1                   TYPE=BLKLEN
.END18   ANOP
.*    EXAMINE THE PRIMARY SPACE QUANTITY SUB-FIELD
         BLSCAMM2 &SPACE(2),1      EXTRACT THE PRIMARY SPACE QUANTITY
.*                                 RETCODE IS IN &BLSCAGA, FIELD IS IN
.*                                 &BLSCAGC
         AIF   (&BLSCAGA GE 0).P19A TEST FOR VALID FIELD EXTRACT
         MNOTE 8,'INVALID PRIMARY SPACE QUANTITY. NO TEXT UNIT IS BUILT*
               '
         AGO   .END19
.P19A    ANOP
         AIF   ('&BLSCAGC' NE '').P19 PRIMARY SPACE QUANTITY NOT NULL
         MNOTE 8,'SPACE(2,1) IS A REQUIRED PARAMETER. NO TEXT UNIT IS B*
               UILT'
         AGO   .END19
.P19     ANOP
&P(19)   SETB  1                   PRIMARY SPACE QUANTITY PRESENT
.END19   ANOP
.*    EXAMINE THE SECONDARY SPACE QUANTITY SUB-FIELD
         BLSCAMM2 &SPACE(2),2      EXTRACT THE SECONDARY SPACE QUANTITY
.*                                 RETCODE IS IN &BLSCAGA, FIELD IS IN
.*                                 &BLSCAGC
         AIF   (&BLSCAGA GE 0).P20A TEST FOR VALID FIELD EXTRACT
         MNOTE 8,'INVALID SECONDARY SPACE QUANTITY. NO TEXT UNIT IS BUI*
               LT'
         AGO   .END20
.P20A    ANOP
         AIF   ('&BLSCAGC' EQ '').END20 NULL SECONDARY SPACE QUANTITY
&P(20)   SETB  1                   SECONDARY SPACE QUANTITY PRESENT
.END20   ANOP
.*    EXAMINE THE UNUSED SPACE RELEASE SUB-FIELD
&C       SETC  '&SPACE(3)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END21  TEST FIELD=NULL
         AIF   ('&C' EQ 'RLSE').P21 TEST FOR UNUSED SPACE RELEASE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SPACE(3)''. NO TEXT *
               UNIT IS BUILT'
         AGO   .END21
.P21     ANOP
&P(21)   SETB  1                   UNUSED SPACE RELEASE FIELD PRESENT
.END21   ANOP
.*    EXAMINE THE FORMAT OF ALLOCATED SPACE SUB-FIELD
&C       SETC  '&SPACE(4)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END22  TEST FIELD=NULL
         AIF   ('&C' EQ 'CONTIG').P22 TEST FOR FORMAT OF ALLOC SPACE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SPACE(4)''. NO TEXT *
               UNIT IS BUILT'
         AGO   .END22
.P22     ANOP
&P(22)   SETB  1                   FORMAT OF ALLOC SPACE FIELD PRESENT
.END22   ANOP
.*    EXAMINE THE WHOLE CYLINDER ALLOCATION SUB-FIELD
&C       SETC  '&SPACE(5)'          MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END23  TEST FIELD=NULL
         AIF   ('&C' EQ 'ROUND').P23 TEST FOR WHOLE CYLINDER ALLOC
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SPACE(5)''. NO TEXT *
               UNIT IS BUILT'
         AGO   .END23
.P23     ANOP
&P(23)   SETB  1                   WHOLE CYLINDER ALLOC FIELD PRESENT
.END23   ANOP
.*   BUILD THE TEXT UNIT PARAMETER BIT MAP FOR THE LABEL KEYWORD
         LCLA  &LABELTY,&PASPR
&CTR     SETA  N'&LABEL            COUNT OF SUBFIELDS
         AIF   (&CTR EQ 0).END27   TEST IF LABEL KEYWORD NOT SPECIFIED
.*   LABEL KEY IS MUTUALLY EXCLUSIVE WITH SYSOUT KEY
         AIF   ('&SYSOUT' EQ '').P24AA SYSOUT KEY MUST NOT BE PRESENT
         MNOTE 8,'''SYSOUT'' KEY IS INVALID WITH ''LABEL'' KEY. NO ''LA*
               BEL'' TEXT UNITS ARE BUILT'
         AGO   .END27
.P24AA   ANOP
.*    EXAMINE THE DATA SET SEQUENCE NUMBER SUB-FIELD
         AIF   ('&LABEL(1)' EQ '').END24  NULL DATA SET SEQUENCE NUMBER
&P(24)   SETB  1                   DATA SET SEQUENCE NUMBER PRESENT
.END24   ANOP
.*   EXAMINE THE LABEL TYPE SUB-FIELD
         AIF   (&CTR LT 2).END27   IF NO MORE SUB-FIELDS
&C       SETC  '&LABEL(2)'         MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END25  TEST LABEL TYPE=NULL
.P25A    AIF   ('&C' NE 'NL').P25B TEST NOT LABEL TYPE=NL
&LABELTY SETA  1                   LABEL TYPE=NL
.P25B    AIF   ('&C' NE 'SL').P25C TEST NOT LABEL TYPE=SL
&LABELTY SETA  2                   LABEL TYPE=SL
.P25C    AIF   ('&C' NE 'BLP').P25D TEST NOT LABEL TYPE=BLP
&LABELTY SETA  10                  LABEL TYPE=BLP
.P25D    AIF   ('&C' NE 'LTM').P25E TEST NOT LABEL TYPE=LTM
&LABELTY SETA  21                  LABEL TYPE=LTM
.P25E    AIF   (&LABELTY NE 0).OK25  TEST FOR VALID SUBFIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''LABEL(2)''.  NO TEXT*
                UNIT IS BUILT'
         AGO   .END25
.OK25    ANOP
&P(25)   SETB  1                   LABEL TYPE SUB-FIELD PRESENT
.END25   ANOP
.*   EXAMINE THE PASSWORD PROTECTION SUB-FIELD
         AIF   (&CTR LT 3).END27   IF NO MORE SUB-FIELDS
&C       SETC  '&LABEL(3)'         MAKE LOCAL COPY OF SUB-FIELD
         AIF   ('&C' EQ '').END26  TEST PASSWORD PROTECTION=NULL
         AIF   ('&C' NE 'PASSWORD').P26B  NOT PASSWORD PROT=PASSWORD
&PASPR   SETA  10                  PASSWORD PROTECTION=PASSWORD
.P26B    AIF   ('&C' NE 'NOPWREAD').P26C  NOT PASSWORD PROT=NOPWREAD
&PASPR   SETA  30                  PASSWORD PROTECTION=NOPWREAD
.P26C    AIF   (&PASPR NE 0).OK26  TEST FOR VALID SUBFIELD VALUE
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''LABEL(3)''.  NO TEXT*
                UNIT IS BUILT'
         AGO   .END26
.OK26    ANOP
&P(26)   SETB  1                   PASSWORD PROTECT SUB-FIELD PRESENT
.END26   ANOP
.*   DATA SET RETENTION PERIOD SUB-FIELD
&P(27)   SETB  (&CTR EQ 4)         RETENTION PERIOD SUB-FIELD PRESENT
.END27   ANOP
.*   HANDLE SYSOUT KEYWORD
&CTR     SETA  N'&SYSOUT           COUNT OF SUBFIELDS
         AIF   (&CTR EQ 0).END29   SYSOUT KEYWORD NOT PRESENT
.*  EXAMINE THE SYSOUT CLASS SUB-FIELD
&A       SETA  K'&SYSOUT(1)        LENGTH OF THE SYSOUT CLASS PARM
         AIF   (&A EQ 1).OK28      SYSOUT CLASS MUST BE ONE BYTE
&C       SETC  '&SYSOUT(1)'
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SYSOUT(1)''. NO TEXT*
                UNIT IS BUILT'
         AGO   .END28
.OK28    ANOP
&P(28)   SETB  1                   SYSOUT CLASS PRESENT
.END28   ANOP
.*  EXAMINE THE SYSOUT PROGRAM NAME SUB-FIELD
         AIF   (&CTR LT 2).END29   NO PROGRAM NAME SUB-FIELD
&A       SETA  K'&SYSOUT(2)        LENGTH OF THE SYSOUT PROGRAM NAME
         AIF   (&A GT 0 AND &A LE 8).OK29  NAME MUST BE 1 TO 8 BYTES
&C       SETC  '&SYSOUT(2)'
         MNOTE 8,'''&C'' IS AN INVALID VALUE FOR ''SYSOUT(2)''. NO TEXT*
                UNIT IS BUILT'
         AGO   .END29
.OK29    ANOP
&P(29)   SETB  1                   SYSOUT PROGRAM NAME PRESENT
.END29   ANOP
.* COUNT TEXT UNIT PARAMETERS PRESENT
         LCLA  &TUCT               TEXT UNIT PARAMETERS PRESENT
&CTR     SETA  0                   INIT LOOP COUNTER
         AGO   .CNT4
.LOOP4   ANOP
         AIF   (NOT &P(&CTR)).CNT4 TEST FOR TEXT UNIT PRESENT
&TUCT    SETA  &TUCT+1             TEXT UNIT IS PRESENT
.CNT4    ANOP
&CTR     SETA  &CTR+1              BUMP LOOP COUNTER
         AIF   (&CTR LE &NTUDEF).LOOP4  TEST LOOP END
*   DYNAMIC ALLOCATION REQUEST BLOCK
         DS    0F
DYRB&N   DC    HL1'20'             DYRB LENGTH FIELD
         DC    HL1'&VERB'          DYRB VERB CODE
         DC    BL2'&FLAGS1'        FLAGS1 FIELD
         DC    2XL2'0'             ERROR AND INFORMATIONAL REASON CODES
         AIF   (&TUCT EQ 0).TPP1   TEST FOR TEXT UNITS PRESENT
         DC    A(DYTP&N)           ADDRESS OF TEXT UNIT POINTERS
         AGO   .TPP2
.TPP1    DC    A(0)                NO TEXT UNITS PRESENT
.TPP2    ANOP
         DC    A(0)                RESERVED
         DC    BL4'&FLAGS2'        FLAGS2 FIELD
*   TEXT UNIT POINTERS
         AIF   (&TUCT EQ 0).DONE   TEST FOR NO TEXT UNITS PRESENT
DYTP&N   DC    0F'0'               ALIGN LIST TO FULL WORD
.*   BUILD TEXT UNIT POINTER ENTRIES
         LCLA  &TUCTA              TEXT UNIT COUNTER
&CTR     SETA  0                   INIT LOOP COUNTER
&TUCTA   SETA  1                   INIT TEXT UNIT COUNTER
         AGO   .CNT5
.LOOP5   ANOP
         AIF   (NOT &P(&CTR)).CNT5 TEST FOR TEXT UNIT PRESENT
         AIF   (&TUCTA EQ &TUCT).LAST5  TEST FOR LAST TEXT UNIT
         DC    A(&TPA(&CTR)&N)     TEXT UNIT ADDRESS
&TUCTA   SETA  &TUCTA+1            TEXT UNIT COUNTER
         AGO   .CNT5
.LAST5   ANOP
         DC    X'80',AL3(&TPA(&CTR)&N)  LAST TEXT UNIT ADDRESS
         AGO   .END5
.CNT5    ANOP
&CTR     SETA  &CTR+1              BUMP LOOP COUNTER
         AIF   (&CTR LE &NTUDEF).LOOP5  TEST LOOP END
.END5    ANOP
.*   BUILD TEXT UNITS
*   TEXT UNITS
.* RETURN DDNAME TEXT UNIT
         AIF   (NOT &P(1)).NOT1    TEST NOT RETURN DDNAME
         DS    0H                  ALIGN TEXT UNIT
&TPA(1)&N DC   XL2'55',H'1',H'8',CL8' ' RETURN DDNAME TEXT UNIT
.NOT1    ANOP
.* RETURN DSNAME TEXT UNIT
         AIF   (NOT &P(2)).NOT2    TEST NOT RETURN DSNAME
         DS    0H                  ALIGN TEXT UNIT
&TPA(2)&N DC   XL2'56',H'1',H'44',CL44' ' RETURN DSNAME TEXT UNIT
.NOT2    ANOP
.* RETURN VOLUME SERIAL TEXT UNIT
         AIF   (NOT &P(3)).NOT3    TEST NOT RETURN VOLUME SERIAL
         DS    0H                  ALIGN TEXT UNIT
&TPA(3)&N DC   XL2'5D',H'1',H'6',CL6' ' RETURN VOLUME SERIAL TEXT UNIT
.NOT3    ANOP
.* RETURN DSORG TEXT UNIT
         AIF   (NOT &P(4)).NOT4    TEST NOT RETURN DSORG
         DS    0H                  ALIGN TEXT UNIT
&TPA(4)&N DC   XL2'57',H'1',H'2',CL2' ' RETURN DSORG TEXT UNIT
.NOT4    ANOP
.* DDNAME TEXT UNIT
         AIF   (NOT &P(5)).NOT5    TEST NOT DDNAME
&A       SETA  K'&DDNAME
         DS    0H                  ALIGN TEXT UNIT
&TPA(5)&N DC   XL2'01',H'1',H'&A',CL&A'&DDNAME' DDNAME TEXT UNIT
.NOT5    ANOP
.* DSNAME TEXT UNIT
         AIF   (NOT &P(6)).NOT6    TEST NOT DSNAME
&A       SETA  K'&DSN-2
         DS    0H                  ALIGN TEXT UNIT
&TPA(6)&N DC   XL2'02',H'1',H'&A',CL&A&DSN DSNAME TEXT UNIT
.NOT6    ANOP
.* VOLUME SERIAL TEXT UNIT
         AIF   (NOT &P(7)).NOT7    TEST NOT VOLUME SERIAL
&A       SETA  K'&VOL
         DS    0H                  ALIGN TEXT UNIT
&TPA(7)&N DC   XL2'10',H'1',H'&A',CL&A'&VOL' VOLUME SERIAL TEXT UNIT
.NOT7    ANOP
.* UNIT TEXT UNIT
         AIF   (NOT &P(8)).NOT8    TEST NOT UNIT
&A       SETA  K'&UNIT
         DS    0H                  ALIGN TEXT UNIT
&TPA(8)&N DC   XL2'15',H'1',H'&A',CL&A'&UNIT' UNIT TEXT UNIT
.NOT8    ANOP
.* SSREQ TEXT UNIT
         AIF   (NOT &P(9)).NOT9    TEST NOT SSREQ
&A       SETA  K'&SSREQ
         DS    0H                  ALIGN TEXT UNIT
&TPA(9)&N DC   XL2'5C',H'1',H'&A',CL&A'&SSREQ' SUB-SYSTEM REQ TEXT UNIT
.NOT9    ANOP
.* PASSWORD TEXT UNIT
         AIF   (NOT &P(10)).NOT10  TEST NOT PASSWORD
&A       SETA  K'&PASSW
         DS    0H                  ALIGN TEXT UNIT
&TPA(10)&N DC  XL2'50',H'1',H'&A',CL&A'&PASSW' PASSWORD TEXT UNIT
.NOT10   ANOP
.* PERMANENTLY ALLOCATED ATTRIBUTE TEXT UNIT
         AIF   (NOT &P(11)).NOT11  TEST NOT PERMANENTLY ALLOCATED ATTRI
         DS    0H                  ALIGN TEXT UNIT
&TPA(11)&N DC  XL2'52',H'0'        PERM ALLOCATED ATTRIBUTE TEXT UNIT
.NOT11   ANOP
.* CONVERTIBLE ATTRIBUTE TEXT UNIT
         AIF   (NOT &P(12)).NOT12  TEST NOT CONVERTIBLE ATTRIBUTE
         DS    0H                  ALIGN TEXT UNIT
&TPA(12)&N DC  XL2'53',H'0'        CONVERTIBLE ATTRIBUTE TEXT UNIT
.NOT12   ANOP
.* DATA SET STATUS TEXT UNIT
         AIF   (NOT &P(13)).NOT13  TEST NOT DATA SET STATUS
         DS    0H                  ALIGN TEXT UNIT
&TPA(13)&N DC  XL2'04',H'1',H'1',XL1'&STATS' DATA SET STATUS TEXT UNIT
.NOT13   ANOP
.* DATA SET NORMAL DISP TEXT UNIT
         AIF   (NOT &P(14)).NOT14  TEST NOT DATA SET NORMAL DISP
         DS    0H                  ALIGN TEXT UNIT
&TPA(14)&N DC  XL2'05',H'1',H'1',XL1'&NDISP' DSET NORM DISP TEXT UNIT
.NOT14   ANOP
.* DATA SET CONDITIONAL DISP TEXT UNIT
         AIF   (NOT &P(15)).NOT15  TEST NOT DATA SET CONDITIONAL DISP
         DS    0H                  ALIGN TEXT UNIT
&TPA(15)&N DC  XL2'06',H'1',H'1',XL1'&CDISP' DSET COND DISP TEXT UNIT
.NOT15   ANOP
.* SPACE ALLOCATED BY TRACKS ATTRIBUTE TEXT UNIT
         AIF   (NOT &P(16)).NOT16  TEST NOT SPACE ALLOCATED BY TRACKS
         DS    0H                  ALIGN TEXT UNIT
&TPA(16)&N DC  XL2'07',H'0'        SPACE ALLOCATED BY TRACKS TEXT UNIT
.NOT16   ANOP
.* SPACE ALLOC BY CYLS TEXT UNIT
         AIF   (NOT &P(17)).NOT17  TEST NOT SPACE ALLOC BY CYLS
         DS    0H                  ALIGN TEXT UNIT
&TPA(17)&N DC  XL2'08',H'0'        SPACE ALLOC BY CYLS TEXT UNIT
.NOT17   ANOP
.* BLOCK SPACE TEXT UNIT
         AIF   (NOT &P(18)).NOT18  TEST NOT BLOCK SPACE
         DS    0H                  ALIGN TEXT UNIT
&TPA(18)&N DC  XL2'09',H'1',H'3',FL3'&SPACE(1)' BLOCK SPACE TEXT UNIT
.NOT18   ANOP
.* PRIME SPACE TEXT UNIT
         AIF   (NOT &P(19)).NOT19  TEST NOT PRIME SPACE
         DS    0H                  ALIGN TEXT UNIT
         BLSCAMM2 &SPACE(2),1      EXTRACT PRIMARY SPACE QUANTITY
&TPA(19)&N DC  XL2'0A',H'1',H'3',FL3'&BLSCAGC' PRIME SPACE TEXT UNIT
.NOT19   ANOP
.* SECONDARY SPACE TEXT UNIT
         AIF   (NOT &P(20)).NOT20  TEST NOT SECONDARY SPACE
         DS    0H                  ALIGN TEXT UNIT
         BLSCAMM2 &SPACE(2),2      EXTRACT SECONDARY SPACE QUANTITY
&TPA(20)&N DC  XL2'0B',H'1',H'3',FL3'&BLSCAGC' SECDY SPACE TEXT UNIT
.NOT20   ANOP
.* SPACE RELEASE TEXT UNIT
         AIF   (NOT &P(21)).NOT21  TEST NOT SPACE RELEASE
         DS    0H                  ALIGN TEXT UNIT
&TPA(21)&N DC  XL2'0D',H'0'        SPACE RELEASE TEXT UNIT
.NOT21   ANOP
.* ALLOC CONTIG SPACE TEXT UNIT
         AIF   (NOT &P(22)).NOT22  TEST NOT ALLOC CONTIG SPACE
         DS    0H                  ALIGN TEXT UNIT
&TPA(22)&N DC  XL2'0E',H'1',H'1',XL1'08' ALLOC CONTIG SPACE TEXT UNIT
.NOT22   ANOP
.* SPACE ROUND TO CYLS TEXT UNIT
         AIF   (NOT &P(23)).NOT23  TEST NOT SPACE ROUND TO CYLS
         DS    0H                  ALIGN TEXT UNIT
&TPA(23)&N DC  XL2'0F',H'0'        SPACE ROUND TO CYLS TEXT UNIT
.NOT23   ANOP
.* DATA SET SEQNO TEXT UNIT
         AIF   (NOT &P(24)).NOT24  TEST NOT DATA SET SEQNO
         DS    0H                  ALIGN TEXT UNIT
&TPA(24)&N DC  XL2'1F',H'1',H'2',H'&LABEL(1)' DATA SET SEQNO TEXT UNIT
.NOT24   ANOP
.* LABEL TYPE TEXT UNIT
         AIF   (NOT &P(25)).NOT25  TEST NOT LABEL TYPE
         DS    0H                  ALIGN TEXT UNIT
&TPA(25)&N DC  XL2'1E',H'1',H'1',XL1'&LABELTY' LABEL TYPE TEXT UNIT
.NOT25   ANOP
.* PASSWORD PROTECT TEXT UNIT
         AIF   (NOT &P(26)).NOT26  TEST NOT PASSWORD PROTECT
         DS    0H                  ALIGN TEXT UNIT
&TPA(26)&N DC  XL2'20',H'1',H'1',XL1'&PASPR' PASSWORD PROT TEXT UNIT
.NOT26   ANOP
.* DATA SET RETENTION PERIOD TEXT UNIT
         AIF   (NOT &P(27)).NOT27  TEST NOT DATA SET RETENTION PERIOD
         DS    0H                  ALIGN TEXT UNIT
&TPA(27)&N DC  XL2'23',H'1',H'2',H'&LABEL(4)' DATA SET RETPD TEXT UNIT
.NOT27   ANOP
.* SYSOUT CLASS TEXT UNIT
         AIF   (NOT &P(28)).NOT28  TEST NOT SYSOUT CLASS
&C       SETC  '&SYSOUT(1)'
         DS    0H                  ALIGN TEXT UNIT
&TPA(28)&N DC  XL2'18',H'1',H'1',CL1'&C' SYSOUT CLASS TEXT UNIT
.NOT28   ANOP
.* SYSOUT PROGRAM NAME TEXT UNIT
         AIF   (NOT &P(29)).NOT29  TEST NOT SYSOUT PROGRAM NAME
&A       SETA  K'&SYSOUT(2)
&C       SETC  '&SYSOUT(2)'
         DS    0H                  ALIGN TEXT UNIT
&TPA(29)&N DC  XL2'19',H'1',H'&A',CL&A'&C'  PROGRAM NAME TEXT UNIT
.NOT29   ANOP
.DONE    ANOP
         MEND
