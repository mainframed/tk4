 TITLE 'IEBPPAL1-IEBPTPCH CONTROL CARD ANALYZER'                   1769
*
*    IEBPPAL1        CONTROL CARD ANALYZER OF PRINT/PUNCH
*
*
*
*RECEIVES CONTROL FROM THE ROOT SEGMENT AND CALLS THE CONTROL CARD SCAN
*MODULE (IEBCCS02). THE CONTROL CARDS ARE READ AND SCANNED IN IEBCCS02,
*BUT THEIR VALIDITY IS CHECKED IN IEBPPAL1.
*IF AN ERROR OCCURS,IEBPPAL1 LOADS THE ERROR MESSAGE NUMBER IN REGISTER
*ZERO,AND THE OFFSET IN REGISTER ONE. A BRANCH IS TAKEN TO THE MESSAGE
*WRITER IN IEBPPUN1.
*THE CONDITION CODE IS SET ACCORDING TO THE SEVERITY OF THE ERROR, AND
*THE REMAINDER OF THE CONTROL CARDS ARE SCANNED. THE CONDITION CODE IS
*EXAMINED ON RETURN TO IEBPPUN1. IF IT IS TWELVE OR HIGHER, THE REQUEST
*IS TERMINATED.
*WHEN IEBCCS02 SENDS IEBPPAL1 AN END OF FILE INDICATION,A DIAGNOSTIC IS
*PERFORMED. A CHECK IS MADE WHETHER THE MAXLINE PARAMETER WAS SPECIFIED
*IF IT WAS,WE CHECK THAT THE BASIC SPACING AND TITLE PARAMETERS EXCEED
*THIS COUNT AT THE START.
*
*        ENTRY POINT    IEBPPAL1
*
*        INPUT          CONTROL STATEMENTS, READ AND PASSED TO THIS
*                       MODULE BY THE CONTROL SCAN ROUTINE. ALSO
*                       PASSED TO THIS MODULE ARE CONTROL BYTES SET
*                       BY THE SCAN ROUTINE.
*
*        OUTPUT         ERROR DIAGNOSTICS ARE INITIATED BY THIS
*                       ROUTINE. THE CONTROL TABLE IS BUILT AND
*                       PASSED TO THE MAIN PROCESSOR.
*
*        EXTERNAL RTNS  CALLS THE SCAN ROUTINE, WHICH READS THE
*                       CONTROL STATEMENTS AND PASSES PARAMETER
*                       INFORMATION.  GOES TO ZZPR,WHICH PRINTS
*                       DIAGNOSTICS AND INFORMATIONAL MESSAGES.
*                       THE LINK IS DONE BY A BALR.
*
*        EXITS          NOT APPLICABLE.
*
*        WORK AREAS     AREA FOR MEMBER NAME TABLE OF A PARTIAL
*                       PDS  IS REQUESTED.  TABLE FOR  RECORD
*                       STATEMENT INFORMATION (IDENTS-FIELDS).
         EJECT
*
*                  FORMAT OF MEMBER NAME TABLE
*
*              *
*              *4 BYTES * 8 BYTES        *4 BYTES *
*              ************************************
*              *MEMBERCT*MEMBER NAME     *MCB ADDR*
*              ************************************    ***************
*                       *MEMBER NAME     *MCB ADDR*    TOTAL AREA =
*                       ***************************    (MEMCOUNT X 12)
*                       *MEMBER NAME     *MCB ADDR*    +4
*                       ***************************    ***************
*
*
*        FORMAT OF GETMAIN AREA FOR GROUP CONTROL BLOCKS (GCB)     1769
*        AND FIELD CONTROL BLOCKS (FCB)                            1769
*                                                                  1769
*                                                                  1769
* 2 BYTES- NUMBER OF GCB'S FOLLOWING                               1769
*                                                                  1769
*                                                                  1769
* 8 BYTES- FIRST GCB                                               1769
*          2 BYTES- NUMBER OF FCB'S FOR THIS GCB                   1769
*          2 BYTES- LENGTH OF CURRENT IDENT LITERAL                1769
*          2 BYTES- DISPLACEMENT OF CURRENT IDENT IN LITERAL POOL  1769
*          2 BYTES- INPUT LOCATION MINUS 1 OF CURRENT IDENT        1769
*                                                                  1769
* 8 BYTES- FIRST FCB FOR FIRST GCB                                 1769
*          2 BYTES- LENGTH OF FIELD                                1769
*          2 BYTES- INPUT LOCATION MINUS 1                         1769
*          2 BYTES- CONVERSION CODE                                1769
*          2 BYTES- OUTPUT LOCATION MINUS 1                        1769
*                                                                  1769
* 8 BYTES- SECOND FCB FOR FIRST GCB                                1769
*    *                                                             1769
*    *                                                             1769
*    *                                                             1769
* 8 BYTES- N'TH FCB FOR FIRST GCB                                  1769
*                                                                  1769
*                                                                  1769
* 8 BYTES- SECOND GCB                                              1769
*                                                                  1769
* 8 BYTES- FIRST FCB FOR SECOND GCB                                1769
*    *                                                             1769
*    *                                                             1769
*    *                                                             1769
* 8 BYTES- N'TH FCB FOR SECOND GCB                                 1769
*                                                                  1769
*                                                                  1769
*  *                                                               1769
*  *                                                               1769
*  *                                                               1769
*                                                                  1769
*                                                                  1769
* 8 BYTES- N'TH GCB                                                1769
*    *                                                             1769
*    *                                                             1769
*    *                                                             1769
*                                                                  1769
*
*
*        ATTRIBUTES     NON-REUSABLE
*
***********************************************************************
         EJECT
*
IEBPPAL1 CSECT
* 120650                                                          M3306
* 109120-109240,214700                                            M3310
* 167420-167520                                                   M3311
* 150402-150404,165420-165440                                     M3312
* 109140-109220,214700                                           A25956
*3416079600,075400-075600                                        A21407
*3416082460,082640                                               A21407
*3416016200-016600,023200,024200,024600,025800,026000,026250,      SA0I
*027000,027800,028600,029400,030200,031000,031600,032200,032800,   SA0I
*033400,034000,035600,036200,                                      SA0I
*037200,038000,038800,039600,040400,041200,                        SA0I
*042600,042800,043400,044200-044400,046200,053000,064400-065600,   SA0I
*067000,067400,067600,068000,068200,068600,069000,069600,070000,   SA0I
*071000,071450,071550,071600,075400-075600,076000-076200,077400,   SA0I
*077800,079600,086400-086600,089800-090800,100800,101200,105200,   SA0I
*105400,106600,106800,106920,                                      SA0I
*107600,108000,108400,109200,110400,112600,                        SA0I
*114600,114680,117600,120800,121050,121600,122400,123200,124000,   SA0I
*124200,125000,125400,125800,126200,128200-128800,130600,130800,   SA0I
*132400,132600,132800,133400,133800,134200,138000,139000-139200,   SA0I
*139400,142208,142228,142240,142248,142260,142300-142310,142316,   SA0I
*142328,142336,142344,143400,143520,146000,149000,149200,149600,   SA0I
*149800,151200,152400,152600,153000,154400,154800,160200,166200,   SA0I
*166600,169000,169600,170000,173400,                               SA0I
*177400-177600,177700,178400,182000-                               SA0I
*182200,187600-188700,189600-192200,192300-192350,193000,193800-   SA0I
*194000,194800,195600-196200,208400                                SA0I
*082440-082620                                                    M4118
*056200                                                           24304
*101800                                                           29476
*085200,085400                                                    25790
*073720-073380,225204-225216                                      27715
*120600,020650,127400                                             28397
*142201-142204,142206,142324,142332,142340,142348                 29608
* 130500,130600,131000,137000,137200,143020                      A35450
*                                                                A36048
*130850-130950                                                   A36082
*                                                                A36090
*163800                                                          A36097
*084000                                                          A38738
*A135700                                                         A45130
*A041400,041700-041760,135700,19300,229300                       A45135
*D041400                                                         A45135
*A043720-043760                                                  A41815
*C043200                                                         A41815
*A077624,113900-114200,214720                                   OY01168
*C101600,102000,109000,109060,113400,114000,114520,114640,114800,Y01168
*C218600                                                        OY01168
*D110200,110400,112400,112600,113600-114200                     OY01168
*A092900,092920,135100,135120,178440                            OY01169
*C093600,178400                                                 OY01169
*C073160,073320                                                 OY01170
*A 110900-110984,111300,196120                                 @ZA04419
*A079410,079420                                                @ZA06525
*C079440                                                       @ZA06525
*A110930,110950,114624                                         @ZA07319
*C110940,110960,114600                                         @ZA07319
*D110980                                                       @ZA07319
*C196120                                                       @ZA18364
*A110830-110890,110910,110970           (ORG)@XA19750,@YA19580,@ZA27264
*A111010-111310                         (ORG)@XA19750,@YA19580,@ZA27264
*C110930,110950,114480,115050-115150    (ORG)@XA19750,@YA19580,@ZA27264
*C196120                                (ORG)@XA19750,@YA19580,@ZA27264
*D110900,110920,110940,110960,110984    (ORG)@XA19750,@YA19580,@ZA27264
*D111000,111200,111300,114520-114640    (ORG)@XA19750,@YA19580,@ZA27264
         SAVE  (14,12),T,IEBPPAL1-OZ27264                      @ZA27264
*
         TM    0(R1),X'80'         TEST FOR ERROR
         BO    0(R14)              ERROR-IMMEDIATE EXIT
         BALR  BASER,R0            SET UP ADDRESSABILITY           SA0I
         USING HOWIE3,BASER,BASE                                   SA0I
HOWIE3   L     BASE,BASEADDR                                       SA0I
         B     PKUP                                                SA0I
BASEADDR DC    A(HOWIE3+4096)                                      SA0I
PKUP     ST    R13,SAVEADD+4       STORE SAVE REG                  SA0I
         LA    R1,SAVEADD               GET PTR TO SAVE AREA
         ST    R1,8(R13)                STORE PTR TO S.A. IN SAVE AREA
         L     R1,24(R13)               RESTORE R1
         LA    R13,SAVEADD         OWN SAVE AREA IN SAVE REGISTER
         ST    R1,PARMADR          SAVE ADDRESS IN REG 1           4304
         L     R1,4(R1)            GET FREE ADDR FROM PARM PASSED  4304
         MVC   FREEA(4),0(R1)      GET ADDR OF FREECORE TABLE      4304
         L     R1,PARMADR          RESTORE REG 1                   4304
         L     R1,0(R1)            GET DDNAME FOR SYSIN -ADDRESS OF
         MVC   PPSYSI(8),0(R1)    MOVE DDNAME FOR SYSIN
*
*
         MVI   PPWORK,0           ZERO TO WORK AREA
         MVC   PPWORK+1(WORKLEN-1),PPWORK    ZERO WORK AREA
         MVC   SKIPSW(2),PH1                 TURN OFF SKIP SWITCH
         MVC   PLANT(2),PH1        TURN OFF SWITCH
*
         LA    RZ,DLEN             ADDRESS OF DTABLE LENGTH INDICATOR
         ST    TEMP3,TEMPSAVE          SAVE CONTENTS OF REG 3      4304
         L     TEMP3,FREEA             USE REG 3 TO ESTAB ADDRESS  4304
         USING FREECOR,TEMP3           FOR FREECOR DSECT           4304
         ST    RZ,DTBL                 STORE TBLE LENG TO FREE     4304
         MVI   MAIN1,X'10'             TURN ON GET MAIN SWTCH      4304
         GETMAIN R,LV=(0)
         ST    R1,DTBA             STORE DTBLE ADDR FOR FREE       4304
         L     TEMP3,TEMPSAVE          RESTORE REG 3 CONTENTS      4304
         DROP  3                                                   4304
         LR    TREG,R1             ADDRESS OF GETMAIN AREA
         USING DTABLE,TREG         GETMAIN BASE FOR DSECT
         MVI   DBEGIN,0            ZERO TO FIRST BYTE OF DTABLE
         MVC   DBEGIN+1(DLEN-1),DBEGIN       ZERO OUT DTABLE
         MVI   EXLST,C' '          BLANK FIRST BYTE EXIT LIST
         MVC   EXLST+1(EXLEN-1),EXLST        BLANK EXIT LIST
*
         MVI   RECSW,X'00'        CLEAR RECORD BYPASS SWITCH
         MVC   TABLE(TABLEN),TABLE-1         ZERO SWITCHES,POINTERS
         LA    TEMP1,120                     LOAD REGISTER WITH 12/
         STH   TEMP1,MAXOUT                  MAXIMUM PRINT LINE LENGTH
         MVI   INITPG+1,1          FIRST PAGE NUMBER DEFAULT=1
         EJECT
*
***********************************************************************
*              RETURN FROM INITIAL CALL TO SCANNER SHOULD BE COMMAND
*              TO PRINT OR PUNCH.
*
         LA    ERREG,PPERRC        LOAD ADDRESS OF MESSAGE ROUTINE
         BAL   BREG,CALLSCAN       BRANCH AND LINK TO CALL MACRO
PTCOM    OI    BIT,X'01'           TURN OFF FIRST CARD BIT         SA0I
         TM    PPWORK,COMM        TEST FOR COMMAND
         BZ    0(ERREG)            NO,TERMINATE
         CLC   CPRINT(6),0(R1)    DOES COMMAND=PRINT               SA0I
         BE    PPCOM              COMMAND IS PRINT
         CLC   CPUNCH(6),0(R1)    DOES COMMAND=PUNCH               SA0I
         BNE   0(ERREG)            NEITHER PRINT NOR PUNCH-TERMINATE
*
         MVI   PPSW1,X'01'         SET PPSW1 FOR PUNCH
         LA    TEMP1,80            LOAD REGISTER WITH 80
         STH   TEMP1,MAXOUT        MAXIMUM PUNCH CARD CAPACITY
PPCOM    LA    ERREG,PPERRH        ADDRESS OF MSG RTN              SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
PPCOM1   TM    PPWORK,PAR          TEST FOR PARAMETER              0033
         BZ    PPK0                NO, B AROUND PARAM CHECK        0033
         LTR   RZ,RZ               IS PARAM LENGTH ZERO            0033
         BE    PPCOM               YES, B TO SCAN AGAIN            0033
         B     PPERRH              BRANCH TO ERROR MESSAGE         SA0I
PPK0     TM    PPWORK,KEYW         TEST FOR KEYWORD                0033
         BZ    GETSTOR            NO,END OF CARD
*
*              COMMAND IS PRINT OR PUNCH. TEST FOR VALID KEYWORD
*
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
         MVC   PPCSW1(1),PDZERO    ZERO TO SWITCH
         LA    BREG,PPSCANP        ADDRESS OF PARAM CHECK
         LA    KREG,PPSETPB        ADDRESS OF CVB ROUTINE
         CLC   KTYPORG(7),0(R1)   COMPARE FOR KEYWORD TYPORG       SA0I
         BNE   PPK1                NOT TYPORG KEYWORD
         LA    KREG,TYPORGP        ADDRESS OF TYPORG VALIDITY CHECK
         BR    BREG                BRANCH TO PARAM CHECK
PPK1     CLC   KTOTCONV(8),0(R1)  COMPARE FOR TOTCONV KEYWORD      SA0I
         BNE   PPK2A               NOT TOTCONV KEYWORD
         LA    KREG,TOTCONVP       ADDR OF TOTCONV TYPE CHECK
         BR    BREG                BRANCH TO PARAM CHECK
PPK2A    CLC   KPREFRM(8),0(R1)   TEST FOR KEYWORD PREFORM         SA0I
         BNE   PPK2                NOT PREFORM KEYWORD
         LA    KREG,FORMATED       ADDRESS OF FORMAT CHECK
         BR    BREG                BRANCH TO PARAM CHECK
PPK2     CLC   KCNTRL(6),0(R1)    COMPARE FOR CNTRL KEYWORD        SA0I
         BNE   PPK3                NOT CNTRL KEYWORD
         LA    KREG,CNTRLP         ADDRESS OF CNTRL CHECK
         BR    BREG                BRANCH TO PARAM CHECK
PPK3     CLC   KINITPG(7),0(R1)   COMPARE FOR INITPG KEYWORD       SA0I
         BNE   PPK4                NOT INITPG KEYWORD
         TM    PPSW1,X'01'         TEST FOR PUNCH
         BO    PPERRH              INITPG VALID ONLY FOR PRINT     SA0I
         LA    PARLOC,INITPG       ADDRESS OF INITIAL PAGE NO INDICATOR
         BR    BREG                BRANCH TO PARAM CHECK
PPK4     CLC   KMAXLINE(8),0(R1)  COMPARE FOR MAXLINE KEYWORD      SA0I
         BNE   PPK5                NOT MAXLINE KEYWORD
         TM    PPSW1,X'01'         TEST FOR PUNCH
         BO    PPERRH              MAXLINE VALID ONLY FOR PRINT    SA0I
         LA    PARLOC,PMAXLINE     ADDR OF MAX LINES PER PAGE INDICATOR
         BR    BREG                BRANCH TO PARAM CHECK
PPK5     CLC   KCDSEQ(6),0(R1)    COMPARE FOR CDSEQ KEYWORD        SA0I
         BNE   PPK6                NOT CDSEQ KEYWORD
         TM    PPSW1,X'01'         TEST FOR PUNCH
         BZ    PPERRH              CDSEQ INVALID IF NOT PUNCH      SA0I
         OI    PPCSW1,X'02'        ( SET SWITCH)
         OI    PPSW1,X'02'
         OI    PPWORK+140,X'01'
         LA    PARLOC,CDNOB        ADDRESS OF INITIAL SEQUENCE NUMBER
         LA    KREG,FPSETPB             ADDR BIN CONV ROUTINE FOR
*                                        FULLWORD COUNTER
         BR    BREG                BRANCH TO PARAM CHECK
PPK6     CLC   KCDINCR(7),0(R1)   COMPARE FOR CDINGR KEYWORD       SA0I
         BNE   PPK7                NOT CDINCR KEYWORD
         TM    PPSW1,X'01'         TEST FOR PUNCH
         BZ    PPERRH              CDINCR INVALID IF NOT PUNCH     SA0I
         LA    PARLOC,CDINCRB      ADDRESS OF INCREMENT
         LA    KREG,FPSETPB             ADDR BIN CONV ROUTINE FOR
*                                        FULLWORD COUNTER
         BR    BREG                BRANCH TO PARAM CHECK
PPK7     CLC   KSTOPAFT(8),0(R1)  COMPARE FOR STOPAFT KEYWORD      SA0I
         BNE   PPK8                NO STOPAFT KEYWORD
         LA    PARLOC,INITSTOP     ADDRESS OF STOP DATA
         BR    BREG                BRANCH TO PARAM CHECK
PPK8     CLC   KSKIP(5),0(R1)     COMPARE FOR SKIP KEYWORD         SA0I
         BNE   PPK9                NOT SKIP KEYWORD
         LA    PARLOC,INITSKIP     ADDRESS OF SKIP DATA
         BR    BREG                BRANCH TO PARAM CHECK
PPK9     CLC   KMAXNAME(8),0(R1)  COMPARE FOR MAXNAME KEYWORD      SA0I
         BNE   PPK10               NOT MAXNAME KEYWORD
         LA    PARLOC,MAXNAME      ADDRESS OF MAXIMUM MEMBER STATEMENTS
         BR    BREG                BRANCH TO PARAM CHECK
PPK10    CLC   KMAXFLDS(8),0(R1)  COMPARE PUR MAXFLDS KEYWORD      SA0I
         BNE   PPK11               NOT MAXFLDS KEYWORD
         LA    PARLOC,MAXFLDS      ADDRESS OF MAXIMUM FIELD PARAMETERS
         BR    BREG                BRANCH TO PARAM CHECK
PPK11    CLC   KMAXGPS(7),0(R1)   COMPARE FOR MAXGPS KEYWORD       SA0I
         BNE   PPK12               NOT MAXCPS KEYWORD
         LA    PARLOC,MAXGPS       ADDRESS OF MAXIMUM IDENT PARAMETERS
         BR    BREG                BRANCH TO PARAM CHECK
PPK12    CLC   KMAXLITS(8),0(R1)  COMPARE FOR MAXLITS KEYWORD      SA0I
         BNE   PPK13               NOT MAXLITS KEYW, GO TO NEXT  A45135
         LA    PARLOC,MAXLITS      ADDR OF MAX IDENT LITERAL CHARACTERS
         BR    BREG               BRANCH TO PARAMETER CHECK      A45135
PPK13    CLC   KSTRTAFT,0(R1)      COMPARE FOR STARTAT KEYWORD   A45135
         BNE   0(ERREG)           ERROR, INVALID KEYWORD         A45135
         LA    PARLOC,STRTAFT     ADDR OF START NBR              A45135
         EJECT
*
*              EXAMINE PRINT/PUNCH PARAMETERS
*
PPSCANP  LA    ERREG,PPERRJ        ADDRESS OF MSG ROUTINE          SA0I
         OI    PPWORK+81,X'01'     SET ON PARAMETER REQUIRED BIT   SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         NI    PPWORK+81,X'FE'     SET OFF PARAMETER REQUIRED BIT  SA0I
         TM    PPWORK,PAR          HAVE A PARAMETER?
         BO    PARTEST             YES, TEST FOR PARAM. LENGTH   A41815
         LA    ERREG,PPERRH        ADDRESS OF MSG RTN              SA0I
         B     PPCOM1              BACK TO KEYWORD CHECK
PARTEST  LTR   RZ,RZ               PARAM. LENGTH ZERO ?          A41815
         BE    PPERRJ              YES, PRINT MESS. IEB432I      A41815
         B     0(KREG)             NO, CONT PARAM CHECKING       A41815
*
TYPORGP  CLC   PPS(2),0(R1)        COMPARE FOR TYPORG PARAM PHYS SEQ
         BNE   DENNIS              NO-CONTINUE                     SA0I
         CH    RZ,PH2              IS PARAM LENGTH=2?              SA0I
         BNE   PPERRJ              NO-BRANCH TO ERROR MSG          SA0I
         B     PPCOM               PHYS SEQ ORG- TO SCAN
DENNIS   CLC   PPO(2),0(R1)        COMPARE FOR TYPORG PARTITIONED  SA0I
         BNE   0(ERREG)            IF NEITHER PS NOR PO,INVALID PARAM
         CH    RZ,PH2              IS PARAM LENGTH=2?              SA0I
         BNE   PPERRJ              NO-B TO ERR MSG                 SA0I
         OI    TYPORG,X'01'        RESET TYPORG TO PO
         B     PPCOM               BRANCH TO SCAN
*
TOTCONVP CLC   PHE(2),0(R1)        COMPARE FOR PARAMETER HE
         BE    ORR                 TREATED AS HEX PARAMETER XE
         CLC   PXE(2),0(R1)        COMPARE FOR HEX PARAMETER XE
         BNE   TOTCP5              NOT HE OR XE - BRANCH TO RZ TEST
ORR      CH    RZ,PH2              IS PARAM LENGTH=2?              SA0I
         BNE   PPERRJ              NO-BRANCH TO ERROR MSG          SA0I
         OI    TOTCONV,X'01'       RESET TOTCONV FOR HEX           SA0I
         B     PPCOM               BRANCH TO SCAN
TOTCP5   CLC   PPZ(2),0(R1)        COMPARE FOR UNPACKED DECIMAL PARAM
         BNE   0(ERREG)            NONE OF ABOVE-INVALID PARAMETER
         CH    RZ,PH2              IS PARAM LENGTH=2?              SA0I
         BNE   PPERRJ              NO-BRANCH TO ERROR MSG          SA0I
         OI    TOTCONV,X'03'       SET TOTCONV FOR UNPACKED DECIMAL
         B     PPCOM               BRANCH TO SCAN
*
CNTRLP   BAL   BREG,SETPBIN        CONVERT PARAMETER TO BINARY
         LA    TEMP1,3
         TM    PPSW1,1             TEST FOR PUNCH
         BZ    CP5                 NOT PUNCH,THEREFORE PRINT
         BCTR  TEMP1,R0            SUBTRACT ONE FOR PUNCH
CP5      CR    PREG,TEMP1          TEST PARAM AGAINST 2(PUN) OR 3(PR)
         BCR   2,ERREG            BRANCH IF PARAM ABOVE MAXIMUM
         LTR   PREG,PREG           TEST FOR ZERO PARAMETER
         BNH   0(ERREG)            ONLY ABOVE ZERO VALID
         STC   PREG,PPCTL          SET CONTROL FOR GIVEN PARAMETER
         B     PPCOM               BRANCH TO SCAN
*
*  BRANCH TO CONVERT TO BINARY ROUTINE FOR THE FOLLOWING PARAMETERS
*   CDSEQ (VALUE CARD SEQUENCE NUMBER IS TO BEGIN WITH)
*   CDINCR (VALUE CARD SEQUENCE NUMBER IS TO BE INCREMENTED)
*   USE OF FULLWORD COUNTERS ALLOWS SEQUENCE NUMBERS TO 99,999,999 DEC
*
FPSETPB  BAL   BREG,SETPBIN             GO TO CONVERT ROUTINE
         ST    PREG,0(PARLOC)           PLACE CONV. VALUE IN DTABLE
         B     PPCOM                    FINISHED WITH THIS PARAMETER
*
*  BRANCH TO CONVERT TO BINARY ROUTINE FOR PARAMETERS WITH HALFWORD CTR
*
FORMATED CLI   0(R1),C'A'          TEST FOR CONTROL CHARACTER
         BE    SLIPDOWN            YES-BRANCH TO SWITCH SET
         CLI   0(R1),C'M'          TEST FOR CONTROL CHARACTER      SA0I
         BNE   PPERRJ              BRANCH TO ERROR MESSAGE         SA0I
         OI    PREFMTP,X'01'       SET FORMAT SWITCH
         B     PPCOM               BRANCH TO SCAN
SLIPDOWN CH    RZ,PH1              IS PARAM LENGTH =1?             SA0I
         BNE   PPERRJ              NO-BRANCH TO ERROR MSG          SA0I
         OI    PREFMTP,X'80'       SET FORMAT SWITCH               SA0I
         B     PPCOM               BRANCH TO SCAN
*              CONVERT PARAMETER TO BINARY
PPSETPB  BAL   BREG,SETPBIN       CONVERT TO BINARY
         STH   PREG,0(PARLOC)     STORE PARAMETER
         B     PPCOM               BRANCH TO SCAN
*
*              GET STORAGE FOR TABLES
*
GETSTOR  TM    TYPORG,1            TEST TYPE OF ORGANIZATION
         BZ    GS5                 SDS,NO MEMBER NAME TABLE
         LH    RZ,MAXNAME          TEST FOR
         LTR   RZ,RZ               NAMED MEMBERS
         BE    GS5A                NO NAMED MEMBERS
         MH    RZ,LISTLEN          MULT MEMBER NUMBER OF LENGTH CONST
         AH    RZ,PH4              TOTAL TAB LENGTH=ABOVE PLUS FOUR
GS1      ST    TEMP3,TEMPSAVE          SAVE CONTENTS OF REG 3      4304
         L     TEMP3,FREEA             USE REG 3 TO ESTAB ADDRESS  4304
         USING FREECOR,TEMP3           FOR FREECOR DSECT           4304
         ST    RZ,GS1L                 STORE MNT LENG FOR FREE     4304
         MVI   MAIN2,X'10'             TURN ON MNT GET MAIN SWTCH  4304
         GETMAIN  R,LV=(0)             GET CORE FOR MEMBER TBLE    4304
         ST    R1,MNTA                 STORE MNT ADDRESS           4304
         L     TEMP3,TEMPSAVE          RESTORE REG 3 CONTENTS      4304
         DROP  3                                                   4304
         ST    R1,MNTADD           STORE TABLE ADDRESS
         LA    MNTPTER,4(R1)       ADDRESS OF SECOND WORD OF TABLE
         ST    MNTPTER,CURRMNT    STORE THIS ADDRESS
         MVC   8(4,MNTPTER),PDZERO ZERO FOURTH WORD OF MNT
         LH    RZ,MAXNAME          TEST FOR
         LTR   RZ,RZ               NAMED MEMBERS
         BE    GS6                 NO NAMED MEMBERS
         MH    RZ,PH10                  DOUBLE MEMBER NAME
         B     GS8                 TO USER DEFINED GROUP CHECK
GS5A     MVC   MASK(2),PH12        CAUSE BRANCH AT CSCAN7
GS5      LA    RZ,16              MNT LENGTH-NO MEMBERS
         B     GS1                BUILD TABLE-NO MEMBERS
GS6      LH    RZ,PH10      SET REG TO CONSTANT OF 10              7827
GS8      LH    R1,MAXGPS           TEST FOR
         LTR   R1,R1               USER DEFINED GROUPS
         BNE   OVERFLDS            YES - USER DEFINED GROUPS
         LH    R1,MAXFLDS         TEST FOR
         LTR   R1,R1               USER FORMATTED OUTPUT
         BE    GSMCBNO             NO USER FORMATTED OUTPUT
         LH    R1,MAXGPS          LOAD NO OF IDENTS
OVERFLDS MH    R1,GCBLEN          MULTIPLY IDENTS BY 8 FOR LENGTH
         AR    RZ,R1               ADD 2 TO LENGTH
         LH    R1,MAXFLDS          LOAD MAXIMUM FIELD STATEMENTS
         MH    R1,FCBLEN           MULTIPLY BY STATEMENT LENGTH 8
         AR    RZ,R1               TOTAL LENGTH FOR GETMAIN
         ST    RZ,MCBLEN           STORE MEMBER CONTROL BLOCK LENGTH
         ST    RZ,MCBREM           STORE IN MCB REMAINING
         ST    TEMP3,TEMPSAVE          SAVE CONTENTS OF REG 3      4304
         L     TEMP3,FREEA             USE REG 3 TO ESTAB ADDRESS  4304
         USING FREECOR,TEMP3           FOR FREECOR DSECT           4304
         ST    RZ,MCBL                 STORE LENGTH OF MCB AREA    4304
         MVI   GETMA,X'10'                                       A36090
         MVI   MAIN3,X'10'             SET GET MAIN SWITCH FOR MCB 4304
         GETMAIN R,LV=(0)
         ST    R1,MCBADD           STORE ADDRESS OF MEMBER CONTROL BLK
         ST    R1,MCBA                 STORE MCB ADDR FOR FREE     4304
         L     TEMP3,TEMPSAVE          RESTORE REG 3 CONTENTS      4304
         DROP  3                                                   4304
         LR    MCBPTER,R1          LOAD POINTER TO MEMBER CONTROL BLOCK
         MVC   0(2,MCBPTER),PDZERO ZERO FIRST HALFWORD OF MCB
         LH    RZ,MAXLITS          TEST FOR
         LTR   RZ,RZ               LITERALS
         BE    GSEND              NONE-DON'T GET MAIN
         ST    TEMP3,TEMPSAVE          SAVE CONTENTS OF REG 3      4304
         L     TEMP3,FREEA             USE REG 3 TO ESTAB ADDRESS  4304
         USING FREECOR,TEMP3           FOR FREECOR DSECT           4304
         ST    RZ,LITS                 STORE LIT LENG FOR FREE     4304
         MVI   MAIN4,X'10'             TURN LIT GET MAIN SWTCH     4304
         GETMAIN R,LV=(0)
         ST    R1,LITADD           STORE LITERAL POOL ADDRESS
         ST    R1,LITA                 SAVE LITS FOR FREEMAIN      4304
         L     TEMP3,TEMPSAVE          RESTORE REG 3 CONTENTS      4304
         DROP  3                                                   4304
GSEND    B     CSCANZ              B TO MESS-SAVE LOAD ROUTINE
GSMCBNO  MVC   PLANT(2),PH12       CAUSE BRANCH AT CSCAN12
         B     CSCANZ              BRANCH TO MESS-SAVE LOAD ROUTINE
*              MESSAGE SET-UP
PPERRH   ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,31               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIK             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPIKM     MOVE IN MESSAGE LOCATION        SA0I
         B     HOWIE1              PUT COLUMN NUMBER IN MSG        SA0I
PPERRI   ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,33               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPMK             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPMKM     MOVE IN MESSAGE LOCATION        SA0I
         B     HOWIE1              PUT COLUMN NUMBER IN MSG        SA0I
PPERRJ   ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,32               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIP             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPIPM     MOVE IN MESSAGE LOCATION        SA0I
         B     HOWIE1              PUT COLUMN NUMBER IN MSG        SA0I
PPERRL   ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,34               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPMP             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPMPM     MOVE IN MESSAGE LOCATION        SA0I
         B     HOWIE1              PUT COLUMN NUMBER IN MSG        SA0I
         EJECT
*
*              EXAMINE COMMAND WORD
*
CDSKIP   OI    PPWORK,BYPASS       SET BYPASS SWITCH-NO COMMAND
*
CSCAN    LA    ERREG,PPERRQ        ADDRESS OF MSG RTN              SA0I
         MVI   COMMSW,X'0'         SET COMMAND SWITCH
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
CSCAN1   OI    BITS,X'01'          TURN OFF SECOND CARD SWITCH     SA0I
         TM    PPWORK,COMM         TEST FOR COMMAND                SA0I
         BZ    CDSKIP              NOT COMMAND - SKIP REST OF CARD
PKUP5    CLC   CTITLE(6),0(R1)    TEST FOR TITLE COMMAND           SA0I
         BE    TITLEC             HAVE TITLE COMMAND
         CLC   CEXITS(6),0(R1)    TEST FOR EXITS COMMAND           SA0I
         BE    EXITSC              HAVE EXITS COMMAND
         CLC   CMEMBER(7),0(R1)   TEST FOR MEMBER COMMAND          SA0I
         BNE   CSCAN8              NOT MEMBER COMMAND
         CLC   MASK(2),PH12        TEST IF BRANCH SPECIFIED
         BE    PICK                YES-NO MEMBERS                  SA0I
         B     MEMBERC             SKIP TO MSG WHEN MNT FULL
CSCAN8   CLC   CRECORD(7),0(R1)   TEST FOR RECORD COMMAND          SA0I
         BNE   TSTLBLS                                             UL0H
         CLC   SKIPSW(2),PH12      TEST IF BRANCH SPECIFIED
         BE    CDSKIP             YES-SKIP RECORD SWITCH
         CLC   PLANT(2),PH12      TEST IF BRANCH SPECIFIED
         BE    PPERRQ              BRANCH TO ERROR MSG             SA0I
         B     RECORDC            HAVE RECORD COMMAND
*
TSTLBLS  CLC   CLABELS(7),0(R1)   TEST FOR LABELS COMMAND          SA0I
         BE    LABLSC                                              UL0H
         B     PPERRQ              BRANCH TO ERROR MSG             SA0I
CSCANZ   LA    ERREG,PPERRQ        ADDRESS OF MSG RTN              SA0I
         L     RZ,LENSAVE          LOAD TABLE LENGTH
         L     R1,LOCSAVE          LOAD TABLE ADDRESS
         B     CSCAN1              BRANCH TO COMMAND TEST
*
*
CALLSCAN CALL  IEBCCS02,(PPWORK,PPSYSI)
*
*
*      I / O   E R R O R   H A N D L I N G   F O R   S Y S I N     7715
*                                                                  7715
         TM    PPWORK+144,X'02'   TEST FOR I/O ERROR ON SYSIN      7715
         BZ    NOERR              BRANCH IF NO TO NORMAL PROCESSING7715
         LA    R7,MSGSYNDF        GET ADDRESS OF MSG AREA          7715
         LA    R7,18(R7)          INCREMENT ADDR PAST MSG ID       7715
         MVC   0(79,R7),0(R1)     MOVE SYNAD. MSG TO AREA TO PR.OY01170
         ST    R1,FREESYND        SAVE ADDR OF SYNADAF MSG TO FREE 7715
         LA    R1,MSGSYNDF        LOAD REG 1 WITH AREA ADDR        7715
         LA    R0,96              LOAD REG 0 WITH AREA LENGTH      7715
         MVI   PPCONCD,X'0C'      SET RETURN CODE                  7715
         L     R15,VZZPR          GET ADDR OF MSG WRITER IN PPUN1  7715
         BALR  R14,R15            GO WRITE SYNADAF I/O ERROR INFO  7715
         L     R1,FREESYND        GET ADDR OF MSG IN DYNAMIC CORE  7715
         LA    R0,79              GET MESS. LENGTH TO FREE CORE OY01170
         FREEMAIN  R,LV=(0),A=(1)                                  7715
         B     PPRET              GO TO RETURN ROUTINE             7715
NOERR    ST    RZ,LENSAVE         SAVE TABLE LENGTH TO REFERENCE   7715
         ST    R1,LOCSAVE         SAVE TABLE ADDRESS
         TM    PPWORK+WORKLEN-1,NEWCD   TEST FOR NEW CARD
         BZ    CALLS4                   NO-BRANCH AROUND CARD WRITE
         LA    R1,PPWORK+1         ADDRESS OF WRITE AREA
         L     R15,CDWRT           LOAD ADDRESS OF CARD WRITER
         BALR  R14,R15             BRANCH TO CARD WRITE EXTERN
         L     R1,LOCSAVE          RELOAD TABLE ADDRESS
         L     RZ,LENSAVE          RELOAD TABLE LENGTH
CALLS4   TM    PPWORK+WORKLEN-1,RIO     TEST FOR I/O ERROR ON SYSIN
         BO    IOERRIN             I/O ERROR ON SYSIN
         TM    PPWORK,ERROR        TEST FOR ERROR
         BO    TESTO               BRANCH TO ERROR BIT ANALYSIS    SA0I
         TM    PPWORK,EOF          TEST FOR END OF FILE
         BO    PPEOF               YES-BRANCH TO EOF RTN
         MVI   SYSIN,X'FF'         SW TO INDICATE SYSIN NOT EMPTY
         TM    PPWORK,BYPASS       IS BYPASS BIT ON                SA0I
         BCR   8,BREG
HOWIE    TM    PPWORK,X'01'        IS END PARAMETER ON?            SA0I
         BZ    CALLSCAN            BRANCH TO CALL RTN              SA0I
         BR    BREG                RETURN TO LINK POINT            SA0I
*
PPERRC   LA    RZ,1                MESSAGE DISPLACEMENT
         LA    R1,PTERM1           MESSAGE POINTER
PPERR    BAL   R14,PREMSG          BRANCH TO MESSAGE WRITER
         MVI   PPCONCD,X'0C'       SET CONDITION CODE TO TWELVE
         TM    PPWORK+WORKLEN-1,RIO TEST FOR I/O ERROR ON SYSIN    9989
         BO    PPRET              IF ERROR, BR TO RETURN ROUTINE   9989
         LA    BREG,CSCAN1         ADDR COMMAND TEST               SA0I
         OI    BIT,X'01'           TURN OFF FIRST CARD BIT(IF ON)  SA0I
ERRENDA  OI    PPWORK,BYPASS       SET BYPASS SWITCH
         NI    PPWORK+81,X'FC'       TURN OFF KEYWORD AND PARAMETER
*                                  REQUIRED BITS                   SA0I
         NI    PPWORK+129,X'00'    SET PARENTH COUNTER TO ZERO  OY01168
         B     CALLSCAN            BRANCH TO CCS02                 SA0I
TESTO    TM    PPWORK+130,X'02'    IS  MISSING END OF PARENTHESIS
*                                  BIT ON?                         SA0I
         BO    PPERRY              YES-WRITE ERROR MSG             SA0I
         TM    PPWORK,BYPASS       IS BYPASS ON                    SA0I
         BZ    PPERRS              WRITE ERROR MSG                 SA0I
HAHA1    TM    PPWORK,COMM         IS COMMAND ON                   SA0I
         BO    HAHA                YES-BRANCH                      SA0I
         TM    PPWORK,KEYW         IS KEYWORD ON                   SA0I
         BZ    HAHA2               NO-CONTINUE                     SA0I
         B     PPERRH              WRITE ERROR MSG                 SA0I
HAHA2    TM    PPWORK,PAR          IS PARAMETER ON                 SA0I
         BZ    HAHA3               NO-CONTINUE                     SA0I
         B     PPERRJ              WRITE ERROR MSG                 SA0I
HAHA3    TM    PPWORK+81,X'02'     IS KEYWORD EXPECTED ON?         SA0I
         BZ    HAHA4               NO-CONTINUE                     SA0I
         B     PPERRI              WRITE ERROR MSG                 SA0I
HAHA4    TM    PPWORK+81,X'01'     IS PARAMETER EXPECTED ON?       SA0I
         BZ    PPERRT              NO-CONTINUE                     SA0I
         B     PPERRL              WRITE ERROR MSG                 SA0I
HAHA     TM    PPWORK,PAR          IS PARAMETER ON                 SA0I
         BO    PPERRN              YES-BRANCH                      SA0I
         TM    PPWORK,KEYW         IS KEYWORD ON                   SA0I
         BO    PPERRN              YES-BRANCH                      SA0I
         B     PPERRQ              WRITE ERROR MSG                 SA0I
         EJECT
*
***********************************************************************
*WRAP-UP ROUTINE FOR THE ANALYZER. PRINTS EOF ON SYSIN MESSAGE. CHECKS*
*THAT MAX LINES NOT EXCEEDED. PLACES IN MEMBER NAME TABLE THE NUMBER  *
*OF MEMBERS TO BE PRINTED OR PUNCHED. RETURNS TO THE ROOT SEGMENT.    *
***********************************************************************
*
PPEOF    TM    PPWORK+81,X'4A'     CONTINUATION?               @ZA06525
         BO    PPERRT              YES,WRITE ERROR MSG         @ZA06525
         TM    SYSIN,X'FF'         IS SYSIN EMPTY              @ZA06525
         BZ    USERROR             YES, USER ERROR               A21407
         CLI   PPCONCD,X'0C'           IS RETURN CODE=12           SA0I
         BE    SYSMS               YES,END OF ANALYSIS             SA0I
         TM    COMMSW,RCOMM        TEST IF LAST COMMAND WAS RCD    SA0I
         BZ    PPEOFA              NO - BRANCH TO MAXLINE TEST
         TM    RECORDSW,FIRSTR     HAS MCB ADDRESS BEEN ENTERED IN MNT
         BO    PPEOFA1             HAS BEEN ENTERED
         LH    TEMP1,0(MCBPTER)    LOAD MCB
         AH    TEMP1,PH1           ADD ONE TO MCB LEN
         STH   TEMP1,0(MCBPTER)    STORE IN MCB
         L     MNTPTER,CURRMNT     LOAD MEMBER NAME TABLE ADDRESS
         ST    MCBPTER,8(MNTPTER)  STORE ADDRESS OF MCB IN MNT
         B     PPEOFA              BRANCH TO MAXLINE TEST
PPEOFA1  TM    TYPORG,1      PARTITIONED ORGANIZED ?             A36048
         BNZ   PPEOFA        YES                                 A36048
         LH    RZ,RECDCNT    NO, STORE GCB NUMBER FOR DATA SET   A36048
         LTR   RZ,RZ               IDENT KEYWORD
         BE    PPEOFA              NONE-BRANCH TO MAXLINE TEST
         L     R1,MCBADD           LOAD MEMBER CONTROL BLOCK ADDRESS
         STH   RZ,0(R1)            STORE IDENT IN MCB
PPEOFA   LH    R1,PMAXLINE         DO TEST FOR                    M4118
         LTR   R1,R1               MAXLINE KEYWORD
         BZ    PPEOFA9             MAXLINE NOT SPECIFIED
         TM    TITLESW,X'01'       TEST FOR TITLE
         BO    ADDONE              HAVE TITLE - BRANCH TO TITLE ROUTINE
         CLC   PPCTL(1),PMAXLINE+1  COMPARE SPACING TO MAXIMUM LINES
         BL    PPEOFA9             SPACE INCREMENT LESS THAN MAX LINES
         L     R1,MAXMSG     LOAD ERROR MSG ROUT. ADDRESS        A38738
         MVC   0(7,R1),KMAXLINE  MOVE MAXLINE IN MESSAGE         A38738
         B     MAXERROR                                          A38738
ADDONE   SR    R1,R1               ZERO OUT REGISTER
         SR    RZ,RZ               ZERO OUT REGISTER
         IC    RZ,PPCTL            LOAD SPACE FACTOR
         LA    R1,1(R1)            ALLOW ONE SPACE FOR HEADER
         AR    R1,RZ               ADD SPACES BETWEEN HEADERS
         CLI   TITLESW,X'03'       TEST FOR SUBTITLE ALSO          5790
         BNE   COMPARE1            BRANCH IF NO SUBTITLE           5790
         LA    R1,1(R1)            ADD ONE SPACE FOR SUBTITLE
         AR    R1,RZ               ADD SPACES FOLLOWING SUBTITLE
COMPARE1 CH    R1,PMAXLINE         TEST IF AT OR OVER MAXIMUM LINES
         BL    PPEOFA9             NO - OK
PPEOFA8  ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,31               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIK             MESSAGE POINTER                 SA0I
         LA    TEMP4,30            LOAD DISPLACEMENT               SA0I
         A     TEMP4,VPPIKM        POSITION FOR INSERTING COLUMN   SA0I
         MVC   0(2,TEMP4),FULL+2   MOVE TO COLUMN NUMBER           SA0I
PPTERM   BAL   R14,PREMSG               PRINT MESSAGE
         MVI   PPCONCD,X'0C'       SET CONDITION CODE TO TWELVE
PPEOFA9  LA    RZ,EOFCDE           MESSAGE CODE
         LA    R1,PEOF             MESSAGE POINTER
         LA    R14,PPEND           RETURN ADDRESS FROM PRINT = WRAPUP
         B     PREMSG              BRANCH TO MESSAGE WRITE
*
USERROR  LA    RZ,NOSYSIN          MESSAGE CODE                  A21407
         LA    R1,42               MESSAGE OFFSET                A21407
         BAL   R14,PREMSG          BRANCH TO MESSAGE WRITER      A21407
         MVI   PPCONCD,X'0C'       SET CONDITION CODE TO TWELVE  A21407
         B     PPRET               BRANCH TO RETURN ROUTINE      A21407
*                                                                     *
*                                                                     *
IOERRIN  LA    RZ,7                MESSAGE CODE FOR I/O ERROR ON SYSIN
         LA    R1,PEOJIO           MESSAGE POINTER
         B     PPERR               BRANCH TO WRITE LINK
*
PPERRCD  LA    RZ,9                MESSAGE CODE
         LA    R1,SYNTMSG          MESSAGE POINTER
         B     PPERR               BRANCH TO WRITE LINK
*
PPERRN   ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,35               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPMC             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPMCM     MOVE IN MESSAGE LOCATION        SA0I
HOWIE1   LA    TEMP4,30            LOAD DISPLACEMENT               SA0I
         A     TEMP4,SEYLE         POSITION FOR INSERTING COLUMN   SA0I
         MVC   0(2,TEMP4),FULL+2   MOVE TO COLUMN NUMBER           SA0I
         B     PPERR               BRANCH TO WRITE LINK            SA0I
PPERRQ   LA    RZ,36               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIC             MESSAGE POINTER                 SA0I
         B     PPERR               BRANCH TO WRITE LINK            SA0I
PPERRR   LA    RZ,37               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIL             MESSAGE POINTER                 SA0I
         B     PPERR               BRANCH TO WRITE LINK            SA0I
PPERRS   LA    RZ,38               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIN             MESSAGE POINTER                 SA0I
         BAL   R14,PREMSG          BRANCH TO MSG WRITER            SA0I
         TM    PPWORK+WORKLEN-1,RIO TEST FOR I/O ERROR ON SYSIN    SA0I
         BO    PPRET               IF ERROR,RETURN                 SA0I
         CLI   BIT,X'01'           IS THIS THE FIRST CARD?         SA0I
         BE    GOB                 NOT FIRST CARD-BRANCH           SA0I
         LA    BREG,PTCOM          ADDR COMMAND TEST-PT OR PCH     SA0I
         B     CALLSCAN            BRANCH TO CCS02                 SA0I
GOB      CLI   BITS,X'01'          IS THIS THE SECOND CARD?        SA0I
         BE    GOA                 NOT SECOND CARD-BRANCH          SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         B     GETSTOR             GET STORAGE FOR TABLES          SA0I
GOA      LA    BREG,CSCAN1         ADDR COMMAND TEST               SA0I
         B     CALLSCAN            BRANCH TO CCS02                 SA0I
PPERRT   LA    RZ,39               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPBC             MESSAGE POINTER                 SA0I
         B     PPERR               BRANCH TO WRITE LINK            SA0I
PPERRU   LA    RZ,41               MESSAGE DISPLACEMENT            SA0I
         LA    R1,41               MESSAGE POINTER                 SA0I
         B     PPERR               BRANCH TO WRITE LINK            SA0I
PPERRY   LA    RZ,40               MESSAGE DISPLACEMENT            SA0I
         LA    R1,40               MESSAGE POINTER                 SA0I
         B     PPERR               BRANCH TO WRITE LINK            SA0I
SYSMS    LA    RZ,EOFCDE           MESSAGE CODE                    SA0I
         LA    R1,PEOF             MESSAGE POINTER                 SA0I
         LA    R14,PPRET           RETURN ADDRESS                  SA0I
         B     PREMSG              BRANCH TO MSG WRITE             SA0I
*
PPEND    TM    TYPORG,1            TEST FOR PARTITIONED ORGANIZATION
         BZ    PPENDA              NO-BRANCH AROUND MEMBER TEST
         TM    GETMA,X'10'   GETM. FOR FI AND REC PARAM. ?       A36090
         BNO   SKIPLCO       NO, SKIP                            A36090
         LH    R1,RECDCNT    LAST COUNT WAS NOT                  A36090
         STH   R1,0(MCBPTER) NOT FILLED IN                       A36090
SKIPLCO  LH    MEMCT,MEMBCT  LOAD MEMBERCOUNT                    A36090
         LTR   MEMCT,MEMCT         TEST FOR NAMED MEMBERS
         BE    PPENDA              NO NAMED MEMBERS
         L     MNTPTER,MNTADD      LOAD ADDRESS OF MEMBER NAME TABLE
         ST    MEMCT,0(MNTPTER)    STORE MEMBER COUNT IN MEMB NAME TAB
         B     PPRET               BRANCH TO RESTORE-RETURN ROUTINE
PPENDA   L     MCBPTER,MCBADD      LOAD ADDRESS OF MEMBER CONTROL BLOCK
         TM    GETMA,X'10'         GETM. FOR FI AND REC PARAM. ?OY01169
         BNO   MNTZERO             NO, SKIP                     OY01169
         LH    R1,0(MCBPTER)       LOAD MEMBER COUNT
         LTR   R1,R1               TEST FOR RECORD GROUPS
         BH    PPRET               HAVE RECORD GROUPS - BRANCH TO EXIT
MNTZERO  MVC   MNTADD(4),PDZERO    REMOVE PNTER TO MNT-NO REC GR Y01169
PPRET    SR    R15,R15             ZERO RETURN CODE REGISTER
         IC    R15,PPCONCD         INSERT RETURN CODE
         L     R13,SAVEADD+4       LOAD SAVE REGISTER
         ST    TREG,24(R13)        SAVE DSECT BASE
         RETURN   (14,12),RC=(15)
*
*
*        CONVERT PARAMETER TO BINARY
SETPBIN  LR    TEMP1,RZ            LOAD PARAMETER LENGTH
         LR    TEMP2,R1            LOAD PARAMETER ADDRESS
         LTR   TEMP1,TEMP1         TEST  PARAMETER LENGTH
         BH    SETPB2              HAVE PARAMETER
         SR    PREG,PREG           SET LENGTH INDICATOR TO ZERO
         BR    BREG                BRANCH BACK
SETPB2   CLI   0(TEMP2),C'0'       TEST FOR NUMERIC CHARACTER
         BL    0(ERREG)            PARAMETER IS NON-NUMERIC
         CLI   0(TEMP2),C'9'       TEST AGAINST HIGHEST NUMERIC
         BH    0(ERREG)            HIGH NON-NUMERIC
         AH    TEMP2,PH1           INCREMENT LOCATION BY ONE
         BCT   TEMP1,SETPB2        CONTINUE THROUGH PARAMETER
         BCTR  RZ,RZ               SUBTRACT ONE FROM PARAMETER LENGTH
         STC   RZ,SETPB4+1
         OI    SETPB4+1,X'70'
SETPB4   PACK  DBLWD(8),0(1,R1)    PACK INTO CONVERSION AREA
         CVB   PREG,DBLWD          CONVERT PARAMETER TO BINARY
         LTR   PREG,PREG           TEST FOR NEGATIVE VALUE
         BL    0(ERREG)            NEGATIVE IS ERROR
         BR    BREG                BRANCH BACK
         EJECT
*
*
*        COMMAND = TITLE
*
*
TITLEC   LA    ERREG,CDSKIP        ADDRESS OF CARD SKIP ROUT
         OI    PPWORK+81,X'02'     SET ON KEYWORD REQUIRED BIT     SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
         TM    PPWORK,KEYW         TEST FOR KEYWORD
         BZ    PPERRI              ERROR IF NO KEYWORD AFTER TITLE SA0I
         GETMAIN R,LV=144              FOR MAX POSS. LRECL-1    OY01168
         ST    TEMP3,TEMPSAVE          SAVE CONTENTS OF REG 3      4304
         L     TEMP3,FREEA             USE REG 3 TO ESTAB ADDRESS  4304
         USING FREECOR,TEMP3           FOR FREECOR DSECT           4304
         TM    MAIN5,X'10'             TEST FRST TITLE SWTCH ON?   4304
         BZ    TITLE1                  NO-THIS MUST BE FIRST       4304
         MVI   MAIN6,X'10'              SET SWITCH FOR A SUBTITLE  4304
         ST    R1,SUBTITA              SAVE SUBTITLE ADDRESS       4304
         B     SKIPTITL                MISS FIRST TITLE SETTING    4304
TITLE1   MVI   MAIN5,X'10'             SET FIRST TITLE SWTCH       4304
         ST    R1,TITLA                SAVE TITLE ADDRESS          4304
SKIPTITL L     TEMP3,TEMPSAVE          RESTORE REG 3 CONTENTS      4304
         DROP  3                                                   4304
         MVI   0(R1),C' '              BLANK FIRST BYTE OF TITLE   4304
         MVC   1(143,R1),0(R1)     BLANK TITLE AREA             OY01168
         TM    TITLESW,X'01'       TEST FOR FIRST TITLE
         BO    SUBTC               NOT FIRST, THEREFORE SUBTITLE
         OI    TITLESW,X'01'       SET TITLE SWITCH FOR SUBTITLE
         LA    TCBR,TCB1           ADDRESS OF TITLE CONTROL BLOCK
         B     TITLEADD            SKIP SUBTITLE ROUTINE
SUBTC    TM    TITLESW,X'02'       TEST FOR FORMATTED SUBTITLT
         BO    TMULT               SUBTITLE ALREADY FORMATTED
         LA    TCBR,TCB2           ADDRESS OF SUBTITLE CONTROL BLOCK
         OI    TITLESW,X'02'       SET TITLE SWITCH FOR FORMATTED SUBT
TITLEADD ST    R1,4(TCBR)          STORE ADDRESS OF TITLE IN TCB
         MVC   0(4,TCBR),PDZERO    ZERO FIRST WORD OF TCB
         L     RZ,LENSAVE          LOAD LIST LENGTH
         L     R1,LOCSAVE          LOAD LIST ADDRESS
         B     TITLEK1             BRANCH TO ITEM TEST
*              SCAN FOR FIELD KEYWORD
TITLEK   LA    ERREG,PPERRH        ADDRESS OF MSG RTN              SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         TM    PPWORK,KEYW         TEST FOR KEYWORD
         BZ    TKEYNO              NO-BRANCH TO NO KEYWORD ROUTINE
*
*              COMMAND = TITLE,IS KEYWORD FIELD
*
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
TITLEK1  CLC   KITEM(5),0(R1)     TEST FOR ITEM KEYWORD            SA0I
         BNE   PPERRH              NO-BRANCH TO MSG RTN            SA0I
         CLI   5(R1),X'4D'        TEST FOR LEFT PARENTHESIS      13695
         BNE   PPERRY                                             M3311
*
*              GET PARAMETERS FOR TITLE FIELD
*
         LA    ERREG,PPERRJ        ADDRESS OF MESSAGE ROUTINE      SA0I
         LA    PARLIST,TITLEP2     ADDRESS OF LITERAL TEST
TITLEP   OI    PPWORK+81,X'01'     SET ON PARAMETER REQUIRED BIT   SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CALL RTN              SA0I
         NI    PPWORK+81,X'FE'     SET OFF PARAMETER REQUIRED BIT  SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    PPERRL              MISSING PARAMETER               SA0I
         BR    PARLIST             EVALVATE PARAMETER
*
TITLEP2  CH    RZ,PH3              IS LITTERAL SMALLER TH 3 ?   OY01168
         BL    PPERRJ              YES,BRANCH TO ERROR MSG SA0I OY01168
         CH    RZ,LIT42            IS LITERAL GT 42 ALLOWING FOR A25956
*                                  END QUOTES                    A25956
         BH    PPERRR              YES-BRANCH TO ERROR MSG         SA0I
         LA    PARLOC,1            LOAD 1
         AR    PARLOC,R1           LOCATION OF LITERAL
         LR    RLIT,RZ             LOAD LENGTH
         SH    RLIT,PH2            LITERAL LENGTH
         TM    PPWORK,PARP         TEST IF LAST PARAMETER
         BO    TP5                 BRANCH TO LENGTH SET
         CLI   PPWORK+82,X'00'     IS THERE A PARTIAL PARAM    @ZA27264
         MVI   PPWORK+82,X'00'     CLEAR FIELD                 @ZA27264
         BNE   SKIPSAVE            YES,SKIP SAVING OF ITEM     @ZA27264
         MVI   TITLESAV,X'40'          CLEAR TITLE SAVE AREA   @ZA27264
         MVC   TITLESAV+1(79),TITLESAV                         @ZA27264
         SR    PARLIST,PARLIST     CLEAR MOVE LENGTH REG       @ZA27264
         LA    BREG,TITLESAV       ADDRESS OF SAVE AREA        @ZA27264
MOVETITL MVC   0(1,BREG),0(PARLOC) MOVE 1 ITEM BYTE            @ZA27264
         CLI   0(PARLOC),X'7D'     MOVED A QUOTE?              @ZA27264
         LA    PARLOC,1(PARLOC)    UP TO NEXT BYTE TO BE MOVED @ZA27264
         LA    BREG,1(BREG)        UP TO NEXT BYTE TO MOVE TO  @ZA27264
         BE    TESTNEXT            YES,TEST IF NEXT ALSO       @ZA27264
MOVENEXT LA    PARLIST,1(PARLIST)  ONE MORE BYTE MOVED         @ZA27264
         CR    PARLIST,RLIT        IS ALL ITEM MOVED?          @ZA27264
         BL    MOVETITL            NO, GO AND MOVE MORE        @ZA27264
         LA    PARLOC,TITLESAV        POINT TO TITLE SAVE AREA @ZA27264
SKIPSAVE LA    PARLIST,TITLEP3     ADDRESS OF LITERAL ROUTINE  @ZA27264
         B     TITLEP              TEST FURTHER PARAMETERS     @ZA27264
TESTNEXT CH    RLIT,PH1            LITERAL LENGTH > 1 ?        @ZA27264
         BNL   NEXTQUOT            YES,TEST IF NEXT A QUOT     @ZA27264
         B     PPERRR              NO,GIVE INVLAID LITERAL MSG @ZA27264
NEXTQUOT CLI   0(PARLOC),X'7D'     ALSO A QUOTE?               @ZA27264
         BNE   PPERRR              NO,GIVE INVALID LITERAL MSG @ZA27264
         LA    PARLOC,1(PARLOC)    UP TO NEXT BYTE TO MOVE     @ZA27264
         B     MOVENEXT            GO AND MOVE NEXT BYTE       @ZA27264
*
TITLEP3  LTR   RZ,RZ               TEST OUTPUT LOCATION
         BE    TP5                 ZERO = FIRST LOCATION
         BAL   BREG,SETPBIN        BRANCH TO CVB ROUTINE
         BE    TP4
         BCTR  PREG,RZ             SUBTRACT ONE FROM LENGTH
TP4      LR    TEMP1,PREG          LOAD LENGTH
         AR    TEMP1,RLIT          ADD LITERAL LENGTH
         CH    TEMP1,MAXOUT1       COMPARE TO MAXIMUM OUTP.LNG. OY01168
         BH    PPERRR              PRINT ERRMSG IEB437I         OY01168
         CH    TEMP1,2(TCBR)       LARGEST END OF BOUNDARY ?    OY01168
         BL    SKPSTOR             NO, DON'T SAVE THE LENGTH    OY01168
         STH   TEMP1,2(TCBR)       STORE END OF LITT. LOC.      OY01168
SKPSTOR  A     PREG,4(TCBR)        ADD TITLE ADDRESS            OY01168
TMVC     MVC   0(1,PREG),0(PARLOC) MOVE LITERAL TO TITLE           3718
         LA    PARLOC,1(0,PARLOC)  ADD ONE                         3718
         LA    PREG,1(0,PREG)      ADD ONE                         3718
         BCT   RLIT,TMVC           SUBTRACT ONE FROM LENGTH & LOOP 3718
         MVC   0(2,TCBR),MAXOUT1   MAXIMUM OUTPUT LENGTH TO TCB OY01168
         B     TITLEK              CONTINUE
*
*
TP5      SR    PREG,PREG           ZERO PARAM LENGTH INDIC
         B     TP4                 BRANCH TO LENGTH TEST
*
*
*
TKEYNO   TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    CSCANZ              NO PARAMETER - BRANCH TO SCAN
         LTR   RZ,RZ               TEST FOR PARAMETER LENGTH
         BE    TITLEK              LENGTH ZERO,BRANCH TO FIELD SCAN
         B     PPERRJ              BRANCH TO ERROR MSG             SA0I
*
TMULT    LA    RZ,PTMULT           MESSAGE CODE
         LA    R1,3                MESSAGE OFFSET
         B     PPERR               BRANCH TO WRITE LINK
TCDPERR  LA    RZ,5                MESSAGE CODE
         LA    R1,PPAR             MESSAGE OFFSET
         B     PPERR               BRANCH TO WRITE LINK
TCDKERR  LA    RZ,4                MESSAGE CODE
         LA    R1,PKEY             MESSAGE OFFSET
         B     PPERR               BRANCH TO WRITE LINK
TISTIC   LA    TEMP3,1             LOAD DISPLACEMENT FACTOR        SA0I
         AR    TEMP3,R1            ADD CCS02 POINTER LOCATION      SA0I
         LA    TEMP4,PPWORK+1      LOAD ADDRESS WORK AREA          SA0I
         SR    TEMP3,TEMP4         CALCULATE COLUMN NUMBER         SA0I
         CVD   TEMP3,DOUBLE        CONVERT TO DECIMAL              SA0I
         OI    DOUBLE+7,X'03'      SET FIELD                       SA0I
         UNPK  FULL,DOUBLE+4(4)    SET UP FOR EBCDIC PRINTOUT      SA0I
         BCR   15,R14              RETURN TO CALLER                SA0I
         EJECT
*
*              COMMAND = EXITS
*
EXITSC   OI    PPWORK+81,X'02'     TURN ON KEYWORD REQ BIT         8397
EXITSCN  LA    ERREG,CDSKIP        ADDRESS OF SKIP ROUTINE         8397
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER              0033
         BZ    EK0                 NO, B AROUND PARAM CHECK        0033
         LTR   RZ,RZ               IS PARAM LENGTH ZERO            0033
         BE    EXITSC              YES, B TO SCAN AGAIN            0033
         B     PPERRH              BRANCH TO ERROR MSG             SA0I
EK0      TM    PPWORK,KEYW         TEST FOR KEYWORD                0033
         BZ    CSCAN1              NOT KEYWORD,BRANCH TO COMMAND TEST
*        TEST FOR VALID KEYWORD
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
         CLC   KINHDR(6),0(R1)    TEST FOR INPUT HEADER KEYWORD    SA0I
         BNE   EK1                 NO-TRY INTLR KEYWD
         LA    PARLOC,EX1          ADDRESS OF INHDR EXIT
         B     EXSCANP             BRANCH TO EXIT NAME ROUTINE
EK1      CLC   KINTLR(6),0(R1)    TEST FOR INPUT TRAILER KEYWORD   SA0I
         BNE   EK3                 NO-TRY INREC KEYWORD
         LA    PARLOC,EX3          ADDRESS OF INTLR EXIT
         B     EXSCANP             BRANCH TO EXIT NAME ROUTINE
EK3      CLC   KINREC(6),0(R1)    TEST IF INPUT RECORD RTN KEYWORD SA0I
         BNE   EK5                 NO-TRY OUTREC KEYWORD
         LA    PARLOC,EXIN         ADDRESS OF INREC EXIT
         B     EXSCANP             BRANCH TO EXIT NAME ROUTINE
EK5      CLC   KOUTREC(7),0(R1)   TEST FOR OTPT REC RTN KYWD       SA0I
         BNE   PPERRH              NO-INVALID KEYWORD              SA0I
         LA    PARLOC,EXOUT        ADDRESS OF OUTREC EXIT
*
*              VALID KEYWORD-GET NAME OF EXIT ROUTINE
EXSCANP  OI    PPWORK+81,X'01'     SET ON PARAMETER REQUIRED BIT   SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         NI    PPWORK+81,X'FE'     SET OFF PARAMETER REQUIRED BIT  SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    PPERRL              NO-BRANCH TO MSG RTN            SA0I
         LTR   RZ,RZ               TEST NAME LENGTH FOR ZERO
         BE    PPERRJ              LENGTH ZERO-BRANCH TO MSG RTN   SA0I
         CH    RZ,PH8              TEST NAME LENFTH FOR EIGHT
         BH    PPERRJ              TOO LONG-BRANCH TO MSG RTN      SA0I
         LR    TEMP2,RZ            LOAD REGISTER WITH NAME LENGTH
         BCTR  TEMP2,RZ            SUBTRACT ONE (RESTORED IN EX-MVC)
         EX    TEMP2,EXPMOV        EXECUTE MOVE INSTRUCTION
         LA    TEMP2,EXLST         ADDRESS OF EXIT LIST
         ST    TEMP2,EXLSTADD      STORE ADDRESS OF EXIT LIST
         B     EXITSCN             CONTINUE EXIT TEST              8397
*
*
EXPMOV   MVC   0(1,PARLOC),0(R1)   MOVE EXIT ROUTINE NAME TO EXIT LIST
         EJECT
*
*              COMMAND = MEMBER
*
MEMBERC  LH    MEMCT,MEMBCT            LOAD MEMBER CNT
          AH    MEMCT,PH1              INCREMENT MEM CNT
          STH   MEMCT,MEMBCT           STORE MEM CNT
         MVC   RECDCNT(2),PDZERO  FOR LAST MEMB.WITHOUT REC.STAT.A36090
         TM    TYPORG,X'01'        TEST FOR PARTITIONED DATA SET   SA0I
         BZ    PPERRU              NOT PARTITIONED-MEMBER INVALID  SA0I
         CLI   RECSW,X'03'   REC. COMM.PREC.FRST MEMBER COMM.    A36082
         BE    PPERRQ        YES,'INVALID COMMAND' MSG           A36082
         OI    RECSW,X'08'   PUT MEMBER COMM.ON                  A36082
          BCTR  MEMCT,0                DECR MEM CNT BY 1
         CH    MEMCT,MAXNAME       COMPARE COUNT TO MAXIMUM ALLOWED
         BL    ERRMESS                                             1769
         L     R1,MAXMSG               ADDRESS OF ERROR MESSAGE    1769
PICK     L     R1,MAXMSG           ADDRESS  OF ERROR MESSAGE       SA0I
         MVC   0(7,R1),KMAXNAME        MOVE 'MAXNAME' TO MESSAGE   1769
         B     MAXERROR                GO TO PRINT OUT MESSAGE     1769
ERRMESS  LA    ERREG,MEMBERNO          ADDRESS OF MESSAGE ROUTINE  1769
*
         OI    PPWORK+81,X'02'     SET ON KEYWORD REQUIRED BIT     SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CALL ROUTINE
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
         TM    PPWORK,KEYW         TEST FOR KEYWORD
         BZ    PPERRI              NOT KEYWORD-WRITE MESSAGE       SA0I
         CLC   KNAME(5),0(R1)     TEST FOR NAME KEYWORD            SA0I
         BNE   PPERRH              NOT NAME-INVALID-WRITE MESSAGE  SA0I
         OI    PPWORK+81,X'01'     SET ON PARAMETER REQUIRED BIT   SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CALL ROUTINE
         NI    PPWORK+81,X'FE'     SET OFF PARAMETER REQUIRED BIT  SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    MEMBHDM2            NOT PARAM-MSG RTN               SA0I
         CH    RZ,PH8              TEST FOR NAME LENGTH EIGHT
         BH    PPERRJ              TOO LONG-BRANCH TO MSG RTN      SA0I
         LTR   RZ,RZ               TEST FOR NAME LENGTH ZERO
         BE    MEMBHDM1            LENGTH ZERO-MSG RTN             SA0I
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    TESTO1              BRANCH TO COMMAND TEST          SA0I
         L     MNTPTER,CURRMNT     ADDRESS OF MEMBER NAME TABLE
         LTR   MEMCT,MEMCT         TEST FOR MEBER COUNT ZERO
         BE    MS5                 COUNT ZERO-BRANCH TO MNT CLEAR
         AH    MNTPTER,LISTLEN     UPDATE MNT POINTER
         TM    GETMA,X'10'         GETM. FOR FI AND REC PARAM.? OY01169
         BNO   MS5                 NO, SKIP                     OY01169
         CLC   0(2,MCBPTER),PDZERO TEST MEMBER CONTROL BLOCK PTR TO 0
         BE    MS5                 POINTER = 0,BRANCH TO MNT CLEAR
         A     MCBPTER,CURRMCB     UPDATE MCB POINTER
         MVC   CURRMCB(4),PDZERO   RESET CURRENT MCB PTR TO ZERO A45130
MS5      MVC   0(8,MNTPTER),PDBLANK     BLANK SPACE IN MNT
         MVC   8(4,MNTPTER),PDZERO      ZERO MEMBER COUNT
         ST    MNTPTER,CURRMNT          STORE MNT ADDRESS
         LR    TEMP2,RZ            LOAD NAME LENGTH
         BCTR  TEMP2,RZ            SUBTRACT ONE (RESTORED IN EX-MVC)
         EX    TEMP2,NAMEMOV       EXECUTE MOVE INSTRUCTION
         OI    TYPORG,X'02'        SET TYPORG
         MVC   SKIPSW(2),PH1      SET SWITCH TO READ RECORDS
         NI    RECORDSW,NEWR       SET RECORD SWITCH
TESTO1   BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         TM    PPWORK,COMM         WAS A COMMAND FOUND?            SA0I
         BZ    PPERRJ              NO-WRITE ERROR MSG              SA0I
         B     PKUP5               CONTINUE WITH COMMAND TEST      SA0I
*
NAMEMOV  MVC   0(1,MNTPTER),0(R1)  MOVE NAME TO MEMBER NAME TABLE
*
*              MESSAGE ROUTINES
MEMBHDM1 ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         L     R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,32               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPIP             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPIPM     MOVE IN MSG  LOCATION           SA0I
HOWIE2   LA    TEMP4,30            LOAD DISPLACEMENT               SA0I
         A     TEMP4,SEYLE         POSITION FOR INSERTING COLUMN   SA0I
         MVC   0(2,TEMP4),FULL+2   MOVE IN COLUMN NUMBER           SA0I
         B     MIKEH               BRANCH TO WRITE LINK            SA0I
MEMBHDM2 ST    R14,REGSAV          SAVE RETURN POINT               SA0I
         BAL   R14,TISTIC          CALCULATE COLUMN NUMBER         SA0I
         BAL   R14,REGSAV          RESTORE CALLERS ADDRESS         SA0I
         LA    RZ,34               MESSAGE DISPLACEMENT            SA0I
         LA    R1,PPMP             MESSAGE POINTER                 SA0I
         MVC   SEYLE(4),VPPMPM     MOVE IN MSG LOCATION            SA0I
         B     HOWIE2              PUT COLUMN NUMBER IN MSG        SA0I
MIKEH    BAL   R14,PREMSG          BRANCH TO MSG LINK              SA0I
         MVI   PPCONCD,X'0C'       SET CONDITION CODE TO 12        SA0I
         B     RECORDNO            BRANCH TO SWITCH SET
MEMBERNO LA    RZ,MERR             MESSAGE CODE
         LA    R1,PMEMBNO          MESSAGE OFFSET
         BAL   R14,PREMSG          BRANCH TO MESSAGE LINK
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    RECORDNO            BRANCH TO SWITCH SET            SA0I
         MVI   PPCONCD,X'08'       SET CONDITION CODE TO EIGHT
RECORDNO MVC   SKIPSW(2),PH12      SET TO SKIP RECORDS
         B     CDSKIP              BRANCH TO SKIP ROUTINE
MEMBNO   LA    RZ,5                MESSAGE CODE
         LA    R1,PPAR             MESSAGE OFFSET
         B     PPERR               BRANCH TO WRITE LINK
*     DATA IS LAST OR ONLY KEYWORD ON LABELS CARD                  9608
*     IF CONV IS SPECIFIED FOR LABELS THE DATA KEYWORD MUST BE     9608
*     PRESENT AFTER IT.                                            9608
LABLSC   OI    PPWORK+81,X'02'         SET KEYWORD REQ BIT        S9608
LABLSCN  LA    ERREG,CDSKIP            GET ADR OF CARD SKIP ROUT   9608
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         TM    PPWORK,PAR                                          UL0H
         BZ    LKO                      NO,TEST KEYWORD            UL0H
         LTR   RZ,RZ                    IS PARAM LNGTH ZERO        UL0H
         BE    LABLSC                                              UL0H
         B     PPERRH              BRANCH TO ERROR MESSAGE         SA0I
LKO      TM    PPWORK,KEYW                                         UL0H
         BZ    CSCAN1                                              UL0H
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
TSTLBLKW CLC   KDATA(5),0(R1)     TEST FOR DATA KEYWORD            SA0I
         BE    TSTDATAP                                            UL0H
         CLC   KCONV(5),0(R1)     TEST FOR CONV KEYWORD            SA0I
         BE    LABCONV                  *                          UL0H
         MVI   LBLCONSW,X'00'                                      UL0H
         B     PPERRH              BRANCH TO ERROR MESSAGE         SA0I
TSTDATAP BAL   KREG,PPSCANP                                        UL0H
         CLC   PNO,0(R1)                                           UL0H
         BE    PARNO                                               UL0H
         CLC   PALL,0(R1)                                          UL0H
         BE    PARALL                                              UL0H
         CLC   PONLY,0(R1)                                         UL0H
         BE    PARONLY                                             UL0H
         CLC   PYES,0(R1)                                          UL0H
         BE    PARYES                                              UL0H
         B     PPEOFA8             BRANCH TO WRITE MESSAGE         SA0I
PARNO    CH    RZ,PH2              IS PARAM LENGTH=2?              SA0I
         BNE   PPERRJ              NO-WRITE ERROR MESSAGE          SA0I
         MVZ   LBLPRTSW,=X'00'     SET LABEL PRINT SW OFF          SA0I
         MVI   PROCKY,X'40'                                        UL0H
         B     LABLSCN                 GO TO SCAN NEXT CARD        9608
PARALL   CH    RZ,PH3              IS PARAM LENGTH=3?              SA0I
         BNE   PPERRJ              NO-WRITE ERROR MESSAGE          SA0I
         MVC   PROCKY,X'20'                                        SA0I
         B     LABLSCN                 GO TO SCAN NEXT CARD        9608
PARONLY  CH    RZ,PH4              IS PARAM LENGTH =4?             SA0I
         BNE   PPERRJ              NO-WRITE ERROR MESSAGE          SA0I
         MVI   PROCKY,X'10'                                        SA0I
         B     LABLSCN                 GO TO SCAN NEXT CARD        9608
PARYES   CH    RZ,PH3              IS PARAM LENGTH=3?              SA0I
         BNE   PPERRJ              NO-BRANCH TO ERROR MESSAGE      SA0I
         MVI   PROCKY,X'80'                                        SA0I
         B     LABLSCN                 GO TO SCAN NEXT CARD        9608
LABCONV  BAL   KREG,PPSCANP                                        UL0H
         CLC   PXE,0(R1)                                           UL0H
         BE    SETHXLB                                             UL0H
         CLC   PPZ,0(R1)                                           UL0H
         BNE   0(ERREG)                                            UL0H
LABLZ    OI    LBLCONSW,X'03'                                      UL0H
         B     LABLSC                                              UL0H
SETHXLB  OI    LBLCONSW,X'01'                                      UL0H
         B     LABLSC                                              UL0H
         EJECT
*
*              COMMAND = RECORD,EXAMINE KEYWORDS
*
RECORDC  DS    0H
          XI    RECSW,X'03'
         CLC   COMPMEM(2),MEMBCT       COMPARE MEMBER NBS
         BE    COUNTREC            IF SAME MEMBER BRANCH          M4118
         MVC   COMPMEM(2),MEMBCT   UPDATE MEMBER TO NEW COUNT     M4118
         MVC   RECDCNT(2),PH1      RESET RECORD COUNT TO ONE      M4118
         XC    IDENTCON(2),IDENTCON  ID SW. ZERO FOR NEXT MEMBER A36090
         XC    COUNTID(2),COUNTID    ID.CNT. ZERO FOR NEXT MEM.  A36090
         XC    COMPREC(2),COMPREC RECD GRP.NUMB, 0 FOR NEXT MEM. A36090
         B     RECD2               CONTINUE PROCESSING            M4118
*
*  CHECK FOR ERROR WHEN MULTIPLE RECORD CARDS WITHOUT IDENTS    PTM4118
COUNTREC LH    TEMP1,RECDCNT       GET RECORD COUNT FOR THIS      M4118
         AH    TEMP1,PH1            MEMBER OR PS DATA SET         M4118
         STH   TEMP1,RECDCNT        AND INCREMENT BY ONE          M4118
         LH    TEMP1,COUNTID       GET COUNT OF RECORDS WITH      M4118
         AH    TEMP1,PH1            IDS TO ADD TEMPORARY ONE      M4118
         CH    TEMP1,RECDCNT       IF IDS+1 EQUAL TOTAL RECORDS   M4118
         BE    RECD2                THEN BRANCH TO CONTINUE       M4118
         B     MEMBNO               ERROR IF NO IDENT BETWEEN REC M4118
RECD2    OI    PPWORK+81,X'02'     TURN ON KEYWORD REQUIRED BIT   SAOI
         BAL   BREG,CALLSCAN       BRANCH TO CCS02                 SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER              0033
         BO    PPERRH              YES,WRITE ERROR MESSAGE         SA0I
         TM    PPWORK,KEYW         TEST FOR KEYWORD
         BZ    CDSKIP              NO KEYWORD-BRANCH TO CARD SKIP
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
         OI    COMMSW,RCOMM        SET COMMAND SWITCH FOR RECORD
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    RECDKEY1            YES-BRANCH AROUND PROCESSING    SA0I
         TM    RECORDSW,FIRSTR     TEST IF FIRST GROUP
         BO    RECD3               NOT FIRST GROUP
         SR    TEMP1,TEMP1         ZERO WORK REGISTER
         STH   TEMP1,0(MCBPTER)    ZERO IN MCB COUNT
         LH    TEMP1,PH2           LOAD WORK REGISTER WITH 2 (MCB LEN)
         ST    TEMP1,CURRMCB       STORE IN MCB LENGTH INDICATOR
RECD3    L     TEMP1,CURRMCB       LOAD MCB LENGTH
         AH    TEMP1,GCBLEN        ADD GROUP CONTROL BLOCK LENGTH
         C     TEMP1,MCBREM        COMPARE TO MCB SPACE REMAINING
         BH    PPERRJ              INSUFFICIENT SPACE IN MCB TABLE SA0I
         LR    GCBPTER,MCBPTER     LOAD GROUP CONTROL BLOCK POINTER
         A     GCBPTER,CURRMCB     ADD MCB LENGTH
         LA    FCBPTER,FCBL        LOAD CONSTANT EIGHT-FCB LENGTH
         ST    FCBPTER,CURRGCB     STORE FCB LENGTH
*              SET POINTER FOR FCB
         LR    FCBPTER,GCBPTER          LOAD FCB ADDRESS
         MVC   0(GCBL,GCBPTER),PDZERO   ZERO 8 BYTES OF GCB
         B     RECDKEY1                 BRANCH TO KEYWORD CHECK
*
*              EXAMINE RECORD KEYWORDS
*
RECDKEY  BAL   BREG,CALLSCAN       BRANCH TO CALL
RECDKEY1 TM    PPWORK,KEYW         TEST FOR KEYWORD
         BZ    RKEYNO              NO KEYWORD-BRANCH TO PARAM CHECK
         NI    PPWORK+81,X'FD'     SET OFF KEYWORD REQUIRED BIT    SA0I
         LA    ERREG,PPERRJ        ADDRESS OF MSG RTN              SA0I
         CLC   KIDENT(6),0(R1)    TEST FOR IDENT KEYWORD           SA0I
         BE    IDKEY               YES-BRANCH TO IDENT PARAM CHECK
         CLC   KFIELD(6),0(R1)    TEST FOR FIELD KEYWORD           SA0I
         BNE   PPERRH              INVALID KEYWORD-BRANCH TO MSG   SA0I
*
*              KEYWORD = FIELD,EXAMINE PARAMETER LIST
*
         CLI   6(R1),X'4D'         IS LEFT PAREN PRESENT          M3312
         BNE   PPERRY              NO-WRITE ERR MSG               M3312
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    PKUP1               YES-BRANCH AROUND PROCESSING    SA0I
         LH    TEMP1,FIELDCNT    COUNT OF FLD PARAM'S FOUND SO FAR 1769
         LA    TEMP1,1(TEMP1)          INCREMEMT COUNT BY 1        1769
         CH    TEMP1,MAXFLDS           COMPARE NO. OF FIELDS FOUND 1769
*                                         TO NUMBER ALLOWED        1769
         BNH   CONTINUE                MAXIMUM NOT EXCEEDED, BRANCH1769
         L     R1,MAXMSG               TOO MANY FLD PARAM'S        1769
         MVC   0(7,R1),KMAXFLDS        PREPARE TO WRITE ERROR MSG  1769
         B     MAXERROR                                            1769
CONTINUE STH   TEMP1,FIELDCNT          UPDATE FLD PARAM COUNT      1769
         L     TEMP1,CURRMCB       LOAD MCB LENGTH
         AH    TEMP1,FCBLEN        ADD FIELD CONT BLOCK LENGTH
         C     TEMP1,MCBREM        COMPARE TO MCB SPACE REMAINING
         BH    PPERRJ              NO ROOM IN MCB TABLE            SA0I
         L     TEMP2,CURRGCB       ADDRESS OF GROUP CONTROL BLOCK
         LA    TEMP2,8(0,TEMP2)    INCREMENT BY NAME LENGTH
         ST    TEMP2,CURRGCB       STORE INCREMENTED ADDRESS
         AH    FCBPTER,FCBLEN      ADD FCB LENGTH TO FCB ADDRESS
         MVC   0(FCBL,FCBPTER),PDZERO   ZEROS TO UPDATED FCB
PKUP1    LA    PARLIST,FLDP1       ADDRESS OF FIELD LENGTH CHECK   SA0I
FLDPAR   OI    PPWORK+81,X'01'     SET ON PARAMETER REQUIRED BIT   SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CALL                  SA0I
         NI    PPWORK+81,X'FE'     SET OFF PARAMETER REQUIRED BIT  SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    PPERRL              NO-BRANCH TO MSG RTN            SA0I
         BR    PARLIST             BRANCH TO PARAM CHECK
*
*              FIRST PARAMETER IS FIELD LENGTH
*
FLDP1    LA    PARLIST,FLDP2       ADDRESS OF INPUT LOCATION CHECK
         LTR   RZ,RZ               TEST FOR FIELD LENGTH
         BE    PPERRJ              NO LENGTH SPEC-BRANCH MSG RTN   SA0I
         BAL   BREG,SETPBIN        BRANCH TO CVB ROUTINE
         BE    PPERRJ              LENGTH=0,BRANCH TO MESSAGE RTN  SA0I
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    FPNEXT              CONTINUE THROUGH THE PARAMETERS SA0I
         STH   PREG,0(FCBPTER)     STORE LENGTH IN FIELD CONTROL BLOCK
         B     FPNEXT              CONTINUE THROUGH PARAMETERS
*
*              SECOND PARAMETER IS RELATIVE INPUT LOCATION
*
FLDP2    LA    PARLIST,FLDP3       ADDRESS OF CONVERSION CHECK
         LTR   RZ,RZ               TEST IF RILOC SPEC
         BE    FPNEXT              NO-CONTINUE THROUGH PARAMETERS
         BAL   BREG,SETPBIN        BRANCH TO CVB ROUTINE
         BE    FPNEXT              RILOC=0,CONTINUE THROUGH PARAMETERS
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    FPNEXT              CONTINUE THROUGH THE PARAMETERS SA0I
         BCTR  PREG,RZ             DECREMENT LENGTH BY ONE
         STH   PREG,2(FCBPTER)      STORE INPUT LOCATION IN FCB
         B     FPNEXT              CONTINUE THROUGH PARAMETERS
*
*              THIRD PARAMETER IS CONVERSION CODE
*
FLDP3    LA    PARLIST,FLDP4       ADDRESS OF OUTPUT LOCATION TEST
         LTR   RZ,RZ               TEST IF CONVERSION SPECIFIED
         BE    FPNEXT              NO CONVERSION-CONTINUE THRU PARAMS
         CLC   PHE(2),0(R1)        TEST FOR PRINTABLE HEX PARAMETER
         BE    FLDPOR              YES-BRANCH TO FCB OR
         CLC   PXE(2),0(R1)        TEST FOR PRINTABLE HEX PARAMETER
         BNE   FLDP3A              NOT HEX-BRANCH TO UNPACK TEST
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    FPNEXT              CONTINUE THROUGH THE PARAMETERS SA0I
FLDPOR   OI    4(FCBPTER),X'01'    SET CONVERSION FOR PRINTABLE HEX
         B     FPNEXT              CONTINUE THROUGH PARAMETERS
FLDP3A   CLC   PPZ(2),0(R1)        TEST FOR PACKED TO UNPACKED CONVERS
         BNE   PPERRJ              INVALID PARAM-BRANCH TO MSG RTN
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    FPNEXT              CONTINUE THROUGH THE PARAMETERS SA0I
         OI    4(FCBPTER),X'03'    SET CONVERSION FOR UNPACK DECIMAL
*
FPNEXT   TM    PPWORK,PARP         TEST FOR END OF PARAMETER LIST
         BO    FLDPEND             END-BRANCH TO PARAM END ROUTINE
         B     FLDPAR              CONTINUE THROUGH PARAMETERS
*
*              FOURTH PARAMETER IS RELATIVE OUTPUT LOCATION
*
FLDP4    LTR   RZ,RZ               TEST IF OUTPUT LOCATION SPECIFIED
         BE    FLDPEND             NOT SPEC-BRANCH TO PARAM END RTN
         BAL   BREG,SETPBIN        BRANCH TO CVB ROUTINE
         BE    FLDPEND             PARAM ZERO-BRANCH TO END ROUTINE
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    FLDPEND             BRANCH TO END ROUTINE           SA0I
         BCTR  PREG,RZ             DECREMENT LOC BY ONE
         STH   PREG,6(FCBPTER)     STORE OUTPUT LOCATION IN FCB
*
*              END OF PARAMETER LIST
*
FLDPEND  CLI   PPCONCD,X'0C' IS COND. CODE = 12                  A36097
         BE    RECDKEY       YES, EXAMINE OTHER REC. KEYWORDS    A36097
         LA    TEMP1,1                                           A36097
         AH    TEMP1,0(GCBPTER)    INCREMENT FIELD COUNT
         STH   TEMP1,0(GCBPTER)    STORE NEW FIELD COUNT
         B     RECDKEY
*
*
*        EXAMINE IDENT PARAMETERS
*
IDKEY    LA    PARLIST,IDP1        ADDRESS OF LITERAL TEST
         CLI   6(R1),X'4D'         IS LEFT PAREN PRESENT          M3312
         BNE   PPERRY              NO-WRITE ERR MSG               M3312
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    IDPAR               BRANCH AROUND PROCESSING        SA0I
         CLC   COMPREC(2),RECDCNT  COMPARE RECORDS NUMBERS        M4118
         BE    IDPAR               EQUAL-NO COUNT MULTPLE IDENTS  M4118
         MVC   COMPREC(2),RECDCNT  UNEQUAL-UPDATE RECORD NUMBERS  M4118
         LH    BREG,COUNTID        GET COUNT OF RECORDS WITH      M4118
         AH    BREG,PH1              IDENT PARAMETERS             M4118
         STH   BREG,COUNTID         AND INCREMENT BY ONE          M4118
         LH    BREG,IDENTCON       LOAD NO OF IDENTS
         LA    BREG,1(0,BREG)      ADD ONE FOR THIS IDENT
         STH   BREG,IDENTCON       STORE UPDATED IDENT NUMBER
         CH    BREG,MAXGPS             IS ACTUAL NO.OF IDENT STMTS 1769
*                                       GREATER THAN NO.SPECIFIED  1769
         BNH   IDPAR                   NO--CONTINUE.               1769
         L     R1,MAXMSG               ADDRESS OF ERROR MESSAGE    1769
         MVC   0(6,R1),KMAXGPS         MOVE'MAXGPS' TO MESSAGE     1769
         MVI   6(R1),X'40'             MOVE BLANK INTO LAST BYTE   1769
         B     MAXERROR                GO TO PRINT OUT MESSAGE     1769
IDPAR    OI    PPWORK+81,X'01'     SET ON PARAMETER REQUIRED BIT   SA0I
         BAL   BREG,CALLSCAN       BRANCH TO CALL                  SA0I
         NI    PPWORK+81,X'FE'     SET OFF PARAMETER REQUIRED BIT  SA0I
         TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    PPERRL              NO-PARM-BRANCH TO MSG RTN       SA0I
         BR    PARLIST             BRANCH TO LIT TEST
*              FIRST PARAMETER IS LENGTH OF LITERAL
*
IDP1     LA    PARLIST,IDP2        ADDRESS OF LIT PARAM RTN
         CH    R0,PH1              IS LENGTH GT ONE               M3311
         BH    PPERRJ              YES-WRITE ERR MSG              M3311
         CLI   0(R1),X'F0'         IS CHAR NUMERIC                M3311
         BL    PPERRJ              NO-WRITE ERR MSG               M3311
         CLI   0(R1),X'F9'         IS CHAR NUMERIC                M3311
         BH    PPERRJ              NO-WRITE ERR MSG               M3311
         MVC   LITLEN+3(1),0(R1)   MOVE LENGTH OF LIT TO SAVE AREA
         NI    LITLEN+3,X'0F'      LENGTH NOT OVER FIFTEEN
         B     IDPAR               BRANCH TO CALL NEXT PARAM
*
*              SECOND PARAMETER IS A LITERAL
*
IDP2     LTR   RZ,RZ               TEST FOR LITERAL PARAMETER
         BE    PPERRL              NONE-BRANCH TO MSG RTN          SA0I
         SH    RZ,PH2              SUBTRACT 2 (APOSTROPHES)FOR LIT LEN
         LTR   RZ,RZ               TEST FOR LITERAL LENGTH ZERO
         BE    PPERRJ              LENGTH ZERO,BRANCH TO MSG RTN   SA0I
         C     RZ,LITLEN           COMPARE ACTUAL TO STATED LENGTH
         BNE   PPERRJ              UNEQUAL-BRANCH TO MSG RTN       SA0I
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    PKUP2               BRANCH AROUND PROCESSING        SA0I
         LH    TEMP2,CURRLIT       LOAD NO OF BYTES STORED IN LIT POOL
         LH    TEMP1,MAXLITS       LOAD MAXIMUM CHARACTERS
         LR    PREG,TEMP2          CURRENT NO OF LIT CHARACTERS
         AR    PREG,RZ             ADD LENGTH OF THIS LITERAL
         CR    PREG,TEMP1          COMPARE TO-DATE TOTAL TO MAXIMUM
         BNH   STORLIT                                             1769
         L     R1,MAXMSG               ADDRESS OF ERROR MESSAGE    1769
         MVC   0(7,R1),KMAXLITS        MOVE 'MAXLITS' TO MESSAGE   1769
         B     MAXERROR                GO TO PRINT OUT MESSAGE     1769
STORLIT  STH   PREG,CURRLIT            STORE NO, OF LIT CHAR USED. 1769
         STH   RZ,2(GCBPTER)       STORE LITERAL LENGTH IN GCB
         AH    R1,PH1              INCREMENT LIT LOC TO SKIP APOSTROPHE
         L     TEMP1,LITADD        ADDRESS OF LITERAL POOL
         AR    TEMP1,TEMP2         ADD CURRENT SPACE USED
         STH   TEMP2,4(GCBPTER)    STORE CURRENT SPACE IN GCB
         LR    TEMP2,RZ            LOAD LENGTH OF LITERAL
         BCTR  TEMP2,RZ            SUBTRACT ONE (RESTORED IN EX-MVC)
         EX    TEMP2,IDLITMOV      EXECUTE MOVE INSTRUCTION
*              TEST FOR END
PKUP2    TM    PPWORK,PARP         TEST FOR END OF LIST            SA0I
         BO    RECDKEY             END-BRANCH TO RECORD KEYWORD CHECK
         LA    PARLIST,IDP3        NOT END,CONTINUE THROUGH PARAMETERS
         B     IDPAR               BRANCH TO PARAMETER CHECK
*
*              THIRD PARAMETER IS RELATIVE INPUT LOCATION
*
IDP3     LTR   RZ,RZ               TEST FOR PARAMETER
         BE    RECDKEY             BRANCH TO KEYWORD CHECK
         BAL   BREG,SETPBIN        BRANCH TO CVB ROUTINE
         BE    RECDKEY             PARAM ZERO-BRANCH TO KEYWORD CHECK
         CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    RECDKEY             BRANCH AROUND PROCESSING        SA0I
         BCTR  PREG,RZ             SUBTRACT ONE FROM INPUT LOC (INCRD)
         STH   PREG,6(GCBPTER)     STORE REL INPUT LOCATION IN GCB
         B     RECDKEY             BRANCH TO KEYWORD CHECK
*
IDLITMOV MVC   0(1,TEMP1),0(R1)    MOVE LITERAL TO LIT POOL
*
*
RKEYNO   TM    PPWORK,PAR          TEST FOR PARAMETER
         BZ    RECDEND             NOT PARAM-BRANCH TO REC CARD END
         B     PPERRJ              YES,WRITE ERROR MESSAGE         SA0I
*
*              RECORD CARD SUCCESSFULLY SCANNED
*
RECDEND  CLI   PPCONCD,X'0C'       IS CONDITION CODE =12?          SA0I
         BE    CSCANZ              BRANCH AROUND PROCESSING        SA0I
         LH    TEMP1,0(MCBPTER)    LOAD GROUP COUNT                SA0I
         LTR   TEMP1,TEMP1         TEST GROUP COUNT FOR ZERO
         BH    REND5               THIS IS NOT FIRST GROUP
         OI    RECORDSW,FIRSTR     SET SWITCH FOR FIRST GROUP
         L     MNTPTER,CURRMNT     LOAD CURRENT MNT ADDRESS
         ST    MCBPTER,8(MNTPTER)  STORE MCB ADDRESS IN MNT
REND5    AH    TEMP1,PH1           INCREMENT GROUP COUNT
         STH   TEMP1,0(MCBPTER)    STORE UPDATED GROUP COUNT
         L     TEMP1,CURRGCB       LOAD GCB LENGTH
         A     TEMP1,CURRMCB       ADD MCB LENGTH
         ST    TEMP1,CURRMCB       STORE TOTAL LENGTH
         B     CSCANZ              BRANCH TO SCAN
IDLITNO  LA    RZ,RERR                  MESSAGE CODE
         B     RCDNOSP1            BRANCH TO LOAD REGISTER ONE
RCDNOSP  LA    RZ,5                MESSAGE CODE
RCDNOSP1 LA    R1,PPAR             MESSAGE OFFSET
         B     PPERR               BRANCH TO MESSAGE LINK
*                                                                  0033
*                                                                  0033
MAXERROR LA    RZ,14                   MESSAGE CODE                1769
         LA    R1,23                   MESSAGE OFFSET              1769
         B     PPERR                   BRANCH TO MESSAGE LINK.     1769
         EXTRN MAXMSGS                                             1769
MAXMSG   DC    A(MAXMSGS)                                          1769
*
PREMSG   SLL   R1,8                SET UP REGISTERS
         AR    R1,RZ               FOR MESSAGE WRITE
         L     R15,PMSGWRTA        ADDRESS OF MESS WRITE RTN-EXTERN
         BR    R15                 BRANCH TO MESSAGE WRITE ROUTINE
*
         ENTRY BLKRTN                                              BS0H
BLKRTN   LA    RZ,7        MESSAGE CODE FOR I/O ERROR ON SYSIN     BS0H
         LA    R1,PEOJIO                MESSAGE POINTER            BS0H
         LA    R14,DDRTN1         RETURN ADDRESS AFTER PRINTING    BS0H
         B     PREMSG             BRANCH TO MESSAGE WRITE ROUTINE  BS0H
         ENTRY DDRTN
DDRTN    LA    RZ,11               DDERROR1 MESSAGE NUMBER
         LA    R1,21               DDERROR1 MESSAGE OFFSET IN IEBPPMSG
         LA    R14,DDRTN1          RETURN ADDRESS AFTER PRINTING
         B     PREMSG              BRANCH TO MESSAGE EXIT
DDRTN1   MVI   PPCONCD,X'0C'       SET RETURN CODE TO TWELVE
         B     PPRET               BRANCH TO RETURN ROUTINE
*
         EJECT
***********************************************************************
*
*              IEBPPAL1 - CONSTANTS
*
LITLEN   DC    F'0'                LENGTH OF LITERAL
*
*        COMMAND LIST
*
CPRINT   DC    C'PRINT '          INIT OPERATION- PT OR            SA0I
CPUNCH   DC    C'PUNCH '          PUNCH                            SA0I
CTITLE   DC    C'TITLE '          REQUESTS TITLE,SUBTITLE          SA0I
CEXITS   DC    C'EXITS '          IDENTIFIES EXIT ROUTINES         SA0I
CMEMBER  DC    C'MEMBER '         IDENTIFIES MEMBERS OF PDS        SA0I
CRECORD  DC    C'RECORD '         DEFINES RECORD GROUPS            SA0I
CLABELS  DC    C'LABELS '                                          SA0I
*
*
*        KEYWORD LIST - PRINT/PUNCH
*
KTYPORG  DC    C'TYPORG='         SPECIFIES DATA SET ORGANIZATION  SA0I
KTOTCONV DC    C'TOTCONV='        SPECIFIES OUTPUT CONVERSION      SA0I
KCNTRL   DC    C'CNTRL='          SPECIFIES CONTROL CHARACTER      SA0I
KINITPG  DC    C'INITPG='         SPECIFIES INIT PG NUMB-PT        SA0I
KMAXLINE DC    C'MAXLINE='        SPECIFIES MAX LINES/PAGE-PT      SA0I
KCDSEQ   DC    C'CDSEQ='          SPECIFIES INIT SEQ NO-PUNCH      SA0I
KCDINCR  DC    C'CDINCR='         SPECIFIES SEQ. INCR-PUNCH        SA0I
KSTOPAFT DC    C'STOPAFT='        SPECIFIES NO INPT RCDS TO BE PROCSA0I
KSKIP    DC    C'SKIP='           SPECIFIES PROC  INCREMENT        SA0I
KMAXNAME DC    C'MAXNAME='        SPECIFIES MAX MEMBER STS         SA0I
KMAXFLDS DC    C'MAXFLDS='        SPECIFIES MAX FLD PARMS          SA0I
KMAXGPS  DC    C'MAXGPS='         SPECIFIES MAX IDENT PARMS        SA0I
KMAXLITS DC    C'MAXLITS='        SPECIFIES MAX LIT CHARS          SA0I
KPREFRM  DC    C'PREFORM='        SPECIFIES FORMATTED OUTPUT       SA0I
KSTRTAFT DC    C'STRTAFT='        SPECIF. THE START NBR          A45135
*        KEYWORD LIST - LABELS                                     UL0H
KDATA    DC    C'DATA='                                            SA0I
KCONV    DC    C'CONV='                                            SA0I
*
*        KEYWORD - TITLE STATEMENT
*
KITEM    DC    C'ITEM='           SPEC TITLE OR SUBTITLE INFO      SA0I
*
*        KEYWORD LIST - RECORD STATEMENT
*
KFIELD   DC    C'FIELD='          EDIT INFO-SPECIFIED PROCESSING   SA0I
KIDENT   DC    C'IDENT='          IDENTIFIES LAST RCD-FIELD PARM   SA0I
*
*        KEYWORD - MEMBER STATEMENT
*
KNAME    DC    C'NAME='           IDENTIFIES MEMBER BY NAME/ALIAS  SA0I
*
*        KEYWORD LIST - EXITS STATEMENT
*
KINHDR   DC    C'INHDR='          SPECIFIES NME INPT HDR RTN       SA0I
KINTLR   DC    C'INTLR='          SPECIFIES NME INPT TRLR RTN      SA0I
KINREC   DC    C'INREC='          SPECIFIES NME OF P9E796CESS RTN  SA0I
KOUTREC  DC    C'OUTREC='         SPECIFIES NME OF PREOUTPUT RTN   SA0I
*
*
*
DOUBLE   DS    D                   DOUBLE WORD FOR CVD             SA0I
FULL     DS    F                   FULL WORD TO STORE COLUMN NUMB  SA0I
REGSAV   DS    F                   FULL WORD TO SAVE REG CONTENTS  SA0I
TITLESAV DS    20F                 TITLE SAVE AREA             @ZA27264
SEYLE    DS    F                   FULL WORD TO SAVE ADDR MSG      SA0I
BIT      DC    X'00'               FIRST CARD INDICATOR            SA0I
BITS     DC    X'00'               SECOND CARD INDICATOR           SA0I
RECSW    DC    X'00'              TO TEST ORDER OF RECORD MEMBER COMM
GETMA    DC    X'00'                                             A36090
*
*
*        NON-NUMERIC PARAMETERS
*
PPS      DC    C'PS'               SPEC PHYSICAL SEQUENTIAL ORGANIZAT
PPO      DC    C'PO'               SPECIFIES PARTITIONED ORGANIZATION
PHE      DC    C'HE'               SPEC PRINTABLE HEX CONVERSION
PXE      DC    C'XE'               SPEC PRINTABLE HEX CONVERSION
PPZ      DC    C'PZ'               SPEC UNPACKED DECIMAL CONVERSION
*
PNO      DC    C'NO'                                               UL0H
PALL     DC    C'ALL'                                              UL0H
PONLY    DC    C'ONLY'                                             UL0H
PYES     DC    C'YES'                                              UL0H
SYSIN    DC    X'00'               SET TO 00 IND. SYSIN EMPTY    A21407
*              X'FF'               SET TO FF FOR SYSIN NOT EMPTY A21407
*
*
COMM     EQU   X'08'               INDICATES COMMAND
KEYW     EQU   X'04'               INDICATED KEYWORD
PAR      EQU   X'02'               INDICATES PARAMETER
PARP     EQU   X'03'               INDICATES FINAL PARAMETER
EOF      EQU   X'20'               INDICATES END OF FILE
ERROR    EQU   X'80'               INDICATES ERROR
BYPASS   EQU   X'40'               INDICATES SKIP RECORD STATEMENTS
BYPASSNO EQU   X'BF'               INDIC NO SKIP OF RECORD STATEMENTS
NEWCD    EQU   X'01'               INDICATES NEW CARD
RIO      EQU   X'02'               INDICATES I/O ERROR ON SYSIN
FIRSTR   EQU   X'01'               INDICATES FIRST RECORD
NEWR     EQU   X'FE'               INDICATES NEW RECORD
RCOMM    EQU   X'02'               INDICATES RECORD COMMAND
*
*
SAVEADD  DS    18F                 REGISTER SAVE AREA
*
PPWORK   DS    145B                WORK AREA
*
WORKLEN  EQU   145                 LENGTH OF WORK AREA
*
*
*        MESSAGE CODES
*
EOFCDE   EQU   0                   END OF FILE
RERR     EQU   4                   RECORD ERROR
MERR     EQU   5                   MEMBER ERROR
IERR     EQU   14                  LITERAL ERROR
*
PTERM1   EQU   1                   COMMAND ERROR
PTERM2   EQU   2                   COMMAND ERROR
PTMULT   EQU   3                   TITLE ERROR
PKEY     EQU   4                   KEYWORD ERROR
PPAR     EQU   5                   PARAMETER ERROR
PMEMBNO  EQU   7                   MEMBER ERROR
PEOF     EQU   10                  END OF FILE
PEOJIO   EQU   13                  I/O ERROR ON SYSIN
SYNTMSG  EQU   19                  ERROR INDICATOR ON
NOSYSIN  EQU   20   *********TO BE CHECKED                       A21407
PPIK     EQU   31                  INVALID KEYWORD ER9OR           SA0I
PPIP     EQU   32                  INVALID PARAMETER ERROR         SA0I
PPMK     EQU   33                  MISSING KEYWORD ERROR           SA0I
PPMP     EQU   34                  MISSING PARAMETER ERROR         SA0I
PPMC     EQU   35                  MISSING COMMAND ERROR           SA0I
PPIC     EQU   36                  INVALID COMMAND ERROR           SA0I
PPIL     EQU   37                  INVALID LITERAL ERROR           SA0I
PPIN     EQU   38                  INVALID NAME ERROR              SA0I
PPBC     EQU   39                  CONTINUATION CARD ERROR         SA0I
*
*
*        REGISTER EQUATES
*
TEMP2    EQU   15                  WORK REGISTER
R15      EQU   15                  EXTERN BRANCH,RETURN CODE
R14      EQU   14                  BAL RETURN
TEMP1    EQU   14                  WORK REGISTER
R13      EQU   13                  SAVE REGISTER
ERREG    EQU   12                  ERROR BRANCH REGISTER
BASE     EQU   11                  BASE REGISTER                   SA0I
PARLIST  EQU   10                  INTERNAL BRANCH REGISTER
BASER    EQU   9                   BASE REGISTER
PREG     EQU   8                   PARAMETER REGISTER
PARLOC   EQU   7                   PARAMETER POINTER
BREG     EQU   6                   INTERNAL BRANCH RETURN
TCBR     EQU   5                   POINTER TO TITLE CONTROL BLOCK
GCBPTER  EQU   5                   POINTER TO GROUP CONTROL BLOCK
TEMP4    EQU   5                                                   SA0I
MNTPTER  EQU   5                   POINTER TO MEMBER NAME TABLE
KREG     EQU   5                   INTERNAL BRANCH REGISTER
TREG     EQU   4                   DTABLE BASE REGISTER
MEMCT    EQU   3                   MEMBER COUNT REGISTER
TEMP3    EQU   3                                                   SA0I
RLIT     EQU   3                   LITERAL LENGTH REGISTER
FCBPTER  EQU   3                   POINTER TO FCB
MCBPTER  EQU   2                   POINTER TO MEMBER CONTROL BLOCK
R1       EQU   1                   MESSAGE POINTER
RZ       EQU   0                   MESSAGE POINTER
R0       EQU   0
*
*
*
TEMPSAVE DC    F'0'                    REGISTER 3 SAVE AREA        4304
PARMADR  DC    F'0'                    PARAMETER SAVE AREA         4304
FREEA    DC    F'0'           FREECORE ADDR PASSED TO PPAL1        4304
IDENTCON DC    H'0'                IDENT SWITCH
RECDCNT  DC    H'0'                                                0324
COMPMEM  DC    H'00'               COUNT TO COMPARE RECD GRP NUMB M4118
COMPREC  DC    H'00'               COUNT TO COMPARE MEMBER NUMB   M4118
COUNTID  DC    H'00'               COUNT OF REC CARDS WITH IDENTS M4118
PPSYSI   DC    D'0'                DDNAME FOR SYSIN
SKIPSW   DC    H'0'                RECORD SKIP SWITCH
MASK     DC    H'0'                NO MEMBER SWITCH
PLANT    DC    H'0'                FULL MCB SWITCH
PH1      DC    H'1'                COUNT INCREMENT
PH2      DC    H'2'                INCREMENT
PH3      DC    H'3'                                                SA0I
PH4      DC    H'4'                PRE-NAME MNT AREA
PH8      DC    H'8'                NAME LENGTH
PH10     DC    H'10'
PH12     DC    H'12'               MNT AREA PER NAME
LIT42    DC    H'42'                                             A25956
MAXOUT1  DC    H'144'              MAX OUTPUT LEN IS 144        OY01168
PDBLANK  DC    CL8' '              DOUBLE WORD OF BLANKS (FOR BLANKING)
PDZERO   DC    D'0'                DOUBLE WORD OF ZEROES (FOR ZEROING)
*
*
*
TABLE    EQU   *
*
*        COMMAND AND KEYWORD SWITCHES
*
PPCSW1   DC    X'0'                COMMAND SWITCH-PRINT/PUNCH
PPCSW2   DC    X'0'      NU
TITLESW  DC    X'0'                TITLESWITCH
EXITSW   DC    X'0'      NU
MEMBERSW DC    X'0'      NU
RECORDSW DC    X'0'                RECORD SWITCH
PLISTSW  DC    X'0'      NU
FIRSTSW  DC    X'0'      NU        FIRST TIME SWITCH
COMMSW   DC    X'0'                COMMAND SWITCH
PPCONCD  DC    X'0'                RETURN CODE
MAXOUT   DC    H'144'              MAX OUTPUT LEN IS 144        OY01168
MCBADD   DC    F'0'                ADDRESS OF MCB
*
LENSAVE  DS    F                   LENGTH SAVE AREA
LOCSAVE  DS    F                   LOCATION SAVE AREA
DBLWD    DS    1D                 WORK AREA FOR CVB ROUTINE
*
*
FIELDCNT DC    H'0'         COUNT OF FLD PARAM'S FOUND SO FAR      1769
MAXNAME  DC    H'0'                MAX MEMBER STATEMENTS
MEMBCT   DC    H'0'                MEMBER COUNT
MAXGPS   DC    H'0'                MAX IDENT PARAMETERS
MAXLITS  DC    H'0'                MAX LITERAL CHARACTERS
MAXFLDS  DC    H'0'                MAX FIELD PARAMETERS
CURRLIT  DC    H'0'                NO OF BYTES STORED IN LITERAL POOL
CURRGCB  DC    F'0'                LENGTH OF CURRENT GCB
CURRMCB  DC    F'0'                LENGTH OF CURRENT MCB
MCBREM   DC    F'0'                REMAINING STORAGE IN MCB
CURRMNT  DC    F'0'                POINTER TO MNT
MCBLEN   DS    F                   MCB LENGTH
TABLEN   EQU   *-TABLE             TABLE LENGTH
*
FCBL     EQU   8                   LENGTH INDICATOR
GCBL     EQU   8                  LENGTH INDICATOR
*
*
LISTLEN  EQU   PH12                LENGTH INDICATOR
FCBLEN   EQU   PH8                 LENGTH INDICATOR
GCBLEN   EQU   PH8                 LENGTH INDICATOR
*
*
*        EXTERNAL REFERENCES
*
CDWRT    DC    V(CCWRITE)          ADDRESS OF WRITE EXTERN
PMSGWRTA DC    V(PPMSGWRT)         ADDRESS OF MESSAGE WRITE EXTERN
R7    EQU    7                                                     7715
FREESYND DS    F                  ADDR OF DYNAMIC MSG AREA         7715
MSGSYNDF DC    CL96'IEB421I I/O ERROR'       SYNAD I/O ERROR MSG   7715
VZZPR    DC    V(ZZPR)               ADDR OF PRINT ROUTINE IN PPUN17715
*--------------------MESSAGE POINTERS------EXTERNAL-------------------*
VPPIKM   DC    V(PPIKM)            INVALID KEYWORD MESSAGE         SA0I
VPPIPM   DC    V(PPIPM)            INVALID PARAMETER MESSAGE       SA0I
VPPMKM   DC    V(PPMKM)            MISSING KEYWORD MESSAGE         SA0I
VPPMPM   DC    V(PPMPM)            MISSING PARAMETER MESSAGE       SA0I
VPPMCM   DC    V(PPMCM)            MISSING COMMAND MESSAGE         SA0I
*
*
*
*
*
DTABLE   DSECT
DBEGIN   DS    0F
DDN1     DS    CL8                 DDNAME FOR SYSUT1
DDN2     DS    CL8                 DDNAME FOR SYSUT2
EXLSTADD DS    A                   ADDRESS OF EXIT LIST
LITADD   DC    F'0'                ADDRESS OF LITERAL POOL
MNTADD   DC    F'0'                ADDRESS OF MNT
RCB      DS    0X
TYPORG   DC    X'0'               DATA SET ORGANIZATION-DEFAULT=PS
TOTCONV  DC    X'0'
PPSW1    DC    X'0'
PPCTL    DC    X'0'
CDNOB    DC    F'0'
CDINCRB  DC    F'0'
INITPG   DC    H'0'               INIT PAGE NUMBER-DEFAULT=1
PMAXLINE DC    H'0'               MAX LINES PER PAGE-DEFAULT=60
INITSTOP DC    H'0'               RECORDS TREATED IF STOPAFT SPECIFIED
INITSKIP DC    H'0'               NTH RECORD TREATED-DEFAULT=ALL
STRTAFT  DC    H'0'               RECORD     TO START AFT        A45135
TCB      DS    0F                 TITLE CONTROL BLOCK
TCB1     DC    H'0'                    LENGTH
         DC    H'0'                    ROLOC
         DC    F'0'                    ADDR
*                                 SUBTITLE
TCB2     DC    H'0'                    LENGTH
         DC    H'0'                    ROLOC
         DC    F'0'                    ADDR
PREFMTP  DC    X'00'               FORMATTED OUTPUT
LBLPRTSW DC    X'F0'                    DEFAULT VALUES SET TO PRNT UL0H
PROCKY   DC    X'80'                    PROCESS =YES               UL0H
LBLCONSW DC    X'00'                    NO LABEL CONV.             UL0H
EXLST    DS    0X                 LIST OF USER EXITS
EX1      DC    BL8'0'                                              UL0H
EX3      DC    BL8'0'                                              UL0H
EXIN     DS    CL8                     INREC
EXOUT    DS    CL8                     OUTREC
EXLEN    EQU   *-EXLST            EXIT LIST LENGTH
DLEN     EQU   *-DBEGIN           DTABLE LENGTH
*
*      FREECOR TABLE CONTAINS DATA FOR LATER  FREEMAINS FOR DTABLE 4304
*                                                                  4304
FREECOR  DSECT                                                     4304
DTBL     DS    F              DTABLE LENGTH                        4304
DTBA     DS    F              ADDRESS OF DTABLE                    4304
GS1L     DS    F              LENGTH OF MNT                        4304
MNTA     DS    F              ADDRESS OF MNT                       4304
MCBL     DS    F              LENGTH OF MCB                        4304
MCBA     DS    F              ADDRESS OF MCB                       4304
LITS     DS    F              LENGTH-COUNT  OF LITERALS            4304
LITA     DS    F              ADDRESS OF LITERALS                  4304
TITLA    DS    F              ADDRESS OF TITLE                     4304
SUBTITA  DS    F              ADDRESS OF SUBTITLE                  4304
*                                                                  4304
*        SWITCHES  TO INDICATE SPECIFIC GETMAINS DONE              4304
MAIN1    DS    XL1            DTABLE                               4304
MAIN2    DS    XL1            MEMBER NAMETABLE                     4304
MAIN3    DS    XL1            MCB                                  4304
MAIN4    DS    XL1            LITERALS                             4304
MAIN5    DS    XL1            TITLE                                4304
MAIN6    DS    XL1            SUBTITLE                             4304
         END   IEBPPAL1
