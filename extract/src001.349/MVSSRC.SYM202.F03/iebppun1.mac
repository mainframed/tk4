         TITLE 'IEBPPUN109--ROOT SEGMENT OF IEBPTPCH'
*****   *****   *****   *****   *******   *****   *****   *****   *****
*                                                                     *
* IEBPPUN1     ROOT SEGMENT OF PRINT/PUNCH
*
* THE PRINT-PUNCH PROGRAM IS BROKEN DOWN INTO FIVE MODULES WHICH IN
* TURN ARE PUT IN AN OVERLAY STRUCTURE. THE ROOT SEGMENT IS MADE UP OF
* TWO MODULES: IEBPPUN1,WHICH GETS INITIAL CONTROL; AND IEBPPMSG, WHICH
* IS THE ERROR MESSAGE MODULE. ONE LEG OF THE OVERLAY TREE IS MADE UP
* OF TWO MODULES: IEBPPALI, WHICH IS THE CONTROL CARD ANALYSER ROUTINE;
* AND IEBCCS02, WHICH IS THE CONTROL CARD SCAN ROUTINE. THE OTHER LEG
* OF THE OVERLAY TREE IS THE MAIN PROCESSING MODULE IEBPPCH1.
*
* IEBPPUN1
*
* THIS MODULE GETS INITIAL CONTROL, AND THEREFORE DOES ALL THE INVOKER
* CHECKING. IF THE PROGRAM IS INVOKED, THIS MODULE DIAGNOSES THE THREE
* POSSIBLE PARAMETER LISTS THAT CAN BE PASSED. THEN THIS MODULE CALLS
* THE CONTROL CARD SCAN ROUTINE WHICH IN CONJUNCTION WITH THE CONTROL
* CARD ANALYSER PROCESSES THE CONTROL STATEMENTS FOR PRINT/PUNCH.
* RETURN COMES TO IEBPPUN1 WHICH IN TURN CALLS THE MAIN PROCESSING
* MODULE OF PRINT PUNCH. THE FINAL RETURN TO THE SCHEDULER IS DONE FROM
* THIS MODULE. IEBPPUN1 CONTAINS ALL SYSPRINT INFORMATION AND PROVIDES
* FOR WRITING ALL ERROR MESSAGES. THIS MESSAGE WRITER ALSO INCLUDES THE
* FACILITIES TO PRINT A HEADER ON EACH PAGE WITH ASCENDING PAGE
* NUMBERS. TO USE THIS MESSAGE WRITER, THE FOLLOWING LINKAGE CONVENTION
* MUST BE FOLLOWED.
* REGISTER 0 MUST CONTAIN THE LENGTH OF THE MESSAGE.
* REGISTER 1 MUST CONTAIN THE ADDRESS OF THE MESSAGE.
* BAL 14,ZZPR MUST BE USED TO LINK TO ZZPR WHICH IS THE NAME OF THE
* MESSAGE WRITER ROUTINE.
* THIS MODULE ALSO CONTAINS A DUMMY DCB AND THE DCB FOR SYSPRINT.
*
*
*        ENTRY POINT     IEBPTPCH
*
*        INPUT           IF INVOKED, THIS MODULE WILL SET UP THE
*                        DDLIST AND SET THE APPROPRIATE SWITCHES.
*
*        OUTPUT          ALL DIAGNOSTICS AND INFORMATIONAL MESSAGES
*                        ARE PRINTED.
*
*        EXTERNAL RTNS   THIS MODULE CALLS THE CONTROL CARD ANALYSER
*                        MODULE AND THE MAIN PROCESSOR MODULE.
*
*        EXITS           THIS MODULE DOES A FINAL RETURN AT EOJ.
*
*        WORK AREAS      THIS MODULE OBTAINS CORE FOR AN INFORMATION
*                        TABLE TO BE SET UP BY THE ANALYSER AND USED BY
*                        THE MAIN PROCESSOR.
*
*        ATTRIBUTES      NON-REUSABLE
*
*****   *****   *****   *****   *******   *****   *****   *****   *****
         EJECT
IEBPTPCH CSECT
*0118088800-091000,091600,094000,095600-095800                     BS0H
*037000,054600                                                    24304
*093000                                                           29476
*094920-094950,095800                                             27715
*A030300                                                         A38794
*C031200,032000,066200                                           A38794
*D030400,030600,030800                                           A38794
*A041760-041780,041900                                           A41816
*D041760                                                         A41816
*C041706                                                        OY01168
*C078600-079000,079800,086000,093600                           @ZA07383
*D085000,085200                                                @ZA07383
         ENTRY PRPCH
*
R0       EQU   0
RZ       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
DCBREG   EQU   5
RLEN     EQU   7
R8       EQU   8                                                   BS0H
BASER    EQU   9
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
DDU1     EQU   58
DDU2     EQU   66
DDIN     EQU   34
DDPR     EQU   42
*
PRPCH    SAVE  (14,12),T,IEBPPUN1-JULY-1966
         BALR  BASER,R0
         USING *,BASER             ESTABLISH ADDRESSABILITY
         ST    R13,SAVEREG+4
         LA    R1,SAVEREG               GET PTR TO SAVE AREA
         ST    R1,8(R13)                STORE PTR TO S.A. IN SAVE AREA
         L     R1,24(R13)               RESTORE R1
         LA    R13,SAVEREG         SET UP SAVE AREA FOR CALLED ROUTINE
         MVI   PPTBLE,X'0'         INITIALIZE PRINT/PUNCH TABLE
         MVC   PPTBLE+1(PPTLEN-1),PPTBLE  TO ZEROES
*****   *****   *****   *****   *******   *****   *****   *****   *****
*
* THIS ROUTINE CHECKS THE PARAMETER LISTS PASSED WHEN THE PROGRAM IS
* INVOKED. REGISTER 1 POINTS TO A THREE FULL WORD AREA IN CORE WHICH
* CONTAINS ADDRESSES OF THE THREE POSSIBLE PARAMETER LISTS. THE HIGH
* ORDER BYTE OF EACH OF THE FULL WORDS MUST BE EITHER HEX 00 OR HEX
* 80. THE 80 SIGNIFIES THAT THIS IS THE LAST PARAMETER LIST POINTER.
* THE FIRST POINTER IS TO THE LIST THAT EQUALS THE PARM VALUES FOUND ON
* THE EXECUTE CARD, AND IT DOES NOT APPLY TO THIS UTILITY. THE SECOND
* POINTER IS TO THE DDNAME LIST WHICH MUST BEGIN ON A HALF WORD
* BOUNDARY THAT IS NOT ALSO A FULL WORD BOUNDARY. THE TWO HIGH ORDER
* BYTES CONTAIN A COUNT OF THE NUMBER OF BYTES IN THE REMAINDER OF THE
* LIST. ALL ENTRIES IN THE LIST HAVE A MAXIMUM LENGTH OF EIGHT BYTES
* AND ARE LEFT JUSTIFIED AND PADDED WITH BLANKS. IF A NAME IS OMITTED
* WITHIN THE LIST, THE EIGHT-BYTE ENTRY MUST CONTAIN BINARY ZEROES.
* NAMES ARE OMITTED FROM THE END BY SHORTENING THE LIST. THE SEQUENCE
* OF THE ENTRIES IS AS FOLLOWS:
*
*              ENTRY 1    00000000
*                    2    00000000
*                    3    00000000
*                    4    00000000
*                    5    SYSIN
*                    6    SYSPRINT
*                    7    00000000
*                    8    SYSUT1
*                    9    SYSUT2
*
* THE THIRD PARAMETER LIST PERTAINS TO HEADER INFORMATION
*
*****   *****   *****   *****   *******   *****   *****   *****   *****
         TM    0(R1),X'80'         IS THIS THE LAST PARAMETER LIST PTR
         BO    PPHDRS              YES, THIS IS THE LAST PARAMETER LIST
*                                  PTR, AND ZEROES NOT CHECKED
         L     R2,4(R1)            OBTAIN ADDRESS OF DDNAME LIST
         LH    RLEN,0(R2)          PUT LENGTH OF DDNAME LIST IN REG
         LTR   RLEN,RLEN           IS LENGTH EQUAL TO ZERO
         BE    TESTEND             YES, PROCEED TO CHECK FOR A THIRD
*                                  PARAMETER LIST PTR
         CH    RLEN,PH40           IS LENGTH LESS THAN OR EQUAL TO 40
         BL    TESTEND             YES, CHECK FOR THIRD PARAMETER LIST
         CLI   DDIN(R2),X'00'      IS THERE A SYSIN DDNAME
         BE    PPRDD4    NO, CONTINUE TO TEST SECOND
*                                  PARAMETER LIST
         MVC   PPSYSI(8),DDIN(R2)  MOVE SYSIN DDNAME TO PPDDNAM+24
PPRDD4   CH    RLEN,PH48           IS LENGTH LESS THAN OR EQUAL TO 48
         BL    TESTEND             YES, CHECK FOR THIRD PARAMETER LIST
         CLI   DDPR(R2),X'00'      IS THERE A SYSPRINT DDNAME
         BE    PPRDD8              NO, CONTINUE TO TEST SECOND
*                                  PARAMETER LIST
         LA    DCBREG,PPOUT        LOAD REGISTER WITH ADDRESS OF DCB
         MVC   DDNAM(8,DCBREG),DDPR(R2) MOVE DDNAME FROM LIST TO DCB
PPRDD8   CH    RLEN,PH64           IS THERE A SYSUT1 DDNAME
         BL    TESTEND             NO, CHECK FOR THIRD PARAMETER LIST
         MVC   PPUT1(8),DDU1(R2)   MOVE SYSUT1 DDNAME TO TABLE
         CH    RLEN,PH72           IS THERE A SYSUT2 DDNAME
         BL    TESTEND             NO, CHECK FOR THIRD PARAMETER LIST
         MVC   PPUT2(8),DDU2(R2)   MOVE SYSUT2 DDNAME TO TABLE
TESTEND  TM    4(R1),X'80'         IS THIS THE LAST PARAMETER LIST PTR
         BO    PPHDRS              YES, BRANCH TO HEADER ROUTINE
         MVC   PPHEADER(120),PPHDRBL CLEAR HEADER
         L     R2,8(R1)            LOAD ADDRESS OF HEADER INFORMATION
         LH    RLEN,0(R2)          LOAD LENGTH OF HEADER INTO REGISTER
         LTR   RLEN,RLEN           IS LENGTH EQUAL TO ZERO
         BE    PPHDRS              NO, REDUCE LENGTH BY ONE
          B     PPHNMOV       BRANCH TO HEADE ROUTINE            A38794
PPHDRS   SR    RLEN,RLEN           INITIALIZE LENGTH REGISTER TO ZERO
PPHNMOV  MVC   PPHEADER(32),PHDR   SET UP STANDARD HEADER        A38794
         MVC   PPHDPAGE(9),PAGE    SET UP PAGE NUMBER
         CH    RLEN,PH4                 IS LENGTH LESS THAN 4
         BL    PPROPEN             YES, BRANCH TO OPEN OUTPUT
         MVC   PPHDNO(4),2(R2)         SET UP HEADER NUMBER      A38794
PPROPEN  OPEN  (PPOUT,OUTPUT)      OPEN PRINTER DCB
*****   *****   *****   *****   *******   *****   *****   *****   *****
* IF THE SYSPRINT DCB HAS NOT BEEN OPENED, RETURN WITH A CONDITION CODE
* OF 12 AND NO ERROR MESSAGE. ALL INFORMATION NUMBERS EXCEPT HEADER
* INFORMATION NUMBERS ARE LESS THAN 512. WHEN THE REGISTERS ARE SAVED
* IN ZZPR, TWO BYTES FROM RZ ARE STORED IN ZZSW. IF 512 WAS PUT IN RZ
* TO INDICATE HEADER INFORMATION, THIS WILL APPEAR AS X'02' IN ZZSW.
*****   *****   *****   *****   *******   *****   *****   *****   *****
         LA    R1,PPOUT            LOAD ADDRESS OF PTR DCB
         TM    OFLGS(R1),X'10'     WAS DCB OPENED
         BZ    DDERROR             NO, BRANCH TO ERROR ROUTINE
         TM    DFLG,X'10'               IS BLKSIZE ERROR FLAG SET  BS0H
         BC    1,DDERROR                YES, BRANCH TO ERROR RTN   BS0H
         LA    R1,PPHEADER         YES, LOAD HEADER ADDRESS IN REGISTER
         LA    RZ,HEADER           LOAD MESSAGE LENGTH INTO REGISTER
         BAL   R14,ZZPR            BRANCH TO MESSAGE WRITER
         L     R1,SAVEREG+4
         L     R1,24(R1)           RESTORE REGISTER 1
         TM    0(R1),X'80'         IS THIS LAST PARAMETER LIST PTR
         BO    CALLANAL            YES, BRANCH
*
         LH    RLEN,0(R2)          IS THERE CONTROL INFORMATION
         LTR   RLEN,RLEN
         BNH   CALLANAL            THERE ARE CONTROL CARDS
         CLC   2(2,R2),PPINT       ARE THERE INTERNAL PARAMETERS
         BE    PPINTERN            YES, BRANCH
CALLANAL LA    1,FREECORE          GET ADDRESS OF FREECORE TABLE   4304
         ST    1,FREE@             SAVE ADDR AND PASS IT TO PPAL1  4304
         CALL  IEBPPAL1,(PPSYSI,FREE@)    CALL ANALYZER ROUTINE    4304
*
         LTR   R15,R15             IS THERE A RETURN CODE
         BE    POSTSCAN            NO MESSAGES
         STC   R15,PPCONCD         STORE RETURN CODE
         CLI   PPCONCD,X'0C'       HAS THE DCB BEEN OPENED PROPERLY
         BNL   PPTERM              NO, CLOSE AND RETURN
*
POSTSCAN ST    R1,PPTBLEAD         STORE MESSAGE ADDRESS
*
PRECALL  MVC   N1DD(8,R1),PPUT1    PREPARE PARAMETER TABLE BY MOVING
         MVC   N2DD(8,R1),PPUT2    DDNAMES SYSUT1 AND SYSUT2
*
         CALL  IEBPPCH1            CALL PRINT/PUNCH ROUTINE
*
         SR    R4,R4               INITIALIZE REGISTER TO ZERO
         IC    R4,PPCONCD          ENTER PRINT/PUNCH CONDITION CODE
         CR    R4,R15              IS CONDITION CODE RETURNED FROM
*                                  PRPUN LESS THAN THE CONDITION CODE
*                                  RETURNED FROM PPANAL
         BC    10,PPTERM           NO, CLOSE AND RETURN
PPDDTERM STC   R15,PPCONCD         YES, STORE NEW CONDITION CODE
*
PPTERM   TM    GOTMAIN,X'10'       TEST FOR STORAGE GOTTEN         4304
         BC    8,PPTERM1           NO - SKIP FREEMAIN              4304
         L     RZ,AREASIZE         GET TBLE SIZE TO FREEE          4304
         L     R1,PPTBLEAD         GET TBLE ADDR TO FREE           4304
         FREEMAIN  R,A=(1),LV=(0)  FREE DYNAMIC CORE               4304
PPTERM1   TM   GOTMAIN1,X'10'      TEST FOR GET MAIN               4304
         BC    8,PPRET2            IF NO BRANCH                    4304
         L     RZ,DTBLENG          GET LENGTH IN REG 0             4304
         L     R1,DTBADDR          GET DTBLE ADDR TO FREE          4304
         MVI   GOTMAIN1,X'00'      RESET SWITCH                    4304
         FREEMAIN   R,A=(1),LV=(0)    FREE DTBLE CORE              4304
PPRET2   TM    GOTMAIN2,X'10'      TEST FOR GET MAIN               4304
         BC    8,PPRET3            IF NO - BRANCH                  4304
         L     RZ,GS1LENG          GET LENGTH IN REG               4304
         L     R1,MNTADD2          GET ADDRESS IN REGISTER         4304
         MVI   GOTMAIN2,X'00'      RESET SWITCH TO FREE            4304
         FREEMAIN  R,A=(1),LV=(0)     FREE MNT CORE                4304
PPRET3   TM    GOTMAIN3,X'10'      TEST FOR MCB GET MAIN           4304
         BC    8,PPRET4            IF NO THEN BRANCH               4304
         L     RZ,MCBLEN2          GET LENGTH OF MCB AREA          4304
         L     R1,MCBADD2          GET ADDR OF MCB AREA            4304
         MVI   GOTMAIN3,X'00'      RESET SWITCH TO FREE            4304
         FREEMAIN  R,A=(1),LV=(0)    FREE MCB CORE                 4304
PPRET4   TM    GOTMAIN4,X'10'      TEST FOR LITERAL GET MAIN       4304
         BC    8,PPRET5            IF NONE BYPASS FREE             4304
         L     RZ,LITSAV           GET LENGTH OF LITS IN REG 0     4304
         L     R1,LITADD2          GET ADDR OF LITS IN REG 1       4304
         MVI   GOTMAIN4,X'00'      RESET SWITCH FOR FREED          4304
         FREEMAIN   R,A=(1),LV=(0)     FREE LITERALS AREA          4304
PPRET5   TM    GOTMAIN5,X'10'      TEST FOR TITLE GET MAIN         4304
         BC    8,PPRET6            IF NONE THEN BYPASS FREE        4304
         L     R1,TITLADD2         GET TITLE ADDR IN REG 1         4304
         MVI   GOTMAIN5,X'00'      SET SWITCH TO FREE              4304
         FREEMAIN   R,A=(1),LV=144     FREE TITLE CORE          OY01168
PPRET6   TM    GOTMAIN6,X'10'      TEST FOR  SUBTITLE STORAGE      4304
         BC    8,PPRET7            IF NONE BYPASS FREE             4304
         L     R1,STITLADD         ELSE GET ADDR OF SUBTITLE       4304
         MVI   GOTMAIN6,X'00'      TURN OFF SWITCH                 4304
         FREEMAIN  R,A=(1),LV=120      FREE SUBTITLE CORE          4304
PPRET7   LA    R1,PPOUT            LOAD ADDR. OF OUTP. DCB       A41816
         TM    OFLGS(R1),X'10'     WAS DCB OPENED ?              A41816
         BZ    RETSYS              NO, DO NOT CLOSE              A41816
         CLOSE (PPOUT)             CLOSE OUTPUT DCB              A41816
         FREEPOOL  PPOUT           FREEPOOL PPOUT BUFFER CORE    A41816
*
RETSYS   EQU   *                                                 A41816
         SR    R15,R15             CLEAR REGISTER 15 AND
         IC    R15,PPCONCD         ENTER THE STORED CONDITION CODE
         L     R13,SAVEREG+4       RESTORE REGISTERS AND RETURN CONTROL
         RETURN (14,12),RC=(15)    TO THE CALLING PROGRAM
*
DDERROR  MVI   PPCONCD,X'0C'       SET CONDITION CODE TO 12
         B     PPTERM              CLOSE AND RETURN
*                                                                  BS0H
*                         DCB EXIT ROUTINE                         BS0H
*                                                                  BS0H
DCBEXIT  LA    R1,PPOUT                                            BS0H
         USING IHADCB,R1                                           BS0H
         CLI   DCBLRECL+1,X'00'   IS LRECL FILLED IN               1825
         BNE   *+8                YES.. GO ON                      1825
         MVI   DCBLRECL+1,X'79'   GET DEFAULT VALUE                1825
         LH    R3,DCBBLKSI              LOAD SYSPRINT BLOCKSIZE    BS0H
         LTR   R3,R3                                               BS0H
         BC    2,TESTBLK                TEST BLOCKSIZE             BS0H
         MVI   DCBBLKSI+1,X'79'         INSERT DCB BLKSIZE         BS0H
         BCR   15,R14                   RETURN                     BS0H
TESTBLK  SR    R2,R2                    TEST FOR MODULAR BLOCKSIZE BS0H
         LA    R4,121                                              BS0H
         DR    R2,R4                                               BS0H
         LTR   R2,R2                                               BS0H
         BCR   8,R14                    IF MODULAR, RETURN         BS0H
         MVI   DFLG,X'10'               SET BLKSIZE ERROR FLAG     BS0H
         MVC   DCBBLKSI(2),DCBLRECL     MOVE LRECL TO BLKSIZE      BS0H
         DROP  R1                                                  BS0H
         RETURN
*
*
*        PROCESS INTERNAL PARAMETER LIST
*
         ENTRY PPDDTERM
*
PPINTERN LA    R4,10
         SR    RLEN,R4             SUBTRACT 10 FROM RECORD LENGTH
         LA    RZ,UTBLEN           OBTAIN TABLE LENGTH
         CR    RLEN,RZ             IS RECORD LENGTH GREATER THAN
*                                  TABLE LENGTH
         BNH   PPNO                NO, INVALID TABLE LENGTH
         ST    RZ,AREASIZE         STORE SIZE OF GET MAIN AREA     4304
         MVI   GOTMAIN,X'10'       SET SWITCH FOR LATER FREE       4304
         GETMAIN   R,LV=(0)           OBTAIN  CORE FOR WORKAREA    4304
         ST    R1,PPTBLEAD         STORE ADDRESS OF AREA ACQUIRED
         LA    R2,10(R2)           UPDATE POINTER TO INTERNAL PARAMETER
         USING DUTBLE,R2           ESTABLISH ADDRESSABILITY TO TABLES
         USING DTABLE,R1
*
         MVI   TABLE,0             INITIALIZE TABLE TO ZEROES
         MVC   TABLE+1(TABLEN-1),TABLE
         EJECT
*
*        CONSTRUCT TABLE TO BE EXAMINED BY IEBPPCH1
*
         MVC   EXLSTADD(4),UEXLADD SET EXIT LIST ADDRESS
         MVC   LITADD(4),ULITADD   MOVE IN USER LITERAL POOL ADDRESS
         MVC   MNTADD(4),UMNTADD   MOVE IN MEMBER NAME TABLE ADDRESS
         L     R4,URCBADD          LOAD ADDRESS OF SWITCHES TO TEST
         MVC   RCB(RCBLEN),0(R4)   MOVE IN SWITCHES TO TEST
         L     R4,UTCBADD          LOAD ADDRESS OF TABLE CONTROL BLOCK
         MVC   TCB(TCBLEN),0(R4)   MOVE IN TABLE CONTROL BLOCK
*
         L     R4,MNTADD           LOAD MEMBER NAME TABLE ADDRESS
         L     R4,0(R4)            OBTAIN FIRST WORD OF TABLE
         TM    TYPORG,X'02'        TEST TYPE ORGANIZATION
         BZ    PPINTA              NO NAMED PDS
         LTR   R4,R4               IS THIS A PARTIAL PDS
         BNH   PPNO                YES, NO NAMED MEMBERS, BRANCH
         B     PPINTB              NO, BRANCH
PPINTA   LTR   R4,R4               IS THIS A TOTAL PDS
         BH    PPNO                YES, BRANCH
*
PPINTB   SR    R4,R4               INITIALIZE REGISTER TO ZERO
         LA    R3,120              LOAD RECORD LENGTH INTO REGISTER
         CH    R4,TCB1             IS THERE A TITLE
         BE    PPINTC              NO, BRANCH
         LH    R2,TCB1             DETERMINE THE LENGTH OF
         AH    R2,TCB1+2           THE TITLE
         CR    R2,R3               IS TITLE LENGTH GREATER THAN 120
         BH    PPNO                YES, INVALID TITLE
PPINTC   CH    R4,TCB2             IS THERE A SUBTITLE
         BE    PPINTD              NO, BRANCH
         LH    R2,TCB2             DETERMINE LENGTH OF SUBTITLE
         AH    R2,TCB2+2
         CR    R2,R3               IS SUBTITLE LENGTH GREATER THAN 120
         BH    PPNO                YES, INVALID SUBTITLE
PPINTD   LA    1,FREECORE          GET ADDR OF FREECOR TABLE       4304
         ST    1,FREE@             SAVE ADDR AND PASS IT TO PPAL1  4304
         CALL  IEBPPAL1,(PPSYSI,FREE@),VL     ANALYZE CONTROL CARDS4304
         L     R1,PPTBLEAD         LOAD ADDRESS OF PRINT/PUNCH TABLE
         B     PRECALL             BRANCH
*
PPNO     LA    R1,PPINVLD          LOAD POINTER
         SLL   R1,8                MOVE POINTER TO ALLOW SPACE FOR ID
         LA    RZ,PPINVAL          LOAD ID CODE
         AR    R1,RZ               PUT ID CODE IN SAME REG AS POINTER
         LA    R15,PPMSGWRT        OBTAIN ADDRESS OF MESSAGE WRITER
         BALR  R14,R15             PRINT OUT THE APPROPRIATE MESSAGE
         MVI   PPCONCD,X'0C'       SET CONDITION CODE
         B     PPTERM              CLOSE AND RETURN
         EJECT
*
*
PHMOV    MVC   PPHEADER(1),2(R2)   MOVE HEADER INFORMATION
*
*        FORMAT FOR HEADER LABEL
PPHDRBL  DC    C' '                CONTROL INDICATOR
PPHEADER DC    2C' '
         DC    3CL32' '
PPHDPAGE DC    C'PAGE '
PPHDNO   DC    CL17'0001'
*
*
PAGE     DC    C'PAGE 0001'
PHDR     DC    CL32'PRINT/PUNCH DATA SET UTILITY'
SAVEREG  DS    18F                 SAVE AREA
*
PPTBLEAD DS    F'0'                PRINT/PUNCH TABLE ADDRESS
FREE@    DC    F'0'          FREE CORE TABLE ADDR PASSED TO PPAL1  4304
GOTMAIN  DC    X'00'         INDICATES  GETMAIN DONE IN PPUN1
AREASIZE DC    F'0'          SIZE OF TABLE IN PPUN1                4304
*                                                                  4304
*   FREECORE TABLE CONTAINS DATA TO FREE MAIN STORAGE FOR DTABLE   4304
*                                                                  4304
FREECORE DS    0F                                                  4304
DTBLENG  DC    F'0'                LENGTH OF DTABLE                4304
DTBADDR  DC    F'0'                ADDRESS OF DTABLE               4304
GS1LENG  DC    F'0'                MNT LENGTH                      4304
MNTADD2  DC    F'0'                ADDRESS OF MNT                  4304
MCBLEN2  DC    F'0'                LENGTH OF MCB                   4304
MCBADD2  DC    F'0'                ADDR OF MCB                     4304
LITSAV   DC    F'0'                LENGTH OF LITERALS              4304
LITADD2  DC    F'0'                ADDRESS OF LITERALS             4304
TITLADD2 DC    F'0'                ADDRESS OF TITLE                4304
STITLADD DC    F'0'                ADDRESS OF SUBTITLE             4304
*                                                                  4304
*        SWITCHES TO INDICATE WHICH GETMAINS WERE EXECUTED         4304
*                                                                  4304
GOTMAIN1 DC    X'00'          DTABLE                               4304
GOTMAIN2 DC    X'00'          MNT                                  4304
GOTMAIN3 DC    X'00'          MCB                                  4304
GOTMAIN4 DC    X'00'          LITERALS                             4304
GOTMAIN5 DC    X'00'          TITLE                                4304
GOTMAIN6 DC    X'00'          SUBTITLE                             4304
*
PPTBLE   DS    0X
PPDDNAM  DS    4D                  DDNAME LIST IN PRINT/PUNCH TABLE
PPCONCD  DC    X'0'                CONDITION CODE INDICATOR
PPTLEN   EQU   *-PPTBLE            LENGTH OF PRINT/PUNCH TABLE
*
PPINT    DC    C'IN'
PPUT1    EQU   PPDDNAM
PPUT2    EQU   PPDDNAM+8
PPSYSI   EQU   PPDDNAM+24
*
*        CONSTANTS USED TO DETERMINE DDNAME LIST LENGTH
PH4      DC    H'4'
PH40     DC    H'40'
PH48     DC    H'48'
PH64     DC    H'64'
PH72     DC    H'72'
         EJECT
*
         USING *,R15
*
         ENTRY PPMNMSG
PPMNMSG  LR    RZ,R1               PRESERVE CONTENTS OF REGISTER 1
         LA    R1,MNPTER           *LOCATE THE 18TH ERROR MESSAGE BY
         SLL   R1,5                *ADDING THE ADDRESS OF THE 1ST MSG
         A     R1,PPMSGADD         *TO THE LENGTH OF THE FIRST 17 MSGS
         MVC   PPERRMSG(32),0(R1)  *AND MOVE MSG INTO WORK AREA
         LR    R1,RZ               RESTORE REGISTER 1
         MVC   PPERRMSG+7(8),0(R1) MOVE PROPER NAME INTO MESS.   A38794
         MVC   PPMIDN(2),MERR      MOVE PROPER MSG NUMBER INTO MSG
         LA    RZ,39               PUT MSG LENGTH INTO REGISTER 0
         LA    R1,PPMAREA          PUT MSG ADDRESS NTO REGISTER 1
         B     ZZPR                BRANCH TO MSG WRITER ROUTINE
*
         ENTRY PPMSGWRT
         USING *,15
PPMSGWRT LR    RZ,R1               PRESERVE CONTENTS OF REGISTER 1
         SLL   RZ,24               CLEAR THE THREE HIGH ORDER BYTES
         SRL   RZ,24               BY SHIFTING TO BRING IN ZEROES
         SRL   R1,8                * LOCATE THE APPROPRIATE ERROR
         SLL   R1,5                * MESSAGE AND
         A     R1,PPMSGADD         * MOVE INTO THE ERROR MESSAGE
         MVC   PPERRMSG(32),0(R1)  *WORK AREA
         CVD   RZ,DBLWD            CONVERT TO DECIMAL THE MSG NUMBER
         UNPK  PPMIDN(2),DBLWD+6(2) AND SUPPLY APPROPRIATE
         OI    PPMIDN+1,X'F0'      MESSAGE NUMBER
         LA    RZ,39               PUT MESSAGE LENGTH IN REGISTER 0
         LA    R1,PPMAREA          PUT MESSAGE ADDRESS IN REGISTER 1
         B     ZZPR                BRANCH TO MSG WRITER ROUTINE
         DROP  R15
*
         ENTRY CCWRITE
         USING *,R15
CCWRITE  LA    RZ,79               LOAD MESSAGE LENGTH INTO REGISTER 0
         B     ZZPR                BRANCH TO MSG WRITER ROUTINE
         DROP  R15
*
         EXTRN PPMSGES
PPMSGADD DC    A(PPMSGES)
*
PPMAREA  DS    0X
PPMID    DC    C'IEB4'             * NUMBER GIVEN TO ERROR MESSAGE
PPMIDN   DC    C'00I '             *
PPERRMSG DS    32C                 * ERROR MESSAGE WORK AREA
*
PPINVAL  EQU   X'00'
MERR     DC    C'08'               PART OF ERROR MESSAGE NUMBER
*
IOMSG    EQU   13                  * NUMBERS USED TO LOCATE
MNPTER   EQU   17                  * THE APPROPRIATE
PPINVLD  EQU   18                  * ERROR MESSAGES
*
DBLWD    DS    D                   WORK AREA FOR DECIMAL CONVERSION
         EJECT
*
*****   *****   *****   *****   *******   *****   *****   *****   *****
* THIS GENERALIZED MESSAGE WRITER INCLUDES THE FACILITY TO PRINT A
* HEADER ON EACH PAGE WITH ASCENDING PAGE NUMBERS. THE FOLLOWING
* LINKAGE CONVENTIONS MUST BE OBSERVED:
*              REGISTER 0 MUST CONTAIN THE MESSAGE LENGTH,
*              REGISTER 1 MUST CONTAIN THE MESSAGE ADDRESS,
*              AND ZZPR MUST BE INVOKED BY A BAL 14, ZZPR.
*****   *****   *****  *****    *******   *****   *****   *****   *****
*
         ENTRY ZZPR                                                7034
ZZPR     BALR  R15,R0
         USING *,R15               ESTABLISH ADDRESSABILITY
         STM   R14,R2,ZZSAVE       SAVE REGISTERS FOR CALLING ROUTINE
         TM    ZZSW,X'02'          IS THIS A HEADER
         BO    ZZHEAD              YES, BRANCH TO HEADER ROUTINE
         CLC   ZZLINES(R1),ZZLINCNT IS NUMBER OF LINES PRINTED @ZA07383
*                                  EQUAL TO 60?                @ZA07383
         BNH   ZZSKIP              YES, SKIP TO NEW PAGE       @ZA07383
         TM    ZZSW,X'01'          IS THIS A CLEAR
         BO    ZZSKIP              NO, PROCEED TO PRINT
         B     ZZCLEAR             YES, BRANCH TO CLEAR ROUTINE
ZZHEAD   MVC   ZZHDSAVE(120),0(R1) MOVE MSG INTO PRINT AREA    @ZA07383
         MVI   ZZHDSAVE-1,C'-'     INDICATE TRIPLE SPACE
ZZSKIP   MVI   ZZCTRL,C'1'         SKIP TO CHANNEL 1
         MVI   ZZPRINT,C' '        CLEAR PRINT AREA TO BLANKS
         MVC   ZZPRINT+1(119),ZZPRINT
         BAL   R14,ZZWRITE         BRANCH TO WRITE ROUTINE
         USING *,R14
         DROP  R15
         MVC   ZZCTRL(121),ZZHDSAVE-1    MOVE HEADER INTO PRINT AREA
         MVI   ZZLINCNT,X'04'      SET INCREMENT TO FOUR
         BAL   R14,ZZWRITE         BRANCH TO WRITE ROUTINE
         USING *,R14
         PACK  ZZCONVRT(8),ZZPGNO(4)
         CVB   R15,ZZCONVRT        CONVERT TO BINARY
         LA    R15,1(R15)          INCREMENT BY ONE
         CVD   R15,ZZCONVRT        CONVERT TO DECIMAL
         UNPK  ZZPGNO(4),ZZCONVRT(8)
         OI    ZZPGNO+3,X'F0'          SET INDICATOR BITS
         TM    ZZSAVE+11,X'FF'     IS THIS A CLEAR
         BM    ZZCLEAR             YES
         LM    R14,R2,ZZSAVE       RESTORE REGISTERS
         BR    R14                 RETURN
*
ZZCLEAR  BALR  R1,R0
         DROP  R14
         USING *,R1
         IC    R14,ZZLINCNT
         LA    R14,1(R14)              INCREMENT LINCNT BY ONE
         STC   R14,ZZLINCNT
         MVI   ZZPRINT,C' '        CLEAR THE PRINT ARES        @ZA07383
         MVC   ZZPRINT+1(119),ZZPRINT
         LM    R14,R15,ZZSAVE+8    RESTORE REGISTERS 14 AND 15
         CLC   4(2,R15),FOXZERO    IS THERE AN INFORMATION MSG
         BNE   ZZEX                NO
         S     R14,CONS7           IGNORE MSG NUMBER AND LOAD THE
         LA    R15,7(R15)          ADDRESS OF THE MESSAGE ITSELF
ZZEX     EX    R14,ZZMOVE          MOVE MESSAGE INTO PRINT AREA
         MVI   ZZCTRL,C' '         SET CONTROL INDICATOR
         L     R14,ZZSAVE          RESTORE REGISTER 14
         B     ZZWRITE             BRANCH TO WRITE ROUTINE
*
ZZMOVE   MVC   ZZPRINT(1),0(R15)   MOVE MESSAGE INTO PRINT AREA
*
ZZWRITE  BALR  R8,R0                    ESTABLISH ADDRESSABILITY   BS0H
         DROP  R1                                                  BS0H
         USING *,R8                                                BS0H
         ST    R14,REGSAVE              SAVE REGISTER 14           BS0H
         PUT   ZZDCB,ZZCTRL                                        BS0H
         L     14,REGSAVE                                          BS0H
         L     R2,ZZSAVE+16
         BR    R14                 RETURN TO CALLING ROUTINE
         DROP  R8                                                  BS0H
         EJECT
         DS    0D
*
ZZSAVE   DS    10X                 SAVE AREA
ZZSW     DS    10X                 CONTROL INFORMATION
ZZCTRL   DS    1X                  CONTROL BYTE
ZZPRINT  DS    143C' '        SYSPRINT BUFFER                      9476
ZZHDSAVE DS    120X                WORK AREA
ZZCONVRT EQU   ZZSAVE+32
ZZLINES  DC    X'3C'               LINES PER PAGE              @ZA07383
ZZLINCNT DS    1X                  LINE COUNT
HEADER   EQU   512
ZZPGNO   EQU   ZZHDSAVE+103
FOXZERO  DC    X'F0F0'
CONS7    DC    F'7'
OPT      DC    X'85'                                               BS0H
         DC    AL3(DCBEXIT)                                        BS0H
DFLG     DC    X'00'                                               BS0H
REGSAVE  DC    F'0'                                                BS0H
SPSYNAD  SYNADAF  ACSMETH=QSAM                                     7715
         MVC   WTOMG1+23(26),49(R1)     GET PART OF I/O ERR MSG    7715
         MVC   WTOMG2+13(53),75(R1)     GET PART OF I/O ERR MSG    7715
         SYNADRLS                                                  7715
         LA    1,WTOMG1                 GET ADDR FOR PRINTING MSG  7715
         WTO   MF=(E,(1))               WRITE THIS PORTION OF MSG  7715
         LA    1,WTOMG2                 GET  ADDR OF 2ND MSG PART  7715
         WTO   MF=(E,(1))               WRITE SECOND PORTION       7715
         RETURN
WTOMG1   WTO   'IEB421I I/O ERROR                           ',MF=L,    X
               ROUTCDE=11,DESC=7                                   7715
WTOMG2   WTO   'IEB421I                                                X
                               ',MF=L,ROUTCDE=11,DESC=7            7715
         DS    0D                                                  BS0H
         EJECT
*
         ENTRY   PPOUT                                             7034
PPOUT    DCB   DDNAME=SYSPRINT,RECFM=FBA,DSORG=PS,MACRF=(PM),      BS0H*
               EXLST=OPT,SYNAD=SPSYNAD                             7715
*
*
ZZDCB    EQU   PPOUT
*
         EJECT
*
         DCBD  DSORG=PS
*
DDNAM    EQU   DCBDDNAM-IHADCB
*
         EJECT
*
DTABLE   DSECT
TABLE    DS    0F
DDN1     DS    CL8                 * DDNAME WORK AREAS
DDN2     DS    CL8                 *
EXLSTADD DS    F                   EXIT LIST ADDRESS
LITADD   DS    F                   USER LITERAL POOL ADDRESS
MNTADD   DS    F                   MEMBER NAME TABLE ADDRESS
RCB      DS    0X
TYPORG   DS    0X                  BIT INDICATORS
         DS    16X
RCBLEN   EQU   *-RCB
TCB      DS    0F
TCB1     DS    2F                  TITLE INFORMATION
TCB2     DS    2F                  SUBTITLE INFORMATION
TCBLEN   EQU   *-TCB
PREFORMT DS    X'0'                PREFORMAT SWITCH FOR ALLIGNMENT
TABLEN   EQU   *-TABLE
N1DD     EQU   DDN1-DTABLE
N2DD     EQU   DDN2-DTABLE
*
DUTBLE   DSECT
UTBEG    DS    0F
UEXLADD  DS    F                   EXIT LIST ADDRESS
URCBADD  DS    F                   RCB ADDRESS
UTCBADD  DS    F                   TCB ADDRESS
ULITADD  DS    F                   USER LITERAL POOL ADDRESS
UMNTADD  DS    F                   MEMBER NAME TABLE ADDRESS
UTBLEN   EQU   *-UTBEG
OFLGS    EQU   DCBOFLGS-IHADCB
*
         END   IEBPTPCH
