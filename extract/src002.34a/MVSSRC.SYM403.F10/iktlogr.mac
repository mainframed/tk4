         TITLE 'IKTLOGR: TSO/VTAM LOGON RECONNECT ROUTINE              *
                        '
IKTLOGR  CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKTLOGR   77.319'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @07,@01                                             0001
         USING @DATD,@07                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @07,8(,@13)                                         0001
         LR    @13,@07                                             0001
*                                      SETLOCK MACRO                 */
*/****************************************************************** */
*/*       OBTAIN LOCAL AND CMS LOCK IN ORDER TO SEARCH TSB CHAIN     */
*/****************************************************************** */
*                                                                  0037
*   REG0=REG13;                     /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0037
*   REG13=ADDR(LOCKWA);             /* INSERT LOCAL LOCK WORKAREA  0038
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0038
*   GENERATE CODE                   /* OBTAIN THE LOCAL LOCK         */
*       REFS(PSALITA,FLC);                                         0039
         SETLOCK   OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,  @ZA17868 **
               RELATED=('PREREQUISITE FOR CMS LOCK')
*   GENERATE CODE REFS(PSALITA,FLC);                               0040
*                                /* GET CMS LOCK */
         SETLOCK   OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=SAVE,             **
               RELATED=('SCAN TSB CHAIN ')
*   REG13=REG0;                     /* RESTORE REGISTER CONTENTS   0041
*                                                            @ZA17868*/
         LR    REG13,REG0                                          0041
*/****************************************************************** */
*/* SEARCH TSB CHAIN BASED IN TCAS TABLE                             */
*/****************************************************************** */
*                                                                  0042
*   RFY                                                            0042
*    (REG14,                                                       0042
*     REG15,                                                       0042
*     REG10) UNRSTD;                /* UNRESTRICT REGISTERS          */
*   TSBBASE=TCASTSB;                /* LOAD ADDRESS OF FIRST TSB     */
         L     @08,CVTPTR                                          0043
         L     @08,TCASTPTR(,@08)                                  0043
         L     TSBBASE,TCASTSB(,@08)                               0043
*   DO WHILE(TSBBASE>=0);           /* START SEARCH OF CHAIN         */
         B     @DE00044                                            0044
@DL00044 DS    0H                                                  0045
*     IF TSBBASE=0 THEN             /* TEST FOR END OF CHAIN         */
         LTR   TSBBASE,TSBBASE                                     0045
         BNZ   @RF00045                                            0045
*       DO;                                                        0046
*         REG0=REG13;               /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0047
*         REG13=ADDR(LOCKWA);       /* INSERT LOCAL LOCK WORKAREA  0048
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0048
*         GENERATE CODE             /* FREE ALL LOCKS                */
*             REFS(PSALITA,FLC,PSAMPSW);                           0049
         SETLOCK RELEASE,TYPE=CMS,REGS=SAVE,                          **
               RELATED=('TSB CHAIN SCANNED')
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=('EXITTING')
*         REG13=REG0;               /* RESTORE REGISTER CONTENTS     */
         LR    REG13,REG0                                          0050
*         GENERATE CODE REFS(RETCODE);                             0051
         L    15,4(13)       LOAD ADDRESS OF OLD SAVE AREA
         SLR  0,0            ZERO REGISTER 0
         ST   0,20(,15)      STORE ZERO INTO REG0 POSITION
*         RETURN CODE(USERIDBD);    /* INDICATE UERID IS BAD TO    0052
*                                      CALLER                        */
         L     @13,4(,@13)                                         0052
         L     @00,@SIZDATD                                        0052
         LR    @01,@07                                             0052
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,8                                               0052
         L     @14,12(,@13)                                        0052
         LM    @00,@12,20(@13)                                     0052
         BR    @14                                                 0052
*       END;                                                       0053
*     RFY                                                          0054
*       TSB BASED(TSBBASE);         /* BASE TSB ON CURRENT BASE      */
@RF00045 DS    0H                                                  0055
*     IF TSBXWREC='1'B&USERID=TSBXUID THEN                         0055
*                                                                  0055
         L     @10,TSBEXTNT(,TSBBASE)                              0055
         TM    TSBXWREC(@10),B'00010000'                           0055
         BNO   @RF00055                                            0055
         L     @08,PARM1PTR(,REG1)                                 0055
         CLC   USERID(8,@08),TSBXUID(@10)                          0055
         BNE   @RF00055                                            0055
*/********************************************************************/
*/*               CHECK FOR WAITING FOR RECONNECT BIT                */
*/*                                                                  */
*/********************************************************************
*                                                                    */
*                                                                  0056
*                                                                  0056
*/*  SEARCH TSB CHAIN FOR COMPARISON ON USERID AND PASSWORD          */
*/*                                                                  */
*                                                                  0056
*       IF PASSWORD=TSBPSWD THEN    /* CHECK FOR MATCHING PASSWORD   */
         L     @08,PARM2PTR(,REG1)                                 0056
         CLC   PASSWORD(8,@08),TSBPSWD(TSBBASE)                    0056
         BNE   @RF00056                                            0056
*         DO;                       /* INSERT ALL NEW VALUES FROM  0057
*                                      THIS TSB                      */
*           TSBTRMID=ASCBTSB->TSBTRMID;/* INSERT NEW TERMINAL ID   0058
*                                                            @G32TKKM*/
         L     @08,ASCBPTR                                         0058
         L     @08,ASCBTSB(,@08)                                   0058
         MVC   TSBTRMID(8,TSBBASE),TSBTRMID(@08)                   0058
*/*                             INSERT NEW ASCII FLAG                */
*                                                                  0059
*           IF ASCBTSB->TSBEXTNT->TSBXASCI='1'B THEN/* CHECK FOR BIT
*                                      ON                            */
         L     @08,TSBEXTNT(,@08)                                  0059
         TM    TSBXASCI(@08),B'10000000'                           0059
         BNO   @RF00059                                            0059
*             TSBXASCI='1'B;        /* TURN ON BIT VARIABLE          */
         OI    TSBXASCI(@10),B'10000000'                           0060
*           ELSE                                                   0061
*             TSBXASCI='0'B;        /* TURN OFF THE BIT              */
         B     @RC00059                                            0061
@RF00059 L     @10,TSBEXTNT(,TSBBASE)                              0061
         NI    TSBXASCI(@10),B'01111111'                           0061
*/*                              INDICATE DISPLAY SCREEN             */
*                                                                  0062
*           IF ASCBTSB->TSBDSPLY='1'B THEN/* CHECK BIT ORIENTATION   */
@RC00059 L     @10,ASCBPTR                                         0062
         L     @10,ASCBTSB(,@10)                                   0062
         TM    TSBDSPLY(@10),B'00100000'                           0062
         BNO   @RF00062                                            0062
*             DO;                                                  0063
*               TSB3270='1'B;       /* TURN ON 3270 INDICATOR        */
*               TSBDSPLY='1'B;      /* TURN ON THE BIT               */
         OI    TSB3270(TSBBASE),B'00100010'                        0065
*             END;                                                 0066
*           ELSE                                                   0067
*             DO;                                                  0067
         B     @RC00062                                            0067
@RF00062 DS    0H                                                  0068
*               TSB3270='0'B;       /* TURN OFF 3270 INDICATOR       */
*               TSBDSPLY='0'B;      /* TURN OFF THE BIT VARIABLE     */
         NI    TSB3270(TSBBASE),B'11011101'                        0069
*             END;                                                 0070
*           TSBXTERM=ASCBTSB->TSBEXTNT->TSBXTERM;/* INSERT NEW     0071
*                                      TERMINAL CHARACTERISTICS      */
@RC00062 L     @10,TSBEXTNT(,TSBBASE)                              0071
         L     @08,ASCBPTR                                         0071
         L     @08,ASCBTSB(,@08)                                   0071
         L     @08,TSBEXTNT(,@08)                                  0071
         MVC   TSBXTERM(4,@10),TSBXTERM(@08)                       0071
*           TSBXBIND=ASCBTSB->TSBEXTNT->TSBXBIND;/* INSERT NEW BIND
*                                      IMAGE                 @G58AKKM*/
         MVC   TSBXBIND(36,@10),TSBXBIND(@08)                      0072
*           RFY                                                    0073
*             INDXREG RSTD;         /* RESTRICT TWO WORK REGISTERS   */
*           INDXREG=TSBXAIND;       /* LOAD OLD ADDRESS SPACE USER 0074
*                                      INDEX                         */
         L     @08,TSBEXTNT(,TSBBASE)                              0074
         LH    INDXREG,TSBXAIND(,@08)                              0074
*/****************************************************************** */
*/*  CREATE THE APPLID OF THE OLD MEMORY TO FACILITATE PASSING OF    */
*/*  CONTROL                                                         */
*/****************************************************************** */
*                                                                  0075
*           RFY                                                    0075
*             TSB BASED(ASCBTSB);   /* ESTABLISH ADDRESSABILITY TO 0075
*                                      TSB IN THIS ADDRESS SPACE     */
*           WORKREG=ADDR(OLDAPPL);  /* LOAD ADDRESS OF WORK AREA FOR
*                                      CONVERSION                    */
         LA    WORKREG,OLDAPPL                                     0076
*           GENERATE CODE           /* CONVERT FROM BINARY TO PACKED */
*               REFS(INDXREG,WORKREG);                             0077
         CVD   INDXREG,0(WORKREG)   CONVERT FROM BINARY TO PACKED
         UNPK  0(8,WORKREG),0(8,WORKREG) UNPACK FROM PACKED TO ZONED
         OI    7(WORKREG),X'F0'     MASK SIGN ZONE
*           OLDAPPL(1:7)=OLDAPPL(2:8);/* MOVE CHARACTERS OVER 1 BYTE */
         MVC   @TS00001(7),OLDAPPL+1                               0078
         MVC   OLDAPPL(7),@TS00001                                 0078
*           OLDAPPL(8)=' ';         /* INSERT BLANK CHARACTER ON   0079
*                                      RIGHT                         */
         MVI   OLDAPPL+7,C' '                                      0079
*           OLDAPPL(1:3)=TSO;       /* INSERT CHARACTER STRING 'TSO' */
         MVC   OLDAPPL(3),TSO                                      0080
*           RFY                                                    0081
*             INDXREG UNRSTD;       /* UNRESTRICT THE INDEX REGISTER */
*           TSBBASE=-TSBBASE;       /* TURN OF LOOP BY NEGATING BASE
*                                      REGISTER                      */
         LCR   TSBBASE,TSBBASE                                     0082
*         END;                                                     0083
*       ELSE                        /* PASSWORD DOES NOT MATCH       */
*         DO;                                                      0084
         B     @RC00056                                            0084
@RF00056 DS    0H                                                  0085
*           REG0=REG13;             /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0085
*           REG13=ADDR(LOCKWA);     /* INSERT LOCAL LOCK WORKAREA  0086
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0086
*           GENERATE CODE           /* FREE ALL LOCKS                */
*               REFS(PSALITA,FLC,PSAMPSW);                         0087
         SETLOCK RELEASE,TYPE=CMS,REGS=SAVE,                          **
               RELATED=('TSB CHAIN SCANNED')
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=('EXITTING')
*           REG13=REG0;             /* RESTORE REGISTER CONTENTS     */
         LR    REG13,REG0                                          0088
*           RETURN CODE(PASWRDBD);  /* RETURN TO CALLER INDICATING 0089
*                                      CONDITION                     */
         L     @13,4(,@13)                                         0089
         L     @00,@SIZDATD                                        0089
         LR    @01,@07                                             0089
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0089
         L     @14,12(,@13)                                        0089
         LM    @00,@12,20(@13)                                     0089
         BR    @14                                                 0089
*         END;                                                     0090
*     ELSE                          /* TSB NOT IN RECONNECT STATE OR
*                                      USERID DOES NOT MATCH         */
*       DO;                                                        0091
         B     @RC00055                                            0091
@RF00055 DS    0H                                                  0092
*         RFY                                                      0092
*           TSB BASED(TSBBASE);     /* BASE TSB ON SEARCH REGISTER   */
*         TSBBASE=TSBXFWD;          /* GET ADDRESS OF NEXT TSB       */
         L     @10,TSBEXTNT(,TSBBASE)                              0093
         L     @10,TSBXFWD(,@10)                                   0093
         LR    TSBBASE,@10                                         0093
*       END;                                                       0094
*   END;                            /* END OF LOOP                   */
@RC00055 DS    0H                                                  0095
@DE00044 LTR   TSBBASE,TSBBASE                                     0095
         BNM   @DL00044                                            0095
*   TSBBASE=-TSBBASE;               /* RESTORE TSB POINTER           */
         LCR   TSBBASE,TSBBASE                                     0096
*/****************************************************************** */
*/*  AFTER HAVING LOCATED THE TSB BELONGING TO THE OLD SESSION       */
*/*  FREE ALL LOCKS                                                  */
*/****************************************************************** */
*                                                                  0097
*   REG0=REG13;                     /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0097
*   REG13=ADDR(LOCKWA);             /* INSERT LOCAL LOCK WORKAREA  0098
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0098
*   GENERATE CODE                   /* FREE ALL LOCKS                */
*       REFS(PSALITA,FLC,PSAMPSW);                                 0099
         SETLOCK RELEASE,TYPE=CMS,REGS=SAVE,                          **
               RELATED=('TSB CHAIN SCANNED')
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=('EXITTING')
*   REG13=REG0;                     /* RESTORE REGISTER CONTENTS     */
         LR    REG13,REG0                                          0100
*/****************************************************************** */
*/*       GIVE TERMINAL CONTROL TO OLD ADDRESS SPACE                 */
*/****************************************************************** */
*                                                                  0101
*   RFY                                                            0101
*     TSB BASED(ASCBTSB);           /* TSB IS FOR THIS ADDRESS SPACE */
*   RFY                                                            0102
*    (RETCODE,                                                     0102
*     RPLREG) RSTD;                 /* RESTRICT RETURN CODE REGISTER */
*   RPLREG=TVWARPL;                 /* LOAD ADDRESS OF RPL INTO A  0103
*                                      REGISTER                      */
         L     @14,ASCBPTR                                         0103
         L     @14,ASCBTSB(,@14)                                   0103
         L     @14,TSBEXTNT(,@14)                                  0103
         L     @14,TVWAPTR(,@14)                                   0103
         L     RPLREG,TVWARPL(,@14)                                0103
*   TVWARTR=ADDR(RETRYMAX);         /* LOAD MAX RETRY VALUE          */
         SLR   @10,@10                                             0104
         LA    @10,RETRYMAX(,@10)                                  0104
         STH   @10,TVWARTR(,@14)                                   0104
*   GENERATE CODE;                                                 0105
*                  /* PASS TERMINAL CONTROL TO OLD ADDRESS SPACE */
         CLSDST RPL=(RPLREG),                                         **
               OPTCD=(SYN,PASS),AAREA=(WORKREG)
*   RFY                                                            0106
*     WORKREG UNRSTD;               /* UNRESTRICT WORK REGSITER      */
*   DO WHILE RETCODE^=0;            /* CHECK FOR SUCCESSFUL        0107
*                                      COMPLETION OF PASS            */
         B     @DE00107                                            0107
@DL00107 DS    0H                                                  0108
*     IF RETCODE=4&REG0=8 THEN      /* TEST FOR RETRYABLE ERROR      */
         C     RETCODE,@CF00051                                    0108
         BNE   @RF00108                                            0108
         C     REG0,@CF00041                                       0108
         BNE   @RF00108                                            0108
*       DO;                                                        0109
*         IF TVWARTR=0 THEN         /* TEST FOR MAX RETRY            */
         L     @14,ASCBPTR                                         0110
         L     @14,ASCBTSB(,@14)                                   0110
         L     @14,TSBEXTNT(,@14)                                  0110
         L     @14,TVWAPTR(,@14)                                   0110
         LH    @14,TVWARTR(,@14)                                   0110
         LTR   @14,@14                                             0110
         BNZ   @RF00110                                            0110
*           DO;                                                    0111
*             REG0=REG13;           /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0112
*             REG13=ADDR(LOCKWA);   /* INSERT LOCAL LOCK WORKAREA  0113
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0113
*             GENERATE CODE         /* OBTAIN THE LOCAL LOCK         */
*                 REFS(PSALITA,FLC);                               0114
         SETLOCK   OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,   @ZA17868**
               RELATED=('PREREQUISITE FOR Q MNGR  ')          @YM03245
*             REG13=REG0;           /* RESTORE REGISTER CONTENTS   0115
*                                                            @ZA17868*/
         LR    REG13,REG0                                          0115
*             OUTWA=OUTWA&&OUTWA;   /* ZERO WORK AREA        @YM03245*/
         L     @14,ASCBPTR                                         0116
         L     @14,ASCBTSB(,@14)                                   0116
         L     @14,TSBEXTNT(,@14)                                  0116
         L     @14,TVWAPTR(,@14)                                   0116
         L     @14,TVWALLWA(,@14)                                  0116
         XC    OUTWA(24,@14),OUTWA(@14)                            0116
*             OPARMLST=ADDR(OPARMS);/* INSERT ADDRESS OF PARAMETER 0117
*                                      AREA                  @YM03245*/
         ST    @14,OPARMLST(,@14)                                  0117
*             OPBFSZ=MSGLEN+1;      /* INSERT REQUEST LENGTH @YM03245*/
         L     @10,CVTPTR                                          0118
         L     @10,TCASTPTR(,@10)                                  0118
         L     @09,TCASMSGS(,@10)                                  0118
         L     @09,IKTMSGS+4(,@09)                                 0118
         LA    @06,1                                               0118
         SLR   @05,@05                                             0118
         ICM   @05,3,MSGLEN(@09)                                   0118
         ALR   @06,@05                                             0118
         STH   @06,OPBFSZ(,@14)                                    0118
*             OPREQ=ADDTOP;         /* ADD TO TOP OF QUEUE   @YM03245*/
         MVI   OPREQ(@14),X'08'                                    0119
*             RFY                                                  0120
*               REG1 RSTD;          /* RESTRICT PARAMETER REG      0120
*                                                            @YM03245*/
*             REG1=ADDR(OPARMLST);  /* INSERT LIST ADDRESS INTO REG
*                                                            @YM03245*/
         LA    REG1,OPARMLST(,@14)                                 0121
*             CALL IKTQMOUT;        /* GET BUFFER            @YM03245*/
         L     @15,TCASOQM(,@10)                                   0122
         BALR  @14,@15                                             0122
*             IF OPRC=1 THEN        /* CHECK FOR GOOD RETURN CODE  0123
*                                                            @YM03245*/
         L     @14,ASCBPTR                                         0123
         L     @14,ASCBTSB(,@14)                                   0123
         L     @14,TSBEXTNT(,@14)                                  0123
         L     @10,TVWAPTR(,@14)                                   0123
         L     @10,TVWALLWA(,@10)                                  0123
         CLI   OPRC(@10),1                                         0123
         BNE   @RF00123                                            0123
*               DO;                                                0124
*                 OBUFFER(1:MSGLEN)=MSGTEXT(1:MSGLEN);/* INSERT    0125
*                                      MESSAGE               @YM03245*/
         L     @10,OPBUFADR(,@10)                                  0125
         L     @09,CVTPTR                                          0125
         L     @09,TCASTPTR(,@09)                                  0125
         L     @09,TCASMSGS(,@09)                                  0125
         L     @09,IKTMSGS+4(,@09)                                 0125
         SLR   @06,@06                                             0125
         ICM   @06,3,MSGLEN(@09)                                   0125
         LR    @05,@06                                             0125
         BCTR  @05,0                                               0125
         EX    @05,@SM01564                                        0125
*                 IF TSBXTMTP=ROCKET THEN/* CHECK FOR 3767/3770    0126
*                                                            @YM03245*/
         CLI   TSBXTMTP(@14),2                                     0126
         BNE   @RF00126                                            0126
*                   OBUFFER(MSGLEN+1)=NEWLINE;/* INSERT NEW LINE   0127
*                                      CHARACTER             @YM03245*/
         LA    @14,21                                              0127
         STC   @14,OBUFFER(@06,@10)                                0127
*                 ELSE                                             0128
*                   OBUFFER(MSGLEN+1)=SPACE;/* INSERT BLANK  @YM03245*/
         B     @RC00126                                            0128
@RF00126 L     @14,CVTPTR                                          0128
         L     @14,TCASTPTR(,@14)                                  0128
         L     @14,TCASMSGS(,@14)                                  0128
         L     @14,IKTMSGS+4(,@14)                                 0128
         SLR   @10,@10                                             0128
         ICM   @10,3,MSGLEN(@14)                                   0128
         L     @14,ASCBPTR                                         0128
         L     @14,ASCBTSB(,@14)                                   0128
         L     @14,TSBEXTNT(,@14)                                  0128
         L     @14,TVWAPTR(,@14)                                   0128
         L     @14,TVWALLWA(,@14)                                  0128
         L     @14,OPBUFADR(,@14)                                  0128
         LA    @09,64                                              0128
         STC   @09,OBUFFER(@10,@14)                                0128
*               END;                /*                       @YM03251*/
@RC00126 DS    0H                                                  0130
*             RFY                                                  0130
*               REG1 UNRSTD;        /* UNRESTRICT REG 1      @YM03245*/
@RF00123 DS    0H                                                  0131
*             REG0=REG13;           /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0131
*             REG13=ADDR(LOCKWA);   /* INSERT LOCAL LOCK WORKAREA  0132
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0132
*             GENERATE CODE         /* FREE ALL LOCKS        @YM03245*/
*                 REFS(PSALITA,FLC);                               0133
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=('EXITTING')
*             REG13=REG0;           /* RESTORE REG13         @ZA17868*/
         LR    REG13,REG0                                          0134
*             RETURN CODE(RECONBD); /* INDICATE RECONNECT FAILED     */
         L     @13,4(,@13)                                         0135
         L     @00,@SIZDATD                                        0135
         LR    @01,@07                                             0135
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,12                                              0135
         L     @14,12(,@13)                                        0135
         LM    @00,@12,20(@13)                                     0135
         BR    @14                                                 0135
*           END;                                                   0136
*         ELSE                      /* RETRY LIMIT NOT EXCEEDED      */
*           DO;                                                    0137
@RF00110 DS    0H                                                  0138
*             TVWARTR=TVWARTR-1;    /* DECREMENT COUNTER             */
         L     @14,ASCBPTR                                         0138
         L     @01,ASCBTSB(,@14)                                   0138
         L     @01,TSBEXTNT(,@01)                                  0138
         L     @14,TVWAPTR(,@01)                                   0138
         LH    @10,TVWARTR(,@14)                                   0138
         BCTR  @10,0                                               0138
         STH   @10,TVWARTR(,@14)                                   0138
*             GENERATE CODE;                                       0139
*                /* REEXECUTE MACRO  */
         EXECRPL   RPL=(RPLREG)
*           END;                                                   0140
*       END;                                                       0141
*     ELSE                          /* RETURN CODE INDICATES NON   0142
*                                      RETRYABLE ERROR               */
*       DO;                                                        0142
         B     @RC00108                                            0142
@RF00108 DS    0H                                                  0143
*         REG0=REG13;               /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0143
*         REG13=ADDR(LOCKWA);       /* INSERT LOCAL LOCK WORKAREA  0144
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0144
*         GENERATE CODE             /* OBTAIN THE LOCAL LOCK         */
*             REFS(PSALITA,FLC);                                   0145
         SETLOCK   OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,   @ZA17868**
               RELATED=('PREREQUISITE FOR Q MNGR  ')          @YM03245
*         REG13=REG0;               /* RESTORE REGISTER CONTENTS   0146
*                                                            @ZA17868*/
         LR    REG13,REG0                                          0146
*         OUTWA=OUTWA&&OUTWA;       /* ZERO WORK AREA        @YM03245*/
         L     @14,ASCBPTR                                         0147
         L     @01,ASCBTSB(,@14)                                   0147
         L     @01,TSBEXTNT(,@01)                                  0147
         L     @01,TVWAPTR(,@01)                                   0147
         L     @14,TVWALLWA(,@01)                                  0147
         XC    OUTWA(24,@14),OUTWA(@14)                            0147
*         OPARMLST=ADDR(OPARMS);    /* INSERT ADDRESS OF PARAMETER 0148
*                                      AREA                  @YM03245*/
         ST    @14,OPARMLST(,@14)                                  0148
*         OPBFSZ=MSGLEN+1;          /* INSERT REQUEST LENGTH @YM03245*/
         L     @10,CVTPTR                                          0149
         L     @10,TCASTPTR(,@10)                                  0149
         L     @01,TCASMSGS(,@10)                                  0149
         L     @01,IKTMSGS+4(,@01)                                 0149
         LA    @09,1                                               0149
         SLR   @06,@06                                             0149
         ICM   @06,3,MSGLEN(@01)                                   0149
         ALR   @09,@06                                             0149
         STH   @09,OPBFSZ(,@14)                                    0149
*         OPREQ=ADDTOP;             /* ADD TO TOP OF QUEUE   @YM03245*/
         MVI   OPREQ(@14),X'08'                                    0150
*         RFY                                                      0151
*           REG1 RSTD;              /* RESTRICT PARAMETER REG      0151
*                                                            @YM03245*/
*         REG1=ADDR(OPARMLST);      /* INSERT LIST ADDRESS INTO REG
*                                                            @YM03245*/
         LA    REG1,OPARMLST(,@14)                                 0152
*         CALL IKTQMOUT;            /* GET BUFFER            @YM03245*/
         L     @15,TCASOQM(,@10)                                   0153
         BALR  @14,@15                                             0153
*         IF OPRC=1 THEN            /* CHECK FOR GOOD RETURN CODE  0154
*                                                            @YM03245*/
         L     @14,ASCBPTR                                         0154
         L     @14,ASCBTSB(,@14)                                   0154
         L     @14,TSBEXTNT(,@14)                                  0154
         L     @10,TVWAPTR(,@14)                                   0154
         L     @10,TVWALLWA(,@10)                                  0154
         CLI   OPRC(@10),1                                         0154
         BNE   @RF00154                                            0154
*           DO;                                                    0155
*             OBUFFER(1:MSGLEN)=MSGTEXT(1:MSGLEN);/* INSERT MESSAGE
*                                                            @YM03245*/
         L     @10,OPBUFADR(,@10)                                  0156
         L     @09,CVTPTR                                          0156
         L     @09,TCASTPTR(,@09)                                  0156
         L     @09,TCASMSGS(,@09)                                  0156
         L     @09,IKTMSGS+4(,@09)                                 0156
         SLR   @06,@06                                             0156
         ICM   @06,3,MSGLEN(@09)                                   0156
         LR    @05,@06                                             0156
         BCTR  @05,0                                               0156
         EX    @05,@SM01564                                        0156
*             IF TSBXTMTP=ROCKET THEN/* CHECK FOR 3767/3770  @YM03245*/
         CLI   TSBXTMTP(@14),2                                     0157
         BNE   @RF00157                                            0157
*               OBUFFER(MSGLEN+1)=NEWLINE;/* INSERT NEW LINE       0158
*                                      CHARACTER             @YM03245*/
         LA    @14,21                                              0158
         STC   @14,OBUFFER(@06,@10)                                0158
*             ELSE                                                 0159
*               OBUFFER(MSGLEN+1)=SPACE;/* INSERT BLANK      @YM03245*/
         B     @RC00157                                            0159
@RF00157 L     @14,CVTPTR                                          0159
         L     @14,TCASTPTR(,@14)                                  0159
         L     @14,TCASMSGS(,@14)                                  0159
         L     @14,IKTMSGS+4(,@14)                                 0159
         SLR   @10,@10                                             0159
         ICM   @10,3,MSGLEN(@14)                                   0159
         L     @14,ASCBPTR                                         0159
         L     @14,ASCBTSB(,@14)                                   0159
         L     @14,TSBEXTNT(,@14)                                  0159
         L     @14,TVWAPTR(,@14)                                   0159
         L     @14,TVWALLWA(,@14)                                  0159
         L     @14,OPBUFADR(,@14)                                  0159
         LA    @09,64                                              0159
         STC   @09,OBUFFER(@10,@14)                                0159
*           END;                    /*                       @YM03251*/
@RC00157 DS    0H                                                  0161
*         RFY                                                      0161
*           REG1 UNRSTD;            /* UNRESTRICT REG 1      @YM03245*/
@RF00154 DS    0H                                                  0162
*         REG0=REG13;               /* SAVE PREVIOUS SAVEAREA POINTER
*                                                            @ZA17868*/
         LR    REG0,REG13                                          0162
*         REG13=ADDR(LOCKWA);       /* INSERT LOCAL LOCK WORKAREA  0163
*                                                            @ZA17868*/
         LA    REG13,LOCKWA                                        0163
*         GENERATE CODE             /* FREE ALL LOCKS        @YM03245*/
*             REFS(PSALITA,FLC);                                   0164
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=('EXITTING')
*         REG13=REG0;               /* RESTORE REGISTER CONTENTS   0165
*                                                            @ZA17868*/
         LR    REG13,REG0                                          0165
*         RETURN CODE(RECONBD);     /* INDICATE RECONNECT FAILED     */
         L     @13,4(,@13)                                         0166
         L     @00,@SIZDATD                                        0166
         LR    @01,@07                                             0166
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,12                                              0166
         L     @14,12(,@13)                                        0166
         LM    @00,@12,20(@13)                                     0166
         BR    @14                                                 0166
*       END;                                                       0167
*   END;                            /* END OF LOOP                   */
@RC00108 DS    0H                                                  0168
@DE00107 LTR   RETCODE,RETCODE                                     0168
         BNZ   @DL00107                                            0168
*   RFY                                                            0169
*     RPLREG UNRSTD;                /* UNRESTRICT RPL REGISTER       */
*   RFY                                                            0170
*    (REG4,                                                        0170
*     WORKREG,                                                     0170
*     INDXREG,                                                     0170
*     REG8) RSTD;                   /* RESTRICT WORK REGISTERS       */
*   TSBXACTV='0'B;                  /* INDICATE TERMINAL NOT       0171
*                                      ALLOCATED TO ADDRESS SPACE  0171
*                                      OZ12001                       */
         L     @14,ASCBPTR                                         0171
         L     @01,ASCBTSB(,@14)                                   0171
         L     @14,TSBEXTNT(,@01)                                  0171
         NI    TSBXACTV(@14),B'10111111'                           0171
*   REG4=TVWAVST+4;                 /* LOAD THE ADDRESS OF MACRO AREA*/
         L     @01,TVWAPTR(,@14)                                   0172
         LA    REG4,4                                              0172
         AL    REG4,TVWAVST(,@01)                                  0172
*   RFY                                                            0173
*     MACAREA BASED(REG4);          /* BASE THE AREA ON REGISTER 4   */
*   MACAREA(1:LENGTH(POSTL))=POSTL; /* MOVE MACRO TO DYNAMIC STORAGE */
         MVC   MACAREA(12,REG4),POSTL                              0174
*   RFY                                                            0175
*     TSB BASED(TSBBASE);           /* SET UP ADDRESSABILITY TO OLD
*                                      ADDRESS SPACE TSB             */
*   WORKREG=TSBASCBA;               /* LOAD ADDRESS OF OLD ADDRESS 0176
*                                      SPACE ASCB                    */
         L     WORKREG,TSBASCBA(,TSBBASE)                          0176
*   INDXREG=ADDR(TSBXECB);          /* LOAD ADDRESS OF X-MEM ECB     */
         L     INDXREG,TSBEXTNT(,TSBBASE)                          0177
         LA    INDXREG,TSBXECB(,INDXREG)                           0177
*   REG8=ADDR(TCASBR14);            /* LOAD ADDRESS OF A BR 14     0178
*                                      INSTRUCTION                   */
         L     @14,CVTPTR                                          0178
         L     REG8,TCASTPTR(,@14)                                 0178
         LA    REG8,TCASBR14(,REG8)                                0178
*   GENERATE CODE                   /* POST OLD ADDRESS SPACE        */
*       REFS(INDXREG,WORKREG,REG8);                                0179
         POST  (INDXREG),ASCB=(WORKREG),ERRET=(REG8),MF=(E,(4))
*   RFY                                                            0180
*    (REG8,                                                        0180
*     INDXREG,                                                     0180
*     REG4,                                                        0180
*     WORKREG) UNRSTD;              /* UNRESTRICT WORK REGISTERS     */
*   RETURN CODE(RECONGD);           /* INDICATE RECONNECT SUCCESSFUL */
         L     @13,4(,@13)                                         0181
         L     @00,@SIZDATD                                        0181
         LR    @01,@07                                             0181
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                             0181
         L     @14,12(,@13)                                        0181
         LM    @00,@12,20(@13)                                     0181
         BR    @14                                                 0181
*   END IKTLOGR                                                    0182
*                                                                  0182
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKTTCAST)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IKJTSB  )                                       */
*/*%INCLUDE SYSLIB  (IKTTSBX )                                       */
*/*%INCLUDE SYSLIB  (IKTTVWA )                                       */
*/*%INCLUDE SYSLIB  (IKTEQU  )                                       */
*/*%INCLUDE SYSLIB  (IKTOPARM)                                       */
*                                                                  0182
*       ;                                                          0182
@DATA    DS    0H
@SM01564 MVC   OBUFFER(0,@10),MSGTEXT(@09)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IKTLOGR  CSECT
         DS    0F
@CF00051 DC    F'4'
@CF00041 DC    F'8'
@DATD    DSECT
         DS    0D
@TS00001 DS    CL7
         DS    CL1
LOCKWA   DS    CL28
         ORG   LOCKWA
LOCKREGS DS    CL20
OLDAPPL  DS    CL8
         ORG   LOCKWA+28
IKTLOGR  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
TSO      DC    CL3'TSO'
         DS    CL1
PATAREA  DC    30F'0'
IKTLOGR  CSECT
POSTL    POST MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKTLOGR  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REG1     EQU   @01
REG0     EQU   @00
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG4     EQU   @04
REG8     EQU   @08
REG10    EQU   @10
RETCODE  EQU   @15
RPLREG   EQU   @08
INDXREG  EQU   @10
TSBBASE  EQU   @11
WORKREG  EQU   @09
REG11    EQU   @11
REG9     EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSAMPSW  EQU   PSA+592
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PARM1PTR EQU   0
PARM2PTR EQU   4
USERID   EQU   0
PASSWORD EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCAST    EQU   0
TCASUSER EQU   TCAST+4
TCASMSGS EQU   TCAST+52
TCASTSB  EQU   TCAST+68
TCASOQM  EQU   TCAST+76
TCASFLG1 EQU   TCAST+88
TCASFLG2 EQU   TCAST+89
TCASBR14 EQU   TCAST+116
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBTSB  EQU   ASCB+60
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
TSB      EQU   0
TSBASCBA EQU   TSB
TSBSTAT  EQU   TSBASCBA
TSBDSPLY EQU   TSBSTAT
TSB3270  EQU   TSBSTAT
TSBFLG1  EQU   TSB+4
TSBFLG2  EQU   TSB+16
TSBFLG3  EQU   TSB+24
TSBFLG5  EQU   TSB+25
TSBTERMC EQU   TSB+26
TSBTERM1 EQU   TSBTERMC
TSBTERM2 EQU   TSBTERMC+1
TSBSTCC  EQU   TSB+34
TSBFLG4  EQU   TSB+41
TSBRCB   EQU   TSB+64
TSBLINKA EQU   TSBRCB+4
TSBTPOST EQU   TSB+72
TSBTPFLG EQU   TSBTPOST
TSBMINL  EQU   TSB+84
TSBPSWD  EQU   TSB+88
TSBEXTNT EQU   TSB+96
TSBTRMID EQU   TSB+104
TSBX     EQU   0
TSBXFWD  EQU   TSBX
TSBXECB  EQU   TSBX+8
TSBXUID  EQU   TSBX+24
TSBXFLG1 EQU   TSBX+32
TSBXASCI EQU   TSBXFLG1
TSBXACTV EQU   TSBXFLG1
TSBXWREC EQU   TSBXFLG1
TSBXTVWA EQU   TSBX+36
TSBXAIND EQU   TSBX+70
TSBXTERM EQU   TSBX+72
TSBXTMTP EQU   TSBXTERM
TSBXBIND EQU   TSBX+80
TVWA     EQU   0
TVWALLWA EQU   TVWA+24
TVWARTR  EQU   TVWA+72
TVWARPL  EQU   TVWA+96
TVWAVST  EQU   TVWA+104
TVWAFLG7 EQU   TVWA+110
TVWAECBL EQU   TVWA+120
TVWADLST EQU   TVWA+132
TVWAFLG1 EQU   TVWA+144
TVWAFLG2 EQU   TVWA+145
TVWAFLG3 EQU   TVWA+146
TVWAFLG4 EQU   TVWA+147
TVWAFLG5 EQU   TVWA+150
TVWAFLG6 EQU   TVWA+182
MACAREA  EQU   0
IKTMSGS  EQU   0
IKTQMOUT EQU   0
MSG301   EQU   0
MSGLEN   EQU   MSG301
MSGTEXT  EQU   MSG301+2
OUTWA    EQU   0
OPARMS   EQU   OUTWA
OPBUFADR EQU   OPARMS
OPREQ    EQU   OPARMS+4
OPRC     EQU   OPARMS+5
OPBFSZ   EQU   OPARMS+6
OPFLAGS  EQU   OPARMS+8
OPOPTNS  EQU   OPFLAGS+1
OPNXFLGS EQU   OPARMS+16
OPARMLST EQU   OUTWA+20
OBUFFER  EQU   0
RETRYMAX EQU   10
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTTCASP EQU   CVTS01+664
TCASTPTR EQU   CVTTCASP
ASCBPTR  EQU   PSAAOLD
TSBPTR   EQU   ASCBTSB
TVWAPTR  EQU   TSBXTVWA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
@NM00073 EQU   OPNXFLGS+3
@NM00072 EQU   OPNXFLGS+2
@NM00071 EQU   OPNXFLGS+1
OPNXASID EQU   OPNXFLGS+1
OPNXEDIT EQU   OPNXFLGS+1
OPNXBRK  EQU   OPNXFLGS+1
OPNXHOLD EQU   OPNXFLGS+1
@NM00070 EQU   OPNXFLGS
OPNXADTP EQU   OPNXFLGS
OPNXALC  EQU   OPNXFLGS
OPNXBFSZ EQU   OPARMS+14
@NM00069 EQU   OPARMS+12
@NM00068 EQU   OPFLAGS+3
@NM00067 EQU   OPFLAGS+2
@NM00066 EQU   OPOPTNS
OPASID   EQU   OPOPTNS
OPEDIT   EQU   OPOPTNS
OPBRK    EQU   OPOPTNS
OPHOLD   EQU   OPOPTNS
@NM00065 EQU   OPFLAGS
OPADTOP  EQU   OPFLAGS
OPALLOC  EQU   OPFLAGS
TVWAEND  EQU   TVWA+216
@NM00064 EQU   TVWA+208
TVWAUSRA EQU   TVWA+200
@NM00063 EQU   TVWA+192
TVWAFRWO EQU   TVWA+188
TVWAFRWI EQU   TVWA+184
TVWARSHW EQU   TVWA+183
@NM00062 EQU   TVWAFLG6
TVWAINB  EQU   TVWAFLG6
TVWAFMEW EQU   TVWAFLG6
TVWARCDT EQU   TVWAFLG6
TVWAIOP  EQU   TVWAFLG6
TVWAIOTR EQU   TVWAFLG6
TVWAISYS EQU   TVWAFLG6
@NM00061 EQU   TVWA+180
TVWAQMLB EQU   TVWA+176
TVWAATBO EQU   TVWA+172
TVWAATBI EQU   TVWA+168
TVWATRNM EQU   TVWA+160
TVWATABO EQU   TVWA+156
TVWATABI EQU   TVWA+152
TVWALNCT EQU   TVWA+151
TVWAP1ST EQU   TVWAFLG5
TVWAPRMT EQU   TVWAFLG5
TVWANFSP EQU   TVWAFLG5
TVWATIR  EQU   TVWAFLG5
TVWAFSW  EQU   TVWAFLG5
TVWAWO   EQU   TVWAFLG5
TVWAFSM  EQU   TVWAFLG5
TVWASCAN EQU   TVWAFLG5
@NM00060 EQU   TVWA+148
TVWADARC EQU   TVWAFLG4
TVWARCRS EQU   TVWAFLG4
TVWAQMEV EQU   TVWAFLG4
TVWAFLSC EQU   TVWAFLG4
TVWANOFB EQU   TVWAFLG4
TVWAKBDL EQU   TVWAFLG4
TVWADOOQ EQU   TVWAFLG4
TVWAFMSC EQU   TVWAFLG4
TVWATRDF EQU   TVWAFLG3
TVWATRAN EQU   TVWAFLG3
TVWAQLBU EQU   TVWAFLG3
TVWAQMIO EQU   TVWAFLG3
TVWAQMRT EQU   TVWAFLG3
TVWAAIGN EQU   TVWAFLG3
TVWASDSG EQU   TVWAFLG3
TVWABRIN EQU   TVWAFLG3
TVWABIR  EQU   TVWAFLG2
TVWARTRY EQU   TVWAFLG2
TVWABKMG EQU   TVWAFLG2
TVWAERMG EQU   TVWAFLG2
TVWAGERR EQU   TVWAFLG2
TVWASCD  EQU   TVWAFLG2
TVWAPGN  EQU   TVWAFLG2
TVWABFC  EQU   TVWAFLG2
TVWAOOPS EQU   TVWAFLG1
TVWALTE  EQU   TVWAFLG1
TVWAULK  EQU   TVWAFLG1
TVWAXSCD EQU   TVWAFLG1
TVWATID  EQU   TVWAFLG1
TVWATAS  EQU   TVWAFLG1
TVWATIS  EQU   TVWAFLG1
TVWATOD  EQU   TVWAFLG1
TVWADIN3 EQU   TVWADLST+8
TVWADIN2 EQU   TVWADLST+4
TVWADIN1 EQU   TVWADLST
TVWAECB3 EQU   TVWAECBL+8
TVWAECB2 EQU   TVWAECBL+4
TVWAECB1 EQU   TVWAECBL
TVWATECB EQU   TVWA+116
TVWAECB  EQU   TVWA+112
TVWALNSV EQU   TVWA+111
@NM00059 EQU   TVWAFLG7
TVWACHSE EQU   TVWAFLG7
TVWATOBB EQU   TVWAFLG7
TVWARISW EQU   TVWAFLG7
TVWARET  EQU   TVWAFLG7
TVWARDBF EQU   TVWAFLG7
TVWASND1 EQU   TVWAFLG7
TVWABKPG EQU   TVWAFLG7
TVWAVSZ  EQU   TVWA+108
TVWAEXL  EQU   TVWA+100
TVWANIB  EQU   TVWA+92
TVWAACB  EQU   TVWA+88
TVWATQL2 EQU   TVWA+87
TVWATQL1 EQU   TVWA+86
TVWAATTN EQU   TVWA+85
TVWACHNL EQU   TVWA+84
TVWALBUF EQU   TVWA+80
TVWAHBUF EQU   TVWA+76
TVWACLSZ EQU   TVWA+74
TVWAGMPT EQU   TVWA+68
TVWATCB  EQU   TVWA+64
TVWAUSMN EQU   TVWA+60
TVWACPID EQU   TVWA+56
TVWAEOQ  EQU   TVWA+52
TVWANOM  EQU   TVWA+48
TVWABOQ  EQU   TVWA+44
TVWAEIQ  EQU   TVWA+40
TVWANIM  EQU   TVWA+36
TVWABIQ  EQU   TVWA+32
TVWAQMWA EQU   TVWA+28
TVWABFPT EQU   TVWA+20
TVWATOPQ EQU   TVWA+16
TVWATOMW EQU   TVWA+12
TVWATIMW EQU   TVWA+8
TVWAPPL  EQU   TVWA
TSBXEND  EQU   TSBX+120
@NM00058 EQU   TSBX+116
TSBXRPL  EQU   TSBX+76
TSBXTMBF EQU   TSBXTERM+2
@NM00057 EQU   TSBXTERM+1
TSBXRSZO EQU   TSBX+69
TSBXRSZI EQU   TSBX+68
TSBXLBUF EQU   TSBX+64
TSBXCSAP EQU   TSBX+60
TSBXSRB  EQU   TSBX+56
TSBXSRBI EQU   TSBX+52
@NM00056 EQU   TSBX+48
TSBXTOM  EQU   TSBX+44
TSBXTIM  EQU   TSBX+40
@NM00055 EQU   TSBX+33
@NM00054 EQU   TSBXFLG1
TSBXLOGF EQU   TSBXFLG1
@NM00053 EQU   TSBX+16
@NM00052 EQU   TSBX+12
TSBXBCK  EQU   TSBX+4
TSBEND   EQU   TSB+120
TSBSF1   EQU   TSB+112
TSBALTC  EQU   TSB+103
TSBALTR  EQU   TSB+102
TSBPRMC  EQU   TSB+101
TSBPRMR  EQU   TSB+100
TSBLECB  EQU   TSBMINL
TSBLINE  EQU   TSB+82
TSBSTAX  EQU   TSB+81
TSBATTNC EQU   TSB+80
TSBF1V   EQU   TSBTPOST+7
TSBF1M   EQU   TSBTPOST+6
TSBF2V   EQU   TSBTPOST+5
TSBF2M   EQU   TSBTPOST+4
TSBFLAGV EQU   TSBTPOST+3
TSBFLAGM EQU   TSBTPOST+2
TSBSBASV EQU   TSBTPOST+1
@NM00051 EQU   TSBTPFLG
@NM00050 EQU   TSBTPFLG
@NM00049 EQU   TSBTPFLG
@NM00048 EQU   TSBTPFLG
TSBNEWID EQU   TSBTPFLG
TSBTPAYI EQU   TSBTPFLG
TSBTPQCB EQU   TSBTPFLG
TSBPOSTO EQU   TSBTPFLG
TSBLINKB EQU   TSBLINKA+1
TSBPRI   EQU   TSBLINKA
TSBRQCB  EQU   TSBRCB
TSBCTCB  EQU   TSB+60
TSBERSDS EQU   TSB+56
TSBAUTOI EQU   TSB+52
TSBAUTOS EQU   TSB+48
TSBATNCC EQU   TSB+44
TSBASRCE EQU   TSB+42
TSBHLDL  EQU   TSBFLG4
TSBGETBF EQU   TSBFLG4
TSBCANC  EQU   TSBFLG4
TSBHOLD  EQU   TSBFLG4
TSBHUNG  EQU   TSBFLG4
TSBOWAIT EQU   TSBFLG4
TSBIWAIT EQU   TSBFLG4
TSBOCAB  EQU   TSBFLG4
TSBLNNO  EQU   TSB+40
TSBATNTC EQU   TSB+38
TSBATNLC EQU   TSB+36
TSBCHDCC EQU   TSBSTCC+1
TSBLNDCC EQU   TSBSTCC
TSBWTJID EQU   TSB+32
TSBECB   EQU   TSB+28
TSBC1050 EQU   TSBTERM2
@NM00047 EQU   TSBTERM2
@NM00046 EQU   TSBTERM2
@NM00045 EQU   TSBTERM2
@NM00044 EQU   TSBTERM2
TSBCTWX  EQU   TSBTERM2
@NM00043 EQU   TSBTERM2
@NM00042 EQU   TSBTERM2
@NM00041 EQU   TSBTERM1
@NM00040 EQU   TSBTERM1
@NM00039 EQU   TSBTERM1
TSBC2741 EQU   TSBTERM1
TSBC5041 EQU   TSBTERM1
TSBCATTN EQU   TSBTERM1
TSBCBRK  EQU   TSBTERM1
TSBCIHBN EQU   TSBTERM1
TSBVTAM  EQU   TSBFLG5
TSBKEYS  EQU   TSBFLG5
@NM00038 EQU   TSBFLG5
TSBATMP  EQU   TSBFLG5
TSBNFLOP EQU   TSBFLG3
TSBNOBRK EQU   TSBFLG3
TSBTPUT  EQU   TSBFLG3
TSBAWOIP EQU   TSBFLG3
TSBNBKSP EQU   TSBFLG3
TSBSPIT  EQU   TSBFLG3
TSBTJMSG EQU   TSBFLG3
TSBATTN  EQU   TSBFLG3
TSBIBFP  EQU   TSB+21
TSBNIBF  EQU   TSB+20
TSBITBFP EQU   TSB+17
TSBSATN2 EQU   TSBFLG2
TSBSATN1 EQU   TSBFLG2
TSBSTAUT EQU   TSBFLG2
TSBAUTOC EQU   TSBFLG2
TSBAULST EQU   TSBFLG2
TSBBRKIN EQU   TSBFLG2
TSBAUTON EQU   TSBFLG2
TSBBIPI  EQU   TSBFLG2
TSBOBFP  EQU   TSB+13
TSBNOBF  EQU   TSB+12
TSBOTBFP EQU   TSB+9
TSBLNSZ  EQU   TSB+8
TSBWTCB  EQU   TSB+5
TSBTJBF  EQU   TSBFLG1
TSBTJIP  EQU   TSBFLG1
TSBTJOW  EQU   TSBFLG1
TSBIFLSH EQU   TSBFLG1
TSBWOWIP EQU   TSBFLG1
TSBOWIP  EQU   TSBFLG1
TSBOFLSH EQU   TSBFLG1
TSBANSR  EQU   TSBFLG1
TSBASCB  EQU   TSBASCBA+1
TSBATNLD EQU   TSBSTAT
TSBDISC  EQU   TSBSTAT
TSBITOFF EQU   TSBSTAT
TSBNOBUF EQU   TSBSTAT
TSBLWAIT EQU   TSBSTAT
TSBINUSE EQU   TSBSTAT
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
TCASTEND EQU   TCAST+136
TCASDUMP EQU   TCAST+132
TCASSCHD EQU   TCAST+128
@NM00037 EQU   TCAST+124
TCASOMJR EQU   TCAST+120
@NM00036 EQU   TCAST+118
TCASATTN EQU   TCAST+112
TCASASCI EQU   TCAST+108
TCASTTQH EQU   TCAST+104
@NM00035 EQU   TCAST+102
@NM00034 EQU   TCAST+100
@NM00033 EQU   TCAST+98
@NM00032 EQU   TCAST+96
TCASASCB EQU   TCAST+92
@NM00031 EQU   TCAST+90
@NM00030 EQU   TCASFLG2
@NM00029 EQU   TCASFLG1
TCASNACT EQU   TCASFLG1
@NM00028 EQU   TCASFLG1
TCASABND EQU   TCASFLG1
TCASMDSW EQU   TCASFLG1
TCASBKMD EQU   TCASFLG1
TCASLTE  EQU   TCAST+84
TCASEXIT EQU   TCAST+80
TCASIQM  EQU   TCAST+72
TCASTTL  EQU   TCAST+64
TCASWA   EQU   TCAST+60
TCASFRR  EQU   TCAST+56
TCASDATO EQU   TCAST+48
TCASDATI EQU   TCAST+44
TCASXECB EQU   TCAST+40
TCASTID  EQU   TCAST+32
@NM00027 EQU   TCAST+31
TCASCHNL EQU   TCAST+30
TCASCRSZ EQU   TCAST+28
TCASLBUF EQU   TCAST+24
TCASHBUF EQU   TCAST+20
TCASCLSZ EQU   TCAST+18
TCASRCON EQU   TCAST+16
TCASACBP EQU   TCAST+8
TCASUMAX EQU   TCASUSER+2
TCASUSEC EQU   TCASUSER
TCASID   EQU   TCAST
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00056 EQU   @RC00055
@ENDDATA EQU   *
         END   IKTLOGR,(C'PLS1919',0701,77319)
