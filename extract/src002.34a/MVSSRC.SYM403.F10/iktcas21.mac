         TITLE 'IKTCAS21 - ACB CONTROL                                 *
                        '
IKTCAS21 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKTCAS21  77.319'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*      TCASTPTR=TWATCAST ;             /* ESTABLISH TCAST ADDR       */
         L     TCASTPTR,TWATCAST(,TWAPTR)                          0026
*      RFY WESTD BASED(R10) ;          /* W.E.ADDR IS PASSED IN R10  */
*      RFY  IFGACB BASED(ACBPTR) ;     /* ACB BASE PTR               */
*      RFY  IFGEXLST BASED(EXLSTPTR) ;  /* EXLST BASE PTR            */
*      ACBPTR=ADDR(ACBADDR) ;          /* ACB ADDRESSIBILITY         */
         LA    @06,ACBADDR                                         0030
         ST    @06,ACBPTR                                          0030
*      EXLSTPTR=ADDR(EXLSTADD) ;       /* EXLST ADDRESSIBILITY       */
         LA    @06,EXLSTADD                                        0031
         ST    @06,EXLSTPTR                                        0031
*    /*                                                              */
*    /*      ONE OF 4 FUNCTIONS MAY BE REQUESTED:                    */
*    /*        ACB OPEN                                              */
*    /*        ACB CLOSE                                             */
*    /*        START LOGON                                           */
*    /*        QUIESCE LOGON                                         */
*    /*                                                              */
*    /*      THE FOLLOWING CODE DETERMINE WHICH FUNCTION HAS BEEN    */
*    /*      REQUESTED AND BRANCH TO THE PROPER ROUTINE TO PERFORM   */
*    /*      THE FUNCTION                                            */
*    /*                                                              */
*      WERC=0 ;                        /* INITIALIZE RETURN CODE     */
         SLR   @06,@06                                             0032
         STH   @06,WERC(,R10)                                      0032
*      IF WECODE1F=FCVIAO              /* IS THIS ACB OPEN           */
*         THEN CALL OPEN ;             /* YES, BRANCH TO IT          */
         CLI   WECODE1F(R10),X'11'                                 0033
         BNE   @RF00033                                            0033
         BAL   @14,OPEN                                            0034
*         ELSE IF WECODE1F=FCVIAC      /* NO, IS THIS ACB CLOSE      */
*           THEN CALL CLOSE ;          /* YES, BRANCH TO IT          */
         B     @RC00033                                            0035
@RF00033 CLI   WECODE1F(R10),X'12'                                 0035
         BNE   @RF00035                                            0035
         BAL   @14,CLOSE                                           0036
*           ELSE IF WECODE1F=FCVIAS    /* NO, IS THIS START LOGON    */
*             THEN CALL START ;        /* YES, BRANCH TO IT          */
         B     @RC00035                                            0037
@RF00035 CLI   WECODE1F(R10),X'14'                                 0037
         BNE   @RF00037                                            0037
         BAL   @14,START                                           0038
*             ELSE IF WECODE1F=FCVIAQ  /* NO, IS THIS QUIESCE LOGON  */
*               THEN CALL QUIESCE ;    /* YES, BRANCH TO IT          */
         B     @RC00037                                            0039
@RF00037 CLI   WECODE1F(R10),X'13'                                 0039
         BNE   @RF00039                                            0039
         BAL   @14,QUIESCE                                         0040
*    /*                                                              */
*    /*      THE FOLLOWING CODE CHECKS THE RETURN CODE SET BY        */
*    /*      PERFORMING ROUTINE. IF IT IS NOT ZERO, THE W.E.         */
*    /*      REPRESENTING THIS REQUEST IS DIRECTED TO THE SECOND     */
*    /*      DESTINATION INDICATED IN WECODE2 FIELD OF W.E.          */
*    /*                                                              */
*      IF WERC ^=0                     /* IS RETURN CODE NOT ZERO    */
*         THEN DO ;                    /* NO, DIRECT W.E. TO SECOND  */
@RF00039 DS    0H                                                  0041
@RC00037 DS    0H                                                  0041
@RC00035 DS    0H                                                  0041
@RC00033 LH    @15,WERC(,R10)                                      0041
         N     @15,@CF00568                                        0041
         LTR   @15,@15                                             0041
         BZ    @RF00041                                            0041
*         WECODE1=WECODE1 && WECODE2 ; /*     DEST BY SWAP WECODE1   */
         XC    WECODE1(2,R10),WECODE2(R10)                         0043
*         WECODE2=WECODE2 && WECODE1 ; /*     AND WECODE2. BECAUSE   */
         XC    WECODE2(2,R10),WECODE1(R10)                         0044
*         WECODE1=WECODE1 && WECODE2 ; /*     WECODE1 SHOULD CONTAIN */
         XC    WECODE1(2,R10),WECODE2(R10)                         0045
*         END ;                        /*     THE DESTINATION AND    */
*                                      /*     WECODE2 THE ORIGINATOR */
         EJECT
*    /*                                                              */
*    /*      THE FOLLOWING CODE OPENS THE ACB                        */
*    /*                                                              */
*OPEN : PROC OPTIONS(NOSAVE,NOSAVEAREA)    ;                       0047
         B     @PB00002                                            0047
OPEN     DS    0H                                                  0048
*      SA1=R14 ;                          /* SAVE RETURN REG      */
         LR    SA1,R14                                             0048
*      IF TCASACBP='        '          /* IS THERE PASS WORD IN TCAST*/
*         THEN ACBPASSW=0 ;            /* NO,ZERO PASS WORD ADDR     */
         CLC   TCASACBP(8,TCASTPTR),@CC00526                       0049
         BNE   @RF00049                                            0049
         L     @01,ACBPTR                                          0050
         SLR   @00,@00                                             0050
         ST    @00,ACBPASSW(,@01)                                  0050
*         ELSE PWORD=TCASACBP ;        /* YES,STORE PASS WORD        */
         B     @RC00049                                            0051
@RF00049 MVC   PWORD(8),TCASACBP(TCASTPTR)                         0051
*      EXLLGNP=LOGON ;                 /* STORE LOGON EXIT ADDRESS   */
@RC00049 L     @15,EXLSTPTR                                        0052
         MVC   EXLLGNP(4,@15),LOGON                                0052
*      EXLTPNDP=TPEND ;                /* STORE TPEND EXIT ADDRESS   */
         MVC   EXLTPNDP(4,@15),TPEND                               0053
*      RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;          0054
*      GEN ;                                                       0055
         OPEN  ACBADDR                OPEN ACB
*      IF R15 >=8                      /* TEST RETURN CODE           */
*         THEN DO ;                    /* OPEN FAILED                */
         C     R15,@CF00042                                        0056
         BL    @RF00056                                            0056
*         GEN SETS(WA) ;               /* USE SHOWCB TO GET ERROR CD */
         SHOWCB ACB=ACBADDR,FIELDS=ERROR,AREA=WA1,LENGTH=4,AM=VTAM
*         WERC=WA1 ;                   /* STORE ERROR CODE AS RETURN */
         L     @05,WA1                                             0059
         STH   @05,WERC(,R10)                                      0059
*         END ;                        /*   CODE IN W.E.             */
*         ELSE TWAVFL5='1'B ;          /* NO ERROR,SET OPEN BIT ON   */
         B     @RC00056                                            0061
@RF00056 OI    TWAVFL5(TWAPTR),B'00001000'                         0061
*      RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;           0062
@RC00056 DS    0H                                                  0063
*      R14=SA1 ;                           /* RESTORE RET REG        */
         LR    R14,SA1                                             0063
*      END OPEN ;                                                  0064
@EL00002 DS    0H                                                  0064
@EF00002 DS    0H                                                  0064
@ER00002 BR    @14                                                 0064
         EJECT
*    /*                                                              */
*    /*        THE FOLLOWING CODE CLOSE THE ACB                      */
*    /*                                                              */
*CLOSE : PROC OPTIONS(NOSAVE,NOSAVEAREA)    ;                      0065
CLOSE    DS    0H                                                  0066
*        SA2=R14 ;                         /* SAVE RETURN REG        */
         LR    SA2,R14                                             0066
*      RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;          0067
*      GEN ;                                                       0068
         CLOSE ACBADDR                ISSUE CLOSE  ACB
*      RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;           0069
*      TWAVFL5='0'B ;                  /* SET OPEN BIT OFF           */
         NI    TWAVFL5(TWAPTR),B'11110111'                         0070
*      R14=SA2 ;                       /* RESTORE RETURN REG         */
         LR    R14,SA2                                             0071
*      END CLOSE ;                                                 0072
@EL00003 DS    0H                                                  0072
@EF00003 DS    0H                                                  0072
@ER00003 BR    @14                                                 0072
         EJECT
*    /*                                                              */
*    /*        FOLLOWING ROUTINE START LOGONS BY ISSUING SETLOGON    */
*    /*        MACRO                                                 */
*    /*                                                              */
*START : PROC OPTIONS(NOSAVE,NOSAVEAREA)    ;                      0073
START    DS    0H                                                  0074
*      SA3=R14 ;                       /* SAVE RETURN REG           */
         ST    R14,SA3                                             0074
*/*                                                                  */
*/*      IN ORDER TO START LOGON ACB MUST BE CLOSED AND RE-OPENED    */
*/*      AGAIN IF ACB IS ALREADY OPENED                              */
*/*                                                                  */
*      WERC=0 ;                        /* INITIALIZE RETURN CODE     */
         SLR   @06,@06                                             0075
         STH   @06,WERC(,R10)                                      0075
*      IF TWAVFL5='1'B                 /* IS OPEN BIT ON             */
*         THEN DO ;                    /* YES                        */
         TM    TWAVFL5(TWAPTR),B'00001000'                         0076
         BNO   @RF00076                                            0076
*         CALL CLOSE ;                 /* CLOSE THE ACB              */
         BAL   @14,CLOSE                                           0078
*         CALL OPEN ;                  /* RE-OPEN ACB                */
         BAL   @14,OPEN                                            0079
*         END ;                                                    0080
*         ELSE CALL OPEN ;             /* OPEN ACB                   */
         B     @RC00076                                            0081
@RF00076 BAL   @14,OPEN                                            0081
*      IF WERC=0                       /* CHECK RTN CODE IS OPEN O.K.*/
*         THEN DO ;                    /* YES                        */
@RC00076 LH    @06,WERC(,R10)                                      0082
         N     @06,@CF00568                                        0082
         LTR   @06,@06                                             0082
         BNZ   @RF00082                                            0082
*         RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;       0084
*         GEN ;                        /* ISSUE SETLOGON TO START    */
         SETLOGON RPL=RPLADDR,OPTCD=(SYN,START)
*         IF R15=0                     /* IS SETLOGON SUCCESSFUL     */
*            THEN DO ;                 /* YES                        */
         LTR   R15,R15                                             0086
         BNZ   @RF00086                                            0086
*            TWAVFL6='1'B ;            /* SET START LOGON BIT ON     */
         OI    TWAVFL6(TWAPTR),B'00000100'                         0088
*            R1=7 ;                    /* 7 IS ACCEPTING LOGON MSG # */
         LA    R1,7                                                0089
*            CALL IKTCAS56 ;           /* TO GET MSG # 7             */
         L     @15,TWAMSG(,TWAPTR)                                 0090
         BALR  @14,@15                                             0090
*            R1=R1+4 ;                 /* R1 PTR TO THE LENGTH AND   */
         AL    R1,@CF00036                                         0091
*                                      /* MSG, THEN SKIP LENGTH      */
*            GEN ;                                                 0092
         WTO   MF=(E,(1))             ISSUE ACCEPTING LOGON MSG
*            END ;                                                 0093
*            ELSE DO ;                 /* NO, GO FIND ERROR          */
         B     @RC00086                                            0094
@RF00086 DS    0H                                                  0095
*            WA1=0 ;                   /* INITIALIZE WORK AREA       */
         SLR   @06,@06                                             0095
         ST    @06,WA1                                             0095
*            WA2=0 ;                   /* INITIALIZE WORK AREA       */
         ST    @06,WA2                                             0096
*            GEN SETS(WA) ;            /* ISSUE SHOWCB TO GET ERROR  */
         SHOWCB AM=VTAM,RPL=RPLADDR,FIELDS=(RTNCD,FDBK2),             CC
               AREA=WA,LENGTH=8       TO EXTRACT ERROR CD PLACE IN WA
*/*                                                                  */
*/*      IF RTNCD IS 16 AND FDBK2 IS 13 IN RPL, MEANS THE CONNECTION */
*/*      OF ACB JUST OPENED IS BROKEN. SO OPEN SHOULD BE RE-ISSUED   */
*/*                                                                  */
*        IF WA1=RCLGFAIL & WA2=13      /* CHECK ERROR CONDITION      */
*           THEN DO ;                  /* OPEN HAS BEEN BROKEN       */
         CLC   WA1(4),@CF00086                                     0098
         BNE   @RF00098                                            0098
         CLC   WA2(4),@CF00536                                     0098
         BNE   @RF00098                                            0098
*           CALL OPEN ;                /* RE-OPEN                    */
         BAL   @14,OPEN                                            0100
*           IF WERC=0                  /* IS OPEN SUCCESSFUL         */
*              THEN DO;                /* YES,RE-ISSUE START LOGON   */
         LH    @07,WERC(,R10)                                      0101
         N     @07,@CF00568                                        0101
         LTR   @07,@07                                             0101
         BNZ   @RF00101                                            0101
*              GEN ;                                               0103
         SETLOGON RPL=RPLADDR,OPTCD=(SYN,START)  TO START LOGON
*              IF R15=0                /* IS START LOGON SUCCESSFUL  */
*            THEN DO ;                 /* YES                        */
         LTR   R15,R15                                             0104
         BNZ   @RF00104                                            0104
*            TWAVFL6='1'B ;            /* SET START LOGON BIT ON     */
         OI    TWAVFL6(TWAPTR),B'00000100'                         0106
*            R1=7 ;                    /* 7 IS ACCEPTING LOGON MSG # */
         LA    R1,7                                                0107
*            CALL IKTCAS56 ;           /* TO GET MSG # 7             */
         L     @15,TWAMSG(,TWAPTR)                                 0108
         BALR  @14,@15                                             0108
*            R1=R1+4 ;                 /* R1 PTR TO THE LENGTH AND   */
         AL    R1,@CF00036                                         0109
*                                      /* MSG, THEN SKIP LENGTH      */
*            GEN ;                                                 0110
         WTO   MF=(E,(1))             ISSUE ACCEPTING LOGON MSG
*            END ;                                                 0111
*                 ELSE WERC=RCLGFAIL ; /* NO, STORE FAILURE RTN CODE */
         B     @RC00104                                            0112
@RF00104 MVC   WERC(2,R10),@CH00086                                0112
*              RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;   0113
@RC00104 DS    0H                                                  0114
*              END ;                                               0114
*           END ;                                                  0115
*           ELSE WERC=RCLGFAIL ;       /* NOT BROKEN CONNECTION, IT  */
         B     @RC00098                                            0116
@RF00098 MVC   WERC(2,R10),@CH00086                                0116
*                                      /*   IS SOMETHING ELSE THEN   */
*                                      /*   STORE FAILURE RTN CODE   */
*         END ;                                                    0117
@RC00098 DS    0H                                                  0118
*      END ;                                                       0118
@RC00086 DS    0H                                                  0119
*      R14=SA3 ;                           /* RESTORE REG           */
@RF00082 L     R14,SA3                                             0119
*      END START ;                                                 0120
@EL00004 DS    0H                                                  0120
@EF00004 DS    0H                                                  0120
@ER00004 BR    @14                                                 0120
         EJECT
*    /*                                                              */
*    /*        FOLLOWING CODE ISSUE QUIESCE LOGON                    */
*    /*                                                              */
*QUIESCE : PROC OPTIONS(NOSAVE,NOSAVEAREA)    ;                    0121
QUIESCE  DS    0H                                                  0122
*      SA4=R14 ;                           /* SAVE RETURN REG        */
         LR    SA4,R14                                             0122
*      RFY (R14,R15,R0,R1) RSTD  /* RESTRICT PARA REG*/ ;          0123
*      GEN ;                                                       0124
         SETLOGON RPL=RPLADDR,OPTCD=(SYN,QUIESCE)  QUIESCE LOGON
*      IF R15=0                        /* TEST RTN CODE, IS IT O.K.  */
*         THEN DO ;                    /* YES                        */
         LTR   R15,R15                                             0125
         BNZ   @RF00125                                            0125
*         TWAVFL6='0'B ;               /* SET START LOGON BIT OFF    */
         NI    TWAVFL6(TWAPTR),B'11111011'                         0127
*         R1=8 ;                       /* 8 IS QUIESCE LOGON MSG #   */
         LA    R1,8                                                0128
*         CALL IKTCAS56 ;              /* TO GET MSG  8              */
         L     @15,TWAMSG(,TWAPTR)                                 0129
         BALR  @14,@15                                             0129
*         R1=R1+4 ;                    /* R1 PTR TO THE LENGTH AND   */
         AL    R1,@CF00036                                         0130
*                                      /* MSG, THEN SKIP LENGTH      */
*         GEN ;                                                    0131
         WTO   MF=(E,(1))             ISSUE QUIESCE LOGON MSG
*         END ;                                                    0132
*         ELSE WERC=RCLGFAIL ;         /* NO, SET FAILURE RTN CODE   */
         B     @RC00125                                            0133
@RF00125 MVC   WERC(2,R10),@CH00086                                0133
*      RFY (R14,R15,R0,R1) UNRSTD /*UNRESTRI PARA R */ ;           0134
@RC00125 DS    0H                                                  0135
*      R14=SA4 ;                           /* RESTORE  REG           */
         LR    R14,SA4                                             0135
*      END QUIESCE ;                                               0136
@EL00005 DS    0H                                                  0136
@EF00005 DS    0H                                                  0136
@ER00005 BR    @14                                                 0136
@PB00005 DS    0H                                                  0137
*      GEN DATA DEFS(ACBADDR,EXLSTADD,RPLADDR,LOGON,TPEND) ;       0137
*      END IKTCAS21                                                0138
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKTTCAST)                                        *
*/*%INCLUDE SYSLIB  (IFGACB  )                                        *
*/*%INCLUDE SYSLIB  (IFGACBVT)                                        *
*/*%INCLUDE SYSLIB  (IFGEXLST)                                        *
*/*%INCLUDE SYSLIB  (IFGEXLVT)                                        *
*/*%INCLUDE SYSLIB  (IKTCASWA)                                        *
*;                                                                 0138
@EL00001 L     @13,4(,@13)                                         0138
@EF00001 DS    0H                                                  0138
@ER00001 LM    @14,@12,12(@13)                                     0138
         BR    @14                                                 0138
@DATA    DS    0H
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00036 DC    F'4'
@CF00042 DC    F'8'
@CF00536 DC    F'13'
@CF00086 DC    F'16'
@CH00086 EQU   @CF00086+2
@CF00568 DC    XL4'0000FFFF'
         DS    0D
ACBPTR   DS    A
EXLSTPTR DS    A
SA3      DS    F
@CC00526 DC    C'        '
APPLID   DS    CL9
         ORG   APPLID
@NM00047 DC    AL1(8)
APLID    DC    CL8'TSO     '
         ORG   APPLID+9
PASSWD   DS    CL9
         ORG   PASSWD
@NM00048 DC    AL1(8)
PWORD    DC    CL8'        '
         ORG   PASSWD+9
         DS    CL2
WA       DS    CL8
         ORG   WA
WA1      DC    A(0)
WA2      DC    A(0)
         ORG   WA+8
PATCH    DC    13F'0'
IKTCAS21 CSECT
ACBADDR  ACB   AM=VTAM,APPLID=APPLID,PASSWD=PASSWD,EXLST=EXLSTADD,    CC
               MACRF=LOGON
EXLSTADD EXLST AM=VTAM,LOGON=LOGON,TPEND=TPEND
RPLADDR  RPL   AM=VTAM,ACB=ACBADDR
LOGON    DC    V(IKTCAS23)
TPEND    DC    V(IKTCAS24)
IKTCAS21 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SA4      EQU   @06
SA2      EQU   @06
SA1      EQU   @06
TCASTPTR EQU   @07
TWAPTR   EQU   @11
R0       EQU   @00
R1       EQU   @01
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R14      EQU   @14
R15      EQU   @15
R12      EQU   @12
R13      EQU   @13
TCAST    EQU   0
TCASUSER EQU   TCAST+4
TCASACBP EQU   TCAST+8
TCASFLG1 EQU   TCAST+88
TCASFLG2 EQU   TCAST+89
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBPASSW EQU   ACBCOMN+32
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBVTEXT EQU   IFGACB+76
IFGEXLST EQU   0
EXLCOMN  EQU   IFGEXLST
EXLLEN   EQU   EXLCOMN+2
EXLEODF  EQU   EXLCOMN+5
EXLSYNF  EQU   EXLCOMN+10
EXLLERF  EQU   EXLCOMN+15
EXLSCIPF EQU   EXLCOMN+20
EXLLGNF  EQU   EXLCOMN+25
EXLLGNP  EQU   EXLCOMN+26
EXLJRNF  EQU   EXLCOMN+30
EXLOPNF  EQU   EXLCOMN+35
EXLVTEXT EQU   IFGEXLST+40
EXLNLGNF EQU   EXLVTEXT
EXLRLRQF EQU   EXLVTEXT+5
EXLATTNF EQU   EXLVTEXT+15
EXLTPNDF EQU   EXLVTEXT+20
EXLTPNDP EQU   EXLVTEXT+21
EXLDFAS  EQU   0
EXLDFASF EQU   EXLDFAS
EXLRESP  EQU   0
EXLRESPF EQU   EXLRESP
IFGEXLEF EQU   0
EXLENTRY EQU   IFGEXLEF
EXLFLAG  EQU   EXLENTRY
EXLENFL  EQU   EXLFLAG
EXLEXITP EQU   EXLENTRY+1
TWAR     EQU   0
TWATCAST EQU   TWAR+20
TWAMSG   EQU   TWAR+48
TWAMFL   EQU   TWAR+80
TWAVFL   EQU   TWAR+81
TWAVFL5  EQU   TWAVFL
TWAVFL6  EQU   TWAVFL
TWAUFL   EQU   TWAR+82
TWACFL   EQU   TWAR+83
TWAM     EQU   TWAR+84
TWAME    EQU   TWAM+68
TWAMEI   EQU   TWAME
TWAV     EQU   TWAR+184
TWAVE    EQU   TWAV+68
TWAVEI   EQU   TWAVE
TWAVI    EQU   TWAR+284
TWAU     EQU   TWAR+300
TWAUE    EQU   TWAU+68
TWAUEI   EQU   TWAUE
TWAUI    EQU   TWAR+400
TWAC     EQU   TWAR+408
TWACE    EQU   TWAC+68
TWACEI   EQU   TWACE
TWACI    EQU   TWAR+508
WESTD    EQU   0
WECODE1  EQU   WESTD
WECODE1F EQU   WECODE1+1
WECODE2  EQU   WESTD+2
WECODE2F EQU   WECODE2+1
WERC     EQU   WESTD+8
WELBUF   EQU   WESTD+12
WEVNIB   EQU   WESTD+16
IKTCAS56 EQU   0
ISTACB   EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
WEVRPL   EQU   WESTD+20
WEUECB   EQU   WEVNIB
WEUASCB  EQU   WELBUF
WELEN    EQU   WESTD+10
WERC2    EQU   WERC+1
WERC1    EQU   WERC
WENEXT   EQU   WESTD+4
WECD2MIF EQU   WECODE2F
WECD2MAF EQU   WECODE2F
WECODE2T EQU   WECODE2
WECDMIF  EQU   WECODE1F
WECDMAF  EQU   WECODE1F
WECODE1T EQU   WECODE1
TWAEND   EQU   TWAR+536
TWAWORKE EQU   TWAR+524
@NM00046 EQU   TWACI+13
TWACSKIP EQU   TWACI+12
TWACMODQ EQU   TWACI+8
TWACSTPQ EQU   TWACI+4
TWACECB  EQU   TWACI
TWACERRS EQU   TWACE+4
TWACERA  EQU   TWACEI+1
TWACEIFC EQU   TWACEI
TWACRTFC EQU   TWAC+60
TWACABFC EQU   TWAC+56
TWACTWA  EQU   TWAC+52
TWACEWA  EQU   TWAC+4
TWACID   EQU   TWAC
TWAUACQH EQU   TWAUI+4
TWAUECB  EQU   TWAUI
TWAUERRS EQU   TWAUE+4
TWAUERA  EQU   TWAUEI+1
TWAUEIFC EQU   TWAUEI
TWAURTFC EQU   TWAU+60
TWAUABFC EQU   TWAU+56
TWAUTWA  EQU   TWAU+52
TWAUEWA  EQU   TWAU+4
TWAUID   EQU   TWAU
TWAVACQH EQU   TWAVI+12
TWAVTHQH EQU   TWAVI+8
TWAVTEQH EQU   TWAVI+4
TWAVECB  EQU   TWAVI
TWAVERRS EQU   TWAVE+4
TWAVERA  EQU   TWAVEI+1
TWAVEIFC EQU   TWAVEI
TWAVRTFC EQU   TWAV+60
TWAVABFC EQU   TWAV+56
TWAVTWA  EQU   TWAV+52
TWAVEWA  EQU   TWAV+4
TWAVID   EQU   TWAV
TWAMERRS EQU   TWAME+4
TWAMERA  EQU   TWAMEI+1
TWAMEIFC EQU   TWAMEI
TWAMRTFC EQU   TWAM+60
TWAMABFC EQU   TWAM+56
TWAMTWA  EQU   TWAM+52
TWAMEWA  EQU   TWAM+4
TWAMID   EQU   TWAM
@NM00045 EQU   TWACFL
TWACFL4  EQU   TWACFL
TWACFL2  EQU   TWACFL
TWACFL1  EQU   TWACFL
@NM00044 EQU   TWAUFL
TWAUFL4  EQU   TWAUFL
TWAUFL3  EQU   TWAUFL
TWAUFL2  EQU   TWAUFL
TWAUFL1  EQU   TWAUFL
@NM00043 EQU   TWAVFL
TWAVFL4  EQU   TWAVFL
TWAVFL3  EQU   TWAVFL
TWAVFL2  EQU   TWAVFL
TWAVFL1  EQU   TWAVFL
@NM00042 EQU   TWAMFL
TWAMFL1  EQU   TWAMFL
TWACCOMP EQU   TWAR+76
TWAUCOMP EQU   TWAR+72
TWAVCOMP EQU   TWAR+68
TWAMECB  EQU   TWAR+64
TWACTCB  EQU   TWAR+60
TWAUTCB  EQU   TWAR+56
TWAVTCB  EQU   TWAR+52
TWADEQAS EQU   TWAR+44
TWAEESR  EQU   TWAR+40
TWAPPSR  EQU   TWAR+36
TWATCSR  EQU   TWAR+32
TWATTSR  EQU   TWAR+28
TWAINIT  EQU   TWAR+24
TWACSCB  EQU   TWAR+16
TWAASCB  EQU   TWAR+12
TWAPASQH EQU   TWAR+8
TWASYNQH EQU   TWAR+4
TWARSON  EQU   TWAR+2
TWACOMP  EQU   TWAR
EXLEADDR EQU   EXLEXITP
@NM00041 EQU   EXLENFL
EXLLNK   EQU   EXLENFL
EXLACTM  EQU   EXLENFL
EXLSPEC  EQU   EXLENFL
EXLRESPP EQU   EXLRESP+1
@NM00040 EQU   EXLRESPF
EXLRESPK EQU   EXLRESPF
EXLRESPA EQU   EXLRESPF
EXLRESPS EQU   EXLRESPF
EXLDFASP EQU   EXLDFAS+1
@NM00039 EQU   EXLDFASF
EXLDFASK EQU   EXLDFASF
EXLDFASA EQU   EXLDFASF
EXLDFASS EQU   EXLDFASF
@NM00038 EQU   EXLTPNDF
EXLTPNDK EQU   EXLTPNDF
EXLTPNDA EQU   EXLTPNDF
EXLTPNDS EQU   EXLTPNDF
EXLATTNP EQU   EXLVTEXT+16
@NM00037 EQU   EXLATTNF
EXLATTNK EQU   EXLATTNF
EXLATTNA EQU   EXLATTNF
EXLATTNS EQU   EXLATTNF
@NM00036 EQU   EXLVTEXT+10
EXLRLRQP EQU   EXLVTEXT+6
@NM00035 EQU   EXLRLRQF
EXLRLRQK EQU   EXLRLRQF
EXLRLRQA EQU   EXLRLRQF
EXLRLRQS EQU   EXLRLRQF
EXLNLGNP EQU   EXLVTEXT+1
@NM00034 EQU   EXLNLGNF
EXLNLGNK EQU   EXLNLGNF
EXLNLGNA EQU   EXLNLGNF
EXLNLGNS EQU   EXLNLGNF
EXLOPNP  EQU   EXLCOMN+36
@NM00033 EQU   EXLOPNF
EXLOPNK  EQU   EXLOPNF
EXLOPNA  EQU   EXLOPNF
EXLOPNS  EQU   EXLOPNF
EXLJRNP  EQU   EXLCOMN+31
@NM00032 EQU   EXLJRNF
EXLJRNK  EQU   EXLJRNF
EXLJRNA  EQU   EXLJRNF
EXLJRNS  EQU   EXLJRNF
@NM00031 EQU   EXLLGNF
EXLLGNK  EQU   EXLLGNF
EXLLGNA  EQU   EXLLGNF
EXLLGNS  EQU   EXLLGNF
EXLSCIPP EQU   EXLCOMN+21
@NM00030 EQU   EXLSCIPF
EXLSCIPK EQU   EXLSCIPF
EXLSCIPA EQU   EXLSCIPF
EXLSCIPS EQU   EXLSCIPF
EXLLERP  EQU   EXLCOMN+16
@NM00029 EQU   EXLLERF
EXLLERK  EQU   EXLLERF
EXLLERA  EQU   EXLLERF
EXLLERS  EQU   EXLLERF
EXLSYNP  EQU   EXLCOMN+11
@NM00028 EQU   EXLSYNF
EXLSYNK  EQU   EXLSYNF
EXLSYNA  EQU   EXLSYNF
EXLSYNS  EQU   EXLSYNF
EXLEODP  EQU   EXLCOMN+6
@NM00027 EQU   EXLEODF
EXLEODK  EQU   EXLEODF
EXLEODA  EQU   EXLEODF
EXLEODS  EQU   EXLEODF
@NM00026 EQU   EXLCOMN+4
EXLLEN2  EQU   EXLLEN
EXLSTYP  EQU   EXLCOMN+1
EXLID    EQU   EXLCOMN
@NM00025 EQU   ACBVTEXT+8
@NM00024 EQU   ACBVTEXT+6
ACBRTN   EQU   ACBVTEXT
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00023 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00022 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00021 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00020 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00019 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBMSGAR EQU   ACBCOMN+28
@NM00018 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00017 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00016 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00015 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00014 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00013 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00012 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
TCASTEND EQU   TCAST+136
TCASDUMP EQU   TCAST+132
TCASSCHD EQU   TCAST+128
@NM00011 EQU   TCAST+124
TCASOMJR EQU   TCAST+120
@NM00010 EQU   TCAST+118
TCASBR14 EQU   TCAST+116
TCASATTN EQU   TCAST+112
TCASASCI EQU   TCAST+108
TCASTTQH EQU   TCAST+104
@NM00009 EQU   TCAST+102
@NM00008 EQU   TCAST+100
@NM00007 EQU   TCAST+98
@NM00006 EQU   TCAST+96
TCASASCB EQU   TCAST+92
@NM00005 EQU   TCAST+90
@NM00004 EQU   TCASFLG2
@NM00003 EQU   TCASFLG1
TCASNACT EQU   TCASFLG1
@NM00002 EQU   TCASFLG1
TCASABND EQU   TCASFLG1
TCASMDSW EQU   TCASFLG1
TCASBKMD EQU   TCASFLG1
TCASLTE  EQU   TCAST+84
TCASEXIT EQU   TCAST+80
TCASOQM  EQU   TCAST+76
TCASIQM  EQU   TCAST+72
TCASTSB  EQU   TCAST+68
TCASTTL  EQU   TCAST+64
TCASWA   EQU   TCAST+60
TCASFRR  EQU   TCAST+56
TCASMSGS EQU   TCAST+52
TCASDATO EQU   TCAST+48
TCASDATI EQU   TCAST+44
TCASXECB EQU   TCAST+40
TCASTID  EQU   TCAST+32
@NM00001 EQU   TCAST+31
TCASCHNL EQU   TCAST+30
TCASCRSZ EQU   TCAST+28
TCASLBUF EQU   TCAST+24
TCASHBUF EQU   TCAST+20
TCASCLSZ EQU   TCAST+18
TCASRCON EQU   TCAST+16
TCASUMAX EQU   TCASUSER+2
TCASUSEC EQU   TCASUSER
TCASID   EQU   TCAST
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00101 EQU   @RC00098
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@RF00041 EQU   @PB00002
@ENDDATA EQU   *
         END   IKTCAS21,(C'PLS1847',0701,77319)
