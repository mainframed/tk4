         TITLE 'IGG0CLBM VSAM CHECK AUTHORIZATION                      *
                        '
IGG0CLBM CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLBM  78.165'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPCKAU'
         EJECT
         B     @PB00002                                            0115
IGGPCKAU DS    0H                                                  0116
         ENTRY IGGPCKAU
         DROP @15
Z003     DS    0H                                                  0118
Z003CKAU DS    0H                                                  0119
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
*                                                                  0124
         USING *,12
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THE CALLER IS A PRIVELEGED OR SYSTEM CALLER WHO  */
*   /* WISHES TO BYPASS SECURITY VERIFICATION                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0125
*   IF CCAF2SYS=ON&(CTGBYPSS=ON×CTGSUPLT=ON×CCAF2CO=ON×CCAF2CB=ON) THEN
         TM    CCAF2SYS(R11),B'10000000'                           0125
         BNO   @RF00125                                            0125
         L     @10,CCACPL(,R11)                                    0125
         TM    CTGBYPSS(@10),B'10000000'                           0125
         BO    @RT00125                                            0125
         TM    CTGSUPLT(@10),B'00010000'                           0125
         BO    @RT00125                                            0125
         TM    CCAF2CO(R11),B'00000110'                            0125
         BZ    @RF00125                                            0125
@RT00125 DS    0H                                                  0126
*     CALL EXIT;                    /* RETURN, NO VERIFY NEEDED      */
         BAL   @14,EXIT                                            0126
*   RFY                                                            0127
*     CATRECRD BASED(CCAURAB);      /*                       @ZA24944*/
@RF00125 DS    0H                                                  0128
*   CCASAVID=RCDID;                 /* SAVE RECORD ID        @ZA24944*/
         L     @10,CCAURAB(,R11)                                   0128
         L     @10,CCACPE1(,@10)                                   0128
         MVC   CCASAVID(1,R11),RCDID(@10)                          0128
*   RFY                                                            0129
*     CATRECRD BASED(CCAR5REC);                                    0129
*   CATRECRD(1)=CATRECRD(1)&&CATRECRD(1);/* CLEAR WORK AREA          */
         L     @10,CCAR5REC(,R11)                                  0130
         XC    CATRECRD(256,@10),CATRECRD(@10)                     0130
*   CATRECRD(2)=CATRECRD(2)&&CATRECRD(2);/* CLEAR WORK AREA          */
         XC    CATRECRD+256(256,@10),CATRECRD+256(@10)             0131
*   RFY                                                            0132
*     CATRECRD BASED(CCACPE1);                                     0132
*                                                                  0132
*   /*****************************************************************/
*   /*                                                               */
*   /* USE THE INTERNAL PROCEDURE FOR SPECIAL SITUATION CHECKS CALL  */
*   /* TO MODULE IGG0CLB6                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*Z004SPSC:                                                         0133
*   CALL IGGPSPSC;                  /* CALL SPECIAL CHECK RTN        */
*                                                                  0133
Z004SPSC L     @15,@CV00045                                        0133
         BALR  @14,@15                                             0133
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF CONTAINING CATALOG IS PROTECTED.             @Z40RSRC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0134
*   IF CCACD2=OKAY                  /* IF NO EARLY EXIT      @Z40RSRC*/
*       &RCDCINO^=CATSECRD          /* NOT ALREADY CATLG     @Z40RSRC*/
*       &CAXRAC^=ON THEN            /* & NOT RAC DEFINED     @Z40RSRC*/
         CLI   CCACD2(R11),0                                       0134
         BNE   @RF00134                                            0134
         L     @10,CCAURAB(,R11)                                   0134
         L     @10,CCACPE1(,@10)                                   0134
         CLC   RCDCINO(3,@10),@CF00072+1                           0134
         BE    @RF00134                                            0134
         L     @10,CCAACB(,R11)                                    0134
         L     @10,ACBUAPTR(,@10)                                  0134
         TM    CAXRAC(@10),B'00010000'                             0134
         BO    @RF00134                                            0134
*     DO;                           /* CHECK IF CATALOG PROTECT      */
*Z005CKCC:                                                         0136
*       CALL IGGPCKCC;              /* USE CAT CHECK ROUTINE         */
Z005CKCC L     @15,@CV03352                                        0136
         BALR  @14,@15                                             0136
*       IF CCACD2^=INCR1 THEN       /* CAT SECURITY PROTECTED        */
         CLI   CCACD2(R11),1                                       0137
         BE    @RF00137                                            0137
*         DO;                       /* RE-ESTABLISH ORIGINAL RCD     */
*Z006BSGT:                                                         0139
*           CALL IGGPBSGT;          /* GET BASE RECORD               */
Z006BSGT BAL   @14,IGGPBSGT                                        0139
*Z007CKEX:                                                         0140
*           CALL IGGPCKEX;          /* GET SECURITY DATA             */
Z007CKEX BAL   @14,IGGPCKEX                                        0140
*           IF RCDEXSEC=ON THEN     /* IF RAC INDICATED      @Z40RSRC*/
         L     @10,CCAURAB(,R11)                                   0141
         L     @10,CCACPE1(,@10)                                   0141
         TM    RCDEXSEC(@10),B'10000000'                           0141
         BNO   @RF00141                                            0141
*             CCACD2=OKAY;          /* NO EARLY EXIT         @Z40RSRC*/
         MVI   CCACD2(R11),X'00'                                   0142
*           ELSE                                                   0143
*             ;                     /* IS RAC INDICATED      @Z40RSRC*/
@RF00141 DS    0H                                                  0144
*         END;                                                     0144
*       ELSE                                                       0145
*         ;                         /* NOT SECURITY PROTECTED        */
@RF00137 DS    0H                                                  0146
*     END;                                                         0146
*   ELSE                                                           0147
*     ;                                                            0147
@RF00134 DS    0H                                                  0148
*   IF CCACD1^=OKAY×                /* PROCESSING ERRORS OR          */
*       CCACD2^=OKAY THEN           /* NO VERIFY NEEDED CODE SET     */
         CLI   CCACD1(R11),0                                       0148
         BNE   @RT00148                                            0148
         CLI   CCACD2(R11),0                                       0148
         BE    @RF00148                                            0148
@RT00148 DS    0H                                                  0149
*     CCACD2=OKAY;                  /* CLEAR EARLY EXIT CODE         */
         MVI   CCACD2(R11),X'00'                                   0149
*   ELSE                            /* CONTINUE VERIF        @Z40RSRC*/
*     DO;                           /* VERIFICATION GRP      @Z40RSRC*/
         B     @RC00148                                            0150
@RF00148 DS    0H                                                  0151
*       CKWAATMP=CKAUATMP;          /* SET NO. ATTEMPTS ALLOWED      */
*                                                                  0151
         L     @10,CCAR5REC(,R11)                                  0151
         LH    @05,CKAUATMP+216(,@10)                              0151
         STC   @05,CKWAATMP(,@10)                                  0151
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR A NON-SYSTEM CALLER ATTEMPTING TO SPECIFY A     */
*       /* CERTAIN SECURITY LEVEL FOR VERIFICATION.          @Z40RSRC*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0152
*       IF(CTGCI=ON                 /* CONTROL INTERVAL SPECIFY      */
*           ×CTGUPD=ON              /* UPDATE LEVEL                  */
*           ×CTGREAD=ON) THEN       /* READ LEVEL                    */
         L     @10,CCACPL(,R11)                                    0152
         TM    CTGCI(@10),B'00111000'                              0152
         BZ    @RF00152                                            0152
*         IF CCAF2SYS^=ON THEN      /* NON-SYSTEM CALLER             */
         TM    CCAF2SYS(R11),B'10000000'                           0153
         BO    @RF00153                                            0153
*           DO;                     /* ERROR SITUATION       @Z40RSRC*/
*                                                                  0154
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='BM', CCAREASN=RSN4, CCARETRN=RCSEC    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0155
*             CCAPROB=IGGSEGID+(RSN4*K256)+RCSEC;/* SET ERROR CODE 0155
*                                                            @Y30SSSB*/
         MVC   CCAPROB(4,R11),@CF03487                             0155
*           END;                                                   0156
*         ELSE                      /* OKAY TO SPECIFY A LEVEL       */
*           IF CTGMAST^=ON THEN     /* ANY ACCEPTABLE MASTER OK      */
         B     @RC00153                                            0157
@RF00153 L     @10,CCACPL(,R11)                                    0157
         TM    CTGMAST(@10),B'01000000'                            0157
         BO    @RF00157                                            0157
*             CKAULVRQ=ON;          /* INDICATE SPECIFIC LVL REQ     */
         L     @10,CCAR5REC(,R11)                                  0158
         OI    CKAULVRQ(@10),B'00000010'                           0158
*           ELSE                                                   0159
*             ;                                                    0159
@RF00157 DS    0H                                                  0160
*       ELSE                        /* DETERMINE MINIMUM LEVEL       */
*         IF CTGMAST^=ON THEN       /* MASTER NOT SET TO VERIFY      */
         B     @RC00152                                            0160
@RF00152 L     @10,CCACPL(,R11)                                    0160
         TM    CTGMAST(@10),B'01000000'                            0160
         BO    @RF00160                                            0160
*Z009LVST:                                                         0161
*           CALL IGGPLVST;          /* SET MINIMUM LVL NEEDED        */
Z009LVST BAL   @14,IGGPLVST                                        0161
*         ELSE                                                     0162
*           ;                                                      0162
@RF00160 DS    0H                                                  0163
*       IF CCACD1^=RCS THEN                                        0163
@RC00152 CLI   CCACD1(R11),0                                       0163
         BNE   @RT00163                                            0163
*         ;                         /* IF ERRORS, SKIP       @Z40RSRC*/
*       ELSE                        /* NO ERRORS YET         @Z40RSRC*/
*         DO;                       /* LEVEL DETERMINED      @Z40RSRC*/
*                                                                  0165
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR A CATALOG OPEN REQUEST - VERIFY MASTER      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0166
*           RFY                                                    0166
*             IFGACB BASED(CCAACB);                                0166
*           IF CTGFUNC=CTGLOC&CCAF2SYS=ON THEN/* LOCATE REQUEST      */
         L     @10,CCACPL(,R11)                                    0167
         TM    CTGFUNC(@10),B'00100000'                            0167
         BNO   @RF00167                                            0167
         TM    CTGFUNC(@10),B'11000000'                            0167
         BNZ   @RF00167                                            0167
         TM    CCAF2SYS(R11),B'10000000'                           0167
         BNO   @RF00167                                            0167
*             DO;                                                  0168
*               IF RCDCINO=CATDTARD×/* CATALOG DATA RECORD           */
*                   RCDCINO=CATIDXRD×/* CATALOG INDEX RECORD         */
*                   RCDCINO=CATSECRD THEN/* CATALOG CLUSTER RECORD   */
         L     @10,CCAURAB(,R11)                                   0169
         L     @10,CCACPE1(,@10)                                   0169
         L     @05,RCDCINO-1(,@10)                                 0169
         LA    @05,0(,@05)                                         0169
         LTR   @05,@05                                             0169
         BZ    @RT00169                                            0169
         CLC   RCDCINO(3,@10),@CF00054+1                           0169
         BE    @RT00169                                            0169
         CLC   RCDCINO(3,@10),@CF00072+1                           0169
         BNE   @RF00169                                            0169
@RT00169 DS    0H                                                  0170
*                 DO;               /* CHANGE MIN LEVEL      @YM05415*/
*                   CTGCI=OFF;      /* CLEAR CI LEVEL        @YM05415*/
*                   CTGUPD=OFF;     /* CLEAR UPD LEVEL       @YM05415*/
*                   CTGREAD=OFF;    /* CLEAR READ LEVEL      @YM05415*/
*                   CTGMAST=ON;     /* VERIFY MASTER CATALOG PWD     */
         L     @10,CCACPL(,R11)                                    0174
         OI    CTGMAST(@10),B'01000000'                            0174
         NI    CTGCI(@10),B'11000111'                              0174
*                 END;              /* END LEVEL CHANGE      @YM05415*/
*               ELSE                                               0176
*                 ;                                                0176
@RF00169 DS    0H                                                  0177
*             END;                                                 0177
*           ELSE                                                   0178
*             ;                                                    0178
*                                                                  0178
@RF00167 DS    0H                                                  0179
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR RAC SECURITY VERIFICATION.          @Z40RSRC*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0179
*           CKAURACV=ON;            /* SET RAC VERIFY        @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0179
         OI    CKAURACV(@10),B'00100000'                           0179
*Z010PWVR:                                                         0180
*           CALL IGGPPWVR;          /* CALL VERIFY RTN       @Z40RSRC*/
Z010PWVR BAL   @14,IGGPPWVR                                        0180
*           CKAURACV=OFF;           /* END OF RAC VERIFY     @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0181
         NI    CKAURACV(@10),B'11011111'                           0181
*           IF CKAUVFST=ON THEN                                    0182
         TM    CKAUVFST(@10),B'10000000'                           0182
         BO    @RT00182                                            0182
*             ;                     /* DID RAC VERIFY        @Z40RSRC*/
*           ELSE                    /* NO, CONTINUE          @Z40RSRC*/
*             DO;                   /* PASSWORD VER GRP      @Z40RSRC*/
*                                                                  0184
*               /*****************************************************/
*               /*                                                   */
*               /* DETERMINE THE MINIMUM LEVEL OF PASSWORD TO BE     */
*               /* VERIFIED AND IF IT IS NULL AND NO PASSWORD IS     */
*               /* PROVIDED, RETURN                                  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0185
*               INDXPWRG=CKAULEVL;  /* SET VERIF. LEVEL      @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0185
         L     INDXPWRG,CKAULEVL(,@10)                             0185
*               IF CTGPSWD=NONE&    /* NO PASSWORD PROVIDED AND      */
*                   RCDEXSEC=OFF&   /* NOT RAC DEF'D &       @Z40RSRC*/
*                   PSWDARRY(INDXPWRG)=NULLPRMT THEN/* MIN LEVEL NULL
*                                                            @Y30SSSB*/
         L     @05,CCACPL(,R11)                                    0186
         L     @05,CTGPSWD(,@05)                                   0186
         LTR   @05,@05                                             0186
         BNZ   @RF00186                                            0186
         L     @05,CCAURAB(,R11)                                   0186
         L     @05,CCACPE1(,@05)                                   0186
         TM    RCDEXSEC(@05),B'10000000'                           0186
         BNZ   @RF00186                                            0186
         LR    @05,INDXPWRG                                        0186
         SLA   @05,3                                               0186
         ALR   @05,@10                                             0186
         CLC   PSWDARRY+208(8,@05),NULLPRMT                        0186
         BNE   @RF00186                                            0186
*                 CKAUVFST=ON;      /* VER SUCCESSFUL        @Z40RSRC*/
         OI    CKAUVFST(@10),B'10000000'                           0187
*               ELSE                /* MIN LVL NOT NULL      @Z40RSRC*/
*                 DO;               /* NOT NULL GROUP        @Z40RSRC*/
         B     @RC00186                                            0188
@RF00186 DS    0H                                                  0189
*                   IF CKWAATMP=NONE&CTGPSWD=NONE THEN/* NO PROMPTS
*                                      ALLOWED                       */
         L     @10,CCAR5REC(,R11)                                  0189
         CLI   CKWAATMP(@10),0                                     0189
         BNE   @RF00189                                            0189
         L     @05,CCACPL(,R11)                                    0189
         L     @05,CTGPSWD(,@05)                                   0189
         LTR   @05,@05                                             0189
         BNZ   @RF00189                                            0189
*                     IF CKAUVFRD=ON THEN/* IF RD LEVEL OK   @Z40RSRC*/
         TM    CKAUVFRD(@10),B'00010000'                           0190
         BNO   @RF00190                                            0190
*                       CKAUVFST=ON;/* VERIFY SUCCESSFUL     @Z40RSRC*/
         OI    CKAUVFST(@10),B'10000000'                           0191
*                     ELSE          /* RD LEV NOT VERIF.     @Z40RSRC*/
*                                                                  0192
*                       /*********************************************/
*                       /*                                           */
*                       /* SET CCAMODID='BM', CCAREASN=RSN6,         */
*                       /* CCARETRN=RCSEC                            */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0192
*                       CCAPROB=IGGSEGID+(RSN6*K256)+RCSEC;/* SET  0192
*                                      ERROR CODE            @Y30SSSB*/
         B     @RC00190                                            0192
@RF00190 MVC   CCAPROB(4,R11),@CF03490                             0192
*                   ELSE                                           0193
*                     ;                                            0193
*                                                                  0193
@RF00189 DS    0H                                                  0194
*                   /*************************************************/
*                   /*                                               */
*                   /* CHECK FOR A PASSWORD PROVIDED IN THE CALLERS  */
*                   /* CPL, IF NOT CALL THE INTERNAL ROUTINE TO GET  */
*                   /* THE PASSWORD FROM THE TSO TERMINAL OR FORM THE*/
*                   /* SYSTEM OPERATOR                               */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0194
*                   DO WHILE(CCACD1=OKAY&CKAUVFST=OFF);/* ATTEMPT  0194
*                                      UNTIL SECURITY IS VERIFIED OR
*                                      UNTIL ALL ATTEMPTS MADE       */
@RC00189 B     @DE00194                                            0194
@DL00194 DS    0H                                                  0195
*                     IF CKAUBDPW=ON&/* BAD PASSWORD         @OZ07531*/
*                         CTGBYPMT=ON THEN/* BYPASS PROMPTING      0195
*                                                            @OZ07531*/
         L     @10,CCAR5REC(,R11)                                  0195
         TM    CKAUBDPW(@10),B'01000000'                           0195
         BNO   @RF00195                                            0195
         L     @10,CCACPL(,R11)                                    0195
         TM    CTGBYPMT(@10),B'00001000'                           0195
         BNO   @RF00195                                            0195
*                       DO;         /* SET ERROR CODE        @OZ07531*/
*                                                                  0196
*                         /*******************************************/
*                         /*                                         */
*                         /* SET CCAMODID='BM', CCAREASN=RSN14,      */
*                         /* CCARETRN=RCSEC                          */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0197
*                         CCAPROB=IGGSEGID+(RSN14*K256)+RCSEC;/* SET
*                                      ERROR CODE            @OZ07531*/
         MVC   CCAPROB(4,R11),@CF03493                             0197
*                       END;        /*                       @OZ07531*/
*                     IF CTGPSWD=NONE×/* NO PASSWORD SUPPLIED OR     */
*                         (CKAUBDPW=ON/* SUPPLIED PSWD WAS BAD       */
*                         &CTGBYPMT=OFF) THEN/* & PROMPT ALLOWED   0199
*                                                            @OZ07531*/
@RF00195 L     @10,CCACPL(,R11)                                    0199
         L     @05,CTGPSWD(,@10)                                   0199
         LTR   @05,@05                                             0199
         BZ    @RT00199                                            0199
         L     @05,CCAR5REC(,R11)                                  0199
         TM    CKAUBDPW(@05),B'01000000'                           0199
         BNO   @RF00199                                            0199
         TM    CTGBYPMT(@10),B'00001000'                           0199
         BNZ   @RF00199                                            0199
@RT00199 DS    0H                                                  0200
*Z013PWGT:                                                         0200
*                       CALL IGGPPWGT;/* GET A PASSWORD FOR VERIFY   */
Z013PWGT BAL   @14,IGGPPWGT                                        0200
*                     ELSE          /* PASSWORD SUPPLIED             */
*                       CKAUPSWK=CTGPSWD->PSWDREFR;/* SAVE PSWD IN 0201
*                                      WORK AREA                     */
         B     @RC00199                                            0201
@RF00199 L     @10,CCAR5REC(,R11)                                  0201
         L     @05,CCACPL(,R11)                                    0201
         L     @05,CTGPSWD(,@05)                                   0201
         MVC   CKAUPSWK(8,@10),PSWDREFR(@05)                       0201
*                     IF CCACD1=OKAY THEN/* ALL OKAY, THUS FAR       */
@RC00199 CLI   CCACD1(R11),0                                       0202
         BNE   @RF00202                                            0202
*Z014PWVR:                                                         0203
*                       CALL IGGPPWVR;/* VERIFY A PASSWORD           */
Z014PWVR BAL   @14,IGGPPWVR                                        0203
*                   END;                                           0204
*                                                                  0204
@RF00202 DS    0H                                                  0204
@DE00194 CLI   CCACD1(R11),0                                       0204
         BNE   @DC00194                                            0204
         L     @10,CCAR5REC(,R11)                                  0204
         TM    CKAUVFST(@10),B'10000000'                           0204
         BZ    @DL00194                                            0204
@DC00194 DS    0H                                                  0205
*                   /*************************************************/
*                   /*                                               */
*                   /* CHECK IF PASSWORDS WERE SUCCESSFULLY VERIFIED */
*                   /* AND IF A USVR IS PRESENT AND IF NON-MASTER    */
*                   /* LEVEL OF PASSWORD WAS USED. IF TRUE, PASS THE */
*                   /* USVR MODULE CONTROL                           */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0205
*                   IF CKAUVFST=ON& /* STOP VERIFY CONDITION         */
*                       CCACD1=OKAY&/* NO ERRORS                     */
*                       CKAUVFMT=OFF&/* MASTER PSWD NOT VERIFIED     */
*                       CKAUMDUL^=NOUSVR&/* USVR PRESENT     @Z40RSRC*/
*                       CKAUMDUL^=NULLPRMT THEN/* A USVR MODULE    0205
*                                      EXISTS                        */
*                                                                  0205
         L     @10,CCAR5REC(,R11)                                  0205
         TM    CKAUVFST(@10),B'10000000'                           0205
         BNO   @RF00205                                            0205
         CLI   CCACD1(R11),0                                       0205
         BNE   @RF00205                                            0205
         TM    CKAUVFMT(@10),B'00100000'                           0205
         BNZ   @RF00205                                            0205
         AL    @10,@CF00237                                        0205
         CLC   CKAUMDUL(8,@10),@CB03233                            0205
         BE    @RF00205                                            0205
         CLC   CKAUMDUL(8,@10),NULLPRMT                            0205
         BE    @RF00205                                            0205
*                     /***********************************************/
*                     /*                                             */
*                     /* CALL TO MODULE IGG0CLB6                     */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0206
*Z015INMD:                                                         0206
*                     CALL IGGPINMD;/* CALL USVR INTERFACE FCN       */
Z015INMD L     @15,@CV00044                                        0206
         BALR  @14,@15                                             0206
*                   ELSE                                           0207
*                     ;             /* NO USVR PROCESSING            */
@RF00205 DS    0H                                                  0208
*                 END;              /* OF NOT NULL GROUP     @Z40RSRC*/
*             END;                  /* OF P/W VER GROUP      @Z40RSRC*/
@RC00186 DS    0H                                                  0210
*           IF CKAUVFST=OFF&        /* NO STOP VERIFY CONDITION      */
*               CCACD1=RCS THEN     /* AND CODE CLEAR        @Y30SSSB*/
*                                                                  0210
@RT00182 L     @10,CCAR5REC(,R11)                                  0210
         TM    CKAUVFST(@10),B'10000000'                           0210
         BNZ   @RF00210                                            0210
         CLI   CCACD1(R11),0                                       0210
         BNE   @RF00210                                            0210
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='BM', CCAREASN=RSN8, CCARETRN=RCSEC    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0211
*             CCAPROB=IGGSEGID+(RSN8*K256)+RCSEC;/* SET ERROR CODE 0211
*                                                            @Y30SSSB*/
         MVC   CCAPROB(4,R11),@CF03496                             0211
*           ELSE                                                   0212
*             ;                     /* CODE STATUS IS OKAY AS IS     */
*                                                                  0212
@RF00210 DS    0H                                                  0213
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK IF SECURITY DATA SHOULD BE SUPPRESSED.  @Z40RSRC*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0213
*           IF CCACD1=OKAY&         /* NO MAJOR ERRORS AND           */
*               CKAUVFMT=OFF&       /* SECURITY NOT MASTER AND       */
*               (CTGFUNC=CTGLOC×    /* LOCATE REQUEST        @Y30SSSB*/
*               CTGOPTNS=CTGLTCAT) THEN/* OR LISTCATALOG     @Y30SSSB*/
         CLI   CCACD1(R11),0                                       0213
         BNE   @RF00213                                            0213
         L     @10,CCAR5REC(,R11)                                  0213
         TM    CKAUVFMT(@10),B'00100000'                           0213
         BNZ   @RF00213                                            0213
         L     @10,CCACPL(,R11)                                    0213
         TM    CTGFUNC(@10),B'00100000'                            0213
         BNO   @GL00024                                            0213
         TM    CTGFUNC(@10),B'11000000'                            0213
         BZ    @RT00213                                            0213
@GL00024 L     @10,CCACPL(,R11)                                    0213
         TM    CTGOPTNS(@10),B'00100000'                           0213
         BNO   @RF00213                                            0213
         TM    CTGOPTNS(@10),B'11011000'                           0213
         BNZ   @RF00213                                            0213
@RT00213 DS    0H                                                  0214
*             CCASUPFD=ON;          /* SUPPRESS PASSWORD LISTING     */
         OI    CCASUPFD(R11),B'00001000'                           0214
*           ELSE                                                   0215
*             ;                                                    0215
@RF00213 DS    0H                                                  0216
*         END;                      /* OF LEVEL DET. GRP     @Z40RSRC*/
*     END;                          /* OF VERIF. GROUP       @Z40RSRC*/
*                                                                  0217
@RT00163 DS    0H                                                  0218
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF THE MAIN BASE RECORD IS TO BE RE-READ                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*   IF REGETCI^=NONE THEN           /* RE-GET CI NOT ZERO            */
@RC00148 L     @10,CCAR5REC(,R11)                                  0218
         L     @10,REGETCI-1(,@10)                                 0218
         LA    @10,0(,@10)                                         0218
         LTR   @10,@10                                             0218
         BZ    @RF00218                                            0218
*Z017BSGT:                                                         0219
*     CALL IGGPBSGT;                /* RE-GET THE RECORD             */
Z017BSGT BAL   @14,IGGPBSGT                                        0219
*   ELSE                                                           0220
*     ;                             /* BASE RECORD IN CORE           */
@RF00218 DS    0H                                                  0221
*   IF CKAUPRBO=ON THEN             /* IF PSEUDO RAC BIT     @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0221
         TM    CKAUPRBO(@10),B'00000001'                           0221
         BNO   @RF00221                                            0221
*     RCDEXSEC=OFF;                 /* CLEAR RAC BIT         @Z40RSRC*/
         L     @10,CCAURAB(,R11)                                   0222
         L     @10,CCACPE1(,@10)                                   0222
         NI    RCDEXSEC(@10),B'01111111'                           0222
*   ELSE                                                           0223
*     ;                             /*                       @Z40RSRC*/
@RF00221 DS    0H                                                  0224
*   IF CTGOPTNS=CTGLTCAT&           /* LIST CATALOG REQUEST          */
*       CCACD1=RCSEC&CTGWKA^=NONE THEN/* SECURITY ERROR & WKA        */
         L     @10,CCACPL(,R11)                                    0224
         TM    CTGOPTNS(@10),B'00100000'                           0224
         BNO   @RF00224                                            0224
         TM    CTGOPTNS(@10),B'11011000'                           0224
         BNZ   @RF00224                                            0224
         CLI   CCACD1(R11),56                                      0224
         BNE   @RF00224                                            0224
         L     @10,CTGWKA(,@10)                                    0224
         LTR   @10,@10                                             0224
         BZ    @RF00224                                            0224
*     DO;                           /* PASS BACK THE ENTRY NAME      */
*       WKALEN2=LENGTH(ENTNAMES);   /* SIZE OF NAMES PASSED BACK     */
         MVC   WKALEN2(2,@10),@CH03497                             0226
*       IF RCDID=CTGTCL&NREPLF>=NREPLFR2&PAGESP=ON THEN            0227
         L     @05,CCAURAB(,R11)                                   0227
         L     @05,CCACPE1(,@05)                                   0227
         CLI   RCDID(@05),C'C'                                     0227
         BNE   @RF00227                                            0227
         CLI   NREPLF(@05),108                                     0227
         BL    @RF00227                                            0227
         TM    PAGESP+48(@05),B'00000001'                          0227
         BNO   @RF00227                                            0227
*         ENTNAMET(1)=CTGTPGSP;     /* SET 'P' ID IF PG SP     Y02020*/
         MVI   ENTNAMET(@10),C'P'                                  0228
*       ELSE                        /*                         Y02020*/
*         ENTNAMET(1)=RCDID;        /* SET THE ENTRY RECORD ID Y02020*/
         B     @RC00227                                            0229
@RF00227 L     @10,CCACPL(,R11)                                    0229
         L     @10,CTGWKA(,@10)                                    0229
         L     @05,CCAURAB(,R11)                                   0229
         L     @05,CCACPE1(,@05)                                   0229
         MVC   ENTNAMET(1,@10),RCDID(@05)                          0229
*       IF CKAUPRMT=NULLPRMT THEN   /* NO CODE NAME          @ZA32218*/
@RC00227 L     @10,CCAR5REC(,R11)                                  0230
         CLC   CKAUPRMT+216(8,@10),NULLPRMT                        0230
         BNE   @RF00230                                            0230
*         ENTNAMEV(1)=CNAME;        /* PASS THE ENTRY NAME VALUE     */
         L     @10,CCACPL(,R11)                                    0231
         L     @10,CTGWKA(,@10)                                    0231
         L     @05,CCAURAB(,R11)                                   0231
         L     @05,CCACPE1(,@05)                                   0231
         MVC   ENTNAMEV(44,@10),CNAME(@05)                         0231
*       ELSE                        /*                       @ZA32218*/
*         ENTNAMEV(1)=CKAUPRMT;     /* PASS CODE NAME        @ZA32218*/
         B     @RC00230                                            0232
@RF00230 L     @10,CCACPL(,R11)                                    0232
         L     @10,CTGWKA(,@10)                                    0232
         MVI   ENTNAMEV+8(@10),C' '                                0232
         MVC   ENTNAMEV+9(35,@10),ENTNAMEV+8(@10)                  0232
         L     @05,CCAR5REC(,R11)                                  0232
         MVC   ENTNAMEV(8,@10),CKAUPRMT+216(@05)                   0232
*     END;                                                         0233
*   ELSE                                                           0234
*     ;                                                            0234
*                                                                  0234
@RF00224 DS    0H                                                  0235
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAN UP THE EXTRACT FIELDS IN THE CCA                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   CCAEXT=OFF;                     /* TURN OFF THE EXTRACT FLAG     */
@RC00224 NI    CCAEXT(R11),B'11111101'                             0235
*   CCAF2NVC=OFF;                   /* RE-SET THE VALIDITY CHECK     */
         NI    CCAF2NVC(R11),B'10111111'                           0236
*   CCAREUSE=OFF;                   /* RE-SET RABS RESAEABLE         */
         NI    CCAREUSE(R11),B'11111011'                           0237
*   CCAXCPL=NONE;                   /* CLEAR THE CPL ADDRESS         */
*                                                                  0238
         SLR   @10,@10                                             0238
         ST    @10,CCAXCPL(,R11)                                   0238
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR MODIFIED CPL FIELDS                             @Y30SSSB*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0239
*   CTGCI=OFF;                      /* CLEAR CONTROL FLD     @Y30SSSB*/
*   CTGUPD=OFF;                     /* CLEAR UPDATE FLD      @Y30SSSB*/
*   CTGREAD=OFF;                    /* CLEAR READ FIELD      @Y30SSSB*/
         L     @10,CCACPL(,R11)                                    0241
         NI    CTGCI(@10),B'11000111'                              0241
*   RFY                                                            0242
*     CATRECRD BASED(CCAR5REC);                                    0242
*   CATRECRD(1)=CATRECRD(1)&&CATRECRD(1);/* CLEAR WORK AREA          */
         L     @10,CCAR5REC(,R11)                                  0243
         XC    CATRECRD(256,@10),CATRECRD(@10)                     0243
*   CATRECRD(2)=CATRECRD(2)&&CATRECRD(2);/* CLEAR WORK AREA          */
         XC    CATRECRD+256(256,@10),CATRECRD+256(@10)             0244
*   RFY                                                            0245
*     CATRECRD BASED(CCACPE1);                                     0245
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0246
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPCKEX');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPCKEX'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0249
@EF00002 DS    0H                                                  0249
@ER00002 BR    @14                                                 0249
@PB00002 DS    0H                                                  0250
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0251
*/********************************************************************/
*/*                                                                  */
*/*        IGGPCKEX  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0251
*IGGPCKEX:                                                         0251
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0251
IGGPCKEX DS    0H                                                  0252
*   GEN(ENTRY IGGPCKEX );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPCKEX
*Z018:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z018CKEX:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0253
*    (R5,                                                          0253
*     R6,                                                          0253
*     R7,                                                          0253
*     R8,                                                          0253
*     R9,                                                          0253
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z018     DS    0H                                                  0253
Z018CKEX DS    0H                                                  0254
*   RFY                                                            0254
*    (R2,                                                          0254
*     R3,                                                          0254
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0259
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Z40RSRC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0260
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME =  IGGPCKEX                                          *
**                                                                    *
**   DESCRIPTIVE NAME =  EXTRACT ROUTINE INTERFACE FOR SECURITY DATA  *
**                                                                    *
**   COPYRIGHT =  NONE                                                *
**                                                                    *
**   STATUS =  RELEASE 1, LEVEL 0                                     *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS INTERNAL PROCEDURE CALLS THE VSAM CATALOG MANAGEMENT     *
**      EXTRACT FUNCTION TO DETERMINE IF SECURITY DATA EXISTS IN THE  *
**      ENTRY.  IF SECURITY DATA EXISTS, IT IS SAVED IN THE CHECK     *
**      AUTHORIZATION WORK AREA FOR VERIFICATION.  IF SECURITY DOES   *
**      NOT EXIST, A VALUE OF 2 IS RETURNED IN CCACD2 FOR ALTER AND   *
**      DELETE REQUESTS, OR A VALUE OF 1 IS RETURNED FOR ALL OTHER    *
**      REQUESTS.                                                     *
**      1. CONSTRUCT AN INTERNAL CPL FOR EXTRACT USAGE.               *
**      2. CONSTRUCT AN INTERNAL FPL TO EXTRACT THE 'PASSWALL'        *
**         COMBINATION NAME DATA.                                     *
**      3. INITIALIZE THE CCA FOR THE CALL TO EXTRACT.                *
**      4. CALL EXTRACT AND IF NO ERRORS AND NO SECURITY THEN.        *
**         A. PASS A RETURN CODE OF 2 IN CCACD2 FOR ALTER OR DELETE   *
**            REQUESTS.                                               *
**         B. PASS A RETURN CODE OF 1 IN CCACD2 FOR OTHER REQUEST     *
**            TYPES.                                                  *
**      5. RETURN TO THE PROCEDURE INVOKER.                           *
**                                                                    *
**   INPUT =                                                          *
**      CCA                                                           *
**        CCAR5REC                                                    *
**          CKAUWKA                                                   *
**            CKAUCPL(LOCATION)                                       *
**            CKAUFPL(LOCATION)                                       *
**            CKAUFLNM(LOCATION)                                      *
**          CCARAB1                                                   *
**          CCARAB4                                                   *
**          CCAURAB                                                   *
**                                                                    *
**   OUTPUT =                                                         *
**      CCA                                                           *
**        CCAR5REC                                                    *
**          CKAUWKA                                                   *
**            CKAUCPL - INTERNAL CPL                                  *
**            CKAUFLPT - INTERNAL CPL                                 *
**            CKUAFPL - INTERNAL FPL                                  *
**            CKAULNPT - INTERNAL FPL                                 *
**            CKAUFLNM - INTERNAL FPL                                 *
**            CKAUDTLN - WORK AREA HEADER FOR DATA                    *
**              CKAUDATA - SECURITY DATA                              *
**                CKAUINFO                                            *
**         CCACPL                                                     *
**           CPL (USER)                                               *
**             CTGUPD                                                 *
**         CCAEXT                                                     *
**           CCAF2NVC                                                 *
**           CCAREUSE                                                 *
**           CCARAB1                                                  *
**           CCACD2                                                   *
**           CCAXCPL                                                  *
**           CCARABB                                                  *
**           CCARABF                                                  *
**                                                                    *
**     MESSAGES =  NONE                                               *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0260
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPCKEX - THIS INTERNAL ROUTINE CALLS THE EXTRACT ROUTINE TO */
*   /* DETERMINE IF PASSWORDS EXIST IN AN ENTRY. IF PASSWORDS EXIST, */
*   /* THEY ARE RETAINED IN THE CHECK AUTHORIZATION WORK AREA. IF    */
*   /* THEY DO NOT EXIST, A NON ZERO VALUE IS RETURNED IN CCACD2.    */
*   /* CALL TO MODULE IGG0CLDC                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0260
*Z019RACS:                                                         0260
*   CALL IGGPRACS;                  /* SETUP FOR EXTRACT     @Z40RSRC*/
Z019RACS L     @15,@CV00050                                        0260
         BALR  @14,@15                                             0260
*   RFY                                                            0261
*     CTGPL BASED(CCAXCPL);                                        0261
*                                                                  0261
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE CPL FOR THE EXTRACT REQUEST                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0262
*   CTGWKA=ADDR(CKAUDTLN);          /* WORK AREA LOCATION            */
         L     @10,CCAXCPL(,R11)                                   0262
         L     @05,CCAR5REC(,R11)                                  0262
         LA    @15,CKAUDTLN(,@05)                                  0262
         ST    @15,CTGWKA(,@10)                                    0262
*   WKALEN1=LENGTH(USERWKA)+LENGTH(CKAUINFO)+MAXUSAR;              0263
*                                                                  0263
         MVC   WKALEN1(2,@15),@CH03498                             0263
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE FPL FOR EXTRACTING THE SECURITY INFO           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0264
*   RFY                                                            0264
*     CTGFL BASED(CTGFIELD(1));                                    0264
*   CTGFLDNM=ADDR(CKAUFLNM);        /* FIELD NAME LOCATION           */
         L     @10,CTGFIELD(,@10)                                  0265
         LA    @15,CKAUFLNM(,@05)                                  0265
         ST    @15,CTGFLDNM(,@10)                                  0265
*   CTGFLDNM->FIELDNME='PASSWALL';  /* SET FIELD NAME                */
         MVC   FIELDNME(8,@15),@CC03385                            0266
*   CKUSVRPT=INDXPWRG;              /* SAVE INDEX REGISTER           */
*                                                                  0267
         ST    INDXPWRG,CKUSVRPT(,@05)                             0267
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAZ                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0268
*Z020EXT:                                                          0268
*   CALL IGGPEXT;                   /* CALL EXTRACT FOR SECURITY     */
Z020EXT  L     @15,@CV00042                                        0268
         BALR  @14,@15                                             0268
*   CCACD2=OKAY;                    /* CLEAR WORK BYTE       @Y30SSSB*/
         MVI   CCACD2(R11),X'00'                                   0269
*   INDXPWRG=CKUSVRPT;              /* RESTORE INDEX REGISTER        */
         L     @10,CCAR5REC(,R11)                                  0270
         L     INDXPWRG,CKUSVRPT(,@10)                             0270
*   CCAURAB=CCARABB;                /* RE-SET BASE RECORD RAB        */
         L     @10,CCARABB(,R11)                                   0271
         ST    @10,CCAURAB(,R11)                                   0271
*   IF CCACD1=OKAY THEN             /* NO MAJOR ERRORS               */
         CLI   CCACD1(R11),0                                       0272
         BNE   @RF00272                                            0272
*     DO;                           /*                       @Z30TSBM*/
*       IF(CTGFLNG(1)=NONE&         /* NO SECURITY DATA              */
*           CTGFLPT(1)=NONE)×(CKAUMSTR=NULLPRMT) THEN/* NO MASTER  0274
*                                      PASSWORD                      */
         SLR   @10,@10                                             0274
         L     @05,CCAXCPL(,R11)                                   0274
         L     @05,CTGFIELD(,@05)                                  0274
         C     @10,CTGFLNG(,@05)                                   0274
         BNE   @GL00029                                            0274
         C     @10,CTGFLPT(,@05)                                   0274
         BE    @RT00274                                            0274
@GL00029 L     @10,CCAR5REC(,R11)                                  0274
         CLC   CKAUMSTR+216(8,@10),NULLPRMT                        0274
         BNE   @RF00274                                            0274
@RT00274 DS    0H                                                  0275
*         CCACD2=INCR1;             /* INDICATE NO SECURITY          */
         MVI   CCACD2(R11),X'01'                                   0275
*       IF RCDCINO=CATSECRD&        /* IF CI2 READ AND       @Z30TSBM*/
*           CCAF11B5=OFF&CCAF11B6=OFF THEN/* 1ST TIME        @ZA30975*/
@RF00274 L     @10,CCAURAB(,R11)                                   0276
         L     @10,CCACPE1(,@10)                                   0276
         CLC   RCDCINO(3,@10),@CF00072+1                           0276
         BNE   @RF00276                                            0276
         TM    CCAF11B5(R11),B'00001100'                           0276
         BNZ   @RF00276                                            0276
*         DO;                       /* SET INDIC IN CCA      @ZA30975*/
*           IF CCACD2=INCR1 THEN    /* NO PSWDS              @Z30TSBM*/
         CLI   CCACD2(R11),1                                       0278
         BNE   @RF00278                                            0278
*             DO;                   /* NO CAT PASSWORDS      @Z30TSBM*/
*               CCAF11B5=ON;        /* SET TO 11 FOR         @ZA30975*/
*               CCAF11B6=ON;        /* NO PSWDS              @ZA30975*/
         OI    CCAF11B5(R11),B'00001100'                           0281
*             END;                                                 0282
*           ELSE                                                   0283
*             IF CKAUUPDT=NULLPRMT THEN/* NO UPDT            @Z30TSBM*/
         B     @RC00278                                            0283
@RF00278 L     @10,CCAR5REC(,R11)                                  0283
         CLC   CKAUUPDT+216(8,@10),NULLPRMT                        0283
         BNE   @RF00283                                            0283
*               DO;                 /* MASTER NO UPDATE      @Z30TSBM*/
*                 CCAF11B5=OFF;     /* SET TO 01 FOR         @ZA30975*/
*                 CCAF11B6=ON;      /* NO UPDT PSWD          @ZA30975*/
         OI    CCAF11B6(R11),B'00000100'                           0286
         NI    CCAF11B5(R11),B'11110111'                           0286
*               END;                                               0287
*             ELSE                  /* UPDATE PSWD           @Z30TSBM*/
*               DO;                                                0288
         B     @RC00283                                            0288
@RF00283 DS    0H                                                  0289
*                 CCAF11B5=ON;      /* SET TO 10 FOR         @ZA30975*/
*                 CCAF11B6=OFF;     /* UPDATE PSWD TOO       @ZA30975*/
         OI    CCAF11B5(R11),B'00001000'                           0290
         NI    CCAF11B6(R11),B'11111011'                           0290
*               END;                                               0291
*         END;                      /* SET INDIC IN CCA      @ZA30975*/
*       ELSE                                                       0293
*         ;                         /* NOT CI2×1ST TIME      @Z30TSBM*/
@RF00276 DS    0H                                                  0294
*     END;                          /*                       @Z30TSBM*/
@RC00276 DS    0H                                                  0295
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RF00272 BAL   @14,EXIT                                            0295
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPLVST');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPLVST'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0298
@EF00003 DS    0H                                                  0298
@ER00003 BR    @14                                                 0298
@PB00003 DS    0H                                                  0299
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0300
*/********************************************************************/
*/*                                                                  */
*/*        IGGPLVST  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0300
*IGGPLVST:                                                         0300
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0300
IGGPLVST DS    0H                                                  0301
*Z021:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z021LVST:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0301
*    (R5,                                                          0301
*     R6,                                                          0301
*     R7,                                                          0301
*     R8,                                                          0301
*     R9,                                                          0301
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z021     DS    0H                                                  0301
Z021LVST DS    0H                                                  0302
*   RFY                                                            0302
*    (R2,                                                          0302
*     R3,                                                          0302
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME =  IGGPLVST                                          *
**                                                                    *
**   DESCRIPTIVE NAME =                                               *
**      ESTABLISH MINIMUM ACCEPTABLE LEVEL OF PASSWORD VERIFICATION   *
**                                                                    *
**   COPYRIGHT =  NONE                                                *
**                                                                    *
**   STATUS =  RELEASE 1, LEVEL 0                                     *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS INTERNAL PROCEDURE EXAMINES THE USER PROVIDED CATALOG    *
**      PARAMETER LIST AND THE CPL ENTRY TYPE TO DETERMINE THE        *
**      MINIMUM ACCEPTABLE LEVEL OF PASSWORD VERIFICATION.            *
**      FOLLOWING ITEMS ARE THE BASE ASSUMPTIONS FOR ESTABLISHING     *
**      MINIMUM LEVELS:                                               *
**      CMS FUNCTIONS:                                                *
**        DEFINE - UPDATE PASSWORD                                    *
**        LIST CATALOG - READ PASSWORD                                *
**        DELETE OF ALIEN OR VOLUMES - UPDATE PASSWORD                *
**        DELETE OF OTHERS - MASTER PASSWORD                          *
**        ALTER - MASTER PASSWORD                                     *
**      NON-CMS FUNCTIONS:                                            *
**        LOCATE - READ PASSWORD                                      *
**        OTHERS - MASTER PASSWORD                                    *
**                                                                    *
**   INPUT =                                                          *
**      CCA                                                           *
**        CCACPL - USER CPL                                           *
**          CTGFUNC - FUNCTION TYPE                                   *
**          CTGOPTNS - CMS FUNCTION TYPE                              *
**          CTGTYPE - ENTRY TYPE                                      *
**                                                                    *
**   OUTPUT =                                                         *
**      CCA                                                           *
**        CCACPL - USER CPL                                           *
**          CTGOPTN1 - OPTION FLAGS                                   *
**            CTGUPD - UPDATE REQUIRED                                *
**            CTGREAD - READ REQUIRED                                 *
**            CTGMAST - MASTER REQUIRED                               *
**                                                                    *
**     MESSAGES =  NONE                                               *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0305
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPLVST-THIS INTERNAL ROUTINE ESTABLISHES THE MINIMUM        */
*   /* ACCEPTABLE LEVEL OF PASSWORDS FOR SECURITY VERIFICATION. THE  */
*   /* MINIMUM LEVEL IS DETERMINED BY THE TYPE OF FUNCTION THAT THE  */
*   /* CALLER HAS SPECIFIED IN THE CPL.                      @Y30SSSB*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0305
*   RFY                                                            0305
*     CTGPL BASED(CCACPL);                                         0305
*                                                                  0305
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR THE CMS CLASS OF FUNCTIONS TO BE PREFORMED          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*   IF CTGFUNC=CTGCMS THEN          /* CMS FUNCTION CLASS            */
         L     @10,CCACPL(,R11)                                    0306
         TM    CTGFUNC(@10),B'10000000'                            0306
         BNO   @RF00306                                            0306
         TM    CTGFUNC(@10),B'01100000'                            0306
         BNZ   @RF00306                                            0306
*     IF CTGOPTNS=CTGDEFIN THEN     /* DEFINE REQUEST                */
         TM    CTGOPTNS(@10),B'00001000'                           0307
         BNO   @RF00307                                            0307
         TM    CTGOPTNS(@10),B'11110000'                           0307
         BNZ   @RF00307                                            0307
*       CTGUPD=ON;                  /* UPDATE IS MIN LEVEL           */
         OI    CTGUPD(@10),B'00010000'                             0308
*     ELSE                          /* NOT DEFINE                    */
*       IF CTGOPTNS=CTGLTCAT THEN   /* LIST CATALOG REQUEST          */
         B     @RC00307                                            0309
@RF00307 L     @10,CCACPL(,R11)                                    0309
         TM    CTGOPTNS(@10),B'00100000'                           0309
         BNO   @RF00309                                            0309
         TM    CTGOPTNS(@10),B'11011000'                           0309
         BNZ   @RF00309                                            0309
*         CTGREAD=ON;               /* READ IS MINIMUM LEVEL         */
         OI    CTGREAD(@10),B'00001000'                            0310
*       ELSE                        /* NOT LIST CATALOG              */
*         IF CTGOPTNS=CTGDELET&((CTGTYPE=CTGTVOL&CTGSCR=OFF)×CTGTYPE=
*             CTGTALIN×(CTGTYPE=CTGTUCAT&/* DEL VOL,                 */
*             CTGDISC=ON)×CTGTYPE=CTGTANM×/* NONVSAM,ALIAS OR      0311
*                                      DISCONNECT USERCAT    @YM05723*/
*             (CTGTYPE=CTGTGBS))    /* DEL GDG               @Z40RSRC*/
*           THEN                                                   0311
         B     @RC00309                                            0311
@RF00309 L     @10,CCACPL(,R11)                                    0311
         TM    CTGOPTNS(@10),B'00011000'                           0311
         BNO   @RF00311                                            0311
         TM    CTGOPTNS(@10),B'11100000'                           0311
         BNZ   @RF00311                                            0311
         CLI   CTGTYPE(@10),C'V'                                   0311
         BNE   @GL00036                                            0311
         TM    CTGSCR(@10),B'00000010'                             0311
         BZ    @RT00311                                            0311
@GL00036 L     @10,CCACPL(,R11)                                    0311
         CLI   CTGTYPE(@10),C'A'                                   0311
         BE    @RT00311                                            0311
         CLI   CTGTYPE(@10),C'U'                                   0311
         BNE   @GL00034                                            0311
         TM    CTGDISC(@10),B'00001000'                            0311
         BO    @RT00311                                            0311
@GL00034 L     @10,CCACPL(,R11)                                    0311
         CLI   CTGTYPE(@10),C'X'                                   0311
         BE    @RT00311                                            0311
         CLI   CTGTYPE(@10),C'B'                                   0311
         BNE   @RF00311                                            0311
@RT00311 DS    0H                                                  0312
*           CTGUPD=ON;              /* UPDATE FOR VOLUME DELETE      */
         L     @10,CCACPL(,R11)                                    0312
         OI    CTGUPD(@10),B'00010000'                             0312
*         ELSE                      /* ALTER OR OTHER TYPE DELET     */
*           IF CTGOPTNS=CTGALTER&   /* OPTION IS ALTER       @ZA24944*/
*               CCASAVID=CTGTALIN×  /* NON-VSAM RECORD       @ZA24944*/
*               CCASAVID=CTGTGBS    /* OR GDG RECD THEN      @ZA24944*/
*             THEN                                                 0313
         B     @RC00311                                            0313
@RF00311 L     @10,CCACPL(,R11)                                    0313
         TM    CTGOPTNS(@10),B'00010000'                           0313
         BNO   @GL00039                                            0313
         TM    CTGOPTNS(@10),B'11101000'                           0313
         BNZ   @GL00039                                            0313
         CLI   CCASAVID(R11),C'A'                                  0313
         BE    @RT00313                                            0313
@GL00039 CLI   CCASAVID(R11),C'B'                                  0313
         BNE   @RF00313                                            0313
@RT00313 DS    0H                                                  0314
*             CTGUPD=ON;            /* REQUIRE UPDATE PW     @ZA24944*/
         L     @10,CCACPL(,R11)                                    0314
         OI    CTGUPD(@10),B'00010000'                             0314
*           ELSE                                                   0315
*             CTGMAST=ON;           /* MASTER IS REQUIRED      Y02020*/
         B     @RC00313                                            0315
@RF00313 L     @10,CCACPL(,R11)                                    0315
         OI    CTGMAST(@10),B'01000000'                            0315
*   ELSE                            /* NON-CMS FUNCTION CLASS        */
*     IF CTGFUNC=CTGLOC THEN        /* LOCATE REQUEST                */
         B     @RC00306                                            0316
@RF00306 L     @10,CCACPL(,R11)                                    0316
         TM    CTGFUNC(@10),B'00100000'                            0316
         BNO   @RF00316                                            0316
         TM    CTGFUNC(@10),B'11000000'                            0316
         BNZ   @RF00316                                            0316
*       CTGREAD=ON;                 /* AT LEAST VERIFY READ LVL      */
         OI    CTGREAD(@10),B'00001000'                            0317
*     ELSE                          /* NOT LOCATE                    */
*       CTGMAST=ON;                 /* MASTER FOR ALL OTHERS         */
         B     @RC00316                                            0318
@RF00316 L     @10,CCACPL(,R11)                                    0318
         OI    CTGMAST(@10),B'01000000'                            0318
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00316 DS    0H                                                  0319
@RC00306 BAL   @14,EXIT                                            0319
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPPWGT');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPPWGT'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0322
@EF00004 DS    0H                                                  0322
@ER00004 BR    @14                                                 0322
@PB00004 DS    0H                                                  0323
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0324
*/********************************************************************/
*/*                                                                  */
*/*        IGGPPWGT  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0324
*IGGPPWGT:                                                         0324
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0324
IGGPPWGT DS    0H                                                  0325
*Z022:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z022PWGT:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0325
*    (R5,                                                          0325
*     R6,                                                          0325
*     R7,                                                          0325
*     R8,                                                          0325
*     R9,                                                          0325
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z022     DS    0H                                                  0325
Z022PWGT DS    0H                                                  0326
*   RFY                                                            0326
*    (R2,                                                          0326
*     R3,                                                          0326
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME =  IGGPPWGT                                          *
**                                                                    *
**   DESCRIPTIVE NAME =  RETRIEVE A PASSWORD FROM AN EXTERNAL SOURCE  *
**                                                                    *
**   COPYRIGHT =  NONE                                                *
**                                                                    *
**   STATUS =  RELEASE 1, LEVEL 0                                     *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS INTERNAL PROCEDURE ATTEMPTS TO RETRIEVE A PASSWORD FROM  *
**      EITHER THE SYSTEM OPERATOR CONSOLE OR, IF A TSO TASK IS IN    *
**      CONTROL, THE TSO TERMAINAL USER. THIS FUNCTION PROMPTS THE    *
**      OPERATOR OR THE TSO USER WITH THE APPROPRIATE SECURITY        *
**      MESSAGES. THE FOLLOWING BASIC STEPS ARE USED:                 *
**      1. CLEAR THE IN-STORAGE SECURITY INFORMATION                  *
**      2. CLEAR THE IN-STORAGE RECORDS IN THE RECORD AREAS OF VSAM   *
**         CATALOG MANAGEMENT (1 THRU 4).                             *
**      3. IF NOT TSO -                                               *
**         CONSTRUCT A SECURITY MESSAGE (IEC301A) AND PROMPT THE      *
**         SYSTEM OPERATOR.                                           *
**      4. IF TSO -                                                   *
**         CALL EXTERNAL PROCEDURE IGGPWTSO TO PERFORM THE TSO        *
**         TERMINAL INTERFACE PROCESSES.                              *
**      5. RE-READ THE BASE RECORD THAT WAS IN BUFFERS PRIOR TO       *
**         CLEARING THEM.                                             *
**      6. CALL INTERNAL PROCEDURE IGGPCKEX TO INTERFACE WITH THE     *
**         VSAM CATALOG MANAGEMENT EXTRACT ROUTINE TO RE-ESTABLISH    *
**         THE SECURITY DATA PRIOR TO WHEN THE PASSWORD STORAGE AREA  *
**         WAS CLEARED.                                               *
**      7. RETURN TO THE PROCEDURE INVOKER.                           *
**                                                                    *
**   INPUT =                                                          *
**      CCA                                                           *
**        CCAR5REC                                                    *
**          CKAUWKA                                                   *
**            CKAUPRMT                                                *
**            CKAUDVWA                                                *
**        CCAR1REC                                                    *
**        CCAURAB                                                     *
**          CCACPE1                                                   *
**            RCDCINO                                                 *
**        CCATCB                                                      *
**      ASCB                                                          *
**        ASCBTSB                                                     *
**                                                                    *
**   OUTPUT =                                                         *
**      CCA                                                           *
**        CCAR5REC                                                    *
**          CKAUWKA                                                   *
**            CKAUPSWK                                                *
**            CKBASECI                                                *
**            CKAUMSG                                                 *
**        CCAR2REC - ALL RECORD AREAS CLEARED                         *
**        CCAR3REC - ALL RECORD AREAS CLEARED                         *
**        CCARYREC - ALL RECORD AREAS CLEARED                         *
**        CCACD1                                                      *
**        CCASRCIN                                                    *
**                                                                    *
**     MESSAGES =                                                     *
**        DIRECTLY, TO THE SYSTEM OPERATOR:                           *
**        'IEC301A S JOB XXXXXXXX DSNAME      '                       *
**        INDIRECTLY, TO THE TSO TERMINAL USER:                       *
**          SEE MESSAGES FOR IGGPWTSO                                 *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0329
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPPWGT - THIS INTERNAL ROUTINE ATTEMPTS TO GET A PASSWORD   */
*   /* FROM THE SYSTEM OPERATOR CONSOLE OR IN THE CASE OF TSO, FROM  */
*   /* THE TSO TERMINAL. IF A PASSWORD IS NOT SPECIFIED OR IF THE    */
*   /* OPERATOR REPLY IS 'CANCEL', A SECURITY ERROR IS SET IN CCACD1.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0329
*   RFY                                                            0329
*     TCB BASED(CCATCB);                                           0329
*   CKUSVRPT=INDXPWRG;              /* SAVE INDEX REG VALUE          */
         L     @10,CCAR5REC(,R11)                                  0330
         ST    INDXPWRG,CKUSVRPT(,@10)                             0330
*   CKAUPSWD=CKAUPSWD&&CKAUPSWD;    /* CLEAR SAVED PASSWORDS         */
         LA    @05,216                                             0331
         ALR   @05,@10                                             0331
         XC    CKAUPSWD(32,@05),CKAUPSWD(@05)                      0331
*   CKAUMDUL=CKAUMDUL&&CKAUMDUL;    /* CLEAR USVR MODULE NAME        */
         XC    CKAUMDUL(8,@05),CKAUMDUL(@05)                       0332
*   CKAUPSWK=BLANKNME;              /* CLEAR W/BLANKS REPLY AREA     */
         MVC   CKAUPSWK(8,@10),@CC03221                            0333
*   CKBASECI=RCDCINO;               /* SAVE BASE RECORD CI NO.       */
         L     @05,CCAURAB(,R11)                                   0334
         L     @05,CCACPE1(,@05)                                   0334
         MVC   CKBASECI(3,@10),RCDCINO(@05)                        0334
*   CKAUEDSN=CNAME;                 /* SAVE ENTRY DATA SET NAME      */
         MVC   CKAUEDSN(44,@10),CNAME(@05)                         0335
*   CKAUNOSV=ON;                    /* SET RECORD NOT SAVED          */
         OI    CKAUNOSV(@10),B'01000000'                           0336
*   CCAR4REC=CCAR3REC+CTRECSIZ;     /* SET RECORD AREA POINTER       */
         LA    @10,512                                             0337
         AL    @10,CCAR3REC(,R11)                                  0337
         ST    @10,CCAR4REC(,R11)                                  0337
*   R2=CCAR1REC;                    /* GET START OF RECORD AREAS     */
         L     R2,CCAR1REC(,R11)                                   0338
*   R3=NORABS*CTRECSIZ;             /* GET LENGTH OF CORE            */
         LA    R3,2048                                             0339
*   RFY                                                            0340
*    (R5) RSTD;                                                    0340
*   R5=NONE;                        /* SET PADDING CHARACTER         */
         SLR   R5,R5                                               0341
*   GEN(MVCL R2,R4);                /* CLEAR THE RECORD AREAS        */
         MVCL R2,R4
*   RFY                                                            0343
*    (R5) UNRSTD;                                                  0343
*   IF ASCBTSB=NONE THEN            /* CK FOR NON-TSO USER     Y02020*/
         LA    @10,PSAAOLD                                         0344
         L     @10,ASCBPTR(,@10)                                   0344
         L     @10,ASCBTSB(,@10)                                   0344
         LTR   @10,@10                                             0344
         BNZ   @RF00344                                            0344
*     DO;                           /* GET THE PASSWORD FROM THE     */
*       CKAUMSG=SYSOPFIX;           /* SYSTEM OPERATOR CONSOLE       */
         L     @10,CCAR5REC(,R11)                                  0346
         LA    @05,36                                              0346
         ALR   @05,@10                                             0346
         MVI   CKAUMSG+30(@05),C' '                                0346
         MVC   CKAUMSG+31(53,@05),CKAUMSG+30(@05)                  0346
         MVC   CKAUMSG(30,@05),SYSOPFIX                            0346
*       IF CKAUPRMT=NULLPRMT THEN   /* PROMPTING NAME PROVIDED       */
         CLC   CKAUPRMT+216(8,@10),NULLPRMT                        0347
         BNE   @RF00347                                            0347
*         DO;                       /* NO, SO GET DSNAME             */
*           CKAUMSG(31:74)=CKAUEDSN;/* DSNAME FOR PROMPTING          */
         MVC   CKAUMSG+30(44,@05),CKAUEDSN(@10)                    0349
*           CKAUMGSZ=LENGTH(SYSOPFIX)+LENGTH(CKAUEDSN);            0350
         MVC   CKAUMGSZ(2,@05),@CH00322                            0350
*         END;                                                     0351
*       ELSE                        /* PROMPTING NAME IS PROVIDE     */
*         DO;                       /* USE PROMPTING NAME            */
         B     @RC00347                                            0352
@RF00347 DS    0H                                                  0353
*           CKAUMSG(31:38)=CKAUPRMT;/* SET NAME VALUE                */
         L     @10,CCAR5REC(,R11)                                  0353
         LA    @05,36                                              0353
         ALR   @05,@10                                             0353
         MVC   CKAUMSG+30(8,@05),CKAUPRMT+216(@10)                 0353
*           CKAUMGSZ=LENGTH(SYSOPFIX)+LENGTH(CKAUPRMT);            0354
         MVC   CKAUMGSZ(2,@05),@CH00295                            0354
*         END;                                                     0355
*       CKAUMSG(15:22)=TIOCNJOB;    /* SET JOB NAME IN MESSAGE       */
@RC00347 L     @10,CCAR5REC(,R11)                                  0356
         L     @05,CCATCB(,R11)                                    0356
         L     @05,TCBTIO(,@05)                                    0356
         MVC   CKAUMSG+50(8,@10),TIOCNJOB(@05)                     0356
*       DO CKAUMGSZ=CKAUMGSZ BY-INCR1 WHILE(NAMECHAR(CKAUMGSZ)=BLNKCHAR
*             );                    /* SCAN FOR BLN                  */
         B     @DE00357                                            0357
@DL00357 DS    0H                                                  0358
*       END;                                                       0358
         L     @05,CCAR5REC(,R11)                                  0358
         SLR   @10,@10                                             0358
         BCTR  @10,0                                               0358
         AH    @10,CKAUMGSZ+36(,@05)                               0358
         L     @05,CCAR5REC(,R11)                                  0358
         STH   @10,CKAUMGSZ+36(,@05)                               0358
@DE00357 L     @10,CCAR5REC(,R11)                                  0358
         LA    @05,36                                              0358
         ALR   @05,@10                                             0358
         LH    @15,CKAUMGSZ(,@05)                                  0358
         ST    @15,@TF00001                                        0358
         ALR   @15,@10                                             0358
         CLI   NAMECHAR+51(@15),C' '                               0358
         BE    @DL00357                                            0358
*       R2=CKAUMGSZ+ADDR(CKAUMSG);  /* WTOR FLAG LOCATION            */
         LA    R2,CKAUMSG(,@05)                                    0359
         AL    R2,@TF00001                                         0359
*       R2->RTDSCWRD=ROUTDESC;      /* SET ROUTE & DESC DATA         */
         L     @15,ROUTDESC                                        0360
         ST    @15,RTDSCWRD(,R2)                                   0360
*       CKAUMGSZ=CKAUMGSZ+LENGTH(ROUTDESC);/* ADJUST MSG LNG         */
         LA    @15,4                                               0361
         AL    @15,@TF00001                                        0361
         STH   @15,CKAUMGSZ(,@05)                                  0361
*       R2=ADDR(CKAUPSWK);          /* REPLY AREA                    */
         LA    R2,CKAUPSWK(,@10)                                   0362
*       R3=ADDR(CKAUECB);           /* ECB ADDRESS                   */
         LR    R3,@05                                              0363
*       R4=LENGTH(CKAUPSWK);        /* REPLY LENGTH                  */
         LA    R4,8                                                0364
*       CKAUMGFG=WTORFLGS;          /* SET WTOR MESSAGE FLAGS        */
*                                                                  0365
         MVC   CKAUMGFG(2,@05),WTORFLGS                            0365
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLA3                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0366
*Z023RPLF:                                                         0366
*       CALL IGGPRPLF;              /* FREE CAT RESOURCE     @Y30SSSB*/
Z023RPLF L     @15,@CV00046                                        0366
         BALR  @14,@15                                             0366
*       RFY                                                        0367
*        (R1) RSTD;                                                0367
*       R1=ADDR(CKAUPRML);          /* SET WTOR PARM LIST ADDR       */
         L     R1,CCAR5REC(,R11)                                   0368
         LA    R1,CKAUPRML+36(,R1)                                 0368
*       GEN(WTOR ,(R2),(R4),(R3),MF=(E,(1)));/* WTOR FOR PSWD        */
         WTOR ,(R2),(R4),(R3),MF=(E,(1))
*       GEN(WAIT ECB=(R3));         /* WAIT FOR COMPLETION           */
*                                                                  0370
         WAIT ECB=(R3)
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLA3                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0371
*Z024RPLM:                                                         0371
*       CALL IGGPRPLM;              /* GET CAT RESOURCE      @Y30SSSB*/
Z024RPLM L     @15,@CV00047                                        0371
         BALR  @14,@15                                             0371
*       CKAUPSWK=CKAUPSWK×BLANKNME; /* FOLD REPLY TO UP CASE         */
         L     @10,CCAR5REC(,R11)                                  0372
         OC    CKAUPSWK(8,@10),@CC03221                            0372
*     END;                                                         0373
*   ELSE                            /* TSO TASK IS CALLER            */
*                                                                  0374
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLB6                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0374
*Z025WTSO:                                                         0374
*     CALL IGGPWTSO;                /* GET PASSWORD FROM TSO         */
         B     @RC00344                                            0374
@RF00344 DS    0H                                                  0374
Z025WTSO L     @15,@CV00043                                        0374
         BALR  @14,@15                                             0374
*   CCASRCIN=CKBASECI;              /* SET BASE RECORD CI            */
@RC00344 L     @10,CCAR5REC(,R11)                                  0375
         MVC   CCASRCIN(3,R11),CKBASECI(@10)                       0375
*   IF CCACD1=RCS THEN              /* NO ERRORS             @Y30SSSB*/
         CLI   CCACD1(R11),0                                       0376
         BNE   @RF00376                                            0376
*     DO;                                                          0377
*       CCAF1KEY=OFF;               /* GET BY CI NO.                 */
*       CCAF1KGE=OFF;               /* NOT GET NEXT                  */
*       CCAF1UP=ON;                 /* GET FOR UPD                   */
*                                                                  0380
         OI    CCAF1UP(R11),B'00000010'                            0380
         NI    CCAF1KEY(R11),B'11100111'                           0380
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0381
*Z027GET:                                                          0381
*       CALL IGGPGET;               /* GET RECORD                    */
Z027GET  L     @15,@CV00052                                        0381
         BALR  @14,@15                                             0381
*     END;                          /* GET THE BASE RECORD           */
*   ELSE                                                           0383
*     ;                             /* ERRORS                @Y30SSSB*/
@RF00376 DS    0H                                                  0384
*   INDXPWRG=CKUSVRPT;              /* RESTORE INDEX REG VALUE       */
         L     @10,CCAR5REC(,R11)                                  0384
         L     INDXPWRG,CKUSVRPT(,@10)                             0384
*   IF CCACD1=OKAY THEN             /* IF ALL OKAY, GET PSWDS        */
         CLI   CCACD1(R11),0                                       0385
         BNE   @RF00385                                            0385
*Z028CKEX:                                                         0386
*     CALL IGGPCKEX;                /* EXTRACT THE PASSWORDS         */
Z028CKEX BAL   @14,IGGPCKEX                                        0386
*   ELSE                                                           0387
*     ;                                                            0387
@RF00385 DS    0H                                                  0388
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0388
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPPWVR');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPPWVR'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0391
@EF00005 DS    0H                                                  0391
@ER00005 BR    @14                                                 0391
@PB00005 DS    0H                                                  0392
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0393
*/********************************************************************/
*/*                                                                  */
*/*        IGGPPWVR  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0393
*IGGPPWVR:                                                         0393
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0393
IGGPPWVR DS    0H                                                  0394
*Z029:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z029PWVR:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0394
*    (R5,                                                          0394
*     R6,                                                          0394
*     R7,                                                          0394
*     R8,                                                          0394
*     R9,                                                          0394
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z029     DS    0H                                                  0394
Z029PWVR DS    0H                                                  0395
*   RFY                                                            0395
*    (R2,                                                          0395
*     R3,                                                          0395
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0397
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPPWVR - THIS IS AN INTERNAL ROUTINE THAT ATTEMPTS TO VERIFY*/
*   /* THE USER'S AUTHORIZATION WITH THE APPROPRIATE MINIMUM LEVEL OF*/
*   /* AUTHORIZATION AS DICTATED BY THE USERS DATA SET AND CATALOG   */
*   /* ENVIRONMENT.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0398
*   RFY                                                            0398
*     CTGPL BASED(CCACPL);                                         0398
*                                                                  0398
*   /*****************************************************************/
*   /*                                                               */
*   /* SET AN INDEX VALUE FOR THE POSITION OF THE PASSWORD IN THE    */
*   /* PASSWORD STORAGE AREA THAT ESTABLISHES THE MINIMUM LEVEL FOR  */
*   /* PASSWORD VERIFICATION.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0399
*   IF CTGMAST=ON THEN              /* MASTER PASSWORD REQUIRED      */
         L     @10,CCACPL(,R11)                                    0399
         TM    CTGMAST(@10),B'01000000'                            0399
         BNO   @RF00399                                            0399
*     INDXPWRG=MSTRPOS;             /* SET MASTER PSWD POSITION      */
         LA    INDXPWRG,1                                          0400
*   ELSE                            /* NOT MASTER LEVEL PASSWORD     */
*     IF CTGCI=ON THEN              /* CONTROL INTERVAL PSWD REQ     */
         B     @RC00399                                            0401
@RF00399 L     @10,CCACPL(,R11)                                    0401
         TM    CTGCI(@10),B'00100000'                              0401
         BNO   @RF00401                                            0401
*       INDXPWRG=CTRLIPOS;          /* SET CTRL INTERVAL POS         */
         LA    INDXPWRG,2                                          0402
*     ELSE                          /* NOT CONTROL INTERVAL LVL      */
*       IF CTGUPD=ON THEN           /* UPDATE PASSWORD REQUIRED      */
         B     @RC00401                                            0403
@RF00401 L     @10,CCACPL(,R11)                                    0403
         TM    CTGUPD(@10),B'00010000'                             0403
         BNO   @RF00403                                            0403
*         INDXPWRG=UPDTPOS;         /* SET UPDATE PSWD POSITION      */
         LA    INDXPWRG,3                                          0404
*       ELSE                        /* READ PASSWORD REQUIRED        */
*         INDXPWRG=READPOS;         /* READ PASSWORD POSITION        */
         B     @RC00403                                            0405
@RF00403 LA    INDXPWRG,4                                          0405
*   CKAULEVL=INDXPWRG;              /* STORE VER. LEVEL      @Z40RSRC*/
*                                                                  0406
@RC00403 DS    0H                                                  0406
@RC00401 DS    0H                                                  0406
@RC00399 L     @10,CCAR5REC(,R11)                                  0406
         ST    INDXPWRG,CKAULEVL(,@10)                             0406
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE PROVIDED PASSWORD WITH THE LIST OF PASSWORDS FROM   */
*   /* THE ENTRY AND VERIFY THE HIGHEST LEVEL PASSWORD THAT IS EQUAL */
*   /* TO OR GREATER THAN THE MINIMUM ACCEPT- ABLE LEVEL.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0407
*   CKAUSTOP=OFF;                   /* SET VERIFY LOOP CONTROL       */
         NI    CKAUSTOP(@10),B'11110111'                           0407
*   DO WHILE CKAUSTOP=OFF;          /* TRY DATA AND/OR CAT RECORD    */
         B     @DE00408                                            0408
@DL00408 DS    0H                                                  0409
*     IF CKAURACV=OFF THEN          /* IF NOT THE RAC PASS THROUGH 0409
*                                      THIS CODE             @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0409
         TM    CKAURACV(@10),B'00100000'                           0409
         BNZ   @RF00409                                            0409
*       IF RCDEXSEC=OFF&CKAUCATC=OFF THEN/*                  @ZA17511*/
*                                                                  0410
         L     @05,CCAURAB(,R11)                                   0410
         L     @05,CCACPE1(,@05)                                   0410
         TM    RCDEXSEC(@05),B'10000000'                           0410
         BNZ   @RF00410                                            0410
         TM    CKAUCATC(@10),B'00001000'                           0410
         BNZ   @RF00410                                            0410
*         /***********************************************************/
*         /*                                                         */
*         /* IF NOT RAC PROTECTED AND THE CATLG IS NOT THE ONLY      */
*         /* SOURCE OF AUTHORIZATION FOR THIS REQUEST........        */
*         /*                                                 @ZA17511*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0411
*         DO COUNTREG=INDXPWRG TO INCR1 BY-INCR1 WHILE(CKAUVFMT=OFF);
         LR    COUNTREG,INDXPWRG                                   0411
         B     @DE00411                                            0411
@DL00411 L     @10,CCAR5REC(,R11)                                  0411
         TM    CKAUVFMT(@10),B'00100000'                           0411
         BNZ   @DC00411                                            0411
*                                   /* SCAN ALL OR PART OF LIST      */
*           IF COUNTREG=INDXPWRG&   /* MINIMUM LEVEL                 */
*               CKAUNRC1=OFF&       /* FIRST PASS ON ENTRY           */
*               PSWDARRY(COUNTREG)=NULLPRMT THEN/* PASSWORD NULL     */
         CR    COUNTREG,INDXPWRG                                   0412
         BNE   @RF00412                                            0412
         TM    CKAUNRC1(@10),B'00000001'                           0412
         BNZ   @RF00412                                            0412
         LR    @05,COUNTREG                                        0412
         SLA   @05,3                                               0412
         ALR   @05,@10                                             0412
         CLC   PSWDARRY+208(8,@05),NULLPRMT                        0412
         BNE   @RF00412                                            0412
*             IF CTGPSWD=NONE THEN  /* NO PASSWORD PROVIDED BY U     */
         L     @05,CCACPL(,R11)                                    0413
         L     @05,CTGPSWD(,@05)                                   0413
         LTR   @05,@05                                             0413
         BNZ   @RF00413                                            0413
*               CKAUVFST=ON;        /* INDICATE TO STOP VERIFY       */
         OI    CKAUVFST(@10),B'10000000'                           0414
*             ELSE                  /* PASSWORD SUPPLIED BY CALL     */
*               CKAUNULL=ON;        /* SET LEVEL NULL, BUT TRY       */
         B     @RC00413                                            0415
@RF00413 L     @10,CCAR5REC(,R11)                                  0415
         OI    CKAUNULL(@10),B'10000000'                           0415
*           IF CKAUPSWK=PSWDARRY(COUNTREG) THEN/* PASSWORDS MATCH    */
@RC00413 DS    0H                                                  0416
@RF00412 L     @10,CCAR5REC(,R11)                                  0416
         LR    @05,COUNTREG                                        0416
         SLA   @05,3                                               0416
         ALR   @05,@10                                             0416
         CLC   CKAUPSWK(8,@10),PSWDARRY+208(@05)                   0416
         BNE   @RF00416                                            0416
*             DO;                   /* CHECK IF HIGHEST LEVEL        */
*               CKAUVFST=ON;        /* SET PASSWORD VERIFIED         */
         OI    CKAUVFST(@10),B'10000000'                           0418
*               IF COUNTREG=MSTRPOS THEN/* MASTER LEVEL VERIFIED     */
         C     COUNTREG,@CF00054                                   0419
         BNE   @RF00419                                            0419
*                 CKAUVFMT=ON;      /* SET MASTER PSWD VERIFIED      */
         OI    CKAUVFMT(@10),B'00100000'                           0420
*               ELSE                                               0421
*                 ;                 /* MASTER LEVEL NOT VERIFIED     */
@RF00419 DS    0H                                                  0422
*               CKAUSTOP=ON;        /* SET LOOP STOP SWITCH          */
         L     @10,CCAR5REC(,R11)                                  0422
         OI    CKAUSTOP(@10),B'00001000'                           0422
*             END;                                                 0423
*           ELSE                                                   0424
*             ;                     /* PASSWORDS DO NOT MATCH        */
@RF00416 DS    0H                                                  0425
*         END;                                                     0425
         BCTR  COUNTREG,0                                          0425
@DE00411 LTR   COUNTREG,COUNTREG                                   0425
         BP    @DL00411                                            0425
@DC00411 DS    0H                                                  0426
*       ELSE                                                       0426
*         ;                         /* ITEM IS RAC PROT      @Z40RSRC*/
@RF00410 DS    0H                                                  0427
*     ELSE                          /* THIS IS THE RAC PASS THRU THIS
*                                      ROUTINE               @Z40RSRC*/
*                                                                  0427
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLDC                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0427
*Z030RACV:                                                         0427
*       CALL IGGPRACV;              /* ATTEMPT VERIFICATION VIA RACF
*                                                            @Z40RSRC*/
         B     @RC00409                                            0427
@RF00409 DS    0H                                                  0427
Z030RACV L     @15,@CV00051                                        0427
         BALR  @14,@15                                             0427
*     IF CKAURACV=ON THEN                                          0428
@RC00409 L     @10,CCAR5REC(,R11)                                  0428
         TM    CKAURACV(@10),B'00100000'                           0428
         BO    @RT00428                                            0428
*       ;                           /* IF VERIFYING RAC      @Z40RSRC*/
*     ELSE                          /* NOT VERIFYING RAC     @Z40RSRC*/
*       CKAUNRC1=ON;                /* INDICATE FIRST PASS DONE      */
         L     @10,CCAR5REC(,R11)                                  0430
         OI    CKAUNRC1(@10),B'00000001'                           0430
*     IF CKAUVFST=OFF&              /* NO VERIFICATION OF DATA       */
*         (RCDID=CTGTINDX×RCDID=CTGTDATA)&/* OR INDEX FOR LOCATE     */
*         (CTGFUNC=CTGLOC           /* IF LOCATE             @Z40RSRC*/
*         ×(CTGFUNC=CTGCMS          /* IF CMS FUNCTION       @Z40RSRC*/
*         &(CTGOPTNS=CTGLTCAT       /* AND IS LISTCAT        @Z40RSRC*/
*         ×CTGOPTNS=CTGALTER))) THEN/* OR IS ALTER           @Z40RSRC*/
@RT00428 L     @10,CCAR5REC(,R11)                                  0431
         TM    CKAUVFST(@10),B'10000000'                           0431
         BNZ   @RF00431                                            0431
         L     @10,CCAURAB(,R11)                                   0431
         L     @10,CCACPE1(,@10)                                   0431
         CLI   RCDID(@10),C'I'                                     0431
         BE    @GL00044                                            0431
         CLI   RCDID(@10),C'D'                                     0431
         BNE   @RF00431                                            0431
@GL00044 L     @10,CCACPL(,R11)                                    0431
         TM    CTGFUNC(@10),B'00100000'                            0431
         BNO   @GL00047                                            0431
         TM    CTGFUNC(@10),B'11000000'                            0431
         BZ    @RT00431                                            0431
@GL00047 L     @10,CCACPL(,R11)                                    0431
         TM    CTGFUNC(@10),B'10000000'                            0431
         BNO   @RF00431                                            0431
         TM    CTGFUNC(@10),B'01100000'                            0431
         BNZ   @RF00431                                            0431
         TM    CTGOPTNS(@10),B'00100000'                           0431
         BNO   @GL00049                                            0431
         TM    CTGOPTNS(@10),B'11011000'                           0431
         BZ    @RT00431                                            0431
@GL00049 L     @10,CCACPL(,R11)                                    0431
         TM    CTGOPTNS(@10),B'00010000'                           0431
         BNO   @RF00431                                            0431
         TM    CTGOPTNS(@10),B'11101000'                           0431
         BNZ   @RF00431                                            0431
@RT00431 DS    0H                                                  0432
*Z031CLGT:                                                         0432
*       CALL IGGPCLGT;              /* CHECK THE CLUSTER RECORD      */
Z031CLGT BAL   @14,IGGPCLGT                                        0432
*     ELSE                                                         0433
*       ;                           /* DO NOT CHECK CLUSTER          */
@RF00431 DS    0H                                                  0434
*     IF CKAUVFST=OFF&CCACD1=RCS THEN/* SECURITY NOT VERIFIED        */
         L     @10,CCAR5REC(,R11)                                  0434
         TM    CKAUVFST(@10),B'10000000'                           0434
         BNZ   @RF00434                                            0434
         CLI   CCACD1(R11),0                                       0434
         BNE   @RF00434                                            0434
*       IF RCDCINO^=CATSECRD        /* CATALOG RECORD NOT READ       */
*           &CKAURACV=OFF           /* NOT VERIFYING RAC     @Z40RSRC*/
*           &CAXRAC=OFF             /* & CAT NOT RAC DEF     @Z40RSRC*/
*           &CKAULVRQ^=ON THEN      /* OKAY TO READ CATALOG RCRD     */
         L     @05,CCAURAB(,R11)                                   0435
         L     @05,CCACPE1(,@05)                                   0435
         CLC   RCDCINO(3,@05),@CF00072+1                           0435
         BE    @RF00435                                            0435
         TM    CKAURACV(@10),B'00100000'                           0435
         BNZ   @RF00435                                            0435
         L     @05,CCAACB(,R11)                                    0435
         L     @05,ACBUAPTR(,@05)                                  0435
         TM    CAXRAC(@05),B'00010000'                             0435
         BNZ   @RF00435                                            0435
         TM    CKAULVRQ(@10),B'00000010'                           0435
         BO    @RF00435                                            0435
*Z032CKCC:                                                         0436
*         CALL IGGPCKCC;            /* GET/CHECK CATALOG RECORD      */
Z032CKCC L     @15,@CV03352                                        0436
         BALR  @14,@15                                             0436
*       ELSE                        /* CHECK IF NEED BASE RECORD     */
*         DO;                       /* MAY NEED BASE RECORD BACK     */
*                                                                  0437
         B     @RC00435                                            0437
@RF00435 DS    0H                                                  0438
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLDC                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0438
*Z033RACT:                                                         0438
*           CALL IGGPRACT;          /* MAY BE ABLE TO VERIFY AUTH  0438
*                                      THRU RACF AUTHORIZATION TO THE
*                                      CATALOG               @Z40RSRC*/
Z033RACT L     @15,@CV00048                                        0438
         BALR  @14,@15                                             0438
*           CKAUSTOP=ON;            /* STOP THE PROCESS              */
         L     @10,CCAR5REC(,R11)                                  0439
         OI    CKAUSTOP(@10),B'00001000'                           0439
*           IF CKAUBASE=ON THEN     /* CHECK IF NEED BASE            */
         TM    CKAUBASE(@10),B'00010000'                           0440
         BNO   @RF00440                                            0440
*             DO;                   /* RECORD PROCESSING AND FIX     */
*Z034BSGT:                                                         0442
*               CALL IGGPBSGT;      /* GET THE BASE RECORD BACK      */
Z034BSGT BAL   @14,IGGPBSGT                                        0442
*               IF CCACD1=OKAY THEN /* I/O COMPLETE OKAY             */
         CLI   CCACD1(R11),0                                       0443
         BNE   @RF00443                                            0443
*Z035CKEX:                                                         0444
*                 CALL IGGPCKEX;    /* EXTRACT THE SECURITY          */
Z035CKEX BAL   @14,IGGPCKEX                                        0444
*               ELSE                                               0445
*                 ;                 /* ERROR ON THE I/O REQUEST      */
@RF00443 DS    0H                                                  0446
*             END;                                                 0446
*           ELSE                                                   0447
*             ;                     /* IN BUFFER RECORD IS OKAY      */
@RF00440 DS    0H                                                  0448
*         END;                                                     0448
*     ELSE                          /* SECURITY WAS VERIFIED         */
*       CKAUSTOP=ON;                /* SET STOP PROCESS INDIC        */
         B     @RC00434                                            0449
@RF00434 L     @10,CCAR5REC(,R11)                                  0449
         OI    CKAUSTOP(@10),B'00001000'                           0449
*     IF CCACD1^=OKAY THEN          /* MAJOR ERROR                   */
@RC00434 CLI   CCACD1(R11),0                                       0450
         BE    @RF00450                                            0450
*       CALL EXIT;                  /* ERROR RETURN                  */
         BAL   @14,EXIT                                            0451
*     ELSE                                                         0452
*       ;                           /* NO MAJOR ERRORS FOUND         */
@RF00450 DS    0H                                                  0453
*   END;                                                           0453
@DE00408 L     @10,CCAR5REC(,R11)                                  0453
         TM    CKAUSTOP(@10),B'00001000'                           0453
         BZ    @DL00408                                            0453
*   IF CKAUNULL=ON THEN             /* ORIGINAL PASS NULL PSWD       */
         TM    CKAUNULL(@10),B'10000000'                           0454
         BNO   @RF00454                                            0454
*     CKAUVFST=ON;                  /* INDICATE SECURITY DONE        */
*                                                                  0455
         OI    CKAUVFST(@10),B'10000000'                           0455
*   /*****************************************************************/
*   /*                                                               */
*   /* MAINTAIN THE NUMBER OF ATTEMPTS ALLOWED TO VERIFY PSWDS       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0456
*   IF CKAUVFST^=ON THEN            /* MORE VERIFY NEEDED            */
@RF00454 L     @10,CCAR5REC(,R11)                                  0456
         TM    CKAUVFST(@10),B'10000000'                           0456
         BO    @RF00456                                            0456
*     IF CKAURACV=ON THEN           /* IF VERIFYING RAC      @Z40RSRC*/
         TM    CKAURACV(@10),B'00100000'                           0457
         BNO   @RF00457                                            0457
*       IF CKAUCKPW=OFF THEN        /* IF PASSWORDS CANNOT BE CHKED
*                                      AT ANY LEV            @Z40RSRC*/
         TM    CKAUCKPW(@10),B'00010000'                           0458
         BNZ   @RF00458                                            0458
*         CKWAATMP=NONE;            /* MAKE NO ATTEMPTS      @Z40RSRC*/
         MVI   CKWAATMP(@10),X'00'                                 0459
*       ELSE                                                       0460
*         ;                         /* P/W'S CAN BE CHKD     @Z40RSRC*/
@RF00458 DS    0H                                                  0461
*     ELSE                          /* VERIFYING P/W'S       @Z40RSRC*/
*       DO;                         /* MAINTAIN NO. OF ATTEMPTS      */
         B     @RC00457                                            0461
@RF00457 DS    0H                                                  0462
*         IF CTGPSWD=NONE&CKAUBDPW=OFF THEN/* ADJUST COUNT           */
         L     @10,CCACPL(,R11)                                    0462
         L     @10,CTGPSWD(,@10)                                   0462
         LTR   @10,@10                                             0462
         BNZ   @RF00462                                            0462
         L     @10,CCAR5REC(,R11)                                  0462
         TM    CKAUBDPW(@10),B'01000000'                           0462
         BNZ   @RF00462                                            0462
*           CKWAATMP=CKWAATMP-INCR1;/* DECREMENT PROMPT COUNT        */
         SLR   @05,@05                                             0463
         IC    @05,CKWAATMP(,@10)                                  0463
         BCTR  @05,0                                               0463
         STC   @05,CKWAATMP(,@10)                                  0463
*         ELSE                                                     0464
*           ;                                                      0464
@RF00462 DS    0H                                                  0465
*         IF CKWAATMP=NONE THEN     /* ALL ATTEMPTS USED             */
         L     @10,CCAR5REC(,R11)                                  0465
         CLI   CKWAATMP(@10),0                                     0465
         BNE   @RF00465                                            0465
*           IF CKAUVFRD=ON THEN     /* IF RD LEVEL OK        @Z40RSRC*/
         TM    CKAUVFRD(@10),B'00010000'                           0466
         BNO   @RF00466                                            0466
*             CKAUVFST=ON;          /* VERIFY SUCCESSFUL     @Z40RSRC*/
         OI    CKAUVFST(@10),B'10000000'                           0467
*           ELSE                    /* RD LEVEL NOT LK       @Z40RSRC*/
*                                                                  0468
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='BM', CCAREASN=RSN2, CCARETRN=RCSEC    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0468
*             CCAPROB=IGGSEGID+(RSN2*K256)+RCSEC;/* SET ERROR CODE 0468
*                                                            @Y30SSSB*/
         B     @RC00466                                            0468
@RF00466 MVC   CCAPROB(4,R11),@CF03501                             0468
*         ELSE                                                     0469
*           ;                       /* MORE ATTEMPTS                 */
@RF00465 DS    0H                                                  0470
*         CKWAATMP=CKWAATMP-INCR1;  /* DECREMENT NO. ATTEMPTS        */
@RC00465 L     @10,CCAR5REC(,R11)                                  0470
         SLR   @05,@05                                             0470
         IC    @05,CKWAATMP(,@10)                                  0470
         BCTR  @05,0                                               0470
         STC   @05,CKWAATMP(,@10)                                  0470
*         CKAUBDPW=ON;              /* INDICATE PASSWORD BAD         */
         OI    CKAUBDPW(@10),B'01000000'                           0471
*       END;                                                       0472
*   ELSE                                                           0473
*     ;                             /* SECURITY SUCCESSFUL           */
@RF00456 DS    0H                                                  0474
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00456 BAL   @14,EXIT                                            0474
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPBSGT');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPBSGT'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0477
@EF00006 DS    0H                                                  0477
@ER00006 BR    @14                                                 0477
@PB00006 DS    0H                                                  0478
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0479
*/********************************************************************/
*/*                                                                  */
*/*        IGGPBSGT  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0479
*IGGPBSGT:                                                         0479
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0479
IGGPBSGT DS    0H                                                  0480
*   GEN(ENTRY IGGPBSGT );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPBSGT
*Z037:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z037BSGT:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0481
*    (R5,                                                          0481
*     R6,                                                          0481
*     R7,                                                          0481
*     R8,                                                          0481
*     R9,                                                          0481
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z037     DS    0H                                                  0481
Z037BSGT DS    0H                                                  0482
*   RFY                                                            0482
*    (R2,                                                          0482
*     R3,                                                          0482
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0487
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Z40RSRC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0488
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**   MODULE NAME =  IGGPBSGT                                          *
**                                                                    *
**   DESCRIPTIVE NAME =  RE-READ ORIGINAL BASE RECORD                 *
**                                                                    *
**   COPYRIGHT =  NONE                                                *
**                                                                    *
**   STATUS =  RELEASE 1, LEVEL 0                                     *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS INTERNAL PROCEDURE GETS THE ORIGINAL BASE RECORD, THAT   *
**      WAS IN THE BUFFER ON ENTRY TO THE SECURITY FUNCTION, BACK     *
**      INTO THE BUFFER.                                              *
**                                                                    *
**   INPUT =                                                          *
**      REGISTER 1 REFERENCES THE CCA WHICH CONTAINS:                 *
**        CCAURAB REFERENCING THE RAB INTO WHICH THE RECORD SHOULD    *
**        BE READ.                                                    *
**        CCARSREC POINTS TO THE CHECK AUTHORIZATION WORK AREA WHICH  *
**        CONTAINS: (CKAUWKA)                                         *
**          REGETCI - CONTROL INTERNAL VALUE OF BASE RECORD           *
**                                                                    *
**   OUTPUT =                                                         *
**      BASE RECORD IN RAB1                                           *
**      CKAUBASE - NO NEED TO GET BASE RECORD                         *
**                                                                    *
**     MESSAGES =  NONE                                               *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0488
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPBSGT - THIS IS AN INTERNAL ROUTINE TO RE-READ THE ORIGINAL*/
*   /* BASE RECORD BACK INTO THE BUFFER FOR PROCESSING.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0488
*   IF CKAUNOSV=ON THEN             /* NEED TO GET THE RECORD        */
         L     @10,CCAR5REC(,R11)                                  0488
         TM    CKAUNOSV(@10),B'01000000'                           0488
         BNO   @RF00488                                            0488
*     DO;                                                          0489
*       CKAUNOSV=OFF;               /* CLEAR RECORD SAVED FLAG       */
         NI    CKAUNOSV(@10),B'10111111'                           0490
*       CCASRCIN=REGETCI;           /* SET THE CI NO. OF THE RCD     */
         MVC   CCASRCIN(3,R11),REGETCI(@10)                        0491
*       DO;                                                        0492
*         CCAF1KEY=OFF;             /* GET BY CI NO.                 */
*         CCAF1KGE=OFF;             /* NOT GET NEXT                  */
*         CCAF1UP=ON;               /* GET FOR UPD                   */
*                                                                  0495
         OI    CCAF1UP(R11),B'00000010'                            0495
         NI    CCAF1KEY(R11),B'11100111'                           0495
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLBI                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0496
*Z039GET:                                                          0496
*         CALL IGGPGET;             /* GET RECORD                    */
Z039GET  L     @15,@CV00052                                        0496
         BALR  @14,@15                                             0496
*       END;                                                       0497
*       REGETCI=NONE;               /* CLEAR RE-GET CI VALUE         */
         L     @10,CCAR5REC(,R11)                                  0498
         SLR   @05,@05                                             0498
         STCM  @05,7,REGETCI(@10)                                  0498
*     END;                                                         0499
*   ELSE                            /* RECORD IS IN STORAGE          */
*     DO;                           /* MOVE THE RECORD AROUND        */
         B     @RC00488                                            0500
@RF00488 DS    0H                                                  0501
*       R2=CCACPE1;                 /* GET PROPER BUFFER ADDRESS     */
         L     @10,CCAURAB(,R11)                                   0501
         L     R2,CCACPE1(,@10)                                    0501
*       CCARAB=CCARAB4;             /* RESTORE THE RAB POINTERS      */
         MVC   CCARAB(20,@10),CCARAB4(R11)                         0502
*       CCAR4REC=CCAR3REC+CTRECSIZ; /* RE-SET THE CPE1 PTR           */
         LA    @10,512                                             0503
         AL    @10,CCAR3REC(,R11)                                  0503
         ST    @10,CCAR4REC(,R11)                                  0503
*       R2->CATRECRD(1)=CCAR4REC->CATRECRD(1);                     0504
         MVC   CATRECRD(256,R2),CATRECRD(@10)                      0504
*       R2->CATRECRD(2)=CCAR4REC->CATRECRD(2);                     0505
         MVC   CATRECRD+256(256,R2),CATRECRD+256(@10)              0505
*       CCACPE24=NONE;              /* CLEAR THE BAD CPE POINTER     */
         SLR   @10,@10                                             0506
         ST    @10,CCACPE24(,R11)                                  0506
*     END;                                                         0507
*   CKAUBASE=OFF;                   /* INDICATE BASE READ IN         */
@RC00488 L     @10,CCAR5REC(,R11)                                  0508
         NI    CKAUBASE(@10),B'11101111'                           0508
*   REGETCI=NONE;                   /* CLEAR RE-GET CI VALUE         */
         SLR   @05,@05                                             0509
         STCM  @05,7,REGETCI(@10)                                  0509
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0510
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPCLGT');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPCLGT'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0513
@EF00007 DS    0H                                                  0513
@ER00007 BR    @14                                                 0513
@PB00007 DS    0H                                                  0514
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0515
*/********************************************************************/
*/*                                                                  */
*/*        IGGPCLGT  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0515
*IGGPCLGT:                                                         0515
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0515
IGGPCLGT DS    0H                                                  0516
*Z040:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z040CLGT:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0516
*    (R5,                                                          0516
*     R6,                                                          0516
*     R7,                                                          0516
*     R8,                                                          0516
*     R9,                                                          0516
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z040     DS    0H                                                  0516
Z040CLGT DS    0H                                                  0517
*   RFY                                                            0517
*    (R2,                                                          0517
*     R3,                                                          0517
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0519
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPCLGT - THIS INTERNAL ROUTINE RECEIVES CONTROL TO GET AN   */
*   /* ASSOCIATED CLUSTER FOR A DATA OR INDEX ENTRY THAT IS BEING    */
*   /* PROCESSED FOR LOCATE, ALTER OR LIST CAT REQUESTS. IF THE      */
*   /* CLUSTER IS SECURITY PROTECTED, A CHECK IS MADE TO SEE IF THE  */
*   /* USER HAS MASTER LEVEL AUTH TO THE CLUSTER, WHICH IS SUFFICIENT*/
*   /* FOR REQUESTS OF THIS TYPE. ALSO, IF A DATA OR INDEX OBJECT IS */
*   /* THE ORIGINAL RECORD TO BE CHECKED AND PATH RECORDS EXIST OVER */
*   /* THE BASE CLUSTER OR AIX, THEN MASTER AUTHORIZATION TO THE PATH*/
*   /* IS ACCEPTABLE IF IT IS PROVIDED. IN ADDITION, IF THE BASE     */
*   /* CLUSTER OR AIX IS NOT PROTECTED, BUT THE DATA OR INDEX ARE,   */
*   /* AND IT IS AN OPEN(LOCATE) REQUEST, NO SECURITY IS REQUIRED.   */
*   /*                                                       @Y30SSSB*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0520
*   RFY                                                            0520
*     CTGPL BASED(CCACPL);          /*                       @Y30SSSB*/
*                                                                  0520
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARATION OF THE CLUSTER ASSOCIATION OCCURRENCE WITHIN THE  */
*   /* BASE DATA OR INDEX RECORD                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0521
*   DCL                                                            0521
*     1 ASOCDATA BASED(R4),                                        0521
*      2 ASOCCNVR PTR(8),           /* COUNT OF VARIABLE FIELDS      */
*      2 ASOCLNFX PTR(8),           /* LENGTH OF FIXED DATA          */
*      2 ASOCKIND CHAR(1),          /* ASSOCIATION TYPE              */
*      2 ASOCCINO PTR(24) BDY(BYTE);/* ASSOCIATION CI VALUE          */
*   REGETCI=RCDCINO;                /* SAVE CURRENT RECORD CI        */
         L     @10,CCAR5REC(,R11)                                  0522
         L     @05,CCAURAB(,R11)                                   0522
         L     @15,CCACPE1(,@05)                                   0522
         MVC   REGETCI(3,@10),RCDCINO(@15)                         0522
*   CKAUBASE=ON;                    /* SET RE-GET BASE RECORD        */
         OI    CKAUBASE(@10),B'00010000'                           0523
*   CKAUNOSV=OFF;                   /* INDICATE REC SAVED      Y02020*/
         NI    CKAUNOSV(@10),B'10111111'                           0524
*   CCAR4REC->CATRECRD(1)=CATRECRD(1);                             0525
         L     @14,CCAR4REC(,R11)                                  0525
         MVC   CATRECRD(256,@14),CATRECRD(@15)                     0525
*   CCAR4REC->CATRECRD(2)=CATRECRD(2);                             0526
         MVC   CATRECRD+256(256,@14),CATRECRD+256(@15)             0526
*   CCARAB4=CCARAB;                 /* SAVE THE CPE POINTERS         */
         MVC   CCARAB4(20,R11),CCARAB(@05)                         0527
*   CKAUNOSV=OFF;                   /* INDICATE RECORD SAVED         */
*                                                                  0528
         NI    CKAUNOSV(@10),B'10111111'                           0528
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE THE ASSOCIATION TO THE CLUSTER AND READ THE CLUSTER    */
*   /* RECORD                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0529
*   R4=CCACPE3+INCR2+LENGTH(IDAAMDSB);/* GRP OCCUR ADDR              */
         LA    R4,98                                               0529
         AL    R4,CCACPE3(,@05)                                    0529
*   CKAUTCIN=ASOCCINO;              /* SET AIX, CLUS CI      @Y30DSSB*/
         MVC   CKAUTCIN(3,@10),ASOCCINO(R4)                        0530
*   CKAUBSCI=ASOCCINO;              /* SAVE AIX, CLUS CI     @Y30DSSB*/
         MVC   CKAUBSCI(3,@10),ASOCCINO(R4)                        0531
*   CKAUTREP=NONE;                  /* INIT ASSOC SEQ NO.    @Y30SSSB*/
         SLR   @05,@05                                             0532
         STH   @05,CKAUTREP(,@10)                                  0532
*   CKAUPTST=OFF;                   /* INIT LOOP STOP        @Y30DSSB*/
         NI    CKAUPTST(@10),B'11011111'                           0533
*   DO WHILE CKAUPTST=OFF;          /* CHECK PATHS           @Y30DSSB*/
         B     @DE00534                                            0534
@DL00534 DS    0H                                                  0535
*     CCASRCIN=CKAUTCIN;            /* SET ASOC CI VALUE     @Y30DSSB*/
         L     @10,CCAR5REC(,R11)                                  0535
         MVC   CCASRCIN(3,R11),CKAUTCIN(@10)                       0535
*     DO;                                                          0536
*       CCAF1KEY=OFF;               /* GET BY CI NO.                 */
*       CCAF1KGE=OFF;               /* NOT GET NEXT                  */
*       CCAF1UP=OFF;                /* NOT GET UPD                   */
*                                                                  0539
         NI    CCAF1KEY(R11),B'11100101'                           0539
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0540
*Z042GET:                                                          0540
*       CALL IGGPGET;               /* GET RECORD                    */
Z042GET  L     @15,@CV00052                                        0540
         BALR  @14,@15                                             0540
*     END;                          /*                       @Y30DSSB*/
*     IF CCACD1=OKAY THEN           /* GET RECORD OKAY       @Y30DSSB*/
         CLI   CCACD1(R11),0                                       0542
         BNE   @RF00542                                            0542
*       DO;                         /* CHK SECURE STATUS     @Y30DSSB*/
*Z043CKEX:                                                         0544
*         CALL IGGPCKEX;            /* SEE IF PWDS EXIST     @Y30DSSB*/
Z043CKEX BAL   @14,IGGPCKEX                                        0544
*         IF CCACD1=OKAY THEN       /* NO ERRORS IN EXT      @Y30DSSB*/
         CLI   CCACD1(R11),0                                       0545
         BNE   @RF00545                                            0545
*           DO;                     /*                       @Y30DSSB*/
*                                                                  0546
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK RACF AUTHORIZATION.                   @Z40RSRC*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0547
*             IF CKAURACV=ON THEN   /* IF VERIFYING RAC      @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0547
         TM    CKAURACV(@10),B'00100000'                           0547
         BNO   @RF00547                                            0547
*               IF RCDEXSEC=ON THEN /* & IS RAC DEFINED      @Z40RSRC*/
         L     @05,CCAURAB(,R11)                                   0548
         L     @05,CCACPE1(,@05)                                   0548
         TM    RCDEXSEC(@05),B'10000000'                           0548
         BNO   @RF00548                                            0548
*                 DO;               /*                       @Z40RSRC*/
*                   CKAURACL=MSTRPOS;/* MASTER AUTH LEV      @Z40RSRC*/
         MVC   CKAURACL(4,@10),@CF00054                            0550
*                   CKAUGLOB=ON;    /* IS GLOBAL ENTITY      @Z40RSRC*/
*                                                                  0551
         OI    CKAUGLOB(@10),B'00000100'                           0551
*                   /*************************************************/
*                   /*                                               */
*                   /* CALL TO MODULE IGG0CLDC                       */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0552
*Z044RACK:                                                         0552
*                   CALL IGGPRACK;  /* CHECK RAC AUTH        @Z40RSRC*/
Z044RACK L     @15,@CV00049                                        0552
         BALR  @14,@15                                             0552
*                   INDXPWRG=CKAULEVL;/* RESTORE REG.        @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0553
         L     INDXPWRG,CKAULEVL(,@10)                             0553
*                 END;              /*                       @Z40RSRC*/
*               ELSE                /* NOT RAC DEFINED       @Z40RSRC*/
*                 IF CCACD2=OKAY THEN/* IF P/W'S EXIST       @Z40RSRC*/
         B     @RC00548                                            0555
@RF00548 CLI   CCACD2(R11),0                                       0555
         BNE   @RF00555                                            0555
*                   CKAUCKPW=ON;    /* SHOULD CHK P/W'S      @Z40RSRC*/
         L     @10,CCAR5REC(,R11)                                  0556
         OI    CKAUCKPW(@10),B'00010000'                           0556
*                 ELSE                                             0557
*                   ;               /*                       @Z40RSRC*/
*                                                                  0557
@RF00555 DS    0H                                                  0558
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK FOR PASSWORD AUTHORIZATION.           @Z40RSRC*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0558
*             ELSE                  /* NOT VERIFYING RAC     @Z40RSRC*/
*               IF RCDEXSEC=OFF     /* IF NOT RAC DEF'D      @Z40RSRC*/
*                   &CCACD2=OKAY    /* PASSWORDS EXIST       @Z40RSRC*/
*                   &CKAUPSWK=CKAUMSTR THEN/* & MATCH        @Z40RSRC*/
         B     @RC00547                                            0558
@RF00547 L     @10,CCAURAB(,R11)                                   0558
         L     @10,CCACPE1(,@10)                                   0558
         TM    RCDEXSEC(@10),B'10000000'                           0558
         BNZ   @RF00558                                            0558
         CLI   CCACD2(R11),0                                       0558
         BNE   @RF00558                                            0558
         L     @10,CCAR5REC(,R11)                                  0558
         CLC   CKAUPSWK(8,@10),CKAUMSTR+216(@10)                   0558
         BNE   @RF00558                                            0558
*                 CKAUVFST=ON;      /* SET VERIFY STOP       @Z40RSRC*/
         OI    CKAUVFST(@10),B'10000000'                           0559
*               ELSE                                               0560
*                 ;                 /* NO AUTH VIA P/W'S     @Z40RSRC*/
*                                                                  0560
@RF00558 DS    0H                                                  0561
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK FOR NO PROTECTION OF CLUSTER OR AIX.          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0561
*             IF CKAULVRQ^=ON       /* IF NOT SPEC. LEV      @Z40RSRC*/
*                 &(RCDID=CTGTCL    /* & IS CLUSTER          @Z40RSRC*/
*                 ×RCDID=CTGTAIX)   /* OR IS AIX             @Z40RSRC*/
*                 &CCACD2^=OKAY     /* & NO P/W'S            @Z40RSRC*/
*                 &RCDEXSEC=OFF THEN/* & NOT RAC DEF'D       @Z40RSRC*/
@RC00547 L     @10,CCAR5REC(,R11)                                  0561
         TM    CKAULVRQ(@10),B'00000010'                           0561
         BO    @RF00561                                            0561
         L     @10,CCAURAB(,R11)                                   0561
         L     @10,CCACPE1(,@10)                                   0561
         CLI   RCDID(@10),C'C'                                     0561
         BE    @GL00058                                            0561
         CLI   RCDID(@10),C'G'                                     0561
         BNE   @RF00561                                            0561
@GL00058 CLI   CCACD2(R11),0                                       0561
         BE    @RF00561                                            0561
         L     @10,CCAURAB(,R11)                                   0561
         L     @10,CCACPE1(,@10)                                   0561
         TM    RCDEXSEC(@10),B'10000000'                           0561
         BNZ   @RF00561                                            0561
*               CKAUVFST=ON;        /* SHOW VERIFIED         @Z40RSRC*/
*                                                                  0562
         L     @10,CCAR5REC(,R11)                                  0562
         OI    CKAUVFST(@10),B'10000000'                           0562
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK IF VERIFICATION SHOULD STOP.          @Z40RSRC*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0563
*             IF CKAUVFST=ON THEN   /* IF SEC VERIFIED       @Z40RSRC*/
@RF00561 L     @10,CCAR5REC(,R11)                                  0563
         TM    CKAUVFST(@10),B'10000000'                           0563
         BNO   @RF00563                                            0563
*               DO;                 /* INDICATE SECURITY COMPLET     */
*                 CKAUSTOP=ON;      /*                       @Y30DSSB*/
*                 CKAUVFMT=ON;      /* INDICATE ALL ACCESSABLE       */
         OI    CKAUSTOP(@10),B'00101000'                           0566
*                 CKAUPTST=ON;      /* STOP CHECK LOOP       @Y30DSSB*/
         OI    CKAUPTST(@10),B'00100000'                           0567
*               END;                /*                       @Y30DSSB*/
*             ELSE                  /*                       @Y30DSSB*/
*               IF CKAULVRQ=ON THEN /* LOW LEVEL REQUD       @Y30DSSB*/
         B     @RC00563                                            0569
@RF00563 L     @10,CCAR5REC(,R11)                                  0569
         TM    CKAULVRQ(@10),B'00000010'                           0569
         BNO   @RF00569                                            0569
*                 CKAUPTST=ON;      /* STOP CHECK LOOP       @Y30DSSB*/
         OI    CKAUPTST(@10),B'00100000'                           0570
*               ELSE                /* CHECK PATH PWDS       @Y30DSSB*/
*                                                                  0571
*                 /***************************************************/
*                 /*                                                 */
*                 /* CHECK FOR AUTHORIZATION VIA PATH(S).            */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0571
*                 DO;               /* GET PATH RECORD AND CHECK   0571
*                                      MASTER PSWD MATCH     @Y30DSSB*/
         B     @RC00569                                            0571
@RF00569 DS    0H                                                  0572
*                   CKAUTREP=CKAUTREP+INCR1;/* INCREMENT THE REL REP
*                                      NUMBER                @Y30DSSB*/
         L     @10,CCAR5REC(,R11)                                  0572
         LA    @05,1                                               0572
         AH    @05,CKAUTREP(,@10)                                  0572
         STH   @05,CKAUTREP(,@10)                                  0572
*                   IF RCDID=CTGTPATH THEN/* PATH REC        @Y30DSSB*/
         L     @05,CCAURAB(,R11)                                   0573
         L     @05,CCACPE1(,@05)                                   0573
         CLI   RCDID(@05),C'R'                                     0573
         BNE   @RF00573                                            0573
*                     DO;           /* GET THE CLUS,AIX      @Y30DSSB*/
*                       CCASRCIN=CKAUBSCI;/* SET CI NO.      @Y30DSSB*/
         MVC   CCASRCIN(3,R11),CKAUBSCI(@10)                       0575
*                       DO;                                        0576
*                         CCAF1KEY=OFF;/* GET BY CI NO.              */
*                         CCAF1KGE=OFF;/* NOT GET NEXT               */
*                         CCAF1UP=OFF;/* NOT GET UPD                 */
*                                                                  0579
         NI    CCAF1KEY(R11),B'11100101'                           0579
*                         /*******************************************/
*                         /*                                         */
*                         /* CALL TO MODULE IGG0CLBI                 */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0580
*Z046GET:                                                          0580
*                         CALL IGGPGET;/* GET RECORD                 */
Z046GET  L     @15,@CV00052                                        0580
         BALR  @14,@15                                             0580
*                       END;        /*                       @Y30DSSB*/
*                     END;          /*                       @Y30DSSB*/
*                   ELSE                                           0583
*                     ;             /*                       @Y30DSSB*/
@RF00573 DS    0H                                                  0584
*                   IF CCACD1=OKAY THEN/* EXTRACT            @Y30DSSB*/
         CLI   CCACD1(R11),0                                       0584
         BNE   @RF00584                                            0584
*                     DO;           /* GET PATH RECORDS      @Y30DSSB*/
*                                                                  0585
*                       /*********************************************/
*                       /*                                           */
*                       /* EXTRACT THE NEXT PATH ASSOC       @Y30DSSB*/
*                       /* AND ITS RELREPNO                  @Y30DSSB*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0586
*                       RFY                                        0586
*                         CTGPL BASED(CCAXCPL);/*            @Y30SSSB*/
*                       CTGWKA=ADDR(CKAULNDT);/* WORK AREA ADDR      */
         L     @10,CCAXCPL(,R11)                                   0587
         L     @05,CCAR5REC(,R11)                                  0587
         LA    @00,CKAULNDT(,@05)                                  0587
         ST    @00,CTGWKA(,@10)                                    0587
*                       WKALEN1=LENGTH(USERWKA)+LENGTH(CKAUTREP)+LENGTH
*                           (CKAUTTYP)+LENGTH(CKAUTCIN);           0588
         LR    @15,@00                                             0588
         MVC   WKALEN1(2,@15),@CH00273                             0588
*                       WKALEN2=NONE;/* SET UP HEADER        @Y30DSSB*/
         SLR   @15,@15                                             0589
         LR    @14,@00                                             0589
         STH   @15,WKALEN2(,@14)                                   0589
*                       CKAUFLNM='ENTASSOC';/* FIELD NAME            */
         MVC   CKAUFLNM(8,@05),@CC03465                            0590
*                       CTGFLCHN=ADDR(CKAUTFP1);/* TEST FPL ADDR     */
*                                                                  0591
         L     @10,CTGFIELD(,@10)                                  0591
         LA    @00,CKAUTFP1(,@05)                                  0591
         ST    @00,CTGFLCHN(,@10)                                  0591
*                       /*********************************************/
*                       /*                                           */
*                       /* CONSTRUCT THE TEST FPL FOR THE PATH       */
*                       /* ASSOCIATIONS TO EXTRACT           @Y30DSSB*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0592
*                       RFY                                        0592
*                         CTGFL BASED(ADDR(CKAUTFP1));             0592
*                       CTGFL=CTGFL&&CTGFL;/* CLEAR FPL      @Y30DSSB*/
         LA    @10,100                                             0593
         ALR   @10,@05                                             0593
         XC    CTGFL(16,@10),CTGFL(@10)                            0593
*                       CTGFLDNM=ADDR(CKAUTFN1);/* NAME ADDRESS      */
         LA    @00,CKAUTFN1(,@05)                                  0594
         ST    @00,CTGFLDNM(,@10)                                  0594
*                       CKAUTFN1='TYPE    ';/* FIELD NAME    @Y30SSSB*/
         MVC   CKAUTFN1(8,@05),@CC03468                            0595
*                       CTGFLDNO=INCR1;/* NO. FIELDS         @Y30DSSB*/
         MVI   CTGFLDNO(@10),X'01'                                 0596
*                       CTGFLDGC=ASOGGC;/* GROUP CODE        @Y30DSSB*/
         MVI   CTGFLDGC(@10),X'02'                                 0597
*                       CTGFLDCD=CTGFLDEQ;/* TEST COND       @Y30DSSB*/
         MVI   CTGFLDCD(@10),X'80'                                 0598
*                       CTGFLNG(1)=LENGTH(CKAUTTYP);/* LENGTH        */
         MVC   CTGFLNG(4,@10),@CF00054                             0599
*                       CTGFLPT(1)=ADDR(CKAUTTYP);/* ADDRESS         */
         LA    @00,CKAUTTYP(,@05)                                  0600
         ST    @00,CTGFLPT(,@10)                                   0600
*                       CKAUTTYP=CTGTPATH;/* ASSOC TYPE      @Y30DSSB*/
         MVI   CKAUTTYP(@05),C'R'                                  0601
*                       CTGFLCHN=ADDR(CKAUTFP2);/* TEST FPL ADDR     */
*                                                                  0602
         LA    @00,CKAUTFP2(,@05)                                  0602
         ST    @00,CTGFLCHN(,@10)                                  0602
*                       /*********************************************/
*                       /*                                           */
*                       /* CONSTRUCT THE TEST FPL FOR RELATIVE       */
*                       /* REOITION NUMBER                   @Y30DSSB*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0603
*                       RFY                                        0603
*                         CTGFL BASED(ADDR(CKAUTFP2));             0603
*                       CKAUTFP2=CKAUTFP1;/* INIT FPL        @Y30DSSB*/
         MVC   CKAUTFP2(16,@05),CKAUTFP1(@05)                      0604
*                       CTGFLDNM=ADDR(CKAUTFN2);/* NAME ADDRESS      */
         LA    @10,132                                             0605
         ALR   @10,@05                                             0605
         LA    @00,CKAUTFN2(,@05)                                  0605
         ST    @00,CTGFLDNM(,@10)                                  0605
*                       CKAUTFN2='RELREPNO';/* FIELD NAME            */
         MVC   CKAUTFN2(8,@05),@CC03471                            0606
*                       CTGFLDCD=CTGFLDGE;/* GREATER OR EQUAL        */
         MVI   CTGFLDCD(@10),X'A0'                                 0607
*                       CTGFLNG(1)=LENGTH(CKAUTREP);/* LENGTH        */
         MVC   CTGFLNG(4,@10),@CF00072                             0608
*                       CTGFLPT(1)=ADDR(CKAUTREP);/* ADDRESS         */
         LA    @00,CKAUTREP(,@05)                                  0609
         ST    @00,CTGFLPT(,@10)                                   0609
*                       CTGFLCHN=NONE;/* CLEAR CHAIN PTR     @Y30DSSB*/
*                                                                  0610
         ST    @15,CTGFLCHN(,@10)                                  0610
*                       /*********************************************/
*                       /*                                           */
*                       /* PREPARE TO CALL THE EXTRACT FUNCTION      */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0611
*                       CCARABB=CCAURAB;/* BASE REC RAB      @Y30DSSB*/
         L     @10,CCAURAB(,R11)                                   0611
         ST    @10,CCARABB(,R11)                                   0611
*                       CKUSVRPT=INDXPWRG;/* SAVE REG        @Y30DSSB*/
*                                                                  0612
         ST    INDXPWRG,CKUSVRPT(,@05)                             0612
*                       /*********************************************/
*                       /*                                           */
*                       /* CALL TO MODULE IGG0CLAZ                   */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0613
*Z047EXT:                                                          0613
*                       CALL IGGPEXT;/*                      @Y30DSSB*/
Z047EXT  L     @15,@CV00042                                        0613
         BALR  @14,@15                                             0613
*                       CCAURAB=CCARABB;/* RESTORE RAB PTR           */
         L     @10,CCARABB(,R11)                                   0614
         ST    @10,CCAURAB(,R11)                                   0614
*                       INDXPWRG=CKUSVRPT;/* RESTORE REG     @Y30DSSB*/
         L     @10,CCAR5REC(,R11)                                  0615
         L     INDXPWRG,CKUSVRPT(,@10)                             0615
*                       RFY                                        0616
*                         CTGFL BASED(ADDR(CKAUTFP1));             0616
*                     END;          /*                       @Y30DSSB*/
*                   ELSE                                           0618
*                     ;             /* BAD RET CD FR GET     @Z40RSRC*/
@RF00584 DS    0H                                                  0619
*                   IF(CCACD1^=OKAY&CCACD1^=RCVLSZ)×CTGFLCHN->CTGFLDTS=
*                       ON×         /* ALL BAD               @Y30SSSB*/
*                       CTGFLDTS=ON THEN/* ANY TESTS FAIL    @Y30DSSB*/
         CLI   CCACD1(R11),0                                       0619
         BE    @GL00062                                            0619
         CLI   CCACD1(R11),40                                      0619
         BNE   @RT00619                                            0619
@GL00062 LA    @10,100                                             0619
         AL    @10,CCAR5REC(,R11)                                  0619
         L     @05,CTGFLCHN(,@10)                                  0619
         TM    CTGFLDTS(@05),B'00000001'                           0619
         BO    @RT00619                                            0619
         TM    CTGFLDTS(@10),B'00000001'                           0619
         BNO   @RF00619                                            0619
@RT00619 DS    0H                                                  0620
*                     CKAUPTST=ON;  /* SET LOOP STOP VALUE   @Y30DSSB*/
         L     @10,CCAR5REC(,R11)                                  0620
         OI    CKAUPTST(@10),B'00100000'                           0620
*                   ELSE            /*                       @Y30SSSB*/
*                     CCAPROB=0;    /* CLEAR ERRORS          @Y30SSSB*/
         B     @RC00619                                            0621
@RF00619 SLR   @10,@10                                             0621
         ST    @10,CCAPROB(,R11)                                   0621
*                 END;              /*                       @Z40RSRC*/
*           END;                    /*                       @Y30DSSB*/
*         ELSE                      /* ERR IN EXTRACTING     @Z40RSRC*/
*           CKAUPTST=ON;            /* STOP PATH CHECK       @Y30SSSB*/
         B     @RC00545                                            0624
@RF00545 L     @10,CCAR5REC(,R11)                                  0624
         OI    CKAUPTST(@10),B'00100000'                           0624
*       END;                        /*                       @Y30DSSB*/
*     ELSE                                                         0626
*       ;                           /* ERROR IN GET          @Z40RSRC*/
@RF00542 DS    0H                                                  0627
*   END;                            /* OF CHK PATH LOOP      @Z40RSRC*/
@RC00542 DS    0H                                                  0627
@DE00534 L     @10,CCAR5REC(,R11)                                  0627
         TM    CKAUPTST(@10),B'00100000'                           0627
         BZ    @DL00534                                            0627
*   CCACD2=OKAY;                    /* CLEAR INDIC BYTE      @Y30DSSB*/
         MVI   CCACD2(R11),X'00'                                   0628
*   IF CCACD1=RCS THEN              /* NO ERRORS YET         @Y30SSSB*/
         CLI   CCACD1(R11),0                                       0629
         BNE   @RF00629                                            0629
*     DO;                           /* REGET PROPER RECS     @Y30SSSB*/
*Z048BSGT:                                                         0631
*       CALL IGGPBSGT;              /* GET ORIGINAL RECORD-D/I       */
Z048BSGT BAL   @14,IGGPBSGT                                        0631
*       IF CCACD1=RCS THEN          /* GET REC W/0 ERROR     @Y30SSSB*/
         CLI   CCACD1(R11),0                                       0632
         BNE   @RF00632                                            0632
*Z049CKEX:                                                         0633
*         CALL IGGPCKEX;            /* RE-SET THE SECURITY INFO      */
Z049CKEX BAL   @14,IGGPCKEX                                        0633
*       ELSE                                                       0634
*         ;                         /*                       @Y30SSSB*/
@RF00632 DS    0H                                                  0635
*     END;                          /*                       @Y30SSSB*/
*   ELSE                                                           0636
*     ;                             /*                       @Y30SSSB*/
@RF00629 DS    0H                                                  0637
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0637
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0638
@EF00008 DS    0H                                                  0638
@ER00008 BR    @14                                                 0638
@PB00008 DS    0H                                                  0639
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0640
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0640
*EXIT:                                                             0640
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0640
EXIT     DS    0H                                                  0641
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0644
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00009 DS    0H                                                  0645
@EF00009 DS    0H                                                  0645
@ER00009 BR    @14                                                 0645
*   END                                                            0646
*                                                                  0646
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (ICHACHKL)                                       */
*/*%INCLUDE SYSLIB  (ICHRDDFL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*                                                                  0646
*       ;                                                          0646
@EL00001 DS    0H                                                  0646
@EF00001 DS    0H                                                  0646
@ER00001 BR    @14                                                 0646
@DATA    DS    0H
@CH00273 DC    H'10'
@CH00295 DC    H'38'
@CH03497 DC    H'45'
@CH00322 DC    H'74'
@CH03498 DC    H'312'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
IGG0CLBM CSECT
         DS    0F
@CF00054 DC    F'1'
@CF00072 DC    F'2'
@CF00237 DC    F'216'
@CF03501 DC    F'-1026293192'
@CF03487 DC    F'-1026292680'
@CF03490 DC    F'-1026292168'
@CF03496 DC    F'-1026291656'
@CF03493 DC    F'-1026290120'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLBM CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00042 DC    V(IGGPEXT)
@CV00043 DC    V(IGGPWTSO)
@CV00044 DC    V(IGGPINMD)
@CV00045 DC    V(IGGPSPSC)
@CV00046 DC    V(IGGPRPLF)
@CV00047 DC    V(IGGPRPLM)
@CV00048 DC    V(IGGPRACT)
@CV00049 DC    V(IGGPRACK)
@CV00050 DC    V(IGGPRACS)
@CV00051 DC    V(IGGPRACV)
@CV00052 DC    V(IGGPGET)
@CV03352 DC    V(IGGPCKCC)
         DS    0D
ROUTDESC DC    XL4'040080A0'
@CC03221 DC    C'        '
@CC03385 DC    C'PASSWALL'
@CC03465 DC    C'ENTASSOC'
@CC03468 DC    C'TYPE    '
@CC03471 DC    C'RELREPNO'
@CB03233 DC    X'0000000000000000'
NULLPRMT DC    X'FFFFFFFFFFFFFFFF'
WTORFLGS DC    B'1000000000000000'
SYSOPFIX DC    CL30'IEC301A S JOB          DSNAME '
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
COUNTREG EQU   @02
INDXPWRG EQU   @03
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCACD2   EQU   IGGCCA+13
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2SYS EQU   CCAFLG2
CCAF2NVC EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAF2CO  EQU   CCAF2COB
CCAF2CB  EQU   CCAF2COB
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCASUPFD EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCASRCIN EQU   CCASRID
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1REC EQU   CCARAB1+4
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3REC EQU   CCARAB3+4
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4REC EQU   CCARAB4+4
CCAR4SEG EQU   CCARAB4+8
CCACPE24 EQU   CCAR4SEG
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5REC EQU   CCARAB5+4
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCACMS   EQU   IGGCCA+316
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCARABB  EQU   IGGCCA+380
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCASAVID EQU   IGGCCA+492
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFLGS EQU   CCAMNAT+240
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAFLG11 EQU   IGGCCA+1059
CCAF11B5 EQU   CCAFLG11
CCAF11B6 EQU   CCAFLG11
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCADGDGA EQU   IGGCCA+1488
CCAREQDQ EQU   IGGCCA+1492
CCAREDOP EQU   CCAREQDQ+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGBYPSS EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGDISC  EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGFUNC  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGOPTN4 EQU   CTGPL+3
CTGBYPMT EQU   CTGOPTN4
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGOPTNS EQU   CTGDSORG
CTGTYPE  EQU   CTGPL+18
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGPSWD  EQU   CTGJSCB
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDCD EQU   CTGFL+1
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDTS EQU   CTGFLDRE
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKALEN1  EQU   USERWKA
WKALEN2  EQU   USERWKA+2
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
ENTNAMET EQU   ENTNAMES
ENTNAMEV EQU   ENTNAMES+1
FIELDNM  EQU   0
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CCACPE3  EQU   CCARAB+12
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDSECF  EQU   CATRCD+26
RCDEXSEC EQU   RCDSECF
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBSTAWA EQU   TCB+252
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBINFL1 EQU   ACBINFLG
ACBVVIC  EQU   ACBINFL1
ACBINFL2 EQU   ACBINFLG+1
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
NOBASE   EQU   0
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXRAC   EQU   CAXFLG3
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CAXCCA   EQU   IGGCAXWA+104
CAXECB   EQU   IGGCAXWA+120
CAXECBHB EQU   CAXECB
CAXHRPLW EQU   IGGCAXWA+128
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGFVPWD EQU   CTGFV+84
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
ACHKLIST EQU   0
ACHKINSW EQU   ACHKLIST
ACHKENTW EQU   ACHKLIST+4
ACHKFLG1 EQU   ACHKENTW
ACHKENT  EQU   ACHKENTW+1
ACHKCLNW EQU   ACHKLIST+8
ACHKFLG2 EQU   ACHKCLNW
ACHKVOLW EQU   ACHKLIST+12
ACHKFLG3 EQU   ACHKVOLW
RDDFLIST EQU   0
RDDFINSW EQU   RDDFLIST
RDDFENTW EQU   RDDFLIST+4
RDDFFLGS EQU   RDDFENTW
RDDFOVOL EQU   RDDFLIST+8
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
CATRECRD EQU   0
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
TIOT1    EQU   0
TIOCNJOB EQU   TIOT1
ASCBPTR  EQU   0
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBTSB  EQU   ASCB+60
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
FIELDNME EQU   0
PSWDREFR EQU   0
NAMECHAR EQU   0
RTDSCWRD EQU   0
CKAUINFO EQU   0
CKAUPSWD EQU   CKAUINFO
CKAUMSTR EQU   CKAUPSWD
CKAUUPDT EQU   CKAUPSWD+16
CKAUPRMT EQU   CKAUINFO+32
CKAUATMP EQU   CKAUINFO+40
CKAUMDUL EQU   CKAUINFO+42
PSWDARRY EQU   0
CKAUWKA  EQU   0
CKAUWKWD EQU   CKAUWKA
CKWAATMP EQU   CKAUWKWD
REGETCI  EQU   CKAUWKWD+1
CKAUPSWK EQU   CKAUWKA+4
CKAUFLGS EQU   CKAUWKA+12
CKAUVFST EQU   CKAUFLGS
CKAUBDPW EQU   CKAUFLGS
CKAUVFMT EQU   CKAUFLGS
CKAUBASE EQU   CKAUFLGS
CKAUSTOP EQU   CKAUFLGS
CKAULVRQ EQU   CKAUFLGS
CKAUNRC1 EQU   CKAUFLGS
CKAUFLG1 EQU   CKAUWKA+13
CKAUNULL EQU   CKAUFLG1
CKAUNOSV EQU   CKAUFLG1
CKAUPTST EQU   CKAUFLG1
CKAUCKPW EQU   CKAUFLG1
CKAUBSCI EQU   CKAUWKA+14
CKBASECI EQU   CKAUWKA+17
CKUSVRPT EQU   CKAUWKA+20
CKAULEVL EQU   CKAUWKA+24
CKAURACL EQU   CKAUWKA+28
CKAUCPL  EQU   CKAUWKA+36
CKAUFLNM EQU   CKAUWKA+92
CKAUTFP1 EQU   CKAUWKA+100
CKAUTFN1 EQU   CKAUWKA+124
CKAUTFP2 EQU   CKAUWKA+132
CKAUTFN2 EQU   CKAUWKA+156
CKAULNDT EQU   CKAUWKA+164
CKAUTREP EQU   CKAUWKA+168
CKAUTTYP EQU   CKAUWKA+170
CKAUTCIN EQU   CKAUWKA+171
CKAURF1  EQU   CKAUWKA+174
CKAURACV EQU   CKAURF1
CKAUVFRD EQU   CKAURF1
CKAUCATC EQU   CKAURF1
CKAUGLOB EQU   CKAURF1
CKAUPRBO EQU   CKAURF1
CKAUVLTY EQU   CKAUWKA+196
CKAUDTLN EQU   CKAUWKA+212
CKAUDATA EQU   CKAUWKA+216
CKAUEDSN EQU   CKAUWKA+268
CKAUINWA EQU   0
CKAUECB  EQU   CKAUINWA
CKAUPRML EQU   CKAUINWA+4
CKAUMGAR EQU   CKAUINWA+12
CKAUMGSZ EQU   CKAUMGAR
CKAUMGFG EQU   CKAUMGAR+2
CKAUMSG  EQU   CKAUMGAR+4
FIXEDFLD EQU   0
PGSPATTR EQU   FIXEDFLD+59
PAGESP   EQU   PGSPATTR
ASOCDATA EQU   0
ASOCCINO EQU   ASOCDATA+3
BUFSIZE  EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
ENTRYNAM EQU   0
EXCPNAME EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
TNAM     EQU   0
@NM00037 EQU   CTGDDNM
CTGPROB  EQU   @NM00037
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CNAME    EQU   CTGRBASE
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00115 EQU   CATTR1
CCATTR   EQU   @NM00115
@NM00116 EQU   CCATTR
@NM00118 EQU   CATTR1
CRGATTR  EQU   @NM00118
CUPG     EQU   CRGATTR
TIOENTRY EQU   TIOT1+24
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
ACHKPROF EQU   ACHKENT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00130 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00129 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
@NM00119 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00116
CSWAPSPC EQU   @NM00116
@NM00117 EQU   @NM00116
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00114 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
CATTISDS EQU   CATTR2
@NM00113 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CEXP     EQU   CTGRBASE+55
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
@NM00090 EQU   MCATDSTR+1
@NM00089 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
ASOCKIND EQU   ASOCDATA+2
ASOCLNFX EQU   ASOCDATA+1
ASOCCNVR EQU   ASOCDATA
@NM00137 EQU   PGSPATTR
@NM00136 EQU   FIXEDFLD
@NM00135 EQU   CKAUWKA+211
@NM00134 EQU   CKAUVLTY+12
CKAUVOLS EQU   CKAUVLTY+6
CKAUDVTP EQU   CKAUVLTY+2
@NM00133 EQU   CKAUVLTY
CKAUVTLN EQU   CKAUWKA+192
CKAURCMC EQU   CKAUWKA+176
@NM00132 EQU   CKAUWKA+175
CKAURACX EQU   CKAURF1
CKAUDOUB EQU   CKAURF1
CKAUIMPL EQU   CKAURF1
CKAUTLP2 EQU   CKAUWKA+148
CKAUTLP1 EQU   CKAUWKA+116
CKAULNPT EQU   CKAUWKA+84
CKAUFPL  EQU   CKAUWKA+68
CKAUFLPT EQU   CKAUWKA+64
CKAUSVLV EQU   CKAUWKA+32
@NM00131 EQU   CKAUFLG1
CKAULPSW EQU   CKAUFLGS
CKAUAREC EQU   CKAUINFO+52
CKAUVRLN EQU   CKAUINFO+50
CKAUREAD EQU   CKAUPSWD+24
CKAUCI   EQU   CKAUPSWD+8
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
TIOCSTEP EQU   TIOT1+8
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00128 EQU   IDAAMDSB+41
@NM00127 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00126 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00125 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00124 EQU   RTDEVUCB
@NM00123 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00122 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00121 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00120 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTVOLSER EQU   LTENTRY+2
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00112 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
RDDFVSER EQU   RDDFLIST+12
RDDFNNAM EQU   RDDFOVOL
RDDFENT  EQU   RDDFENTW+1
@NM00111 EQU   RDDFFLGS
RDDFDSTV EQU   RDDFFLGS
@NM00110 EQU   RDDFFLGS
RDDFNEWN EQU   RDDFFLGS
RDDFOLDV EQU   RDDFFLGS
RDDFTADV EQU   RDDFFLGS
RDDFTDEL EQU   RDDFFLGS
RDDFINST EQU   RDDFINSW+1
RDDFLENG EQU   RDDFINSW
ACHKVOLS EQU   ACHKVOLW+1
@NM00109 EQU   ACHKFLG3
ACHKVOL  EQU   ACHKFLG3
@NM00108 EQU   ACHKFLG3
ACHKPRF  EQU   ACHKFLG3
@NM00107 EQU   ACHKFLG3
ACHKCLN  EQU   ACHKCLNW+1
@NM00106 EQU   ACHKFLG2
ACHKTRD  EQU   ACHKFLG2
ACHKTUPD EQU   ACHKFLG2
ACHKTCTL EQU   ACHKFLG2
@NM00105 EQU   ACHKFLG2
ACHKTALT EQU   ACHKFLG2
ACHKCSA  EQU   ACHKFLG1
ACHKLOGN EQU   ACHKFLG1
ACHKLOGF EQU   ACHKFLG1
@NM00104 EQU   ACHKFLG1
ACHKDSTV EQU   ACHKFLG1
@NM00103 EQU   ACHKFLG1
@NM00102 EQU   ACHKFLG1
@NM00101 EQU   ACHKFLG1
ACHKINST EQU   ACHKINSW+1
ACHKLENG EQU   ACHKINSW
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00100 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVCPP EQU   CTGFVPWD
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00099 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00098 EQU   CTGFVPRO
CTGFVROF EQU   CTGFVPRO
CTGFVRON EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXWNQID EQU   CAXHRPLW+2
CAXHRPLC EQU   CAXHRPLW
CAXASCBP EQU   IGGCAXWA+124
@NM00097 EQU   CAXECB+1
@NM00096 EQU   CAXECBHB
CAXECBPB EQU   CAXECBHB
CAXECBWB EQU   CAXECBHB
CAXRACP  EQU   IGGCAXWA+116
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXPLOCK EQU   CAXCCA
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00095 EQU   COPTS
CENLST   EQU   COPTS
@NM00094 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00093 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00092 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00091 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00088 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00087 EQU   ACBINFL2
ACBCBIC  EQU   ACBINFL2
@NM00086 EQU   ACBINFL2
ACBBYPSS EQU   ACBINFL1
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFL1
ACBSCRA  EQU   ACBINFL1
ACBCAT   EQU   ACBINFL1
ACBIJRQE EQU   ACBINFL1
ACBJEPS  EQU   ACBINFL1
@NM00085 EQU   ACBINFL1
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00084 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00083 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00082 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00081 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00080 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00079 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00078 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00077 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00076 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00051 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00050 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAFX EQU   TCBSTAWA
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00049 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00048 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00047 EQU   CVTFIX+248
@NM00046 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00045 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00044 EQU   CATRCD+27
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00043 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
@NM00042 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00041 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00040 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00039 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
@NM00038 EQU   CTGFLDRE
@NM00036 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
CTGNOFLD EQU   CTGPL+19
@NM00035 EQU   CTGDSORG
@NM00034 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
CTGNPROF EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
@NM00033 EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGSWAP  EQU   CTGRCATN
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1508
@NM00032 EQU   IGGCCA+1504
CCARMINN EQU   CCAREQDQ+8
CCARMAJN EQU   CCAREQDQ+4
CCAREDRC EQU   CCAREQDQ+3
@NM00031 EQU   CCAREDOP
CCAREDSH EQU   CCAREDOP
CCAREDLN EQU   CCAREQDQ+1
CCAREDFF EQU   CCAREQDQ
CCASAVMN EQU   CCADGDGA
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
ENQPCCB  EQU   CCAFLG10
CCADEFUN EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00030 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCACUMPL EQU   IGGCCA+1412
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00029 EQU   CCAREGS
@NM00028 EQU   CCAFLG11
@NM00027 EQU   CCAFLG11
@NM00026 EQU   IGGCCA+1057
@NM00025 EQU   CCARVFG1
RVWG     EQU   CCARVFG1
RVRPLMFG EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNADR EQU   CCAMNCAT+252
CCAMNLEN EQU   CCAMNCAT+249
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00024 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00023 EQU   CCAMNAT+1
@NM00022 EQU   MNATTOP
MNATFULL EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00021 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00020 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00019 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00018 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABL  EQU   IGGCCA+388
CCARABF  EQU   IGGCCA+384
CCAMCPL  EQU   CCAXCPL
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCACMSWA EQU   CCACMS
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
CCAMNSPL EQU   CCAMSSPL+9
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
@NM00001 EQU   IGGCCA+12
CCARACP  EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00075 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00074 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00073 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00072 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00071 EQU   FLCFSA
@NM00070 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00069 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00068 EQU   FLCIOA
@NM00067 EQU   FLCMCLA+15
@NM00066 EQU   FLCMCLA+14
@NM00065 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00064 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00063 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00062 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00061 EQU   FLCPER
@NM00060 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00059 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00058 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00057 EQU   FLCPIILC
@NM00056 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00055 EQU   FLCSVILC
@NM00054 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00053 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00052 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00153 EQU   @RC00152
@RC00190 EQU   @RC00189
@RC00230 EQU   @RC00224
@RC00283 EQU   @RC00276
@RC00278 EQU   @RC00276
@RC00313 EQU   @RC00306
@RC00311 EQU   @RC00306
@RC00309 EQU   @RC00306
@RC00307 EQU   @RC00306
@RC00435 EQU   @RC00434
@RC00466 EQU   @RC00465
@RC00457 EQU   @RC00456
@RC00548 EQU   @RC00547
@RC00545 EQU   @RC00542
@PB00009 EQU   @EL00001
@RC00569 EQU   @RC00545
@RC00563 EQU   @RC00545
@RC00619 EQU   @RC00545
@ENDDATA EQU   *
         END   IGG0CLBM,(C'PLS1115',0701,78165)
