         TITLE 'IGG0CLBO - CATALOG RECOVERY AREA I/O SUBFUNCTIONS      *
                        '
IGG0CLBO CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLBO  77.260'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPRAPA'
         EJECT
         B     @PB00002                                            0239
IGGPRAPA DS    0H                                                  0240
         ENTRY IGGPRAPA
         DROP @15
Z003     DS    0H                                                  0242
Z003RAPA DS    0H                                                  0243
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
*                                                                  0248
         USING *,12
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CONTROLS THE PROCESS OF ADDING NEW RECORDS TO    */
*   /* CRAS.                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*   CCARAREC=CCACPE1;               /* PT TO INPUT RECORD            */
         L     @10,CCAURAB(,R11)                                   0249
         L     @10,CCACPE1(,@10)                                   0249
         ST    @10,CCARAREC(,R11)                                  0249
*   IF HOBCRAVL=N×                  /* IF CRA VOL ^ YET KNOWN OR     */
*       CCAVBUFI=ON THEN            /* FORCE OF BUFFRING IS IND      */
         CLI   HOBCRAVL(@10),0                                     0250
         BE    @RT00250                                            0250
         TM    CCAVBUFI(R11),B'01000000'                           0250
         BNO   @RF00250                                            0250
@RT00250 DS    0H                                                  0251
*     DO;                                                          0251
*Z004RAPC:                                                         0252
*       CALL IGGPRAPC;              /* ADD RCD TO BUFF CHN           */
Z004RAPC BAL   @14,IGGPRAPC                                        0252
*Z005RAX:                                                          0253
*       CALL IGGPRAX;               /* EXIT                          */
Z005RAX  BAL   @14,IGGPRAX                                         0253
*     END;                                                         0254
*Z006RAOR:                                                         0255
*   CALL IGGPRAOR;                  /* ORIENT TO CRA                 */
@RF00250 DS    0H                                                  0255
Z006RAOR BAL   @14,IGGPRAOR                                        0255
*   IF CCACD1^=RCS THEN             /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0256
         BE    @RF00256                                            0256
*Z007RAX:                                                          0257
*     CALL IGGPRAX;                 /* EXIT                          */
Z007RAX  BAL   @14,IGGPRAX                                         0257
*   IF RCDID=TYPV THEN              /* INPUT RCD TYPE=VOL RCD        */
@RF00256 L     @10,CCARAREC(,R11)                                  0258
         CLI   RCDID(@10),C'V'                                     0258
         BNE   @RF00258                                            0258
*     CAXF2VTU=ON;                  /* IND VOL TIMESTMP UPD COMP     */
         L     @10,CCARAACB(,R11)                                  0259
         L     @10,ACBUAPTR(,@10)                                  0259
         OI    CAXF2VTU(@10),B'00000001'                           0259
*   ELSE                            /* OTHERWISE                     */
*     DO;                                                          0260
         B     @RC00258                                            0260
@RF00258 DS    0H                                                  0261
*       IF RCDID=TYPW&              /* EXTENSION TO VOL ENT          */
*           CAXF2VTU=OFF THEN       /* & TMESTMP UPDATE REQD         */
         L     @10,CCARAREC(,R11)                                  0261
         CLI   RCDID(@10),C'W'                                     0261
         BNE   @RF00261                                            0261
         L     @10,CCARAACB(,R11)                                  0261
         L     @10,ACBUAPTR(,@10)                                  0261
         TM    CAXF2VTU(@10),B'00000001'                           0261
         BNZ   @RF00261                                            0261
*         DO;                                                      0262
*                                                                  0262
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLDA                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0263
*Z008RAPV:                                                         0263
*           CALL IGGPRAPV;          /* UPDATE VOL ENT & F4 TMESTMP   */
Z008RAPV L     @15,@CV03786                                        0263
         BALR  @14,@15                                             0263
*           IF CCACD1^=RCS THEN     /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0264
         BE    @RF00264                                            0264
*Z009RAX:                                                          0265
*             CALL IGGPRAX;         /* EXIT                          */
Z009RAX  BAL   @14,IGGPRAX                                         0265
*         END;                                                     0266
@RF00264 DS    0H                                                  0267
*     END;                                                         0267
@RF00261 DS    0H                                                  0268
*   IF RCDID^=TYPV&                 /* ^ VOL ENT                     */
*       RCDID^=TYPW&                /* ^ VOL ENT EXTENTION           */
*       RBCBEG^=N THEN              /* BUFF CHN EXISTS               */
@RC00258 L     @10,CCARAREC(,R11)                                  0268
         CLI   RCDID(@10),C'V'                                     0268
         BE    @RF00268                                            0268
         CLI   RCDID(@10),C'W'                                     0268
         BE    @RF00268                                            0268
         L     @10,RBCBEG+1452(,R11)                               0268
         LTR   @10,@10                                             0268
         BZ    @RF00268                                            0268
*     DO;                           /* FLUSH BUFFER CHAIN            */
*       CCARALSA=CCACPE1;           /* SAVE INPUT RCD PTR            */
         L     @05,CCAURAB(,R11)                                   0270
         MVC   CCARALSA(4,R11),CCACPE1(@05)                        0270
*       CCARAREC=RBCBEG;            /* PT TO 1ST RCD ON BUF CHN      */
         ST    @10,CCARAREC(,R11)                                  0271
*       CCASCRA=ON;                 /* SET TO STOP PAD RECURSION     */
         OI    CCASCRA(R11),B'00100000'                            0272
*       DO WHILE(CCARAREC^=N);      /* PROCESS BUFF CHN              */
         B     @DE00273                                            0273
@DL00273 DS    0H                                                  0274
*         IF RABUFCHN^=N&           /* NOT LAST BUFF                 */
*             RABUFPPN^=N THEN      /* & PROCESS TO BE DEFERRED      */
         SLR   @10,@10                                             0274
         L     @05,CCARAREC(,R11)                                  0274
         L     @15,RABUFCHN(,@05)                                  0274
         CR    @15,@10                                             0274
         BE    @RF00274                                            0274
         CLI   RABUFPPN(@05),0                                     0274
         BE    @RF00274                                            0274
*           DO;                     /* DEFER PROCESSING              */
*             RABUFPPN=RABUFPPN-ONE;/* DECR PROCESS PASS CNT         */
         SLR   @14,@14                                             0276
         IC    @14,RABUFPPN(,@05)                                  0276
         BCTR  @14,0                                               0276
         STC   @14,RABUFPPN(,@05)                                  0276
*             RBCEND->RABUFCHN=CCARAREC;/* MV THIS BUFF TO END OF CHN*/
         LA    @14,1452                                            0277
         ALR   @14,R11                                             0277
         L     @09,RBCEND(,@14)                                    0277
         ST    @05,RABUFCHN(,@09)                                  0277
*             RBCEND=CCARAREC;      /* ADJ LAST BUFF PTR             */
         ST    @05,RBCEND(,@14)                                    0278
*             RBCBEG=RABUFCHN;      /* ADJ CHN START PTR             */
         ST    @15,RBCBEG(,@14)                                    0279
*             RABUFCHN=N;           /* CURR BUF NOW LAST BUFF        */
         ST    @10,RABUFCHN(,@05)                                  0280
*             CCARAREC=RBCBEG;      /* PREP TO PROC NXT BUFF         */
         ST    @15,CCARAREC(,R11)                                  0281
*           END;                                                   0282
*         ELSE                      /* THIS BUFF TO BE PROCESS NOW   */
*           DO;                                                    0283
         B     @RC00274                                            0283
@RF00274 DS    0H                                                  0284
*             RCDCRAVL=CCARALSA->RCDCRAVL;/* INPUT VOL SER TO CHAIN
*                                      RCD                           */
         L     @10,CCARAREC(,R11)                                  0284
         L     @05,CCARALSA(,R11)                                  0284
         MVC   RCDCRAVL(6,@10),RCDCRAVL(@05)                       0284
*             RCDCRADT=CCARALSA->RCDCRADT;/* MV DEV TYPE TO CHAINED
*                                      RCD                           */
         MVC   RCDCRADT(4,@10),RCDCRADT(@05)                       0285
*             RBCBEG=RABUFCHN;      /* HOLD PTR TO NXT BUFF          */
         MVC   RBCBEG+1452(4,R11),RABUFCHN(@10)                    0286
*Z010RARA:                                                         0287
*             CALL IGGPRARA;        /* ADD BUFFERED RCD TO CRA       */
Z010RARA BAL   @14,IGGPRARA                                        0287
*             IF CCACD1=RCS THEN    /* CONTINUE IF OK                */
         CLI   CCACD1(R11),0                                       0288
         BNE   @RF00288                                            0288
*               DO;                                                0289
*                 CCACPE1=CCARAREC; /* ST RCD PTR FOR IGGPPAD        */
         L     @10,CCAURAB(,R11)                                   0290
         MVC   CCACPE1(4,@10),CCARAREC(R11)                        0290
*                 DO;                                              0291
*                                                                  0291
*                   /*************************************************/
*                   /*                                               */
*                   /* CALL TO MODULE IGG0CLAG                       */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0292
*Z012PAD:                                                          0292
*                   CALL IGGPPAD;   /* PUT-ADD RECORD                */
Z012PAD  L     @15,@CV03787                                        0292
         BALR  @14,@15                                             0292
*                 END;              /* ADD BUFFERED RCD TO CATLG     */
*               END;                                               0294
*             IF CCACD1=RCS THEN    /* CONTINUE IF STILL OK          */
@RF00288 CLI   CCACD1(R11),0                                       0295
         BNE   @RF00295                                            0295
*               DO;                                                0296
*                 CCAMNADR=CCARAREC;/* ADDR OF BUFFER                */
         MVC   CCAMNADR(4,R11),CCARAREC(R11)                       0297
*                 CCAMNLEN=LENGTH(RABUFFER);/* SIZE OF BUFFER        */
         MVC   CCAMNLEN(3,R11),@CF01050+1                          0298
*                 R1=ADDR(CCAMSSPL);/* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0299
*                 CCAMNSPL=USUBPOOL;/* STORE SUBPOOL VALUE           */
         MVI   CCAMNSPL(R11),X'FC'                                 0300
*                 DO;                                              0301
*                   IF MNATFULL=ON THEN/* TRACKING TABLE FULL        */
*                                                                  0302
         TM    MNATFULL(R11),B'10000000'                           0302
         BNO   @RF00302                                            0302
*                     /***********************************************/
*                     /*                                             */
*                     /* CALL TO MODULE IGG0CLAT                     */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0303
*Z015ARFS:                                                         0303
*                     CALL IGGPARFS;/* YES,CALL SPILL ROUTINE        */
Z015ARFS L     @15,@CV03820                                        0303
         BALR  @14,@15                                             0303
*                   GEN REFS(CCAMNAT)                              0304
*                       (MVC CCAMNAT(248,11),CCAMNAT+8(11));/* PUSH
*                                      AND TRACK                     */
@RF00302 DS    0H                                                  0304
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*                 END;                                             0305
*                                                                  0305
*                 /***************************************************/
*                 /*                                                 */
*                 /* RELEASE MAIN STORAGE FROM USER SUBPOOL 252      */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0306
*                 GEN(FREEMAIN L,MF=(E,(1))) ;/* FREE BUFFER         */
         FREEMAIN L,MF=(E,(1))
*                 CCARAREC=RBCBEG;  /* PT TO NXT BUFFER              */
         LA    @10,1452                                            0307
         ALR   @10,R11                                             0307
         L     @05,RBCBEG(,@10)                                    0307
         ST    @05,CCARAREC(,R11)                                  0307
*                 IF CCARAREC=N THEN/* NO MORE BUFFERS               */
         SLR   @15,@15                                             0308
         CR    @05,@15                                             0308
         BNE   @RF00308                                            0308
*                   RBCEND=N;       /* CLR BUFF CHAIN END PTR        */
         ST    @15,RBCEND(,@10)                                    0309
*               END;                                               0310
*             ELSE                  /* ERROR HAS OCCURED             */
*               DO;                                                0311
         B     @RC00295                                            0311
@RF00295 DS    0H                                                  0312
*                 RABUFCHN=RBCBEG;  /* RESTORE BUFF CHAIN PTR        */
         L     @10,CCARAREC(,R11)                                  0312
         LA    @05,1452                                            0312
         ALR   @05,R11                                             0312
         MVC   RABUFCHN(4,@10),RBCBEG(@05)                         0312
*                 RABUFPPN=N;       /* CLEAR PROCESS PASS CNTR       */
         MVI   RABUFPPN(@10),X'00'                                 0313
*                 RBCBEG=CCARAREC;  /* PUT BUFF BACK INTO CHAIN      */
         ST    @10,RBCBEG(,@05)                                    0314
*                 CCARAREC=N;       /* KILL LOOP                     */
         SLR   @10,@10                                             0315
         ST    @10,CCARAREC(,R11)                                  0315
*               END;                                               0316
*           END;                                                   0317
@RC00295 DS    0H                                                  0318
*       END;                                                       0318
@RC00274 DS    0H                                                  0318
@DE00273 ICM   @10,15,CCARAREC(R11)                                0318
         BNZ   @DL00273                                            0318
*       CCASCRA=OFF;                /* RESET TO NORMAL               */
         NI    CCASCRA(R11),B'11011111'                            0319
*       CCACPE1=CCARALSA;           /* RESTORE INPUT RCD PTR         */
         L     @10,CCAURAB(,R11)                                   0320
         MVC   CCACPE1(4,@10),CCARALSA(R11)                        0320
*       IF CCACD1^=RCS THEN         /* HAS ANY ERROR OCCURED         */
         CLI   CCACD1(R11),0                                       0321
         BE    @RF00321                                            0321
*Z016RAX:                                                          0322
*         CALL IGGPRAX;             /* YES,EXIT                      */
Z016RAX  BAL   @14,IGGPRAX                                         0322
*       CCARAREC=CCARALSA;          /* RESTORE INPUT RCD PTR         */
@RF00321 MVC   CCARAREC(4,R11),CCARALSA(R11)                       0323
*     END;                                                         0324
*Z017RARA:                                                         0325
*   CALL IGGPRARA;                  /* ADD INPUT RCD TO CRA          */
@RF00268 DS    0H                                                  0325
Z017RARA BAL   @14,IGGPRARA                                        0325
*Z018RAX:                                                          0326
*   CALL IGGPRAX;                   /* EXIT                          */
Z018RAX  BAL   @14,IGGPRAX                                         0326
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0327
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAPU');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAPU'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0330
@EF00002 DS    0H                                                  0330
@ER00002 BR    @14                                                 0330
@PB00002 DS    0H                                                  0331
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0332
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAPU  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0332
*IGGPRAPU:                                                         0332
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0332
IGGPRAPU DS    0H                                                  0333
*   GEN(ENTRY IGGPRAPU );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPRAPU
*Z019:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z019RAPU:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0334
*    (R5,                                                          0334
*     R6,                                                          0334
*     R7,                                                          0334
*     R8,                                                          0334
*     R9,                                                          0334
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z019     DS    0H                                                  0334
Z019RAPU DS    0H                                                  0335
*   RFY                                                            0335
*    (R2,                                                          0335
*     R3,                                                          0335
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0340
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE UPDATES EXISTING CRA RECORDS.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*   CCARAREC=CCACPE1;               /* ST PTR TO INPUT RCD           */
         L     @10,CCAURAB(,R11)                                   0341
         L     @10,CCACPE1(,@10)                                   0341
         ST    @10,CCARAREC(,R11)                                  0341
*   IF RCDCINO^<HICATRCD THEN       /* CRA OR CAT SELF DESC RCD      */
         CLC   RCDCINO(3,@10),@CF02676+1                           0342
         BL    @RF00342                                            0342
*     DO;                           /* NO,CONTINUE                   */
*       IF HOBCRAVL=N×              /* CRA VOL NOT YET DETERMND      */
*           CCAVBUFI=ON THEN        /* OR FORCE OF BUFFERING IND     */
         CLI   HOBCRAVL(@10),0                                     0344
         BE    @RT00344                                            0344
         TM    CCAVBUFI(R11),B'01000000'                           0344
         BNO   @RF00344                                            0344
@RT00344 DS    0H                                                  0345
*         DO;                       /* YES                           */
*           IF RCDID=TYPW×          /* VOL ENT EXTN RCD              */
*               RCDID=TYPV THEN     /* OR VOL ENT RCD                */
         L     @10,CCARAREC(,R11)                                  0346
         CLI   RCDID(@10),C'W'                                     0346
         BE    @RT00346                                            0346
         CLI   RCDID(@10),C'V'                                     0346
         BNE   @RF00346                                            0346
@RT00346 DS    0H                                                  0347
*             R1=CCARAVCA(ONE);     /* YES,PT TO VOL RCD BUFF CHN    */
         L     R1,CCARAVCA(,R11)                                   0347
*           ELSE                    /* NOT TYPE "V" OR "W" RCD       */
*             R1=CCARANCA(ONE);     /* PT TO NORMAL RCD BUFF CHN     */
         B     @RC00346                                            0348
@RF00346 L     R1,CCARANCA(,R11)                                   0348
*           DO WHILE(R1->RCDCINO^=RCDCINO);/* SEARCH FOR THIS RCD"S
*                                      BUFF                          */
@RC00346 B     @DE00349                                            0349
@DL00349 DS    0H                                                  0350
*             R1=R1->RABUFCHN;      /* PT TO NXT BUFF                */
         L     R1,RABUFCHN(,R1)                                    0350
*           END;                                                   0351
@DE00349 L     @10,CCARAREC(,R11)                                  0351
         CLC   RCDCINO(3,R1),RCDCINO(@10)                          0351
         BNE   @DL00349                                            0351
*           R1->RABUFSG1=RABUFSG1;  /* MV RCD TO BUFF                */
         MVC   RABUFSG1(256,R1),RABUFSG1(@10)                      0352
*           R1->RABUFSG2=RABUFSG2;  /* MV RCD TO BUFF                */
         MVC   RABUFSG2(249,R1),RABUFSG2(@10)                      0353
*           CCARABYC=ON;            /* PROHIBIT CATALOG I/O          */
         OI    CCARABYC(R11),B'10000000'                           0354
*Z020RAX:                                                          0355
*           CALL IGGPRAX;           /* EXIT                          */
Z020RAX  BAL   @14,IGGPRAX                                         0355
*         END;                                                     0356
*       IF RCDCRACI=N THEN          /* RCD PREV ADDED TO CRA         */
@RF00344 L     @10,CCARAREC(,R11)                                  0357
         ICM   @05,7,RCDCRACI(@10)                                 0357
         BNZ   @RF00357                                            0357
*         DO;                       /* NO,UPD ATTEMPT BEFORE ADD     */
*Z021RAX:                                                          0359
*           CALL IGGPRAX;           /* EXIT                          */
Z021RAX  BAL   @14,IGGPRAX                                         0359
*         END;                                                     0360
*     END;                                                         0361
*   ELSE                            /* INPUT RCD IS SELF DESC RCD    */
*     DO;                                                          0362
         B     @RC00342                                            0362
@RF00342 DS    0H                                                  0363
*       IF CCARAEOV=OFF THEN        /* CRA EOV                       */
         TM    CCARAEOV(R11),B'01000000'                           0363
         BNZ   @RF00363                                            0363
*Z022RAX:                                                          0364
*         CALL IGGPRAX;             /* NO,RCD IS CATLG RCD,EXIT      */
Z022RAX  BAL   @14,IGGPRAX                                         0364
*       ELSE                        /* RCD IS CRA SELF DESC RCD      */
*         CCARABYC=ON;              /* SET IND TO BYPASS CATLG I/O   */
         B     @RC00363                                            0365
@RF00363 OI    CCARABYC(R11),B'10000000'                           0365
*     END;                                                         0366
@RC00363 DS    0H                                                  0367
*Z023RAOR:                                                         0367
*   CALL IGGPRAOR;                  /* ORIENT TO CRA                 */
@RC00342 DS    0H                                                  0367
Z023RAOR BAL   @14,IGGPRAOR                                        0367
*   IF CCACD1^=RCS THEN             /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0368
         BE    @RF00368                                            0368
*Z024RAX:                                                          0369
*     CALL IGGPRAX;                 /* EXIT                          */
Z024RAX  BAL   @14,IGGPRAX                                         0369
*   IF CAXF2VTU=OFF&                /* TME STMP UPD REQD             */
*       (RCDID=TYPV×                /* & PROCESSING "V" RCD          */
*       RCDID=TYPW) THEN            /* OR "W" RCD                    */
@RF00368 L     @10,CCARAACB(,R11)                                  0370
         L     @10,ACBUAPTR(,@10)                                  0370
         TM    CAXF2VTU(@10),B'00000001'                           0370
         BNZ   @RF00370                                            0370
         L     @10,CCARAREC(,R11)                                  0370
         CLI   RCDID(@10),C'V'                                     0370
         BE    @RT00370                                            0370
         CLI   RCDID(@10),C'W'                                     0370
         BNE   @RF00370                                            0370
@RT00370 DS    0H                                                  0371
*     DO;                                                          0371
*                                                                  0371
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLDA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0372
*Z025RAPV:                                                         0372
*       CALL IGGPRAPV;              /* UPD VOL ENT & F4 TMESTMPS     */
Z025RAPV L     @15,@CV03786                                        0372
         BALR  @14,@15                                             0372
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0373
         BE    @RF00373                                            0373
*Z026RAX:                                                          0374
*         CALL IGGPRAX;             /* EXIT                          */
Z026RAX  BAL   @14,IGGPRAX                                         0374
*     END;                                                         0375
@RF00373 DS    0H                                                  0376
*   IF RCDRACTS=CAXRACTS THEN       /* DO RCD-CRA LEVELS AGREE       */
@RF00370 L     @10,CCARAREC(,R11)                                  0376
         L     @05,CCARAACB(,R11)                                  0376
         L     @05,ACBUAPTR(,@05)                                  0376
         CLC   RCDRACTS(4,@10),CAXRACTS(@05)                       0376
         BNE   @RF00376                                            0376
*     DO;                           /* YES                           */
*       IF RCDCRACI^=N THEN         /* SELF DESC CI                  */
         SLR   @05,@05                                             0378
         ICM   @05,7,RCDCRACI(@10)                                 0378
         LTR   @05,@05                                             0378
         BZ    @RF00378                                            0378
*         CCARARBA=RCDCRACI;        /* NO,ST RCD CRA CI NO           */
         ST    @05,CCARARBA(,R11)                                  0379
*       ELSE                        /* YES                           */
*         CCARARBA=RCDCINO;         /* ST SELF DESC RCD CI NO        */
         B     @RC00378                                            0380
@RF00378 L     @10,CCARAREC(,R11)                                  0380
         SLR   @05,@05                                             0380
         ICM   @05,7,RCDCINO(@10)                                  0380
         ST    @05,CCARARBA(,R11)                                  0380
*       XIOOPT=0;                   /* PUT OPTIONS                   */
@RC00378 MVI   XIOOPT(R11),X'00'                                   0381
*Z027XRIO:                                                         0382
*       CALL IGGPXRIO;              /* WRITE CRA RCD                 */
Z027XRIO BAL   @14,IGGPXRIO                                        0382
*     END;                                                         0383
*Z028RAX:                                                          0384
*   CALL IGGPRAX;                   /* EXIT                          */
@RF00376 DS    0H                                                  0384
Z028RAX  BAL   @14,IGGPRAX                                         0384
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0385
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAPD');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAPD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0388
@EF00003 DS    0H                                                  0388
@ER00003 BR    @14                                                 0388
@PB00003 DS    0H                                                  0389
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0390
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAPD  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0390
*IGGPRAPD:                                                         0390
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0390
IGGPRAPD DS    0H                                                  0391
*   GEN(ENTRY IGGPRAPD );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPRAPD
*Z029:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z029RAPD:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0392
*    (R5,                                                          0392
*     R6,                                                          0392
*     R7,                                                          0392
*     R8,                                                          0392
*     R9,                                                          0392
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z029     DS    0H                                                  0392
Z029RAPD DS    0H                                                  0393
*   RFY                                                            0393
*    (R2,                                                          0393
*     R3,                                                          0393
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0398
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE DELETES CRA RECORDS.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0399
*   CCARAREC=CCACPE1;               /* PT TO INPUT RECORD            */
         L     @10,CCAURAB(,R11)                                   0399
         L     @10,CCACPE1(,@10)                                   0399
         ST    @10,CCARAREC(,R11)                                  0399
*   IF HOBCRAVL=N THEN              /* DOES CRA COPY OF RCD EXIST    */
         CLI   HOBCRAVL(@10),0                                     0400
         BNE   @RF00400                                            0400
*Z030RAX:                                                          0401
*     CALL IGGPRAX;                 /* NO,EXIT                       */
Z030RAX  BAL   @14,IGGPRAX                                         0401
*   IF RCDCRACI=N THEN              /* HAS RCD BEEN ADDED TO CRA     */
@RF00400 L     @10,CCARAREC(,R11)                                  0402
         ICM   @05,7,RCDCRACI(@10)                                 0402
         BNZ   @RF00402                                            0402
*     DO;                           /* NO,UPD ATTEMPT BEFOR ADD      */
*Z031RAX:                                                          0404
*       CALL IGGPRAX;               /* EXIT                          */
Z031RAX  BAL   @14,IGGPRAX                                         0404
*     END;                                                         0405
*Z032RAOR:                                                         0406
*   CALL IGGPRAOR;                  /* ORIENT TO CRA                 */
@RF00402 DS    0H                                                  0406
Z032RAOR BAL   @14,IGGPRAOR                                        0406
*   IF CCACD1^=RCS THEN             /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0407
         BE    @RF00407                                            0407
*Z033RAX:                                                          0408
*     CALL IGGPRAX;                 /* EXIT                          */
Z033RAX  BAL   @14,IGGPRAX                                         0408
*   IF RCDID=TYPW&                  /* VOL ENT EXTENSION RCD         */
*       CAXF2VTU=OFF THEN           /* & TMESTMP UPD REQD            */
@RF00407 L     @10,CCARAREC(,R11)                                  0409
         CLI   RCDID(@10),C'W'                                     0409
         BNE   @RF00409                                            0409
         L     @10,CCARAACB(,R11)                                  0409
         L     @10,ACBUAPTR(,@10)                                  0409
         TM    CAXF2VTU(@10),B'00000001'                           0409
         BNZ   @RF00409                                            0409
*     DO;                           /* YES                           */
*                                                                  0410
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLDA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0411
*Z034RAPV:                                                         0411
*       CALL IGGPRAPV;              /* UPD VOL ENT & F4 TMESTMPS     */
Z034RAPV L     @15,@CV03786                                        0411
         BALR  @14,@15                                             0411
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0412
         BE    @RF00412                                            0412
*Z035RAX:                                                          0413
*         CALL IGGPRAX;             /* EXIT                          */
Z035RAX  BAL   @14,IGGPRAX                                         0413
*     END;                                                         0414
@RF00412 DS    0H                                                  0415
*   IF RCDRACTS^=CAXRACTS THEN      /* DO RCD - CRA LEVELS MATCH     */
@RF00409 L     @10,CCARAREC(,R11)                                  0415
         L     @05,CCARAACB(,R11)                                  0415
         L     @05,ACBUAPTR(,@05)                                  0415
         CLC   RCDRACTS(4,@10),CAXRACTS(@05)                       0415
         BE    @RF00415                                            0415
*Z036RAX:                                                          0416
*     CALL IGGPRAX;                 /* NO,EXIT                       */
Z036RAX  BAL   @14,IGGPRAX                                         0416
*   IF CCAF1DK=ON THEN              /* DELETE-KEEP CI                */
@RF00415 TM    CCAF1DK(R11),B'00000001'                            0417
         BNO   @RF00417                                            0417
*Z037RAX:                                                          0418
*     CALL IGGPRAX;                 /* YES,EXIT                      */
Z037RAX  BAL   @14,IGGPRAX                                         0418
*   CCARARBA=RCDCRACI;              /* ST RCD CRA CI NO              */
@RF00417 L     @10,CCARAREC(,R11)                                  0419
         SLR   @05,@05                                             0419
         ICM   @05,7,RCDCRACI(@10)                                 0419
         ST    @05,CCARARBA(,R11)                                  0419
*   XIOOPT=160;                     /* GET OPTIONS                   */
         MVI   XIOOPT(R11),X'A0'                                   0420
*Z038XRIO:                                                         0421
*   CALL IGGPXRIO;                  /* GET CRA COPY OF RCD           */
Z038XRIO BAL   @14,IGGPXRIO                                        0421
*   IF CCACD1^=RCS×                 /* I/O ERROR OR                  */
*       CCAR0REC->RCDID=TYPF THEN   /* FREE RCD                      */
         CLI   CCACD1(R11),0                                       0422
         BNE   @RT00422                                            0422
         L     @10,CCAR0REC(,R11)                                  0422
         CLI   RCDID(@10),C'F'                                     0422
         BNE   @RF00422                                            0422
@RT00422 DS    0H                                                  0423
*Z039RAX:                                                          0423
*     CALL IGGPRAX;                 /* YES,EXIT                      */
Z039RAX  BAL   @14,IGGPRAX                                         0423
*   IF CCARALRD=OFF THEN            /* READ OF CRA CCR REQD          */
@RF00422 TM    CCARALRD(R11),B'00100000'                           0424
         BNZ   @RF00424                                            0424
*     DO;                           /* YES                           */
*Z040RARC:                                                         0426
*       CALL IGGPRARC;              /* READ CRA CCR                  */
Z040RARC BAL   @14,IGGPRARC                                        0426
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0427
         BE    @RF00427                                            0427
*Z041RAX:                                                          0428
*         CALL IGGPRAX;             /* EXIT                          */
Z041RAX  BAL   @14,IGGPRAX                                         0428
*     END;                                                         0429
@RF00427 DS    0H                                                  0430
*   ARASGA=ARASGA&&ARASGA;          /* CLEAR ARA TO BLD FREE RCD     */
@RF00424 L     @10,CCAR0REC(,R11)                                  0430
         XC    ARASGA(255,@10),ARASGA(@10)                         0430
*   ARASGB=ARASGB&&ARASGB;          /* CLR REST OF ARA               */
         XC    ARASGB(250,@10),ARASGB(@10)                         0431
*   CCAR0REC->RCDCRACI=RCDCRACI;    /* CI NO TO FREE RCD             */
         L     @05,CCARAREC(,R11)                                  0432
         SLR   @15,@15                                             0432
         ICM   @15,7,RCDCRACI(@05)                                 0432
         STCM  @15,7,RCDCRACI(@10)                                 0432
*   ARAID=TYPF;                     /* FREE ID TO RCD                */
         MVI   ARAID(@10),C'F'                                     0433
*   ARAFCHN=CAXFDCI;                /* PT THIS F RCD TO NXT F RCD    */
         L     @05,CCARAACB(,R11)                                  0434
         L     @05,ACBUAPTR(,@05)                                  0434
         MVC   ARAFCHN(3,@10),CAXFDCI(@05)                         0434
*   CCARARBA=RCDCRACI;              /* ST CI NO OF RCD               */
         ST    @15,CCARARBA(,R11)                                  0435
*   XIOOPT=32;                      /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'20'                                   0436
*Z042XRIO:                                                         0437
*   CALL IGGPXRIO;                  /* WRITE FREE RCD                */
Z042XRIO BAL   @14,IGGPXRIO                                        0437
*   IF CCACD1^=RCS THEN             /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0438
         BE    @RF00438                                            0438
*Z043RAX:                                                          0439
*     CALL IGGPRAX;                 /* EXIT                          */
Z043RAX  BAL   @14,IGGPRAX                                         0439
*   CAXFDCI=RCDCRACI;               /* INSERT THIS RCD INTO F CHN    */
@RF00438 L     @10,CCARAACB(,R11)                                  0440
         L     @10,ACBUAPTR(,@10)                                  0440
         L     @05,CCARAREC(,R11)                                  0440
         MVC   CAXFDCI(3,@10),RCDCRACI(@05)                        0440
*   CAXCDCI=CAXCDCI+ONE;            /* ADD 1 TO DEL RCD COUNT        */
         LA    @05,1                                               0441
         SLR   @15,@15                                             0441
         ICM   @15,7,CAXCDCI(@10)                                  0441
         ALR   @05,@15                                             0441
         STCM  @05,7,CAXCDCI(@10)                                  0441
*   CCARACR=ON;                     /* IND CRA CCR CHKPT IS REQD     */
         OI    CCARACR(R11),B'00010000'                            0442
*Z044RAX:                                                          0443
*   CALL IGGPRAX;                   /* EXIT                          */
Z044RAX  BAL   @14,IGGPRAX                                         0443
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0444
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAG');           /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0447
@EF00004 DS    0H                                                  0447
@ER00004 BR    @14                                                 0447
@PB00004 DS    0H                                                  0448
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0449
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAG  -  PROCEDURE  EXTERNALLY  CALLED  NESTED         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0449
*IGGPRAG:                                                          0449
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0449
IGGPRAG  DS    0H                                                  0450
*   GEN(ENTRY IGGPRAG );            /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPRAG
*Z045:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z045RAG:                           /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0451
*    (R5,                                                          0451
*     R6,                                                          0451
*     R7,                                                          0451
*     R8,                                                          0451
*     R9,                                                          0451
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z045     DS    0H                                                  0451
Z045RAG  DS    0H                                                  0452
*   RFY                                                            0452
*    (R2,                                                          0452
*     R3,                                                          0452
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0457
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE GETS CRA RECORDS                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0458
*   CCARAREC=CCACPE1;               /* PT TO RCD AREA FOR GET        */
         L     @10,CCAURAB(,R11)                                   0458
         MVC   CCARAREC(4,R11),CCACPE1(@10)                        0458
*Z046RAOR:                                                         0459
*   CALL IGGPRAOR;                  /* ORIENT TO CRA                 */
Z046RAOR BAL   @14,IGGPRAOR                                        0459
*   IF CCACD1^=RCS THEN             /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0460
         BE    @RF00460                                            0460
*Z047RAX:                                                          0461
*     CALL IGGPRAX;                 /* EXIT                          */
Z047RAX  BAL   @14,IGGPRAX                                         0461
*   CCARARBA=CCASRCIN;              /* CI NO OF RCD                  */
@RF00460 SLR   @10,@10                                             0462
         ICM   @10,7,CCASRCIN(R11)                                 0462
         ST    @10,CCARARBA(,R11)                                  0462
*   XIOOPT=128;                     /* GET OPTIONS                   */
         MVI   XIOOPT(R11),X'80'                                   0463
*Z048XRIO:                                                         0464
*   CALL IGGPXRIO;                  /* GET RCD FROM CRA              */
Z048XRIO BAL   @14,IGGPXRIO                                        0464
*Z049RAX:                                                          0465
*   CALL IGGPRAX;                   /* EXIT                          */
Z049RAX  BAL   @14,IGGPRAX                                         0465
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0466
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAX');           /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAX'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0469
@EF00005 DS    0H                                                  0469
@ER00005 BR    @14                                                 0469
@PB00005 DS    0H                                                  0470
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0471
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAX  -  PROCEDURE  INTERNALLY  CALLED  UNNESTED       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0471
*IGGPRAX:                                                          0471
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0471
IGGPRAX  DS    0H                                                  0472
*Z050:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z050RAX:                           /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0472
*    (R5,                                                          0472
*     R6,                                                          0472
*     R7,                                                          0472
*     R8,                                                          0472
*     R9,                                                          0472
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z050     DS    0H                                                  0472
Z050RAX  DS    0H                                                  0473
*   RFY                                                            0473
*    (R2,                                                          0473
*     R3,                                                          0473
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*                                                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PERFORMS THE CRA I/O ROUTINE EXIT FUNCTIONS.IT   */
*   /* PERFORMS THE FOLLOWING FUNCTIONS. 1. PSEUDO-CLOSES THE CRA (IF*/
*   /* REQUIRED). 2. RETURNS CONTROL TO EITHER THE CALLER OF THE CRA */
*   /* I/O FUNCTION (A CATALOG I/O FUNCTION) OR TO THE CALLERS CALLER*/
*   /* (FUNCTION WHICH CALLED THE CATALOG I/O FUNCTION).             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0474
*   IF CCARAACT=ON THEN             /* IS CRA ACTIVE                 */
         TM    CCARAACT(R11),B'00000100'                           0474
         BNO   @RF00474                                            0474
*     DO;                           /* YES,PSEUDO CLOSE IT           */
*       IF CCARACR=ON THEN          /* IS CKPT OF CCR REQD           */
         TM    CCARACR(R11),B'00010000'                            0476
         BNO   @RF00476                                            0476
*Z051RACC:                                                         0477
*         CALL IGGPRACC;            /* YES,GO WRITE CCR              */
Z051RACC BAL   @14,IGGPRACC                                        0477
*       RFY                                                        0478
*        (R14,                                                     0478
*         R15) RSTD;                                               0478
@RF00476 DS    0H                                                  0479
*       R14=CAXUCB;                 /* PT TO CRA UCB                 */
         L     @10,CCARAACB(,R11)                                  0479
         L     @10,ACBUAPTR(,@10)                                  0479
         L     R14,CAXUCB(,@10)                                    0479
*       GEN REFS(UCBDMCT,R0,R1,R14,R15);                           0480
*                                               /*DECR UCB DM CNT    */
CSLP             L R0,UCBDMCT-K3(R14)           /*DM CNT TO R0       */
                 LR R1,R0                       /*COPY               */
                 LA R15,K1                      /*DECR VALUE TO R15  */
                 SLR R1,R15                     /*DECR DM CNT        */
                 CS R0,R1,UCBDMCT-K3(R14)       /*ST BACK UPD DM CNT */
                 BNZ CSLP                       /*IF NOT STORED,RETRY*/
*       RFY                                                        0481
*        (R14,                                                     0481
*         R15) UNRSTD;                                             0481
*       CAXACT=CAXACT-ONE;          /* DECR CRA USE CNT              */
         L     @10,CCARAACB(,R11)                                  0482
         L     @10,ACBUAPTR(,@10)                                  0482
         SLR   @05,@05                                             0482
         IC    @05,CAXACT(,@10)                                    0482
         BCTR  @05,0                                               0482
         STC   @05,CAXACT(,@10)                                    0482
*       CCARALRD=OFF;               /* CLR CCR READ FLAG             */
*       CCARAACT=OFF;               /* CLR CRA ACTIVE FLAG           */
         NI    CCARALRD(R11),B'11011011'                           0484
*     END;                                                         0485
*   IF CCACD1=RCCAT&                /* CRA NOT OPEN                  */
*       CCAREASN=RSN18&             /* & DOES NOT EXIST              */
*       CTGFUNC=CTGCMS&             /* & CMS REQUEST                 */
*       CTGOPTNS=CTGDELET THEN      /* & DELETE REQUEST YES,CLR ERR
*                                      CDE                           */
*                                                                  0486
@RF00474 CLI   CCACD1(R11),4                                       0486
         BNE   @RF00486                                            0486
         CLI   CCAREASN(R11),18                                    0486
         BNE   @RF00486                                            0486
         L     @10,CCACPL(,R11)                                    0486
         TM    CTGFUNC(@10),B'10000000'                            0486
         BNO   @RF00486                                            0486
         TM    CTGFUNC(@10),B'01100000'                            0486
         BNZ   @RF00486                                            0486
         TM    CTGOPTNS(@10),B'00011000'                           0486
         BNO   @RF00486                                            0486
         TM    CTGOPTNS(@10),B'11100000'                           0486
         BNZ   @RF00486                                            0486
*     /***************************************************************/
*     /*                                                             */
*     /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0487
*     CCAPROB=IGNOREIT;                                            0487
         SLR   @10,@10                                             0487
         ST    @10,CCAPROB(,R11)                                   0487
*   IF(CCACD1^=RCS&                 /* ANY ERROR                     */
*       CCARARTC=OFF)×              /* & ^ RTN TO IMM CALLER         */
*       CCARAICI=ON×                /* INHIBIT CATLG I/O             */
*       CCARABYC=ON THEN            /* BYPASS CATLG I/O              */
@RF00486 CLI   CCACD1(R11),0                                       0488
         BE    @GL00015                                            0488
         TM    CCARARTC(R11),B'00001000'                           0488
         BZ    @RT00488                                            0488
@GL00015 TM    CCARAICI(R11),B'10000010'                           0488
         BZ    @RF00488                                            0488
@RT00488 DS    0H                                                  0489
*     DO;                                                          0489
*       R13=R13-TWELVE;             /* POP PUSH DOWN LIST            */
         SH    R13,@CH00072                                        0490
*       GEN(MVI 12(13),255);        /* MARK NEW END OF PDL           */
         MVI 12(13),255
*       CCARABYC=OFF;               /* CLR LOCAL BYPASS SW           */
         NI    CCARABYC(R11),B'01111111'                           0492
*     END;                                                         0493
*   CCARARTC=OFF;                   /* CLR RTN TO IMM CALR FLAG      */
@RF00488 NI    CCARARTC(R11),B'11110111'                           0494
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0495
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAOR');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAOR'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0498
@EF00006 DS    0H                                                  0498
@ER00006 BR    @14                                                 0498
@PB00006 DS    0H                                                  0499
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0500
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAOR  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0500
*IGGPRAOR:                                                         0500
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0500
IGGPRAOR DS    0H                                                  0501
*Z053:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z053RAOR:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0501
*    (R5,                                                          0501
*     R6,                                                          0501
*     R7,                                                          0501
*     R8,                                                          0501
*     R9,                                                          0501
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z053     DS    0H                                                  0501
Z053RAOR DS    0H                                                  0502
*   RFY                                                            0502
*    (R2,                                                          0502
*     R3,                                                          0502
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0504
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE: 1. PROVIDES AN RPL FOR CRA I/O USAGE (IF        */
*   /* REQUIRED). 2. OPENS (OR LOCATES IF ALREADY OPEN) THE ACB FOR  */
*   /* THE REQUESTED CRA.                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0505
*   IF CCAPRANX=ON&                 /* PRIME CRA GONE &              */
*       RCDID^=TYPV&                /* NOT VOL ENT RCD &             */
*       RCDID^=TYPW THEN            /* NOT VOL ENT EXTN RCD          */
         TM    CCAPRANX(R11),B'00000100'                           0505
         BNO   @RF00505                                            0505
         L     @10,CCARAREC(,R11)                                  0505
         CLI   RCDID(@10),C'V'                                     0505
         BE    @RF00505                                            0505
         CLI   RCDID(@10),C'W'                                     0505
         BE    @RF00505                                            0505
*     DO;                           /* YES,SET CRA NON-EXIST RC      */
*       DO;                                                        0507
*         CCAMODID='BO';            /* SET MODULE ID                 */
         MVC   CCAMODID(2,R11),@CC03928                            0508
*         CCAREASN=RSN18;           /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'12'                                 0509
*         CCARETRN=RCCAT;           /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'04'                                 0510
*       END;                                                       0511
*       CALL EXIT;                  /* GET OUT                       */
         BAL   @14,EXIT                                            0512
*     END;                                                         0513
*   IF CCARARPL=N THEN              /* IS AN RPL NEEDED              */
@RF00505 ICM   @10,15,CCARARPL(R11)                                0514
         BNZ   @RF00514                                            0514
*     DO;                           /* YES                           */
*       RFY                                                        0516
*         IFGACB BASED(CCAACB);                                    0516
*       CCARARPL=ADDR(RPLPOOL(CAXRPLCT+ONE));/* GET 1ST CRA RPL FROM
*                                      POOL                          */
         LA    @10,80                                              0517
         L     @05,CCAACB(,R11)                                    0517
         L     @05,ACBUAPTR(,@05)                                  0517
         LR    @15,@10                                             0517
         MH    @15,CAXRPLCT(,@05)                                  0517
         L     @05,CAXRPL(,@05)                                    0517
         LA    @05,RPLPOOL(@15,@05)                                0517
         ST    @05,CCARARPL(,R11)                                  0517
*       IF CCARAEOV=ON THEN         /* CRA EOV                       */
         TM    CCARAEOV(R11),B'01000000'                           0518
         BNO   @RF00518                                            0518
*         CCARARPL=CCARARPL+LENGTH(XTNDRPL);/* YES,USE 2ND RPL       */
         ALR   @05,@10                                             0519
         ST    @05,CCARARPL(,R11)                                  0519
*       RPLECB=POSTCDE;             /* REINIT ECB                    */
@RF00518 L     @10,CCARARPL(,R11)                                  0520
         MVC   RPLECB(4,@10),POSTCDE                               0520
*       RPLACTIV=N;                 /* INSURE INACTIVE STATE         */
         MVI   RPLACTIV(@10),X'00'                                 0521
*       RFY                                                        0522
*         IFGACB BASED(CCARAACB);                                  0522
*     END;                                                         0523
*   IF CCARAEOV=ON THEN             /* CRA END OF VOL                */
@RF00514 TM    CCARAEOV(R11),B'01000000'                           0524
         BNO   @RF00524                                            0524
*     CALL EXIT;                    /* YES,GET OUT                   */
         BAL   @14,EXIT                                            0525
*   IF CCARAACB=N×                  /* PREVIOUSLY USED CRA           */
*       RCDCRAVL^=CAXVOLID THEN     /* FOR THIS VOLUME               */
@RF00524 L     @10,CCARAACB(,R11)                                  0526
         LTR   @10,@10                                             0526
         BZ    @RT00526                                            0526
         L     @05,CCARAREC(,R11)                                  0526
         L     @10,ACBUAPTR(,@10)                                  0526
         CLC   RCDCRAVL(6,@05),CAXVOLID(@10)                       0526
         BE    @RF00526                                            0526
@RT00526 DS    0H                                                  0527
*     DO;                           /* NO,MUST ORIENT TO CRA ACB     */
*       CCARAACB=N;                 /* CLR CRA ACB PTR               */
         SLR   @10,@10                                             0528
         ST    @10,CCARAACB(,R11)                                  0528
*       R1=CCAACB->ACBUAPTR->CAXCRACB;/* GET 1ST CRA ACB PTR         */
         L     @05,CCAACB(,R11)                                    0529
         L     @05,ACBUAPTR(,@05)                                  0529
         L     R1,CAXCRACB(,@05)                                   0529
*       IF R1^=N THEN               /* DOES CRA CAXWA CHAIN EXIST    */
         CR    R1,@10                                              0530
         BE    @RF00530                                            0530
*         DO;                       /* YES                           */
*           R1=R1->ACBUAPTR;        /* PT TO 1ST CRA CAXWA           */
         L     R1,ACBUAPTR(,R1)                                    0532
*           DO WHILE(CCARAACB=N&R1^=N);/* SEARCH CRA CAXWA CHAIN     */
         B     @DE00533                                            0533
@DL00533 DS    0H                                                  0534
*             RFY                                                  0534
*               IGGCAXWA BASED(R1);                                0534
*             IF RCDCRAVL=CAXVOLID THEN/* DO RCD - CRA VOLSERS MATCH */
         L     @10,CCARAREC(,R11)                                  0535
         CLC   RCDCRAVL(6,@10),CAXVOLID(R1)                        0535
         BNE   @RF00535                                            0535
*               CCARAACB=CAXCRACB;  /* YES,CRA ACB HAS BEEN FND      */
         MVC   CCARAACB(4,R11),CAXCRACB(R1)                        0536
*             ELSE                  /* CRA ACB NOT YET FOUND         */
*               R1=CAXCHN;          /* PT TO NXT CRA CAXWA           */
         B     @RC00535                                            0537
@RF00535 L     R1,CAXCHN(,R1)                                      0537
*             RFY                                                  0538
*               IGGCAXWA BASED(ACBUAPTR);                          0538
@RC00535 DS    0H                                                  0539
*           END;                                                   0539
@DE00533 SLR   @10,@10                                             0539
         C     @10,CCARAACB(,R11)                                  0539
         BNE   @DC00533                                            0539
         CR    R1,@10                                              0539
         BNE   @DL00533                                            0539
@DC00533 DS    0H                                                  0540
*         END;                                                     0540
*     END;                                                         0541
@RF00530 DS    0H                                                  0542
*   IF CCARAACB=N×                  /* REQUESTED CRA ^ OPEN          */
*       RCDCRAVL^=UCBVOLI×          /* CRA VOLUME DISMOUNTED         */
*       CAXACT^=N THEN              /* INVALID USE COUNT             */
@RF00526 L     @10,CCARAACB(,R11)                                  0542
         LTR   @10,@10                                             0542
         BZ    @RT00542                                            0542
         L     @05,CCARAREC(,R11)                                  0542
         L     @10,ACBUAPTR(,@10)                                  0542
         L     @15,CAXUCB(,@10)                                    0542
         CLC   RCDCRAVL(6,@05),UCBVOLI(@15)                        0542
         BNE   @RT00542                                            0542
         CLI   CAXACT(@10),0                                       0542
         BE    @RF00542                                            0542
@RT00542 DS    0H                                                  0543
*     DO;                                                          0543
*                                                                  0543
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAD                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0544
*Z055RAOP:                                                         0544
*       CALL IGGPRAOP;              /* OPEN,OR REOPEN CRA            */
Z055RAOP L     @15,@CV03788                                        0544
         BALR  @14,@15                                             0544
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0545
         BE    @RF00545                                            0545
*         CALL EXIT;                /* GET OUT                       */
         BAL   @14,EXIT                                            0546
*     END;                                                         0547
*   ELSE                            /* CRA IS ALREADY OPEN & USABL   */
*     DO;                                                          0548
         B     @RC00542                                            0548
@RF00542 DS    0H                                                  0549
*       RFY                                                        0549
*        (R14,                                                     0549
*         R15) RSTD;                                               0549
*       R14=CAXUCB;                 /* PT TO CRA UCB                 */
         L     @10,CCARAACB(,R11)                                  0550
         L     @10,ACBUAPTR(,@10)                                  0550
         L     R14,CAXUCB(,@10)                                    0550
*       GEN REFS(UCBDMCT,R0,R1,R14,R15);                           0551
*                                               /*INCR UCB DM CNT    */
CSLP2            L R0,UCBDMCT-K3(R14)           /*DM CNT TO R0       */
                 LR R1,R0                       /*COPY               */
                 LA R15,K1                      /*INCR VAL TO R15    */
                 ALR R1,R15                     /*INCR DM CNT        */
                 CS R0,R1,UCBDMCT-K3(R14)       /*ST UPD CNT         */
                 BNZ CSLP2                      /*IF NOT ST,RETRY    */
*       RFY                                                        0552
*        (R14,                                                     0552
*         R15) UNRSTD;                                             0552
*       CAXACT=CAXACT+ONE;          /* INCR CRA USE CNT              */
         L     @10,CCARAACB(,R11)                                  0553
         L     @10,ACBUAPTR(,@10)                                  0553
         LA    @05,1                                               0553
         SLR   @15,@15                                             0553
         IC    @15,CAXACT(,@10)                                    0553
         ALR   @05,@15                                             0553
         STC   @05,CAXACT(,@10)                                    0553
*     END;                                                         0554
*   CCARAACT=ON;                    /* IND THAT CRA IS ACTIVE        */
@RC00542 OI    CCARAACT(R11),B'00000100'                           0555
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0556
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAPC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAPC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0559
@EF00007 DS    0H                                                  0559
@ER00007 BR    @14                                                 0559
@PB00007 DS    0H                                                  0560
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0561
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAPC  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0561
*IGGPRAPC:                                                         0561
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0561
IGGPRAPC DS    0H                                                  0562
*Z056:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z056RAPC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0562
*    (R5,                                                          0562
*     R6,                                                          0562
*     R7,                                                          0562
*     R8,                                                          0562
*     R9,                                                          0562
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z056     DS    0H                                                  0562
Z056RAPC DS    0H                                                  0563
*   RFY                                                            0563
*    (R2,                                                          0563
*     R3,                                                          0563
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0565
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE ADDS RECORDS TO CRA BUFFER CHAINS.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0566
*   CCAMNLEN=LENGTH(RABUFFER);      /* ST SIZE FOR GETMAIN           */
         MVC   CCAMNLEN(3,R11),@CF01050+1                          0566
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0567
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0568
         MVI   CCAMNSPL(R11),X'FC'                                 0568
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0569
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0571
         LTR   R1,R1                                               0571
         BZ    @RF00571                                            0571
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='BO', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0572
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0572
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF04047                             0572
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0573
         B     @RC00571                                            0573
@RF00571 DS    0H                                                  0574
*       DO;                                                        0574
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0575
         TM    MNATFULL(R11),B'10000000'                           0575
         BNO   @RF00575                                            0575
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0576
*Z060ARFS:                                                         0576
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z060ARFS L     @15,@CV03820                                        0576
         BALR  @14,@15                                             0576
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0577
*                                      PUSH AND TRACK                */
@RF00575 DS    0H                                                  0577
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0578
*     END;                          /* GETMAIN A BUFFER              */
*   IF CCACD1^=RCS THEN             /* IF UNSUCCESSFUL               */
@RC00571 CLI   CCACD1(R11),0                                       0580
         BE    @RF00580                                            0580
*     CALL EXIT;                    /* GET OUT                       */
         BAL   @14,EXIT                                            0581
*   RFY                                                            0582
*     RABUFFER BASED(CCAMNADR);                                    0582
@RF00580 DS    0H                                                  0583
*   CCAMNADR->ARASGA=CCARAREC->ARASGA;/* MV RCD TO BUFFER            */
         L     @10,CCAMNADR(,R11)                                  0583
         L     @05,CCARAREC(,R11)                                  0583
         MVC   ARASGA(255,@10),ARASGA(@05)                         0583
*   CCAMNADR->ARASGB=CCARAREC->ARASGB;/* MV RCD TO BUFFER            */
         MVC   ARASGB(250,@10),ARASGB(@05)                         0584
*   RABUFCHN=N;                     /* CLR CHAIN PTR IN THIS BUFF    */
         SLR   @15,@15                                             0585
         ST    @15,RABUFCHN(,@10)                                  0585
*   IF RCDID=TYPV×                  /* IF VOL ENT RCD                */
*       RCDID=TYPW THEN             /* OR VOL ENT EXTN RCD           */
         CLI   RCDID(@05),C'V'                                     0586
         BE    @RT00586                                            0586
         CLI   RCDID(@05),C'W'                                     0586
         BNE   @RF00586                                            0586
@RT00586 DS    0H                                                  0587
*     R1=ADDR(CCARAVCA);            /* ORIENT TO VOL ENT BUFF CHN    */
         LA    R1,CCARAVCA(,R11)                                   0587
*   ELSE                            /* NOT V OR W RCD                */
*     DO;                                                          0588
         B     @RC00586                                            0588
@RF00586 DS    0H                                                  0589
*       R1=ADDR(CCARANCA);          /* ORIENT TO NORMAL BUFF CHN     */
         LA    R1,CCARANCA(,R11)                                   0589
*       IF RCDID=TYPC THEN          /* CLUSTER RCD                   */
         L     @10,CCARAREC(,R11)                                  0590
         CLI   RCDID(@10),C'C'                                     0590
         BNE   @RF00590                                            0590
*         RABUFPPN=TWO;             /* YES,ST PROCESS PASS CNT       */
         L     @10,CCAMNADR(,R11)                                  0591
         MVI   RABUFPPN(@10),X'02'                                 0591
*       ELSE                        /* NOT CLUSTER RCD               */
*         IF RCDID=TYPD THEN        /* DATA OBJECT RCD               */
         B     @RC00590                                            0592
@RF00590 L     @10,CCARAREC(,R11)                                  0592
         CLI   RCDID(@10),C'D'                                     0592
         BNE   @RF00592                                            0592
*           RABUFPPN=ONE;           /* YES,ST PROCESS PASS CNT       */
         L     @10,CCAMNADR(,R11)                                  0593
         MVI   RABUFPPN(@10),X'01'                                 0593
*         ELSE                      /* NOT CLUSTER OR DATA RCD       */
*           RABUFPPN=N;             /* ST PROCESS PASS CNT OF 0      */
         B     @RC00592                                            0594
@RF00592 L     @10,CCAMNADR(,R11)                                  0594
         MVI   RABUFPPN(@10),X'00'                                 0594
*     END;                                                         0595
@RC00592 DS    0H                                                  0595
@RC00590 DS    0H                                                  0596
*   RFY                                                            0596
*     RBCANC BASED(R1);                                            0596
@RC00586 DS    0H                                                  0597
*   IF RBCBEG=N THEN                /* DOES BUFF CHAIN EXIST         */
         ICM   @10,15,RBCBEG(R1)                                   0597
         BNZ   @RF00597                                            0597
*     DO;                           /* NO,START ONE                  */
*       RBCBEG=CCAMNADR;            /* PT CHAIN START PTR AT BUFF    */
         L     @10,CCAMNADR(,R11)                                  0599
         ST    @10,RBCBEG(,R1)                                     0599
*       RBCEND=CCAMNADR;            /* PT CHAIN END PTR AT BUFF      */
         ST    @10,RBCEND(,R1)                                     0600
*     END;                                                         0601
*   ELSE                            /* BUFF CHAIN ALREADY EXISTS     */
*     IF CCAVBUFI=ON&               /* FORCED BUFFRING               */
*         RCDID=TYPV THEN           /* AND VOL ENT RCD               */
         B     @RC00597                                            0602
@RF00597 TM    CCAVBUFI(R11),B'01000000'                           0602
         BNO   @RF00602                                            0602
         L     @10,CCARAREC(,R11)                                  0602
         CLI   RCDID(@10),C'V'                                     0602
         BNE   @RF00602                                            0602
*       DO;                         /* YES,PLACE BUF AT HEAD OF CH   */
*         RABUFCHN=RBCBEG;          /* PT THIS BUF TO NXT BUF        */
         L     @10,CCAMNADR(,R11)                                  0604
         MVC   RABUFCHN(4,@10),RBCBEG(R1)                          0604
*         RBCBEG=CCAMNADR;          /* PT CHN STRT PTR AT THIS BUF   */
         ST    @10,RBCBEG(,R1)                                     0605
*       END;                                                       0606
*     ELSE                          /* PLACE BUFF AT END OF CHAIN    */
*       DO;                                                        0607
         B     @RC00602                                            0607
@RF00602 DS    0H                                                  0608
*         RBCEND->RABUFCHN=CCAMNADR;/* PT LAST BUF TO THIS BUF       */
         L     @10,RBCEND(,R1)                                     0608
         L     @05,CCAMNADR(,R11)                                  0608
         ST    @05,RABUFCHN(,@10)                                  0608
*         RBCEND=CCAMNADR;          /* PT CHN END PTR AT THIS BUFF   */
         ST    @05,RBCEND(,R1)                                     0609
*       END;                                                       0610
*   RFY                                                            0611
*     RBCANC BASED(ADDR(CCARANCA));                                0611
@RC00602 DS    0H                                                  0611
@RC00597 DS    0H                                                  0612
*   RFY                                                            0612
*     RABUFFER BASED(CCARAREC);                                    0612
*   CCARABYC=ON;                    /* PREVENT CATLG WRITE OF RCD    */
         OI    CCARABYC(R11),B'10000000'                           0613
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0614
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRARA');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRARA'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0617
@EF00008 DS    0H                                                  0617
@ER00008 BR    @14                                                 0617
@PB00008 DS    0H                                                  0618
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0619
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRARA  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0619
*IGGPRARA:                                                         0619
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0619
IGGPRARA DS    0H                                                  0620
*Z061:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z061RARA:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0620
*    (R5,                                                          0620
*     R6,                                                          0620
*     R7,                                                          0620
*     R8,                                                          0620
*     R9,                                                          0620
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z061     DS    0H                                                  0620
Z061RARA DS    0H                                                  0621
*   RFY                                                            0621
*    (R2,                                                          0621
*     R3,                                                          0621
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0623
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE ASSIGNS CRA CIS AND ADDS NEW RECORDS TO CRAS.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   IF CCARAFEV=ON THEN             /* FORCE EXTEND OF CRA           */
         TM    CCARAFEV(R11),B'00010000'                           0624
         BO    @RT00624                                            0624
*     GOTO FEOV;                    /* YES,BYPASS NON-FEOV CODE      */
*   RCDRACTS=CAXRACTS;              /* ST CRA CREATION TMESTMP       */
         L     @10,CCARAREC(,R11)                                  0626
         L     @05,CCARAACB(,R11)                                  0626
         L     @05,ACBUAPTR(,@05)                                  0626
         MVC   RCDRACTS(4,@10),CAXRACTS(@05)                       0626
*   RCDRELID=CURELID;               /* CURRENT RELEASE ID TO RCD     */
         MVI   RCDRELID(@10),X'01'                                 0627
*   IF CCARALRD=OFF THEN            /* IS CRA CCR READ REQD          */
         TM    CCARALRD(R11),B'00100000'                           0628
         BNZ   @RF00628                                            0628
*     DO;                           /* YES                           */
*Z062RARC:                                                         0630
*       CALL IGGPRARC;              /* READ CRA CCR INTO CORE        */
Z062RARC BAL   @14,IGGPRARC                                        0630
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0631
         BE    @RF00631                                            0631
*         CALL EXIT;                /* GET OUT                       */
         BAL   @14,EXIT                                            0632
*     END;                                                         0633
@RF00631 DS    0H                                                  0634
*   IF CAXCDCI=N THEN               /* ANY CIS ON FREE CHAIN         */
@RF00628 L     @10,CCARAACB(,R11)                                  0634
         L     @10,ACBUAPTR(,@10)                                  0634
         ICM   @05,7,CAXCDCI(@10)                                  0634
         BNZ   @RF00634                                            0634
*     DO;                           /* NO,MUST ASSIGN A NEW CI       */
*       IF CAXHACI<CAXNFCI+MRECIS THEN/* IS END OF EXTENT PEND       */
         LA    @05,2                                               0636
         SLR   @15,@15                                             0636
         ICM   @15,7,CAXNFCI(@10)                                  0636
         ALR   @05,@15                                             0636
         SLR   @15,@15                                             0636
         ICM   @15,7,CAXHACI(@10)                                  0636
         CR    @05,@15                                             0636
         BNH   @RF00636                                            0636
*         DO;                       /* YES ,ADD REMAIN CIS TO FC     */
*FEOV:                                                             0638
*           ARASGA=ARASGA&&ARASGA;  /* CLR ARA                       */
FEOV     L     @10,CCAR0REC(,R11)                                  0638
         XC    ARASGA(255,@10),ARASGA(@10)                         0638
*           ARASGB=ARASGB&&ARASGB;  /* CLR REST OF ARA               */
         XC    ARASGB(250,@10),ARASGB(@10)                         0639
*           ARAID=TYPF;             /* IND FREE RCD TYPE             */
         MVI   ARAID(@10),C'F'                                     0640
*           DO WHILE(CAXNFCI^>CAXHACI);/* ADD CIS TO FREE CHAIN      */
         B     @DE00641                                            0641
@DL00641 DS    0H                                                  0642
*             CCAR0REC->RCDCRACI=CAXNFCI;/* ST CRA CI NO             */
         L     @10,CCAR0REC(,R11)                                  0642
         L     @05,CCARAACB(,R11)                                  0642
         L     @05,ACBUAPTR(,@05)                                  0642
         SLR   @15,@15                                             0642
         ICM   @15,7,CAXNFCI(@05)                                  0642
         STCM  @15,7,RCDCRACI(@10)                                 0642
*             ARAFCHN=CAXFDCI;      /* PTR TO NXT FREE RCD           */
         MVC   ARAFCHN(3,@10),CAXFDCI(@05)                         0643
*             CCARARBA=CAXNFCI;     /* CRA CI NO OF F RCD            */
         ST    @15,CCARARBA(,R11)                                  0644
*             XIOOPT=40;            /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'28'                                   0645
*Z063XRIO:                                                         0646
*             CALL IGGPXRIO;        /* PREFORMAT FREE RCD            */
Z063XRIO BAL   @14,IGGPXRIO                                        0646
*             IF CCACD1^=RCS THEN   /* ANY ERROR                     */
         CLI   CCACD1(R11),0                                       0647
         BE    @RF00647                                            0647
*               DO;                 /* YES                           */
*                 IF RPLRTNCD='08'X&/* IS IT LOGICAL ERROR           */
*                     RPLERRCD=RPLDUP THEN/* AND DUP RCD ERROR       */
         L     @10,CCARARPL(,R11)                                  0649
         CLI   RPLRTNCD(@10),8                                     0649
         BNE   @RF00649                                            0649
         CLI   RPLERRCD(@10),8                                     0649
         BNE   @RF00649                                            0649
*                   DO;             /* YES,DO UPDATE PUT             */
*                     CCARARBA=CAXNFCI;/* CI NO OF RCD               */
*                                                                  0651
         L     @10,CCARAACB(,R11)                                  0651
         L     @10,ACBUAPTR(,@10)                                  0651
         SLR   @05,@05                                             0651
         ICM   @05,7,CAXNFCI(@10)                                  0651
         ST    @05,CCARARBA(,R11)                                  0651
*                     /***********************************************/
*                     /*                                             */
*                     /* CLEAR CCAMODID, CCAREASN, AND CCARETRN      */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0652
*                     CCAPROB=IGNOREIT;/* CLR ERR CODES              */
         SLR   @10,@10                                             0652
         ST    @10,CCAPROB(,R11)                                   0652
*                     XIOOPT=32;    /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'20'                                   0653
*Z065XRIO:                                                         0654
*                     CALL IGGPXRIO;/* WRITE RCD                     */
Z065XRIO BAL   @14,IGGPXRIO                                        0654
*                   END;                                           0655
*                 IF CCACD1^=RCS THEN/* ANY ERROR                    */
@RF00649 CLI   CCACD1(R11),0                                       0656
         BE    @RF00656                                            0656
*                   DO;             /* YES                           */
*                     CCARALRD=OFF; /* CLR CCR READ FLAG             */
*                     CCARACR=OFF;  /* CLR CCR CKPT FLAG             */
         NI    CCARALRD(R11),B'11001111'                           0659
*                     CALL EXIT;    /* GET OUT                       */
         BAL   @14,EXIT                                            0660
*                   END;                                           0661
*               END;                                               0662
@RF00656 DS    0H                                                  0663
*             CAXFDCI=CCAR0REC->RCDCRACI;/* ST NEW F CHN BEGIN       */
@RF00647 L     @10,CCARAACB(,R11)                                  0663
         L     @10,ACBUAPTR(,@10)                                  0663
         L     @05,CCAR0REC(,R11)                                  0663
         MVC   CAXFDCI(3,@10),RCDCRACI(@05)                        0663
*             CAXCDCI=CAXCDCI+ONE;  /* INCR DELETED CI CNT           */
         LA    @05,1                                               0664
         SLR   @15,@15                                             0664
         ICM   @15,7,CAXCDCI(@10)                                  0664
         ALR   @15,@05                                             0664
         STCM  @15,7,CAXCDCI(@10)                                  0664
*             CAXNFCI=CAXNFCI+ONE;  /* INC NXT TO BE ASGN CI         */
         SLR   @15,@15                                             0665
         ICM   @15,7,CAXNFCI(@10)                                  0665
         ALR   @05,@15                                             0665
         STCM  @05,7,CAXNFCI(@10)                                  0665
*           END;                                                   0666
@DE00641 L     @10,CCARAACB(,R11)                                  0666
         L     @10,ACBUAPTR(,@10)                                  0666
         CLC   CAXNFCI(3,@10),CAXHACI(@10)                         0666
         BNH   @DL00641                                            0666
*           ARAFCHN=N;              /* CLR RCD FREE CHAIN PTR        */
         SLR   @05,@05                                             0667
         L     @15,CCAR0REC(,R11)                                  0667
         STCM  @05,7,ARAFCHN(@15)                                  0667
*           CAXHACI=N;              /* CLR HIGH ALLOCATED CI NO      */
         STCM  @05,7,CAXHACI(@10)                                  0668
*         END;                                                     0669
*       RCDCRACI=CAXNFCI;           /* CRA CI NO TO INPUT RCD        */
@RF00636 L     @10,CCARAREC(,R11)                                  0670
         L     @05,CCARAACB(,R11)                                  0670
         L     @05,ACBUAPTR(,@05)                                  0670
         SLR   @15,@15                                             0670
         ICM   @15,7,CAXNFCI(@05)                                  0670
         STCM  @15,7,RCDCRACI(@10)                                 0670
*       CCARARBA=CAXNFCI;           /* CRA CI NO FOR XRIO ROUT       */
         ST    @15,CCARARBA(,R11)                                  0671
*       XIOOPT=8;                   /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'08'                                   0672
*Z066XRIO:                                                         0673
*       CALL IGGPXRIO;              /* WRITE RCD INTO CRA            */
Z066XRIO BAL   @14,IGGPXRIO                                        0673
*       IF RPLRTNCD='08'X&          /* LOGICAL ERROR                 */
*           RPLERRCD=RPLDUP THEN    /* AND DUP RCD ERROR             */
         L     @10,CCARARPL(,R11)                                  0674
         CLI   RPLRTNCD(@10),8                                     0674
         BNE   @RF00674                                            0674
         CLI   RPLERRCD(@10),8                                     0674
         BNE   @RF00674                                            0674
*         DO;                       /* YES,TRY AN UPD WRITE          */
*           CCARARBA=CAXNFCI;       /* RESTORE RCD CI NO             */
*                                                                  0676
         L     @10,CCARAACB(,R11)                                  0676
         L     @10,ACBUAPTR(,@10)                                  0676
         SLR   @05,@05                                             0676
         ICM   @05,7,CAXNFCI(@10)                                  0676
         ST    @05,CCARARBA(,R11)                                  0676
*           /*********************************************************/
*           /*                                                       */
*           /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0677
*           CCAPROB=IGNOREIT;       /* CLR ERROR CODES               */
         SLR   @10,@10                                             0677
         ST    @10,CCAPROB(,R11)                                   0677
*           XIOOPT=0;               /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'00'                                   0678
*Z068XRIO:                                                         0679
*           CALL IGGPXRIO;          /* ATTEMPT UPD PUT OF RCD        */
Z068XRIO BAL   @14,IGGPXRIO                                        0679
*         END;                                                     0680
*       IF CCACD1^=RCS THEN         /* ANY I/O ERROR                 */
@RF00674 CLI   CCACD1(R11),0                                       0681
         BE    @RF00681                                            0681
*         DO;                       /* YES                           */
*           RCDCRACI=N;             /* CLR CRA CI NO FLD IN RCD      */
         L     @10,CCARAREC(,R11)                                  0683
         SLR   @05,@05                                             0683
         STCM  @05,7,RCDCRACI(@10)                                 0683
*           CCARALRD=OFF;           /* CLR CCR READ FLAG             */
*           CCARACR=OFF;            /* CLR CCR CKPT REQD FLAG        */
         NI    CCARALRD(R11),B'11001111'                           0685
*           CALL EXIT;              /* GET OUT                       */
         BAL   @14,EXIT                                            0686
*         END;                                                     0687
*       CAXNFCI=CAXNFCI+ONE;        /* INCR NXT TO BE ASGN CI NO     */
@RF00681 L     @10,CCARAACB(,R11)                                  0688
         L     @05,ACBUAPTR(,@10)                                  0688
         LA    @15,1                                               0688
         SLR   @14,@14                                             0688
         ICM   @14,7,CAXNFCI(@05)                                  0688
         ALR   @15,@14                                             0688
         STCM  @15,7,CAXNFCI(@05)                                  0688
*       IF CAXHACI=N THEN           /* IS NEW HI ALLOC CI NO NEEDD   */
         ICM   @15,7,CAXHACI(@05)                                  0689
         BNZ   @RF00689                                            0689
*         DO;                       /* YES                           */
*           CAXHACI=AMBLDTA->AMBDSB->AMDPARDB->ARDERBA/CILEN-ONE;/*
*                                      COMPUTE NEW HI ALLOC CI NO    */
         L     @10,ACBAMBL(,@10)                                   0691
         L     @10,AMBLDTA(,@10)                                   0691
         L     @10,AMBDSB(,@10)                                    0691
         L     @10,AMDPARDB(,@10)                                  0691
         L     @10,ARDERBA(,@10)                                   0691
         SRL   @10,9                                               0691
         BCTR  @10,0                                               0691
         STCM  @10,7,CAXHACI(@05)                                  0691
*           IF CCARAFEV=ON THEN     /* FORCE EXTEND OF CRA           */
         TM    CCARAFEV(R11),B'00010000'                           0692
         BNO   @RF00692                                            0692
*             DO;                   /* YES                           */
*               ARAFCHN=CAXFDCI;    /* CHAIN THIS RCD TO NXT         */
         L     @10,CCAR0REC(,R11)                                  0694
         MVC   ARAFCHN(3,@10),CAXFDCI(@05)                         0694
*               CCARARBA=RCDCRACI;  /* ST THIS RCD CI NO             */
         L     @10,CCARAREC(,R11)                                  0695
         SLR   @05,@05                                             0695
         ICM   @05,7,RCDCRACI(@10)                                 0695
         ST    @05,CCARARBA(,R11)                                  0695
*               XIOOPT=0;           /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'00'                                   0696
*Z069XRIO:                                                         0697
*               CALL IGGPXRIO;      /* PUT CHAINED FREE RCD          */
Z069XRIO BAL   @14,IGGPXRIO                                        0697
*               IF CCACD1^=RCS THEN /* IF ERROR                      */
         CLI   CCACD1(R11),0                                       0698
         BE    @RF00698                                            0698
*                 CALL EXIT;        /* GET OUT                       */
         BAL   @14,EXIT                                            0699
*               CAXFDCI=RCDCRACI;   /* ST PTR TO STRT OF FREE CHN    */
@RF00698 L     @10,CCARAACB(,R11)                                  0700
         L     @10,ACBUAPTR(,@10)                                  0700
         L     @05,CCARAREC(,R11)                                  0700
         MVC   CAXFDCI(3,@10),RCDCRACI(@05)                        0700
*               CAXCDCI=CAXCDCI+ONE;/* UP COUNT OF DEL RCDS          */
         LA    @05,1                                               0701
         SLR   @15,@15                                             0701
         ICM   @15,7,CAXCDCI(@10)                                  0701
         ALR   @05,@15                                             0701
         STCM  @05,7,CAXCDCI(@10)                                  0701
*             END;                                                 0702
*         END;                                                     0703
@RF00692 DS    0H                                                  0704
*Z070RACC:                                                         0704
*       CALL IGGPRACC;              /* CKPT THE CCR                  */
@RF00689 DS    0H                                                  0704
Z070RACC BAL   @14,IGGPRACC                                        0704
*     END;                                                         0705
*   ELSE                            /* FREE CIS DO EXIST             */
*     DO;                                                          0706
         B     @RC00634                                            0706
@RF00634 DS    0H                                                  0707
*       CCARARBA=CAXFDCI;           /* CI NO OF 1ST FREE CI          */
         L     @10,CCARAACB(,R11)                                  0707
         L     @10,ACBUAPTR(,@10)                                  0707
         SLR   @05,@05                                             0707
         ICM   @05,7,CAXFDCI(@10)                                  0707
         ST    @05,CCARARBA(,R11)                                  0707
*       XIOOPT=160;                 /* GET OPTIONS                   */
         MVI   XIOOPT(R11),X'A0'                                   0708
*Z071XRIO:                                                         0709
*       CALL IGGPXRIO;              /* GET FREE RCD                  */
Z071XRIO BAL   @14,IGGPXRIO                                        0709
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
         CLI   CCACD1(R11),0                                       0710
         BE    @RF00710                                            0710
*         CALL EXIT;                /* GET OUT                       */
         BAL   @14,EXIT                                            0711
*       RCDCRACI=CAXFDCI;           /* ASSIGN CI NO TO RCD           */
@RF00710 L     @10,CCARAREC(,R11)                                  0712
         L     @05,CCARAACB(,R11)                                  0712
         L     @05,ACBUAPTR(,@05)                                  0712
         MVC   RCDCRACI(3,@10),CAXFDCI(@05)                        0712
*       CAXFDCI=ARAFCHN;            /* REMOVE FREE RCD FROM CHAIN    */
         L     @10,CCAR0REC(,R11)                                  0713
         MVC   CAXFDCI(3,@05),ARAFCHN(@10)                         0713
*       CAXCDCI=CAXCDCI-ONE;        /* DECR FREE RCD COUNT           */
         SLR   @10,@10                                             0714
         ICM   @10,7,CAXCDCI(@05)                                  0714
         BCTR  @10,0                                               0714
         STCM  @10,7,CAXCDCI(@05)                                  0714
*       IF CCARAEOV=OFF THEN        /* EXTENDING CRA                 */
         TM    CCARAEOV(R11),B'01000000'                           0715
         BNZ   @RF00715                                            0715
*Z072RACC:                                                         0716
*         CALL IGGPRACC;            /* NO,CKPT THE CRA CCR           */
Z072RACC BAL   @14,IGGPRACC                                        0716
*       IF CCACD1^=RCS THEN         /* IF UNSUCCESSFUL               */
@RF00715 CLI   CCACD1(R11),0                                       0717
         BE    @RF00717                                            0717
*         CALL EXIT;                /* GET OUT                       */
         BAL   @14,EXIT                                            0718
*       CCARARBA=RCDCRACI;          /* ST CRA CI NO FOR XRIO ROUT    */
@RF00717 L     @10,CCARAREC(,R11)                                  0719
         SLR   @05,@05                                             0719
         ICM   @05,7,RCDCRACI(@10)                                 0719
         ST    @05,CCARARBA(,R11)                                  0719
*       XIOOPT=0;                   /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'00'                                   0720
*Z073XRIO:                                                         0721
*       CALL IGGPXRIO;              /* ADD RCD TO CRA                */
Z073XRIO BAL   @14,IGGPXRIO                                        0721
*     END;                                                         0722
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00634 BAL   @14,EXIT                                            0723
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRARC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRARC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0726
@EF00009 DS    0H                                                  0726
@ER00009 BR    @14                                                 0726
@PB00009 DS    0H                                                  0727
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0728
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRARC  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0728
*IGGPRARC:                                                         0728
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0728
IGGPRARC DS    0H                                                  0729
*   GEN(ENTRY IGGPRARC );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPRARC
*Z074:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z074RARC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0730
*    (R5,                                                          0730
*     R6,                                                          0730
*     R7,                                                          0730
*     R8,                                                          0730
*     R9,                                                          0730
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z074     DS    0H                                                  0730
Z074RARC DS    0H                                                  0731
*   RFY                                                            0731
*    (R2,                                                          0731
*     R3,                                                          0731
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0736
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE READS THE CRA CCR AND DISTRIBUTES ITS DATA TO    */
*   /* VARIOUS CONTROL BLOCK FIELDS.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0737
*   DO ONCE=ONCE WHILE(CCARAEOV=OFF);/* NOT EXTENDING CRA            */
         TM    CCARAEOV(R11),B'01000000'                           0737
         BNZ   @DC00737                                            0737
*     CCARARBA=CATCRID;             /* CI NO OF CCR                  */
         MVC   CCARARBA(4,R11),@CF00414                            0738
*     XIOOPT=160;                   /* GET OPTIONS                   */
         MVI   XIOOPT(R11),X'A0'                                   0739
*Z075XRIO:                                                         0740
*     CALL IGGPXRIO;                /* GET THE CRA CCR RCD           */
Z075XRIO BAL   @14,IGGPXRIO                                        0740
*     IF CCACD1^=RCS THEN           /* IF ERROR                      */
         CLI   CCACD1(R11),0                                       0741
         BE    @RF00741                                            0741
*       CALL EXIT;                  /* GET OUT                       */
         BAL   @14,EXIT                                            0742
*     CAXCCR=ARACCRD;               /* MOVE CCR CTL FLDS TO CAXWA    */
@RF00741 L     @10,CCARAACB(,R11)                                  0743
         L     @05,ACBUAPTR(,@10)                                  0743
         L     @15,CCAR0REC(,R11)                                  0743
         MVC   CAXCCR(12,@05),ARACCRD(@15)                         0743
*     R1=AMBLDTA->AMBDSB->AMDPARDB; /* PT TO ARDB                    */
         L     @10,ACBAMBL(,@10)                                   0744
         L     @10,AMBLDTA(,@10)                                   0744
         L     @10,AMBDSB(,@10)                                    0744
         L     R1,AMDPARDB(,@10)                                   0744
*     ARDHRBA=MAX(ARDHRBA,CCRRBAS(2));/* RESOLVE HI USED RBA         */
         L     @10,ARDHRBA(,R1)                                    0745
         L     @05,CCRRBAS+4(,@15)                                 0745
         CLR   @10,@05                                             0745
         BNL   *+6
         LR    @10,@05                                             0745
         ST    @10,ARDHRBA(,R1)                                    0745
*     ARDERBA=MAX(ARDERBA,CCRRBAS(3));/* RESOLVE HI ALLOC RBA        */
         L     @10,ARDERBA(,R1)                                    0746
         L     @05,CCRRBAS+8(,@15)                                 0746
         CLR   @10,@05                                             0746
         BNL   *+6
         LR    @10,@05                                             0746
         ST    @10,ARDERBA(,R1)                                    0746
*   END;                                                           0747
@DC00737 DS    0H                                                  0748
*   CCARALRD=ON;                    /* IND CCR WAS READ              */
         OI    CCARALRD(R11),B'00100000'                           0748
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0749
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRACC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRACC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00010 DS    0H                                                  0752
@EF00010 DS    0H                                                  0752
@ER00010 BR    @14                                                 0752
@PB00010 DS    0H                                                  0753
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0754
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRACC  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0754
*IGGPRACC:                                                         0754
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00011                                            0754
IGGPRACC DS    0H                                                  0755
*Z076:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z076RACC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0755
*    (R5,                                                          0755
*     R6,                                                          0755
*     R7,                                                          0755
*     R8,                                                          0755
*     R9,                                                          0755
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z076     DS    0H                                                  0755
Z076RACC DS    0H                                                  0756
*   RFY                                                            0756
*    (R2,                                                          0756
*     R3,                                                          0756
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0758
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE COLLECTS CCR DATA FROM VARIOUS CONTROL BLOCK     */
*   /* FIELDS,STORES THIS DATA INTO THE CCR, & WRITES THE CCR BACK   */
*   /* INTO THE CRA.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0759
*   CCARARBA=CATCRID;               /* CI NO OF CCR                  */
         LA    @10,3                                               0759
         ST    @10,CCARARBA(,R11)                                  0759
*   ARASGA=ARASGA&&ARASGA;          /* CLEAR THE ARA                 */
         L     @05,CCAR0REC(,R11)                                  0760
         XC    ARASGA(255,@05),ARASGA(@05)                         0760
*   ARASGB=ARASGB&&ARASGB;          /* CLEAR THE ARA                 */
         XC    ARASGB(250,@05),ARASGB(@05)                         0761
*   R1=AMBLDTA->AMBDSB->AMDPARDB;   /* PT TO ARDB                    */
         L     @05,CCARAACB(,R11)                                  0762
         L     @15,ACBAMBL(,@05)                                   0762
         L     @15,AMBLDTA(,@15)                                   0762
         L     @15,AMBDSB(,@15)                                    0762
         L     R1,AMDPARDB(,@15)                                   0762
*   CCRRBAS(2)=ARDHRBA;             /* STORE HI USED RBA             */
         L     @15,CCAR0REC(,R11)                                  0763
         MVC   CCRRBAS+4(4,@15),ARDHRBA(R1)                        0763
*   CCRRBAS(3)=ARDERBA;             /* STORE HI ALLOC RBA            */
         MVC   CCRRBAS+8(4,@15),ARDERBA(R1)                        0764
*   ARACI=CATCRID;                  /* RESTORE CCR CI NO             */
         STCM  @10,7,ARACI(@15)                                    0765
*   ARAID=CCRTYPE;                  /* RESTORE CCR ID                */
         MVI   ARAID(@15),C'L'                                     0766
*   CCAR0REC->RCDRELID=CURELID;     /* RESTORE CURR RELEASE ID       */
         MVI   RCDRELID(@15),X'01'                                 0767
*   ARACCRD=CAXCCR;                 /* MOVE CTL FLDS TO CCR          */
         L     @10,ACBUAPTR(,@05)                                  0768
         MVC   ARACCRD(12,@15),CAXCCR(@10)                         0768
*   XIOOPT=32;                      /* PUT OPTIONS                   */
         MVI   XIOOPT(R11),X'20'                                   0769
*Z077XRIO:                                                         0770
*   CALL IGGPXRIO;                  /* WRITE UPDATED CCR             */
Z077XRIO BAL   @14,IGGPXRIO                                        0770
*   CCARACR=OFF;                    /* RESET CCR CKPT REQD. SW       */
         NI    CCARACR(R11),B'11101111'                            0771
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0772
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPXRIO');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPXRIO'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00011 DS    0H                                                  0775
@EF00011 DS    0H                                                  0775
@ER00011 BR    @14                                                 0775
@PB00011 DS    0H                                                  0776
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0777
*/********************************************************************/
*/*                                                                  */
*/*        IGGPXRIO  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0777
*IGGPXRIO:                                                         0777
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00012                                            0777
IGGPXRIO DS    0H                                                  0778
*   GEN(ENTRY IGGPXRIO );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPXRIO
*Z078:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z078XRIO:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0779
*    (R5,                                                          0779
*     R6,                                                          0779
*     R7,                                                          0779
*     R8,                                                          0779
*     R9,                                                          0779
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z078     DS    0H                                                  0779
Z078XRIO DS    0H                                                  0780
*   RFY                                                            0780
*    (R2,                                                          0780
*     R3,                                                          0780
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0785
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE EXECUTES CRA I/O REQUESTS.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0786
*   CCARARBA=CCARARBA*CILEN;        /* CNVT CI NO TO RBA             */
         L     @10,CCARARBA(,R11)                                  0786
         SLA   @10,9                                               0786
         ST    @10,CCARARBA(,R11)                                  0786
*   RPLDACB=CCARAACB;               /* PT TO CRA ACB                 */
         L     @10,CCARARPL(,R11)                                  0787
         MVC   RPLDACB(4,@10),CCARAACB(R11)                        0787
*   RPLARG=ADDR(CCARARBA);          /* PT TO SEARCH ARG              */
         LA    @05,CCARARBA(,R11)                                  0788
         ST    @05,RPLARG(,@10)                                    0788
*   RPLRLEN=CILEN;                  /* SET NORMAL ENTRY LENGTH       */
         MVC   RPLRLEN(4,@10),@CF01050                             0789
*   IF XIOARA=ON THEN               /* IF AUX RCD AREA REQUEST       */
         TM    XIOARA(R11),B'00100000'                             0790
         BNO   @RF00790                                            0790
*     RPLAREA=CCAR0REC;             /* SET PTR TO ARA                */
         MVC   RPLAREA(4,@10),CCAR0REC(R11)                        0791
*   ELSE                            /* OTHERWISE                     */
*     RPLAREA=CCARAREC;             /* SET PTR TO USER RCD AREA      */
         B     @RC00790                                            0792
@RF00790 L     @10,CCARARPL(,R11)                                  0792
         MVC   RPLAREA(4,@10),CCARAREC(R11)                        0792
*   RPLDIR=OFF;                     /* CLR DIRECT I/O FLAG           */
@RC00790 DS    0H                                                  0794
*   RPLSEQ=OFF;                     /* CLR SEQ I/O FLAG              */
         L     @10,CCARARPL(,R11)                                  0794
         NI    RPLDIR(@10),B'10011111'                             0794
*   IF XIOSEQ=ON THEN               /* SEQ I/O REQD                  */
         TM    XIOSEQ(R11),B'00000001'                             0795
         BNO   @RF00795                                            0795
*     RPLSEQ=ON;                    /* YES,DO SEQ I/O                */
         OI    RPLSEQ(@10),B'00100000'                             0796
*   ELSE                            /* DIRECT I/O IS REQD            */
*     RPLDIR=ON;                    /* DO DIRECT I/O                 */
         B     @RC00795                                            0797
@RF00795 L     @10,CCARARPL(,R11)                                  0797
         OI    RPLDIR(@10),B'01000000'                             0797
*   RPLCNV=ON;                      /* DO CONTROL INTERVAL PROCESS   */
@RC00795 DS    0H                                                  0799
*   RPLUPD=ON;                      /* ASSUME UPDATE PROC            */
         L     @10,CCARARPL(,R11)                                  0799
         OI    RPLCNV(@10),B'00100010'                             0799
*   IF XIONUP=ON×                   /* IF NON UPDATE REQUEST         */
*       XIOGET=ON THEN              /* OR GET REQUEST                */
         TM    XIONUP(R11),B'10001000'                             0800
         BZ    @RF00800                                            0800
*     RPLUPD=OFF;                   /* SET UPDATE BIT                */
         NI    RPLUPD(@10),B'11111101'                             0801
*   R1=CCARARPL;                    /* SET PTR TO RPL                */
@RF00800 L     R1,CCARARPL(,R11)                                   0802
*   R13=R13+TWELVE;                 /* PROVIDE RECD. MGMT. SV AR     */
         AH    R13,@CH00072                                        0803
*   IF XIOGET=ON THEN               /* IF GET REQUEST                */
         TM    XIOGET(R11),B'10000000'                             0804
         BNO   @RF00804                                            0804
*     GEN(GET RPL=(1));             /* ISSUE GET MACRO               */
         GET RPL=(1)
*   ELSE                            /* OTHERWISE (PUT REQUEST)       */
*     DO;                                                          0806
         B     @RC00804                                            0806
@RF00804 DS    0H                                                  0807
*       RFY                                                        0807
*        (R14) RSTD;                                               0807
*       R14=R1->RPLAREA;            /* PT TO DATA RCD                */
         L     R14,RPLAREA(,R1)                                    0808
*       IF R14//PAGESZ>PAGESZ-CILEN THEN/* DOES RCD SPAN PAGE      0809
*                                      BOUNDARY                      */
         LR    @06,R14                                             0809
         SRDA  @06,32                                              0809
         D     @06,@CF03768                                        0809
         CH    @06,@CH04048                                        0809
         BNH   @RF00809                                            0809
*         DO;                       /* YES                           */
*           ARASGA=R14->ARASGA;     /* MV RCD TO ARA                 */
         L     @15,CCAR0REC(,R11)                                  0811
         MVC   ARASGA(255,@15),ARASGA(R14)                         0811
*           ARASGB=R14->ARASGB;     /* MV RCD TO ARA                 */
         MVC   ARASGB(250,@15),ARASGB(R14)                         0812
*           RPLAREA=CCAR0REC;       /* PT RPL TO ARA                 */
         L     @10,CCARARPL(,R11)                                  0813
         ST    @15,RPLAREA(,@10)                                   0813
*         END;                                                     0814
*       RFY                                                        0815
*        (R14) UNRSTD;                                             0815
@RF00809 DS    0H                                                  0816
*       RRARDF=RDFCIDF;             /* STORE CANNED RCD DEF DATA     */
         L     @10,CCARARPL(,R11)                                  0816
         L     @05,RPLAREA(,@10)                                   0816
         MVC   RRARDF(7,@05),RDFCIDF                               0816
*       IF CCARARBA=N&              /* PUTTING CI # 0                */
*           XIOSEQ=OFF&             /* & NOT CREATING CRA            */
*           CCARAEOV=OFF THEN       /* & NOT CRA EOV                 */
         ICM   @05,15,CCARARBA(R11)                                0817
         BNZ   @RF00817                                            0817
         TM    XIOSEQ(R11),B'00000001'                             0817
         BNZ   @RF00817                                            0817
         TM    CCARAEOV(R11),B'01000000'                           0817
         BNZ   @RF00817                                            0817
*         DO;                       /* YES                           */
*           RPLRTNCD='08'X;         /* SIMULATE INVALID              */
         MVI   RPLRTNCD(@10),X'08'                                 0819
*           RPLERRCD=RPLINRBA;      /* RBA CONDITION IN RPL          */
         MVI   RPLERRCD(@10),X'20'                                 0820
*         END;                                                     0821
*       ELSE                        /* OK TO WRITE RCD               */
*         GEN(PUT RPL=(1));         /* ISSUE PUT MACRO               */
         B     @RC00817                                            0822
@RF00817 DS    0H                                                  0822
         PUT RPL=(1)
*     END;                                                         0823
@RC00817 DS    0H                                                  0824
*   R13=R13-TWELVE;                 /* RESTORE NORMAL SV AREA PTR    */
@RC00804 SH    R13,@CH00072                                        0824
*   IF XIONCK=ON THEN               /* IF ERROR CHK BYPASS REQUEST   */
         TM    XIONCK(R11),B'00000100'                             0825
         BNO   @RF00825                                            0825
*     CALL EXIT;                    /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0826
*   ELSE                            /* OTHERWISE                     */
*     DO;                                                          0827
         B     @RC00825                                            0827
@RF00825 DS    0H                                                  0828
*       IF RPLRTNCD^='00'X THEN     /* IF ERROR                      */
         L     @10,CCARARPL(,R11)                                  0828
         CLI   RPLRTNCD(@10),0                                     0828
         BE    @RF00828                                            0828
*Z079RAEA:                                                         0829
*         CALL IGGPRAEA;            /* EXIT TO ERROR ANALYSIS        */
Z079RAEA BAL   @14,IGGPRAEA                                        0829
*     END;                          /* OTHERWISE                     */
@RF00828 DS    0H                                                  0831
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00825 BAL   @14,EXIT                                            0831
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRAEA');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRAEA'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00012 DS    0H                                                  0834
@EF00012 DS    0H                                                  0834
@ER00012 BR    @14                                                 0834
@PB00012 DS    0H                                                  0835
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0836
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRAEA  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0836
*IGGPRAEA:                                                         0836
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00013                                            0836
IGGPRAEA DS    0H                                                  0837
*Z080:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z080RAEA:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0837
*    (R5,                                                          0837
*     R6,                                                          0837
*     R7,                                                          0837
*     R8,                                                          0837
*     R9,                                                          0837
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z080     DS    0H                                                  0837
Z080RAEA DS    0H                                                  0838
*   RFY                                                            0838
*    (R2,                                                          0838
*     R3,                                                          0838
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0840
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE ANALYZES RPL ERROR RETURN CODES AND TAKES        */
*   /* APPROPRIATE ACTION. SET CCAMODID='BO', CCAREASN=RSN0,         */
*   /* CCARETRN=RCS                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0841
*   CCAPROB=IGGSEGID;               /* CLR ERROR CODES               */
         MVC   CCAPROB(4,R11),@CF00035                             0841
*   IF RPLRTNCD='08'X THEN          /* IF LOGICAL ERROR              */
         L     @10,CCARARPL(,R11)                                  0842
         CLI   RPLRTNCD(@10),8                                     0842
         BNE   @RF00842                                            0842
*     DO;                           /* THEN PROCESS EXPECTED CODES   */
*       IF(RPLERRCD=RPLNOREC)×      /* IF NO RECORD FOUND OR         */
*           (RPLERRCD=RPLDUP) THEN  /* DUPLICATE RECORD              */
         CLI   RPLERRCD(@10),16                                    0844
         BE    @RT00844                                            0844
         CLI   RPLERRCD(@10),8                                     0844
         BNE   @RF00844                                            0844
@RT00844 DS    0H                                                  0845
*         DO;                       /* SET RCD NOT FOUND ERR CDE     */
*           DO;                                                    0846
*             CCAREASN=RSN24;       /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'18'                                 0847
*             CCARETRN=RCENT;       /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'08'                                 0848
*           END;                                                   0849
*           CALL EXIT;              /* GET OUT                       */
         BAL   @14,EXIT                                            0850
*         END;                                                     0851
*       IF RPLERRCD=RPLNOEXT THEN   /* NO SPACE CONDITION            */
@RF00844 L     @10,CCARARPL(,R11)                                  0852
         CLI   RPLERRCD(@10),28                                    0852
         BNE   @RF00852                                            0852
*         DO;                       /* SET NO SPACE ERR CODE         */
*           DO;                                                    0854
*             CCAREASN=RSN16;       /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'10'                                 0855
*             CCARETRN=RCNOSP;      /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'44'                                 0856
*           END;                                                   0857
*           CALL EXIT;              /* GET OUT                       */
         BAL   @14,EXIT                                            0858
*         END;                                                     0859
*       IF RPLERRCD=RPLINRBA THEN   /* INVALID RBA                   */
@RF00852 L     @10,CCARARPL(,R11)                                  0860
         CLI   RPLERRCD(@10),32                                    0860
         BNE   @RF00860                                            0860
*         DO;                       /* SET INVALID CI ERROR CDE      */
*           DO;                                                    0862
*             CCAREASN=RSN8;        /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'08'                                 0863
*             CCARETRN=RCINCI;      /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'7C'                                 0864
*           END;                                                   0865
*           GOTO PREIOEXT;          /* GET OUT                       */
         B     PREIOEXT                                            0866
*         END;                                                     0867
*     END;                                                         0868
@RF00860 DS    0H                                                  0869
*   IF CCAROREQ=ON THEN             /* IF READ ONLY REQ SET LOCATE 0869
*                                      I/O ERR CODE                  */
@RF00842 TM    CCAROREQ(R11),B'00000100'                           0869
         BNO   @RF00869                                            0869
*     DO;                                                          0870
*       CCAREASN=RSN6;              /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'06'                                 0871
*       CCARETRN=RCIOL;             /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'18'                                 0872
*     END;                                                         0873
*   ELSE                            /* OTHERWISE SET NON/LOCATE I/O
*                                      ERR CDE                       */
*     DO;                                                          0874
         B     @RC00869                                            0874
@RF00869 DS    0H                                                  0875
*       CCAREASN=RSN8;              /* SET REASON CODE               */
         MVI   CCAREASN(R11),X'08'                                 0875
*       CCARETRN=RCIONL;            /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'1C'                                 0876
*     END;                                                         0877
*                                                                  0877
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE PROBLEM DETERMINATION MESSAGES                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0878
*PREIOEXT:                                                         0878
*                                                                  0878
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAF                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0878
*Z087EMSG:                                                         0878
*   CALL IGGPEMSG;                  /* WTO BASIC ERR MSG             */
*                                                                  0878
@RC00869 DS    0H                                                  0878
PREIOEXT DS    0H                                                  0878
Z087EMSG L     @15,@CV03785                                        0878
         BALR  @14,@15                                             0878
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAF                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0879
*Z088EMIO:                                                         0879
*   CALL IGGPEMIO;                  /* WTO I/O ERR MSG               */
Z088EMIO L     @15,@CV03784                                        0879
         BALR  @14,@15                                             0879
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0880
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPRASC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPRASC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00013 DS    0H                                                  0883
@EF00013 DS    0H                                                  0883
@ER00013 BR    @14                                                 0883
@PB00013 DS    0H                                                  0884
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0885
*/********************************************************************/
*/*                                                                  */
*/*        IGGPRASC  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0885
*IGGPRASC:                                                         0885
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00014                                            0885
IGGPRASC DS    0H                                                  0886
*   GEN(ENTRY IGGPRASC );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPRASC
*Z089:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z089RASC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0887
*    (R5,                                                          0887
*     R6,                                                          0887
*     R7,                                                          0887
*     R8,                                                          0887
*     R9,                                                          0887
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z089     DS    0H                                                  0887
Z089RASC DS    0H                                                  0888
*   RFY                                                            0888
*    (R2,                                                          0888
*     R3,                                                          0888
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0893
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE INSURES SUFFICIENT CRA CIS                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0894
*   CCARARTC=ON;                    /* INSURE RETURN TO IMM CALLER   */
         OI    CCARARTC(R11),B'00001000'                           0894
*   CCARAREC=CCACPE1;               /* PT TO INPUT VOL ENTRY         */
         L     @10,CCAURAB(,R11)                                   0895
         MVC   CCARAREC(4,R11),CCACPE1(@10)                        0895
*Z090RAOR:                                                         0896
*   CALL IGGPRAOR;                  /* ORIENT TO CRA                 */
Z090RAOR BAL   @14,IGGPRAOR                                        0896
*   IF CCACD1^=RCS THEN             /* ANY ERROR                     */
         CLI   CCACD1(R11),0                                       0897
         BE    @RF00897                                            0897
*Z091RAX:                                                          0898
*     CALL IGGPRAX;                 /* YES,GO CLEANUP/EXIT           */
Z091RAX  BAL   @14,IGGPRAX                                         0898
*   IF CCARALRD=OFF THEN            /* CCR READ REQUIRED             */
@RF00897 TM    CCARALRD(R11),B'00100000'                           0899
         BNZ   @RF00899                                            0899
*     DO;                           /* YES                           */
*Z092RARC:                                                         0901
*       CALL IGGPRARC;              /* GO READ CRA CCR               */
Z092RARC BAL   @14,IGGPRARC                                        0901
*       IF CCACD1^=RCS THEN         /* ANY ERROR                     */
         CLI   CCACD1(R11),0                                       0902
         BE    @RF00902                                            0902
*Z093RAX:                                                          0903
*         CALL IGGPRAX;             /* YES,GET OUT                   */
Z093RAX  BAL   @14,IGGPRAX                                         0903
*     END;                                                         0904
@RF00902 DS    0H                                                  0905
*   IF CAXCDCI+(CAXHACI-CAXNFCI)<CIRESCNT+MRECIS×/*          @ZA18274*/
*       CCARAFEV=ON THEN            /*                       @ZA18274
*                                      SUFFICIENT CIS EXIST          */
@RF00899 L     @10,CCARAACB(,R11)                                  0905
         L     @10,ACBUAPTR(,@10)                                  0905
         SLR   @05,@05                                             0905
         ICM   @05,7,CAXHACI(@10)                                  0905
         SLR   @15,@15                                             0905
         ICM   @15,7,CAXNFCI(@10)                                  0905
         SLR   @05,@15                                             0905
         SLR   @15,@15                                             0905
         ICM   @15,7,CAXCDCI(@10)                                  0905
         ALR   @05,@15                                             0905
         CH    @05,@CH00058                                        0905
         BL    @RT00905                                            0905
         TM    CCARAFEV(R11),B'00010000'                           0905
         BNO   @RF00905                                            0905
@RT00905 DS    0H                                                  0906
*     DO;                           /* NO                            */
*       CCARAFEV=ON;                /* IND FORCE EXTEND              */
         OI    CCARAFEV(R11),B'00010000'                           0907
*       CCARAREC=CCAR0REC;          /* PT TO ARA                     */
         MVC   CCARAREC(4,R11),CCAR0REC(R11)                       0908
*Z094RARA:                                                         0909
*       CALL IGGPRARA;              /* GO FORCE EXTEND OF CRA        */
Z094RARA BAL   @14,IGGPRARA                                        0909
*     END;                                                         0910
*Z095RAX:                                                          0911
*   CALL IGGPRAX;                   /* CLEANUP/EXIT                  */
@RF00905 DS    0H                                                  0911
Z095RAX  BAL   @14,IGGPRAX                                         0911
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0912
*   END;                            /* END OF INNER PROCEDURE        */
@EL00014 DS    0H                                                  0913
@EF00014 DS    0H                                                  0913
@ER00014 BR    @14                                                 0913
@PB00014 DS    0H                                                  0914
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0915
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0915
*EXIT:                                                             0915
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00015                                            0915
EXIT     DS    0H                                                  0916
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0919
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00015 DS    0H                                                  0920
@EF00015 DS    0H                                                  0920
@ER00015 BR    @14                                                 0920
*   END                                                            0921
*                                                                  0921
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IDAARDB )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IGGMVEDC)                                       */
*/*%INCLUDE SYSLIB  (IECSDSL1)                                       */
*/*%INCLUDE SYSLIB  (IGGMF4WA)                                       */
*                                                                  0921
*       ;                                                          0921
@EL00001 DS    0H                                                  0921
@EF00001 DS    0H                                                  0921
@ER00001 BR    @14                                                 0921
@DATA    DS    0H
@CH00058 DC    H'4'
@CH00072 DC    H'12'
@CH04048 DC    H'1536'
@DATD    DSECT
         DS    0F
IGG0CLBO CSECT
         DS    0F
@CF00414 DC    F'3'
@CF02676 DC    F'9'
@CF01050 DC    F'512'
@CF03768 DC    F'2048'
@CF00035 DC    F'-1026162688'
@CF04047 DC    F'-1026162012'
@DATD    DSECT
         DS    0D
IGG0CLBO CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03784 DC    V(IGGPEMIO)
@CV03785 DC    V(IGGPEMSG)
@CV03786 DC    V(IGGPRAPV)
@CV03787 DC    V(IGGPPAD)
@CV03788 DC    V(IGGPRAOP)
@CV03820 DC    V(IGGPARFS)
         DS    0D
POSTCDE  DC    XL4'7F000000'
@CC03928 DC    C'BO'
TNTYPES  DC    CL9'CDIAVUMGR'
RDFCIDF  DC    X'0001F901F90000'
@DATD    DSECT
K1         EQU 1                        /*VALUE ONE                  */
K3         EQU 3                        /*VALUE THREE                */
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLBO CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
F4PTR    EQU   @01
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
UCBDCPTR EQU   @01
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAMODID EQU   CCAPROB
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1DK  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCASRCIN EQU   CCASRID
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0REC EQU   CCARAB0+4
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5SEG EQU   CCARAB5+8
CCARPLX  EQU   IGGCCA+210
CCARPLT  EQU   IGGCCA+211
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAROREQ EQU   CCAFLG7
CCAFLG8  EQU   IGGCCA+553
CCAVBUFI EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAFLG9  EQU   IGGCCA+554
CCARABYC EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCARAACB EQU   IGGCCA+1424
CCARARPL EQU   IGGCCA+1428
CCARARBA EQU   IGGCCA+1432
CCARAREC EQU   IGGCCA+1436
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCARAFEV EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARANCA EQU   IGGCCA+1452
CCARAVCA EQU   IGGCCA+1460
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGGTNXT EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGFUNC  EQU   CTGOPTN3
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGOPTNS EQU   CTGDSORG
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFL    EQU   0
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
USERWKA  EQU   0
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDRELID EQU   CATRCD+4
RCDCRAVL EQU   CATRCD+5
RCDCRACI EQU   CATRCD+11
RCDCRADT EQU   CATRCD+14
RCDRACTS EQU   CATRCD+18
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXCHN   EQU   IGGCAXWA+4
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXF2VTU EQU   CAXFLG2
CAXFLG3  EQU   IGGCAXWA+10
CAXACT   EQU   IGGCAXWA+11
CAXUCB   EQU   IGGCAXWA+28
CAXCCR   EQU   IGGCAXWA+32
CAXHACI  EQU   CAXCCR
CAXNFCI  EQU   CAXCCR+3
CAXCDCI  EQU   CAXCCR+6
CAXFDCI  EQU   CAXCCR+9
CAXRPLCT EQU   IGGCAXWA+46
CAXRPL   EQU   IGGCAXWA+48
CAXCNAM  EQU   IGGCAXWA+52
CAXVOLID EQU   CAXCNAM
CAXRACTS EQU   CAXCNAM+6
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CAXCRACB EQU   IGGCAXWA+112
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
CTENTREC EQU   0
@NM00094 EQU   CTENTREC
ARA      EQU   0
ARASGA   EQU   ARA
ARAKEY   EQU   ARASGA
ARACI    EQU   ARAKEY+1
ARASGB   EQU   ARA+255
ARA2     EQU   0
ARAID    EQU   ARA2+44
ARACCRD  EQU   ARA2+45
ARAFCHN  EQU   ARACCRD
RRA      EQU   0
RRARDF   EQU   RRA+505
CCR      EQU   0
CCRRBAS  EQU   CCR+57
RABUFFER EQU   0
RABUFRCD EQU   RABUFFER
RABUFSG1 EQU   RABUFRCD
RABUFSG2 EQU   RABUFRCD+256
RABUFDF  EQU   RABUFFER+505
RABUFPPN EQU   RABUFDF+2
RABUFCHN EQU   RABUFDF+3
RBCANC   EQU   0
RBCBEG   EQU   RBCANC
RBCEND   EQU   RBCANC+4
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLDIR   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLACTIV EQU   RPLCOMN+69
XTNDRPL  EQU   0
RXTN     EQU   XTNDRPL+76
RPLPOOL  EQU   0
IDAAMBL  EQU   0
AMBLEOV  EQU   IDAAMBL+12
AMBLEFLG EQU   AMBLEOV
AMBLDDNM EQU   IDAAMBL+16
AMBLIDF  EQU   AMBLDDNM
AMBLQ    EQU   AMBLIDF+7
AMBLVC   EQU   IDAAMBL+28
AMBLTYPE EQU   IDAAMBL+30
AMBLSHAR EQU   IDAAMBL+33
AMBLFLG1 EQU   IDAAMBL+35
AMBLFLG2 EQU   IDAAMBL+36
AMBLDTA  EQU   IDAAMBL+52
IDAAMB   EQU   0
AMBDSB   EQU   IDAAMB+20
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDPARDB EQU   IDAAMDSB+36
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
IDAARDB  EQU   0
ARDTYPE  EQU   IDAARDB+1
ARDHRBA  EQU   IDAARDB+12
ARDERBA  EQU   IDAARDB+16
ARDPRF   EQU   IDAARDB+28
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00132 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
CTVOLRCD EQU   1
CTVDVCHR EQU   CTVOLRCD+52
CTVDVFLG EQU   CTVDVCHR+17
CTVSPHDR EQU   0
CTVSPFLG EQU   CTVSPHDR+15
CTVDESGP EQU   0
CTVEXTST EQU   CTVDESGP+4
CTVSTDES EQU   CTVEXTST
CTVDSGRP EQU   0
CTVDSDFL EQU   CTVDSGRP+6
CTVDSDIR EQU   CTVDSGRP+9
CTVGOPT  EQU   0
CTVGOCI  EQU   CTVGOPT
CTVGOGCI EQU   CTVGOPT+3
CTVRCTRL EQU   0
CTVEXRPT EQU   CTVRCTRL
CTVSPMAP EQU   0
CTVSMSN  EQU   CTVSPMAP
CTVDSPAC EQU   0
CTVDSPSN EQU   CTVDSPAC
CTVDSPFG EQU   CTVDSPAC+15
CTVSPEXT EQU   CTVDSPAC+21
CTVEXTNT EQU   CTVSPEXT
CTVDIR   EQU   0
CTVDSDSN EQU   CTVDIR
CTVDEXTN EQU   0
IECSDSF4 EQU   0
IECSDSL4 EQU   0
DS4DEVCT EQU   IECSDSL4+18
DS4DEVOV EQU   DS4DEVCT+6
DS4AMCAT EQU   IECSDSL4+40
DS4VSIND EQU   DS4AMCAT
DS4VSCRA EQU   DS4AMCAT+1
IGGMF4WA EQU   0
F4WDEB   EQU   IGGMF4WA
F4WECB   EQU   IGGMF4WA+52
F4WIOB   EQU   IGGMF4WA+56
F4WCCW   EQU   IGGMF4WA+96
F4WBUF   EQU   IGGMF4WA+120
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
FIELDNM  EQU   0
RCDKEY   EQU   0
TNAM     EQU   0
UCBBGN   EQU   0
@NM00034 EQU   CTGDDNM
CTGPROB  EQU   @NM00034
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
XIOOPT   EQU   CCARPLX
XIOGET   EQU   XIOOPT
XIOARA   EQU   XIOOPT
XIONUP   EQU   XIOOPT
XIONCK   EQU   XIOOPT
XIOKGE   EQU   XIOOPT
XIOSEQ   EQU   XIOKGE
UCBOBS01 EQU   UCBDEV
UCBVOLI  EQU   UCBOBS01+4
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00131 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
ONCE     EQU   CCARPLT
HOBCRAVL EQU   RCDCRAVL
CCADDDD  EQU   CCASRCH
FLC      EQU   PSA
F4TS2    EQU   DS4VSCRA+2
F4WDCB   EQU   F4WDEB+4
LPINDX   EQU   CCARPLX
LPSTOP   EQU   CCARPLT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00131
UCBSKPFG EQU   @NM00131
UCBRIPND EQU   @NM00131
UCBRTIAC EQU   @NM00131
UCBRSV79 EQU   @NM00131
UCBRSV78 EQU   @NM00131
UCBRSV77 EQU   @NM00131
UCBOLTEP EQU   @NM00131
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00130 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVTOC  EQU   UCBOBS01
XIOTNE   EQU   XIOOPT
XIOKEY   EQU   XIOOPT
XIOERS   EQU   XIOOPT
@NM00084 EQU   MCATDSTR+1
@NM00083 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
F4WCCW3  EQU   F4WCCW+16
F4WCCW2  EQU   F4WCCW+8
F4WCCW1  EQU   F4WCCW
F4WSEEK  EQU   IGGMF4WA+88
@NM00150 EQU   F4WIOB+24
F4WIDCB  EQU   F4WIOB+20
F4WSCP   EQU   F4WIOB+16
@NM00149 EQU   F4WIOB+8
F4WIECB  EQU   F4WIOB+4
@NM00148 EQU   F4WIOB
@NM00147 EQU   F4WECB+1
F4WECMP  EQU   F4WECB
F4WDEBP  EQU   IGGMF4WA+48
F4WNTK   EQU   F4WDEB+46
F4WECC   EQU   F4WDEB+42
F4WSCC   EQU   F4WDEB+38
F4WDBB   EQU   F4WDEB+36
F4WDUCB  EQU   F4WDEB+33
F4WDMOD  EQU   F4WDEB+32
F4WDAPP  EQU   F4WDEB+29
F4WDEXS  EQU   F4WDEB+28
F4WDDCB  EQU   F4WDEB+25
F4WDID   EQU   F4WDEB+24
@NM00146 EQU   F4WDEB+17
F4WEXT   EQU   F4WDEB+16
@NM00145 EQU   F4WDEB
DS4END   EQU   IECSDSL4+96
@NM00144 EQU   IECSDSL4+71
DS4VTOCE EQU   IECSDSL4+61
DS4F6PTR EQU   IECSDSL4+56
@NM00143 EQU   IECSDSL4+51
DS4R2TIM EQU   IECSDSL4+43
@NM00142 EQU   DS4VSIND
DS4VSBAD EQU   DS4VSIND
DS4VSREF EQU   DS4VSIND
DS4AMTIM EQU   IECSDSL4+32
DS4DEVDB EQU   DS4DEVCT+13
DS4DEVDT EQU   DS4DEVCT+12
DS4DEVTL EQU   DS4DEVCT+10
DS4DEVFG EQU   DS4DEVCT+9
DS4DEVK  EQU   DS4DEVCT+8
DS4DEVL  EQU   DS4DEVOV+1
DS4DEVI  EQU   DS4DEVOV
DS4DEVTK EQU   DS4DEVCT+4
DS4DEVSZ EQU   DS4DEVCT
@NM00141 EQU   IECSDSL4+16
DS4NOEXT EQU   IECSDSL4+15
DS4VTOCI EQU   IECSDSL4+14
DS4NOATK EQU   IECSDSL4+12
DS4HCCHH EQU   IECSDSL4+8
DS4DSREC EQU   IECSDSL4+6
DS4HPCHR EQU   IECSDSL4+1
DS4IDFMT EQU   IECSDSL4
@NM00140 EQU   IECSDSF4
CTVDRSTT EQU   CTVDEXTN+4
CTVDIRTS EQU   CTVDEXTN
CTVDSDCI EQU   CTVDIR+2
CTVDSDLF EQU   CTVDSDSN+1
CTVDSDCV EQU   CTVDSDSN
CTVEXTNN EQU   CTVEXTNT+2
CTVEXTT  EQU   CTVEXTNT
CTVSQT   EQU   CTVDSPAC+18
CTVSPOPT EQU   CTVDSPAC+17
CTVNOEXT EQU   CTVDSPAC+16
@NM00139 EQU   CTVDSPFG
CTVCATDF EQU   CTVDSPFG
@NM00138 EQU   CTVDSPFG
CTVAUTO  EQU   CTVDSPFG
CTVUNIQ  EQU   CTVDSPFG
CTVF1PTR EQU   CTVDSPAC+10
CTVF1TME EQU   CTVDSPAC+2
CTVDSPLF EQU   CTVDSPSN+1
CTVDSPCV EQU   CTVDSPSN
CTVSMBIT EQU   CTVSPMAP+4
CTVSMLEN EQU   CTVSPMAP+2
CTVSMLF  EQU   CTVSMSN+1
CTVSMCV  EQU   CTVSMSN
CTVEGOPT EQU   CTVRCTRL+6
CTVEXRCT EQU   CTVRCTRL+5
@NM00137 EQU   CTVEXRPT+3
CTVEXGCI EQU   CTVEXRPT
CTVGOSEQ EQU   CTVGOPT+4
CTVGOGC  EQU   CTVGOGCI
CTVGODEL EQU   CTVGOGCI
CTVGOEXT EQU   CTVGOGCI
CTVGODSP EQU   CTVGOCI+1
CTVGOFLG EQU   CTVGOCI
CTVSPSXC EQU   CTVDSDIR+2
CTVSPSSN EQU   CTVDSDIR
CTVDSXCT EQU   CTVDSGRP+7
@NM00136 EQU   CTVDSDFL
CTVDSDCN EQU   CTVDSDFL
CTVDSCID EQU   CTVDSGRP+3
CTVDSNEX EQU   CTVDSGRP+2
CTVDSGLF EQU   CTVDSGRP+1
CTVDSGCV EQU   CTVDSGRP
CTVMAP   EQU   CTVDESGP+14
CTVMAPLN EQU   CTVDESGP+12
CTVDESHD EQU   CTVDESGP+10
CTVDESTK EQU   CTVDESGP+8
CTVSTHH  EQU   CTVSTDES+2
CTVSTCC  EQU   CTVSTDES
CTVDESUU EQU   CTVDESGP+2
CTVDESLF EQU   CTVDESGP+1
CTVDESCV EQU   CTVDESGP
CTVSPSQT EQU   CTVSPHDR+20
CTVSPSPO EQU   CTVSPHDR+19
CTVSPNEX EQU   CTVSPHDR+18
CTVSPNDS EQU   CTVSPHDR+16
@NM00135 EQU   CTVSPFLG
CTVSPCDF EQU   CTVSPFLG
CTVSPMCT EQU   CTVSPFLG
CTVSPUCT EQU   CTVSPFLG
CTVSPAUT EQU   CTVSPFLG
CTVSPUNQ EQU   CTVSPFLG
CTVF1ADR EQU   CTVSPHDR+10
CTVF1TIM EQU   CTVSPHDR+2
CTVSPHLF EQU   CTVSPHDR+1
CTVSPHCV EQU   CTVSPHDR
@NM00134 EQU   CTVOLRCD+74
CTVSYEDS EQU   CTVOLRCD+73
CTVOLFLG EQU   CTVOLRCD+72
CTVTLFAC EQU   CTVDVCHR+18
CTVTLFLG EQU   CTVDVFLG
@NM00133 EQU   CTVDVFLG
CTVBONK  EQU   CTVDVCHR+16
CTVBKLB  EQU   CTVDVCHR+15
CTVBKNLB EQU   CTVDVCHR+14
CTVTRKSZ EQU   CTVDVCHR+12
CTVNOTRK EQU   CTVDVCHR+10
CTVNOCYL EQU   CTVDVCHR+8
CTVMXBLK EQU   CTVDVCHR+4
CTVDEVTY EQU   CTVDVCHR
CTVOLTIM EQU   CTVOLRCD+44
CTVOLNME EQU   CTVOLRCD
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00132
UCBHALI  EQU   @NM00132
UCBRSV09 EQU   @NM00132
UCBRSV08 EQU   @NM00132
UCBRSV07 EQU   @NM00132
UCBRSV06 EQU   @NM00132
UCBRSV05 EQU   @NM00132
UCBRSV04 EQU   @NM00132
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00129 EQU   UCB
ARDKEYS  EQU   IDAARDB+29
@NM00128 EQU   ARDPRF
ARDPRFMT EQU   ARDPRF
ARDPRSS  EQU   ARDPRF
ARDRELNO EQU   IDAARDB+26
ARDVOLSR EQU   IDAARDB+20
ARDHKRBA EQU   IDAARDB+8
ARDNPTR  EQU   IDAARDB+4
ARDLEN   EQU   IDAARDB+2
ARDUSED  EQU   ARDTYPE
ARDEOD   EQU   ARDTYPE
ARDUOVFL EQU   ARDTYPE
ARDSS    EQU   ARDTYPE
ARDHLI   EQU   ARDTYPE
ARDKR    EQU   ARDTYPE
ARDID    EQU   IDAARDB
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00127 EQU   IDAAMDSB+41
@NM00126 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00125 EQU   AMBCSWD1+1
@NM00124 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00123 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00122 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00121 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00120 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00119 EQU   AMBINFL
@NM00118 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00117 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00116 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00115 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00114 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
AMBLCMB  EQU   IDAAMBL+64
AMBLBIB  EQU   IDAAMBL+60
AMBLIX   EQU   IDAAMBL+56
AMBLMIDS EQU   IDAAMBL+42
AMBLNIDS EQU   IDAAMBL+41
@NM00113 EQU   IDAAMBL+40
AMBLNUM  EQU   IDAAMBL+38
AMBLNST  EQU   IDAAMBL+37
@NM00112 EQU   AMBLFLG2
AMBLSTAG EQU   AMBLFLG2
@NM00111 EQU   AMBLFLG2
AMBLDUMY EQU   AMBLFLG1
AMBLCAT  EQU   AMBLFLG1
AMBLUCRA EQU   AMBLFLG1
AMBLSCRA EQU   AMBLFLG1
AMBLVVIC EQU   AMBLFLG1
AMBLUPD  EQU   AMBLFLG1
AMBLCINV EQU   AMBLFLG1
AMBLFULL EQU   AMBLFLG1
AMBLLEN  EQU   IDAAMBL+34
@NM00110 EQU   AMBLSHAR
AMBLWRIT EQU   AMBLSHAR
AMBLCATO EQU   AMBLSHAR
AMBLPRIM EQU   AMBLSHAR
AMBLID   EQU   IDAAMBL+32
@NM00109 EQU   IDAAMBL+31
@NM00108 EQU   AMBLTYPE
AMBLFIX  EQU   AMBLTYPE
AMBLBASE EQU   AMBLTYPE
AMBLAIX  EQU   AMBLTYPE
AMBLUPGR EQU   AMBLTYPE
AMBLPATH EQU   AMBLTYPE
AMBLENO  EQU   AMBLVC+1
AMBLVRT  EQU   AMBLVC
AMBLXPT  EQU   IDAAMBL+24
AMBLDFR  EQU   AMBLQ
AMBLESDS EQU   AMBLQ
AMBLKSDS EQU   AMBLQ
AMBLUBF  EQU   AMBLQ
AMBLFSTP EQU   AMBLQ
AMBLLSR  EQU   AMBLQ
AMBLGSR  EQU   AMBLQ
AMBLDDC  EQU   AMBLQ
AMBLDCI  EQU   AMBLIDF+4
AMBLCACB EQU   AMBLIDF
@NM00107 EQU   AMBLEOV+2
AMBLCOMP EQU   AMBLEOV+1
AMBLESET EQU   AMBLEFLG
AMBLWAIT EQU   AMBLEFLG
AMBLACB  EQU   IDAAMBL+8
AMBLSCHN EQU   IDAAMBL+4
AMBLPCHN EQU   IDAAMBL
@NM00106 EQU   RXTN+1
RXTNAV   EQU   RXTN
@NM00105 EQU   XTNDRPL
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00104 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00103 EQU   RPLRBAR+3
@NM00102 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
@NM00101 EQU   RABUFDF
CCRACF   EQU   CCR+45
CCRID    EQU   CCR+44
CCRKEY   EQU   CCR
@NM00100 EQU   RRA
@NM00099 EQU   ARACCRD+3
@NM00098 EQU   ARA2
ARARDF   EQU   ARA+505
@NM00097 EQU   ARASGA+47
ARATNCI  EQU   ARASGA+44
@NM00096 EQU   ARAKEY+4
@NM00095 EQU   ARAKEY
RCDNAME  EQU   CTENTREC+49
RCDKCI   EQU   @NM00094
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00093 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00092 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00091 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00090 EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00089 EQU   COPTS
CENLST   EQU   COPTS
@NM00088 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXASID  EQU   IGGCAXWA+44
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
@NM00087 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00086 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
@NM00085 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00082 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00081 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00080 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00079 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00078 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00077 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00076 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00075 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00074 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00073 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00048 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00047 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00046 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00045 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00044 EQU   CVTFIX+248
@NM00043 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
LENFIX   EQU   CNTRLINF+1
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00042 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00041 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00040 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00039 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00038 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00037 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00036 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN2  EQU   USERWKA+2
WKALEN1  EQU   USERWKA
CTGFLPT  EQU   CTGFLDAT+4
CTGFLNG  EQU   CTGFLDAT
CTGFLCHN EQU   CTGFL+12
CTGFLDTS EQU   CTGFLDRE
@NM00035 EQU   CTGFLDRE
CTGFLDCD EQU   CTGFL+1
CTGFLDNO EQU   CTGFL
CTGFIELD EQU   CTGPL+28
CTGPSWD  EQU   CTGJSCB
@NM00033 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
CTGNOFLD EQU   CTGPL+19
CTGTYPE  EQU   CTGPL+18
@NM00032 EQU   CTGDSORG
@NM00031 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
CTGNPROF EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
@NM00030 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGUCRAX EQU   CTGGTNXT
CTGSWAP  EQU   CTGRCATN
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1492
CCADGDGA EQU   IGGCCA+1488
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00029 EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00028 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCACUMPL EQU   IGGCCA+1412
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00027 EQU   CCAREGS
@NM00026 EQU   IGGCCA+1057
@NM00025 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00024 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00023 EQU   CCAMNAT+1
@NM00022 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00021 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00020 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00019 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
CCASAVID EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00018 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABL  EQU   IGGCCA+388
CCARABF  EQU   IGGCCA+384
CCARABB  EQU   IGGCCA+380
CCAMCPL  EQU   CCAXCPL
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCACMSWA EQU   CCACMS
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
CCAR5REC EQU   CCARAB5+4
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
CCAR4REC EQU   CCARAB4+4
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2NVC EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1UP  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1KEY EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00072 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00071 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00070 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00069 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00068 EQU   FLCFSA
@NM00067 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00066 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00065 EQU   FLCIOA
@NM00064 EQU   FLCMCLA+15
@NM00063 EQU   FLCMCLA+14
@NM00062 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00061 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00060 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00059 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00058 EQU   FLCPER
@NM00057 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00056 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00055 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00054 EQU   FLCPIILC
@NM00053 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00052 EQU   FLCSVILC
@NM00051 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00050 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00049 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00308 EQU   @RC00295
@RF00357 EQU   @RC00342
@RF00545 EQU   @RC00542
@RT00624 EQU   FEOV
@PB00015 EQU   @EL00001
@ENDDATA EQU   *
         END   IGG0CLBO,(C'PLS0506',0701,77260)
