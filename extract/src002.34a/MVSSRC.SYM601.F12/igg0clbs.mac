         TITLE 'IGG0CLBS, DERIVED VOLUME ENTRY PROCESSING (RETRIEVAL)  *
                        '
IGG0CLBS CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLBS  75.053'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPXVAL'
         EJECT
         B     @PB00002                                            0104
IGGPXVAL DS    0H                                                  0105
         ENTRY IGGPXVAL
         DROP @15
Z003     DS    0H                                                  0107
Z003XVAL DS    0H                                                  0108
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
         USING *,12
*   IF(CCADICT='007B0280'X×         /* IF FIELD NODSPACE OR          */
*       CCADICT='007D0280'X) THEN   /* NODSET REQUESTED              */
         CLC   CCADICT(4,R11),@CB02851                             0117
         BE    @RT00117                                            0117
         CLC   CCADICT(4,R11),@CB02852                             0117
         BNE   @RF00117                                            0117
@RT00117 DS    0H                                                  0118
*     DO;                           /* CALCULATE CURRENT VALUE       */
*       GEN(L R13,4(R13));          /* GO BACK TO GVAL CALLER AT EXIT*/
         L R13,4(R13)
*       CCAGRHI=MAXSEQNO;           /* SET MAX SEQUENCE NO.          */
         MVC   CCAGRHI(2,R11),@CH02847                             0120
*       CCAGRGC=CCADICT(2)-GCDIFF;  /* SET GROUP CODE        @Y30SSRS*/
         SLR   @10,@10                                             0121
         IC    @10,CCADICT+1(,R11)                                 0121
         SL    @10,@CF02849                                        0121
         STC   @10,CCAGRGC(,R11)                                   0121
*       CCAURAB=CCARABB;            /* SEARCH STARTING WITH BASE   0122
*                                      ENTRY RECORD                  */
         L     @10,CCARABB(,R11)                                   0122
         ST    @10,CCAURAB(,R11)                                   0122
*       CCARBU1=OFF;                /* INDICATE FREE RCD AREA        */
*       CCARBU2=OFF;                /* AVOID NO BUFFER SPACE       0124
*                                      CONDITION                     */
*                                                                  0124
         NI    CCARBU1(@10),B'10011111'                            0124
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAV                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0125
*Z004SGOP:                                                         0125
*       CALL IGGPSGOP;              /* COUNT NON-DELETED GOP'S       */
Z004SGOP L     @15,@CV00039                                        0125
         BALR  @14,@15                                             0125
*       CCAGVNBS=OFF;               /* INDICATE SUFFICIENT BUFFER  0126
*                                      SPACE                         */
*       CCAGVNC=OFF;                /* INDICATE GET FIELD VALUE    0127
*                                      COMPLETE                      */
*       CCAGVNF=OFF;                /* INDICATE FOUND FIELD          */
*       CCAGVNE=OFF;                /* INDICATE EXISTENT FIELD       */
         NI    CCAGVNBS(R11),B'11000101'                           0129
*       CCAGVEXT=0;                 /* INDICATE NO EXTENSION         */
         SLR   @10,@10                                             0130
         STCM  @10,7,CCAGVEXT(R11)                                 0130
*       CCACPE7=ADDR(CCAGVCT);      /* SET ADDR OF GOP COUNT         */
         LA    @10,CCAGVCT(,R11)                                   0131
         ST    @10,CCACPE7(,R11)                                   0131
*       CCAILNG=LENGTH(CCAGVCT);    /* LENGTH OF FIELD WITH GOP COUNT*/
         MVC   CCAILNG(4,R11),@CF00059                             0132
*       CCASRID=CCACBASE;           /* SET UP FOR GET                */
*                                                                  0133
         MVC   CCASRID(3,R11),CCACBASE(R11)                        0133
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0134
*Z005GREC:                                                         0134
*       CALL IGGPGREC;              /* RE-GET BASE                   */
Z005GREC L     @15,@CV00037                                        0134
         BALR  @14,@15                                             0134
*       CALL EXIT;                  /* EXIT                          */
         BAL   @14,EXIT                                            0135
*     END;                          /* END CALCULATE                 */
*   ELSE                                                           0137
*     ;                             /* NOT CORRECT FIELDS            */
@RF00117 DS    0H                                                  0138
*   IF DIC2GC=CTVDSPDC THEN         /* IF SPACE DESCRIPTOR FIELD   0138
*                                      RETRIEVAL                     */
         CLI   DIC2GC+372(R11),7                                   0138
         BNE   @RF00138                                            0138
*     DO;                           /* OBTAIN DESCRIPTOR FIELD       */
*       GEN(L R13,4(R13));          /* GO BACK TO GVAL CALLER AT EXIT*/
         L R13,4(R13)
*       RFY                                                        0141
*         CCARAB BASED(CCARABB);    /* VOL BASE ENTRY MAP            */
*       IF RCDID=CTGTVOL THEN       /* IF VOL ENTRY RCD      @Y30SSRS*/
         L     @10,CCARABB(,R11)                                   0142
         L     @10,CCACPE1(,@10)                                   0142
         CLI   RCDID(@10),C'V'                                     0142
         BNE   @RF00142                                            0142
*         DESTKCYL=CTVNOTRK;        /* SET TRACKS/CYLINDER           */
         MVC   DESTKCYL+566(2,R11),CTVNOTRK+48(@10)                0143
*       ELSE                                                       0144
*         ;                         /* NOT VOL ENTRY RCD             */
@RF00142 DS    0H                                                  0145
*       RFY                                                        0145
*         CCARAB BASED(CCAURAB);    /* ORGINAL BASE                  */
*       DESCRIPT=DESCRIPT&&DESCRIPT;/* ZERO DESCRIPTOR WK AREA       */
         LA    @10,CCACHAIN(,R11)                                  0146
         AL    @10,@CF00059                                        0146
         XC    DESCRIPT(110,@10),DESCRIPT(@10)                     0146
*       DESGVEXT=CCAGVEXT;          /* SAVE RECURSIVE CALL INFO      */
         MVC   DESGVEXT(3,@10),CCAGVEXT(R11)                       0147
*       DESDICT=CCADICT;            /* SAVE DICTIONARY INFO          */
         MVC   DESDICT(4,@10),CCADICT(R11)                         0148
*       DESNN=0;                    /* SET NO. TRKS IN EXTENT TO ZERO*/
         SLR   @05,@05                                             0149
         STH   @05,DESNN(,@10)                                     0149
*       DO WHILE DESNN=0;           /* FIND EXTENT DESCRIPTOR        */
         B     @DE00150                                            0150
@DL00150 DS    0H                                                  0151
*         DESLREL=((CCALREL-1)//DIM(CTVEXTNT))+1;/* COMPUTE EXTENT 0151
*                                      INDEX NO.             @Y30SSRS*/
         LA    @10,CCACHAIN(,R11)                                  0151
         LA    @05,1                                               0151
         LH    @15,CCALREL(,R11)                                   0151
         BCTR  @15,0                                               0151
         LR    @00,@15                                             0151
         SRDA  @00,32                                              0151
         D     @00,@CF00259                                        0151
         ALR   @00,@05                                             0151
         STH   @00,DESLREL+2(,@10)                                 0151
*         CCALREL=((CCALREL-1)/DIM(CTVEXTNT))+1;/* COMPUTE DATA SPACE
*                                      GROUP                 @Y30SSRS
*                                      SEQUENCE NUMBER               */
         LR    @00,@15                                             0152
         SRDA  @00,32                                              0152
         D     @00,@CF00259                                        0152
         ALR   @01,@05                                             0152
         STH   @01,CCALREL(,R11)                                   0152
*         CCADICT='40020806'X;      /* SET DICTIONARY INFO FOR DATA
*                                      SPACE GROUP                   */
         MVC   CCADICT(4,R11),@CB02861                             0153
*         CCAGVEXT=0;               /* INDICATE NOT RECURSIVE CALL 0154
*                                      FOR INCOMPLETE FIELD          */
*                                                                  0154
         SLR   @10,@10                                             0154
         STCM  @10,7,CCAGVEXT(R11)                                 0154
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLBA                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0155
*Z006GVAL:                                                         0155
*         CALL IGGPGVAL;            /* GET SPACE GROUP               */
Z006GVAL L     @15,@CV00038                                        0155
         BALR  @14,@15                                             0155
*         CCALREL=DESLREL+DIM(CTVEXTNT)*(CCALREL-1);/* RESET UPDATED
*                                      SEQ                   @Y30SSRS
*                                      NO.                           */
         LA    @10,CCACHAIN(,R11)                                  0156
         AL    @10,@CF00059                                        0156
         LH    @05,CCALREL(,R11)                                   0156
         BCTR  @05,0                                               0156
         SLA   @05,4                                               0156
         AH    @05,DESLREL(,@10)                                   0156
         STH   @05,CCALREL(,R11)                                   0156
*         CCAGVNC=OFF;              /* INDICATE COMPLETE FIELD     0157
*                                      RETURNED                      */
         NI    CCAGVNC(R11),B'11011111'                            0157
*         CCADICT=DESDICT;          /* RESTORE DICT INFO             */
         MVC   CCADICT(4,R11),DESDICT(@10)                         0158
*         IF CCAGVNBS=ON×CCAGVNF=ON×/* IF UNABLE TO GET SPACE        */
*             CCAGVNE=ON×CCACD1^=RCS THEN/* GROUP                    */
         TM    CCAGVNBS(R11),B'00011010'                           0159
         BNZ   @RT00159                                            0159
         CLI   CCACD1(R11),0                                       0159
         BE    @RF00159                                            0159
@RT00159 DS    0H                                                  0160
*           CALL EXIT;              /* EXIT                          */
         BAL   @14,EXIT                                            0160
*         ELSE                                                     0161
*           ;                       /* DATA SPACE GROUP GOTTEN       */
@RF00159 DS    0H                                                  0162
*         DESDSP=DSPACINF;          /* SAVE SPACE GROUP              */
         LA    @10,CCACHAIN(,R11)                                  0162
         LA    @05,2                                               0162
         ALR   @05,@10                                             0162
         L     @01,CCACPE6(,R11)                                   0162
         MVC   DESDSP(85,@05),DSPACINF(@01)                        0162
*         RFY                                                      0163
*           CTVDSPAC BASED(ADDR(DESDSP));/* MAP SPACE GROUP          */
*         IF CTVNOEXT<DESLREL THEN  /* IF EXTENT NOT EXIST           */
         SLR   @15,@15                                             0164
         IC    @15,CTVNOEXT+24(,@10)                               0164
         CH    @15,DESLREL(,@05)                                   0164
         BNL   @RF00164                                            0164
*           CCALREL=CCALREL+1;      /* TRY FOR NEXT ONE              */
         LA    @10,1                                               0165
         AH    @10,CCALREL(,R11)                                   0165
         STH   @10,CCALREL(,R11)                                   0165
*         ELSE                      /* EXTENT DESCRIPTOR EXISTS      */
*           DESTTNN=CTVEXTNT(DESLREL);/* SAVE EXTENT DESCRIPTOR      */
         B     @RC00164                                            0166
@RF00164 LA    @10,CCACHAIN(,R11)                                  0166
         LA    @05,2                                               0166
         ALR   @05,@10                                             0166
         LH    @15,DESLREL(,@05)                                   0166
         SLA   @15,2                                               0166
         ALR   @10,@15                                             0166
         MVC   DESTTNN(4,@05),CTVEXTNT+20(@10)                     0166
*       END;                        /* END FIND DESCRIPTOR           */
@RC00164 DS    0H                                                  0167
@DE00150 LA    @10,CCACHAIN(,R11)                                  0167
         LH    @10,DESNN+2(,@10)                                   0167
         LTR   @10,@10                                             0167
         BZ    @DL00150                                            0167
*       CCASRID=CCACBASE;           /* SET UP TO REGET BASE          */
*                                                                  0168
         MVC   CCASRID(3,R11),CCACBASE(R11)                        0168
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0169
*Z007GREC:                                                         0169
*       CALL IGGPGREC;              /* REGET BASE                    */
Z007GREC L     @15,@CV00037                                        0169
         BALR  @14,@15                                             0169
*       IF CCADICT='40080207'X THEN /* IF NOTRKEXT FIELD             */
         CLC   CCADICT(4,R11),@CB02868                             0170
         BNE   @RF00170                                            0170
*         DO;                       /* OBTAIN NO. TRACKS IN EXTENT   */
*           CCACPE7=ADDR(DESNN);    /* POINT TO FIELD WITH NO. TRACKS
*                                      IN EXTENT                     */
         LA    @10,2                                               0172
         LA    @05,CCACHAIN(,R11)                                  0172
         ALR   @05,@10                                             0172
         LA    @05,DESNN(,@05)                                     0172
         ST    @05,CCACPE7(,R11)                                   0172
*           CCAILNG=LENGTH(DESNN);  /* LENGTH OF FIELD               */
         ST    @10,CCAILNG(,R11)                                   0173
*         END;                      /* END OBTAIN                    */
*       ELSE                                                       0175
*         ;                         /* NOT NOTRKEXT                  */
@RF00170 DS    0H                                                  0176
*       IF CCADICT='400A0207'X THEN /* IF SNSPHD FIELD               */
         CLC   CCADICT(4,R11),@CB02869                             0176
         BNE   @RF00176                                            0176
*         DO;                       /* OBTAIN DATA SPACE GROUP     0177
*                                      SEQUENCE NO.                  */
*           DESSEQNO=((CCALREL-1)/DIM(CTVEXTNT))+1;/* COMPUTE      0178
*                                      SEQUENCE NO.          @Y30SSRS*/
         LA    @10,2                                               0178
         LA    @05,CCACHAIN(,R11)                                  0178
         ALR   @05,@10                                             0178
         LH    @00,CCALREL(,R11)                                   0178
         BCTR  @00,0                                               0178
         SRDA  @00,32                                              0178
         D     @00,@CF00259                                        0178
         AL    @01,@CF00041                                        0178
         STH   @01,DESSEQNO(,@05)                                  0178
*           CCACPE7=ADDR(DESSEQNO); /* POINT TO FIELD WITH DATA SPACE
*                                      GROUP SEQUENCE NO.            */
         LA    @05,DESSEQNO(,@05)                                  0179
         ST    @05,CCACPE7(,R11)                                   0179
*           CCAILNG=LENGTH(DESSEQNO);/* LENGTH OF SEQUENCE NO. FIELD */
         ST    @10,CCAILNG(,R11)                                   0180
*         END;                      /* END OBTAIN                    */
*       ELSE                                                       0182
*         ;                         /* NOT SNSPHD                    */
@RF00176 DS    0H                                                  0183
*       IF CCADICT='40040407'X THEN /* IF EXTSTART FIELD             */
         CLC   CCADICT(4,R11),@CB02870                             0183
         BNE   @RF00183                                            0183
*         DO;                       /* OBTAIN CCHH OF EXTENT         */
*           DESCC=DESTT/DESTKCYL;   /* GET CYLINDER NO.              */
         LA    @10,CCACHAIN(,R11)                                  0185
         AL    @10,@CF00059                                        0185
         LH    @05,DESTT(,@10)                                     0185
         LH    @15,DESTKCYL+566(,R11)                              0185
         LR    @00,@05                                             0185
         SRDA  @00,32                                              0185
         DR    @00,@15                                             0185
         STH   @01,DESCC(,@10)                                     0185
*           DESHH=DESTT//DESTKCYL;  /* GET HEAD NO.                  */
         LR    @00,@05                                             0186
         SRDA  @00,32                                              0186
         DR    @00,@15                                             0186
         STH   @00,DESHH(,@10)                                     0186
*           CCACPE7=ADDR(DESCCHH);  /* POINT TO EXTENT START IN CCHH */
         LA    @10,DESCCHH(,@10)                                   0187
         ST    @10,CCACPE7(,R11)                                   0187
*           CCAILNG=LENGTH(DESCCHH);/* LENGTH OF CCHH FIELD          */
         MVC   CCAILNG(4,R11),@CF00062                             0188
*         END;                      /* END OBTAIN                    */
*       ELSE                                                       0190
*         ;                         /* NOT EXTSTART                  */
@RF00183 DS    0H                                                  0191
*       IF CCADICT='40020207'X THEN /* IF TRKSUSED FIELD             */
         CLC   CCADICT(4,R11),@CB02871                             0191
         BNE   @RF00191                                            0191
*         DO;                       /* OBTAIN TRACKS USED IN EXTENT  */
*           DESUSED=0;              /* SET TRACKS USED TO ZERO       */
         LA    @10,CCACHAIN(,R11)                                  0193
         AL    @10,@CF00059                                        0193
         SLR   @05,@05                                             0193
         STH   @05,DESUSED(,@10)                                   0193
*           CCABMFLG=0;             /* ZERO FLAG                     */
         MVI   CCABMFLG(R11),X'00'                                 0194
*           CCABMCHK=ON;            /* INDICATE CHECK                */
*           CCABMLST=ON;            /* INDICATE LAST CALL            */
         OI    CCABMCHK(R11),B'01001000'                           0196
*           CCABMTRK=DESTT;         /* SET STARTING TRACK NO.        */
         LH    @05,DESTT(,@10)                                     0197
         STH   @05,CCABMTRK(,R11)                                  0197
*           CCABMLIM=DESNN;         /* SET LIMITED NO. TRACKS        */
         LH    @10,DESNN(,@10)                                     0198
         STH   @10,CCABMLIM(,R11)                                  0198
*           DO WHILE(CCABMLIM>0&    /* SCAN UNTIL EXHAUSTED          */
*                 CCACD1=RCS);      /* IN EXTENT                     */
*                                                                  0199
         B     @DE00199                                            0199
@DL00199 DS    0H                                                  0200
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBR                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0200
*Z008BMR:                                                          0200
*             CALL IGGPBMR;         /* CALL BIT CHECK ROUTINE        */
Z008BMR  L     @15,@CV00036                                        0200
         BALR  @14,@15                                             0200
*             CCABMTRK=CCABMTRK+CCABMONN;/* INCR RELATIVE TRK NO.    */
         LH    @10,CCABMONN(,R11)                                  0201
         LH    @05,CCABMTRK(,R11)                                  0201
         ALR   @05,@10                                             0201
         STH   @05,CCABMTRK(,R11)                                  0201
*             CCABMLIM=CCABMLIM-CCABMONN;/* DECR CHECK LIMIT         */
         LH    @05,CCABMLIM(,R11)                                  0202
         SLR   @05,@10                                             0202
         STH   @05,CCABMLIM(,R11)                                  0202
*             IF CCABMOST=OFF THEN  /* IF TRKS USED                  */
         TM    CCABMOST(R11),B'10000000'                           0203
         BNZ   @RF00203                                            0203
*               DESUSED=DESUSED+CCABMONN;/* INCR TRACKS USED         */
         LA    @05,CCACHAIN(,R11)                                  0204
         AL    @05,@CF00059                                        0204
         AH    @10,DESUSED(,@05)                                   0204
         STH   @10,DESUSED(,@05)                                   0204
*             ELSE                                                 0205
*               ;                   /* TRACKS FREE                   */
@RF00203 DS    0H                                                  0206
*           END;                    /* END SCAN                      */
@DE00199 LH    @10,CCABMLIM(,R11)                                  0206
         LTR   @10,@10                                             0206
         BNP   @DC00199                                            0206
         CLI   CCACD1(R11),0                                       0206
         BE    @DL00199                                            0206
@DC00199 DS    0H                                                  0207
*           CCACPE7=ADDR(DESUSED);  /* POINT TO FIELD WITH TRKS USED */
         LA    @10,2                                               0207
         LA    @05,CCACHAIN(,R11)                                  0207
         ALR   @05,@10                                             0207
         LA    @05,DESUSED(,@05)                                   0207
         ST    @05,CCACPE7(,R11)                                   0207
*           CCAILNG=LENGTH(DESUSED);/* LENGTH OF FIELD               */
         ST    @10,CCAILNG(,R11)                                   0208
*         END;                      /* END OBTAIN                    */
*       ELSE                                                       0210
*         ;                         /* NOT TRKSUSED                  */
@RF00191 DS    0H                                                  0211
*       IF CCADICT='60030207'X THEN /* IF RELREPNO                   */
         CLC   CCADICT(4,R11),@CB02874                             0211
         BNE   @RF00211                                            0211
*         DO;                       /* OBTAIN SEQUENCE NO.           */
*           CCACPE7=ADDR(CCALREL);  /* POINT TO RELREPNO FIELD       */
         LA    @10,CCALREL(,R11)                                   0213
         ST    @10,CCACPE7(,R11)                                   0213
*           CCAILNG=LENGTH(CCALREL);/* LENGTH RELREPNO FIELD         */
         MVC   CCAILNG(4,R11),@CF00059                             0214
*         END;                      /* END OBTAIN                    */
*       ELSE                                                       0216
*         ;                         /* NOT RELREPNO                  */
@RF00211 DS    0H                                                  0217
*       IF CCADICT='C0000107'X THEN /* IF SPACEMAP FIELD             */
         CLC   CCADICT(4,R11),@CB02875                             0217
         BNE   @RF00217                                            0217
*         DO;                       /* OBTAIN RLC MAP                */
*           CCABMTRK=DESTT+DESGVEXT;/* SET RELATIVE TRK TO SCAN      */
         LA    @10,CCACHAIN(,R11)                                  0219
         AL    @10,@CF00059                                        0219
         SLR   @05,@05                                             0219
         ICM   @05,7,DESGVEXT(@10)                                 0219
         LH    @15,DESTT(,@10)                                     0219
         ALR   @15,@05                                             0219
         STH   @15,CCABMTRK(,R11)                                  0219
*           CCABMLIM=DESNN-DESGVEXT;/* SET TRACK LIMIT               */
         LCR   @05,@05                                             0220
         AH    @05,DESNN(,@10)                                     0220
         STH   @05,CCABMLIM(,R11)                                  0220
*           CCABMFLG=0;             /* ZERO BIT RTN FLAG             */
         MVI   CCABMFLG(R11),X'00'                                 0221
*           CCABMCHK=ON;            /* CHECK OPERATION               */
*           CCABMLST=ON;            /* INDICATE LAST REQUEST         */
         OI    CCABMCHK(R11),B'01001000'                           0223
*           DESPTR=ADDR(DESMAP);    /* POINT TO MAP RETURN AREA      */
         LA    @05,DESMAP(,@10)                                    0224
         ST    @05,DESPTR(,@10)                                    0224
*           DESLEN=0;               /* SET MAP LENGTH TO ZERO        */
         SLR   @05,@05                                             0225
         STH   @05,DESLEN(,@10)                                    0225
*           DO WHILE(CCABMLIM>0&DESLEN<RLCSZ/* TRANSLATE RLC'S WHILE */
*                 &CCACD1=RCS);     /* BIT MAP EXTENT EXISTS AND ROOM
*                                      IN RLC FIELD                  */
*                                                                  0226
         B     @DE00226                                            0226
@DL00226 DS    0H                                                  0227
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBR                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0227
*Z009BMR:                                                          0227
*             CALL IGGPBMR;         /* CALL BIT MANIPULATION RTN     */
Z009BMR  L     @15,@CV00036                                        0227
         BALR  @14,@15                                             0227
*             IF CCABMTRK=DESTT&CCABMOST=ON THEN/* IF FIRST CALL AND
*                                      FREE RLC FIRST                */
         LA    @10,CCACHAIN(,R11)                                  0228
         AL    @10,@CF00059                                        0228
         CLC   CCABMTRK(2,R11),DESTT(@10)                          0228
         BNE   @RF00228                                            0228
         TM    CCABMOST(R11),B'10000000'                           0228
         BNO   @RF00228                                            0228
*               DO;                 /* CREATE DUMMY UNAVAIL RLC      */
*                 DESRLC1=0;        /* SET ZERO UNAVAILABLE TRKS     */
         L     @05,DESPTR(,@10)                                    0230
         MVI   DESRLC1(@05),X'00'                                  0230
*                 DESPTR=DESPTR+1;  /* ONE BYTE RLC WITH ZERO      0231
*                                      UNAVAILABLE                   */
         LA    @15,1                                               0231
         ALR   @05,@15                                             0231
         ST    @05,DESPTR(,@10)                                    0231
*                 DESLEN=DESLEN+1;  /* SPACE RLC MAP LENGTH          */
         AH    @15,DESLEN(,@10)                                    0232
         STH   @15,DESLEN(,@10)                                    0232
*               END;                /* END CREATE                    */
*             ELSE                                                 0234
*               ;                   /* NOT FIRST CALL                */
@RF00228 DS    0H                                                  0235
*             CCABMTRK=CCABMTRK+CCABMONN;/* SET UP TRK TO SCAN FOR 0235
*                                      NEXT CALL TO BIT RTN          */
         LH    @10,CCABMONN(,R11)                                  0235
         LH    @05,CCABMTRK(,R11)                                  0235
         ALR   @05,@10                                             0235
         STH   @05,CCABMTRK(,R11)                                  0235
*             CCABMLIM=CCABMLIM-CCABMONN;/* DECR SCAN LIMIT          */
         LH    @15,CCABMLIM(,R11)                                  0236
         SLR   @15,@10                                             0236
         STH   @15,CCABMLIM(,R11)                                  0236
*             CCAGVEXT=CCABMTRK-DESTT;/* RESET NO. TRKS SCANNED      */
         LA    @15,CCACHAIN(,R11)                                  0237
         AL    @15,@CF00059                                        0237
         SH    @05,DESTT(,@15)                                     0237
         STCM  @05,7,CCAGVEXT(R11)                                 0237
*             IF CCABMONN>RLCTYPE THEN/* IF 3-BYTE RLC       @Y30SSRS*/
         C     @10,@CF00246                                        0238
         BNH   @RF00238                                            0238
*               DO;                 /* CREATE 3-BYTE RLC             */
*                 DESRLCD=RLC3BCD;  /* SET 3-BYTE RLC CODE           */
         L     @05,DESPTR(,@15)                                    0240
         MVI   DESRLCD(@05),X'FD'                                  0240
*                 DESRLCT=CCABMONN; /* SET TRACK COUNT               */
         STCM  @10,3,DESRLCT(@05)                                  0241
*                 DESLEN=DESLEN+LENGTH(DESRLC3);/* INCR FIELD LENGTH */
         LA    @10,3                                               0242
         LH    @14,DESLEN(,@15)                                    0242
         ALR   @14,@10                                             0242
         STH   @14,DESLEN(,@15)                                    0242
*                 DESPTR=DESPTR+LENGTH(DESRLC3);/* INCR FIELD PTR    */
         ALR   @05,@10                                             0243
         ST    @05,DESPTR(,@15)                                    0243
*               END;                /* END CREATE                    */
*             ELSE                  /* ONE-BYTE RLC                  */
*               DO;                 /* CREATE 1-BYTE RLC             */
         B     @RC00238                                            0245
@RF00238 DS    0H                                                  0246
*                 DESRLC1=CCABMONN; /* SET TRACK COUNT               */
         LA    @10,CCACHAIN(,R11)                                  0246
         AL    @10,@CF00059                                        0246
         L     @05,DESPTR(,@10)                                    0246
         MVC   DESRLC1(1,@05),CCABMONN+1(R11)                      0246
*                 DESLEN=DESLEN+LENGTH(DESRLC1);/* INCR FIELD LENGTH */
         LA    @15,1                                               0247
         LH    @14,DESLEN(,@10)                                    0247
         ALR   @14,@15                                             0247
         STH   @14,DESLEN(,@10)                                    0247
*                 DESPTR=DESPTR+LENGTH(DESRLC1);/* INCR FIELD PTR    */
         ALR   @05,@15                                             0248
         ST    @05,DESPTR(,@10)                                    0248
*               END;                /* END CREATE                    */
*           END;                    /* END TRANSLATE                 */
@RC00238 DS    0H                                                  0250
@DE00226 LH    @10,CCABMLIM(,R11)                                  0250
         LTR   @10,@10                                             0250
         BNP   @DC00226                                            0250
         LA    @10,CCACHAIN(,R11)                                  0250
         LH    @10,DESLEN+2(,@10)                                  0250
         C     @10,@CF00144                                        0250
         BNL   @DC00226                                            0250
         CLI   CCACD1(R11),0                                       0250
         BE    @DL00226                                            0250
@DC00226 DS    0H                                                  0251
*           IF CCABMLIM<=0 THEN     /* IF COMPLETE EXTENT DONE       */
         SLR   @10,@10                                             0251
         CH    @10,CCABMLIM(,R11)                                  0251
         BL    @RF00251                                            0251
*             DO;                   /* INDICATE NO RETURN            */
*               CCAGVEXT=0;         /* INDICATE COMPLETE             */
         STCM  @10,7,CCAGVEXT(R11)                                 0253
*             END;                  /* END INDICATE                  */
*           ELSE                    /* EXTENT SCAN NOT DONE          */
*             CCAGVNC=ON;           /* INDICATE FIELD INCOMPLETE     */
         B     @RC00251                                            0255
@RF00251 OI    CCAGVNC(R11),B'00100000'                            0255
*           CCACPE7=ADDR(DESLEN);   /* POINT TO RLC FIELD            */
@RC00251 LA    @10,2                                               0256
         LA    @05,CCACHAIN(,R11)                                  0256
         ALR   @05,@10                                             0256
         LA    @15,DESLEN(,@05)                                    0256
         ST    @15,CCACPE7(,R11)                                   0256
*           CCAILNG=DESLEN+LENGTH(DESLEN);/* SET RLC FIELD LENGTH    */
         AH    @10,DESLEN(,@05)                                    0257
         ST    @10,CCAILNG(,R11)                                   0257
*         END;                      /* END OBTAIN RLC FIELD          */
*       ELSE                                                       0259
*         ;                         /* NOT SPACE MAP FIELD           */
@RF00217 DS    0H                                                  0260
*       CALL EXIT;                  /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0260
*     END;                          /* END OBTAIN DESCRIPTOR         */
*   ELSE                                                           0262
*     ;                             /* NOT DESCRIPTOR FIELD          */
@RF00138 DS    0H                                                  0263
*   IF DIC2GC=CTVDSDGC THEN         /* IF DIRECTORY GROUP FIELD    0263
*                                      REQUESTED                     */
         CLI   DIC2GC+372(R11),8                                   0263
         BNE   @RF00263                                            0263
*     DO;                           /* OBTAIN DIRECTORY FIELD        */
*       IF CCADICT='40020308'X×     /* IF DATA SET CI NO. OR         */
*           CCADICT='60030208'X×    /* SEQUENCE NO. OR       @Y30SSRS*/
*           CCADICT='40050408'X×    /* TIMESTAMP OR          @Y30SSRS*/
*           CCADICT='40090308'X THEN/* SUM TT                @Y30SSRS*/
         CLC   CCADICT(4,R11),@CB02878                             0265
         BE    @RT00265                                            0265
         CLC   CCADICT(4,R11),@CB02879                             0265
         BE    @RT00265                                            0265
         CLC   CCADICT(4,R11),@CB02880                             0265
         BE    @RT00265                                            0265
         CLC   CCADICT(4,R11),@CB02881                             0265
         BNE   @RF00265                                            0265
@RT00265 DS    0H                                                  0266
*         DO;                       /* RETRIEVE FIELD                */
*           CALL EXIT;              /* END RETRIEVE                  */
         BAL   @14,EXIT                                            0267
*         END;                      /* END RETRIEVE                  */
*       ELSE                                                       0269
*         ;                         /* NOT CORRECT FIELD             */
@RF00265 DS    0H                                                  0270
*       DSDAREA=DSDAREA&&DSDAREA;   /* ZERO DIRECTORY WORK AREA      */
         LA    @10,CCACHAIN(,R11)                                  0270
         AL    @10,@CF00055                                        0270
         XC    DSDAREA(103,@10),DSDAREA(@10)                       0270
*       DSDDICT=CCADICT;            /* SAVE DICTIONARY INFO          */
         MVC   DSDDICT(4,@10),CCADICT(R11)                         0271
*       DSDGVEXT=CCAGVEXT;          /* SAVE RECURSIVE CALL INFO      */
         MVC   DSDGVEXT(3,@10),CCAGVEXT(R11)                       0272
*       RFY                                                        0273
*         CCARAB BASED(CCARABB);    /* MAP BASE VOL ENTRY            */
*       IF RCDID=CTGTVOL THEN       /* IF VOL ENTRY RCD      @Y30SSRS*/
         L     @10,CCARABB(,R11)                                   0274
         L     @10,CCACPE1(,@10)                                   0274
         CLI   RCDID(@10),C'V'                                     0274
         BNE   @RF00274                                            0274
*         DSDVOL=CTVOLNME(1:6);     /* SAVE VOL SERIAL               */
         MVC   DSDVOL+566(6,R11),CTVOLNME+48(@10)                  0275
*       ELSE                                                       0276
*         ;                         /* NOT VOL ENTRY RCD             */
@RF00274 DS    0H                                                  0277
*       RFY                                                        0277
*         CCARAB BASED(CCAURAB);    /* ORIGINAL BASE                 */
*       CCADICT='40020308'X;        /* SET DICT INFO TO GET CI       */
         MVC   CCADICT(4,R11),@CB02878                             0278
*       CCAGVEXT=0;                 /* FIRST CALL                    */
*                                                                  0279
         SLR   @10,@10                                             0279
         STCM  @10,7,CCAGVEXT(R11)                                 0279
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0280
*Z010GVAL:                                                         0280
*       CALL IGGPGVAL;              /* GET DIRECTORY                 */
Z010GVAL L     @15,@CV00038                                        0280
         BALR  @14,@15                                             0280
*       CCADICT=DSDDICT;            /* RESTORE DICT INFO             */
         LA    @10,CCACHAIN(,R11)                                  0281
         MVC   CCADICT(4,R11),DSDDICT+6(@10)                       0281
*       GEN(L R13,4(R13));          /* GO BACK TO GVAL CALLER AT EXIT*/
         L R13,4(R13)
*       IF CCAGVNBS=ON×CCAGVNF=ON×  /* IF UNABLE TO GET DIRECTORY    */
*           CCAGVNE=ON×CCACD1^=RCS THEN/* GROUP                      */
         TM    CCAGVNBS(R11),B'00011010'                           0283
         BNZ   @RT00283                                            0283
         CLI   CCACD1(R11),0                                       0283
         BE    @RF00283                                            0283
@RT00283 DS    0H                                                  0284
*         CALL EXIT;                /* EXIT                          */
         BAL   @14,EXIT                                            0284
*       ELSE                                                       0285
*         ;                         /* DIRECTORY GROUP GOTTEN        */
@RF00283 DS    0H                                                  0286
*       DSDCI=DSDCINO;              /* SAVE DATA SET CI NO.          */
         LA    @10,CCACHAIN(,R11)                                  0286
         AL    @10,@CF00055                                        0286
         L     @05,CCACPE7(,R11)                                   0286
         MVC   DSDCI(3,@10),DSDCINO(@05)                           0286
*       DSDLREL=CCALREL;            /* SAVE SEQUENCE NO.             */
         LH    @05,CCALREL(,R11)                                   0287
         STH   @05,DSDLREL(,@10)                                   0287
*       IF CCADICT='40020108'X THEN /* IF NODSEXT FIELD              */
         CLC   CCADICT(4,R11),@CB02886                             0288
         BNE   @RF00288                                            0288
*         DO;                       /* COMPUTE NO. EXTENTS           */
*           DSDGVEXT=HISEQNO;       /* NO DIRECTORY INFO REQD        */
         MVC   DSDGVEXT(3,@10),@CB02758                            0290
*Z011XVOL:                                                         0291
*           CALL IGGPXVOL;          /* GET COUNT OF EXTENTS          */
Z011XVOL BAL   @14,IGGPXVOL                                        0291
*           CCACPE7=ADDR(DSDEXCT)+1;/* POINT TO EXTENT COUNT         */
         LA    @10,1                                               0292
         LA    @05,CCACHAIN(,R11)                                  0292
         LA    @05,DSDEXCT+6(,@05)                                 0292
         ALR   @05,@10                                             0292
         ST    @05,CCACPE7(,R11)                                   0292
*           CCAILNG=1;              /* LENGTH OF FIELD               */
         ST    @10,CCAILNG(,R11)                                   0293
*         END;                      /* END COMPUTE                   */
*       ELSE                                                       0295
*         ;                         /* NOT NODSEXT                   */
@RF00288 DS    0H                                                  0296
*       IF CCADICT='50060108'X THEN /* IF DSDIRFLG FIELD             */
         CLC   CCADICT(4,R11),@CB02890                             0296
         BNE   @RF00296                                            0296
*         DO;                       /* DETERMINE FLAG                */
*           DSDGVEXT=HISEQNO;       /* NO DIRECTORY INFO REQD        */
         LA    @10,CCACHAIN(,R11)                                  0298
         MVC   DSDGVEXT+6(3,@10),@CB02758                          0298
*Z012XVOL:                                                         0299
*           CALL IGGPXVOL;          /* GET COUNT OF EXTENTS          */
Z012XVOL BAL   @14,IGGPXVOL                                        0299
*           CCACPE7=ADDR(DSDFLG);   /* POINT TO FLAG FIELD           */
         LA    @10,CCACHAIN(,R11)                                  0300
         AL    @10,@CF00055                                        0300
         LA    @05,DSDFLG(,@10)                                    0300
         ST    @05,CCACPE7(,R11)                                   0300
*           CCAILNG=1;              /* LENGTH OF FLAG FIELD          */
         MVC   CCAILNG(4,R11),@CF00041                             0301
*           IF DSDEXCT^=0 THEN      /* IF DATA SET HAS EXTENTS       */
         LH    @05,DSDEXCT(,@10)                                   0302
         LTR   @05,@05                                             0302
         BZ    @RF00302                                            0302
*             DSDFLG=NCANDIND;      /* INDICATE SO           @Y30SSRS*/
         MVI   DSDFLG(@10),X'00'                                   0303
*           ELSE                    /* DATA SET HAS NO EXTENTS       */
*             DSDFLAG=CANDIND;      /* INDICATE CANDIDATE            */
         B     @RC00302                                            0304
@RF00302 LA    @10,CCACHAIN(,R11)                                  0304
         MVI   DSDFLAG+6(@10),X'80'                                0304
*         END;                      /* END DETERMINE                 */
*       ELSE                                                       0306
*         ;                         /* NOT DSDIRFLG                  */
@RF00296 DS    0H                                                  0307
*       IF CCADICT='C8000108'X THEN /* IF DIRECTORY FIELD            */
@RC00296 CLC   CCADICT(4,R11),@CB02893                             0307
         BNE   @RF00307                                            0307
*         DO;                       /* GET DIRECTORY                 */
*Z013XVOL:                                                         0309
*           CALL IGGPXVOL;          /* GET DIRECTORY                 */
Z013XVOL BAL   @14,IGGPXVOL                                        0309
*           CCACPE7=ADDR(DSDLEN);   /* SET ADDR OF FIELD             */
         LA    @10,CCACHAIN(,R11)                                  0310
         AL    @10,@CF00055                                        0310
         LA    @05,DSDLEN(,@10)                                    0310
         ST    @05,CCACPE7(,R11)                                   0310
*           CCAILNG=LENGTH(VARLEN)+DSDLEN;/* FIELD LENGTH            */
         LA    @05,2                                               0311
         AH    @05,DSDLEN(,@10)                                    0311
         ST    @05,CCAILNG(,R11)                                   0311
*         END;                      /* END GET                       */
*       ELSE                                                       0313
*         ;                         /* NOT DIRECTORY FIELD           */
@RF00307 DS    0H                                                  0314
*       CCAGVNBS=OFF;               /* INDICATE BUFFER AVAIL         */
*       CCAGVNF=OFF;                /* INDICATE FOUND                */
*       CCAGVNE=OFF;                /* INDICATE EXISTENT             */
         NI    CCAGVNBS(R11),B'11100101'                           0316
*       CCADICT=DSDDICT;            /* RESTORE DICT INFO             */
         LA    @10,CCACHAIN(,R11)                                  0317
         AL    @10,@CF00055                                        0317
         MVC   CCADICT(4,R11),DSDDICT(@10)                         0317
*       CCALREL=DSDLREL;            /* RESTORE SEQ. NO.              */
         LH    @10,DSDLREL(,@10)                                   0318
         STH   @10,CCALREL(,R11)                                   0318
*       CCASRID=CCACBASE;           /* SET UP TO REGET VOL BASE      */
*                                                                  0319
         MVC   CCASRID(3,R11),CCACBASE(R11)                        0319
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0320
*Z014GREC:                                                         0320
*       CALL IGGPGREC;              /* READ VOL BASE                 */
Z014GREC L     @15,@CV00037                                        0320
         BALR  @14,@15                                             0320
*       CALL EXIT;                  /* EXIT                          */
         BAL   @14,EXIT                                            0321
*     END;                          /* END OBTAIN                    */
*   ELSE                                                           0323
*     ;                             /* NOT DIRECTORY GROUP FIELD     */
@RF00263 DS    0H                                                  0324
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0324
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPXVOL');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPXVOL'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0327
@EF00002 DS    0H                                                  0327
@ER00002 BR    @14                                                 0327
@PB00002 DS    0H                                                  0328
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0329
*/********************************************************************/
*/*                                                                  */
*/*        IGGPXVOL  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0329
*IGGPXVOL:                                                         0329
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0329
IGGPXVOL DS    0H                                                  0330
*Z015:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z015XVOL:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0330
*    (R5,                                                          0330
*     R6,                                                          0330
*     R7,                                                          0330
*     R8,                                                          0330
*     R9,                                                          0330
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z015     DS    0H                                                  0330
Z015XVOL DS    0H                                                  0331
*   RFY                                                            0331
*    (R2,                                                          0331
*     R3,                                                          0331
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA PROC  */
         LA 13,12(13)
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**                                                                    *
**   MODULE NAME =  IGGPXVOL(IGG0CLBS)                                *
**                                                                    *
**   DESCRIPTIVE NAME = OBTAIN DERIVED DATA SET DIRECTORY INFORMATION *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION CALLS IGGPXEXS TO OBTAIN THE SEQUENCE NUMBER*
**      OF EACH DATA SPACE GROUP IN WHICH THE DATA SET HAS EXTENTS    *
**      AND ALSO THE NUMBER OF THESE EXTENTS THAT THE DATA SET HAS IN *
**      THIS DATA SPACE.                                              *
**                                                                    *
**   INPUT =                                                          *
**      SAME AS IGGPGVAL (IGG0CLBA)                                   *
**                                                                    *
**   OUTPUT =                                                         *
**      SAME AS IGGPGVAL (IGG0CLBA)                                   *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0334
*   DSDCBASE=CCACBASE;              /* SAVE BASE ENTRY CI NO.        */
         LA    @10,CCACHAIN(,R11)                                  0334
         AL    @10,@CF00055                                        0334
         MVC   DSDCBASE(3,@10),CCACBASE(R11)                       0334
*   DSDGOPLN=CCAGOPLN;              /* SAVE GOP LENGTH               */
         LH    @05,CCAGOPLN(,R11)                                  0335
         STH   @05,DSDGOPLN(,@10)                                  0335
*   DSDSL=CCASL;                    /* SAVE SEQ. NO. LENGTH          */
         LH    @05,CCASL(,R11)                                     0336
         STH   @05,DSDSL(,@10)                                     0336
*   CCACBASE=DSDCI;                 /* SET BASE ENTRY CI NO.         */
         MVC   CCACBASE(3,R11),DSDCI(@10)                          0337
*   CCAGOPLN=CATGOPLN;              /* SET GOP LENGTH                */
         MVC   CCAGOPLN(2,R11),@CH00057                            0338
*   CCASL=CATSNLN;                  /* SET SEQ. NO. LENGTH           */
         MVC   CCASL(2,R11),@CH00041                               0339
*   CCARABB->CCARBU1=OFF;           /* FREE RECORD AREA              */
*   CCARABB->CCARBU2=OFF;           /* FREE RECORD AREA              */
         L     @05,CCARABB(,R11)                                   0341
         NI    CCARBU1(@05),B'10011111'                            0341
*   CCARABL->CCARBU1=OFF;           /* FREE RECORD AREA              */
*   CCARABL->CCARBU2=OFF;           /* FREE RECORD AREA              */
         L     @05,CCARABL(,R11)                                   0343
         NI    CCARBU1(@05),B'10011111'                            0343
*   DSDEXCT=0;                      /* EXTENT COUNT ON VOLUME        */
         SLR   @05,@05                                             0344
         STH   @05,DSDEXCT(,@10)                                   0344
*   DSDSEQ=DSDGVEXT;                /* SET UP SEQUENCE NO. START     */
         MVC   DSDSEQ(2,@10),DSDGVEXT+1(@10)                       0345
*   DSDPTR=ADDR(DSDDATA);           /* SET UP DIRECTORY ELT ADDR     */
         LA    @15,DSDDATA(,@10)                                   0346
         ST    @15,DSDPTR(,@10)                                    0346
*   DSDLEN=0;                       /* SET DIRECTORY LENGTH ZERO     */
         STH   @05,DSDLEN(,@10)                                    0347
*   DSDRETN=ON;                     /* START LOOP                    */
         OI    DSDRETN(@10),B'00100000'                            0348
*   DO WHILE(DSDRETN=ON&CCACD1=RCS);/* BUILD DIRECTORY               */
         B     @DE00349                                            0349
@DL00349 DS    0H                                                  0350
*     DSDSEQCT=0;                   /* EXTENT COUNT                  */
         LA    @10,CCACHAIN(,R11)                                  0350
         AL    @10,@CF00055                                        0350
         MVI   DSDSEQCT(@10),X'00'                                 0350
*     IF DSDCI=CLSCI THEN           /* IF CATALOG CI         @Y30SSRS*/
         CLC   DSDCI(3,@10),@CF00059+1                             0351
         BNE   @RF00351                                            0351
*       DO;                         /* SPECIAL PROCESS               */
*         DSDRETN=OFF;              /* INDICATE NO RETURN            */
         NI    DSDRETN(@10),B'11011111'                            0353
*         CCACBASE=DTACI;           /* SET UP FOR DATA       @Y30SSRS*/
         SLR   @10,@10                                             0354
         STCM  @10,7,CCACBASE(R11)                                 0354
*Z016XEXS:                                                         0355
*         CALL IGGPXEXS;            /* GET EXTENT COUNT              */
Z016XEXS BAL   @14,IGGPXEXS                                        0355
*         CCACBASE=IDXCI;           /* SET UP FOR INDEX      @Y30SSRS*/
         MVC   CCACBASE(3,R11),@CF00041+1                          0356
*Z017XEXS:                                                         0357
*         CALL IGGPXEXS;            /* GET EXTENT COUNT              */
Z017XEXS BAL   @14,IGGPXEXS                                        0357
*       END;                        /* END SPECIAL PROCESS           */
*     ELSE                          /* NON-CATALOG CI                */
*       DO;                         /* GET EXTENT COUNT              */
         B     @RC00351                                            0359
@RF00351 DS    0H                                                  0360
*         DSDRETN=OFF;              /* INDICATE NO RETURN            */
         LA    @10,CCACHAIN(,R11)                                  0360
         NI    DSDRETN+6(@10),B'11011111'                          0360
*Z018XEXS:                                                         0361
*         CALL IGGPXEXS;            /* GET EXTENT COUNT              */
Z018XEXS BAL   @14,IGGPXEXS                                        0361
*       END;                        /* END GET EXTENT COUNT          */
*     CCAGVNC=OFF;                  /* ASSUME COMPLETE               */
@RC00351 NI    CCAGVNC(R11),B'11011111'                            0363
*     CCAGVEXT=0;                   /* ASSUME COMPLETE               */
         SLR   @10,@10                                             0364
         STCM  @10,7,CCAGVEXT(R11)                                 0364
*     IF DSDSEQCT^=0 THEN           /* IF NON-ZERO COUNT             */
         LA    @10,CCACHAIN(,R11)                                  0365
         AL    @10,@CF00055                                        0365
         CLI   DSDSEQCT(@10),0                                     0365
         BE    @RF00365                                            0365
*       IF DSDLEN<DIRSZ THEN        /* IF ROOM IN RETURN FIELD       */
         LH    @05,DSDLEN(,@10)                                    0366
         C     @05,@CF00134                                        0366
         BNL   @RF00366                                            0366
*         DO;                       /* PUT DIRECTORY ELT INTO      0367
*                                      DIRECTORY FIELD               */
*           DSDSEQNO=DSDSEQ;        /* SET SEQ. NO.                  */
         L     @15,DSDPTR(,@10)                                    0368
         LH    @14,DSDSEQ(,@10)                                    0368
         STH   @14,DSDSEQNO(,@15)                                  0368
*           DSDEXTCT=DSDSEQCT;      /* SET EXTENT COUNT              */
         MVC   DSDEXTCT(1,@15),DSDSEQCT(@10)                       0369
*           DSDLEN=DSDLEN+LENGTH(DSDELT);/* INCR LENGTH              */
         LA    @14,3                                               0370
         ALR   @05,@14                                             0370
         STH   @05,DSDLEN(,@10)                                    0370
*           DSDPTR=DSDPTR+LENGTH(DSDELT);/* INCR ELT ADDR            */
         ALR   @15,@14                                             0371
         ST    @15,DSDPTR(,@10)                                    0371
*         END;                      /* END PUT                       */
*       ELSE                        /* NO ROOM IN RETURN FIELD       */
*         DO;                       /* SET UP FOR RETURN             */
         B     @RC00366                                            0373
@RF00366 DS    0H                                                  0374
*           CCAGVEXT=DSDSEQ;        /* SET SEQ. NO.                  */
         LA    @10,CCACHAIN(,R11)                                  0374
         AL    @10,@CF00055                                        0374
         LH    @05,DSDSEQ(,@10)                                    0374
         STCM  @05,7,CCAGVEXT(R11)                                 0374
*           DSDRETN=OFF;            /* EXIT                          */
         NI    DSDRETN(@10),B'11011111'                            0375
*           CCAGVNC=ON;             /* NOT COMPLETE FIELD            */
         OI    CCAGVNC(R11),B'00100000'                            0376
*         END;                      /* END SET UP                    */
*     ELSE                                                         0378
*       ;                           /* ZERO COUNT                    */
@RF00365 DS    0H                                                  0379
*     DSDSEQ=DSDSEQ+1;              /* INCR SEQ. NO. COUNT           */
@RC00365 LA    @10,CCACHAIN(,R11)                                  0379
         AL    @10,@CF00055                                        0379
         LA    @05,1                                               0379
         AH    @05,DSDSEQ(,@10)                                    0379
         STH   @05,DSDSEQ(,@10)                                    0379
*   END;                            /* END BUILD                     */
@DE00349 LA    @10,CCACHAIN(,R11)                                  0380
         TM    DSDRETN+6(@10),B'00100000'                          0380
         BNO   @DC00349                                            0380
         CLI   CCACD1(R11),0                                       0380
         BE    @DL00349                                            0380
@DC00349 DS    0H                                                  0381
*   CCACBASE=DSDCBASE;              /* RESTORE BASE CI               */
         LA    @10,CCACHAIN(,R11)                                  0381
         AL    @10,@CF00055                                        0381
         MVC   CCACBASE(3,R11),DSDCBASE(@10)                       0381
*   CCAGOPLN=DSDGOPLN;              /* RESTORE GOP LENGTH            */
         LH    @05,DSDGOPLN(,@10)                                  0382
         STH   @05,CCAGOPLN(,R11)                                  0382
*   CCASL=DSDSL;                    /* RESTORE SEQ. NO. LENGTH       */
         LH    @10,DSDSL(,@10)                                     0383
         STH   @10,CCASL(,R11)                                     0383
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0384
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPXEXS');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPXEXS'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0387
@EF00003 DS    0H                                                  0387
@ER00003 BR    @14                                                 0387
@PB00003 DS    0H                                                  0388
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0389
*/********************************************************************/
*/*                                                                  */
*/*        IGGPXEXS  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0389
*IGGPXEXS:                                                         0389
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0389
IGGPXEXS DS    0H                                                  0390
*Z019:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z019XEXS:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0390
*    (R5,                                                          0390
*     R6,                                                          0390
*     R7,                                                          0390
*     R8,                                                          0390
*     R9,                                                          0390
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z019     DS    0H                                                  0390
Z019XEXS DS    0H                                                  0391
*   RFY                                                            0391
*    (R2,                                                          0391
*     R3,                                                          0391
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA PROC  */
         LA 13,12(13)
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**                                                                    *
**   MODULE NAME =  IGGPXEXS(IGG0CLBS)                                *
**                                                                    *
**   DESCRIPTIVE NAME = OBTAIN DERIVED DATA SET DIRECTORY INFORMATION *
**                                                                    *
**   FUNCTION =                                                       *
**      GIVEN A DATA SPACE SEQUENCE NUMBER, THIS SUB-FUNCTION OBTAINS *
**        THE NUBER OF EXTENTS THAT THE DATA SET HAS IN THIS          *
**        DATA SPACE EXTENT.  IT ALSO INDICATES WHETHER THE DATA SET  *
**        HAS ADDITIONAL EXTENTS IN DATA SPACES WITH HIGHER SEQUENCE  *
**        NUMBERS.  TO OBTAIN THIS INFORMATION, IGGPGREC IS INVOKED   *
**        TO RETRIEVE THE DATA OR INDEX ENTRY ASSOCIATED WITH THE     *
**        DATA SET DIRECTORY AND IGGPGVAL IS CALLED TO RETRIEVE THE   *
**        EXTENT INFORMATION FROM EVERY VOLUME OCCURRENCE IN THE      *
**        DATA OR INDEX ENTRY.                                        *
**      THIS SUB-FUNCTION IS CALLED BY IGGPGVAL(IGG0CLBA) TO          *
**                                                                    *
**   INPUT =                                                          *
**      SAME AS IGGPGVAL (IGG0CLBA)                                   *
**                                                                    *
**   OUTPUT =                                                         *
**      SAME AS IGGPGVAL (IGG0CLBA)                                   *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0394
*   DSDEXIT=OFF;                    /* ENTER EXTENT SCAN LOOP        */
         LA    @10,CCACHAIN(,R11)                                  0394
         NI    DSDEXIT+6(@10),B'01111111'                          0394
*   CCASRID=CCACBASE;               /* SET UP TO GET BASE RCD        */
*                                                                  0395
         MVC   CCASRID(3,R11),CCACBASE(R11)                        0395
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLBA                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0396
*Z020GREC:                                                         0396
*   CALL IGGPGREC;                  /* CALL GET CATALOG RECORD       */
Z020GREC L     @15,@CV00037                                        0396
         BALR  @14,@15                                             0396
*   IF CCACD1=RCENT&CCAREASN=RSN4 THEN/* IF FREE RCD ERR     @Y30SSRS*/
         CLI   CCACD1(R11),8                                       0397
         BNE   @RF00397                                            0397
         CLI   CCAREASN(R11),4                                     0397
         BNE   @RF00397                                            0397
*     DO;                           /* CONTINUE PROCESS      @Y30SSRS*/
*                                                                  0398
*       /*************************************************************/
*       /*                                                           */
*       /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0399
*       CCAPROB=IGNOREIT;           /* CLEAR ERR FIELD       @Y30SSRS
*                                      FOR PARTIAL ENTRY     @Y30SSRS*/
         SLR   @10,@10                                             0399
         ST    @10,CCAPROB(,R11)                                   0399
*     END;                          /* END CONTINUE          @Y30SSRS*/
*   ELSE                                                           0401
*     ;                             /* NOT FREE RCD ERR      @Y30SSRS*/
@RF00397 DS    0H                                                  0402
*   CCALREL=1;                      /* SET FIRST SEQUENCE NO.        */
         MVC   CCALREL(2,R11),@CH00041                             0402
*   DO WHILE(DSDEXIT=OFF&CCACD1=RCS);/* SCAN EXTENT DESCRIPTORS      */
         B     @DE00403                                            0403
@DL00403 DS    0H                                                  0404
*     CCADICT='C8140303'X;          /* SET DICT INFO TO GET EXTENT 0404
*                                      INFO                          */
         MVC   CCADICT(4,R11),@CB02921                             0404
*     CCAGVEXT=0;                   /* FIRST CALL                    */
*                                                                  0405
         SLR   @10,@10                                             0405
         STCM  @10,7,CCAGVEXT(R11)                                 0405
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBA                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0406
*Z022GVAL:                                                         0406
*     CALL IGGPGVAL;                /* GET FIELD VALUE               */
Z022GVAL L     @15,@CV00038                                        0406
         BALR  @14,@15                                             0406
*     IF CCACD1=RCENT&CCAREASN=RSN4 THEN/* IF FREE RCD ERR   @Y30SSRS*/
         CLI   CCACD1(R11),8                                       0407
         BNE   @RF00407                                            0407
         CLI   CCAREASN(R11),4                                     0407
         BNE   @RF00407                                            0407
*       DO;                         /* CONTINUE PROCESS      @Y30SSRS*/
*                                                                  0408
*         /***********************************************************/
*         /*                                                         */
*         /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0409
*         CCAPROB=IGNOREIT;         /* CLEAR ERR FIELD       @Y30SSRS
*                                      FOR PARTIAL ENTRY     @Y30SSRS*/
         SLR   @10,@10                                             0409
         ST    @10,CCAPROB(,R11)                                   0409
*         CCAGVNF=ON;               /* DATA NOT FOUND        @Y30SSRS*/
         OI    CCAGVNF(R11),B'00010000'                            0410
*       END;                        /* END CONTINUE          @Y30SSRS*/
*     ELSE                                                         0412
*       ;                           /* NOT FREE RCD ERR      @Y30SSRS*/
@RF00407 DS    0H                                                  0413
*     IF CCAGVNBS=ON×CCAGVNF=ON×    /* IF UNABLE TO GET EXTENT       */
*         CCAGVNE=ON×CCACD1^=RCS THEN/* DATA                         */
         TM    CCAGVNBS(R11),B'00011010'                           0413
         BNZ   @RT00413                                            0413
         CLI   CCACD1(R11),0                                       0413
         BE    @RF00413                                            0413
@RT00413 DS    0H                                                  0414
*       DSDEXIT=ON;                 /* EXIT INDICATOR                */
         LA    @10,CCACHAIN(,R11)                                  0414
         OI    DSDEXIT+6(@10),B'10000000'                          0414
*     ELSE                          /* GOT EXTENT DATA               */
*       IF DSDVOL=VOLVOL&           /* IF CORRECT VOLUME             */
*           VOLSSWD=OFF THEN        /* OCCURRENCE                    */
         B     @RC00413                                            0415
@RF00413 L     @10,CCACPE6(,R11)                                   0415
         CLC   DSDVOL+566(6,R11),VOLVOL(@10)                       0415
         BNE   @RF00415                                            0415
         TM    VOLSSWD(@10),B'10000000'                            0415
         BNZ   @RF00415                                            0415
*         DO;                       /* SCAN EXTENT DATA              */
*           DSDEXCT=DSDEXCT+VOLNOEXT;/* INCR TOTAL NO. OF EXTENTS    */
         LA    @05,CCACHAIN(,R11)                                  0417
         AL    @05,@CF00055                                        0417
         SLR   @15,@15                                             0417
         IC    @15,VOLNOEXT(,@10)                                  0417
         AH    @15,DSDEXCT(,@05)                                   0417
         STH   @15,DSDEXCT(,@05)                                   0417
*           DSDRESID=ELN;           /* INITIALLY NO RESIDUE          */
         MVC   DSDRESID(2,@05),@CH00114                            0418
*           DSDEXIT1=OFF;           /* START EXTENT SCAN             */
         NI    DSDEXIT1(@05),B'10111111'                           0419
*           DO WHILE(DSDEXIT1=OFF&CCACD1=RCS);/* EXTENT SCAN FOR DATA
*                                      SPACE SEQ. NO.                */
         B     @DE00420                                            0420
@DL00420 DS    0H                                                  0421
*             DSDTOTAL=0;           /* EXTENT SCAN TOTAL ZERO        */
         LA    @10,CCACHAIN(,R11)                                  0421
         SLR   @05,@05                                             0421
         STH   @05,DSDTOTAL+6(,@10)                                0421
*             DO WHILE(DSDTOTAL<VARLEN);/* SCAN EACH EXTENT          */
         B     @DE00422                                            0422
@DL00422 DS    0H                                                  0423
*               IF DSDRESID=ELN THEN/* IF NO RESIDUE         @Y30SSRS*/
         LA    @10,CCACHAIN(,R11)                                  0423
         AL    @10,@CF00055                                        0423
         CLC   DSDRESID(2,@10),@CH00114                            0423
         BNE   @RF00423                                            0423
*                 DO;               /* OBTAIN SPACE SEQ. NO.         */
*                   DSDSS=DSDSEQNN; /* SAVE SPACE SEQ. NO.           */
         LH    @05,DSDTOTAL(,@10)                                  0425
         AL    @05,CCACPE7(,R11)                                   0425
         LH    @05,DSDSEQNN+2(,@05)                                0425
         STH   @05,DSDSS(,@10)                                     0425
*                 END;              /* END OBTAIN                    */
*               ELSE                /* PARTIAL EXTENT                */
*                 IF DSDRESID=ELN-1 THEN/* IF SEQ. NO. CUT IN TWO    */
         B     @RC00423                                            0427
@RF00423 LA    @10,CCACHAIN(,R11)                                  0427
         AL    @10,@CF00055                                        0427
         CLC   DSDRESID(2,@10),@CH02954                            0427
         BNE   @RF00427                                            0427
*                   DSDSS2=DSDSQNO1;/* SAVE SECOND PART              */
         LH    @05,DSDTOTAL(,@10)                                  0428
         AL    @05,CCACPE7(,R11)                                   0428
         MVC   DSDSS2(1,@10),DSDSQNO1+2(@05)                       0428
*                 ELSE                                             0429
*                   ;               /* SEQ. NO. NOT CUT IN TWO       */
@RF00427 DS    0H                                                  0430
*               IF DSDTOTAL+DSDRESID<=VARLEN THEN/* IF EXTENT      0430
*                                      DESCRIPTOR ENTIRELY WITHIN  0430
*                                      VARIABLE FIELD                */
@RC00423 LA    @10,CCACHAIN(,R11)                                  0430
         AL    @10,@CF00055                                        0430
         LH    @05,DSDTOTAL(,@10)                                  0430
         AH    @05,DSDRESID(,@10)                                  0430
         L     @01,CCACPE7(,R11)                                   0430
         ICM   @15,12,VARLEN(@01)                                  0430
         SRA   @15,16                                              0430
         CR    @05,@15                                             0430
         BH    @RF00430                                            0430
*                 IF(DSDSS-1)/DIM(CTVEXTNT)+1=DSDSEQ THEN/* IF SAME
*                                      DATA SPACE            @Y30SSRS*/
         LA    @05,1                                               0431
         LH    @00,DSDSS(,@10)                                     0431
         BCTR  @00,0                                               0431
         SRDA  @00,32                                              0431
         D     @00,@CF00259                                        0431
         ALR   @01,@05                                             0431
         CH    @01,DSDSEQ(,@10)                                    0431
         BNE   @RF00431                                            0431
*                   DSDSEQCT=DSDSEQCT+1;/* INCR COUNT OF EXTENTS     */
         SLR   @15,@15                                             0432
         IC    @15,DSDSEQCT(,@10)                                  0432
         ALR   @05,@15                                             0432
         STC   @05,DSDSEQCT(,@10)                                  0432
*                 ELSE              /* NOT SAME DATA SPACE           */
*                   IF(DSDSS-1)/DIM(CTVEXTNT)+1>DSDSEQ THEN/* IF MORE
*                                      EXTENTS TO SCAN       @Y30SSRS*/
         B     @RC00431                                            0433
@RF00431 LA    @10,CCACHAIN(,R11)                                  0433
         AL    @10,@CF00055                                        0433
         LH    @00,DSDSS(,@10)                                     0433
         BCTR  @00,0                                               0433
         SRDA  @00,32                                              0433
         D     @00,@CF00259                                        0433
         AL    @01,@CF00041                                        0433
         CH    @01,DSDSEQ(,@10)                                    0433
         BNH   @RF00433                                            0433
*                     DSDRETN=ON;   /* INDICATE RETURN NECESSARY     */
         OI    DSDRETN(@10),B'00100000'                            0434
*                   ELSE                                           0435
*                     ;             /* NO MORE EXTENTS               */
@RF00433 DS    0H                                                  0436
*               ELSE                /* PARTIAL DESCRIPTOR            */
*                 DO;               /* SET UP FOR NEXT SCAN PASS     */
         B     @RC00430                                            0436
@RF00430 DS    0H                                                  0437
*                   DSDRESID=ELN-(VARLEN-DSDTOTAL);/* SET PARTIAL  0437
*                                      RESIDUE                       */
         LA    @10,CCACHAIN(,R11)                                  0437
         AL    @10,@CF00055                                        0437
         L     @05,CCACPE7(,R11)                                   0437
         ICM   @05,12,VARLEN(@05)                                  0437
         SRA   @05,16                                              0437
         LH    @15,DSDTOTAL(,@10)                                  0437
         SLR   @15,@05                                             0437
         AL    @15,@CF00114                                        0437
         STH   @15,DSDRESID(,@10)                                  0437
*                   DSDTOTAL=VARLEN;/* INSURE EXIT                   */
         STH   @05,DSDTOTAL(,@10)                                  0438
*                 END;              /* END SET UP                    */
*               DSDTOTAL=DSDTOTAL+MIN(ELN,DSDRESID);/* INCR TOTAL  0440
*                                      SCAN EXTENT LENGTH            */
@RC00430 LA    @10,CCACHAIN(,R11)                                  0440
         AL    @10,@CF00055                                        0440
         LA    @05,20                                              0440
         LH    @15,DSDRESID(,@10)                                  0440
         LR    @14,@05                                             0440
         CR    @14,@15                                             0440
         BNH   *+6
         LR    @14,@15                                             0440
         AH    @14,DSDTOTAL(,@10)                                  0440
         STH   @14,DSDTOTAL(,@10)                                  0440
*               IF DSDRESID^=ELN&DSDTOTAL<VARLEN THEN/* IF RESIDUE   */
         CR    @15,@05                                             0441
         BE    @RF00441                                            0441
         L     @01,CCACPE7(,R11)                                   0441
         ICM   @15,12,VARLEN(@01)                                  0441
         SRA   @15,16                                              0441
         CR    @14,@15                                             0441
         BNL   @RF00441                                            0441
*                 DSDRESID=ELN;     /* RESET RESIDUE TO ZERO         */
         STH   @05,DSDRESID(,@10)                                  0442
*               ELSE                                               0443
*                 ;                 /* NO RESIDUE                    */
@RF00441 DS    0H                                                  0444
*             END;                  /* END SCAN EACH EXTENT          */
@DE00422 LA    @10,CCACHAIN(,R11)                                  0444
         L     @05,CCACPE7(,R11)                                   0444
         LH    @10,DSDTOTAL+6(,@10)                                0444
         ICM   @05,12,VARLEN(@05)                                  0444
         SRA   @05,16                                              0444
         CR    @10,@05                                             0444
         BL    @DL00422                                            0444
*             IF REPCNT=1&EXTGOCI^=0 THEN/* IF VARIABLE FIELD      0445
*                                      EXTENSION                     */
         L     @10,CCAURAB(,R11)                                   0445
         L     @10,CCACPE2(,@10)                                   0445
         CLI   REPCNT(@10),1                                       0445
         BNE   @RF00445                                            0445
         ICM   @05,7,EXTGOCI(@10)                                  0445
         BZ    @RF00445                                            0445
*               DO;                 /* GET IT                        */
*                 CCAGVEXT=EXTGOCI; /* SET EXTENSION CI NO.          */
*                                                                  0447
         MVC   CCAGVEXT(3,R11),EXTGOCI(@10)                        0447
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLBA                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0448
*Z024GVAL:                                                         0448
*                 CALL IGGPGVAL;    /* GET FIELD VALUE               */
Z024GVAL L     @15,@CV00038                                        0448
         BALR  @14,@15                                             0448
*               END;                /* END GET IT                    */
*             ELSE                  /* NO EXTENSION                  */
*               DSDEXIT1=ON;        /* EXIT                          */
         B     @RC00445                                            0450
@RF00445 LA    @10,CCACHAIN(,R11)                                  0450
         OI    DSDEXIT1+6(@10),B'01000000'                         0450
*           END;                    /* END EXTENT SCAN               */
@RC00445 DS    0H                                                  0451
@DE00420 LA    @10,CCACHAIN(,R11)                                  0451
         TM    DSDEXIT1+6(@10),B'01000000'                         0451
         BNZ   @DC00420                                            0451
         CLI   CCACD1(R11),0                                       0451
         BE    @DL00420                                            0451
@DC00420 DS    0H                                                  0452
*         END;                      /* END SCAN EXTENT DATA          */
*       ELSE                                                       0453
*         ;                         /* NOT CORRECT VOLUME            */
@RF00415 DS    0H                                                  0454
*     CCALREL=CCALREL+1;            /* END SCAN EXTENT               */
@RC00413 LA    @10,1                                               0454
         AH    @10,CCALREL(,R11)                                   0454
         STH   @10,CCALREL(,R11)                                   0454
*   END;                            /* END SCAN EXTENT               */
@DE00403 LA    @10,CCACHAIN(,R11)                                  0455
         TM    DSDEXIT+6(@10),B'10000000'                          0455
         BNZ   @DC00403                                            0455
         CLI   CCACD1(R11),0                                       0455
         BE    @DL00403                                            0455
@DC00403 DS    0H                                                  0456
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0456
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPXEXT');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPXEXT'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0459
@EF00004 DS    0H                                                  0459
@ER00004 BR    @14                                                 0459
@PB00004 DS    0H                                                  0460
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0461
*/********************************************************************/
*/*                                                                  */
*/*        IGGPXEXT  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0461
*IGGPXEXT:                                                         0461
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0461
IGGPXEXT DS    0H                                                  0462
*   GEN(ENTRY IGGPXEXT );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPXEXT
*Z025:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z025XEXT:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0463
*    (R5,                                                          0463
*     R6,                                                          0463
*     R7,                                                          0463
*     R8,                                                          0463
*     R9,                                                          0463
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z025     DS    0H                                                  0463
Z025XEXT DS    0H                                                  0464
*   RFY                                                            0464
*    (R2,                                                          0464
*     R3,                                                          0464
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE PROC  */
         SR 12,15
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**                                                                    *
**   MODULE NAME =  IGGPXEXT(IGG0CLBS)                                *
**                                                                    *
**   DESCRIPTIVE NAME = COMPLETE DERIVED PROCESSING IN EXTRACT        *
**                                                                    *
**   FUNCTION =                                                       *
**      THIS SUB-FUNCTION IS INVOKED AT THE END OF EXTRACT PROCESSING *
**      TO INSURE THAT THE NUBMER OF DATA SETS IN THE DATA SPACE      *
**      FIELD (NODSDSP) AND THE DATA SPACE HEADER FLAG FIELD IS SET   *
**      CORRECTLY (SPHDFLG).  IT DOES THIS BY SCANNING THE DIRECTORY  *
**      INFORMATION THAT HAS BEEN RETURNED IN THE USER'S WORK         *
**      AREA.  NOTE THAT TO CORRECTLY SET THE ABOVE TWO FIELDS, THE   *
**      USER MUST HAVE REQUESTED ALLL DATA SET DIRECTORY OCCURRENCES  *
**      BY THE FIELD NAME - DIRECTRY.                                 *
**                                                                    *
**   INPUT =                                                          *
**      SAME AS IGGPEXT (IGG0CLAZ)                                    *
**                                                                    *
**   OUTPUT =                                                         *
**      SAME AS IGGPEXT (IGG0CLAZ)                                    *
**                                                                    *
** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0470
*   /*****************************************************************/
*   /*                                                               */
*   /* MAPPING FOR EXTRACT TRANSLATE WORK AREA               @Y30SSRS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0470
*   DCL                                                            0470
*     1 EXTWKA BASED(ADDR(CCACHAIN)),/* EXTRACT TRANSLATE WORK AREA  */
*      2 EXTSHP PTR(31),            /* ADDR OF SPACE HEADER DATA     */
*      2 EXTSHN FIXED(31),          /* ADDR OF END OF SPACE HEADER 0470
*                                      DATA                          */
*      2 EXTDDP PTR(31),            /* ADDR OF DATA SET DIRECTORY  0470
*                                      DATA                          */
*      2 EXTDDN FIXED(31),          /* ADDR OF END OF DATA SET     0470
*                                      DIRECTORY DATA                */
*      2 EXTDDPTR PTR(31),          /* CURRENT DIRECTORY POINTER     */
*      2 EXTEND CHAR(0);            /* END EXTRACT WORK AREA         */
*   DCL                                                            0471
*     SPHDRREL FIXED(15) BASED(EXTSHP);/* MAP SEQUENCE NO.           */
*                                                                  0471
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN FOR DATA SPACE HEADER AND DIRECTORY FPLS SO THAT THE DATA*/
*   /* SPACE HEADER FLAG FIELD AND THE NUMBER OF DATA SETS IN THE    */
*   /* DATA SPACE FIELD CAN BE SET CORRECTLY                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0472
*   EXTWKA=EXTWKA&&EXTWKA;          /* ZERO WORK AREA                */
         XC    EXTWKA+566(20,R11),EXTWKA+566(R11)                  0472
*   DO CCAIXFPL=1 TO CTGNOFLD;      /* SCAN FPLS FOR SPACEHDR AND  0473
*                                      DIRECTORY FIELDS              */
         LA    @10,1                                               0473
         B     @DE00473                                            0473
@DL00473 DS    0H                                                  0474
*     CCAFLPT=CTGFIELD(CCAIXFPL);   /* SET FPL ADDRESS               */
         LH    @10,CCAIXFPL(,R11)                                  0474
         SLA   @10,2                                               0474
         L     @05,CCAXCPL(,R11)                                   0474
         L     @10,CTGFIELD-4(@10,@05)                             0474
         ST    @10,CCAFLPT(,R11)                                   0474
*     IF CCAFLPT^=0 THEN            /* CHECK FOR EXISTENT FPL        */
         LTR   @10,@10                                             0475
         BZ    @RF00475                                            0475
*       DO;                         /* CHECK FOR FIELD               */
*         IF FIELDNM='SPACEHDR' THEN/* IF SPACEHDR FIELD             */
         L     @05,CTGFLDNM(,@10)                                  0477
         CLC   FIELDNM(8,@05),@CC02943                             0477
         BNE   @RF00477                                            0477
*           DO;                     /* SAVE FIELD DATA POINTERS      */
*             EXTSHP=CTGFLPT(1);    /* BEGIN FIELD DATA              */
         LA    @05,566                                             0479
         ALR   @05,R11                                             0479
         L     @15,CTGFLPT(,@10)                                   0479
         ST    @15,EXTSHP(,@05)                                    0479
*             EXTSHN=CTGFLPT(1)+CTGFLNG(1);/* END FIELD DATA         */
         AL    @15,CTGFLNG(,@10)                                   0480
         ST    @15,EXTSHN(,@05)                                    0480
*           END;                    /* END SAVE                      */
*         ELSE                                                     0482
*           ;                       /* NOT SPACEHDR FIELD            */
@RF00477 DS    0H                                                  0483
*         IF FIELDNM='DSDIRECT' THEN/* IF DIRECTORY FIELD            */
         L     @10,CCAFLPT(,R11)                                   0483
         L     @05,CTGFLDNM(,@10)                                  0483
         CLC   FIELDNM(8,@05),@CC02944                             0483
         BNE   @RF00483                                            0483
*           DO;                     /* SAVE FIELD DATA POINTERS      */
*             EXTDDP=CTGFLPT(1);    /* BEGIN FIELD DATA              */
         LA    @05,566                                             0485
         ALR   @05,R11                                             0485
         L     @15,CTGFLPT(,@10)                                   0485
         ST    @15,EXTDDP(,@05)                                    0485
*             EXTDDN=CTGFLPT(1)+CTGFLNG(1);/* END FIELD DATA         */
         AL    @15,CTGFLNG(,@10)                                   0486
         ST    @15,EXTDDN(,@05)                                    0486
*           END;                    /* END SAVE                      */
*         ELSE                                                     0488
*           ;                       /* NOT DIRECTORY FIELD           */
@RF00483 DS    0H                                                  0489
*       END;                        /* END CHECK                     */
*     ELSE                                                         0490
*       ;                           /* NOT EXISTENT FPL              */
@RF00475 DS    0H                                                  0491
*   END;                            /* END SCAN                      */
         LA    @10,1                                               0491
         AH    @10,CCAIXFPL(,R11)                                  0491
@DE00473 STH   @10,CCAIXFPL(,R11)                                  0491
         L     @05,CCAXCPL(,R11)                                   0491
         SLR   @15,@15                                             0491
         IC    @15,CTGNOFLD(,@05)                                  0491
         CR    @10,@15                                             0491
         BNH   @DL00473                                            0491
*   IF EXTSHP=0 THEN                /* CHECK WHETHER THE SPACE HEADER
*                                      FIELDS WERE NOT FOUND         */
         L     @10,EXTSHP+566(,R11)                                0492
         LTR   @10,@10                                             0492
         BNZ   @RF00492                                            0492
*     CALL EXIT;                    /* EXIT, IF NOT FOUND            */
         BAL   @14,EXIT                                            0493
*   ELSE                                                           0494
*     ;                             /* FIELDS WERE FOUND             */
@RF00492 DS    0H                                                  0495
*   RFY                                                            0495
*     CTVSPHDR BASED(EXTSHP);       /* MAP SPACE HEADER              */
*   RFY                                                            0496
*     CTVDSGRP BASED(EXTDDPTR);     /* MAP DIRECTORY                 */
*   DO WHILE(EXTSHP<EXTSHN);        /* SCAN ALL SPACE HEADERS        */
         B     @DE00497                                            0497
@DL00497 DS    0H                                                  0498
*     CTVSPNDS=0;                   /* INITIALLY ZERO DATA SETS IN 0498
*                                      DATA SPACE                    */
         LA    @10,566                                             0498
         ALR   @10,R11                                             0498
         L     @05,EXTSHP(,@10)                                    0498
         SLR   @15,@15                                             0498
         STCM  @15,3,CTVSPNDS(@05)                                 0498
*     EXTDDPTR=EXTDDP;              /* POINT TO FIRST DIRECTORY      */
         L     @05,EXTDDP(,@10)                                    0499
         ST    @05,EXTDDPTR(,@10)                                  0499
*     DO WHILE(EXTDDPTR<EXTDDN);    /* SCAN ALL DIRECTORIES          */
         B     @DE00500                                            0500
@DL00500 DS    0H                                                  0501
*       DO R2=1 TO CTVDSXCT/LENGTH(CTVDSDIR);/* SCAN EACH DIRECTORY  */
         LA    R2,1                                                0501
         B     @DE00501                                            0501
@DL00501 DS    0H                                                  0502
*         IF CTVSPSSN(R2)=SPHDRREL& /* IF DATA SET HAS EXTENT        */
*             CTVSPSXC(R2)^=0 THEN  /* IN DATA SPACE                 */
         LR    @10,R2                                              0502
         MH    @10,@CH00418                                        0502
         LA    @05,566                                             0502
         ALR   @05,R11                                             0502
         L     @15,EXTDDPTR(,@05)                                  0502
         L     @05,EXTSHP(,@05)                                    0502
         ST    @10,@TF00001                                        0502
         ALR   @10,@15                                             0502
         ICM   @10,12,CTVSPSSN-3(@10)                              0502
         SRA   @10,16                                              0502
         CH    @10,SPHDRREL(,@05)                                  0502
         BNE   @RF00502                                            0502
         L     @10,@TF00001                                        0502
         SLR   @14,@14                                             0502
         IC    @14,CTVSPSXC-3(@10,@15)                             0502
         C     @14,@CF00066                                        0502
         BE    @RF00502                                            0502
*           DO;                     /* INDICATE THIS                 */
*             CTVSPNDS=CTVSPNDS+1;  /* INCR SPACE HEADER COUNT OF  0504
*                                      DATA SETS                     */
         LA    @10,1                                               0504
         ICM   @14,12,CTVSPNDS(@05)                                0504
         SRA   @14,16                                              0504
         ALR   @10,@14                                             0504
         STCM  @10,3,CTVSPNDS(@05)                                 0504
*             IF CTVDSCID=CDSN THEN /* IF CATALOG DIRECTORY          */
         CLC   CTVDSCID(3,@15),@CF00059+1                          0505
         BNE   @RF00505                                            0505
*               IF CAXMCT=ON THEN   /* IF MASTER CATALOG             */
         L     @10,CCAACB(,R11)                                    0506
         L     @10,ACBUAPTR(,@10)                                  0506
         TM    CAXMCT(@10),B'00000100'                             0506
         BNO   @RF00506                                            0506
*                 CTVSPMCT=ON;      /* INDICATE MASTER CATALOG IN  0507
*                                      SPACE                         */
         OI    CTVSPMCT(@05),B'00010000'                           0507
*               ELSE                /* USER CATALOG                  */
*                 CTVSPUCT=ON;      /* INDICATE USER CATALOG IN SPACE*/
         B     @RC00506                                            0508
@RF00506 L     @10,EXTSHP+566(,R11)                                0508
         OI    CTVSPUCT(@10),B'00100000'                           0508
*             ELSE                                                 0509
*               ;                   /* NOT CATALOG DIRECTORY         */
@RF00505 DS    0H                                                  0510
*           END;                    /* END INDICATE                  */
*         ELSE                                                     0511
*           ;                       /* DATA SET NOT HAVE EXTENT IN 0511
*                                      DATA SPACE                    */
@RF00502 DS    0H                                                  0512
*       END;                        /* END SCAN                      */
@RC00502 AL    R2,@CF00041                                         0512
@DE00501 L     @10,EXTDDPTR+566(,R11)                              0512
         ICM   @01,12,CTVDSXCT(@10)                                0512
         SRA   @01,16                                              0512
         SLR   @00,@00                                             0512
         D     @00,@CF00418                                        0512
         CR    R2,@01                                              0512
         BNH   @DL00501                                            0512
*       EXTDDPTR=EXTDDPTR+LENGTH(CTVDSGRP)/* POINT TO NEXT           */
*           +CTVDSXCT;              /* DIRECTORY                     */
         LA    @10,566                                             0513
         ALR   @10,R11                                             0513
         L     @05,EXTDDPTR(,@10)                                  0513
         LA    @15,9                                               0513
         ALR   @15,@05                                             0513
         ICM   @05,12,CTVDSXCT(@05)                                0513
         SRA   @05,16                                              0513
         ALR   @15,@05                                             0513
         ST    @15,EXTDDPTR(,@10)                                  0513
*     END;                          /* END SCAN                      */
@DE00500 LA    @10,566                                             0514
         ALR   @10,R11                                             0514
         L     @05,EXTDDPTR(,@10)                                  0514
         C     @05,EXTDDN(,@10)                                    0514
         BL    @DL00500                                            0514
*     EXTSHP=EXTSHP+LENGTH(CTVSPHDR);/* POINT TO NEXT SPACE HEADER   */
         LA    @05,23                                              0515
         AL    @05,EXTSHP(,@10)                                    0515
         ST    @05,EXTSHP(,@10)                                    0515
*   END;                            /* END SCAN                      */
@DE00497 LA    @10,566                                             0516
         ALR   @10,R11                                             0516
         L     @05,EXTSHP(,@10)                                    0516
         C     @05,EXTSHN(,@10)                                    0516
         BL    @DL00497                                            0516
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0517
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0518
@EF00005 DS    0H                                                  0518
@ER00005 BR    @14                                                 0518
@PB00005 DS    0H                                                  0519
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0520
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0520
*EXIT:                                                             0520
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0520
EXIT     DS    0H                                                  0521
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0524
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00006 DS    0H                                                  0525
@EF00006 DS    0H                                                  0525
@ER00006 BR    @14                                                 0525
*   END                                                            0526
*                                                                  0526
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IGGMVEDC)                                       */
*                                                                  0526
*       ;                                                          0526
@EL00001 DS    0H                                                  0526
@EF00001 DS    0H                                                  0526
@ER00001 BR    @14                                                 0526
@DATA    DS    0H
@CH00057 DC    H'5'
@CH02954 DC    H'19'
@CH02847 DC    XL2'7FFF'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
IGG0CLBS CSECT
         DS    0F
@CF00066 DC    F'0'
@CF00041 DC    F'1'
@CH00041 EQU   @CF00041+2
@CF00059 DC    F'2'
@CF00418 DC    F'3'
@CH00418 EQU   @CF00418+2
@CF00062 DC    F'4'
@CF00055 DC    F'6'
@CF00259 DC    F'16'
@CF00114 DC    F'20'
@CH00114 EQU   @CF00114+2
@CF00134 DC    F'60'
@CF00144 DC    F'80'
@CF00246 DC    F'250'
@CF02849 DC    XL4'75'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLBS CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00036 DC    V(IGGPBMR)
@CV00037 DC    V(IGGPGREC)
@CV00038 DC    V(IGGPGVAL)
@CV00039 DC    V(IGGPSGOP)
         DS    0D
@CC02943 DC    C'SPACEHDR'
@CC02944 DC    C'DSDIRECT'
@CB02851 DC    X'007B0280'
@CB02852 DC    X'007D0280'
@CB02861 DC    X'40020806'
@CB02868 DC    X'40080207'
@CB02869 DC    X'400A0207'
@CB02870 DC    X'40040407'
@CB02871 DC    X'40020207'
@CB02874 DC    X'60030207'
@CB02875 DC    X'C0000107'
@CB02878 DC    X'40020308'
@CB02879 DC    X'60030208'
@CB02880 DC    X'40050408'
@CB02881 DC    X'40090308'
@CB02886 DC    X'40020108'
@CB02890 DC    X'50060108'
@CB02893 DC    X'C8000108'
@CB02921 DC    X'C8140303'
@CB02758 DC    X'007FFE'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAFLG2  EQU   IGGCCA+15
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAGVNC  EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCACMS   EQU   IGGCCA+316
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAGOPLN EQU   IGGCCA+356
CCASL    EQU   IGGCCA+358
CCAILNG  EQU   IGGCCA+360
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCARABB  EQU   IGGCCA+380
CCARABL  EQU   IGGCCA+388
CCACBASE EQU   IGGCCA+392
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCAIXFPL EQU   IGGCCA+402
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGVCT  EQU   IGGCCA+484
CCAGVEXT EQU   IGGCCA+488
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCACHAIN EQU   IGGCCA+566
CCABMINP EQU   IGGCCA+684
CCABMTRK EQU   CCABMINP
CCABMLIM EQU   CCABMINP+2
CCABMFLG EQU   CCABMINP+6
CCABMCHK EQU   CCABMFLG
CCABMLST EQU   CCABMFLG
CCABMOUT EQU   IGGCCA+692
CCABMONN EQU   CCABMOUT
CCABMOFG EQU   CCABMOUT+4
CCABMOST EQU   CCABMOFG
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFLGS EQU   CCAMNAT+240
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
FIELDNM  EQU   0
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
DIC2GC   EQU   DIC2ENT+3
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCARBU1  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
EXTGOCI  EQU   EXTRCDPT
REPCNT   EQU   REPCNTRL+5
VARFIELD EQU   0
VARLEN   EQU   VARFIELD
CNTRLINF EQU   0
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXMCT   EQU   CAXFLGS
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
CTVOLRCD EQU   1
CTVOLNME EQU   CTVOLRCD
CTVDVCHR EQU   CTVOLRCD+52
CTVNOTRK EQU   CTVDVCHR+10
CTVDVFLG EQU   CTVDVCHR+17
CTVSPHDR EQU   0
CTVSPFLG EQU   CTVSPHDR+15
CTVSPUCT EQU   CTVSPFLG
CTVSPMCT EQU   CTVSPFLG
CTVSPNDS EQU   CTVSPHDR+16
CTVDESGP EQU   0
CTVEXTST EQU   CTVDESGP+4
CTVSTDES EQU   CTVEXTST
CTVDSGRP EQU   0
CTVDSCID EQU   CTVDSGRP+3
CTVDSDFL EQU   CTVDSGRP+6
CTVDSXCT EQU   CTVDSGRP+7
CTVDSDIR EQU   CTVDSGRP+9
CTVSPSSN EQU   CTVDSDIR
CTVSPSXC EQU   CTVDSDIR+2
CTVGOPT  EQU   0
CTVGOCI  EQU   CTVGOPT
CTVGOGCI EQU   CTVGOPT+3
CTVRCTRL EQU   0
CTVEXRPT EQU   CTVRCTRL
CTVSPMAP EQU   0
CTVSMSN  EQU   CTVSPMAP
CTVDSPAC EQU   0
CTVDSPSN EQU   CTVDSPAC
CTVDSPFG EQU   CTVDSPAC+15
CTVNOEXT EQU   CTVDSPAC+16
CTVSPEXT EQU   CTVDSPAC+21
CTVEXTNT EQU   CTVSPEXT
CTVDIR   EQU   0
CTVDSDSN EQU   CTVDIR
CTVDEXTN EQU   0
DSPACINF EQU   0
DESCRIPT EQU   0
DESPTR   EQU   DESCRIPT
DESDICT  EQU   DESCRIPT+4
DESLREL  EQU   DESCRIPT+8
DESUSED  EQU   DESCRIPT+10
DESCCHH  EQU   DESCRIPT+12
DESCC    EQU   DESCCHH
DESHH    EQU   DESCCHH+2
DESSEQNO EQU   DESCRIPT+16
DESTTNN  EQU   DESCRIPT+18
DESTT    EQU   DESTTNN
DESNN    EQU   DESTTNN+2
DESDSP   EQU   DESCRIPT+22
DESLEN   EQU   DESDSP
DESMAP   EQU   DESDSP+2
DESGVEXT EQU   DESCRIPT+107
DESTKCYL EQU   0
DESRLC3  EQU   0
DESRLCD  EQU   DESRLC3
DESRLCT  EQU   DESRLC3+1
DESRLC1  EQU   0
DSDCINO  EQU   0
DSDAREA  EQU   0
DSDCI    EQU   DSDAREA
DSDGVEXT EQU   DSDAREA+3
DSDFLG   EQU   DSDAREA+7
DSDDICT  EQU   DSDAREA+8
DSDPTR   EQU   DSDAREA+12
DSDIRECT EQU   DSDAREA+16
DSDLEN   EQU   DSDIRECT
DSDDATA  EQU   DSDIRECT+2
DSDGOPLN EQU   DSDAREA+82
DSDSL    EQU   DSDAREA+84
DSDLREL  EQU   DSDAREA+86
DSDEXCT  EQU   DSDAREA+88
DSDRESID EQU   DSDAREA+90
DSDTOTAL EQU   DSDAREA+92
DSDSEQ   EQU   DSDAREA+94
DSDSS    EQU   DSDAREA+96
DSDSS2   EQU   DSDSS+1
DSDCBASE EQU   DSDAREA+98
DSDSEQCT EQU   DSDAREA+101
DSDFLAG  EQU   DSDAREA+102
DSDEXIT  EQU   DSDFLAG
DSDEXIT1 EQU   DSDFLAG
DSDRETN  EQU   DSDFLAG
DSDVOL   EQU   0
DSDELT   EQU   0
DSDSEQNO EQU   DSDELT
DSDEXTCT EQU   DSDELT+2
VOL      EQU   0
VOLVOL   EQU   VOL+6
VOLNOEXT EQU   VOL+15
VOLIND   EQU   VOL+36
VOLSSWD  EQU   VOLIND
DSDSEQNN EQU   0
DSDSQNO1 EQU   DSDSEQNN
EXTWKA   EQU   0
EXTSHP   EQU   EXTWKA
EXTSHN   EQU   EXTWKA+4
EXTDDP   EQU   EXTWKA+8
EXTDDN   EQU   EXTWKA+12
EXTDDPTR EQU   EXTWKA+16
SPHDRREL EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
TNAM     EQU   0
@NM00035 EQU   CTGDDNM
CTGPROB  EQU   @NM00035
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00085 EQU   MCATDSTR+1
@NM00084 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
EXTEND   EQU   EXTWKA+20
DSDSQNO2 EQU   DSDSEQNN+1
@NM00106 EQU   VOLIND
@NM00105 EQU   VOL+16
@NM00104 EQU   VOL+12
@NM00103 EQU   VOL
DSDEND   EQU   DSDAREA+103
DSDSS1   EQU   DSDSS
@NM00102 EQU   DSDAREA+6
DESEND   EQU   DESCRIPT+110
CTVDRSTT EQU   CTVDEXTN+4
CTVDIRTS EQU   CTVDEXTN
CTVDSDCI EQU   CTVDIR+2
CTVDSDLF EQU   CTVDSDSN+1
CTVDSDCV EQU   CTVDSDSN
CTVEXTNN EQU   CTVEXTNT+2
CTVEXTT  EQU   CTVEXTNT
CTVSQT   EQU   CTVDSPAC+18
CTVSPOPT EQU   CTVDSPAC+17
@NM00101 EQU   CTVDSPFG
CTVCATDF EQU   CTVDSPFG
@NM00100 EQU   CTVDSPFG
CTVAUTO  EQU   CTVDSPFG
CTVUNIQ  EQU   CTVDSPFG
CTVF1PTR EQU   CTVDSPAC+10
CTVF1TME EQU   CTVDSPAC+2
CTVDSPLF EQU   CTVDSPSN+1
CTVDSPCV EQU   CTVDSPSN
CTVSMBIT EQU   CTVSPMAP+4
CTVSMLEN EQU   CTVSPMAP+2
CTVSMLF  EQU   CTVSMSN+1
CTVSMCV  EQU   CTVSMSN
CTVEGOPT EQU   CTVRCTRL+6
CTVEXRCT EQU   CTVRCTRL+5
@NM00099 EQU   CTVEXRPT+3
CTVEXGCI EQU   CTVEXRPT
CTVGOSEQ EQU   CTVGOPT+4
CTVGOGC  EQU   CTVGOGCI
CTVGODEL EQU   CTVGOGCI
CTVGOEXT EQU   CTVGOGCI
CTVGODSP EQU   CTVGOCI+1
CTVGOFLG EQU   CTVGOCI
@NM00098 EQU   CTVDSDFL
CTVDSDCN EQU   CTVDSDFL
CTVDSNEX EQU   CTVDSGRP+2
CTVDSGLF EQU   CTVDSGRP+1
CTVDSGCV EQU   CTVDSGRP
CTVMAP   EQU   CTVDESGP+14
CTVMAPLN EQU   CTVDESGP+12
CTVDESHD EQU   CTVDESGP+10
CTVDESTK EQU   CTVDESGP+8
CTVSTHH  EQU   CTVSTDES+2
CTVSTCC  EQU   CTVSTDES
CTVDESUU EQU   CTVDESGP+2
CTVDESLF EQU   CTVDESGP+1
CTVDESCV EQU   CTVDESGP
CTVSPSQT EQU   CTVSPHDR+20
CTVSPSPO EQU   CTVSPHDR+19
CTVSPNEX EQU   CTVSPHDR+18
@NM00097 EQU   CTVSPFLG
CTVSPCDF EQU   CTVSPFLG
CTVSPAUT EQU   CTVSPFLG
CTVSPUNQ EQU   CTVSPFLG
CTVF1ADR EQU   CTVSPHDR+10
CTVF1TIM EQU   CTVSPHDR+2
CTVSPHLF EQU   CTVSPHDR+1
CTVSPHCV EQU   CTVSPHDR
@NM00096 EQU   CTVOLRCD+74
CTVSYEDS EQU   CTVOLRCD+73
CTVOLFLG EQU   CTVOLRCD+72
CTVTLFAC EQU   CTVDVCHR+18
CTVTLFLG EQU   CTVDVFLG
@NM00095 EQU   CTVDVFLG
CTVBONK  EQU   CTVDVCHR+16
CTVBKLB  EQU   CTVDVCHR+15
CTVBKNLB EQU   CTVDVCHR+14
CTVTRKSZ EQU   CTVDVCHR+12
CTVNOCYL EQU   CTVDVCHR+8
CTVMXBLK EQU   CTVDVCHR+4
CTVDEVTY EQU   CTVDVCHR
CTVOLTIM EQU   CTVOLRCD+44
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00094 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00093 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00092 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00091 EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00090 EQU   COPTS
CENLST   EQU   COPTS
@NM00089 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00088 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00087 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00086 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00083 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00082 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00081 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00080 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00079 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00078 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00077 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00076 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00075 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00074 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00049 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBRSV48 EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00048 EQU   TCB+296
TCBSCBQ  EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBRSV36 EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBRSV35 EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00047 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBRSV04 EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00046 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00045 EQU   CVTFIX+248
@NM00044 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
LENFIX   EQU   CNTRLINF+1
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
REPGOPT  EQU   REPCNTRL+6
@NM00043 EQU   EXTRCDPT+3
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00042 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
RCDCINO  EQU   CATRCD+1
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00041 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00040 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00039 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00038 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00037 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN2  EQU   USERWKA+2
WKALEN1  EQU   USERWKA
CTGFLCHN EQU   CTGFL+12
CTGFLDTS EQU   CTGFLDRE
@NM00036 EQU   CTGFLDRE
CTGFLDCD EQU   CTGFL+1
CTGFLDNO EQU   CTGFL
CTGPSWD  EQU   CTGJSCB
@NM00034 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
CTGTYPE  EQU   CTGPL+18
@NM00033 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00032 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00031 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1492
CCADGDGA EQU   IGGCCA+1488
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00030 EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00029 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCACUMPL EQU   IGGCCA+1412
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00028 EQU   CCAREGS
@NM00027 EQU   IGGCCA+1057
@NM00026 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNADR EQU   CCAMNCAT+252
CCAMNLEN EQU   CCAMNCAT+249
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00025 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00024 EQU   CCAMNAT+1
@NM00023 EQU   MNATTOP
MNATFULL EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00022 EQU   IGGCCA+697
CCABMOTR EQU   CCABMOUT+2
@NM00021 EQU   CCABMINP+7
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00020 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
@NM00019 EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCANEVV  EQU   IGGCCA+486
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
@NM00018 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCARABF  EQU   IGGCCA+384
CCAMCPL  EQU   CCAXCPL
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCACMSWA EQU   CCACMS
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
CCAMNSPL EQU   CCAMSSPL+9
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
CCAR5REC EQU   CCARAB5+4
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
CCAR4REC EQU   CCARAB4+4
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2NVC EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1KEY EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00073 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00072 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSARV062 EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00071 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00070 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00069 EQU   FLCFSA
@NM00068 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00067 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00066 EQU   FLCIOA
@NM00065 EQU   FLCMCLA+15
@NM00064 EQU   FLCMCLA+14
@NM00063 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00062 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00061 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00060 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00059 EQU   FLCPER
@NM00058 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00057 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00056 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00055 EQU   FLCPIILC
@NM00054 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00053 EQU   FLCSVILC
@NM00052 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00051 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00050 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00302 EQU   @RC00296
@RC00366 EQU   @RC00365
@RC00431 EQU   @RC00430
@RC00505 EQU   @RC00502
@PB00006 EQU   @EL00001
@RC00506 EQU   @RC00505
@ENDDATA EQU   *
         END   IGG0CLBS,(C'PLS0728',0602,75053)
