         TITLE 'IGG0CLBN - REMOVE VOLUME PROCESSING                    *
                        '
IGG0CLBN CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLBN  78.087'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPALVR'
         EJECT
         B     @PB00002                                            0147
IGGPALVR DS    0H                                                  0148
         ENTRY IGGPALVR
         DROP @15
Z003     DS    0H                                                  0150
Z003ALVR DS    0H                                                  0151
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
*                                                                  0156
         USING *,12
*   /*****************************************************************/
*   /*                                                               */
*   /* PREPARE THE PARAMETER LIST(CPL) AND FPLS FOR DELETING THE     */
*   /* VOLUME SERIAL NUMBERS FROM THE OBJECT ENTRY                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0157
*   WORKPROC=GO;                    /* SET PROCESS STATUS INDICATOR
*                                                            @Y30SSPJ*/
         L     @10,CCACMSWA(,R11)                                  0157
         MVC   WORKPROC(2,@10),@CC00074                            0157
*   CMCNVNO=CMADDVOL;               /* SAVE ADD VOLUME COUNT         */
         LH    @05,CMADDVOL(,@10)                                  0158
         STH   @05,CMCNVNO(,@10)                                   0158
*   DO WHILE WORKPROC=GO;           /* COUNTINUE AS NECESSARY      0159
*                                                            @Y30SSPJ*/
         B     @DE00159                                            0159
@DL00159 DS    0H                                                  0160
*     DO CMRMVVOL=(CMADDVOL+INCR1) TO CMTOTVOL WHILE CCACD1=OKAY;/*
*                                      PROCESS FOR VOL REMOVAL       */
*                                                                  0160
         L     @10,CCACMSWA(,R11)                                  0160
         LA    @05,1                                               0160
         AH    @05,CMADDVOL(,@10)                                  0160
         B     @DE00160                                            0160
@DL00160 CLI   CCACD1(R11),0                                       0160
         BNE   @DC00160                                            0160
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE CPL UP FOR EXTRACT OF VOLUME ENTRIES              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0161
*Z004ALPL:                                                         0161
*       CALL IGGPALPL;              /* BUILD THE CCA/CPL INTFCE      */
*                                                                  0161
Z004ALPL BAL   @14,IGGPALPL                                        0161
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP THE PARAMETERS FOR CALLING EXTRACT                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0162
*Z005ALVO:                                                         0162
*       CALL IGGPALVO;              /* BUILD THE EXTRACT FPLS        */
Z005ALVO BAL   @14,IGGPALVO                                        0162
*       CCAEXT=ON;                  /* EXTRACT INDICATOR             */
         OI    CCAEXT(R11),B'00000010'                             0163
*       RFY                                                        0164
*         CTGPL BASED(CCAXCPL);                                    0164
*                                                                  0164
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP THE EXTRACT AREA LOCATION AND LENGTH               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0165
*       CTGWKA=CCAALPTR;            /* SET WORK AREA ADDRESS         */
         L     @10,CCAXCPL(,R11)                                   0165
         L     @05,CCAALPTR(,R11)                                  0165
         ST    @05,CTGWKA(,@10)                                    0165
*       WKALEN1=NORMCORE;           /* SET SIZE OF CORE TO USE       */
         MVC   WKALEN1(2,@05),@CH00069                             0166
*       WKALEN2=NONE;               /* SET NULL WORKAREA LENGTH      */
         SLR   @10,@10                                             0167
         STH   @10,WKALEN2(,@05)                                   0167
*       VOLREFRG=CCACPL->CTGFVT->CTGFVVLT;/* VOLUME LIST REFR        */
         L     @10,CCACPL(,R11)                                    0168
         L     @10,CTGFVT(,@10)                                    0168
         L     VOLREFRG,CTGFVVLT(,@10)                             0168
*       RFY                                                        0169
*         USERLIST BASED(VOLREFRG);                                0169
*       RFY                                                        0170
*         CTGFL BASED(CMTSTFPL);                                   0170
*       ALTWKVOL=LTVOLSER(CMRMVVOL);/* SET VOLUME SERIAL - TEST      */
*                                                                  0171
         L     @10,CCACMSWA(,R11)                                  0171
         L     @05,CMTSTFPL(,@10)                                  0171
         L     @05,CTGFLPT(,@05)                                   0171
         LH    @10,CMRMVVOL(,@10)                                  0171
         SLA   @10,3                                               0171
         ALR   @10,VOLREFRG                                        0171
         AL    @10,@CF03936                                        0171
         MVC   ALTWKVOL(6,@05),LTVOLSER-4(@10)                     0171
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAZ                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0172
*Z006EXT:                                                          0172
*       CALL IGGPEXT;               /* EXTRACT THE VOL OCCUR         */
Z006EXT  L     @15,@CV00038                                        0172
         BALR  @14,@15                                             0172
*       CCAURAB=CCARABB;            /* RE-SET THE BASE RAB ADDR      */
         L     @10,CCARABB(,R11)                                   0173
         ST    @10,CCAURAB(,R11)                                   0173
*       IF CCACD1=OKAY&             /* NO MAJOR ERRORS               */
*           CMDTAFPL->CTGFLNG(1)^=NONE THEN/* DATA EXTRACTED         */
         CLI   CCACD1(R11),0                                       0174
         BNE   @RF00174                                            0174
         L     @05,CCACMSWA(,R11)                                  0174
         L     @01,CMDTAFPL(,@05)                                  0174
         L     @15,CTGFLNG(,@01)                                   0174
         LTR   @15,@15                                             0174
         BZ    @RF00174                                            0174
*         IF RCDID^=CTGTINDX×       /* NOT INDEX ENTRY               */
*             CMWACI(1)=NONE THEN   /* OR NOT SEQ SET PROCESS        */
         L     @10,CCACPE1(,@10)                                   0175
         CLI   RCDID(@10),C'I'                                     0175
         BNE   @RT00175                                            0175
         ICM   @10,7,CMWACI(@05)                                   0175
         BNZ   @RF00175                                            0175
@RT00175 DS    0H                                                  0176
*Z007ALVE:                                                         0176
*           CALL IGGPALVE;          /* UPDATE THE VOL RECORD         */
Z007ALVE BAL   @14,IGGPALVE                                        0176
*         ELSE                                                     0177
*           ;                       /* INDEX ENT OR SEQ SET PROC     */
@RF00175 DS    0H                                                  0178
*       ELSE                        /* ERROR, DO NOT CONTINUE        */
*                                                                  0178
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='BN', CCAREASN=RSN20, CCARETRN=RCENT       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0178
*         CCAPROB=IGGSEGID+(RSN20*K256)+RCENT;/* SET ERROR AND REASON
*                                      CODE TO - VOLUME ENTRY DOES 0178
*                                      NOT EXIST             @Y30SSJG*/
         B     @RC00174                                            0178
@RF00174 MVC   CCAPROB(4,R11),@CF03924                             0178
*       IF CCACD1=OKAY THEN         /* NO MAJOR ERRORS               */
@RC00174 CLI   CCACD1(R11),0                                       0179
         BNE   @RF00179                                            0179
*         DO;                       /* DELETE THE VOL OCCURENCES     */
*Z009ALPL:                                                         0181
*           CALL IGGPALPL;          /* BUILD THE MODIFY INTFCE       */
Z009ALPL BAL   @14,IGGPALPL                                        0181
*Z010ALVO:                                                         0182
*           CALL IGGPALVO;          /* BUILD THE MODIFY FPLS         */
Z010ALVO BAL   @14,IGGPALVO                                        0182
*           VOLREFRG=CCACPL->CTGFVT->CTGFVVLT;/* VOL LIST REFR       */
         L     @10,CCACPL(,R11)                                    0183
         L     @10,CTGFVT(,@10)                                    0183
         L     VOLREFRG,CTGFVVLT(,@10)                             0183
*           ALTWKVOL=LTVOLSER(CMRMVVOL);/* SET VOL SER NO.           */
         L     @10,CCACMSWA(,R11)                                  0184
         L     @05,CMTSTFPL(,@10)                                  0184
         L     @05,CTGFLPT(,@05)                                   0184
         LH    @10,CMRMVVOL(,@10)                                  0184
         SLA   @10,3                                               0184
         ALR   @10,VOLREFRG                                        0184
         AL    @10,@CF03936                                        0184
         MVC   ALTWKVOL(6,@05),LTVOLSER-4(@10)                     0184
*           CCAMOD=ON;              /* SET MODIFY INDICATOR          */
*                                                                  0185
         OI    CCAMOD(R11),B'00000001'                             0185
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAV                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0186
*Z011MOD:                                                          0186
*           CALL IGGPMOD;           /* CALL THE MODIFY FUNCTION      */
Z011MOD  L     @15,@CV00044                                        0186
         BALR  @14,@15                                             0186
*         END;                      /* END DELETE VOL OCCURENCES     */
*       ELSE                                                       0188
*         ;                         /* MAJOR ERRORS - CONTINUE       */
@RF00179 DS    0H                                                  0189
*       VOLREFRG=CCACPL->CTGFVT->CTGFVVLT;/* RE-SET VOL LIST REF     */
         L     @10,CCACPL(,R11)                                    0189
         L     @10,CTGFVT(,@10)                                    0189
         L     VOLREFRG,CTGFVVLT(,@10)                             0189
*       CCAURAB=CCARABB;            /* RE-SET BASE RECORD RAB        */
         L     @10,CCARABB(,R11)                                   0190
         ST    @10,CCAURAB(,R11)                                   0190
*       IF CCACD1=OKAY THEN         /* VOLUME DELETED                */
         CLI   CCACD1(R11),0                                       0191
         BNE   @RF00191                                            0191
*         LTRETCD1(CMRMVVOL)=RCS;   /* SET VOLUME DELETED CODE       */
         L     @10,CCACMSWA(,R11)                                  0192
         LH    @10,CMRMVVOL(,@10)                                  0192
         SLA   @10,3                                               0192
         SLR   @05,@05                                             0192
         AL    @10,@CF03938                                        0192
         STC   @05,LTRETCD1-2(@10,VOLREFRG)                        0192
*       ELSE                        /* CHECK IF OKAY TO CONTINUE     */
*         LTRETCD1(CMRMVVOL)=RCVNDSPD;/* SET ERROR CODE              */
         B     @RC00191                                            0193
@RF00191 L     @10,CCACMSWA(,R11)                                  0193
         LH    @10,CMRMVVOL(,@10)                                  0193
         SLA   @10,3                                               0193
         LA    @05,160                                             0193
         AL    @10,@CF03938                                        0193
         STC   @05,LTRETCD1-2(@10,VOLREFRG)                        0193
*     END;                          /* END VOLUME REMOVAL            */
*                                                                  0194
@RC00191 L     @10,CCACMSWA(,R11)                                  0194
         LA    @05,1                                               0194
         AH    @05,CMRMVVOL(,@10)                                  0194
@DE00160 L     @10,CCACMSWA(,R11)                                  0194
         STH   @05,CMRMVVOL(,@10)                                  0194
         L     @10,CCACMSWA(,R11)                                  0194
         CH    @05,CMTOTVOL(,@10)                                  0194
         BNH   @DL00160                                            0194
@DC00160 DS    0H                                                  0195
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBE                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0195
*Z012ALEC:                                                         0195
*     CALL IGGPALEC;                /* CHECK ENTRY TYPE/SEQ SET      */
Z012ALEC L     @15,@CV00036                                        0195
         BALR  @14,@15                                             0195
*     CMADDVOL=CMCNVNO;             /* RESTORE VOLUME COUNT          */
         L     @10,CCACMSWA(,R11)                                  0196
         LH    @05,CMCNVNO(,@10)                                   0196
         STH   @05,CMADDVOL(,@10)                                  0196
*   END;                            /* VOLUME REMOVAL COMPLETE       */
@DE00159 L     @10,CCACMSWA(,R11)                                  0197
         CLC   WORKPROC(2,@10),@CC00074                            0197
         BE    @DL00159                                            0197
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0198
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPALPL');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPALPL'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0201
@EF00002 DS    0H                                                  0201
@ER00002 BR    @14                                                 0201
@PB00002 DS    0H                                                  0202
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0203
*/********************************************************************/
*/*                                                                  */
*/*        IGGPALPL  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0203
*IGGPALPL:                                                         0203
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0203
IGGPALPL DS    0H                                                  0204
*Z013:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z013ALPL:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0204
*    (R5,                                                          0204
*     R6,                                                          0204
*     R7,                                                          0204
*     R8,                                                          0204
*     R9,                                                          0204
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z013     DS    0H                                                  0204
Z013ALPL DS    0H                                                  0205
*   RFY                                                            0205
*    (R2,                                                          0205
*     R3,                                                          0205
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0207
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPALPL - THIS INTERNAL PROCEDURE SETS UP THE CCA AND CPL FOR*/
*   /* THE USE OF THE MODIFY AND EXTRACT FUNCTIONS.                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*   RFY                                                            0208
*     CTGPL BASED(CCAXCPL);                                        0208
*   CCAXCPL=CMSRCCOR;               /* INTERNAL CPL LOCATION         */
         L     @10,CCACMSWA(,R11)                                  0209
         L     @05,CMSRCCOR(,@10)                                  0209
         ST    @05,CCAXCPL(,R11)                                   0209
*   CTGPL=CTGPL&&CTGPL;             /* CLEAR THE CPL STORAGE         */
         XC    CTGPL(28,@05),CTGPL(@05)                            0210
*   CTGNOFLD=INCR1;                 /* NO. OF FPL POINTERS           */
         MVI   CTGNOFLD(@05),X'01'                                 0211
*   CMDTAFPL=CMEXTFLS;              /* MAIN DATA FPL LOCATION        */
         L     @15,CMEXTFLS(,@10)                                  0212
         ST    @15,CMDTAFPL(,@10)                                  0212
*   CTGFIELD(1)=CMDTAFPL;           /* SET FPL ADDRESS IN CPL        */
*                                                                  0213
         ST    @15,CTGFIELD(,@05)                                  0213
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE CCA FOR THE INTERFACE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0214
*   CCAREUSE=ON;                    /* RABS ARE REUSEABLE            */
         OI    CCAREUSE(R11),B'00000100'                           0214
*   CCARABB=CCAURAB;                /* BASE RECORD RAB               */
         L     @10,CCAURAB(,R11)                                   0215
         ST    @10,CCARABB(,R11)                                   0215
*   CCARABF=ADDR(CCARAB1);          /* FIRST RAB TO USE              */
         LA    @10,CCARAB1(,R11)                                   0216
         ST    @10,CCARABF(,R11)                                   0216
*   CCARABL=ADDR(CCARAB3);          /* LAST RAB TO USE               */
         LA    @10,CCARAB3(,R11)                                   0217
         ST    @10,CCARABL(,R11)                                   0217
*   CCAF2NVC=ON;                    /* NO VALIDITY CHECK             */
         OI    CCAF2NVC(R11),B'01000000'                           0218
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0219
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPALVO');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPALVO'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0222
@EF00003 DS    0H                                                  0222
@ER00003 BR    @14                                                 0222
@PB00003 DS    0H                                                  0223
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0224
*/********************************************************************/
*/*                                                                  */
*/*        IGGPALVO  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0224
*IGGPALVO:                                                         0224
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0224
IGGPALVO DS    0H                                                  0225
*Z014:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z014ALVO:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0225
*    (R5,                                                          0225
*     R6,                                                          0225
*     R7,                                                          0225
*     R8,                                                          0225
*     R9,                                                          0225
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z014     DS    0H                                                  0225
Z014ALVO DS    0H                                                  0226
*   RFY                                                            0226
*    (R2,                                                          0226
*     R3,                                                          0226
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0228
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPALVO - THIS INTERNAL PROCEDURE CONSTRUCTS THE FPLS        */
*   /* REQUIRED TO EXTRACT OR MODIFY-DELETE VOLUME SERIAL NO. GROUP  */
*   /* OCCURRENCES IN DATA OR INDEX RECORDS BUILD THE BASIC SECTION  */
*   /* OF THE MAIN FPL                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0229
*   RFY                                                            0229
*     CTGPL BASED(CCAMCPL);                                        0229
*   RFY                                                            0230
*     CTGFL BASED(CMDTAFPL);                                       0230
*   CTGFL=CTGFL&&CTGFL;             /* CLEAR THE FPL AREA            */
         L     @10,CCACMSWA(,R11)                                  0231
         L     @05,CMDTAFPL(,@10)                                  0231
         XC    CTGFL(16,@05),CTGFL(@05)                            0231
*   CTGFLDNO=INCR1;                 /* NO. OF LENGTH/DATA PTRS       */
         MVI   CTGFLDNO(@05),X'01'                                 0232
*   CTGFLDNM=CMDTAFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);              0233
         LA    @15,24                                              0233
         LR    @14,@05                                             0233
         ALR   @14,@15                                             0233
         ST    @14,CTGFLDNM(,@05)                                  0233
*   CMFLDNME='ENTVOL  ';            /* DATA FIELD TO DELETE          */
         MVC   CMFLDNME(8,@14),@CC03808                            0234
*   CTGFLNG(1)=NONE;                /* CLEAR THE LENGTH AREA         */
         SLR   @14,@14                                             0235
         ST    @14,CTGFLNG(,@05)                                   0235
*   CTGFLPT(1)=NONE;                /* CLEAR DATA ADDRESS AREA       */
*                                                                  0236
         ST    @14,CTGFLPT(,@05)                                   0236
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE TEST FPL FOR VOLUME SERIAL NUMBERS EQUAL           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0237
*   CMTSTFPL=CMDTAFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT)+LENGTH(CMFLDNME);
         LA    @14,32                                              0237
         ALR   @14,@05                                             0237
         ST    @14,CMTSTFPL(,@10)                                  0237
*                                   /* TEST FPL ADDRESS              */
*   CTGFLCHN=CMTSTFPL;              /* CHAIN TEST FPL TO DATA        */
         ST    @14,CTGFLCHN(,@05)                                  0238
*   RFY                                                            0239
*     CTGFL BASED(CMTSTFPL);                                       0239
*   CTGFL=CTGFL&&CTGFL;             /* CLEAR THE TEST FPL            */
         XC    CTGFL(16,@14),CTGFL(@14)                            0240
*   CTGFLDNO=INCR1;                 /* NO. OF LENGTH/DATA PAIRS      */
         MVI   CTGFLDNO(@14),X'01'                                 0241
*   CTGFLDNM=CMTSTFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);              0242
         LR    @05,@14                                             0242
         ALR   @05,@15                                             0242
         ST    @05,CTGFLDNM(,@14)                                  0242
*   CTGFLDGC=ENTVLGPC;              /* SET THE ERROR CODE            */
         MVI   CTGFLDGC(@14),X'03'                                 0243
*   CMFLDNME='VOLSER  ';            /* SET FIELD NAME                */
         MVC   CMFLDNME(8,@05),@CC03810                            0244
*   CTGFLDCD=CTGFLDEQ;              /* SET EQUAL CONDITIONAL TST     */
         MVI   CTGFLDCD(@14),X'80'                                 0245
*   CTGFLNG(1)=LENGTH(ALTWKVOL);    /* SET FIELD LENGTH              */
         LA    @09,6                                               0246
         ST    @09,CTGFLNG(,@14)                                   0246
*   CTGFLPT(1)=CTGFLDNM+LENGTH(CMFLDNME);/* TEST DATA AREA           */
*                                                                  0247
         LA    @08,8                                               0247
         ALR   @05,@08                                             0247
         ST    @05,CTGFLPT(,@14)                                   0247
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR NON ALIEN OBJECTS SINCE ONLY VOLUMES WITHOUT        */
*   /* PHYSICAL SPACE CAN BE DELETED                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0248
*   IF CCACPL->CTGTYPE^=CTGTALIN THEN/* NON ALIEN OBJECT             */
         L     @01,CCACPL(,R11)                                    0248
         CLI   CTGTYPE(@01),C'A'                                   0248
         BE    @RF00248                                            0248
*     DO;                           /* BUILD TEST FPL-0 EXTENTS      */
*       CTGFLCHN=CTGFLPT(1)+LENGTH(ALTWKVOL);/* CHAIN TEST           */
         ALR   @05,@09                                             0250
         ST    @05,CTGFLCHN(,@14)                                  0250
*       CMTSTFPL=CTGFLCHN;          /* SET TEST FPL REFERENCE        */
         ST    @05,CMTSTFPL(,@10)                                  0251
*       CTGFL=CTGFL&&CTGFL;         /* CLEAR EXTENT TEST FPL         */
         XC    CTGFL(16,@05),CTGFL(@05)                            0252
*       CTGFLDNO=INCR1;             /* NO. OF LENGTH/DATA POIRS      */
         MVI   CTGFLDNO(@05),X'01'                                 0253
*       CTGFLDNM=CMTSTFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);          0254
         LR    @14,@05                                             0254
         ALR   @14,@15                                             0254
         ST    @14,CTGFLDNM(,@05)                                  0254
*       CMFLDNME=NOEXTNT;           /* SET TEST FIELD NAME   @Y30SSPJ*/
         MVC   CMFLDNME(8,@14),@CC00084                            0255
*       CTGFLDCD=CTGFLDEQ;          /* SET TEST CONDITION-EQUAL      */
         MVI   CTGFLDCD(@05),X'80'                                 0256
*       CTGFLDGC=ENTVLGPC;          /* SET GROUP CODE                */
         MVI   CTGFLDGC(@05),X'03'                                 0257
*       CTGFLNG(1)=LENGTH(TESTEXTS);/* LENGTH OF TEST DATA           */
         LA    @09,1                                               0258
         ST    @09,CTGFLNG(,@05)                                   0258
*       CTGFLPT(1)=CTGFLDNM+LENGTH(CMFLDNME);/* DATA AREA            */
         ALR   @14,@08                                             0259
         ST    @14,CTGFLPT(,@05)                                   0259
*       TESTEXTS=OKAY;              /* SET TEST DATA VALUE           */
         MVI   TESTEXTS(@14),X'00'                                 0260
*       IF RCDID=CTGTINDX&CMWACI(1)^=NONE THEN/* SEQ SET             */
         L     @01,CCAURAB(,R11)                                   0261
         L     @01,CCACPE1(,@01)                                   0261
         CLI   RCDID(@01),C'I'                                     0261
         BNE   @RF00261                                            0261
         ICM   @07,7,CMWACI(@10)                                   0261
         BZ    @RF00261                                            0261
*         DO;                       /* FPL FOR SEQ VOLUMES ONLY      */
*           CTGFLCHN=CTGFLPT(1)+LENGTH(TESTEXTS);/* FPL ADDR         */
         ALR   @14,@09                                             0263
         ST    @14,CTGFLCHN(,@05)                                  0263
*           CMTSTFPL=CTGFLCHN;      /* TEST FPL LOCATION             */
         ST    @14,CMTSTFPL(,@10)                                  0264
*           CTGFL=CTGFL&&CTGFL;     /* CLEAR THE FPL STORAGE         */
         XC    CTGFL(16,@14),CTGFL(@14)                            0265
*           CTGFLDNO=INCR1;         /* NO. OF LENGTH/DATA PAIRS      */
         MVI   CTGFLDNO(@14),X'01'                                 0266
*           CTGFLDNM=CMTSTFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);      0267
         ALR   @15,@14                                             0267
         ST    @15,CTGFLDNM(,@14)                                  0267
*           CMFLDNME=ITYPEXT;       /* SET TEST FIELD NAME   @Y30SSPJ*/
         MVC   CMFLDNME(8,@15),@CC00086                            0268
*           CTGFLDCD=CTGFLDON;      /* TEST FOR SEQ VOLS ONLY        */
         MVI   CTGFLDCD(@14),X'10'                                 0269
*           CTGFLDGC=ENTVLGPC;      /* SET THE GROUP CODE            */
         MVI   CTGFLDGC(@14),X'03'                                 0270
*           CTGFLNG(1)=LENGTH(TSTEXTYP);/* DATA LENGTH               */
         ST    @09,CTGFLNG(,@14)                                   0271
*           CTGFLPT(1)=CTGFLDNM+LENGTH(CMFLDNME);/* DATA ADD         */
         ALR   @15,@08                                             0272
         ST    @15,CTGFLPT(,@14)                                   0272
*           TSTEXTYP=NOSEQSET;      /* SET DATA VALUE FOR TEST       */
         MVI   TSTEXTYP(@15),X'80'                                 0273
*         END;                      /* END FPL FOR SEQ VOL ONLY      */
*       CMTSTFPL=CMDTAFPL->CTGFLCHN;/* RE-SET VOL TEST FL            */
@RF00261 L     @10,CCACMSWA(,R11)                                  0275
         L     @05,CMDTAFPL(,@10)                                  0275
         L     @05,CTGFLCHN(,@05)                                  0275
         ST    @05,CMTSTFPL(,@10)                                  0275
*     END;                          /* END BUILD TEST FPL EXTNTS     */
*   ELSE                                                           0277
*     ;                             /* ALIEN OBJECT                  */
@RF00248 DS    0H                                                  0278
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0278
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPALVE');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPALVE'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0281
@EF00004 DS    0H                                                  0281
@ER00004 BR    @14                                                 0281
@PB00004 DS    0H                                                  0282
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0283
*/********************************************************************/
*/*                                                                  */
*/*        IGGPALVE  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0283
*IGGPALVE:                                                         0283
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0283
IGGPALVE DS    0H                                                  0284
*Z015:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z015ALVE:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0284
*    (R5,                                                          0284
*     R6,                                                          0284
*     R7,                                                          0284
*     R8,                                                          0284
*     R9,                                                          0284
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z015     DS    0H                                                  0284
Z015ALVE DS    0H                                                  0285
*   RFY                                                            0285
*    (R2,                                                          0285
*     R3,                                                          0285
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0287
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* IGGPALVE - THIS PROCEDURE READS THE VOLUME ENTRY RECORD AND   */
*   /* CALLS MODIFY TO DELETE THE DATA SET DIRECTORY AND THEN UPDATES*/
*   /* THE RECORD.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0288
*   CMASCFPL=CCARABB;               /* SAVE OLD BASE RECORD RAB      */
         L     @10,CCACMSWA(,R11)                                  0288
         L     @05,CCARABB(,R11)                                   0288
         ST    @05,CMASCFPL(,@10)                                  0288
*   CCAURAB=ADDR(CCARAB3);          /* SET NEW RAB TO USE            */
         LA    @05,CCARAB3(,R11)                                   0289
         ST    @05,CCAURAB(,R11)                                   0289
*   CCASRCH=CCASRCH&&CCASRCH;       /* CLEAR THE SEARCH ARG FLD      */
         XC    CCASRCH(44,R11),CCASRCH(R11)                        0290
*   CCASRCH(1:6)=ALTWKVOL;          /* SET VOL ID FOR GET            */
         L     @10,CMTSTFPL(,@10)                                  0291
         L     @10,CTGFLPT(,@10)                                   0291
         MVC   CCASRCH(6,R11),ALTWKVOL(@10)                        0291
*   DO;                                                            0292
*     CCAF1KEY=ON;                  /* TRUE NAME GET                 */
*     CCAF1KGE=OFF;                 /* NOT GET NEXT                  */
*     CCAF1UP=ON;                   /* GET FOR UPD                   */
*                                                                  0295
         OI    CCAF1KEY(R11),B'00010010'                           0295
         NI    CCAF1KGE(R11),B'11110111'                           0295
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBI                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0296
*Z017GET:                                                          0296
*     CALL IGGPGET;                 /* GET RECORD                    */
Z017GET  L     @15,@CV00042                                        0296
         BALR  @14,@15                                             0296
*   END;                                                           0297
*   IF CCACD1^=OKAY THEN            /* ERROR IN GETTING RECORD       */
         CLI   CCACD1(R11),0                                       0298
         BNE   @RT00298                                            0298
*     GOTO ERRORBCK;                /* RETURN                        */
*   ELSE                                                           0300
*     ;                             /* NO ERROR                      */
*Z018ALPL:                                                         0301
*   CALL IGGPALPL;                  /* SET UP THE CCA & CPL          */
*                                                                  0301
Z018ALPL BAL   @14,IGGPALPL                                        0301
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD A FPL FOR THE DATA SET DIRECTORY GROUP                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0302
*   RFY                                                            0302
*     CTGPL BASED(CCAMCPL);                                        0302
*   RFY                                                            0303
*     CTGFL BASED(CMDTAFPL);                                       0303
*   CTGFLDNM=CMDTAFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);              0304
         L     @10,CCACMSWA(,R11)                                  0304
         L     @05,CMDTAFPL(,@10)                                  0304
         LA    @15,24                                              0304
         LR    @14,@05                                             0304
         ALR   @14,@15                                             0304
         ST    @14,CTGFLDNM(,@05)                                  0304
*   CMFLDNME='DSDIRECT';            /* SET FIELD NAME                */
         MVC   CMFLDNME(8,@14),@CC03825                            0305
*   CTGFLDNO=INCR1;                 /* SET NO. LEN/DATA PTRS         */
         MVI   CTGFLDNO(@05),X'01'                                 0306
*   CTGFLNG(1)=NONE;                /* CLEAR LENGTH AREA             */
         SLR   @14,@14                                             0307
         ST    @14,CTGFLNG(,@05)                                   0307
*   CTGFLPT(1)=NONE;                /* CLEAR DATA ADDRESS AREA       */
         ST    @14,CTGFLPT(,@05)                                   0308
*   CMTSTFPL=CMDTAFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT)+LENGTH(CMFLDNME);
         LA    @14,32                                              0309
         ALR   @14,@05                                             0309
         ST    @14,CMTSTFPL(,@10)                                  0309
*                                   /* TEST FPL LOCATION             */
*   CTGFLCHN=CMTSTFPL;              /* CHAIN TEST FPL                */
*                                                                  0310
         ST    @14,CTGFLCHN(,@05)                                  0310
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD A TEST FPL FOR DATA SET DIRECTORY RELATIVE REP NO.      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0311
*   RFY                                                            0311
*     CTGFL BASED(CMTSTFPL);                                       0311
*   CTGFL=CTGFL&&CTGFL;             /* CLEAR THE FPL STORAGE         */
         XC    CTGFL(16,@14),CTGFL(@14)                            0312
*   CTGFLDNO=INCR1;                 /* INCREMENT NO. OF ENTRIES      */
         MVI   CTGFLDNO(@14),X'01'                                 0313
*   CTGFLDNM=CMTSTFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);              0314
         ALR   @15,@14                                             0314
         ST    @15,CTGFLDNM(,@14)                                  0314
*   CMFLDNME=RELREPNO;              /* SET TEST FIELD NAME   @Y30SSPJ*/
         MVC   CMFLDNME(8,@15),@CC00088                            0315
*   CTGFLDCD=CTGFLDEQ;              /* TEST CONDITION EQUAL          */
         MVI   CTGFLDCD(@14),X'80'                                 0316
*   CTGFLDGC=DSDIRGRP;              /* DATA SET DIR GROUP CODE       */
         MVI   CTGFLDGC(@14),X'08'                                 0317
*   CTGFLNG(1)=LENGTH(CMFLSSDS);    /* LENGTH OF TEST DATA           */
         MVC   CTGFLNG(4,@14),@CF00073                             0318
*   R2=CCAALPTR+LENGTH(USERWKA)+LENGTH(TSTCOUNT);/* DATA ADDR        */
         LA    R2,6                                                0319
         AL    R2,CCAALPTR(,R11)                                   0319
*   RFY                                                            0320
*     GVO BASED(R2);                                               0320
*   CTGFLPT(1)=ADDR(CMFLSSDS);      /* TEST DATA LOCATION            */
*                                                                  0321
         LA    @10,CMFLSSDS(,R2)                                   0321
         ST    @10,CTGFLPT(,@14)                                   0321
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE CCA FOR MODIFY USEAGE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*   CCARABF=ADDR(CCARAB3);          /* FIRST RAB TO USE              */
         LA    @10,CCARAB3(,R11)                                   0322
         ST    @10,CCARABF(,R11)                                   0322
*   CCARABL=ADDR(CCARAB5);          /* LAST RAB TO USE               */
         LA    @10,CCARAB5(,R11)                                   0323
         ST    @10,CCARABL(,R11)                                   0323
*   CCAMOD=ON;                      /* MODIFY USEAGE INDICATOR       */
*                                                                  0324
         OI    CCAMOD(R11),B'00000001'                             0324
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAV                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*Z019MOD:                                                          0325
*   CALL IGGPMOD;                                                  0325
Z019MOD  L     @15,@CV00044                                        0325
         BALR  @14,@15                                             0325
*ERRORBCK:                                                         0326
*   IF CCACD1=RCENT THEN            /* ENTRY NOT EXIST ERROR         */
*                                                                  0326
ERRORBCK CLI   CCACD1(R11),8                                       0326
         BNE   @RF00326                                            0326
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='BN', CCAREASN=RSN0, CCARETRN=RCVOLENT         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0327
*     CCAPROB=IGGSEGID+(RSN0*K256)+RCVOLENT;/* SET ERROR AND REASON
*                                      CODE TO - VOLUME ENTRY DOES 0327
*                                      NOT EXIST             @Y30SSJG*/
         MVC   CCAPROB(4,R11),@CF03925                             0327
*   ELSE                                                           0328
*     ;                             /* ENTRY EXISTS                  */
@RF00326 DS    0H                                                  0329
*   CCAURAB=CMASCFPL;               /* RE-SET ORIGINAL RCRD RAB      */
         L     @10,CCACMSWA(,R11)                                  0329
         L     @10,CMASCFPL(,@10)                                  0329
         ST    @10,CCAURAB(,R11)                                   0329
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0330
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPVRD');           /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPVRD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0333
@EF00005 DS    0H                                                  0333
@ER00005 BR    @14                                                 0333
@PB00005 DS    0H                                                  0334
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0335
*/********************************************************************/
*/*                                                                  */
*/*        IGGPVRD  -  PROCEDURE  EXTERNALLY  CALLED  NESTED         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0335
*IGGPVRD:                                                          0335
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0335
IGGPVRD  DS    0H                                                  0336
*   GEN(ENTRY IGGPVRD );            /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPVRD
*Z021:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z021VRD:                           /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0337
*    (R5,                                                          0337
*     R6,                                                          0337
*     R7,                                                          0337
*     R8,                                                          0337
*     R9,                                                          0337
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z021     DS    0H                                                  0337
Z021VRD  DS    0H                                                  0338
*   RFY                                                            0338
*    (R2,                                                          0338
*     R3,                                                          0338
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE     0343
*                                                            @ZA00606*/
*                                                                  0343
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE REMOVES VSAM DATA SPACES AND VSAM        @ZA00606*/
*   /* OWNERSHIP FROM VOLUMES WHICH ARE SPECIFIED IN         @ZA00606*/
*   /* THE ALTER REMOVEVOLUMES VOLUME LIST.                  @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0344
*   RFY                                                            0344
*    (R0,                                                          0344
*     R1,                                                          0344
*     R13,                                                         0344
*     R15) RSTD;                    /*                       @ZA00606*/
*   RFY                                                            0345
*     CTGPL BASED(CCACPL);          /*                       @ZA00606*/
*   RFY                                                            0346
*     USERLIST BASED(CTGFVVLT);     /*                       @ZA00606*/
*   IF CTGFVIND=NONE THEN           /* FILE SPECIFIED ?      @ZA00606*/
         L     @14,CCACPL(,R11)                                    0347
         L     @14,CTGFVT(,@14)                                    0347
         L     @14,CTGFVIND(,@14)                                  0347
         LTR   @14,@14                                             0347
         BNZ   @RF00347                                            0347
*     DO;                           /* NO                    @ZA00606*/
*       DO VRVLI=1 TO LTLENGTH/LENGTH(LTENTRY);/* DO ALL VOL @ZA00606*/
         LA    @14,1                                               0349
         B     @DE00349                                            0349
@DL00349 DS    0H                                                  0350
*         LTRETCD1(VRVLI)=RCINDER;  /* SET DD ^ SPEC RC      @ZA00606*/
         L     @14,VRVLI(,R3)                                      0350
         SLA   @14,3                                               0350
         L     @10,CCACPL(,R11)                                    0350
         L     @10,CTGFVT(,@10)                                    0350
         L     @10,CTGFVVLT(,@10)                                  0350
         LA    @05,240                                             0350
         AL    @10,@CF03938                                        0350
         STC   @05,LTRETCD1-2(@14,@10)                             0350
*       END;                        /*                       @ZA00606*/
         LA    @14,1                                               0351
         AL    @14,VRVLI(,R3)                                      0351
@DE00349 ST    @14,VRVLI(,R3)                                      0351
         L     @10,CCACPL(,R11)                                    0351
         L     @10,CTGFVT(,@10)                                    0351
         L     @10,CTGFVVLT(,@10)                                  0351
         LH    @06,LTLENGTH(,@10)                                  0351
         SRDA  @06,32                                              0351
         D     @06,@CF00060                                        0351
         CR    @14,@07                                             0351
         BNH   @DL00349                                            0351
*       CALL EXIT;                  /* STOP PROCESSING       @ZA00606*/
         BAL   @14,EXIT                                            0352
*     END;                          /*                       @ZA00606*/
*   R3=CCAR5REC;                    /* USE REC AR AS WA      @ZA00606*/
*                                                                  0354
@RF00347 L     R3,CCAR5REC(,R11)                                   0354
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION LOADS IDA0192V (VOLUME MOUNT ROUT)       @ZA00606*/
*   /* AND INITIALIZES ITS PARM LIST.                        @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0355
*   RFY                                                            0355
*     IDAVVOLL BASED(ADDR(VRVL));   /*                       @ZA00606*/
*   R2=CVTSVDCB;                    /* GET DCB FOR LOAD      @ZA00606*/
         L     @14,CVTPTR                                          0356
         L     R2,CVTSVDCB(,@14)                                   0356
*   GEN(LOAD EP=IDA0192V,DCB=(R2)); /* LOAD VOL MNT ROUT     @ZA00606*/
         LOAD EP=IDA0192V,DCB=(R2)
*   VR192V=R0;                      /* SAVE EP ADDR          @ZA00606*/
         ST    R0,VR192V(,R3)                                      0358
*   VVOLLID=ON;                     /* SET VOL LST IND       @ZA00606*/
*   VVOLLCAT=ON;                    /* IND CATLG IS CALLR    @ZA00606*/
         LA    @14,8                                               0360
         ALR   @14,R3                                              0360
         OI    VVOLLID(@14),B'01000100'                            0360
*   VVOLLNBR=INCR1;                 /* PROCESS 1 VOLUME      @ZA00606*/
         MVC   VVOLLNBR(2,@14),@CH00061                            0361
*   VVOLLACB=NONE;                  /* DO NOT CK TIMESTMP    @ZA00606*/
         SLR   @10,@10                                             0362
         ST    @10,VVOLLACB(,@14)                                  0362
*   RFY                                                            0363
*     TIOENTRY BASED(VVOLLTAB);     /*                       @ZA00606*/
*   VVOLLTAB=CCATCB->TCBTIO+LENGTH(TIOT1);/* PT TO 1ST TIOT ENT    0364
*                                                            @ZA00606*/
         L     @10,CCATCB(,R11)                                    0364
         LA    @05,24                                              0364
         AL    @05,TCBTIO(,@10)                                    0364
         ST    @05,VVOLLTAB(,@14)                                  0364
*   DO WHILE(TIOEDDNM^=CTGFVIND->FIELDNM&TIOELNGH^=NONE);/* SRCH TIOT
*                                      BY DDNM               @ZA00606*/
         B     @DE00365                                            0365
@DL00365 DS    0H                                                  0366
*     VVOLLTAB=VVOLLTAB+TIOELNGH;   /* PT TO NXT TIOT ENT    @ZA00606*/
         LA    @14,8                                               0366
         ALR   @14,R3                                              0366
         L     @10,VVOLLTAB(,@14)                                  0366
         SLR   @05,@05                                             0366
         IC    @05,TIOELNGH(,@10)                                  0366
         ALR   @05,@10                                             0366
         ST    @05,VVOLLTAB(,@14)                                  0366
*   END;                            /*                       @ZA00606*/
*                                                                  0367
@DE00365 L     @14,VVOLLTAB+8(,R3)                                 0367
         L     @10,CCACPL(,R11)                                    0367
         L     @10,CTGFVT(,@10)                                    0367
         L     @10,CTGFVIND(,@10)                                  0367
         CLC   TIOEDDNM(8,@14),FIELDNM(@10)                        0367
         BE    @DC00365                                            0367
         CLI   TIOELNGH(@14),0                                     0367
         BNE   @DL00365                                            0367
@DC00365 DS    0H                                                  0368
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION INITIALIZES THE OBTAIN PARM LIST.        @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0368
*   VROPLOPT=OBTNCODE;              /* OBTAIN OPTIONS        @ZA00606*/
         L     @14,OBTNCODE                                        0368
         ST    @14,VROPLOPT(,R3)                                   0368
*   VROPLSAP=ADDR(VRCCHHR);         /* PT TO SEEK ADDR       @ZA00606*/
         LA    @14,VRCCHHR(,R3)                                    0369
         ST    @14,VROPLSAP(,R3)                                   0369
*   VROPLVOL=ADDR(VVOLLVSR(1));     /* PT TO VOL SER         @ZA00606*/
         LA    @14,VVOLLVSR+8(,R3)                                 0370
         ST    @14,VROPLVOL(,R3)                                   0370
*   VROPLBUF=ADDR(VROWA);           /* PT TO OBTAIN WA       @ZA00606*/
*                                                                  0371
         LA    @14,VROWA(,R3)                                      0371
         ST    @14,VROPLBUF(,R3)                                   0371
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION INITIALIZES THE SCRATCH PARM LIST        @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0372
*   RFY                                                            0372
*     IECSDSF1 BASED(ADDR(VROWA));  /*                       @ZA00606*/
*   VRSPLOPT=SCRACODE;              /* SCRATCH OPTIONS       @ZA00606*/
         L     @14,SCRACODE                                        0373
         ST    @14,VRSPLOPT(,R3)                                   0373
*   VRSPLDSN=ADDR(DS1DSNAM);        /* PT TO DS NAME         @ZA00606*/
         LA    @14,56                                              0374
         ALR   @14,R3                                              0374
         ST    @14,VRSPLDSN(,R3)                                   0374
*   VRSPLVLP=ADDR(VRSVL);           /* PT TO VOL LIST        @ZA00606*/
         LA    @14,VRSVL(,R3)                                      0375
         ST    @14,VRSPLVLP(,R3)                                   0375
*   VRSVLNE=INCR1;                  /* IND 1 VOLUME          @ZA00606*/
*                                                                  0376
         LA    @14,1                                               0376
         STH   @14,VRSVLNE(,R3)                                    0376
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION PROCESSES EACH VOLUME LIST ENTRY IN      @ZA00606*/
*   /* TURN. IF THE VOLUME IS NOT OWNED BY THE MASTER        @ZA00606*/
*   /* CATALOG THEN THE VOLUME CLEANUP SUB FUNCTION IS       @ZA00606*/
*   /* CALLED TO CLEAN VSAM FROM THE VOLUME.                 @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0377
*   DO VRVLI=1 TO LTLENGTH/LENGTH(LTENTRY);/* DO ALL VOL     @ZA00606*/
*                                                                  0377
         B     @DE00377                                            0377
@DL00377 DS    0H                                                  0378
*     /***************************************************************/
*     /*                                                             */
*     /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0378
*     CCAPROB=IGNOREIT;             /* CLEAR RETURN CODE     @Y30SSJG*/
         SLR   @14,@14                                             0378
         ST    @14,CCAPROB(,R11)                                   0378
*     CCASRCH=CCASRCH&&CCASRCH;     /* CLEAR SRCH ARG FLD            */
         XC    CCASRCH(44,R11),CCASRCH(R11)                        0379
*     CCASRCH(1:6)=LTVOLSER(VRVLI); /* SET VOL ENTRY NAM     @ZA00606*/
         L     @14,VRVLI(,R3)                                      0380
         SLA   @14,3                                               0380
         L     @10,CCACPL(,R11)                                    0380
         L     @10,CTGFVT(,@10)                                    0380
         L     @10,CTGFVVLT(,@10)                                  0380
         ALR   @10,@14                                             0380
         AL    @10,@CF03936                                        0380
         MVC   CCASRCH(6,R11),LTVOLSER-4(@10)                      0380
*     DO;                                                          0381
*       CCAF1KEY=ON;                /* TRUE NAME GET                 */
*       CCAF1KGE=OFF;               /* NOT GET NEXT                  */
*       CCAF1UP=OFF;                /* NOT GET UPD                   */
         OI    CCAF1KEY(R11),B'00010000'                           0384
         NI    CCAF1KGE(R11),B'11110101'                           0384
*       CCAURAB=ADDR(CCARAB3);      /* SET RAB PTR                   */
*                                                                  0385
         LA    @14,CCARAB3(,R11)                                   0385
         ST    @14,CCAURAB(,R11)                                   0385
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0386
*Z024GET:                                                          0386
*       CALL IGGPGET;               /* GET RECORD                    */
Z024GET  L     @15,@CV00042                                        0386
         BALR  @14,@15                                             0386
*     END;                          /* GET VOL ENTRY         @ZA00606*/
*     IF CCACD1=RCENT THEN          /* IF ^ FND THEN VOL     @ZA00606*/
         CLI   CCACD1(R11),8                                       0388
         BNE   @RF00388                                            0388
*       DO;                         /* ^ OWNED BY MSTR C     @ZA00606*/
*                                                                  0389
*         /***********************************************************/
*         /*                                                         */
*         /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0390
*         CCAPROB=IGNOREIT;         /* CLEAR ERROR CODE      @Y30SSJG*/
         SLR   @14,@14                                             0390
         ST    @14,CCAPROB(,R11)                                   0390
*         VVOLLVSR(1)=LTVOLSER(VRVLI);/* VOLSER FOR VOL MNT ROUT   0391
*                                                            @ZA00606*/
         L     @14,VRVLI(,R3)                                      0391
         SLA   @14,3                                               0391
         L     @10,CCACPL(,R11)                                    0391
         L     @10,CTGFVT(,@10)                                    0391
         L     @10,CTGFVVLT(,@10)                                  0391
         ALR   @10,@14                                             0391
         AL    @10,@CF03936                                        0391
         MVC   VVOLLVSR+8(6,R3),LTVOLSER-4(@10)                    0391
*         R1=ADDR(VRVL);            /* PT TO VOL MNT PL      @ZA00606*/
         LA    R1,VRVL(,R3)                                        0392
*         R15=VR192V;               /* PT TO VOL MNT ROUT    @ZA00606*/
         L     R15,VR192V(,R3)                                     0393
*         R13=R13+TWLV;             /* SAV AR FOR VOL MNT    @ZA00606*/
         AL    R13,@CF00107                                        0394
*         GEN(BALR 14,15);          /* GO MOUNT VOLUME       @ZA00606*/
         BALR 14,15
*         R13=R13-TWLV;             /* RESTORE R13           @ZA00606*/
         SL    R13,@CF00107                                        0396
*         IF R15^=OKAY THEN         /* IF NOT OK THEN        @ZA00606*/
         LTR   R15,R15                                             0397
         BZ    @RF00397                                            0397
*           LTRETCD1(VRVLI)=RCNMNTD;/* IND VOL ^ MNTD        @ZA00606*/
         L     @14,VRVLI(,R3)                                      0398
         SLA   @14,3                                               0398
         L     @10,CCACPL(,R11)                                    0398
         L     @10,CTGFVT(,@10)                                    0398
         L     @10,CTGFVVLT(,@10)                                  0398
         LA    @05,72                                              0398
         AL    @10,@CF03938                                        0398
         STC   @05,LTRETCD1-2(@14,@10)                             0398
*         ELSE                      /* VOL MOUNT IS OK       @ZA00606*/
*           DO;                     /*                       @ZA00606*/
         B     @RC00397                                            0399
@RF00397 DS    0H                                                  0400
*             UCBPTR=VVOLLUCB(1);   /* SAVE UCB PTR          @ZA00606*/
         LA    @14,8                                               0400
         ALR   @14,R3                                              0400
         L     UCBPTR,VVOLLUCB(,@14)                               0400
*             VRSVLDTY=UCBTYP;      /* SET DEV TYPE          @ZA00606*/
         MVC   VRSVLDTY(4,R3),UCBTYP(UCBPTR)                       0401
*             VRSVLSER=VVOLLVSR(1); /* SET VOL SER           @ZA00606*/
         MVC   VRSVLSER(6,R3),VVOLLVSR(@14)                        0402
*Z026VRCV:                                                         0403
*             CALL IGGPVRCV;        /* GO CLEAN VOLUME       @ZA00606*/
Z026VRCV BAL   @14,IGGPVRCV                                        0403
*             LTRETCD1(VRVLI)=CCACD1;/* STORE RESULT CDE     @ZA00606*/
*                                                                  0404
         L     @14,VRVLI(,R3)                                      0404
         SLA   @14,3                                               0404
         L     @10,CCACPL(,R11)                                    0404
         L     @10,CTGFVT(,@10)                                    0404
         L     @10,CTGFVVLT(,@10)                                  0404
         SLR   @05,@05                                             0404
         IC    @05,CCACD1(,R11)                                    0404
         AL    @10,@CF03938                                        0404
         STC   @05,LTRETCD1-2(@14,@10)                             0404
*             /*******************************************************/
*             /*                                                     */
*             /* DECREMENT THE UCB DATA MGMT COUNT           @ZA00606*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0405
*             GEN REFS(UCBPTR,UCBDMCT,R0,R1,R2);                   0405
*                                                    /*      @ZA00606*/
CSLP                L R0,UCBDMCT-THREE(,UCBPTR)           /* @ZA00606*/
                    LR R1,R0                              /* @ZA00606*/
                    LA R2,ONE                             /* @Y30SSJG*/
                    SLR R1,R2                             /* @ZA00606*/
                    CS R0,R1,UCBDMCT-THREE(UCBPTR)        /* @ZA00606*/
                    BNZ CSLP                              /* @ZA00606*/
*           END;                    /*                       @ZA00606*/
*       END;                        /*                       @ZA00606*/
*     ELSE                          /*                       @ZA00606*/
*       IF CCACD1=RCS THEN          /* IF VOL ENT FND        @ZA00606*/
         B     @RC00388                                            0408
@RF00388 CLI   CCACD1(R11),0                                       0408
         BNE   @RF00408                                            0408
*         LTRETCD1(VRVLI)=RCVNDSPD; /* IND VOL ^ CLEANED     @ZA00606*/
         L     @14,VRVLI(,R3)                                      0409
         SLA   @14,3                                               0409
         L     @10,CCACPL(,R11)                                    0409
         L     @10,CTGFVT(,@10)                                    0409
         L     @10,CTGFVVLT(,@10)                                  0409
         LA    @05,160                                             0409
         AL    @10,@CF03938                                        0409
         STC   @05,LTRETCD1-2(@14,@10)                             0409
*       ELSE                        /*                       @ZA00606*/
*         LTRETCD1(VRVLI)=CCACD1;   /* STORE I/O ERR CDE     @ZA00606*/
         B     @RC00408                                            0410
@RF00408 L     @14,VRVLI(,R3)                                      0410
         SLA   @14,3                                               0410
         L     @10,CCACPL(,R11)                                    0410
         L     @10,CTGFVT(,@10)                                    0410
         L     @10,CTGFVVLT(,@10)                                  0410
         SLR   @05,@05                                             0410
         IC    @05,CCACD1(,R11)                                    0410
         AL    @10,@CF03938                                        0410
         STC   @05,LTRETCD1-2(@14,@10)                             0410
*   END;                            /* END OF VOL LST LP     @ZA00606*/
@RC00408 DS    0H                                                  0411
@RC00388 LA    @14,1                                               0411
         AL    @14,VRVLI(,R3)                                      0411
@DE00377 ST    @14,VRVLI(,R3)                                      0411
         L     @10,CCACPL(,R11)                                    0411
         L     @10,CTGFVT(,@10)                                    0411
         L     @10,CTGFVVLT(,@10)                                  0411
         LH    @06,LTLENGTH(,@10)                                  0411
         SRDA  @06,32                                              0411
         D     @06,@CF00060                                        0411
         CR    @14,@07                                             0411
         BNH   @DL00377                                            0411
*   GEN(DELETE EP=IDA0192V);        /* DEL VOL MNT ROUT      @ZA00606*/
*                                                                  0412
         DELETE EP=IDA0192V
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR CCAMODID, CCAREASN, AND CCARETRN                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0413
*   CCAPROB=IGNOREIT;               /* 0 LAST VOLS ERR CD    @Y30SSJG*/
         SLR   @14,@14                                             0413
         ST    @14,CCAPROB(,R11)                                   0413
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0414
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPVRCV');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPVRCV'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0417
@EF00006 DS    0H                                                  0417
@ER00006 BR    @14                                                 0417
@PB00006 DS    0H                                                  0418
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0419
*/********************************************************************/
*/*                                                                  */
*/*        IGGPVRCV  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0419
*IGGPVRCV:                                                         0419
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0419
IGGPVRCV DS    0H                                                  0420
*Z028:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z028VRCV:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0420
*    (R5,                                                          0420
*     R6,                                                          0420
*     R7,                                                          0420
*     R8,                                                          0420
*     R9,                                                          0420
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z028     DS    0H                                                  0420
Z028VRCV DS    0H                                                  0421
*   RFY                                                            0421
*    (R2,                                                          0421
*     R3,                                                          0421
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA     0423
*                                                            @ZA00606*/
*                                                                  0423
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBFUNCTION PERFORMS THE CLEANUP FUNCTION        @ZA00606*/
*   /* FOR A VOLUME CONTAINING VSAM DATA SPACES AND          @ZA00606*/
*   /* VSAM OWNERSHIP. IT 1ST READS THE F4 DSCB TO GET       @ZA00606*/
*   /* INFORMATION ABOUT THE VTOC. IT NEXT SCANS THE         @ZA00606*/
*   /* VTOC DOING AN OBTAIN BY CCHHR FOR EACH DSCB IN        @ZA00606*/
*   /* THE VTOC. EACH F1 DSCB THAT HAS A VSAM DSORG IS       @ZA00606*/
*   /* SCRATCHED. WHEN THE VTOC SCAN IS COMPLETED THIS       @ZA00606*/
*   /* ROUTINE THEN CLEARS THE F4 DSCB FIELDS WHICH          @ZA00606*/
*   /* INDCATE VSAM OWNERSHIP.                               @ZA00606*/
*   /* THIS SECTION READS THE F4 DSCB                        @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0424
*   RFY                                                            0424
*     IGGMF4WA BASED(ADDR(VRF4WA)); /*                       @ZA00606*/
*   RFY                                                            0425
*     IECSDSF4 BASED(ADDR(F4WBUF)); /*                       @ZA00606*/
*   CCAURAB=ADDR(VRF4WA);           /* PT TO F4 R/W RT WA    @ZA00606*/
         LA    @14,VRF4WA(,R3)                                     0426
         ST    @14,CCAURAB(,R11)                                   0426
*   F4WDUCB=UCBPTR;                 /* STORE UCB ADDR        @ZA00606*/
*                                                                  0427
         STCM  UCBPTR,7,F4WDUCB+200(R3)                            0427
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLBU                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0428
*Z029F4RD:                                                         0428
*   CALL IGGPF4RD;                  /* READ THE F4 DSCB      @ZA00606*/
Z029F4RD L     @15,@CV00040                                        0428
         BALR  @14,@15                                             0428
*   IF CCACD1^=OKAY THEN            /* IF ERROR              @ZA00606*/
         CLI   CCACD1(R11),0                                       0429
         BE    @RF00429                                            0429
*     CALL EXIT;                    /* GET OUT               @ZA00606*/
         BAL   @14,EXIT                                            0430
*   VRCCHHR=F4WCCHHR;               /* COPY F4 DISK ADDR     @ZA00606*/
@RF00429 MVC   VRCCHHR(5,R3),F4WCCHHR+200(R3)                      0431
*   VRHWM=DS4HPCHR;                 /* COPY HI WAT MK        @ZA00606*/
*                                                                  0432
         MVC   VRHWM(5,R3),DS4HPCHR+320(R3)                        0432
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLBU                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0433
*Z030F4DQ:                                                         0433
*   CALL IGGPF4DQ;                  /* DEQ THE VTOC          @ZA00606*/
*                                                                  0433
Z030F4DQ L     @15,@CV00039                                        0433
         BALR  @14,@15                                             0433
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OBTAINS VTOC DSCBS AND SCRATCHES         @ZA00606*/
*   /* THOSE F1 DSCBS WHICH INDICATE VSAM DSORG.             @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0434
*   VRR=VRR+INCR2;                  /* SKIP 1ST F5 DSCB      @ZA00606*/
         LA    @14,2                                               0434
         SLR   @10,@10                                             0434
         IC    @10,VRR(,R3)                                        0434
         ALR   @14,@10                                             0434
         STC   @14,VRR(,R3)                                        0434
*   IF VRR>DS4DEVDT THEN            /* IF R TOO HIGH THEN    @ZA00606*/
         CLC   VRR(1,R3),DS4DEVDT+320(R3)                          0435
         BNH   @RF00435                                            0435
*Z031ACHR:                                                         0436
*     CALL IGGPACHR;                /* GO ADJUST CCHHR       @ZA00606*/
Z031ACHR BAL   @14,IGGPACHR                                        0436
*   DO WHILE(VRCCHHR^>VRHWM);       /* LOOP TO HI WATR MK    @ZA00606*/
@RF00435 B     @DE00437                                            0437
@DL00437 DS    0H                                                  0438
*     R1=ADDR(VROPL);               /* PT TO OBTAIN PL       @ZA00606*/
         LA    R1,VROPL(,R3)                                       0438
*     GEN(SVC 27);                  /* DO OBTAIN             @ZA00606*/
         SVC 27
*     IF R15^=OKAY THEN             /* ANY ERROR ?           @ZA00606*/
         LTR   R15,R15                                             0440
         BZ    @RF00440                                            0440
*       DO;                         /* YES                   @ZA00606*/
*         DO;                                                      0442
*           CCAMODID='BN';          /* SET MODULE ID                 */
         MVC   CCAMODID(2,R11),@CC03866                            0443
*           CCAREASN=R15;           /* SET REASON CODE               */
         STC   R15,CCAREASN(,R11)                                  0444
*           CCARETRN=RCIOU;         /* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'34'                                 0445
*         END;                      /* INDICATE              @Y30SSJG
*                                      IO ERROR              @Y30SSJG*/
*         CALL EXIT;                /* GET OUT               @ZA00606*/
         BAL   @14,EXIT                                            0447
*       END;                        /*                       @ZA00606*/
*     IF DS1FMTID=FMTONE&           /* F1 DSCB &             @ZA00606*/
*         VSAMORG=ON THEN           /* VSAM DSORG            @ZA00606*/
@RF00440 LA    @14,56                                              0449
         ALR   @14,R3                                              0449
         CLI   DS1FMTID(@14),C'1'                                  0449
         BNE   @RF00449                                            0449
         TM    VSAMORG(@14),B'00001000'                            0449
         BNO   @RF00449                                            0449
*       DO;                         /* YES,SCRATCH DSCB      @ZA00606*/
*         R0=UCBPTR;                /* PT TO UCB FOR SCR     @ZA00606*/
         LR    R0,UCBPTR                                           0451
*         R1=ADDR(VRSPL);           /* PT TO SCRATCH PL      @ZA00606*/
         LA    R1,VRSPL(,R3)                                       0452
*         GEN(SVC 29);              /* GO SCRATCH DSCB       @ZA00606*/
         SVC 29
*       END;                        /*                       @ZA00606*/
*     VRR=VRR+INCR1;                /* ADD 1 TO R            @ZA00606*/
@RF00449 LA    @14,1                                               0455
         SLR   @10,@10                                             0455
         IC    @10,VRR(,R3)                                        0455
         ALR   @14,@10                                             0455
         STC   @14,VRR(,R3)                                        0455
*     IF VRR>DS4DEVDT THEN          /* IF END OF TRACK       @ZA00606*/
         CLC   VRR(1,R3),DS4DEVDT+320(R3)                          0456
         BNH   @RF00456                                            0456
*Z033ACHR:                                                         0457
*       CALL IGGPACHR;              /* GO ADJUST CCHHR       @ZA00606*/
Z033ACHR BAL   @14,IGGPACHR                                        0457
*   END;                            /* END OF OBT/SCR LP     @ZA00606*/
*                                                                  0458
@RF00456 DS    0H                                                  0458
@DE00437 CLC   VRCCHHR(5,R3),VRHWM(R3)                             0458
         BNH   @DL00437                                            0458
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION REMOVES VSAM OWNERSHIP FROM THE          @ZA00606*/
*   /* VOLUME.                                               @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0459
*   F4WDUCB=UCBPTR;                 /* RESET UCB ADDR        @ZA00606*/
*                                                                  0459
         STCM  UCBPTR,7,F4WDUCB+200(R3)                            0459
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLBU                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0460
*Z034F4RD:                                                         0460
*   CALL IGGPF4RD;                  /* READ F4 DSCB          @ZA00606*/
Z034F4RD L     @15,@CV00040                                        0460
         BALR  @14,@15                                             0460
*   IF CCACD1^=OKAY THEN            /* IF ERROR THEN         @ZA00606*/
         CLI   CCACD1(R11),0                                       0461
         BE    @RF00461                                            0461
*     CALL EXIT;                    /* GET OUT               @ZA00606*/
         BAL   @14,EXIT                                            0462
*   DS4AMCAT=DS4AMCAT&&DS4AMCAT;    /* CLEAR OWNERSHIP       @ZA00606*/
@RF00461 LA    @14,320                                             0463
         ALR   @14,R3                                              0463
         XC    DS4AMCAT(3,@14),DS4AMCAT(@14)                       0463
*   DS4AMTIM=DS4AMTIM&&DS4AMTIM;    /* CLEAR TIMESTAMP       @ZA00606*/
         XC    DS4AMTIM(8,@14),DS4AMTIM(@14)                       0464
*   DS4R2TIM=DS4R2TIM&&DS4R2TIM;    /* CLEAR RECOVERY        @Y30SSJG
*                                      TIME STAMP            @Y30SSJG*/
         XC    DS4R2TIM(8,@14),DS4R2TIM(@14)                       0465
*   DS4VSCRA=DS4VSCRA&&DS4VSCRA;    /* CLEAR SUM TT          @Y30SSJG*/
*                                                                  0466
         SLR   @10,@10                                             0466
         ICM   @10,3,DS4VSCRA(@14)                                 0466
         LR    @05,@10                                             0466
         XR    @05,@10                                             0466
         STCM  @05,3,DS4VSCRA(@14)                                 0466
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLBU                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0467
*Z035F4WR:                                                         0467
*   CALL IGGPF4WR;                  /* WRITE BACK F4 DSCB    @ZA00606*/
Z035F4WR L     @15,@CV00041                                        0467
         BALR  @14,@15                                             0467
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0468
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPACHR');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPACHR'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0471
@EF00007 DS    0H                                                  0471
@ER00007 BR    @14                                                 0471
@PB00007 DS    0H                                                  0472
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0473
*/********************************************************************/
*/*                                                                  */
*/*        IGGPACHR  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0473
*IGGPACHR:                                                         0473
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0473
IGGPACHR DS    0H                                                  0474
*Z036:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z036ACHR:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0474
*    (R5,                                                          0474
*     R6,                                                          0474
*     R7,                                                          0474
*     R8,                                                          0474
*     R9,                                                          0474
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z036     DS    0H                                                  0474
Z036ACHR DS    0H                                                  0475
*   RFY                                                            0475
*    (R2,                                                          0475
*     R3,                                                          0475
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA     0477
*                                                            @ZA00606*/
*                                                                  0477
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CORRECTS INVALID CCHHR VALUES.           @ZA00606*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0478
*   VRR=INCR1;                      /* SET R TO 1            @ZA00606*/
         MVI   VRR(R3),X'01'                                       0478
*   VRHH=VRHH+INCR1;                /* ADD 1 TO HH           @ZA00606*/
         LA    @14,1                                               0479
         LH    @10,VRHH(,R3)                                       0479
         ALR   @10,@14                                             0479
         STH   @10,VRHH(,R3)                                       0479
*   IF VRHH^<TPERCYL THEN           /* HH TOO HIGH           @ZA00606*/
         ICM   @05,12,TPERCYL+320(R3)                              0480
         SRA   @05,16                                              0480
         CR    @10,@05                                             0480
         BL    @RF00480                                            0480
*     DO;                           /* YES                   @ZA00606*/
*       VRHH=NONE;                  /* SET HH TO 0           @ZA00606*/
         SLR   @10,@10                                             0482
         STH   @10,VRHH(,R3)                                       0482
*       VRCC=VRCC+INCR1;            /* ADD 1 TO CC           @ZA00606*/
         AH    @14,VRCC(,R3)                                       0483
         STH   @14,VRCC(,R3)                                       0483
*     END;                          /*                       @ZA00606*/
*   ELSE                                                           0485
*     ;                             /* NO CORRECTION         @ZA00606*/
@RF00480 DS    0H                                                  0486
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0486
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPALMD');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPALMD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0489
@EF00008 DS    0H                                                  0489
@ER00008 BR    @14                                                 0489
@PB00008 DS    0H                                                  0490
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0491
*/********************************************************************/
*/*                                                                  */
*/*        IGGPALMD  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0491
*IGGPALMD:                                                         0491
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0491
IGGPALMD DS    0H                                                  0492
*   GEN(ENTRY IGGPALMD );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPALMD
*Z037:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z037ALMD:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0493
*    (R5,                                                          0493
*     R6,                                                          0493
*     R7,                                                          0493
*     R8,                                                          0493
*     R9,                                                          0493
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z037     DS    0H                                                  0493
Z037ALMD DS    0H                                                  0494
*   RFY                                                            0494
*    (R2,                                                          0494
*     R3,                                                          0494
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0499
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LSPS*/
*   /* ROUTINE TO CALL MODIFY FOR THE RECORD UPDATING        @Y30LSPS*/
*   /* SECURITY INFORMATION                                  @Y30LSPS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0500
*   CCAMNLEN=NORMCORE;              /* SET CORE NEEDED       @Y30LSPS*/
         MVC   CCAMNLEN(3,R11),@CF00069+1                          0500
*   RFY                                                            0501
*    (R1) RSTD;                     /*                       @Y30LSPS*/
*   RFY                                                            0502
*    (R1) RSTD;                     /*                       @Y30LSPS*/
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0503
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0504
         MVI   CCAMNSPL(R11),X'FC'                                 0504
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0505
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0507
         LTR   R1,R1                                               0507
         BZ    @RF00507                                            0507
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='BN', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0508
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0508
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03928                             0508
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0509
         B     @RC00507                                            0509
@RF00507 DS    0H                                                  0510
*       DO;                                                        0510
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0511
         TM    MNATFULL(R11),B'10000000'                           0511
         BNO   @RF00511                                            0511
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0512
*Z041ARFS:                                                         0512
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z041ARFS L     @15,@CV00037                                        0512
         BALR  @14,@15                                             0512
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0513
*                                      PUSH AND TRACK                */
@RF00511 DS    0H                                                  0513
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0514
*     END;                          /*                       @Y30LSPS*/
*   RFY                                                            0516
*    (R1) UNRSTD;                   /*                       @Y30LSPS*/
@RC00507 DS    0H                                                  0517
*   IF CCACD1^=OKAY THEN            /* CHECK FOR BAD GETMAIN         */
         CLI   CCACD1(R11),0                                       0517
         BE    @RF00517                                            0517
*     CALL EXIT;                    /* ERROR RETURN          @Y30LSPS*/
         BAL   @14,EXIT                                            0518
*   CMEXTFLS=CCAMNADR;              /* SAVE THE CORE ADDRESS         */
@RF00517 L     @14,CCACMSWA(,R11)                                  0519
         L     @10,CCAMNADR(,R11)                                  0519
         ST    @10,CMEXTFLS(,@14)                                  0519
*   CMTSTFPL=CMEXTFLS;              /* SET TEST FPL ADDRESS          */
         ST    @10,CMTSTFPL(,@14)                                  0520
*   RFY                                                            0521
*     CTGPL BASED(CCAMCPL);         /*                       @Y30LSPS*/
*   CCAMCPL=CMSRCCOR;               /* SET CPL LOCATION      @Y30LSPS*/
         L     @14,CMSRCCOR(,@14)                                  0522
         ST    @14,CCAMCPL(,R11)                                   0522
*   CCAREUSE=ON;                    /* INDICATE RABS REUSEABLE       */
         OI    CCAREUSE(R11),B'00000100'                           0523
*   CTGPL=CTGPL&&CTGPL;             /* CLEAR THE CPL CORE            */
         XC    CTGPL(28,@14),CTGPL(@14)                            0524
*   CCAF2NVC=ON;                    /* SET NO VALIDITY CHECK FLG     */
         OI    CCAF2NVC(R11),B'01000000'                           0525
*   CCARABB=CCAURAB;                /* SET BASE RECORD RAB ADDR      */
         L     @14,CCAURAB(,R11)                                   0526
         ST    @14,CCARABB(,R11)                                   0526
*   CCARABF=ADDR(CCARAB1);          /* SET FIRST RAB TO USE          */
         LA    @14,CCARAB1(,R11)                                   0527
         ST    @14,CCARABF(,R11)                                   0527
*   CCARABL=ADDR(CCARAB3);          /* SET LAST RAB TO USE           */
         LA    @14,CCARAB3(,R11)                                   0528
         ST    @14,CCARABL(,R11)                                   0528
*   CCAMOD=ON;                      /* SET MODIFY CALL FLAG          */
         OI    CCAMOD(R11),B'00000001'                             0529
*   IF CCACPL->CTGFVT->CTGFVAMD^=NONE THEN/* AMDSB CHANGE            */
         L     @01,CCACPL(,R11)                                    0530
         L     @01,CTGFVT(,@01)                                    0530
         L     @14,CTGFVAMD(,@01)                                  0530
         LTR   @14,@14                                             0530
         BZ    @RF00530                                            0530
*     DO;                           /* SET UP TEST FPL FOR MOD       */
*       CTGNOFLD=INCR1;             /* SET NO. OF FPL ADDRESSES      */
         L     @05,CCAMCPL(,R11)                                   0532
         MVI   CTGNOFLD(@05),X'01'                                 0532
*       CTGFIELD(1)=CCACPL->CTGFVT->CTGFVAMD;/* FPL ADDR             */
         ST    @14,CTGFIELD(,@05)                                  0533
*       CTGFIELD(1)->CTGFLCHN=CMTSTFPL;/* SET TEST FPL ADDR          */
         ST    @10,CTGFLCHN(,@14)                                  0534
*Z042ALBT:                                                         0535
*       CALL IGGPALBT;              /* BUILD THE TEST FPL            */
Z042ALBT BAL   @14,IGGPALBT                                        0535
*       CTGFIELD(1)->CTGFLCHN->CTGFLDGC=AMDCTGPC;/* GROUP CODE       */
         L     @01,CCAMCPL(,R11)                                   0536
         L     @01,CTGFIELD(,@01)                                  0536
         L     @01,CTGFLCHN(,@01)                                  0536
         MVI   CTGFLDGC(@01),X'01'                                 0536
*     END;                          /*                       @Y30LSPS*/
*   IF CCACPL->CTGFVT->CTGFVSTY^=NONE THEN/* SECURITY CHANGE         */
@RF00530 L     @01,CCACPL(,R11)                                    0538
         L     @01,CTGFVT(,@01)                                    0538
         L     @14,CTGFVSTY(,@01)                                  0538
         LTR   @14,@14                                             0538
         BZ    @RF00538                                            0538
*     DO;                           /* DETERMINE IF NEW OR OLD       */
*       CTGNOFLD=CTGNOFLD+INCR1;    /* SET FPL COUNT         @Y30LSPS*/
         L     @10,CCAMCPL(,R11)                                   0540
         LA    @05,1                                               0540
         SLR   @01,@01                                             0540
         IC    @01,CTGNOFLD(,@10)                                  0540
         ALR   @05,@01                                             0540
         STC   @05,CTGNOFLD(,@10)                                  0540
*       CTGFIELD(CTGNOFLD)=CCACPL->CTGFVT->CTGFVSTY;               0541
         SLA   @05,2                                               0541
         ST    @14,CTGFIELD-4(@05,@10)                             0541
*       CCACPE5=CCACPE3-LENGTH(CATGOPT);/* SECURITY GOP              */
         L     @01,CCAURAB(,R11)                                   0542
         L     @10,CCACPE3(,@01)                                   0542
         SL    @10,@CF00135                                        0542
         ST    @10,CCACPE5(,R11)                                   0542
*       IF(CATGOGC1&TRUEGC)=PASSGC&CATGODEL=OFF THEN/*       @ZA11567
*                                      SECURITY GOP AND      @ZA11567
*                                      NOT DELETED           @ZA11567*/
         LA    @05,63                                              0543
         SLR   @01,@01                                             0543
         IC    @01,CATGOGC1(,@10)                                  0543
         NR    @05,@01                                             0543
         C     @05,@CF00071                                        0543
         BNE   @RF00543                                            0543
         TM    CATGODEL(@10),B'01000000'                           0543
         BNZ   @RF00543                                            0543
*         DO;                       /* BUILD A TEST FPL FOR CNG      */
*           CTGFIELD(CTGNOFLD)->CTGFLCHN=CMTSTFPL;/*         @Y30LSPS*/
         L     @01,CCACMSWA(,R11)                                  0545
         L     @10,CMTSTFPL(,@01)                                  0545
         ST    @10,CTGFLCHN(,@14)                                  0545
*Z043ALBT:                                                         0546
*           CALL IGGPALBT;          /* BUILD A TEST FPL      @Y30LSPS*/
Z043ALBT BAL   @14,IGGPALBT                                        0546
*           CTGFIELD(CTGNOFLD)->CTGFLCHN->CTGFLDGC=SECRTYGC;       0547
         L     @14,CCAMCPL(,R11)                                   0547
         SLR   @10,@10                                             0547
         IC    @10,CTGNOFLD(,@14)                                  0547
         SLA   @10,2                                               0547
         L     @01,CTGFIELD-4(@10,@14)                             0547
         L     @01,CTGFLCHN(,@01)                                  0547
         MVI   CTGFLDGC(@01),X'04'                                 0547
*         END;                      /*                       @Y30LSPS*/
*       IF RCDID=CTGTCL&            /* IF CLUSTER REC        @Z30TSBM*/
*           RCDCINO=CATCIVLU THEN   /* OF CATALOG            @Z30TSBM*/
@RF00543 L     @01,CCAURAB(,R11)                                   0549
         L     @14,CCACPE1(,@01)                                   0549
         CLI   RCDID(@14),C'C'                                     0549
         BNE   @RF00549                                            0549
         CLC   RCDCINO(3,@14),@CF00073+1                           0549
         BNE   @RF00549                                            0549
*         DO;                       /* INDICATE CATALOG      @Z30TSBM*/
*           CCAF11B5=OFF;           /* SECURITY LEVEL        @ZA30975*/
*           CCAF11B6=OFF;           /* MUST BE CHECKED       @ZA30975*/
         NI    CCAF11B5(R11),B'11110011'                           0552
*         END;                      /* AGAIN                 @Z30TSBM*/
*       ELSE                                                       0554
*         ;                         /* NOT CAT SEC CHG       @Z30TSBM*/
@RF00549 DS    0H                                                  0555
*     END;                          /*                       @Y30LSPS*/
*                                                                  0555
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAV                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*Z044MOD:                                                          0556
*   CALL IGGPMOD;                   /*                       @Y30LSPS*/
@RF00538 DS    0H                                                  0556
Z044MOD  L     @15,@CV00044                                        0556
         BALR  @14,@15                                             0556
*   CCAMNLEN=NORMCORE;              /*                       @Y30LSPS*/
         MVC   CCAMNLEN(3,R11),@CF00069+1                          0557
*   CCAMNADR=CMEXTFLS;              /*                       @Y30LSPS*/
         L     @01,CCACMSWA(,R11)                                  0558
         L     @14,CMEXTFLS(,@01)                                  0558
         ST    @14,CCAMNADR(,R11)                                  0558
*   RFY                                                            0559
*    (R1) RSTD;                     /*                       @Y30LSPS*/
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0560
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
         MVI   CCAMNSPL(R11),X'FC'                                 0561
*   DO;                                                            0562
*     IF MNATFULL=ON THEN           /* TRACKING TABLE FULL           */
*                                                                  0563
         TM    MNATFULL(R11),B'10000000'                           0563
         BNO   @RF00563                                            0563
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAT                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0564
*Z047ARFS:                                                         0564
*       CALL IGGPARFS;              /* YES,CALL SPILL ROUTINE        */
Z047ARFS L     @15,@CV00037                                        0564
         BALR  @14,@15                                             0564
*     GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/* PUSH 0565
*                                      AND TRACK                     */
@RF00563 DS    0H                                                  0565
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*   END;                                                           0566
*                                                                  0566
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE MAIN STORAGE FROM USER SUBPOOL 252                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0567
*   GEN(FREEMAIN L,MF=(E,(1))) ;    /*                       @Y30LSPS*/
         FREEMAIN L,MF=(E,(1))
*   RFY                                                            0568
*    (R1) UNRSTD;                   /*                       @Y30LSPS*/
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0569
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPALBT');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPALBT'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0572
@EF00009 DS    0H                                                  0572
@ER00009 BR    @14                                                 0572
@PB00009 DS    0H                                                  0573
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0574
*/********************************************************************/
*/*                                                                  */
*/*        IGGPALBT  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0574
*IGGPALBT:                                                         0574
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0574
IGGPALBT DS    0H                                                  0575
*Z048:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z048ALBT:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0575
*    (R5,                                                          0575
*     R6,                                                          0575
*     R7,                                                          0575
*     R8,                                                          0575
*     R9,                                                          0575
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z048     DS    0H                                                  0575
Z048ALBT DS    0H                                                  0576
*   RFY                                                            0576
*    (R2,                                                          0576
*     R3,                                                          0576
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0578
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LSPS*/
*   /* INTERNAL PROCEDURE TO BUILD TEST REL REP NO. FPLS             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0579
*   RFY                                                            0579
*     CTGFL BASED(CMTSTFPL);        /*                       @Y30LSPS*/
*   CTGFL=CTGFL&&CTGFL;             /* CLEAR THE TEST FPL CORE       */
         L     @14,CCACMSWA(,R11)                                  0580
         L     @10,CMTSTFPL(,@14)                                  0580
         XC    CTGFL(16,@10),CTGFL(@10)                            0580
*   CTGFLDNO=INCR1;                 /* NO. OF ENTRIES IN THE FPL     */
         MVI   CTGFLDNO(@10),X'01'                                 0581
*   CTGFLDNM=CMTSTFPL+LENGTH(CTGFL)+LENGTH(CTGFLDAT);/*      @Y30LSPS*/
         LA    @05,24                                              0582
         ALR   @05,@10                                             0582
         ST    @05,CTGFLDNM(,@10)                                  0582
*   CMFLDNME=RELREPNO;              /* SET THE TEST FIELD NAME     0583
*                                                            @Y30SSPJ*/
         MVC   CMFLDNME(8,@05),@CC00088                            0583
*   CTGFLDCD=CTGFLDGT;              /* SET TEST CONDITION            */
         MVI   CTGFLDCD(@10),X'20'                                 0584
*   CTGFLPT(1)=CTGFLDNM+LENGTH(CMFLDNME);/* SET DATA ADDRESS         */
         AL    @05,@CF00060                                        0585
         ST    @05,CTGFLPT(,@10)                                   0585
*   CTGFLNG(1)=LENGTH(RELCNTWK);    /* SET DATA LENGTH       @Y30LSPS*/
         LA    @05,2                                               0586
         ST    @05,CTGFLNG(,@10)                                   0586
*   RELCNTWK=NONE;                  /* SET UP THE TEST DATA          */
         L     @10,CTGFLPT(,@10)                                   0587
         SLR   @01,@01                                             0587
         STH   @01,RELCNTWK(,@10)                                  0587
*   CMTSTFPL=CTGFLPT(1)+LENGTH(RELCNTWK);/* NEXT TEST FL AD          */
         ALR   @10,@05                                             0588
         ST    @10,CMTSTFPL(,@14)                                  0588
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0589
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPALSV');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPALSV'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00010 DS    0H                                                  0592
@EF00010 DS    0H                                                  0592
@ER00010 BR    @14                                                 0592
@PB00010 DS    0H                                                  0593
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0594
*/********************************************************************/
*/*                                                                  */
*/*        IGGPALSV  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0594
*IGGPALSV:                                                         0594
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00011                                            0594
IGGPALSV DS    0H                                                  0595
*   GEN(ENTRY IGGPALSV );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPALSV
*Z049:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z049ALSV:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0596
*    (R5,                                                          0596
*     R6,                                                          0596
*     R7,                                                          0596
*     R8,                                                          0596
*     R9,                                                          0596
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z049     DS    0H                                                  0596
Z049ALSV DS    0H                                                  0597
*   RFY                                                            0597
*    (R2,                                                          0597
*     R3,                                                          0597
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0602
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30SSPJ*/
*   /* ROUTINE TO SORT THE EXTRACTED VOLUME SERIAL           @Y30SSPJ*/
*   /* NUMBER LIST AND TO BUILD THE RENAME PARAMETER         @Y30SSPJ*/
*   /* LIST AND CALL RENAME.                                 @Y30SSPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0603
*   RFY                                                            0603
*     CTGFL BASED(CMDTAFPL);        /*                       @Y30SSPJ*/
*                                                                  0603
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE NUMBER OF VOLUMES EXTRACTED                 @Y30SSPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0604
*   CMTOTVOL=CTGFLNG(1)/LENGTH(CMCATVOL);/* NO. OF VOLS      @Y30SSPJ*/
         L     @14,CCACMSWA(,R11)                                  0604
         L     @01,CMDTAFPL(,@14)                                  0604
         L     @06,CTGFLNG(,@01)                                   0604
         SRDA  @06,32                                              0604
         D     @06,@CF00068                                        0604
         STH   @07,CMTOTVOL(,@14)                                  0604
*   CCAMNLEN=LENGTH(RENAMLST)+(CMTOTVOL*LENGTH(RENVOLS));/* SET    0605
*                                      LENGTH                @Y30SSPJ*/
         MH    @07,@CH00107                                        0605
         AL    @07,@CF00379                                        0605
         STCM  @07,7,CCAMNLEN(R11)                                 0605
*   RFY                                                            0606
*    (R1) RSTD;                     /*                       @Y30SSPJ*/
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0607
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0608
         MVI   CCAMNSPL(R11),X'FC'                                 0608
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0611
         LTR   R1,R1                                               0611
         BZ    @RF00611                                            0611
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='BN', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0612
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0612
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03928                             0612
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0613
         B     @RC00611                                            0613
@RF00611 DS    0H                                                  0614
*       DO;                                                        0614
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0615
         TM    MNATFULL(R11),B'10000000'                           0615
         BNO   @RF00615                                            0615
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0616
*Z053ARFS:                                                         0616
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z053ARFS L     @15,@CV00037                                        0616
         BALR  @14,@15                                             0616
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0617
*                                      PUSH AND TRACK                */
@RF00615 DS    0H                                                  0617
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0618
*     END;                          /* GET STORAGE           @Y30SSPJ*/
*   RFY                                                            0620
*    (R1) UNRSTD;                   /*                       @Y30SSPJ*/
@RC00611 DS    0H                                                  0621
*   IF CCACD1^=RCS THEN             /* SUCCESSFULLY GET CORE @Y30SSPJ*/
         CLI   CCACD1(R11),0                                       0621
         BE    @RF00621                                            0621
*     CALL EXIT;                    /* IF NOT, ERROR EXIT    @Y30SSPJ*/
         BAL   @14,EXIT                                            0622
*   ELSE                                                           0623
*     ;                             /* GETMAIN SUCCESSFULL   @Y30SSPJ*/
*                                                                  0623
@RF00621 DS    0H                                                  0624
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR THE CORE JUST OBTAINED                          @Y30SSPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   CMRNMLST=CCAMNADR;              /* SAVE CORE ADDRESS     @Y30SSPJ*/
         L     @01,CCACMSWA(,R11)                                  0624
         L     @14,CCAMNADR(,R11)                                  0624
         ST    @14,CMRNMLST(,@01)                                  0624
*   R2=CCAMNADR;                    /* SET CORE REFERENCE    @Y30SSPJ*/
         LR    R2,@14                                              0625
*   R3=CCAMNLEN;                    /* SET CORE LENGTH       @Y30SSPJ*/
         L     R3,CCAMNLEN-1(,R11)                                 0626
         LA    R3,0(,R3)                                           0626
*   RFY                                                            0627
*    (R5) RSTD;                     /*                       @Y30SSPJ*/
*   R5=NONE;                        /* SET PADDING CHARACTER @Y30SSPJ*/
         SLR   R5,R5                                               0628
*   GEN(MVCL R2,R4);                /* CLEAR THE CORE        @Y30SSPJ*/
         MVCL R2,R4
*   RFY                                                            0630
*    (R5) UNRSTD;                   /*                       @Y30SSPJ*/
*                                                                  0630
*   /*****************************************************************/
*   /*                                                               */
*   /* SORT THE VOLUME LIST                                  @Y30SSPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0631
*   DO EXTVOLRF=INCR1 TO CMTOTVOL;  /* PROCESS ALL EXTRACTED VOLS  0631
*                                                            @Y30SSPJ*/
         LA    EXTVOLRF,1                                          0631
         B     @DE00631                                            0631
@DL00631 DS    0H                                                  0632
*     PROCESS=GO;                   /* SET PROCESS INDICATOR @Y30SSPJ*/
         L     @01,CCACMSWA(,R11)                                  0632
         MVC   PROCESS(2,@01),@CC00074                             0632
*     RENVOLRF=INCR1;               /* INITIALIZE THE VOLUME COUNTER
*                                                            @Y30SSPJ*/
         LA    RENVOLRF,1                                          0633
*     DO WHILE PROCESS=GO;          /* SORT THE LIST FOR DUPS      0634
*                                                            @Y30SSPJ*/
         B     @DE00634                                            0634
@DL00634 DS    0H                                                  0635
*       IF RENVOLID(RENVOLRF)=CMEXTVOL(EXTVOLRF) THEN/* DUPLICATE  0635
*                                      VOLUME FOUND?         @Y30SSPJ*/
         LR    @14,RENVOLRF                                        0635
         MH    @14,@CH00107                                        0635
         L     @10,CCACMSWA(,R11)                                  0635
         L     @01,CMRNMLST(,@10)                                  0635
         LR    @05,EXTVOLRF                                        0635
         MH    @05,@CH00068                                        0635
         L     @09,CCAMCPL(,R11)                                   0635
         L     @09,CTGWKA(,@09)                                    0635
         ALR   @01,@14                                             0635
         ALR   @09,@05                                             0635
         AL    @09,@CF03941                                        0635
         CLC   RENVOLID-12(6,@01),CMEXTVOL-10(@09)                 0635
         BNE   @RF00635                                            0635
*         PROCESS=NG;               /* YES-VOLS SAME, NO ENTRY MADE
*                                                            @Y30SSPJ*/
         MVC   PROCESS(2,@10),@CC00076                             0636
*       ELSE                        /* NO-CHECK FOR AN EMPTY SLOT  0637
*                                                            @Y30SSPJ*/
*         IF RENVOLID(RENVOLRF)=NULVOLID THEN/* HOLE?        @Y30SSPJ*/
         B     @RC00635                                            0637
@RF00635 LR    @14,RENVOLRF                                        0637
         MH    @14,@CH00107                                        0637
         L     @10,CCACMSWA(,R11)                                  0637
         L     @05,CMRNMLST(,@10)                                  0637
         ST    @14,@TF00001                                        0637
         ALR   @14,@05                                             0637
         CLC   RENVOLID-12(6,@14),NULVOLID                         0637
         BNE   @RF00637                                            0637
*           IF CMEDEVCL(EXTVOLRF)=DADEVTYP THEN/* YES-DIRECT ACCESS
*                                      DEVICE TYPE?          @Y30SSPJ*/
         LR    @14,EXTVOLRF                                        0638
         MH    @14,@CH00068                                        0638
         L     @01,CCAMCPL(,R11)                                   0638
         L     @01,CTGWKA(,@01)                                    0638
         LA    @09,0(@14,@01)                                      0638
         AL    @09,@CF03942                                        0638
         SLR   @08,@08                                             0638
         IC    @08,CMEDEVCL-8(,@09)                                0638
         C     @08,@CF00066                                        0638
         BNE   @RF00638                                            0638
*             DO;                   /* YES-STORE THE VOL ID &      0639
*                                      DEVTYPE?              @Y30SSPJ*/
*               RENVOLID(RENVOLRF)=CMEXTVOL(EXTVOLRF);/* YES-VOL ID
*                                                            @Y30SSPJ*/
         LR    @09,@05                                             0640
         AL    @09,@TF00001                                        0640
         ST    @14,@TF00002                                        0640
         ALR   @14,@01                                             0640
         AL    @14,@CF03941                                        0640
         MVC   RENVOLID-12(6,@09),CMEXTVOL-10(@14)                 0640
*               RENDEVTP(RENVOLRF)=CMEXTDTP(EXTVOLRF);/* DEVTYPE   0641
*                                                            @Y30SSPJ*/
         LR    @14,@05                                             0641
         AL    @14,@TF00001                                        0641
         AL    @01,@TF00002                                        0641
         AL    @01,@CF03943                                        0641
         MVC   RENDEVTP-12(4,@14),CMEXTDTP-6(@01)                  0641
*               RENVOLCT=RENVOLRF;  /* UPDATE VOLUME COUNT   @Y30SSPJ*/
         STH   RENVOLRF,RENVOLCT(,@05)                             0642
*               PROCESS=NG;         /* EXTRACTED VOL DONE    @Y30SSPJ*/
         MVC   PROCESS(2,@10),@CC00076                             0643
*             END;                  /*                       @Y30SSPJ*/
*           ELSE                    /* NOT A DA DEVICE       @Y30SSPJ*/
*             PROCESS=NG;           /* USE THE NEXT VOL ENTRY      0645
*                                                            @Y30SSPJ*/
         B     @RC00638                                            0645
@RF00638 L     @01,CCACMSWA(,R11)                                  0645
         MVC   PROCESS(2,@01),@CC00076                             0645
*         ELSE                      /* KEEP SCANNING FOR DUPS      0646
*                                                            @Y30SSPJ*/
*           RENVOLRF=RENVOLRF+INCR1;/* UPDATE RENAME CNTR    @Y30SSPJ*/
         B     @RC00637                                            0646
@RF00637 AL    RENVOLRF,@CF00061                                   0646
*     END;                          /*                       @Y30SSPJ*/
@RC00637 DS    0H                                                  0647
@RC00635 DS    0H                                                  0647
@DE00634 L     @01,CCACMSWA(,R11)                                  0647
         CLC   PROCESS(2,@01),@CC00074                             0647
         BE    @DL00634                                            0647
*   END;                            /*                       @Y30SSPJ*/
*                                                                  0648
         AL    EXTVOLRF,@CF00061                                   0648
@DE00631 L     @01,CCACMSWA(,R11)                                  0648
         CH    EXTVOLRF,CMTOTVOL(,@01)                             0648
         BNH   @DL00631                                            0648
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPLETE THE RENAME PARAMETER LIST                    @Y30SSPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0649
*   RFY                                                            0649
*     CTGPL BASED(CCACPL);          /*                       @Y30SSPJ*/
*   RENAMOPT=RNAMEOPT;              /* SET THE RENAME OPTIONS      0650
*                                                            @Y30SSPJ*/
         L     @01,CCACMSWA(,R11)                                  0650
         L     @14,CMRNMLST(,@01)                                  0650
         MVC   RENAMOPT(4,@14),RNAMEOPT                            0650
*   RENOLDNM=CTGFVENT;              /* OLD NAME ADDRESS      @Y30SSPJ*/
         L     @10,CCACPL(,R11)                                    0651
         L     @01,CTGFVT(,@10)                                    0651
         L     @05,CTGFVENT(,@01)                                  0651
         ST    @05,RENOLDNM(,@14)                                  0651
*   RENNEWNM=CTGNEWNM;              /* NEW NAME ADDRESS      @Y30SSPJ*/
         L     @10,CTGNEWNM(,@10)                                  0652
         ST    @10,RENNEWNM(,@14)                                  0652
*   RENVOLLT=ADDR(RENVOLCT);        /* VOLUME LIST ADDRESS   @Y30SSPJ*/
*                                                                  0653
         LA    @10,RENVOLCT(,@14)                                  0653
         ST    @10,RENVOLLT(,@14)                                  0653
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE VS RENAME FUNCTION TO CHANGE                 @Y30SSPJ*/
*   /* FORMAT 1 DSCBS                                        @Y30SSPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0654
*   RFY                                                            0654
*    (R0,                                                          0654
*     R1) RSTD;                     /*                       @Y30SSPJ*/
*   R0=NONE;                        /* CLEAR UCB REFERENCE INPUT   0655
*                                                            @Y30SSPJ*/
         SLR   R0,R0                                               0655
*   R1=CMRNMLST;                    /* SET PARAMETER LIST ADR      0656
*                                                            @Y30SSPJ*/
         LR    R1,@14                                              0656
*   RFY                                                            0657
*    (R15) RSTD;                    /*                       @Y30SSPJ*/
*   R15=NONE;                       /* CLEAR THE RETURN CODE @Y30SSPJ*/
         SLR   R15,R15                                             0658
*   IF RENVOLCT^=NONE THEN          /* VOLUMES TO RENAME,DA ONLY   0659
*                                                            @Y30SSPJ*/
         LH    @14,RENVOLCT(,@14)                                  0659
         LTR   @14,@14                                             0659
         BZ    @RF00659                                            0659
*     GEN(SVC 30);                  /* RENAME THE DA VOLUMES @Y30SSPJ*/
         SVC 30
*   ELSE                                                           0661
*     ;                             /* NO RENAME ACTION NEEDED     0661
*                                                            @Y30SSPJ*/
@RF00659 DS    0H                                                  0662
*   RFY                                                            0662
*    (R0,                                                          0662
*     R1) UNRSTD;                   /*                       @Y30SSPJ*/
*   IF R15^=NONE THEN               /* CHECK FOR SUCCESSFUL RENAME 0663
*                                                            @Y30SSPJ*/
         LTR   R15,R15                                             0663
         BZ    @RF00663                                            0663
*     IF R15=RENMNOVL THEN          /* ERROR, CHECK FOR NO VOLUMES 0664
*                                                            @Y30SSPJ*/
*                                                                  0664
         C     R15,@CF00071                                        0664
         BNE   @RF00664                                            0664
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='BN', CCAREASN=RSN0, CCARETRN=RCNUNIT        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0665
*       CCAPROB=IGGSEGID+(RSN0*K256)+RCNUNIT;/* NO VOLS MOUNTED OR 0665
*                                      PROC                  @Y30SSPJ*/
         MVC   CCAPROB(4,R11),@CF03929                             0665
*     ELSE                          /* SOME VOLUMES PROCESSED      0666
*                                                            @Y30SSPJ*/
*       DO;                         /* UNDO THE RENAME       @Y30SSPJ*/
         B     @RC00664                                            0666
@RF00664 DS    0H                                                  0667
*         RFY                                                      0667
*          (R15) UNRSTD;            /*                       @Y30SSPJ*/
*         WORKPROC=GO;              /* SET STATUS SWITCH     @Y30SSPJ*/
         L     @10,CCACMSWA(,R11)                                  0668
         MVC   WORKPROC(2,@10),@CC00074                            0668
*         DO RENVOLRF=INCR1 TO RENVOLCT WHILE(WORKPROC=GO);/* DO FOR
*                                      ALL VOLUMES           @Y30SSPJ*/
         LA    RENVOLRF,1                                          0669
         B     @DE00669                                            0669
@DL00669 L     @10,CCACMSWA(,R11)                                  0669
         CLC   WORKPROC(2,@10),@CC00074                            0669
         BNE   @DC00669                                            0669
*           IF RENSTAT(RENVOLRF)>INCR1 THEN/* WAS VOLUMES VTOC     0670
*                                      MODIFIED BY RENAME?   @Y30SSPJ*/
         LR    @05,RENVOLRF                                        0670
         MH    @05,@CH00107                                        0670
         L     @15,CMRNMLST(,@10)                                  0670
         ST    @05,@TF00001                                        0670
         ALR   @05,@15                                             0670
         ICM   @05,12,RENSTAT-12(@05)                              0670
         SRA   @05,16                                              0670
         C     @05,@CF00061                                        0670
         BNH   @RF00670                                            0670
*             DO;                   /* YES-USE STATUS FOR REASON   0671
*                                                            @Y30SSPJ*/
*               DO;                                                0672
*                 CCAMODID='BN';    /* SET MODULE ID                 */
         MVC   CCAMODID(2,R11),@CC03866                            0673
*                 CCAREASN=RENSTATB(RENVOLRF);/* SET REASON CODE     */
         AL    @15,@TF00001                                        0674
         MVC   CCAREASN(1,R11),RENSTATB-12(@15)                    0674
*                 CCARETRN=RCRENAME;/* SET RETURN CODE               */
         MVI   CCARETRN(R11),X'62'                                 0675
*               END;                /* RENAME UNUSUAL COND.  @Y30SSPJ*/
*               WORKPROC=NG;        /* SET PROBLEM SWITCH    @Y30SSPJ*/
         MVC   WORKPROC(2,@10),@CC00076                            0677
*             END;                  /*                       @Y30SSPJ*/
*           ELSE                                                   0679
*             ;                     /* VOLUME VTOC NOT MODIFIED    0679
*                                                            @Y30SSPJ*/
@RF00670 DS    0H                                                  0680
*         END;                      /*                       @Y30SSPJ*/
         AL    RENVOLRF,@CF00061                                   0680
@DE00669 L     @10,CCACMSWA(,R11)                                  0680
         L     @10,CMRNMLST(,@10)                                  0680
         CH    RENVOLRF,RENVOLCT(,@10)                             0680
         BNH   @DL00669                                            0680
@DC00669 DS    0H                                                  0681
*         IF WORKPROC=GO THEN       /* NO PROBLEMS TO BACK OUT     0681
*                                                            @Y30SSPJ*/
         L     @10,CCACMSWA(,R11)                                  0681
         CLC   WORKPROC(2,@10),@CC00074                            0681
         BNE   @RF00681                                            0681
*           CALL EXIT;              /* NOTHING TO BACK OUT   @Y30SSPJ*/
         BAL   @14,EXIT                                            0682
*         ELSE                                                     0683
*           ;                       /* PERFORM UNDO PROCESS  @Y30SSPJ*/
*                                                                  0683
@RF00681 DS    0H                                                  0684
*         /***********************************************************/
*         /*                                                         */
*         /* RENAME BACK THE SUCCESSFULLY RENAMED            @Y30SSPJ*/
*         /* VOLUMES                                         @Y30SSPJ*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0684
*         EXTVOLRF=INCR1;           /* SET VOLUME IN LIST COUNTER  0684
*                                                            @Y30SSPJ*/
         LA    @10,1                                               0684
         LR    EXTVOLRF,@10                                        0684
*         DO RENVOLRF=INCR1 TO RENVOLCT;/* PROCESS ALL VOLUMES     0685
*                                                            @Y30SSPJ*/
         LR    RENVOLRF,@10                                        0685
         B     @DE00685                                            0685
@DL00685 DS    0H                                                  0686
*           IF RENSTAT(RENVOLRF)=NONE THEN/* VOLUME RENAMED  @Y30SSPJ*/
         LA    @10,12                                              0686
         LR    @01,RENVOLRF                                        0686
         MR    @00,@10                                             0686
         L     @05,CCACMSWA(,R11)                                  0686
         L     @05,CMRNMLST(,@05)                                  0686
         ST    @01,@TF00001                                        0686
         ALR   @01,@05                                             0686
         ICM   @15,12,RENSTAT-12(@01)                              0686
         SRA   @15,16                                              0686
         LTR   @15,@15                                             0686
         BNZ   @RF00686                                            0686
*             DO;                   /* RENAME BACK TO OLD NAME     0687
*                                                            @Y30SSPJ*/
*               RENVOLS(EXTVOLRF)=RENVOLS(RENVOLRF);/* SET NAME    0688
*                                                            @Y30SSPJ*/
         LR    @01,@10                                             0688
         MR    @00,EXTVOLRF                                        0688
         ALR   @01,@05                                             0688
         AL    @05,@TF00001                                        0688
         MVC   @TS00001(12),RENVOLS-12(@05)                        0688
         MVC   RENVOLS-12(12,@01),@TS00001                         0688
*               EXTVOLRF=EXTVOLRF+INCR1;/* UPDATE COUNTER    @Y30SSPJ*/
         AL    EXTVOLRF,@CF00061                                   0689
*             END;                  /*                       @Y30SSPJ*/
*           ELSE                                                   0691
*             ;                     /* VOLUME NOT PROCESSED OKAY   0691
*                                                            @Y30SSPJ*/
@RF00686 DS    0H                                                  0692
*         END;                      /*                       @Y30SSPJ*/
         AL    RENVOLRF,@CF00061                                   0692
@DE00685 L     @10,CCACMSWA(,R11)                                  0692
         L     @10,CMRNMLST(,@10)                                  0692
         CH    RENVOLRF,RENVOLCT(,@10)                             0692
         BNH   @DL00685                                            0692
*         RENVOLCT=EXTVOLRF-INCR1;  /* SET VALID LIST COUNT  @Y30SSPJ*/
         L     @10,CCACMSWA(,R11)                                  0693
         L     @10,CMRNMLST(,@10)                                  0693
         LR    @05,EXTVOLRF                                        0693
         BCTR  @05,0                                               0693
         STH   @05,RENVOLCT(,@10)                                  0693
*         IF RENVOLCT^=NONE THEN    /* IF SOME VOLUMES TO CHANGE   0694
*                                                            @Y30SSPJ*/
         LTR   @05,@05                                             0694
         BZ    @RF00694                                            0694
*           DO;                     /* RENAME VOLUMES BACK   @Y30SSPJ*/
*             RENOLDNM=CTGNEWNM;    /* RE-SET OLD NAME       @Y30SSPJ*/
         L     @05,CCACPL(,R11)                                    0696
         L     @15,CTGNEWNM(,@05)                                  0696
         ST    @15,RENOLDNM(,@10)                                  0696
*             RENNEWNM=CTGFVENT;    /* RE-SET NEW NAME       @Y30SSPJ*/
         L     @05,CTGFVT(,@05)                                    0697
         L     @05,CTGFVENT(,@05)                                  0697
         ST    @05,RENNEWNM(,@10)                                  0697
*             RFY                                                  0698
*              (R0,                                                0698
*               R1) RSTD;           /*                       @Y30SSPJ*/
*             R0=NONE;              /* CLEAR UCB REFERENCE   @Y30SSPJ*/
         SLR   R0,R0                                               0699
*             R1=CMRNMLST;          /* SET PARAMETER LIST ADR      0700
*                                                            @Y30SSPJ*/
         LR    R1,@10                                              0700
*             GEN(SVC 30);          /* ISSUE RENAME SVC      @Y30SSPJ*/
         SVC 30
*             RFY                                                  0702
*              (R0,                                                0702
*               R1) UNRSTD;         /*                       @Y30SSPJ*/
*           END;                    /*                       @Y30SSPJ*/
*         ELSE                                                     0704
*           ;                       /* NO VOLUMES ARE FIXABLE      0704
*                                                            @Y30SSPJ*/
@RF00694 DS    0H                                                  0705
*       END;                        /*                       @Y30SSPJ*/
*   ELSE                                                           0706
*     ;                             /* END RENAME ERROR PROCESSING 0706
*                                                            @Y30SSJG*/
@RF00663 DS    0H                                                  0707
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RC00663 BAL   @14,EXIT                                            0707
*   END;                            /* END OF INNER PROCEDURE        */
@EL00011 DS    0H                                                  0708
@EF00011 DS    0H                                                  0708
@ER00011 BR    @14                                                 0708
@PB00011 DS    0H                                                  0709
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0710
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0710
*EXIT:                                                             0710
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00012                                            0710
EXIT     DS    0H                                                  0711
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0714
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00012 DS    0H                                                  0715
@EF00012 DS    0H                                                  0715
@ER00012 BR    @14                                                 0715
*   END                             /*                       @Y30LSPS*/
*                                                                  0716
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMGVO )                                       */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*/*%INCLUDE SYSLIB  (IDAVVOLL)                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IECSDSL1)                                       */
*/*%INCLUDE SYSLIB  (IGGMF4WA)                                       */
*                                                                  0716
*       ;                                                          0716
@EL00001 DS    0H                                                  0716
@EF00001 DS    0H                                                  0716
@ER00001 BR    @14                                                 0716
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@TF00001 DS    F
@TF00002 DS    F
IGG0CLBN CSECT
         DS    0F
@CF00061 DC    F'1'
@CH00061 EQU   @CF00061+2
@CF00073 DC    F'2'
@CF00071 DC    F'4'
@CF00135 DC    F'5'
@CF00060 DC    F'8'
@CF00107 DC    F'12'
@CH00107 EQU   @CF00107+2
@CF00068 DC    F'15'
@CH00068 EQU   @CF00068+2
@CF00379 DC    F'18'
@CF00066 DC    F'32'
@CF00069 DC    F'256'
@CH00069 EQU   @CF00069+2
@CF03929 DC    F'-1026228148'
@CF03925 DC    F'-1026227976'
@CF03928 DC    F'-1026227548'
@CF03924 DC    F'-1026223096'
@CF03943 DC    F'-9'
@CF03942 DC    F'-7'
@CF03938 DC    F'-6'
@CF03941 DC    F'-5'
@CF03936 DC    F'-4'
@DATD    DSECT
         DS    0D
@TS00001 DS    CL12
IGG0CLBN CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00036 DC    V(IGGPALEC)
@CV00037 DC    V(IGGPARFS)
@CV00038 DC    V(IGGPEXT)
@CV00039 DC    V(IGGPF4DQ)
@CV00040 DC    V(IGGPF4RD)
@CV00041 DC    V(IGGPF4WR)
@CV00042 DC    V(IGGPGET)
@CV00044 DC    V(IGGPMOD)
@CV00043 DC    V(IGGPPUPC)
         DS    0D
SCRACODE DC    XL4'41005000'
OBTNCODE DC    XL4'C0800000'
@CC00084 DC    C'NOEXTNT '
@CC00086 DC    C'ITYPEXT '
@CC00088 DC    C'RELREPNO'
@CC03808 DC    C'ENTVOL  '
@CC03810 DC    C'VOLSER  '
@CC03825 DC    C'DSDIRECT'
@CC00074 DC    C'GO'
@CC00076 DC    C'NG'
@CC03866 DC    C'BN'
NULVOLID DC    X'000000000000'
RNAMEOPT DC    X'C1002000'
@DATD    DSECT
THREE    EQU   3                     CONSTANT THREE
ONE      EQU   1                     CONSTANT ONE
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLBN CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
VOLREFRG EQU   @03
EXTVOLRF EQU   @02
RENVOLRF EQU   @03
RWA      EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R15      EQU   @15
DCWABASE EQU   @04
TIOTPTR  EQU   @01
UCBPTR   EQU   @04
F4PTR    EQU   @01
F1PTR    EQU   @01
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R14      EQU   @14
VOLCNTRG EQU   @02
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ALTWKVOL EQU   0
CMFLDNME EQU   0
TESTEXTS EQU   0
TSTCOUNT EQU   0
TSTEXTYP EQU   0
RELCNTWK EQU   0
GVO      EQU   0
CMFLVLFL EQU   GVO+12
CMFLITEX EQU   GVO+34
CMFLSSDS EQU   GVO+35
CMFOVERL EQU   GVO+37
CMFOVLAY EQU   0
CMFXECTS EQU   0
CMFXEXST EQU   CMFXECTS+2
CMFXSTA  EQU   CMFXEXST
CMFXEXED EQU   CMFXECTS+6
CMFXEDA  EQU   CMFXEXED
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAMODID EQU   CCAPROB
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2NVC EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCAREUSE EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAMOD   EQU   CCAFLG6
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5REC EQU   CCARAB5+4
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCAMCPL  EQU   CCAXCPL
CCARABB  EQU   IGGCCA+380
CCARABF  EQU   IGGCCA+384
CCARABL  EQU   IGGCCA+388
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAALPTR EQU   IGGCCA+540
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAFLG11 EQU   IGGCCA+1059
CCAF11B5 EQU   CCAFLG11
CCAF11B6 EQU   CCAFLG11
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCADGDGA EQU   IGGCCA+1488
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDCD EQU   CTGFL+1
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKALEN1  EQU   USERWKA
WKALEN2  EQU   USERWKA+2
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
FIELDNM  EQU   0
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CCACPE3  EQU   CCARAB+12
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGODEL EQU   CATGOGC1
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTSVDCB EQU   CVTMAP+84
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVIND EQU   CTGFV+16
CTGFVENT EQU   CTGFV+20
CTGFVSTY EQU   CTGFV+24
CTGFVVLT EQU   CTGFV+40
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
RENAMLST EQU   0
RENAMOPT EQU   RENAMLST
RENOLDNM EQU   RENAMLST+4
RENNEWNM EQU   RENAMLST+8
RENVOLLT EQU   RENAMLST+12
RENVOLCT EQU   RENAMLST+16
RENVOLS  EQU   RENAMLST+18
RENDEVTP EQU   RENVOLS
RENVOLID EQU   RENVOLS+4
RENSTAT  EQU   RENVOLS+10
RENSTATB EQU   RENSTAT+1
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTLENGTH EQU   USERLIST
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
LTRETCD1 EQU   LTRETCOD
LTVOLSER EQU   LTENTRY+2
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMWACI   EQU   CMSWA+3
CMASCFPL EQU   CMSWA+16
CMCPLFVT EQU   CMSWA+20
CMEXTFLS EQU   CMCPLFVT
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMRNMLST EQU   CMLDTFPL
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMTSTFPL EQU   CMHDTFPL
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
CMDTAFPL EQU   CMHIXFPL
PROCESS  EQU   CMSWA+36
CMRNGCTR EQU   CMSWA+40
CMADDVOL EQU   CMRNGCTR
CMVOLCTR EQU   CMSWA+42
CMRMVVOL EQU   CMVOLCTR
CMSDFSPC EQU   CMSWA+48
CMVLLIST EQU   CMSWA+64
CMVLRTCD EQU   CMVLLIST+2
CMTOTVOL EQU   CMSWA+74
CMSPCATR EQU   CMSWA+76
CMCNVNO  EQU   CMSWA+110
WORKPROC EQU   CMSWA+118
CMSRCCOR EQU   CMSWA+124
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMUCATCI EQU   CMSWA+410
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
IDAVVOLL EQU   0
@NM00131 EQU   IDAVVOLL
VVOLLID  EQU   @NM00131
VVOLLCAT EQU   @NM00131
VVOLLNBR EQU   IDAVVOLL+2
VVOLLTAB EQU   IDAVVOLL+4
VVOLLACB EQU   IDAVVOLL+8
VVOLLERR EQU   IDAVVOLL+12
VVOLLENT EQU   IDAVVOLL+36
VVOLLUCB EQU   VVOLLENT
@NM00134 EQU   VVOLLENT+4
VVOLLVSR EQU   VVOLLENT+6
TIOT1    EQU   0
TIOENTRY EQU   0
TIOELNGH EQU   TIOENTRY
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00140 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IECSDSF1 EQU   0
IECSDSL1 EQU   0
DS1DSNAM EQU   IECSDSL1
DS1FMTID EQU   IECSDSL1+44
DS1DSORG EQU   IECSDSL1+82
IECSDSF4 EQU   0
IECSDSL4 EQU   0
DS4HPCHR EQU   IECSDSL4+1
DS4DEVCT EQU   IECSDSL4+18
DS4DEVSZ EQU   DS4DEVCT
DS4DEVOV EQU   DS4DEVCT+6
DS4DEVDT EQU   DS4DEVCT+12
DS4AMTIM EQU   IECSDSL4+32
DS4AMCAT EQU   IECSDSL4+40
DS4VSIND EQU   DS4AMCAT
DS4VSCRA EQU   DS4AMCAT+1
DS4R2TIM EQU   IECSDSL4+43
IGGMF4WA EQU   0
F4WDEB   EQU   IGGMF4WA
F4WDUCB  EQU   F4WDEB+33
F4WECB   EQU   IGGMF4WA+52
F4WIOB   EQU   IGGMF4WA+56
F4WSEEK  EQU   IGGMF4WA+88
F4WCCW   EQU   IGGMF4WA+96
F4WBUF   EQU   IGGMF4WA+120
VRWA     EQU   0
VR192V   EQU   VRWA
VRVLI    EQU   VRWA+4
VRVL     EQU   VRWA+8
VROWA    EQU   VRWA+56
VRF4WA   EQU   VRWA+200
VROPL    EQU   VRWA+460
VROPLOPT EQU   VROPL
VROPLSAP EQU   VROPL+4
VROPLVOL EQU   VROPL+8
VROPLBUF EQU   VROPL+12
VRSPL    EQU   VRWA+476
VRSPLOPT EQU   VRSPL
VRSPLDSN EQU   VRSPL+4
VRSPLVLP EQU   VRSPL+12
VRSVL    EQU   VRWA+492
VRSVLNE  EQU   VRSVL
VRSVLDTY EQU   VRSVL+2
VRSVLSER EQU   VRSVL+6
VRCCHHR  EQU   VRWA+506
VRCC     EQU   VRCCHHR
VRHH     EQU   VRCCHHR+2
VRR      EQU   VRCCHHR+4
VRHWM    EQU   VRWA+511
BUFSIZE  EQU   0
CATRECRD EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
ENTRYNAM EQU   0
EXCPNAME EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
TNAM     EQU   0
UCBBGN   EQU   0
CMCATVOL EQU   WKA
CMEXTDTP EQU   CMCATVOL+2
CMEDEVCL EQU   CMEXTDTP+2
CMEXTVOL EQU   CMCATVOL+6
@NM00041 EQU   CTGDDNM
CTGPROB  EQU   @NM00041
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00106 EQU   CATTR1
CCATTR   EQU   @NM00106
@NM00107 EQU   CCATTR
@NM00109 EQU   CATTR1
CRGATTR  EQU   @NM00109
CUPG     EQU   CRGATTR
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00139 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
@NM00156 EQU   F4WSEEK
F4WCCHHR EQU   @NM00156+3
@NM00158 EQU   DS4DEVSZ
TPERCYL  EQU   @NM00158+2
DSORGMAP EQU   DS1DSORG
VSAMORG  EQU   DSORGMAP+1
FLC      EQU   PSA
F4WDCB   EQU   F4WDEB+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00160 EQU   DSORGMAP
@NM00159 EQU   @NM00158
@NM00157 EQU   @NM00156
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00139
UCBSKPFG EQU   @NM00139
UCBRIPND EQU   @NM00139
UCBRTIAC EQU   @NM00139
UCBRSV79 EQU   @NM00139
UCBRSV78 EQU   @NM00139
UCBRSV77 EQU   @NM00139
UCBOLTEP EQU   @NM00139
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00138 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
@NM00110 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00107
@NM00108 EQU   @NM00107
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00105 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
@NM00104 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CEXP     EQU   CTGRBASE+55
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
CNAME    EQU   CTGRBASE
@NM00091 EQU   MCATDSTR+1
@NM00090 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
CMCTVVFG EQU   CMCATVOL+14
CMCTVFSQ EQU   CMCATVOL+12
@NM00002 EQU   CMEXTDTP+3
@NM00001 EQU   CMEXTDTP
CMCTVLRN EQU   CMCATVOL
VRSVLRC  EQU   VRSVL+13
@NM00163 EQU   VRSVL+12
@NM00162 EQU   VRSPL+8
@NM00161 EQU   VRWA+44
F4WCCW3  EQU   F4WCCW+16
F4WCCW2  EQU   F4WCCW+8
F4WCCW1  EQU   F4WCCW
@NM00155 EQU   F4WIOB+24
F4WIDCB  EQU   F4WIOB+20
F4WSCP   EQU   F4WIOB+16
@NM00154 EQU   F4WIOB+8
F4WIECB  EQU   F4WIOB+4
@NM00153 EQU   F4WIOB
@NM00152 EQU   F4WECB+1
F4WECMP  EQU   F4WECB
F4WDEBP  EQU   IGGMF4WA+48
F4WNTK   EQU   F4WDEB+46
F4WECC   EQU   F4WDEB+42
F4WSCC   EQU   F4WDEB+38
F4WDBB   EQU   F4WDEB+36
F4WDMOD  EQU   F4WDEB+32
F4WDAPP  EQU   F4WDEB+29
F4WDEXS  EQU   F4WDEB+28
F4WDDCB  EQU   F4WDEB+25
F4WDID   EQU   F4WDEB+24
@NM00151 EQU   F4WDEB+17
F4WEXT   EQU   F4WDEB+16
@NM00150 EQU   F4WDEB
DS4END   EQU   IECSDSL4+96
@NM00149 EQU   IECSDSL4+71
DS4VTOCE EQU   IECSDSL4+61
DS4F6PTR EQU   IECSDSL4+56
@NM00148 EQU   IECSDSL4+51
@NM00147 EQU   DS4VSIND
DS4VSBAD EQU   DS4VSIND
DS4VSREF EQU   DS4VSIND
DS4DEVDB EQU   DS4DEVCT+13
DS4DEVTL EQU   DS4DEVCT+10
DS4DEVFG EQU   DS4DEVCT+9
DS4DEVK  EQU   DS4DEVCT+8
DS4DEVL  EQU   DS4DEVOV+1
DS4DEVI  EQU   DS4DEVOV
DS4DEVTK EQU   DS4DEVCT+4
@NM00146 EQU   IECSDSL4+16
DS4NOEXT EQU   IECSDSL4+15
DS4VTOCI EQU   IECSDSL4+14
DS4NOATK EQU   IECSDSL4+12
DS4HCCHH EQU   IECSDSL4+8
DS4DSREC EQU   IECSDSL4+6
DS4IDFMT EQU   IECSDSL4
@NM00145 EQU   IECSDSF4
DS1END   EQU   IECSDSL1+140
DS1PTRDS EQU   IECSDSL1+135
DS1EXT3  EQU   IECSDSL1+125
DS1EXT2  EQU   IECSDSL1+115
DS1EXT1  EQU   IECSDSL1+105
@NM00144 EQU   IECSDSL1+103
DS1TRBAL EQU   IECSDSL1+101
DS1LSTAR EQU   IECSDSL1+98
DS1SCALO EQU   IECSDSL1+94
DS1DSIND EQU   IECSDSL1+93
DS1RKP   EQU   IECSDSL1+91
DS1KEYL  EQU   IECSDSL1+90
DS1LRECL EQU   IECSDSL1+88
DS1BLKL  EQU   IECSDSL1+86
DS1OPTCD EQU   IECSDSL1+85
DS1RECFM EQU   IECSDSL1+84
@NM00143 EQU   IECSDSL1+75
DS1SYSCD EQU   IECSDSL1+62
@NM00142 EQU   IECSDSL1+61
DS1NOBDB EQU   IECSDSL1+60
DS1NOEPV EQU   IECSDSL1+59
DS1EXPDT EQU   IECSDSL1+56
DS1CREDT EQU   IECSDSL1+53
DS1VOLSQ EQU   IECSDSL1+51
DS1DSSN  EQU   IECSDSL1+45
@NM00141 EQU   IECSDSF1
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00140
UCBHALI  EQU   @NM00140
UCBRSV09 EQU   @NM00140
UCBRSV08 EQU   @NM00140
UCBRSV07 EQU   @NM00140
UCBRSV06 EQU   @NM00140
UCBRSV05 EQU   @NM00140
UCBRSV04 EQU   @NM00140
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00137 EQU   UCB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00136 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00135 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
VVOLLVFY EQU   @NM00134
VVOLLMNT EQU   @NM00134
VVOLLDEB EQU   IDAVVOLL+32
VVOLLBIB EQU   IDAVVOLL+28
VVOLLSFI EQU   IDAVVOLL+16
VVOLLCNT EQU   VVOLLERR+3
VVOLLSFC EQU   VVOLLERR+2
VVOLLFNC EQU   VVOLLERR+1
VVOLLPDC EQU   VVOLLERR
@NM00133 EQU   IDAVVOLL+1
VVOLLSWD EQU   @NM00131
VVOLLEOV EQU   @NM00131
VVOLLOPE EQU   @NM00131
VVOLLTIO EQU   @NM00131
@NM00132 EQU   @NM00131
CUMRC    EQU   CUMWA+148
@NM00130 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00129 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00128 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00127 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00126 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00125 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
CMBYTAU  EQU   CMSWA+500
CMBYTTRK EQU   CMSWA+496
CMSCTREC EQU   CMSWA+416
@NM00124 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMBLPTKS EQU   CMSWA+408
CMSDSPTB EQU   CMSWA+344
@NM00123 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00122 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00121 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
DCWFPLPT EQU   CMSWA+196
DCWAREPT EQU   CMSWA+192
@NM00120 EQU   CMSWA+190
DCWIX    EQU   CMSWA+188
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
CMDEFSWA EQU   CMSWA+128
CMEXTLST EQU   CMSWA+120
@NM00119 EQU   CMSWA+116
CMFPLIDX EQU   CMSWA+112
CMCNVLEN EQU   CMSWA+108
CMTRKCYL EQU   CMSPCATR+12
CMTRKPCA EQU   CMSPCATR+10
CMBLKTRK EQU   CMSPCATR+8
CMSWADTY EQU   CMSPCATR+4
CMPHYBLK EQU   CMSPCATR
CMVLVOL  EQU   CMVLLIST+4
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
CMVLLTLN EQU   CMVLLIST
@NM00118 EQU   CMSWA+62
CMSCRADT EQU   CMSWA+58
CMSCRAVI EQU   CMSWA+52
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
SPACINDC EQU   CMSWA+38
CMWFVTPT EQU   CMSWA+12
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMCISREQ EQU   CMSWA+1
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00117 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00116 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00115 EQU   RTDEVUCB
@NM00114 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00113 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00112 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00111 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTRETCD2 EQU   LTRETCOD+1
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
@NM00103 EQU   RENSTAT
@NM00102 EQU   RENDEVTP+3
RENDEVCL EQU   RENDEVTP+2
@NM00101 EQU   RENDEVTP
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00100 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00099 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00098 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00097 EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00096 EQU   COPTS
CENLST   EQU   COPTS
@NM00095 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00094 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00093 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00092 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00089 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00088 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00087 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00086 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00085 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00084 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00083 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00082 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00081 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00080 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00055 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00054 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00053 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00052 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00051 EQU   CVTFIX+248
@NM00050 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00049 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00048 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00047 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
@NM00046 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00045 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00044 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00043 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
CTGFLDTS EQU   CTGFLDRE
@NM00042 EQU   CTGFLDRE
CTGPSWD  EQU   CTGJSCB
@NM00040 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00039 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00038 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
@NM00037 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00036 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1492
CCASAVMN EQU   CCADGDGA
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00035 EQU   CCAFLG10
CCADEFUN EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00034 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00033 EQU   CCAREGS
@NM00032 EQU   CCAFLG11
@NM00031 EQU   CCAFLG11
@NM00030 EQU   IGGCCA+1057
@NM00029 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00028 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00027 EQU   CCAMNAT+1
@NM00026 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00025 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00024 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00023 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
CCASAVID EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00022 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00021 EQU   CCAMSSPL+10
@NM00020 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00019 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
@NM00018 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00017 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCAR5UR  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
CCAR4REC EQU   CCARAB4+4
@NM00016 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00015 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCAR4UR  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00014 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00013 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCAR3UR  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00012 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00011 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCAR2UR  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00010 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00009 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCAR1UR  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00008 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00007 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00006 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00005 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
CMFXHRBA EQU   CMFXECTS+16
CMFXLRBA EQU   CMFXECTS+12
CMFXNOTT EQU   CMFXECTS+10
CMFXEDHH EQU   CMFXEDA+2
CMFXEDCC EQU   CMFXEDA
CMFXSTHH EQU   CMFXSTA+2
CMFXSTCC EQU   CMFXSTA
CMFXEXSS EQU   CMFXECTS
CMFLEND  EQU   CMFOVLAY+14
CMFLEXLN EQU   CMFOVLAY+12
CMFLHKLN EQU   CMFOVLAY+10
CMFLLKLN EQU   CMFOVLAY+8
CMFBYTAU EQU   CMFOVLAY+4
CMFBYTRK EQU   CMFOVLAY
@NM00004 EQU   CMFLITEX
CMFLNOPF EQU   CMFLITEX
CMFLSSDT EQU   CMFLITEX
CMFLNTKA EQU   GVO+32
CMFLNBTK EQU   GVO+30
CMFLPHYB EQU   GVO+26
CMFLHABA EQU   GVO+22
CMFLHUBA EQU   GVO+18
CMFLHKBA EQU   GVO+14
CMFLNOEX EQU   GVO+13
@NM00003 EQU   CMFLVLFL
CMFLVLOV EQU   CMFLVLFL
CMFLVLCN EQU   CMFLVLFL
CMFLVLPR EQU   CMFLVLFL
CMFLFLSQ EQU   GVO+10
CMFLVOL  EQU   GVO+4
CMFLDEVT EQU   GVO
@NM00079 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00078 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00077 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00076 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00075 EQU   FLCFSA
@NM00074 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00073 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00072 EQU   FLCIOA
@NM00071 EQU   FLCMCLA+15
@NM00070 EQU   FLCMCLA+14
@NM00069 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00068 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00067 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00066 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00065 EQU   FLCPER
@NM00064 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00063 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00062 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00061 EQU   FLCPIILC
@NM00060 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00059 EQU   FLCSVILC
@NM00058 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00057 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00056 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00298 EQU   ERRORBCK
@RC00397 EQU   @RC00388
@RC00638 EQU   @RC00637
@RC00664 EQU   @RC00663
@PB00012 EQU   @EL00001
@ENDDATA EQU   *
         END   IGG0CLBN,(C'PLS1758',0701,78087)
