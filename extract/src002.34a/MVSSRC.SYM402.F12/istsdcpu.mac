         TITLE 'ISTSDCPU - PU MACRO HNDLR                              *
                        '
ISTSDCPU CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSDCPU  76.222'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @10,0                                               0001
@PSTART  LA    @12,4095(,@10)                                      0001
         USING @PSTART,@10                                         0001
         USING @PSTART+4095,@12                                    0001
 USING @DATD-(MLCDAT4-ISTMLCA),MLCAREG    ADDRESABIL FOR DATA
*   SAVCLLD=ADDR(MLCSAV4);          /* SAVE OUR SAVE@ IN CALLRS      */
         LA    @11,MLCSAV4(,MLCAREG)                               0390
         ST    @11,SAVCLLD(,SAVREG)                                0390
*   SAVSAV=SAVREG;                  /* SAVE CALLER'S SAVE@           */
         LR    SAVSAV,SAVREG                                       0391
*   SAVREG=ADDR(MLCSAV4);           /* SET UP OUR SAVE@              */
         LR    SAVREG,@11                                          0392
*   SAVCLLR=SAVSAV;                 /* SAVE CALLER'S SAVE@ IN OURS   */
         ST    SAVSAV,SAVCLLR(,SAVREG)                             0393
*/********************************************************************/
*/* START OF MAINLINE EXECUTABLE CODE                                */
*/********************************************************************/
*                                                                  0394
*   IF RNCGRNBD='1'B&RNCGP->RGPADIL='1'B/* IS THIS RNBUILD AND DIAL=
*                                      YES?                          */
*     THEN                                                         0394
         TM    RNCGRNBD(RNCAREG),B'00000100'                       0394
         BNO   @RF00394                                            0394
         L     @11,RNCGP(,RNCAREG)                                 0394
         TM    RGPADIL(@11),B'10000000'                            0394
         BNO   @RF00394                                            0394
*     DO;                           /* YES. SET UP FOR PU PRESCAN    */
*       GPR1=RPRENTPX;              /* INDICATE ENTRY TYPE IS PX TO
*                                      RS                            */
         LA    GPR1,114                                            0396
*       KWDTBPTR=ADDR(PUXKWTBL);    /* GET PARM TABLE FOR PRESCAN    */
         LA    @11,PUXKWTBL                                        0397
         ST    @11,KWDTBPTR                                        0397
*     END;                                                         0398
*   ELSE                                                           0399
*     IF RNCGLSBD='1'B              /* NO - NOT RN BUT IS IT LOCAL 0399
*                                      SUBAREA?                      */
*       THEN                                                       0399
         B     @RC00394                                            0399
@RF00394 TM    RNCGLSBD(RNCAREG),B'00000001'                       0399
         BNO   @RF00399                                            0399
*       DO;                         /* YES - LOCAL SUBAREA - SET UP
*                                      FOR RS                        */
*         GPR1=RPRENTDA;            /* SET UP FOR DAN ENTRY          */
         LA    GPR1,81                                             0401
*         KWDTBPTR=ADDR(LPUKWTBL);  /* GET LOCAL PU PARM TABLE       */
         LA    @11,LPUKWTBL                                        0402
         ST    @11,KWDTBPTR                                        0402
*       END;                                                       0403
*     ELSE                                                         0404
*       DO;                         /* NOT EITHER. SET UP FOR NORMAL
*                                      PU                            */
         B     @RC00399                                            0404
@RF00399 DS    0H                                                  0405
*         GPR1=RPRENTCC;            /* SET UP NORMAL PU FOR RS       */
         LA    GPR1,113                                            0405
*         KWDTBPTR=ADDR(PUKWTBL);   /* SET UP FOR NORMAL PARM TABLE  */
         LA    @11,PUKWTBL                                         0406
         ST    @11,KWDTBPTR                                        0406
*       END;                                                       0407
*   CALL ISTSDCRS;                  /* GET PROPER SIFT ENTRY FROM RS */
@RC00399 DS    0H                                                  0408
@RC00394 L     @15,@CV02915                                        0408
         BALR  @14,@15                                             0408
*   ENTRYPTR=GPR1;                  /* SAVE ADDR OF ENTRY            */
         LR    ENTRYPTR,GPR1                                       0409
*/* SEGMENT(PUPRSCN)REQUEST                                          */
*                                                                  0410
*   DO;                                                            0410
*     GOTO PUPRSCN;                                                0411
         B     PUPRSCN                                             0411
*PUPRSCN#:                                                         0412
*   END;                            /* PRESCAN KEYWORDS FOR PUTYPE   */
PUPRSCN# DS    0H                                                  0413
*   IF EXITSW='1'B×RC=4             /* END INDICATOR ON OR BAD RC?   */
*     THEN                                                         0413
         TM    EXITSW,B'10000000'                                  0413
         BO    @RT00413                                            0413
         CLC   RC(2),@CH00052                                      0413
         BE    @RT00413                                            0413
*     ;                             /* YES - DO NOTHING MORE         */
*   ELSE                                                           0415
*     DO;                           /* NO - GOOD RETURN FROM PRESCAN
*                                      - CONTINUE                    */
*       RC=0;                       /* INITIALIZE RC TO ZERO         */
         SLR   @11,@11                                             0416
         STH   @11,RC                                              0416
*       GPR1=MLCKWD;                /* POINT TO BEGINNING OF KEYWORD
*                                      STRING                        */
         L     GPR1,MLCKWD(,MLCAREG)                               0417
*       RCCSTAID=''B;               /* CLEAR STATION ID FOR KEYWORDS
*                                      IDNUM AND IDBLK               */
         L     @11,MLCPTR5(,MLCAREG)                               0418
         XC    RCCSTAID(8,@11),RCCSTAID(@11)                       0418
*       CUAFTPT='0'B;               /* INITIALIZE INTERNAL FOOTPRINT
*                                      FOR CUADDR                    */
*       BLKFTPT='0'B;               /* INITIALIZE INTERNAL FOOTPRINT
*                                      FOR IDBLK                     */
*       NUMFTPT='0'B;               /* INITIALIZE INTERNAL FOOTPRINT
*                                      FOR IDNUM                     */
         NI    CUAFTPT,B'11000111'                                 0421
*/*    DOWHILE(RC=0)                                                 */
*                                                                  0422
*       DO WHILE(RC=0);             /* LOOP THRU ALL KEYWORDS ON   0422
*                                      MACRO                         */
         B     @DE00422                                            0422
@DL00422 DS    0H                                                  0423
*         CALL PUDOLOOP;            /* GO PROCESS KEYWORD            */
         BAL   @14,PUDOLOOP                                        0423
*DORETURN:                                                         0424
*         ;                         /* RETURN ADDR FOR END OF LOOP   */
DORETURN DS    0H                                                  0425
*       END;                        /* END(DOWHILE)                  */
@DE00422 ICM   @11,3,RC                                            0425
         BZ    @DL00422                                            0425
*#DC00005:                                                         0426
*       ;                           /* END OF LOOP TO PROCESS      0426
*                                      KEYWORDS ON MACRO             */
#DC00005 DS    0H                                                  0427
*       IF RC=8                     /* CHECK RETURN CODE FROM DO LOOP*/
*         THEN                                                     0427
         CLC   RC(2),@CH00036                                      0427
         BNE   @RF00427                                            0427
*         DO;                       /* RC=8 - END OF           STRING*/
*                                                                  0428
*           /*********************************************************/
*           /*                                                       */
*           /* SEGMENT(PUMOVE)REQUEST                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0429
*           DO;                                                    0429
*             GOTO PUMOVE;                                         0430
         B     PUMOVE                                              0430
*PUMOVE#:                                                          0431
*           END;                                                   0431
*                                                                  0431
PUMOVE#  DS    0H                                                  0432
*           /*********************************************************/
*           /*                                                       */
*           /* MOVE MODEL                                            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0432
*         END;                                                     0432
*       ELSE                                                       0433
*         ;                                                        0433
@RF00427 DS    0H                                                  0434
*       RFY                                                        0434
*         GPR1 UNRSTD;                                             0434
*     END;                          /* END CODE BYPASSED BY EXITSW =
*                                      1                             */
*   RNCGPU='1'B;                    /* SET ON SYSDEF FOOTPRINT FOR PU
*                                      MACRO HANDLER                 */
@RT00413 OI    RNCGPU(RNCAREG),B'00000001'                         0436
*   SAVREG=SAVCLLR;                 /* RESTORE CALLERS SAVE AREA ADDR*/
         L     SAVREG,SAVCLLR(,SAVREG)                             0437
*   RETURN CODE(RC);                /* RETURN TO CALLER              */
         LH    @15,RC                                              0438
         L     @14,12(,@13)                                        0438
         LM    @00,@12,20(@13)                                     0438
         BR    @14                                                 0438
*/********************************************************************/
*/*  END OF MAIN LINE CODE                                           */
*/********************************************************************/
*                                                                  0439
*                                                                  0439
*/* SEGMENT(PUPRSCN)START                                            */
*                                                                  0439
*   DO;                                                            0439
*     GOTO PUPRSCN@;                                               0440
*PUPRSCN:                                                          0441
*   END;                                                           0441
*                                                                  0441
PUPRSCN  DS    0H                                                  0442
*/********************************************************************/
*/*                                                                  */
*/*   THIS SEGMENT SCANS THE KEYWORDS ON THE PU MACRO LOOKING FOR    */
*/*   THE KEYWORD 'PUTYPE' AND SET THE PUTYPE INTO THE APPROPRIATE   */
*/*   MODEL ENTRY AND CALLS ISTSDCIN IF NEEDED                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0442
*   SAVMLCKW=MLCKWD;                /* SAVE PTR TO 1ST KEYWORD     0442
*                                                            @ZA12017*/
         MVC   SAVMLCKW(4),MLCKWD(MLCAREG)                         0442
*   EXITSW='0'B;                    /* INITIALIZE EXIT SWITCH        */
         NI    EXITSW,B'01111111'                                  0443
*   IF RPRENTRY=RPRENTPX            /* CHECK IF ENTRY TYPE IS FOR PUX*/
*     THEN                                                         0444
         CLI   RPRENTRY(ENTRYPTR),X'72'                            0444
         BE    @RT00444                                            0444
*     ;                             /* YES - DO NOTHING AT ALL       */
*   ELSE                                                           0446
*     IF RNCGCLPU='1'B              /* WAS PU ENTERED FROM CLUSTER 0446
*                                      MHR                           */
*       THEN                                                       0446
         TM    RNCGCLPU(RNCAREG),B'00001000'                       0446
         BNO   @RF00446                                            0446
*       RCCTYPE=RCCPU02;            /* YES-SET PUTYPE = 2 AND DO   0447
*                                      NOTHING ELSE                  */
         L     @11,MLCPTR5(,MLCAREG)                               0447
         MVI   RCCTYPE(@11),X'02'                                  0447
*     ELSE                                                         0448
*       DO;                         /* NONE OF THE ABOVE-IMPLIES REAL
*                                      PU MACRO CALL                 */
         B     @RC00446                                            0448
@RF00446 DS    0H                                                  0449
*         GPR1=MLCKWD;              /* POINT TO FIRST OF KEYWORDS IN
*                                      STRING                        */
         L     GPR1,MLCKWD(,MLCAREG)                               0449
*         PHR1REG=ADDR(RNCPHR1);    /* GET ADDR OF OUTPUT AREA       */
         LA    PHR1REG,RNCPHR1(,RNCAREG)                           0450
*         RFY                                                      0451
*           ISTPHROA BASED(PHR1REG);                               0451
*         RC=4;                     /* SET UP LOOP KEY               */
         MVC   RC(2),@CH00052                                      0452
*/*            DOWHILE(RC=4)                                         */
*                                                                  0453
*         DO WHILE(RC=4);           /* LOOP UNITL END-OF-STRING OR 0453
*                                      LOGICAL ERROR                 */
         B     @DE00453                                            0453
@DL00453 DS    0H                                                  0454
*           GPR0=ADDR(PREKWTBL);    /* SET UP TO POINT TO PRE SCAN 0454
*                                      KEYWORD TABLE                 */
         LA    GPR0,PREKWTBL                                       0454
*           MLCKWD=GPR1;            /* UPDATE PTR TO CURRENT KEY-  0455
*                                                            @ZA12017*/
*                                                                  0455
         ST    GPR1,MLCKWD(,MLCAREG)                               0455
*           /*********************************************************/
*           /*                                                       */
*           /* WORD FOR MSG DUE TO ERROR                     @ZA12017*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0456
*           CALL ISTINCPH;          /* SEARCH KEYWORD STRING         */
         L     @15,@CV02914                                        0456
         BALR  @14,@15                                             0456
*           RC=GPR15;                                              0457
         STH   GPR15,RC                                            0457
*         END;                      /* END(DOWHILE)                  */
@DE00453 CLC   RC(2),@CH00052                                      0458
         BE    @DL00453                                            0458
*#DC00009:                                                         0459
*         ;                         /* KEYWORD FOUND/END-OF-STRING OR
*                                      ERROR                         */
#DC00009 DS    0H                                                  0460
*         IF RC=0                   /* WAS PUTYPE KEYWORD FOUND?     */
*           THEN                                                   0460
         ICM   @11,3,RC                                            0460
         BNZ   @RF00460                                            0460
*           DO;                     /* YES - PROCEED WITH PRESCAN    */
*             GPR15=GPR0;                                          0462
         LR    GPR15,GPR0                                          0462
*             CALL PARMHDLR;                                       0463
         BALR  @14,@15                                             0463
*PRMRETRN:                                                         0464
*             ;                                                    0464
PRMRETRN DS    0H                                                  0465
*           END;                                                   0465
*         ELSE                                                     0466
*           DO;                                                    0466
         B     @RC00460                                            0466
@RF00460 DS    0H                                                  0467
*             IF RC=8               /* END OF STRING?                */
*               THEN                                               0467
         CLC   RC(2),@CH00036                                      0467
         BE    @RT00467                                            0467
*               ;                   /* YES DO NOTHING MORE           */
*             ELSE                                                 0469
*               DO;                 /* NO - ERROR (LOGICAL)          */
*/* ERRFMT    LEVEL(PARM)  ERROR(SYN)  ACTION(KILLBLD)               */
*                                                                  0470
*                 DO;                                              0470
*                   DCL                                            0471
*                     1 CMZP0011 STATIC LOCAL,/* PARAMETER LIST    0471
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                      2 CMZL0011 FIXED(8) INIT(4),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                      2 CMZE0011 FIXED(8) INIT(6),/* ERROR PARAMETER
*                                      (CERR)                        */
*                      2 CMZA0011 CHAR(1) INIT('6'),/* ACTION      0471
*                                      PARAMETER (CACT)              */
*                      2 CMZS0011 FIXED(8) INIT(0);/* LENGTH OF    0471
*                                      STRING PARAM                  */
*                   DCL                                            0472
*                     CMZR0011 REGISTER(1);/* ESTABLISH PARAMeter    */
*                   RESPECIFY                                      0473
*                     CMZR0011 RSTD;/* REGISTER FOR                  */
*                   CMZR0011=ADDR(CMZP0011);/* ADDRESS OF PARAMETER
*                                      LIST                          */
         LA    CMZR0011,CMZP0011                                   0474
*                   CALL ISTSDCC2;  /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0475
         BALR  @14,@15                                             0475
*                   RESPECIFY                                      0476
*                     CMZR0011 UNRSTD;                             0476
*                 END;                                             0477
*                 RC=4;             /* FORCE KILL RC                 */
         MVC   RC(2),@CH00052                                      0478
*               END;                                               0479
*           END;                                                   0480
@RT00467 DS    0H                                                  0481
*         IF RC=4                   /* SYNTAX ERROR OCCUR?           */
*           THEN                                                   0481
@RC00460 CLC   RC(2),@CH00052                                      0481
         BE    @RT00481                                            0481
*           ;                       /* YES - DO NOTHING WITH IT      */
*         ELSE                                                     0483
*           DO;                     /* NO - CONTINUE                 */
*             IF RCCTYPE=RCCPU04    /* PUTYPE = 4?                   */
*               THEN                                               0484
         L     @11,MLCPTR5(,MLCAREG)                               0484
         CLI   RCCTYPE(@11),X'04'                                  0484
         BNE   @RF00484                                            0484
*               DO;                 /* YES - DO NOTHING              */
*                 IF RNCGRNBD='1'B  /* PU CALL FROM RNBLD?           */
*                   THEN                                           0486
         TM    RNCGRNBD(RNCAREG),B'00000100'                       0486
         BNO   @RF00486                                            0486
*                   DO;             /* YES - MORE PROCESSING         */
*                     RNCGPUIN='1'B;/* SET ON ISTSDCIN CALLED FROM 0488
*                                      ISTSDCPU BIT                  */
         OI    RNCGPUIN(RNCAREG),B'01000000'                       0488
*                     CALL ISTSDCIN;/* GO TO INNODE MOD.             */
         L     @15,@CV02916                                        0489
         BALR  @14,@15                                             0489
*                     RC=GPR15;     /* SAVE IN RC                    */
         STH   GPR15,RC                                            0490
*                     EXITSW='1'B;  /* INDICATE END OF IT            */
         OI    EXITSW,B'10000000'                                  0491
*                   END;                                           0492
*                 ELSE                                             0493
*                   DO;             /* NO - NOT RN BLD               */
         B     @RC00486                                            0493
@RF00486 DS    0H                                                  0494
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  0494
*                     DO;                                          0494
*                       DCL                                        0495
*                         1 CMZP0012 STATIC LOCAL,/* PARAMETER LIST
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                          2 CMZL0012 FIXED(8) INIT(5),/* LEVEL    0495
*                                      PARAMETER (CLEV)              */
*                          2 CMZE0012 FIXED(8) INIT(4),/* ERROR    0495
*                                      PARAMETER (CERR)              */
*                          2 CMZA0012 CHAR(1) INIT('6'),/* ACTION  0495
*                                      PARAMETER (CACT)              */
*                          2 CMZS0012 FIXED(8) INIT(0);/* LENGTH OF
*                                      STRING PARAM                  */
*                       DCL                                        0496
*                         CMZR0012 REGISTER(1);/* ESTABLISH PARAMeter*/
*                       RESPECIFY                                  0497
*                         CMZR0012 RSTD;/* REGISTER FOR              */
*                       CMZR0012=ADDR(CMZP0012);/* ADDRESS OF      0498
*                                      PARAMETER LIST                */
         LA    CMZR0012,CMZP0012                                   0498
*                       CALL ISTSDCC2;/* CALL ERROR FORMAT ROUTINE   */
         L     @15,@CV02911                                        0499
         BALR  @14,@15                                             0499
*                       RESPECIFY                                  0500
*                         CMZR0012 UNRSTD;                         0500
*                     END;                                         0501
*                     RC=4;         /* FORCE KILL RC                 */
         MVC   RC(2),@CH00052                                      0502
*                   END;                                           0503
*               END;                                               0504
*             ELSE                                                 0505
*               ;                                                  0505
@RF00484 DS    0H                                                  0506
*           END;                                                   0506
@RC00484 DS    0H                                                  0507
*       END;                                                       0507
@RT00481 DS    0H                                                  0508
*   MLCKWD=SAVMLCKW;                /* RESTORE POINTER TO FIRST    0508
*                                      KEYWORD               @ZA12017*/
@RC00446 DS    0H                                                  0508
@RT00444 MVC   MLCKWD(4,MLCAREG),SAVMLCKW                          0508
*/********************************************************************/
*/*                                                                  */
*/*   END OF PRE SCAN SEGMENT                                        */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(PUPRSCN)FINISH                                           */
*                                                                  0509
*   DO;                                                            0509
*     GOTO PUPRSCN#;                                               0510
         B     PUPRSCN#                                            0510
*PUPRSCN@:                                                         0511
*   END;                                                           0511
*                                                                  0512
*/********************************************************************/
*/*                                                                  */
*/*   PUTYPE SUBROUTINE                                              */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A PUTYPE KEYWORD IN CALLING MACRO  */
*/*   (FUNCTION 02) AND SET PUTYPE DEFAULT IN ENTRY MODEL            */
*/*   NOTE:  THIS PROCEDURE IS USED BY PUPRSCN.                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0512
*PUPUTYPE:                                                         0512
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0512
         B     @PB00002                                            0512
PUPUTYPE DS    0H                                                  0513
*   IF PHRF2VAL(1)=0                /* CHECK FOR SPECIFICATION =   0513
*                                      TYPE1                         */
*     THEN                                                         0513
         ICM   @11,15,PHRF2VAL(PHR1REG)                            0513
         BNZ   @RF00513                                            0513
*     RCCTYPE=RCCPU01;              /* YES - SET TYPE1               */
         L     @11,MLCPTR5(,MLCAREG)                               0514
         MVI   RCCTYPE(@11),X'01'                                  0514
*   ELSE                                                           0515
*     IF PHRF2VAL(1)=1              /* CHECK FOR SPECIFICATION =   0515
*                                      TYPE2                         */
*       THEN                                                       0515
         B     @RC00513                                            0515
@RF00513 CLC   PHRF2VAL(4,PHR1REG),@CF00039                        0515
         BNE   @RF00515                                            0515
*       RCCTYPE=RCCPU02;            /* YES - SET IT                  */
         L     @11,MLCPTR5(,MLCAREG)                               0516
         MVI   RCCTYPE(@11),X'02'                                  0516
*     ELSE                                                         0517
*       IF PHRF2VAL(1)=2            /* CHECK FOR SPECIFICATION =   0517
*                                      TYPE4                         */
*         THEN                                                     0517
         B     @RC00515                                            0517
@RF00515 CLC   PHRF2VAL(4,PHR1REG),@CF00234                        0517
         BNE   @RF00517                                            0517
*         RCCTYPE=RCCPU04;          /* YES SET TYPE4                 */
         L     @11,MLCPTR5(,MLCAREG)                               0518
         MVI   RCCTYPE(@11),X'04'                                  0518
*       ELSE                                                       0519
*         DO;                       /* NO - ISSUE ERROR MSG - TAKE 0519
*                                      DEFAULT                       */
         B     @RC00517                                            0519
@RF00517 DS    0H                                                  0520
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  0520
*           DO;                                                    0520
*             DCL                                                  0521
*               1 CMZP0014 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0014 FIXED(8) INIT(5),/* LEVEL PARAMETER    0521
*                                      (CLEV)                        */
*                2 CMZE0014 FIXED(8) INIT(4),/* ERROR PARAMETER    0521
*                                      (CERR)                        */
*                2 CMZA0014 CHAR(1) INIT('2'),/* ACTION PARAMETER  0521
*                                      (CACT)                        */
*                2 CMZS0014 FIXED(8) INIT(0);/* LENGTH OF STRING   0521
*                                      PARAM                         */
*             DCL                                                  0522
*               CMZR0014 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0523
*               CMZR0014 RSTD;      /* REGISTER FOR                  */
*             CMZR0014=ADDR(CMZP0014);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0014,CMZP0014                                   0524
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0525
         BALR  @14,@15                                             0525
*             RESPECIFY                                            0526
*               CMZR0014 UNRSTD;                                   0526
*           END;                                                   0527
*           RCCTYPE=RCCPU02;        /* SET DEFAULT OF TYPE2          */
         L     @11,MLCPTR5(,MLCAREG)                               0528
         MVI   RCCTYPE(@11),X'02'                                  0528
*         END;                                                     0529
*   RC=0;                           /* FORCE GOOD RETURN CODE        */
@RC00517 DS    0H                                                  0530
@RC00515 DS    0H                                                  0530
@RC00513 SLR   @11,@11                                             0530
         STH   @11,RC                                              0530
*   GPR14=ADDR(PRMRETRN);           /* SET RETURN ADDR IN REG 14     */
         LA    GPR14,PRMRETRN                                      0531
*   END PUPUTYPE;                                                  0532
@EL00002 DS    0H                                                  0532
@EF00002 DS    0H                                                  0532
@ER00002 BR    @14                                                 0532
@PB00002 DS    0H                                                  0533
*                                                                  0533
*/* SEGMENT(PUMOVE)START                                             */
*                                                                  0533
*   DO;                                                            0533
*     GOTO PUMOVE@;                                                0534
         B     PUMOVE@                                             0534
*PUMOVE:                                                           0535
*   END;                                                           0535
*                                                                  0535
PUMOVE   DS    0H                                                  0536
*/********************************************************************/
*/*                                                                  */
*/*   PUMOVE SEGMENT:                                                */
*/*   THIS SEGMENT CALLS ISTSDCC1 TO MOVE WHICH EVER ENTRY HAS BEEN  */
*/*   BUILT BY ALL THE OTHER CODE(IF THE BUILD WORKED)               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0536
*   IF RNCGLSBD='1'B                /* IS THIS A LOCAL SUBAREA ENTRY?*/
*     THEN                                                         0536
         TM    RNCGLSBD(RNCAREG),B'00000001'                       0536
         BNO   @RF00536                                            0536
*     DO;                           /* YES - PROCESS IT AS SUCH      */
*       GPR0=0;                     /* SET UP TO MOVE DAN ENTRY      */
         SLR   GPR0,GPR0                                           0538
*       GPR1=ENTRYPTR;              /* SET ADDR OF ENTRY             */
         LR    GPR1,ENTRYPTR                                       0539
*       CALL ISTSDCC1;              /* MOVE ENTRY                    */
         L     @15,@CV02910                                        0540
         BALR  @14,@15                                             0540
*       RC=GPR15;                   /* SAVE C1 RETURN CODE           */
         STH   GPR15,RC                                            0541
*       IF RC=0                     /* NOW TEST IT                   */
*         THEN                                                     0542
         LH    @11,RC                                              0542
         LTR   @11,@11                                             0542
         BNZ   @RF00542                                            0542
*         DO;                       /* YES - MORE PROCESSING         */
*           RNCDA=GPR1;             /* SAVE PTR TO NEW LOCATION OF 0544
*                                      DAN ENTRY                     */
         ST    GPR1,RNCDA(,RNCAREG)                                0544
*           GPR1=MLCPTR5;           /* SET REG 1 TO ADDR OF PU ENTRY
*                                      TO BE MOVED AFTER THE DAN   0545
*                                      ENTRY HAS BEEN MOVED          */
         L     @11,MLCPTR5(,MLCAREG)                               0545
         LR    GPR1,@11                                            0545
*           IF RCCRBISA='1'B THEN                                  0546
         TM    RCCRBISA(@11),B'10000000'                           0546
         BNO   @RF00546                                            0546
*             RDARBISA='1'B;                                       0547
         OI    RDARBISA(ENTRYPTR),B'10000000'                      0547
*           ELSE                                                   0548
*             RDARBISA='0'B;                                       0548
         B     @RC00546                                            0548
@RF00546 NI    RDARBISA(ENTRYPTR),B'01111111'                      0548
*         END;                                                     0549
*       ELSE                                                       0550
*         ;                         /* C1 FAILED - DO NOTHING        */
@RF00542 DS    0H                                                  0551
*     END;                          /* END LOCAL SUBAREA MOVE        */
*   ELSE                                                           0552
*     GPR1=ENTRYPTR;                /* SET GPR1 TO ADDR OF MODEL     */
         B     @RC00536                                            0552
@RF00536 LR    GPR1,ENTRYPTR                                       0552
*   IF RC=4                         /* CHECK FIRST MOVE AGAIN        */
*     THEN                                                         0553
@RC00536 CLC   RC(2),@CH00052                                      0553
         BE    @RT00553                                            0553
*     ;                             /* YES IT FAILED - DO NOTHING  0554
*                                      MORE                          */
*   ELSE                                                           0555
*     DO;                           /* FIRST MOVE OK OR NO MOVE -  0555
*                                      CONTINUE                      */
*       GPR0=0;                     /* INDICATE MOVE ENTRY -> BY REG1*/
         SLR   GPR0,GPR0                                           0556
*       CALL ISTSDCC1;              /* MOVE IT                       */
         L     @15,@CV02910                                        0557
         BALR  @14,@15                                             0557
*       RC=GPR15;                   /* SAVE C1 RC                    */
         STH   GPR15,RC                                            0558
*       IF RC=0                     /* NOW CHECK IT                  */
*         THEN                                                     0559
         LH    @11,RC                                              0559
         LTR   @11,@11                                             0559
         BNZ   @RF00559                                            0559
*         DO;                                                      0560
*           IF RPRENTRY=RPRENTPX    /* MOVE OK - ENTRY PUX?          */
*             THEN                                                 0561
         CLI   RPRENTRY(ENTRYPTR),X'72'                            0561
         BNE   @RF00561                                            0561
*             RNCPX=GPR1;           /* YES - SAVE ADDR OF PUX ENTRY  */
         ST    GPR1,RNCPX(,RNCAREG)                                0562
*           ELSE                                                   0563
*             DO;                   /* NO - NOT PUX - PROCESS PU     */
         B     @RC00561                                            0563
@RF00561 DS    0H                                                  0564
*               RNCCC=GPR1;         /* SAVE ADDR OF PU ENTRY         */
         ST    GPR1,RNCCC(,RNCAREG)                                0564
*               IF RNCGRNBD='1'B    /* PU IN RNBLD                   */
*                 THEN                                             0565
         TM    RNCGRNBD(RNCAREG),B'00000100'                       0565
         BNO   @RF00565                                            0565
*                 DO;               /* YES - PROCESS IT              */
*                   RNCRN->RRNCTECL=RNCRN->RRNCTECL+1;/* UPDATE    0567
*                                      COUNTS IN RN ENTRY            */
         L     @11,RNCRN(,RNCAREG)                                 0567
         LA    @04,1                                               0567
         LH    @09,RRNCTECL(,@11)                                  0567
         ALR   @09,@04                                             0567
         STH   @09,RRNCTECL(,@11)                                  0567
*                   RNCGP->RGPCTECL=RNCGP->RGPCTECL+1;/* AND IN GROUP
*                                      ENTRY                         */
         L     @11,RNCGP(,RNCAREG)                                 0568
         LH    @09,RGPCTECL(,@11)                                  0568
         ALR   @09,@04                                             0568
         STH   @09,RGPCTECL(,@11)                                  0568
*                   RNCLN->RLNCTECL=RNCLN->RLNCTECL+1;/* ALSO LINE 0569
*                                      ENTRY                         */
         L     @11,RNCLN(,RNCAREG)                                 0569
         AH    @04,RLNCTECL(,@11)                                  0569
         STH   @04,RLNCTECL(,@11)                                  0569
*                 END;                                             0570
*               ELSE                                               0571
*                 ;                 /* NO - NOT RNBLD                */
@RF00565 DS    0H                                                  0572
*             END;                                                 0572
*         END;                                                     0573
*       ELSE                                                       0574
*         ;                                                        0574
@RF00559 DS    0H                                                  0575
*     END;                                                         0575
*                                                                  0575
@RC00559 DS    0H                                                  0576
*/********************************************************************/
*/*                                                                  */
*/*   END OF SEGMENT TO MOVE ENTRY                                   */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(PUMOVE)FINISH                                            */
*                                                                  0576
*   DO;                                                            0576
@RT00553 DS    0H                                                  0577
*     GOTO PUMOVE#;                                                0577
         B     PUMOVE#                                             0577
*PUMOVE@:                                                          0578
*   END;                                                           0578
*PUDOLOOP:                                                         0579
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0579
*                                                                  0579
         B     @PB00003                                            0579
PUDOLOOP DS    0H                                                  0580
*/********************************************************************/
*/*                                                                  */
*/*   DO - LOOP PROCEDURE                                            */
*/*                                                                  */
*/*   THIS ROUTINE WILL PROCESS ALL KEYWORDS SPECIFIES ON THE MACRO  */
*/*   THAT CAUSED ISTSDCPU TO BE CALLED.                             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0580
*   GPR0=KWDTBPTR;                  /* GET ADDR OF KEYWORD TABLE     */
         L     GPR0,KWDTBPTR                                       0580
*   PHR1REG=ADDR(RNCPHR1);          /* SET UP TO CALL                */
         LA    PHR1REG,RNCPHR1(,RNCAREG)                           0581
*   RFY                                                            0582
*     ISTPHROA BASED(PHR1REG);      /* ISTINCPH                      */
*   CALL ISTINCPH;                                                 0583
         L     @15,@CV02914                                        0583
         BALR  @14,@15                                             0583
*   RC=GPR15;                       /* SAVE PHR RETURN CODE          */
         STH   GPR15,RC                                            0584
*   GPR1SAVE=GPR1;                  /* SAVE ADDR OF NEXT KEYWORD     */
         ST    GPR1,GPR1SAVE                                       0585
*   IF RC=0                         /* CHECK RC FROM PHR             */
*     THEN                                                         0586
         LH    @11,RC                                              0586
         LTR   @11,@11                                             0586
         BNZ   @RF00586                                            0586
*     DO;                           /* GOOD RC - CONTINUE            */
*       GPR15=GPR0;                                                0588
         LR    GPR15,GPR0                                          0588
*       CALL PARMHDLR;              /* CALL ROUTINE TO PROCESS     0589
*                                      KEYWORD                       */
         BALR  @14,@15                                             0589
*MAINSUB:                                                          0590
*       ;                           /* RETURN ADDRESS FROM KEYWORD 0590
*                                      PROCESSOR                     */
MAINSUB  DS    0H                                                  0591
*     END;                                                         0591
*   ELSE                                                           0592
*     IF RC=4                       /* ERROR RETURN FROM PHR         */
*       THEN                                                       0592
         B     @RC00586                                            0592
@RF00586 CLC   RC(2),@CH00052                                      0592
         BNE   @RF00592                                            0592
*       DO;                         /* YES PUT OUT ERROR MSG         */
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  0594
*         DO;                                                      0594
*           DCL                                                    0595
*             1 CMZP0017 STATIC LOCAL,/* PARAMETER LIST PASSED TO  0595
*                                      ERROR FORMAT ROUTINE          */
*              2 CMZL0017 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV) */
*              2 CMZE0017 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR) */
*              2 CMZA0017 CHAR(1) INIT('1'),/* ACTION PARAMETER    0595
*                                      (CACT)                        */
*              2 CMZS0017 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM */
*           DCL                                                    0596
*             CMZR0017 REGISTER(1); /* ESTABLISH PARAMeter           */
*           RESPECIFY                                              0597
*             CMZR0017 RSTD;        /* REGISTER FOR                  */
*           CMZR0017=ADDR(CMZP0017);/* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0017,CMZP0017                                   0598
*           CALL ISTSDCC2;          /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0599
         BALR  @14,@15                                             0599
*           RESPECIFY                                              0600
*             CMZR0017 UNRSTD;                                     0600
*         END;                                                     0601
*         RC=0;                     /* FORCE ZERO RC AND CONTINUE    */
         SLR   @11,@11                                             0602
         STH   @11,RC                                              0602
*       END;                                                       0603
*     ELSE                                                         0604
*       IF RC=8                     /* CHECK FOR END OF STRING       */
*         THEN                                                     0604
         B     @RC00592                                            0604
@RF00592 CLC   RC(2),@CH00036                                      0604
         BNE   @RF00604                                            0604
*         DO;                       /* YES - VALIDITY CHECK RDTE     */
*                                                                  0605
*           /*********************************************************/
*           /*                                                       */
*           /* SEGMENT(PUVLCHK)REQUEST                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0606
*           DO;                                                    0606
*             GOTO PUVLCHK;                                        0607
         B     PUVLCHK                                             0607
*PUVLCHK#:                                                         0608
*           END;                                                   0608
PUVLCHK# DS    0H                                                  0609
*         END;                                                     0609
*       ELSE                                                       0610
*         DO;                       /* NO - SEVERE ERROR - QUIT      */
         B     @RC00604                                            0610
@RF00604 DS    0H                                                  0611
*           IF RC=12                /* SYNTAX ERROR                  */
*             THEN                                                 0611
         CLC   RC(2),@CH00033                                      0611
         BNE   @RF00611                                            0611
*             DO;                   /* YES - KILL BUILD              */
*/* ERRFMT    LEVEL(PARM)  ERROR(SYN)  ACTION(KILLBLD)               */
*                                                                  0613
*               DO;                                                0613
*                 DCL                                              0614
*                   1 CMZP0019 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0019 FIXED(8) INIT(4),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0019 FIXED(8) INIT(6),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0019 CHAR(1) INIT('6'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0019 FIXED(8) INIT(0);/* LENGTH OF STRING
*                                      PARAM                         */
*                 DCL                                              0615
*                   CMZR0019 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        0616
*                   CMZR0019 RSTD;  /* REGISTER FOR                  */
*                 CMZR0019=ADDR(CMZP0019);/* ADDRESS OF PARAMETER  0617
*                                      LIST                          */
         LA    CMZR0019,CMZP0019                                   0617
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0618
         BALR  @14,@15                                             0618
*                 RESPECIFY                                        0619
*                   CMZR0019 UNRSTD;                               0619
*               END;                                               0620
*             END;                                                 0621
*           ELSE                                                   0622
*             DO;                   /* NO-LOGICAL ERROR-KILLBLD      */
         B     @RC00611                                            0622
@RF00611 DS    0H                                                  0623
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(KILLBLD)             */
*                                                                  0623
*               DO;                                                0623
*                 DCL                                              0624
*                   1 CMZP0020 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0020 FIXED(8) INIT(4),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0020 FIXED(8) INIT(4),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0020 CHAR(1) INIT('6'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0020 FIXED(8) INIT(0);/* LENGTH OF STRING
*                                      PARAM                         */
*                 DCL                                              0625
*                   CMZR0020 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        0626
*                   CMZR0020 RSTD;  /* REGISTER FOR                  */
*                 CMZR0020=ADDR(CMZP0020);/* ADDRESS OF PARAMETER  0627
*                                      LIST                          */
         LA    CMZR0020,CMZP0020                                   0627
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0628
         BALR  @14,@15                                             0628
*                 RESPECIFY                                        0629
*                   CMZR0020 UNRSTD;                               0629
*               END;                                               0630
*             END;                                                 0631
*           RC=4;                   /* FORCE ERROR RC                */
@RC00611 MVC   RC(2),@CH00052                                      0632
*         END;                                                     0633
*   GPR1=GPR1SAVE;                  /* RESTORE REG 1                 */
@RC00604 DS    0H                                                  0634
@RC00592 DS    0H                                                  0634
@RC00586 L     GPR1,GPR1SAVE                                       0634
*   MLCKWD=GPR1;                    /* GET ADDR OF NEXT KEYWORD      */
         ST    GPR1,MLCKWD(,MLCAREG)                               0635
*   GPR14=ADDR(DORETURN);           /* SET RETURN TO MAINLINE CODE 0636
*                                      ADDRESS                       */
         LA    GPR14,DORETURN                                      0636
*                                                                  0637
*/* SEGMENT(PUVLCHK)START                                            */
*                                                                  0637
*   DO;                                                            0637
*     GOTO PUVLCHK@;                                               0638
         B     PUVLCHK@                                            0638
*PUVLCHK:                                                          0639
*   END;                                                           0639
*                                                                  0639
PUVLCHK  DS    0H                                                  0640
*/********************************************************************/
*/*                                                                  */
*/*   PUVLCHK SEGMENT:                                               */
*/*   THIS SEGMENT DOES THE VALIDITY CHECKING TO SEE IF ALL REQUIRED */
*/*   VALUES/KEYWORDS WERE SPECIFIED ON THE PU MACRO                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  0640
*   IF RNCGRNBD='1'B                /* PU SPECIFIED IN RNBLD?        */
*     THEN                                                         0640
         TM    RNCGRNBD(RNCAREG),B'00000100'                       0640
         BO    @RT00640                                            0640
*     ;                             /* YES - NO NOTHING - NCPGEN DID
*                                      ALL CHECKING                  */
*   ELSE                                                           0642
*     IF RNCGLSBD='1'B              /* IS BUILD LOCAL SUBAREA?       */
*       THEN                                                       0642
         TM    RNCGLSBD(RNCAREG),B'00000001'                       0642
         BNO   @RF00642                                            0642
*       DO;                         /* YES - CONTINUE                */
*         IF CUAFTPT='1'B           /* CUADDR SPECIFIED?             */
*           THEN                                                   0644
         TM    CUAFTPT,B'00100000'                                 0644
         BO    @RT00644                                            0644
*           ;                       /* YES - DO NOTHING              */
*         ELSE                                                     0646
*           IF RCCRBISA='0'B        /* ISTATUS INACTIVE?             */
*             THEN                                                 0646
         L     @11,MLCPTR5(,MLCAREG)                               0646
         TM    RCCRBISA(@11),B'10000000'                           0646
         BZ    @RT00646                                            0646
*             ;                     /* YES - ALSO DO NOTHING         */
*           ELSE                                                   0648
*             DO;                   /* WRONG                         */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)  STRING('ISTA
*US')                                                                */
*                                                                  0649
*               DO;                                                0649
*                 DCL                                              0650
*                   1 CMZP0022 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0022 FIXED(8) INIT(5),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0022 FIXED(8) INIT(4),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0022 CHAR(1) INIT('6'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0022 FIXED(8) INIT(7),/* LENGTH OF STRING
*                                      PARAM                         */
*                    2 CMZM0022 CHAR(7) INIT('ISTATUS');/* PARAMETER
*                                      STRING                        */
*                 DCL                                              0651
*                   CMZR0022 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        0652
*                   CMZR0022 RSTD;  /* REGISTER FOR                  */
*                 CMZR0022=ADDR(CMZP0022);/* ADDRESS OF PARAMETER  0653
*                                      LIST                          */
         LA    CMZR0022,CMZP0022                                   0653
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0654
         BALR  @14,@15                                             0654
*                 RESPECIFY                                        0655
*                   CMZR0022 UNRSTD;                               0655
*               END;                                               0656
*               RC=4;               /* FORCE KILL RC                 */
         MVC   RC(2),@CH00052                                      0657
*             END;                                                 0658
*       END;                                                       0659
*                                                                  0659
*/*VALIDITY CHECK THE SWITCHED SUBAREA SEGMENT BUILD                 */
*                                                                  0660
*     ELSE                                                         0660
*       IF RCCMXDAT=0               /* CHECK FOR MAXDATA IN SWITCHED
*                                                             SUBAREA*/
*         THEN                                                     0660
         B     @RC00642                                            0660
@RF00642 L     @11,MLCPTR5(,MLCAREG)                               0660
         ICM   @04,3,RCCMXDAT(@11)                                 0660
         BNZ   @RF00660                                            0660
*         DO;                       /* YES - ERROR                   */
*/* ERRFMT    LEVEL(PARM)  ERROR(MISS)  ACTION(KILLBLD)  STRING('MAXDAT
*')                                                                  */
*                                                                  0662
*           DO;                                                    0662
*             DCL                                                  0663
*               1 CMZP0023 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0023 FIXED(8) INIT(4),/* LEVEL PARAMETER    0663
*                                      (CLEV)                        */
*                2 CMZE0023 FIXED(8) INIT(8),/* ERROR PARAMETER    0663
*                                      (CERR)                        */
*                2 CMZA0023 CHAR(1) INIT('6'),/* ACTION PARAMETER  0663
*                                      (CACT)                        */
*                2 CMZS0023 FIXED(8) INIT(7),/* LENGTH OF STRING   0663
*                                      PARAM                         */
*                2 CMZM0023 CHAR(7) INIT('MAXDATA');/* PARAMETER   0663
*                                      STRING                        */
*             DCL                                                  0664
*               CMZR0023 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0665
*               CMZR0023 RSTD;      /* REGISTER FOR                  */
*             CMZR0023=ADDR(CMZP0023);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0023,CMZP0023                                   0666
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0667
         BALR  @14,@15                                             0667
*             RESPECIFY                                            0668
*               CMZR0023 UNRSTD;                                   0668
*           END;                                                   0669
*           RC=4;                   /* FORCE KILL RC                 */
         MVC   RC(2),@CH00052                                      0670
*         END;                                                     0671
*       ELSE                                                       0672
*         DO;                       /* MAXDATA OK - CONTINUE         */
         B     @RC00660                                            0672
@RF00660 DS    0H                                                  0673
*           IF RCCADDR=0            /* WAS ADDR SPECIFIED?           */
*             THEN                                                 0673
         L     @11,MLCPTR5(,MLCAREG)                               0673
         CLI   RCCADDR(@11),0                                      0673
         BNE   @RF00673                                            0673
*             DO;                   /* NO - INDICATE ERR             */
*/* ERRFMT    LEVEL(PARM)  ERROR(MISS)  ACTION(KILLBLD)  STRING('ADDR')
*                                                                    */
*                                                                  0675
*               DO;                                                0675
*                 DCL                                              0676
*                   1 CMZP0024 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0024 FIXED(8) INIT(4),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0024 FIXED(8) INIT(8),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0024 CHAR(1) INIT('6'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0024 FIXED(8) INIT(4),/* LENGTH OF STRING
*                                      PARAM                         */
*                    2 CMZM0024 CHAR(4) INIT('ADDR');/* PARAMETER  0676
*                                      STRING                        */
*                 DCL                                              0677
*                   CMZR0024 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        0678
*                   CMZR0024 RSTD;  /* REGISTER FOR                  */
*                 CMZR0024=ADDR(CMZP0024);/* ADDRESS OF PARAMETER  0679
*                                      LIST                          */
         LA    CMZR0024,CMZP0024                                   0679
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0680
         BALR  @14,@15                                             0680
*                 RESPECIFY                                        0681
*                   CMZR0024 UNRSTD;                               0681
*               END;                                               0682
*               RC=4;                                              0683
         MVC   RC(2),@CH00052                                      0683
*             END;                                                 0684
*           ELSE                                                   0685
*             IF BLKFTPT='0'B       /* WAS IDBLK SPECIFIED?          */
*               THEN                                               0685
         B     @RC00673                                            0685
@RF00673 TM    BLKFTPT,B'00010000'                                 0685
         BNZ   @RF00685                                            0685
*               DO;                 /* NO - ERR                      */
*/* ERRFMT    LEVEL(PARM)  ERROR(MISS)  ACTION(KILLBLD)  STRING('IDBLK'
*                                                                    */
*                                                                  0687
*                 DO;                                              0687
*                   DCL                                            0688
*                     1 CMZP0025 STATIC LOCAL,/* PARAMETER LIST    0688
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                      2 CMZL0025 FIXED(8) INIT(4),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                      2 CMZE0025 FIXED(8) INIT(8),/* ERROR PARAMETER
*                                      (CERR)                        */
*                      2 CMZA0025 CHAR(1) INIT('6'),/* ACTION      0688
*                                      PARAMETER (CACT)              */
*                      2 CMZS0025 FIXED(8) INIT(5),/* LENGTH OF    0688
*                                      STRING PARAM                  */
*                      2 CMZM0025 CHAR(5) INIT('IDBLK');/* PARAMETER
*                                      STRING                        */
*                   DCL                                            0689
*                     CMZR0025 REGISTER(1);/* ESTABLISH PARAMeter    */
*                   RESPECIFY                                      0690
*                     CMZR0025 RSTD;/* REGISTER FOR                  */
*                   CMZR0025=ADDR(CMZP0025);/* ADDRESS OF PARAMETER
*                                      LIST                          */
         LA    CMZR0025,CMZP0025                                   0691
*                   CALL ISTSDCC2;  /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0692
         BALR  @14,@15                                             0692
*                   RESPECIFY                                      0693
*                     CMZR0025 UNRSTD;                             0693
*                 END;                                             0694
*                 RC=4;                                            0695
         MVC   RC(2),@CH00052                                      0695
*               END;                                               0696
*             ELSE                                                 0697
*               IF NUMFTPT='0'B     /* IDNUM OK?                     */
*                 THEN                                             0697
         B     @RC00685                                            0697
@RF00685 TM    NUMFTPT,B'00001000'                                 0697
         BNZ   @RF00697                                            0697
*                 DO;               /* ERR                           */
*/* ERRFMT    LEVEL(PARM)  ERROR(MISS)  ACTION(KILLBLD)  STRING('IDNUM'
*                                                                    */
*                                                                  0699
*                   DO;                                            0699
*                     DCL                                          0700
*                       1 CMZP0026 STATIC LOCAL,/* PARAMETER LIST  0700
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                        2 CMZL0026 FIXED(8) INIT(4),/* LEVEL      0700
*                                      PARAMETER (CLEV)              */
*                        2 CMZE0026 FIXED(8) INIT(8),/* ERROR      0700
*                                      PARAMETER (CERR)              */
*                        2 CMZA0026 CHAR(1) INIT('6'),/* ACTION    0700
*                                      PARAMETER (CACT)              */
*                        2 CMZS0026 FIXED(8) INIT(5),/* LENGTH OF  0700
*                                      STRING PARAM                  */
*                        2 CMZM0026 CHAR(5) INIT('IDNUM');/*       0700
*                                      PARAMETER STRING              */
*                     DCL                                          0701
*                       CMZR0026 REGISTER(1);/* ESTABLISH PARAMeter  */
*                     RESPECIFY                                    0702
*                       CMZR0026 RSTD;/* REGISTER FOR                */
*                     CMZR0026=ADDR(CMZP0026);/* ADDRESS OF PARAMETER
*                                      LIST                          */
         LA    CMZR0026,CMZP0026                                   0703
*                     CALL ISTSDCC2;/* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0704
         BALR  @14,@15                                             0704
*                     RESPECIFY                                    0705
*                       CMZR0026 UNRSTD;                           0705
*                   END;                                           0706
*                   RC=4;                                          0707
         MVC   RC(2),@CH00052                                      0707
*                 END;                                             0708
*               ELSE                                               0709
*                 ;                 /* ALL OK - DO NOTHING           */
@RF00697 DS    0H                                                  0710
*           IF RC=4                 /* DID ERROR OCCUR               */
*             THEN                                                 0710
@RC00685 DS    0H                                                  0710
@RC00673 CLC   RC(2),@CH00052                                      0710
         BE    @RT00710                                            0710
*             ;                     /* YES                           */
*           ELSE                                                   0712
*             DO;                   /* CONTINUE VALIDITY CHECKING    */
*               IF RCCBNNSP='1'B    /* BNNSUP = '3270'?              */
*                 THEN                                             0713
         L     @11,MLCPTR5(,MLCAREG)                               0713
         TM    RCCBNNSP(@11),B'00010000'                           0713
         BNO   @RF00713                                            0713
*                 IF RCCTYPE=RCCPU01/* YES - IS PUTYPE = 1?          */
*                   THEN                                           0714
         CLI   RCCTYPE(@11),X'01'                                  0714
         BE    @RT00714                                            0714
*                   ;               /* YES - DO NOTHING              */
*                 ELSE                                             0716
*                   DO;                                            0716
*                                                                  0716
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)  STRING('BNNS
*P')                                                                 */
*                                                                  0717
*                     DO;                                          0717
*                       DCL                                        0718
*                         1 CMZP0027 STATIC LOCAL,/* PARAMETER LIST
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                          2 CMZL0027 FIXED(8) INIT(5),/* LEVEL    0718
*                                      PARAMETER (CLEV)              */
*                          2 CMZE0027 FIXED(8) INIT(4),/* ERROR    0718
*                                      PARAMETER (CERR)              */
*                          2 CMZA0027 CHAR(1) INIT('2'),/* ACTION  0718
*                                      PARAMETER (CACT)              */
*                          2 CMZS0027 FIXED(8) INIT(6),/* LENGTH OF
*                                      STRING PARAM                  */
*                          2 CMZM0027 CHAR(6) INIT('BNNSUP');/*    0718
*                                      PARAMETER STRING              */
*                       DCL                                        0719
*                         CMZR0027 REGISTER(1);/* ESTABLISH PARAMeter*/
*                       RESPECIFY                                  0720
*                         CMZR0027 RSTD;/* REGISTER FOR              */
*                       CMZR0027=ADDR(CMZP0027);/* ADDRESS OF      0721
*                                      PARAMETER LIST                */
         LA    CMZR0027,CMZP0027                                   0721
*                       CALL ISTSDCC2;/* CALL ERROR FORMAT ROUTINE   */
         L     @15,@CV02911                                        0722
         BALR  @14,@15                                             0722
*                       RESPECIFY                                  0723
*                         CMZR0027 UNRSTD;                         0723
*                     END;                                         0724
*                     RCCBNNSP='0'B;/* FORCE BNNSUP = STANDARD       */
         L     @11,MLCPTR5(,MLCAREG)                               0725
         NI    RCCBNNSP(@11),B'11101111'                           0725
*                   END;                                           0726
*               ELSE                                               0727
*                 ;                 /* BNNSUP SPECIFIED OK           */
@RF00713 DS    0H                                                  0728
*               IF RCCPASSL>=1&     /* PASSLIM 1 OR MORE?            */
*                   RCCPASSL<=RCCMXOUT/* AND LESS THAN MAXOUT        */
*                 THEN                                             0728
@RC00713 L     @11,MLCPTR5(,MLCAREG)                               0728
         CLI   RCCPASSL(@11),1                                     0728
         BL    @RF00728                                            0728
         CLC   RCCPASSL(1,@11),RCCMXOUT(@11)                       0728
         BNH   @RT00728                                            0728
*                 ;                 /* YES - EVERYTHING AOK          */
*               ELSE                                               0730
*                 DO;               /* NO - DEFAULT MSG              */
@RF00728 DS    0H                                                  0731
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)  STRING('PASS
*IM')                                                                */
*                                                                  0731
*                   DO;                                            0731
*                     DCL                                          0732
*                       1 CMZP0028 STATIC LOCAL,/* PARAMETER LIST  0732
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                        2 CMZL0028 FIXED(8) INIT(5),/* LEVEL      0732
*                                      PARAMETER (CLEV)              */
*                        2 CMZE0028 FIXED(8) INIT(4),/* ERROR      0732
*                                      PARAMETER (CERR)              */
*                        2 CMZA0028 CHAR(1) INIT('2'),/* ACTION    0732
*                                      PARAMETER (CACT)              */
*                        2 CMZS0028 FIXED(8) INIT(7),/* LENGTH OF  0732
*                                      STRING PARAM                  */
*                        2 CMZM0028 CHAR(7) INIT('PASSLIM');/*     0732
*                                      PARAMETER STRING              */
*                     DCL                                          0733
*                       CMZR0028 REGISTER(1);/* ESTABLISH PARAMeter  */
*                     RESPECIFY                                    0734
*                       CMZR0028 RSTD;/* REGISTER FOR                */
*                     CMZR0028=ADDR(CMZP0028);/* ADDRESS OF PARAMETER
*                                      LIST                          */
         LA    CMZR0028,CMZP0028                                   0735
*                     CALL ISTSDCC2;/* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0736
         BALR  @14,@15                                             0736
*                     RESPECIFY                                    0737
*                       CMZR0028 UNRSTD;                           0737
*                   END;                                           0738
*                   RCCPASSL=1;     /* SET DEFAULT                   */
         L     @11,MLCPTR5(,MLCAREG)                               0739
         MVI   RCCPASSL(@11),X'01'                                 0739
*                 END;                                             0740
*             END;                                                 0741
@RT00728 DS    0H                                                  0742
*         END;                                                     0742
*                                                                  0742
@RT00710 DS    0H                                                  0743
*/********************************************************************/
*/*                                                                  */
*/*   END OF VALIDITY CHECK SEGMENT                                  */
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(PUVLCHK)FINISH                                           */
*                                                                  0743
*   DO;                                                            0743
@RC00660 DS    0H                                                  0743
@RC00642 DS    0H                                                  0743
@RT00640 DS    0H                                                  0744
*     GOTO PUVLCHK#;                                               0744
         B     PUVLCHK#                                            0744
*PUVLCHK@:                                                         0745
*   END;                                                           0745
*                                                                  0746
*/********************************************************************/
*/*                                                                  */
*/*   ADDR PARAMETER SUBROUTINE                                      */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID PUADDR KEYWORD             */
*/*   (FUNCTION 24) AND SET THE VALUE INTO THE PU ENTRY              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0746
*PUADDR:                                                           0746
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0746
         B     @PB00004                                            0746
PUADDR   DS    0H                                                  0747
*   IF PHRF34SL(1)>2×PHRF34VF(1)^=PHRVFAOK/* CHECK PHR OUTPUT        */
*     THEN                                                         0747
         LH    @11,PHRF34SL(,PHR1REG)                              0747
         CH    @11,@CH00234                                        0747
         BH    @RT00747                                            0747
         CLI   PHRF34VF(PHR1REG),X'00'                             0747
         BE    @RF00747                                            0747
@RT00747 DS    0H                                                  0748
*     RC=4;                         /* SET ERROR RETURN CODE         */
         MVC   RC(2),@CH00052                                      0748
*   ELSE                                                           0749
*     DO;                           /* NO - GOOD SPECIFICATION OF  0749
*                                      ADDR KEYWORD                  */
         B     @RC00747                                            0749
@RF00747 DS    0H                                                  0750
*       GPR0=2;                     /* SET LENGTH FOR C4 TO 2        */
         LA    GPR0,2                                              0750
*       GPR1=ADDR(PHRF34SP(1,7:8)); /* SET UP FIELD TO BE CONVERTED  */
         LA    GPR1,PHRF34SP+6(,PHR1REG)                           0751
*       CALL ISTSDCC4;              /* CONVERT ADDR VALUE FROM EBCIDC
*                                      TO HEX                        */
         L     @15,@CV02912                                        0752
         BALR  @14,@15                                             0752
*       RC=GPR15;                   /* SAVE RETURN CODE FROM C4      */
         STH   GPR15,RC                                            0753
*       IF RC=0                     /* CHECK FOR GOOD CONVERSION     */
*         THEN                                                     0754
         LH    @11,RC                                              0754
         SLR   @04,@04                                             0754
         CR    @11,@04                                             0754
         BNE   @RF00754                                            0754
*         IF PHRF34SP(1,7:7)>0&PHRF34SP(1,7:7)<255/* VALID RANGE     */
*           THEN                                                   0755
         SLR   @11,@11                                             0755
         IC    @11,PHRF34SP+6(,PHR1REG)                            0755
         CR    @11,@04                                             0755
         BNH   @RF00755                                            0755
         CH    @11,@CH03094                                        0755
         BNL   @RF00755                                            0755
*           DO;                     /* YES - SET ADDR IN PU ENTRY    */
*             RCCADDR=PHRF34SP(1,7:7);                             0757
         L     @04,MLCPTR5(,MLCAREG)                               0757
         STC   @11,RCCADDR(,@04)                                   0757
*             IF PHRF34NS>1         /* ANY MORE VALUES SPECIFIED?    */
*               THEN                                               0758
         L     @11,PHRF34NS(,PHR1REG)                              0758
         CH    @11,@CH00039                                        0758
         BNH   @RF00758                                            0758
*               DO;                 /* YES - ISSUE IGNORE MSG        */
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  0760
*                 DO;                                              0760
*                   DCL                                            0761
*                     1 CMZP0030 STATIC LOCAL,/* PARAMETER LIST    0761
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                      2 CMZL0030 FIXED(8) INIT(5),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                      2 CMZE0030 FIXED(8) INIT(7),/* ERROR PARAMETER
*                                      (CERR)                        */
*                      2 CMZA0030 CHAR(1) INIT('1'),/* ACTION      0761
*                                      PARAMETER (CACT)              */
*                      2 CMZS0030 FIXED(8) INIT(0);/* LENGTH OF    0761
*                                      STRING PARAM                  */
*                   DCL                                            0762
*                     CMZR0030 REGISTER(1);/* ESTABLISH PARAMeter    */
*                   RESPECIFY                                      0763
*                     CMZR0030 RSTD;/* REGISTER FOR                  */
*                   CMZR0030=ADDR(CMZP0030);/* ADDRESS OF PARAMETER
*                                      LIST                          */
         LA    CMZR0030,CMZP0030                                   0764
*                   CALL ISTSDCC2;  /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0765
         BALR  @14,@15                                             0765
*                   RESPECIFY                                      0766
*                     CMZR0030 UNRSTD;                             0766
*                 END;                                             0767
*               END;                                               0768
*             ELSE                                                 0769
*               ;                                                  0769
@RF00758 DS    0H                                                  0770
*           END;                                                   0770
*         ELSE                                                     0771
*           RC=4;                                                  0771
         B     @RC00755                                            0771
@RF00755 MVC   RC(2),@CH00052                                      0771
*       ELSE                                                       0772
*         ;                                                        0772
@RF00754 DS    0H                                                  0773
*     END;                                                         0773
@RC00754 DS    0H                                                  0774
*   IF RC=0                         /* EVERYTHING OK?                */
*     THEN                                                         0774
@RC00747 ICM   @11,3,RC                                            0774
         BZ    @RT00774                                            0774
*     ;                             /* YES - DO NOTHING              */
*   ELSE                                                           0776
*     DO;                           /* NO - ISSUE KILL MSG           */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  0777
*       DO;                                                        0777
*         DCL                                                      0778
*           1 CMZP0031 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0031 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0031 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0031 CHAR(1) INIT('6'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0031 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      0779
*           CMZR0031 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                0780
*           CMZR0031 RSTD;          /* REGISTER FOR                  */
*         CMZR0031=ADDR(CMZP0031);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0031,CMZP0031                                   0781
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0782
         BALR  @14,@15                                             0782
*         RESPECIFY                                                0783
*           CMZR0031 UNRSTD;                                       0783
*       END;                                                       0784
*     END;                                                         0785
*   GPR14=ADDR(MAINSUB);                                           0786
@RT00774 LA    GPR14,MAINSUB                                       0786
*   END PUADDR;                                                    0787
@EL00004 DS    0H                                                  0787
@EF00004 DS    0H                                                  0787
@ER00004 BR    @14                                                 0787
*                                                                  0788
*/********************************************************************/
*/*                                                                  */
*/*    BATCH PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID BATCH  SPECIFICATION       */
*/*   (FUNCTION 02) AND SETS THE BIT IN THE LU ENTRY                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  0788
*PUBATCH:                                                          0788
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0788
PUBATCH  DS    0H                                                  0789
*   IF PHRF2VAL(1)=1                /* WAS YES SPECIFIED?            */
*     THEN                                                         0789
         CLC   PHRF2VAL(4,PHR1REG),@CF00039                        0789
         BNE   @RF00789                                            0789
*     RLUBATCH='1'B;                /* YES - SET LU SIFT ENTRY BIT   */
         L     @11,MLCPTR6(,MLCAREG)                               0790
         OI    RLUBATCH(@11),B'01000000'                           0790
*   ELSE                                                           0791
*     DO;                           /* NO - VALIDITY CHECK         0791
*                                      SPECIFICATION                 */
         B     @RC00789                                            0791
@RF00789 DS    0H                                                  0792
*       IF PHRF2VAL(1)=2×PHRF2VAL(1)=0/* NO OR DEFAULT SPECIFIED?    */
*         THEN                                                     0792
         L     @11,PHRF2VAL(,PHR1REG)                              0792
         CH    @11,@CH00234                                        0792
         BE    @RT00792                                            0792
         LTR   @11,@11                                             0792
         BZ    @RT00792                                            0792
*         ;                         /* YES - DO NOTHING NOW          */
*       ELSE                                                       0794
*         DO;                       /* NO - OUTPUT TAKEDEF MAG       */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  0795
*           DO;                                                    0795
*             DCL                                                  0796
*               1 CMZP0032 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0032 FIXED(8) INIT(5),/* LEVEL PARAMETER    0796
*                                      (CLEV)                        */
*                2 CMZE0032 FIXED(8) INIT(4),/* ERROR PARAMETER    0796
*                                      (CERR)                        */
*                2 CMZA0032 CHAR(1) INIT('2'),/* ACTION PARAMETER  0796
*                                      (CACT)                        */
*                2 CMZS0032 FIXED(8) INIT(0);/* LENGTH OF STRING   0796
*                                      PARAM                         */
*             DCL                                                  0797
*               CMZR0032 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0798
*               CMZR0032 RSTD;      /* REGISTER FOR                  */
*             CMZR0032=ADDR(CMZP0032);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0032,CMZP0032                                   0799
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0800
         BALR  @14,@15                                             0800
*             RESPECIFY                                            0801
*               CMZR0032 UNRSTD;                                   0801
*           END;                                                   0802
*         END;                                                     0803
*       RLUBATCH='0'B;              /* ERROR OR DEFAULT SPECIFIED -
*                                      TAKE DEF                      */
@RT00792 L     @11,MLCPTR6(,MLCAREG)                               0804
         NI    RLUBATCH(@11),B'10111111'                           0804
*     END;                                                         0805
*   RC=0;                           /* FORCE ZERO RC                 */
@RC00789 SLR   @11,@11                                             0806
         STH   @11,RC                                              0806
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       0807
*   END PUBATCH;                                                   0808
@EL00005 DS    0H                                                  0808
@EF00005 DS    0H                                                  0808
@ER00005 BR    @14                                                 0808
*                                                                  0809
*/********************************************************************/
*/*                                                                  */
*/*   BNNSUP PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID BNNSUP SPECIFICATION       */
*/*   (FUNCTION 02) AND TURN ON THE PROPER BIT IN THE PU ENTRY       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0809
*PUBNNSUP:                                                         0809
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0809
PUBNNSUP DS    0H                                                  0810
*   IF PHRF2VAL(1)=1                /* 3270 SPECIFIED                */
*     THEN                                                         0810
         CLC   PHRF2VAL(4,PHR1REG),@CF00039                        0810
         BNE   @RF00810                                            0810
*     RCCBNNSP='1'B;                /* SET BNNSUP TO 3270            */
         L     @11,MLCPTR5(,MLCAREG)                               0811
         OI    RCCBNNSP(@11),B'00010000'                           0811
*   ELSE                                                           0812
*     DO;                           /* NO - CHECK FOR ERROR          */
         B     @RC00810                                            0812
@RF00810 DS    0H                                                  0813
*       IF PHRF2VAL(1)^='FFFFFFFF'X /* ERROR?                        */
*         THEN                                                     0813
         CLC   PHRF2VAL(4,PHR1REG),@CF03119                        0813
         BNE   @RT00813                                            0813
*         ;                         /* NO - DO NOTHING               */
*       ELSE                                                       0815
*         DO;                       /* YES - OUTPUT DEFAULT MSG      */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  0816
*           DO;                                                    0816
*             DCL                                                  0817
*               1 CMZP0033 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0033 FIXED(8) INIT(5),/* LEVEL PARAMETER    0817
*                                      (CLEV)                        */
*                2 CMZE0033 FIXED(8) INIT(4),/* ERROR PARAMETER    0817
*                                      (CERR)                        */
*                2 CMZA0033 CHAR(1) INIT('2'),/* ACTION PARAMETER  0817
*                                      (CACT)                        */
*                2 CMZS0033 FIXED(8) INIT(0);/* LENGTH OF STRING   0817
*                                      PARAM                         */
*             DCL                                                  0818
*               CMZR0033 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0819
*               CMZR0033 RSTD;      /* REGISTER FOR                  */
*             CMZR0033=ADDR(CMZP0033);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0033,CMZP0033                                   0820
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0821
         BALR  @14,@15                                             0821
*             RESPECIFY                                            0822
*               CMZR0033 UNRSTD;                                   0822
*           END;                                                   0823
*         END;                                                     0824
*       RCCBNNSP='0'B;              /* ERROR - TAKE DEF - 'STANDARD' */
@RT00813 L     @11,MLCPTR5(,MLCAREG)                               0825
         NI    RCCBNNSP(@11),B'11101111'                           0825
*     END;                                                         0826
*   RC=0;                           /* FORCE ZERO RC                 */
@RC00810 SLR   @11,@11                                             0827
         STH   @11,RC                                              0827
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       0828
*/*NOTE:  MORE VALIDITY CHECKING IN PUVLCHK                          */
*                                                                  0829
*   END PUBNNSUP;                                                  0829
@EL00006 DS    0H                                                  0829
@EF00006 DS    0H                                                  0829
@ER00006 BR    @14                                                 0829
*                                                                  0830
*/********************************************************************/
*/*                                                                  */
*/*     BUFLIM PARAMETER SUBROUTINE                                  */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID BUFLIM VALUE SPECIFIED     */
*/*   (FUNCTION 08) AND MOVE THE NUMBER INTO THE PU ENTRY            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0830
*PUBFLIM:                                                          0830
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0830
PUBFLIM  DS    0H                                                  0831
*   IF PHRF8DFT(1)='1'B             /* CHECK FOR DEFAULT             */
*     THEN                                                         0831
         TM    PHRF8DFT(PHR1REG),B'10000000'                       0831
         BNO   @RF00831                                            0831
*     RCPBFLIM=2;                   /* YES - SET DEFAULT = 2         */
         L     @11,MLCPTR6(,MLCAREG)                               0832
         MVI   RCPBFLIM(@11),X'02'                                 0832
*   ELSE                                                           0833
*     IF PHRF8NUM(1)=0              /* CHECK IF NOTHING SPECIFIED    */
*       THEN                                                       0833
         B     @RC00831                                            0833
@RF00831 CLI   PHRF8NUM(PHR1REG),0                                 0833
         BNE   @RF00833                                            0833
*       DO;                         /* YES- ISSUE 'TAKEDEF' MSG      */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  0835
*         DO;                                                      0835
*           DCL                                                    0836
*             1 CMZP0034 STATIC LOCAL,/* PARAMETER LIST PASSED TO  0836
*                                      ERROR FORMAT ROUTINE          */
*              2 CMZL0034 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV) */
*              2 CMZE0034 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR) */
*              2 CMZA0034 CHAR(1) INIT('2'),/* ACTION PARAMETER    0836
*                                      (CACT)                        */
*              2 CMZS0034 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM */
*           DCL                                                    0837
*             CMZR0034 REGISTER(1); /* ESTABLISH PARAMeter           */
*           RESPECIFY                                              0838
*             CMZR0034 RSTD;        /* REGISTER FOR                  */
*           CMZR0034=ADDR(CMZP0034);/* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0034,CMZP0034                                   0839
*           CALL ISTSDCC2;          /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0840
         BALR  @14,@15                                             0840
*           RESPECIFY                                              0841
*             CMZR0034 UNRSTD;                                     0841
*         END;                                                     0842
*         RCPBFLIM=2;               /* SET IN DEFAULT = 2            */
         L     @11,MLCPTR6(,MLCAREG)                               0843
         MVI   RCPBFLIM(@11),X'02'                                 0843
*       END;                                                       0844
*     ELSE                                                         0845
*       DO;                         /* NO - VALUE WAS SPECIFIED      */
         B     @RC00833                                            0845
@RF00833 DS    0H                                                  0846
*         RCPBFLIM=PHRF8NUM(1);     /* MOVE SPECIFIED VALUE INTO   0846
*                                      ENTRY                         */
         L     @11,MLCPTR6(,MLCAREG)                               0846
         MVC   RCPBFLIM(1,@11),PHRF8NUM(PHR1REG)                   0846
*         IF PHRF8NSP>1             /* AND CHECK FOR MORE THAN 1   0847
*                                      VALUE SPECIFIED               */
*           THEN                                                   0847
         L     @11,PHRF8NSP(,PHR1REG)                              0847
         CH    @11,@CH00039                                        0847
         BNH   @RF00847                                            0847
*           DO;                     /* YES - OUTPUT IGNORE MSG       */
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  0849
*             DO;                                                  0849
*               DCL                                                0850
*                 1 CMZP0035 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                  2 CMZL0035 FIXED(8) INIT(5),/* LEVEL PARAMETER  0850
*                                      (CLEV)                        */
*                  2 CMZE0035 FIXED(8) INIT(7),/* ERROR PARAMETER  0850
*                                      (CERR)                        */
*                  2 CMZA0035 CHAR(1) INIT('1'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                  2 CMZS0035 FIXED(8) INIT(0);/* LENGTH OF STRING 0850
*                                      PARAM                         */
*               DCL                                                0851
*                 CMZR0035 REGISTER(1);/* ESTABLISH PARAMeter        */
*               RESPECIFY                                          0852
*                 CMZR0035 RSTD;    /* REGISTER FOR                  */
*               CMZR0035=ADDR(CMZP0035);/* ADDRESS OF PARAMETER LIST */
         LA    CMZR0035,CMZP0035                                   0853
*               CALL ISTSDCC2;      /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0854
         BALR  @14,@15                                             0854
*               RESPECIFY                                          0855
*                 CMZR0035 UNRSTD;                                 0855
*             END;                                                 0856
*           END;                                                   0857
*         ELSE                                                     0858
*           ;                       /* NO - DO NOTHING               */
@RF00847 DS    0H                                                  0859
*       END;                                                       0859
*   RC=0;                           /* FORCE ZERO RC                 */
@RC00833 DS    0H                                                  0860
@RC00831 SLR   @11,@11                                             0860
         STH   @11,RC                                              0860
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       0861
*   END PUBFLIM;                                                   0862
@EL00007 DS    0H                                                  0862
@EF00007 DS    0H                                                  0862
@ER00007 BR    @14                                                 0862
*                                                                  0863
*/********************************************************************/
*/*                                                                  */
*/*     CUADDR PARAMETER SUBROUTINE                                  */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID KEYWORD VALUE              */
*/*   (FUNCTION 04) AND MOVE THE CONVERTED VALUE INTO THE DAN ENTRY  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0863
*PUCUADDR:                                                         0863
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0863
PUCUADDR DS    0H                                                  0864
*   IF PHRF34SL(1)=3                /* JUST 3 CHARS CAN/MUST BE    0864
*                                      SPECIFIED                     */
*     THEN                                                         0864
         LA    @11,3                                               0864
         CH    @11,PHRF34SL(,PHR1REG)                              0864
         BNE   @RF00864                                            0864
*     DO;                           /* VALID CUA LENGTH - CONTINUE   */
*       RDADFCUA=PHRF34SP(1,6:8);   /* SET CUA IN DAN                */
         MVC   RDADFCUA(3,ENTRYPTR),PHRF34SP+5(PHR1REG)            0866
*       GPR0=3;                     /* SET LENGTH FOR C4             */
         LR    GPR0,@11                                            0867
*       GPR1=ADDR(PHRF34SP(1,6:8)); /* SET ADDR OF FIELD TO CONVERT  */
         LA    GPR1,PHRF34SP+5(,PHR1REG)                           0868
*       CALL ISTSDCC4;              /* CONVERT CUA TO HEX            */
         L     @15,@CV02912                                        0869
         BALR  @14,@15                                             0869
*       RC=GPR15;                   /* SAVE C4S RETURN CODE          */
         STH   GPR15,RC                                            0870
*       IF RC=0                     /* NOW CHECK C4S RC              */
*         THEN                                                     0871
         LH    @11,RC                                              0871
         LTR   @11,@11                                             0871
         BNZ   @RF00871                                            0871
*         DO;                       /* RC OK                         */
*           IF PHRF34NS>1           /* MORE THAN ONE SPECIFIED?      */
*             THEN                                                 0873
         L     @11,PHRF34NS(,PHR1REG)                              0873
         CH    @11,@CH00039                                        0873
         BNH   @RF00873                                            0873
*             DO;                   /* YES - OUTPUT IGNORE MSG       */
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  0875
*               DO;                                                0875
*                 DCL                                              0876
*                   1 CMZP0036 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0036 FIXED(8) INIT(5),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0036 FIXED(8) INIT(7),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0036 CHAR(1) INIT('1'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0036 FIXED(8) INIT(0);/* LENGTH OF STRING
*                                      PARAM                         */
*                 DCL                                              0877
*                   CMZR0036 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        0878
*                   CMZR0036 RSTD;  /* REGISTER FOR                  */
*                 CMZR0036=ADDR(CMZP0036);/* ADDRESS OF PARAMETER  0879
*                                      LIST                          */
         LA    CMZR0036,CMZP0036                                   0879
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0880
         BALR  @14,@15                                             0880
*                 RESPECIFY                                        0881
*                   CMZR0036 UNRSTD;                               0881
*               END;                                               0882
*             END;                                                 0883
*           ELSE                                                   0884
*             ;                     /* ONLY 1 VALUES SPECIFIED - NO
*                                      ACTION                        */
@RF00873 DS    0H                                                  0885
*           RC=0;                   /* FORCE RC TO ZERO              */
         SLR   @11,@11                                             0885
         STH   @11,RC                                              0885
*         END;                      /* END THEN FOR RC OK TEST       */
*       ELSE                                                       0887
*         DO;                       /* BAD RC FROM C4                */
         B     @RC00871                                            0887
@RF00871 DS    0H                                                  0888
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  0888
*           DO;                                                    0888
*             DCL                                                  0889
*               1 CMZP0037 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0037 FIXED(8) INIT(5),/* LEVEL PARAMETER    0889
*                                      (CLEV)                        */
*                2 CMZE0037 FIXED(8) INIT(4),/* ERROR PARAMETER    0889
*                                      (CERR)                        */
*                2 CMZA0037 CHAR(1) INIT('6'),/* ACTION PARAMETER  0889
*                                      (CACT)                        */
*                2 CMZS0037 FIXED(8) INIT(0);/* LENGTH OF STRING   0889
*                                      PARAM                         */
*             DCL                                                  0890
*               CMZR0037 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0891
*               CMZR0037 RSTD;      /* REGISTER FOR                  */
*             CMZR0037=ADDR(CMZP0037);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0037,CMZP0037                                   0892
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0893
         BALR  @14,@15                                             0893
*             RESPECIFY                                            0894
*               CMZR0037 UNRSTD;                                   0894
*           END;                                                   0895
*           RC=4;                   /* SET KILL RC                   */
         MVC   RC(2),@CH00052                                      0896
*         END;                                                     0897
*     END;                          /* END FOR THEN ON LENGTH = 3  0898
*                                      TEST                          */
*   ELSE                                                           0899
*     DO;                           /* LENGTH NOT EQUAL TO THREE     */
         B     @RC00864                                            0899
@RF00864 DS    0H                                                  0900
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  0900
*       DO;                                                        0900
*         DCL                                                      0901
*           1 CMZP0038 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0038 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0038 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0038 CHAR(1) INIT('6'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0038 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      0902
*           CMZR0038 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                0903
*           CMZR0038 RSTD;          /* REGISTER FOR                  */
*         CMZR0038=ADDR(CMZP0038);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0038,CMZP0038                                   0904
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0905
         BALR  @14,@15                                             0905
*         RESPECIFY                                                0906
*           CMZR0038 UNRSTD;                                       0906
*       END;                                                       0907
*       RC=4;                       /* SET KILL RC                   */
         MVC   RC(2),@CH00052                                      0908
*     END;                                                         0909
*   CUAFTPT='1'B;                   /* SET INTERNAL FOOTPRINT FOR  0910
*                                      CUADDR                        */
@RC00864 OI    CUAFTPT,B'00100000'                                 0910
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       0911
*   END PUCUADDR;                                                  0912
@EL00008 DS    0H                                                  0912
@EF00008 DS    0H                                                  0912
@ER00008 BR    @14                                                 0912
*                                                                  0913
*/********************************************************************/
*/*                                                                  */
*/*     CUTYPE PARAMETER SUBROUTINE                                  */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK ENTRY FROM ISTSDCCL(CLUSTER)           */
*/*   MACRO HANDLER AND IF NOT ISSUE AN 'IGNORE' MSG.                */
*/*   (FUNCTION CODE = 07)                                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0913
*PUCUTYPE:                                                         0913
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0913
PUCUTYPE DS    0H                                                  0914
*   IF RNCGCLPU='1'B                /* CHECK FOR CLUSTER MACRO     0914
*                                      HANDLER FOOTPRINT             */
*     THEN                                                         0914
         TM    RNCGCLPU(RNCAREG),B'00001000'                       0914
         BO    @RT00914                                            0914
*     ;                             /* YES DO NOTHING                */
*   ELSE                                                           0916
*     DO;                           /* NO - OUTPUT 'IGNORE' MSG      */
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  0917
*       DO;                                                        0917
*         DCL                                                      0918
*           1 CMZP0039 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0039 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0039 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0039 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0039 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      0919
*           CMZR0039 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                0920
*           CMZR0039 RSTD;          /* REGISTER FOR                  */
*         CMZR0039=ADDR(CMZP0039);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0039,CMZP0039                                   0921
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0922
         BALR  @14,@15                                             0922
*         RESPECIFY                                                0923
*           CMZR0039 UNRSTD;                                       0923
*       END;                                                       0924
*     END;                                                         0925
*   RC=0;                           /* FORCE ZERO RC                 */
@RT00914 SLR   @11,@11                                             0926
         STH   @11,RC                                              0926
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       0927
*   END PUCUTYPE;                                                  0928
@EL00009 DS    0H                                                  0928
@EF00009 DS    0H                                                  0928
@ER00009 BR    @14                                                 0928
*                                                                  0929
*/***********************************************************@D32CKMX*/
*/*                                                                  */
*/*   DISCNT  PARAMETER SUBROUTINE    DCR 3878.4                     */
*/*                                                                  */
*/* THIS ROUTINE WILL SET THE DISCNT  VALUE (FUNCTION 02)            */
*/* IN THE PU ENTRY                                                  */
*/*                                                                  */
*/***********************************************************@D32CKMX*/
*                                                                  0929
*PUDISCNT:                                                         0929
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @D32CKMX*/
PUDISCNT DS    0H                                                  0930
*   IF PHRF2VAL(1)=0                /* CHECK FOR DISCNT = NO         */
*     THEN                                                         0930
         ICM   @11,15,PHRF2VAL(PHR1REG)                            0930
         BNZ   @RF00930                                            0930
*     DO;                           /*                       @D32CKMX*/
*       RCCBRKCN='0'B;              /* SET DISCNT OFF BIT IN PU      */
         L     @11,MLCPTR5(,MLCAREG)                               0932
         NI    RCCBRKCN(@11),B'11111101'                           0932
*     END;                          /*                       @D32CKMX*/
*   ELSE                                                           0934
*     DO;                           /*                       @D32CKMX*/
         B     @RC00930                                            0934
@RF00930 DS    0H                                                  0935
*       IF PHRF2VAL(1)=1 THEN                                      0935
         CLC   PHRF2VAL(4,PHR1REG),@CF00039                        0935
         BE    @RT00935                                            0935
*         ;                         /*                       @D32CKMX*/
*       ELSE                                                       0937
*         DO;                       /*                       @D32CKMX*/
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  0938
*           DO;                                                    0938
*             DCL                                                  0939
*               1 CMZP0040 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0040 FIXED(8) INIT(5),/* LEVEL PARAMETER    0939
*                                      (CLEV)                        */
*                2 CMZE0040 FIXED(8) INIT(4),/* ERROR PARAMETER    0939
*                                      (CERR)                        */
*                2 CMZA0040 CHAR(1) INIT('2'),/* ACTION PARAMETER  0939
*                                      (CACT)                        */
*                2 CMZS0040 FIXED(8) INIT(0);/* LENGTH OF STRING   0939
*                                      PARAM                         */
*             DCL                                                  0940
*               CMZR0040 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            0941
*               CMZR0040 RSTD;      /* REGISTER FOR                  */
*             CMZR0040=ADDR(CMZP0040);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0040,CMZP0040                                   0942
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0943
         BALR  @14,@15                                             0943
*             RESPECIFY                                            0944
*               CMZR0040 UNRSTD;                                   0944
*           END;                    /*                       @D32CKMX*/
*         END;                      /*                       @D32CKMX*/
*       RCCBRKCN='1'B;                                             0947
@RT00935 L     @11,MLCPTR5(,MLCAREG)                               0947
         OI    RCCBRKCN(@11),B'00000010'                           0947
*     END;                          /*                       @D32CKMX*/
*   RC=0;                           /*                       @D32CKMX*/
@RC00930 SLR   @11,@11                                             0949
         STH   @11,RC                                              0949
*   GPR14=ADDR(MAINSUB);            /* SET RTN ADDR IN REG 14 DCR  0950
*                                      3878.4                @D32CKMX*/
         LA    GPR14,MAINSUB                                       0950
*   END PUDISCNT;                   /*                       @D32CKMX*/
@EL00010 DS    0H                                                  0951
@EF00010 DS    0H                                                  0951
@ER00010 BR    @14                                                 0951
*                                                                  0952
*/********************************************************************/
*/*                                                                  */
*/*   IDBLK PARAMETER SUBROUTINE                                     */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID IDBLK KEYWORD SPECIFIED    */
*/*   (FUNCTION 24) AND SETS THE PROPER FIELDS IN THE PU ENTRY       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0952
*PUIDBLK:                                                          0952
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0952
PUIDBLK  DS    0H                                                  0953
*   IF PHRF34VF(1)=PHRVFAOK&PHRF34SL(1)=3/* VALIDITY CHECK IDBLK     */
*     THEN                                                         0953
         CLI   PHRF34VF(PHR1REG),X'00'                             0953
         BNE   @RF00953                                            0953
         LA    @11,3                                               0953
         CH    @11,PHRF34SL(,PHR1REG)                              0953
         BNE   @RF00953                                            0953
*     DO;                           /* YES - CONTINUE PROCESSING     */
*       GPR0=3;                     /* FORCE LENGTH = 3 FOR C4       */
         LR    GPR0,@11                                            0955
*       GPR1=ADDR(PHRF34SP(1,6:8)); /* AREA TO BE CONVERTED          */
         LA    GPR1,PHRF34SP+5(,PHR1REG)                           0956
*       CALL ISTSDCC4;              /* CONVERT IDBLK TO HEX          */
         L     @15,@CV02912                                        0957
         BALR  @14,@15                                             0957
*       RC=GPR15;                   /* SAVE RC FROM C4               */
         STH   GPR15,RC                                            0958
*       IF RC=0                     /* C4 RETURN CODE OK?            */
*         THEN                                                     0959
         LH    @11,RC                                              0959
         LTR   @11,@11                                             0959
         BNZ   @RF00959                                            0959
*         DO;                       /* YES - CONTINUE                */
*           RFY                                                    0961
*             WORKREG RSTD;                                        0961
*           WORKREG=PHRF34SP(1,6:7);/* GET VALUE FOR IDBLK FROM    0962
*                                      OUTPUT AREA                   */
         SLR   WORKREG,WORKREG                                     0962
         ICM   WORKREG,3,PHRF34SP+5(PHR1REG)                       0962
*           STAIDWKA=''B;           /* CLEAR WORK AREA FOR STATION ID*/
         XC    STAIDWKA(8),STAIDWKA                                0963
*           GEN CODE;                                              0964
         SLL   WORKREG,4   SET ZEROS IN LAST 4 BITS OF REG
*           IDBLKWKA=WORKREG;       /* GET HALF WORD OF IDBLK VALUE  */
         STH   WORKREG,IDBLKWKA                                    0965
*           RCCSTAID=RCCSTAID×STAIDWKA;/* SET FIELD IN STATION ID    */
         L     @11,MLCPTR5(,MLCAREG)                               0966
         OC    RCCSTAID(8,@11),STAIDWKA                            0966
*           RFY                                                    0967
*             WORKREG UNRSTD;                                      0967
*           RCCIDPUT=RCCTYPE;       /* MOVE PU TYPE INTO MIDDLE OF 0968
*                                      STATION ID IN PU ENTRY        */
         MVC   RCCIDPUT(1,@11),RCCTYPE(@11)                        0968
*           IF PHRF34NS>1           /* CHECK FOR MORE THAN 1 NUM   0969
*                                      SPECIFIED                     */
*             THEN                                                 0969
         L     @11,PHRF34NS(,PHR1REG)                              0969
         CH    @11,@CH00039                                        0969
         BNH   @RF00969                                            0969
*             DO;                   /* YES - OUTPUT IGNORE MSG       */
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  0971
*               DO;                                                0971
*                 DCL                                              0972
*                   1 CMZP0041 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0041 FIXED(8) INIT(5),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0041 FIXED(8) INIT(7),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0041 CHAR(1) INIT('1'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0041 FIXED(8) INIT(0);/* LENGTH OF STRING
*                                      PARAM                         */
*                 DCL                                              0973
*                   CMZR0041 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        0974
*                   CMZR0041 RSTD;  /* REGISTER FOR                  */
*                 CMZR0041=ADDR(CMZP0041);/* ADDRESS OF PARAMETER  0975
*                                      LIST                          */
         LA    CMZR0041,CMZP0041                                   0975
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0976
         BALR  @14,@15                                             0976
*                 RESPECIFY                                        0977
*                   CMZR0041 UNRSTD;                               0977
*               END;                                               0978
*             END;                                                 0979
*           ELSE                                                   0980
*             ;                     /* NO. DO NOTHING                */
@RF00969 DS    0H                                                  0981
*         END;                                                     0981
*       ELSE                                                       0982
*         ;                         /* BAD RC FROM C4 FORCE KILLBLD  */
@RF00959 DS    0H                                                  0983
*     END;                                                         0983
*   ELSE                                                           0984
*     RC=4;                                                        0984
         B     @RC00953                                            0984
@RF00953 MVC   RC(2),@CH00052                                      0984
*   IF RC=0                         /* EVERYTHING OK?                */
*     THEN                                                         0985
@RC00953 ICM   @11,3,RC                                            0985
         BZ    @RT00985                                            0985
*     ;                             /* YES - DO NOTHING              */
*   ELSE                                                           0987
*     DO;                           /* NO - OUTPUT KILL MSG          */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  0988
*       DO;                                                        0988
*         DCL                                                      0989
*           1 CMZP0042 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0042 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0042 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0042 CHAR(1) INIT('6'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0042 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      0990
*           CMZR0042 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                0991
*           CMZR0042 RSTD;          /* REGISTER FOR                  */
*         CMZR0042=ADDR(CMZP0042);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0042,CMZP0042                                   0992
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        0993
         BALR  @14,@15                                             0993
*         RESPECIFY                                                0994
*           CMZR0042 UNRSTD;                                       0994
*       END;                                                       0995
*     END;                                                         0996
*   BLKFTPT='1'B;                   /* SET INTERNAL IDBLK FOOTPRINT  */
@RT00985 OI    BLKFTPT,B'00010000'                                 0997
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       0998
*   END PUIDBLK;                                                   0999
@EL00011 DS    0H                                                  0999
@EF00011 DS    0H                                                  0999
@ER00011 BR    @14                                                 0999
*                                                                  1000
*/********************************************************************/
*/*                                                                  */
*/*   IDNUM PARAMETER SUBROUTINE                                     */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID IDNUM KEYWORD VALUE        */
*/*   (FUNCTION 24) AND SETS IT INTO THE STATION ID IN THE PU ENTRY  */
*/*                                                                  */
*/********************************************************************/
*                                                                  1000
*PUIDNUM:                                                          1000
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1000
PUIDNUM  DS    0H                                                  1001
*   IF PHRF34VF(1)=PHRVFAOK&PHRF34SL(1)=5/* VALIDITY CHECK IDNUM     */
*     THEN                                                         1001
         CLI   PHRF34VF(PHR1REG),X'00'                             1001
         BNE   @RF01001                                            1001
         LA    @11,5                                               1001
         CH    @11,PHRF34SL(,PHR1REG)                              1001
         BNE   @RF01001                                            1001
*     DO;                           /* CONTINUE - IDNUM WAS SPECIFIED
*                                      OK                            */
*       GPR0=5;                     /* SET LENGTH OF 5 FOR C4        */
         LR    GPR0,@11                                            1003
*       GPR1=ADDR(PHRF34SP(1,4:8)); /* GET ADDR OF FIELD TO BE     1004
*                                      CONVERTED                     */
         LA    GPR1,PHRF34SP+3(,PHR1REG)                           1004
*       CALL ISTSDCC4;              /* CONVERT IDNUM TO HEX          */
         L     @15,@CV02912                                        1005
         BALR  @14,@15                                             1005
*       RC=GPR15;                   /* SAVE RC FROM C4               */
         STH   GPR15,RC                                            1006
*       IF RC=0                     /* C4 PROCESS IDNUM OK           */
*         THEN                                                     1007
         LH    @11,RC                                              1007
         LTR   @11,@11                                             1007
         BNZ   @RF01007                                            1007
*         DO;                       /* YES - CONTINUE                */
*           RFY                                                    1009
*             WORKREG RSTD;                                        1009
*           WORKREG=PHRF34SP(1,4:6);/* GET IDNUM VALUE IN REG        */
         SLR   WORKREG,WORKREG                                     1010
         ICM   WORKREG,7,PHRF34SP+3(PHR1REG)                       1010
*           STAIDWKA=''B;           /* CLEAR STATION ID WORK AREA    */
         XC    STAIDWKA(8),STAIDWKA                                1011
*           GEN CODE;                                              1012
            SLL   WORKREG,12   SET 1ST 12 BITS OF
            SRL   WORKREG,12   WORKREG TO ZEROS
*           IDNUMWKA=WORKREG;       /* SET ALIGNED VALUE IN WORK AREA*/
         ST    WORKREG,IDNUMWKA                                    1013
*           RCCSTAID=RCCSTAID×STAIDWKA;/* OR VALUE INTO 2ND WORD OF
*                                      STATION ID THUS SETING THE  1014
*                                      IDNUM FIELD OF STATION ID     */
         L     @11,MLCPTR5(,MLCAREG)                               1014
         OC    RCCSTAID(8,@11),STAIDWKA                            1014
*           RFY                                                    1015
*             WORKREG UNRSTD;                                      1015
*           IF PHRF34NS>1           /* MORE THAN 1 VALUE SPECIFIED?  */
*             THEN                                                 1016
         L     @11,PHRF34NS(,PHR1REG)                              1016
         CH    @11,@CH00039                                        1016
         BNH   @RF01016                                            1016
*             DO;                   /* YES - OUTPUT IGNORE MSG       */
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  1018
*               DO;                                                1018
*                 DCL                                              1019
*                   1 CMZP0043 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0043 FIXED(8) INIT(5),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0043 FIXED(8) INIT(7),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0043 CHAR(1) INIT('1'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0043 FIXED(8) INIT(0);/* LENGTH OF STRING
*                                      PARAM                         */
*                 DCL                                              1020
*                   CMZR0043 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        1021
*                   CMZR0043 RSTD;  /* REGISTER FOR                  */
*                 CMZR0043=ADDR(CMZP0043);/* ADDRESS OF PARAMETER  1022
*                                      LIST                          */
         LA    CMZR0043,CMZP0043                                   1022
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1023
         BALR  @14,@15                                             1023
*                 RESPECIFY                                        1024
*                   CMZR0043 UNRSTD;                               1024
*               END;                                               1025
*             END;                                                 1026
*           ELSE                                                   1027
*             ;                     /* NO - DO NOTHING               */
@RF01016 DS    0H                                                  1028
*         END;                                                     1028
*       ELSE                                                       1029
*         ;                         /* NO - C4 FOUND AN ERROR - DO 1029
*                                      NOTHING                       */
@RF01007 DS    0H                                                  1030
*     END;                                                         1030
*   ELSE                                                           1031
*     RC=4;                         /* ERROR - FORCE KILL MSG        */
         B     @RC01001                                            1031
@RF01001 MVC   RC(2),@CH00052                                      1031
*   IF RC=0                         /* EVERTHING WENT OK?            */
*     THEN                                                         1032
@RC01001 ICM   @11,3,RC                                            1032
         BZ    @RT01032                                            1032
*     ;                             /* YES - DO NOTHING              */
*   ELSE                                                           1034
*     DO;                           /* NO - OUTPUT KILL MSG          */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  1035
*       DO;                                                        1035
*         DCL                                                      1036
*           1 CMZP0044 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0044 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0044 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0044 CHAR(1) INIT('6'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0044 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1037
*           CMZR0044 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1038
*           CMZR0044 RSTD;          /* REGISTER FOR                  */
*         CMZR0044=ADDR(CMZP0044);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0044,CMZP0044                                   1039
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1040
         BALR  @14,@15                                             1040
*         RESPECIFY                                                1041
*           CMZR0044 UNRSTD;                                       1041
*       END;                                                       1042
*     END;                                                         1043
*   NUMFTPT='1'B;                   /* SET IDNUM INTERNAL FOOTPRINT  */
@RT01032 OI    NUMFTPT,B'00001000'                                 1044
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       1045
*   END PUIDNUM;                                                   1046
@EL00012 DS    0H                                                  1046
@EF00012 DS    0H                                                  1046
@ER00012 BR    @14                                                 1046
*                                                                  1047
*/********************************************************************/
*/*                                                                  */
*/*   IRETRY PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID IRETRY SPECIFICATION       */
*/*   (FUNCTION 02) AND SETS THE BIT IN THE PU ENTRY                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  1047
*PUIRETRY:                                                         1047
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1047
PUIRETRY DS    0H                                                  1048
*   IF PHRF2VAL(1)=1                /* WAS YES SPECIFIED?            */
*     THEN                                                         1048
         CLC   PHRF2VAL(4,PHR1REG),@CF00039                        1048
         BNE   @RF01048                                            1048
*     RCCIRETR='1'B;                /* YES - SET PU ENTRY BIT        */
         L     @11,MLCPTR5(,MLCAREG)                               1049
         OI    RCCIRETR(@11),B'00100000'                           1049
*   ELSE                                                           1050
*     DO;                           /* NO - VALIDITY CHECK         1050
*                                      SPECIFICATION                 */
         B     @RC01048                                            1050
@RF01048 DS    0H                                                  1051
*       IF PHRF2VAL(1)=2×PHRF2VAL(1)=0/* NO OR DEFAULT SPECIFIED?    */
*         THEN                                                     1051
         L     @11,PHRF2VAL(,PHR1REG)                              1051
         CH    @11,@CH00234                                        1051
         BE    @RT01051                                            1051
         LTR   @11,@11                                             1051
         BZ    @RT01051                                            1051
*         ;                         /* YES - DO NOTHING NOW          */
*       ELSE                                                       1053
*         DO;                       /* NO - OUTPUT TAKEDEF MAG       */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  1054
*           DO;                                                    1054
*             DCL                                                  1055
*               1 CMZP0045 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0045 FIXED(8) INIT(5),/* LEVEL PARAMETER    1055
*                                      (CLEV)                        */
*                2 CMZE0045 FIXED(8) INIT(4),/* ERROR PARAMETER    1055
*                                      (CERR)                        */
*                2 CMZA0045 CHAR(1) INIT('2'),/* ACTION PARAMETER  1055
*                                      (CACT)                        */
*                2 CMZS0045 FIXED(8) INIT(0);/* LENGTH OF STRING   1055
*                                      PARAM                         */
*             DCL                                                  1056
*               CMZR0045 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            1057
*               CMZR0045 RSTD;      /* REGISTER FOR                  */
*             CMZR0045=ADDR(CMZP0045);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0045,CMZP0045                                   1058
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1059
         BALR  @14,@15                                             1059
*             RESPECIFY                                            1060
*               CMZR0045 UNRSTD;                                   1060
*           END;                                                   1061
*         END;                                                     1062
*       RCCIRETR='0'B;              /* ERROR OR DEFAULT SPECIFIED -
*                                      TAKE DEF                      */
@RT01051 L     @11,MLCPTR5(,MLCAREG)                               1063
         NI    RCCIRETR(@11),B'11011111'                           1063
*     END;                                                         1064
*   RC=0;                           /* FORCE ZERO RC                 */
@RC01048 SLR   @11,@11                                             1065
         STH   @11,RC                                              1065
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       1066
*   END PUIRETRY;                                                  1067
@EL00013 DS    0H                                                  1067
@EF00013 DS    0H                                                  1067
@ER00013 BR    @14                                                 1067
*                                                                  1068
*/********************************************************************/
*/*                                                                  */
*/*   ISTATUS PARAMETER SUBROUTINE                                   */
*/*                                                                  */
*/* THIS ROUTINE WILL SET THE ISTATUS VALUE (FUNCTION 02)            */
*/* IN THE PU ENTRY                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  1068
*PUISTATU:                                                         1068
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1068
PUISTATU DS    0H                                                  1069
*   IF PHRF2VAL(1)=0                /* CHECK FOR ISTATUS = INACTIVE  */
*     THEN                                                         1069
         ICM   @11,15,PHRF2VAL(PHR1REG)                            1069
         BNZ   @RF01069                                            1069
*     DO;                           /* YES - INACTIVE                */
*       RCCRBISA='0'B;              /* SET ISTATUS OFF BIT IN PU     */
         L     @11,MLCPTR5(,MLCAREG)                               1071
         NI    RCCRBISA(@11),B'01111111'                           1071
*       RLURBISA='0'B;              /* SET ISTATUS OFF BIT IN LU     */
         L     @11,MLCPTR6(,MLCAREG)                               1072
         NI    RLURBISA(@11),B'01111111'                           1072
*     END;                                                         1073
*   ELSE                                                           1074
*     DO;                           /* NO - ACTIVE                   */
         B     @RC01069                                            1074
@RF01069 DS    0H                                                  1075
*       IF PHRF2VAL(1)=1 THEN                                      1075
         CLC   PHRF2VAL(4,PHR1REG),@CF00039                        1075
         BE    @RT01075                                            1075
*         ;                                                        1076
*       ELSE                                                       1077
*         DO;                                                      1077
*                                                                  1077
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  1078
*           DO;                                                    1078
*             DCL                                                  1079
*               1 CMZP0046 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0046 FIXED(8) INIT(5),/* LEVEL PARAMETER    1079
*                                      (CLEV)                        */
*                2 CMZE0046 FIXED(8) INIT(4),/* ERROR PARAMETER    1079
*                                      (CERR)                        */
*                2 CMZA0046 CHAR(1) INIT('2'),/* ACTION PARAMETER  1079
*                                      (CACT)                        */
*                2 CMZS0046 FIXED(8) INIT(0);/* LENGTH OF STRING   1079
*                                      PARAM                         */
*             DCL                                                  1080
*               CMZR0046 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            1081
*               CMZR0046 RSTD;      /* REGISTER FOR                  */
*             CMZR0046=ADDR(CMZP0046);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0046,CMZP0046                                   1082
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1083
         BALR  @14,@15                                             1083
*             RESPECIFY                                            1084
*               CMZR0046 UNRSTD;                                   1084
*           END;                                                   1085
*         END;                                                     1086
*       RCCRBISA='1'B;                                             1087
@RT01075 L     @11,MLCPTR5(,MLCAREG)                               1087
         OI    RCCRBISA(@11),B'10000000'                           1087
*       RLURBISA='1'B;                                             1088
         L     @11,MLCPTR6(,MLCAREG)                               1088
         OI    RLURBISA(@11),B'10000000'                           1088
*     END;                                                         1089
*   RC=0;                                                          1090
@RC01069 SLR   @11,@11                                             1090
         STH   @11,RC                                              1090
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR IN REG 14     */
         LA    GPR14,MAINSUB                                       1091
*   END PUISTATU;                                                  1092
@EL00014 DS    0H                                                  1092
@EF00014 DS    0H                                                  1092
@ER00014 BR    @14                                                 1092
*                                                                  1093
*/********************************************************************/
*/*                                                                  */
*/*          LOGAPPL PARAMETER SUBROUTINE                            */
*/*                                                                  */
*/* THIS ROUTINE WILL PLACE THE LOGAPPL NAME IN THE RDT FIELD IF IT  */
*/* IS GOOD. IF BAD THE RDT FIELD IS BLANKED AND AN ERROR MSG GIVEN. */
*/*   (FUNCTION 33)                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  1093
*PULOGAPL:                                                         1093
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1093
PULOGAPL DS    0H                                                  1094
*   IF PHRF34VF(1)=PHRVFAOK         /* IF PARM VALID                 */
*     THEN                                                         1094
         CLI   PHRF34VF(PHR1REG),X'00'                             1094
         BNE   @RF01094                                            1094
*     MLCPTR6->RCPLGNAP=PHRF34SP(1);/* SET IN LU                     */
         L     @11,MLCPTR6(,MLCAREG)                               1095
         MVC   RCPLGNAP(8,@11),PHRF34SP(PHR1REG)                   1095
*   ELSE                                                           1096
*     DO;                                                          1096
*                                                                  1096
         B     @RC01094                                            1096
@RF01094 DS    0H                                                  1097
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  1097
*       DO;                                                        1097
*         DCL                                                      1098
*           1 CMZP0047 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0047 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0047 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0047 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0047 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1099
*           CMZR0047 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1100
*           CMZR0047 RSTD;          /* REGISTER FOR                  */
*         CMZR0047=ADDR(CMZP0047);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0047,CMZP0047                                   1101
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1102
         BALR  @14,@15                                             1102
*         RESPECIFY                                                1103
*           CMZR0047 UNRSTD;                                       1103
*       END;                                                       1104
*       MLCPTR6->RCPLGNAP=BLANK8;   /* BLANKS IN LU                  */
         L     @11,MLCPTR6(,MLCAREG)                               1105
         MVC   RCPLGNAP(8,@11),@CC02923                            1105
*     END;                                                         1106
*   RC=0;                                                          1107
@RC01094 SLR   @11,@11                                             1107
         STH   @11,RC                                              1107
*   GPR14=ADDR(MAINSUB);                                           1108
         LA    GPR14,MAINSUB                                       1108
*   END PULOGAPL;                                                  1109
@EL00015 DS    0H                                                  1109
@EF00015 DS    0H                                                  1109
@ER00015 BR    @14                                                 1109
*                                                                  1110
*/********************************************************************/
*/*                                                                  */
*/*         LOGTAB PARAMETER SUBROUTINE                              */
*/*                                                                  */
*/* THIS ROUTINE WILL PLACE THE LOGTAB NAME IN THE RDT FIELD IF IT   */
*/* IS GOOD. IF BAD THE RDT FIELD IS BLANKED AND AN ERROR MSG GIVEN. */
*/*   (FUNCTION 33)                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  1110
*PULOGTAB:                                                         1110
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1110
PULOGTAB DS    0H                                                  1111
*   IF PHRF34VF(1)=PHRVFAOK         /* IF PARM VALID                 */
*     THEN                                                         1111
         CLI   PHRF34VF(PHR1REG),X'00'                             1111
         BNE   @RF01111                                            1111
*     MLCPTR6->RCPLGNCT=PHRF34SP(1);/* SET IN LU                     */
         L     @11,MLCPTR6(,MLCAREG)                               1112
         MVC   RCPLGNCT(8,@11),PHRF34SP(PHR1REG)                   1112
*   ELSE                                                           1113
*     DO;                                                          1113
*                                                                  1113
         B     @RC01111                                            1113
@RF01111 DS    0H                                                  1114
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  1114
*       DO;                                                        1114
*         DCL                                                      1115
*           1 CMZP0048 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0048 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0048 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0048 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0048 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1116
*           CMZR0048 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1117
*           CMZR0048 RSTD;          /* REGISTER FOR                  */
*         CMZR0048=ADDR(CMZP0048);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0048,CMZP0048                                   1118
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1119
         BALR  @14,@15                                             1119
*         RESPECIFY                                                1120
*           CMZR0048 UNRSTD;                                       1120
*       END;                                                       1121
*       MLCPTR6->RCPLGNCT=BLANK8;   /* BLANKS IN LU                  */
         L     @11,MLCPTR6(,MLCAREG)                               1122
         MVC   RCPLGNCT(8,@11),@CC02923                            1122
*     END;                                                         1123
*   RC=0;                                                          1124
@RC01111 SLR   @11,@11                                             1124
         STH   @11,RC                                              1124
*   GPR14=ADDR(MAINSUB);                                           1125
         LA    GPR14,MAINSUB                                       1125
*   END PULOGTAB;                                                  1126
@EL00016 DS    0H                                                  1126
@EF00016 DS    0H                                                  1126
@ER00016 BR    @14                                                 1126
*                                                                  1127
*/********************************************************************/
*/*                                                                  */
*/*   LUTYPE PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/* THIS ROUTINE WILL SET THE LUTYPE VALUE (FUNCTION 08)             */
*/*  IN THE LU SIFT ENTRY IF VALIDITY CHECK OK                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  1127
*PULUTYPE:                                                         1127
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1127
PULUTYPE DS    0H                                                  1128
*   IF PHRF8DFT(1)='1'B THEN                                       1128
         TM    PHRF8DFT(PHR1REG),B'10000000'                       1128
         BNO   @RF01128                                            1128
*     RLUTYPE=RLUTYP04;                                            1129
         L     @11,MLCPTR6(,MLCAREG)                               1129
         MVI   RLUTYPE(@11),X'04'                                  1129
*   ELSE                                                           1130
*     DO;                                                          1130
         B     @RC01128                                            1130
@RF01128 DS    0H                                                  1131
*       RLUTYPE=PHRF8NUM(1);                                       1131
         L     @11,MLCPTR6(,MLCAREG)                               1131
         MVC   RLUTYPE(1,@11),PHRF8NUM(PHR1REG)                    1131
*       IF PHRF8NSP>1 THEN                                         1132
         L     @11,PHRF8NSP(,PHR1REG)                              1132
         CH    @11,@CH00039                                        1132
         BNH   @RF01132                                            1132
*         DO;                                                      1133
*                                                                  1133
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  1134
*           DO;                                                    1134
*             DCL                                                  1135
*               1 CMZP0049 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0049 FIXED(8) INIT(5),/* LEVEL PARAMETER    1135
*                                      (CLEV)                        */
*                2 CMZE0049 FIXED(8) INIT(7),/* ERROR PARAMETER    1135
*                                      (CERR)                        */
*                2 CMZA0049 CHAR(1) INIT('1'),/* ACTION PARAMETER  1135
*                                      (CACT)                        */
*                2 CMZS0049 FIXED(8) INIT(0);/* LENGTH OF STRING   1135
*                                      PARAM                         */
*             DCL                                                  1136
*               CMZR0049 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            1137
*               CMZR0049 RSTD;      /* REGISTER FOR                  */
*             CMZR0049=ADDR(CMZP0049);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0049,CMZP0049                                   1138
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1139
         BALR  @14,@15                                             1139
*             RESPECIFY                                            1140
*               CMZR0049 UNRSTD;                                   1140
*           END;                                                   1141
*         END;                                                     1142
*       ELSE                                                       1143
*         ;                                                        1143
@RF01132 DS    0H                                                  1144
*     END;                                                         1144
*   RC=0;                                                          1145
@RC01128 SLR   @11,@11                                             1145
         STH   @11,RC                                              1145
*   GPR14=ADDR(MAINSUB);                                           1146
         LA    GPR14,MAINSUB                                       1146
*   END PULUTYPE;                                                  1147
@EL00017 DS    0H                                                  1147
@EF00017 DS    0H                                                  1147
@ER00017 BR    @14                                                 1147
*                                                                  1148
*/********************************************************************/
*/*                                                                  */
*/*    MAXBFRU PARAMETER SUBROUTINE                                  */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID SPECIFICATION OF MAXBFRU   */
*/*   (FUNCTION 08) AND SETS THE SPECIFIED VALUE INTO THE DAN ENTRY  */
*/*                                                                  */
*/********************************************************************/
*                                                                  1148
*PUMAXBFR:                                                         1148
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1148
PUMAXBFR DS    0H                                                  1149
*   IF PHRF8DFT(1)='1'B             /* CHECK FOR DEFAULT FROM RS     */
*     THEN                                                         1149
         TM    PHRF8DFT(PHR1REG),B'10000000'                       1149
         BO    @RT01149                                            1149
*     ;                             /* YES - DO NOTHING              */
*   ELSE                                                           1151
*     DO;                           /* NO - CONTINUE PROCESSING      */
*       IF PHRF8NUM(1)>=1           /* CHECK VALUE                   */
*         THEN                                                     1152
         CLI   PHRF8NUM(PHR1REG),1                                 1152
         BL    @RF01152                                            1152
*         DO;                       /* YES - SET IT IN DAN           */
*           RDACTPCC=PHRF8NUM(1);                                  1154
         MVC   RDACTPCC(1,ENTRYPTR),PHRF8NUM(PHR1REG)              1154
*           IF PHRF8NSP>1           /* MORE THAN 1 NUMBER SPECIFIED  */
*             THEN                                                 1155
         L     @11,PHRF8NSP(,PHR1REG)                              1155
         CH    @11,@CH00039                                        1155
         BNH   @RF01155                                            1155
*             DO;                   /* YES - OUTPUT EXTRA MSG        */
*/* ERRFMT    LEVEL(VALUE)  ERROR(EXTRA)  ACTION(IGNORE)             */
*                                                                  1157
*               DO;                                                1157
*                 DCL                                              1158
*                   1 CMZP0050 STATIC LOCAL,/* PARAMETER LIST PASSED
*                                      TO ERROR FORMAT ROUTINE       */
*                    2 CMZL0050 FIXED(8) INIT(5),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                    2 CMZE0050 FIXED(8) INIT(7),/* ERROR PARAMETER
*                                      (CERR)                        */
*                    2 CMZA0050 CHAR(1) INIT('1'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                    2 CMZS0050 FIXED(8) INIT(0);/* LENGTH OF STRING
*                                      PARAM                         */
*                 DCL                                              1159
*                   CMZR0050 REGISTER(1);/* ESTABLISH PARAMeter      */
*                 RESPECIFY                                        1160
*                   CMZR0050 RSTD;  /* REGISTER FOR                  */
*                 CMZR0050=ADDR(CMZP0050);/* ADDRESS OF PARAMETER  1161
*                                      LIST                          */
         LA    CMZR0050,CMZP0050                                   1161
*                 CALL ISTSDCC2;    /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1162
         BALR  @14,@15                                             1162
*                 RESPECIFY                                        1163
*                   CMZR0050 UNRSTD;                               1163
*               END;                                               1164
*             END;                                                 1165
*           ELSE                                                   1166
*             ;                     /* NO - DO NOTHING               */
@RF01155 DS    0H                                                  1167
*         END;                                                     1167
*       ELSE                                                       1168
*         DO;                       /* VALUE NOT >= 1 - TAKE DEF FROM
*                                      RS                            */
         B     @RC01152                                            1168
@RF01152 DS    0H                                                  1169
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  1169
*           DO;                                                    1169
*             DCL                                                  1170
*               1 CMZP0051 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                2 CMZL0051 FIXED(8) INIT(5),/* LEVEL PARAMETER    1170
*                                      (CLEV)                        */
*                2 CMZE0051 FIXED(8) INIT(4),/* ERROR PARAMETER    1170
*                                      (CERR)                        */
*                2 CMZA0051 CHAR(1) INIT('2'),/* ACTION PARAMETER  1170
*                                      (CACT)                        */
*                2 CMZS0051 FIXED(8) INIT(0);/* LENGTH OF STRING   1170
*                                      PARAM                         */
*             DCL                                                  1171
*               CMZR0051 REGISTER(1);/* ESTABLISH PARAMeter          */
*             RESPECIFY                                            1172
*               CMZR0051 RSTD;      /* REGISTER FOR                  */
*             CMZR0051=ADDR(CMZP0051);/* ADDRESS OF PARAMETER LIST   */
         LA    CMZR0051,CMZP0051                                   1173
*             CALL ISTSDCC2;        /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1174
         BALR  @14,@15                                             1174
*             RESPECIFY                                            1175
*               CMZR0051 UNRSTD;                                   1175
*           END;                                                   1176
*         END;                                                     1177
*     END;                                                         1178
@RC01152 DS    0H                                                  1179
*   RC=0;                           /* FORCE ZERO RC                 */
@RT01149 SLR   @11,@11                                             1179
         STH   @11,RC                                              1179
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       1180
*   END PUMAXBFR;                                                  1181
@EL00018 DS    0H                                                  1181
@EF00018 DS    0H                                                  1181
@ER00018 BR    @14                                                 1181
*                                                                  1182
*/********************************************************************/
*/*                                                                  */
*/*   MAXDATA PARAMETER SUBROUTINE                                   */
*/*                                                                  */
*/*  THIS ROUTINE WILL CONVERT THE MAXDATA VALUE (FUNCTION           */
*/*  44) TO HEX AND SET IT INTO THE PU ENTRY.                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  1182
*PUMAXDAT:                                                         1182
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1182
PUMAXDAT DS    0H                                                  1183
*   IF PHRF34VF(1)=PHRVFAOK&PHRF34SL(1)<=5 THEN                    1183
         CLI   PHRF34VF(PHR1REG),X'00'                             1183
         BNE   @RF01183                                            1183
         LH    @11,PHRF34SL(,PHR1REG)                              1183
         CH    @11,@CH00285                                        1183
         BH    @RF01183                                            1183
*     DO;                                                          1184
*       PACK(PHRF34SP(1),PHRF34SP(1));/* PACK EBCDIC NUM.            */
         PACK  PHRF34SP(8,PHR1REG),PHRF34SP(8,PHR1REG)             1185
*       CVB(CVBNUM,PHRF34SP(1));    /* CONVERT TO HEX                */
         CVB   @11,PHRF34SP(,PHR1REG)                              1186
         ST    @11,CVBNUM                                          1186
*       IF CVBNUM<='FFFF'X THEN                                    1187
         C     @11,@CF02158                                        1187
         BH    @RF01187                                            1187
*         DO;                                                      1188
*           RCCMXDAT=CVBNUM1;                                      1189
         L     @11,MLCPTR5(,MLCAREG)                               1189
         MVC   RCCMXDAT(2,@11),CVBNUM1                             1189
*           RC=0;                                                  1190
         SLR   @11,@11                                             1190
         STH   @11,RC                                              1190
*         END;                                                     1191
*       ELSE                                                       1192
*         RC=4;                                                    1192
         B     @RC01187                                            1192
@RF01187 MVC   RC(2),@CH00052                                      1192
*     END;                                                         1193
*   ELSE                                                           1194
*     RC=4;                                                        1194
         B     @RC01183                                            1194
@RF01183 MVC   RC(2),@CH00052                                      1194
*   IF RC=0 THEN                                                   1195
@RC01183 ICM   @11,3,RC                                            1195
         BZ    @RT01195                                            1195
*     ;                                                            1196
*   ELSE                                                           1197
*     DO;                                                          1197
*                                                                  1197
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  1198
*       DO;                                                        1198
*         DCL                                                      1199
*           1 CMZP0052 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0052 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0052 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0052 CHAR(1) INIT('6'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0052 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1200
*           CMZR0052 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1201
*           CMZR0052 RSTD;          /* REGISTER FOR                  */
*         CMZR0052=ADDR(CMZP0052);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0052,CMZP0052                                   1202
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1203
         BALR  @14,@15                                             1203
*         RESPECIFY                                                1204
*           CMZR0052 UNRSTD;                                       1204
*       END;                                                       1205
*     END;                                                         1206
*   GPR14=ADDR(MAINSUB);                                           1207
@RT01195 LA    GPR14,MAINSUB                                       1207
*   END PUMAXDAT;                                                  1208
@EL00019 DS    0H                                                  1208
@EF00019 DS    0H                                                  1208
@ER00019 BR    @14                                                 1208
*                                                                  1209
*/********************************************************************/
*/*                                                                  */
*/*   MAXLU PARAMETER SUBROUTINE                                     */
*/*                                                                  */
*/*   THIS ROUTIHE WILL SET THE MAXLU VALUE (FUNCTION 07)            */
*/*   IN THE DUMMY PU (PUX) SIFT ENTRY.                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  1209
*PUMAXLU:                                                          1209
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1209
PUMAXLU  DS    0H                                                  1210
*   RPXMAXLU=PHRF7NUM(1);           /* MOVE THE VALUE                */
         MVC   RPXMAXLU(1,ENTRYPTR),PHRF7NUM(PHR1REG)              1210
*   RC=0;                           /* SET OK RETURN CODE            */
         SLR   @11,@11                                             1211
         STH   @11,RC                                              1211
*   END PUMAXLU;                                                   1212
@EL00020 DS    0H                                                  1212
@EF00020 DS    0H                                                  1212
@ER00020 BR    @14                                                 1212
*                                                                  1213
*/********************************************************************/
*/*                                                                  */
*/*   MAXOUT PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/*   THIS ROUTINE WILL SET THE MAXOUT VALUE (FUNCTION 07)           */
*/*   IN THE PU ENTRY.                                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  1213
*PUMAXOUT:                                                         1213
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1213
PUMAXOUT DS    0H                                                  1214
*   IF PHRF7NUM(1)>=1&PHRF7NUM(1)<=7 THEN                          1214
         CLI   PHRF7NUM(PHR1REG),1                                 1214
         BL    @RF01214                                            1214
         CLI   PHRF7NUM(PHR1REG),7                                 1214
         BH    @RF01214                                            1214
*     RCCMXOUT=PHRF7NUM(1);                                        1215
         L     @11,MLCPTR5(,MLCAREG)                               1215
         MVC   RCCMXOUT(1,@11),PHRF7NUM(PHR1REG)                   1215
*   ELSE                                                           1216
*     DO;                                                          1216
*                                                                  1216
         B     @RC01214                                            1216
@RF01214 DS    0H                                                  1217
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  1217
*       DO;                                                        1217
*         DCL                                                      1218
*           1 CMZP0053 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0053 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0053 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0053 CHAR(1) INIT('2'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0053 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1219
*           CMZR0053 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1220
*           CMZR0053 RSTD;          /* REGISTER FOR                  */
*         CMZR0053=ADDR(CMZP0053);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0053,CMZP0053                                   1221
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1222
         BALR  @14,@15                                             1222
*         RESPECIFY                                                1223
*           CMZR0053 UNRSTD;                                       1223
*       END;                                                       1224
*       RCCMXOUT=1;                                                1225
         L     @11,MLCPTR5(,MLCAREG)                               1225
         MVI   RCCMXOUT(@11),X'01'                                 1225
*     END;                                                         1226
*   RC=0;                                                          1227
@RC01214 SLR   @11,@11                                             1227
         STH   @11,RC                                              1227
*   GPR14=ADDR(MAINSUB);                                           1228
         LA    GPR14,MAINSUB                                       1228
*   END PUMAXOUT;                                                  1229
@EL00021 DS    0H                                                  1229
@EF00021 DS    0H                                                  1229
@ER00021 BR    @14                                                 1229
*                                                                  1230
*/********************************************************************/
*/*                                                                  */
*/*   MAXPATH PARAMETER SUBROUTINE                                   */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID MAXPATH KEYWORD VALUE      */
*/*   (FUNCTION 44) AND GETS STORAGE FOR THE PATH TABLE AND SETS THE */
*/*   STORAGE ADDR AND THE SIZE OF THE PATH TABLE IN THE PU ENTRY    */
*/*                                                                  */
*/********************************************************************/
*                                                                  1230
*PUMAXPAT:                                                         1230
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1230
PUMAXPAT DS    0H                                                  1231
*   INVALSW='0'B;                   /* INITIALIZE INTERNAL SWITCH    */
         NI    INVALSW,B'10111111'                                 1231
*   IF PHRF34VF(1)=PHRVFAOK&PHRF34SL(1)<=3/* VALIDITY CHECK KEYWORD  */
*     THEN                                                         1232
         CLI   PHRF34VF(PHR1REG),X'00'                             1232
         BNE   @RF01232                                            1232
         LH    @11,PHRF34SL(,PHR1REG)                              1232
         CH    @11,@CH00064                                        1232
         BH    @RF01232                                            1232
*     DO;                           /* YES - CONTINUE PROCESSING     */
*       PACK(PHRF34SP(1),PHRF34SP(1));                             1234
         PACK  PHRF34SP(8,PHR1REG),PHRF34SP(8,PHR1REG)             1234
*       CVB(CVBNUM,PHRF34SP(1));    /* PACK AND CONVERT TO BINARY  1235
*                                      MAXPATH VALUE                 */
         CVB   @11,PHRF34SP(,PHR1REG)                              1235
         ST    @11,CVBNUM                                          1235
*       IF CVBNUM>=0&CVBNUM<='100'X /* RANGE OK?                     */
*         THEN                                                     1236
         SLR   @04,@04                                             1236
         CR    @11,@04                                             1236
         BL    @RF01236                                            1236
         CH    @11,@CH03297                                        1236
         BH    @RF01236                                            1236
*         IF CVBNUM=0               /* YES - MAXPATH?                */
*           THEN                                                   1237
         CR    @11,@04                                             1237
         BNE   @RF01237                                            1237
*           RC=0;                   /* YES - END PROCESSING          */
         STH   @04,RC                                              1238
*         ELSE                                                     1239
*           DO;                     /* NO - CONTINUE                 */
         B     @RC01237                                            1239
@RF01237 DS    0H                                                  1240
*             RPHPTR=MLCRPH;        /* SET UP FOR GETSTOR            */
         L     RPHPTR,MLCRPH(,MLCAREG)                             1240
*             GETSSIZE=(CVBNUM*8)+4;/* SET SIZE FOR GETSTOR          */
         L     GETSSIZE,CVBNUM                                     1241
         SLA   GETSSIZE,3                                          1241
         AH    GETSSIZE,@CH00052                                   1241
*/* GETSTOR CLEAR(YES)TYPE(PAGEABLE)SIZE(GETSSIZE)SAVE(YES)ADSPACE(PRIV
*TE)                                                                 */
*                                                                  1242
*             DO;                                                  1242
*                                                                  1242
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  1243
*               DCL                                                1243
*                 GPR00F FIXED(31) REG(00);                        1243
*               DCL                                                1244
*                 GPR00P PTR(31) REG(00);                          1244
*               DCL                                                1245
*                 GPR01F FIXED(31) REG(01);                        1245
*               DCL                                                1246
*                 GPR01P PTR(31) REG(01);                          1246
*               DCL                                                1247
*                 GPR02F FIXED(31) REG(02);                        1247
*               DCL                                                1248
*                 GPR02P PTR(31) REG(02);                          1248
*               DCL                                                1249
*                 GPR03F FIXED(31) REG(03);                        1249
*               DCL                                                1250
*                 GPR03P PTR(31) REG(03);                          1250
*               DCL                                                1251
*                 GPR04F FIXED(31) REG(04);                        1251
*               DCL                                                1252
*                 GPR04P PTR(31) REG(04);                          1252
*               DCL                                                1253
*                 GPR05F FIXED(31) REG(05);                        1253
*               DCL                                                1254
*                 GPR05P PTR(31) REG(05);                          1254
*               DCL                                                1255
*                 GPR06F FIXED(31) REG(06);                        1255
*               DCL                                                1256
*                 GPR06P PTR(31) REG(06);                          1256
*               DCL                                                1257
*                 GPR07F FIXED(31) REG(07);                        1257
*               DCL                                                1258
*                 GPR07P PTR(31) REG(07);                          1258
*               DCL                                                1259
*                 GPR08F FIXED(31) REG(08);                        1259
*               DCL                                                1260
*                 GPR08P PTR(31) REG(08);                          1260
*               DCL                                                1261
*                 GPR09F FIXED(31) REG(09);                        1261
*               DCL                                                1262
*                 GPR09P PTR(31) REG(09);                          1262
*               DCL                                                1263
*                 GPR10F FIXED(31) REG(10);                        1263
*               DCL                                                1264
*                 GPR10P PTR(31) REG(10);                          1264
*               DCL                                                1265
*                 GPR11F FIXED(31) REG(11);                        1265
*               DCL                                                1266
*                 GPR11P PTR(31) REG(11);                          1266
*               DCL                                                1267
*                 GPR12F FIXED(31) REG(12);                        1267
*               DCL                                                1268
*                 GPR12P PTR(31) REG(12);                          1268
*               DCL                                                1269
*                 GPR13F FIXED(31) REG(13);                        1269
*               DCL                                                1270
*                 GPR13P PTR(31) REG(13);                          1270
*               DCL                                                1271
*                 GPR14F FIXED(31) REG(14);                        1271
*               DCL                                                1272
*                 GPR14P PTR(31) REG(14);                          1272
*               DCL                                                1273
*                 GPR15F FIXED(31) REG(15);                        1273
*               DCL                                                1274
*                 GPR15P PTR(31) REG(15);                          1274
*               RFY                                                1275
*                (GPR00P,                                          1275
*                 GPR01P,                                          1275
*                 GPR02P,                                          1275
*                 GPR03P) RSTD;                                    1275
*               RFY                                                1276
*                 ISTRPH BASED(GPR01P);                            1276
*               GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                   GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P) SETS(
*                   RPHWORK);                                      1277
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*               GPR00F=GETSSIZE;    /* SIZE IN REG0                  */
         LR    GPR00F,GETSSIZE                                     1278
*               DCL                                                1279
*                 1 CMZA0054 FIXED(31) STATIC LOCAL,               1279
*                  2 * FIXED(8) INIT(96),/* OPTION FLAGS             */
*                  2 * FIXED(8) INIT(96),/* STORAGE KEY              */
*                  2 * FIXED(8) INIT(229),/* SUBPOOL NUMBER          */
*                  2 * FIXED(8) INIT('00'X);/* REQUEST TYPE          */
*               GPR03F=CMZA0054;                                   1280
         L     GPR03F,CMZA0054                                     1280
*               DO;                 /* LISATCVT                    1281
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*                 GPR02P=ATCLCPTR;  /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     1282
*               END;                /* LISATCVT                      */
*               CALL GPR02P->ATCGTSTR;/* CALL ISTORFSR               */
         L     @15,ATCGTSTR(,GPR02P)                               1284
         BALR  @14,@15                                             1284
*               RFY                                                1285
*                (GPR00P,                                          1285
*                 GPR01P,                                          1285
*                 GPR02P,                                          1285
*                 GPR03P) UNRSTD;                                  1285
*             END;                  /* END OF GETSTOR                */
*                                                                  1286
*             /*******************************************************/
*             /*                                                     */
*             /*                                             @X04BHQH*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1287
*             RC=GPR15;             /* SAVE RETURN CODE              */
         STH   GPR15,RC                                            1287
*             IF RC=0               /* CHECK IT                      */
*               THEN                                               1288
         LH    @11,RC                                              1288
         LTR   @11,@11                                             1288
         BNZ   @RF01288                                            1288
*               DO;                 /* RC OK - CONTINUE              */
*                 RCCPATHT=RPHSRPRM;/* SET ADDR OF STORAGE IN PU   1290
*                                      ENTRY                         */
         L     @11,MLCPTR5(,MLCAREG)                               1290
         L     @09,RPHSRPRM(,GPR01P)                               1290
         ST    @09,RCCPATHT(,@11)                                  1290
*                 RFY                                              1291
*                   ISTRNCPT BASED(RCCPATHT);                      1291
*                 RNCPTLN=GETSSIZE; /* SAVE SIZE OF AREA             */
         ST    GETSSIZE,RNCPTLN(,@09)                              1292
*               END;                                               1293
*             ELSE                                                 1294
*               DO;                 /* RC NOGOOD                     */
         B     @RC01288                                            1294
@RF01288 DS    0H                                                  1295
*/*TPMSG MSGID('303I')MSG((ADDR(MLCCNFG2)))PLAREA(MLCTPMSG)OPTIONS(NCSP
*SID)                                                                */
*                                                                  1295
*                 DO;                                              1295
*                   DCL                                            1296
*                     REG1072 REG(1) PTR;                          1296
*                   RFY                                            1297
*                    (REG1072) RSTD;                               1297
*                   RFY                                            1298
*                    (EMCR13) RSTD;                                1298
*                   DCL                                            1299
*                     1 * BASED(REG1072),                          1299
*                      2 CMZID072 PTR(31),                         1299
*                      2 *,                                        1299
*                       3 CMZRL072 PTR(8),                         1299
*                       3 CMZRA072 PTR(24) BDY(BYTE),              1299
*                      2 CMZEA072 PTR(31),                         1299
*                      2 CMZVP072 PTR(31);                         1299
*                                                                  1299
*/*XREGSET  PID('PLAREA')PPARM(MLCTPMSG)RREG(,REG1072)               */
*                                                                  1300
*                   DO;                                            1300
*                     REG1072=ADDR(MLCTPMSG);/* SET RREG SYMBOL TO 1301
*                                      ADDRESS OF PPARM OPERAND      */
         LA    REG1072,MLCTPMSG(,MLCAREG)                          1301
*                   END;            /* XREGSET                       */
*                   CMZID072=0;                                    1303
         SLR   @11,@11                                             1303
         ST    @11,CMZID072(,REG1072)                              1303
*                   CMZRL072=0;                                    1304
         MVI   CMZRL072(REG1072),X'00'                             1304
*                   CMZRA072=0;                                    1305
         STCM  @11,7,CMZRA072(REG1072)                             1305
*                   CMZEA072=0;                                    1306
         ST    @11,CMZEA072(,REG1072)                              1306
*                   CMZVP072=0;                                    1307
         ST    @11,CMZVP072(,REG1072)                              1307
*                   DCL                                            1308
*                     CMZAA072 CHAR(4) INIT('303I');               1308
*                   CMZID072=ADDR(CMZAA072);                       1309
         LA    @11,CMZAA072                                        1309
         ST    @11,CMZID072(,REG1072)                              1309
*                   CMZVP072=ADDR(MLCCNFG2);                       1310
         LA    @11,MLCCNFG2(,MLCAREG)                              1310
         ST    @11,CMZVP072(,REG1072)                              1310
*                   DCL                                            1311
*                     CMZSA072(18) PTR(31) BASED(EMCR13);          1311
*                   CMZSA072(5)=ADDR(NCSPLSID);                    1312
         L     @11,MLCNCSPL(,MLCAREG)                              1312
         LA    @11,NCSPLSID(,@11)                                  1312
         ST    @11,CMZSA072+16(,EMCR13)                            1312
*                   DCL                                            1313
*                     REG15072 REG(15) PTR;                        1313
*                   RFY                                            1314
*                     REG15072 RSTD;                               1314
*                   DO;             /* LISATCVT                    1315
*                                      CVTBASE(PAGEABLE,(REG15072))  */
*                     REG15072=ATCLCPTR;/* SET UP ATCVT POINTER      */
         L     REG15072,ATCLCPTR                                   1316
*                   END;            /* LISATCVT                      */
*                   DCL                                            1318
*                     CMTA072 BASED(REG15072) ENTRY VALUERANGE(*); 1318
*                   REG15072=REG15072->ATCMSGP;                    1319
         L     REG15072,ATCMSGP(,REG15072)                         1319
*                   CALL CMTA072;                                  1320
         BALR  @14,@15                                             1320
*                   RESPECIFY                                      1321
*                    (REG1072,                                     1321
*                     REG15072) UNRESTRICTED;                      1321
*                   RFY                                            1322
*                    (EMCR13) UNRSTD;                              1322
*                 END;              /*                       @D32CKQH*/
*                 RC=4;             /* FORCE KILL RETURN CODE        */
         MVC   RC(2),@CH00052                                      1324
*               END;                                               1325
*           END;                                                   1326
*       ELSE                                                       1327
*         INVALSW='1'B;             /* MAXPATH NOT IN RANGE          */
         B     @RC01236                                            1327
@RF01236 OI    INVALSW,B'01000000'                                 1327
*     END;                                                         1328
*   ELSE                                                           1329
*     INVALSW='1'B;                 /* VALIDITY CHECK FAILED         */
         B     @RC01232                                            1329
@RF01232 OI    INVALSW,B'01000000'                                 1329
*   IF INVALSW='1'B                 /* IS MAXPATH INVALID?           */
*     THEN                                                         1330
@RC01232 TM    INVALSW,B'01000000'                                 1330
         BNO   @RF01330                                            1330
*     DO;                           /* YES - OUTPUT ERR MSG          */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(KILLBLD)            */
*                                                                  1332
*       DO;                                                        1332
*         DCL                                                      1333
*           1 CMZP0081 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0081 FIXED(8) INIT(5),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0081 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0081 CHAR(1) INIT('6'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0081 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1334
*           CMZR0081 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1335
*           CMZR0081 RSTD;          /* REGISTER FOR                  */
*         CMZR0081=ADDR(CMZP0081);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0081,CMZP0081                                   1336
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1337
         BALR  @14,@15                                             1337
*         RESPECIFY                                                1338
*           CMZR0081 UNRSTD;                                       1338
*       END;                                                       1339
*       RC=4;                       /* FORCE KILL RETURN CODE        */
         MVC   RC(2),@CH00052                                      1340
*     END;                                                         1341
*   ELSE                                                           1342
*     ;                             /* NO - EVERYTHING OK            */
@RF01330 DS    0H                                                  1343
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       1343
*   END PUMAXPAT;                                                  1344
@EL00022 DS    0H                                                  1344
@EF00022 DS    0H                                                  1344
@ER00022 BR    @14                                                 1344
*                                                                  1345
*/********************************************************************/
*/*                                                                  */
*/*   MODETAB PARAMETER SUBROUTINE                                   */
*/*                                                                  */
*/*  THIS ROUTINE WILL CHECK FOR A VALID MODETAB NAME                */
*/*  (FUNCTION 33) AND MOVE THE NAME INTO THE LU SIFT ENTRY          */
*/*                                                                  */
*/********************************************************************/
*                                                                  1345
*PUMODTAB:                                                         1345
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1345
PUMODTAB DS    0H                                                  1346
*   IF PHRF34VF(1)=PHRVFAOK         /* IS MODETAB NAME VALID?        */
*     THEN                                                         1346
         CLI   PHRF34VF(PHR1REG),X'00'                             1346
         BNE   @RF01346                                            1346
*     RLUMODEN=PHRF34SP(1);         /* MOVE NAME TO LU SIFT          */
         L     @11,MLCPTR6(,MLCAREG)                               1347
         MVC   RLUMODEN(8,@11),PHRF34SP(PHR1REG)                   1347
*   ELSE                                                           1348
*     DO;                           /* NO - ERROR                    */
         B     @RC01346                                            1348
@RF01346 DS    0H                                                  1349
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  1349
*       DO;                                                        1349
*         DCL                                                      1350
*           1 CMZP0082 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0082 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0082 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0082 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0082 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1351
*           CMZR0082 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1352
*           CMZR0082 RSTD;          /* REGISTER FOR                  */
*         CMZR0082=ADDR(CMZP0082);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0082,CMZP0082                                   1353
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1354
         BALR  @14,@15                                             1354
*         RESPECIFY                                                1355
*           CMZR0082 UNRSTD;                                       1355
*       END;                                                       1356
*       RLUMODEN=BLANK8;            /* BLANK OUT NAME IN LU SIFT     */
         L     @11,MLCPTR6(,MLCAREG)                               1357
         MVC   RLUMODEN(8,@11),@CC02923                            1357
*     END;                                                         1358
*   RC=0;                                                          1359
@RC01346 SLR   @11,@11                                             1359
         STH   @11,RC                                              1359
*   GPR14=ADDR(MAINSUB);                                           1360
         LA    GPR14,MAINSUB                                       1360
*   END PUMODTAB;                                                  1361
@EL00023 DS    0H                                                  1361
@EF00023 DS    0H                                                  1361
@ER00023 BR    @14                                                 1361
*                                                                  1362
*/********************************************************************/
*/*                                                                  */
*/*   PASSLIM PARAMETER SUBROUTINE                                   */
*/*                                                                  */
*/*   THIS ROUTINE WILL SET THE PASSLIM VALUE (FUNCTION 07)          */
*/*   IN THE PU ENTRY.                                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  1362
*PUPASSLM:                                                         1362
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1362
PUPASSLM DS    0H                                                  1363
*   RCCPASSL=PHRF7NUM(1);           /* MOVE THE VALUE                */
         L     @11,MLCPTR5(,MLCAREG)                               1363
         MVC   RCCPASSL(1,@11),PHRF7NUM(PHR1REG)                   1363
*   RC=0;                           /* SET UP GOOD RETURN CODE       */
         SLR   @11,@11                                             1364
         STH   @11,RC                                              1364
*/*NOTE:  PASSLIM VALUE IS VALIDITY CHECKED IN PUVLCHK             1365
*                                                (1<=PASSLIM<=MAXOUT)*/
*                                                                  1365
*   END PUPASSLM;                                                  1365
@EL00024 DS    0H                                                  1365
@EF00024 DS    0H                                                  1365
@ER00024 BR    @14                                                 1365
*                                                                  1366
*/********************************************************************/
*/*                                                                  */
*/*   PUTYPE PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/*   THIS ROUTINE CHECKS TO SEE IF PUTYPE SPECIFIED IN CLUSTER      */
*/*   MACRO AND IF SO, ISSUSES AN IGNORE MSG                         */
*/*   (FUNCTION CODE = 07)                                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  1366
*PUTYPE:                                                           1366
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1366
PUTYPE   DS    0H                                                  1367
*   IF RNCGCLPU='1'B                /* CHECK FOR CLUSTER MACRO     1367
*                                      HANDLER FOOTPRINT             */
*     THEN                                                         1367
         TM    RNCGCLPU(RNCAREG),B'00001000'                       1367
         BNO   @RF01367                                            1367
*     DO;                           /* YES - PUT OUT IGNORE MSG      */
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  1369
*       DO;                                                        1369
*         DCL                                                      1370
*           1 CMZP0083 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0083 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0083 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0083 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0083 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1371
*           CMZR0083 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1372
*           CMZR0083 RSTD;          /* REGISTER FOR                  */
*         CMZR0083=ADDR(CMZP0083);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0083,CMZP0083                                   1373
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1374
         BALR  @14,@15                                             1374
*         RESPECIFY                                                1375
*           CMZR0083 UNRSTD;                                       1375
*       END;                                                       1376
*     END;                                                         1377
*   ELSE                                                           1378
*     ;                             /* NO - DO NOTHING               */
@RF01367 DS    0H                                                  1379
*   RC=0;                           /* FORCE ZERO RC                 */
         SLR   @11,@11                                             1379
         STH   @11,RC                                              1379
*   GPR14=ADDR(MAINSUB);            /* SET RETURN ADDR               */
         LA    GPR14,MAINSUB                                       1380
*   END PUTYPE;                                                    1381
@EL00025 DS    0H                                                  1381
@EF00025 DS    0H                                                  1381
@ER00025 BR    @14                                                 1381
*                                                                  1382
*/********************************************************************/
*/*                                                                  */
*/*                   SSCPFM PARAMETER SUBROUTINE                    */
*/*                                                                  */
*/* THIS ROUTINE WILL CHECK THE VALIDITY OF THE SSCPFM VALUE         */
*/*   SPECIFIES AND SET IT INTO THE LUSIFT ENTRY. (FUNCTION CODE =   */
*/*   33)                                                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  1382
*PUSSCPFM:                                                         1382
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1382
PUSSCPFM DS    0H                                                  1383
*   IF PHRF34SP(1)='USSSCS  '       /* WAS USSSCS SPECIFIED ON     1383
*                                      SSCPFM?                       */
*     THEN                                                         1383
         CLC   PHRF34SP(8,PHR1REG),@CC03383                        1383
         BNE   @RF01383                                            1383
*     RLUSSCFM=RLUUSS;              /* YES - SET LU RDTE             */
         L     @11,MLCPTR6(,MLCAREG)                               1384
         MVI   RLUSSCFM(@11),X'02'                                 1384
*   ELSE                                                           1385
*     IF PHRF34SP(1)='USS3270 '     /* NOT USSSCS - IS IT USS3270?   */
*       THEN                                                       1385
         B     @RC01383                                            1385
@RF01383 CLC   PHRF34SP(8,PHR1REG),@CC03384                        1385
         BNE   @RF01385                                            1385
*       RLUSSCFM=RLUU3270;          /* YES - SET IT                  */
         L     @11,MLCPTR6(,MLCAREG)                               1386
         MVI   RLUSSCFM(@11),X'04'                                 1386
*     ELSE                                                         1387
*       DO;                         /* NOT USSSCS OR USS3270 - IS IT
*                                      FSS?                          */
         B     @RC01385                                            1387
@RF01385 DS    0H                                                  1388
*         IF PHRF34SP(1)='FSS     ' /* FSS?                          */
*           THEN                                                   1388
         CLC   PHRF34SP(8,PHR1REG),@CC03385                        1388
         BE    @RT01388                                            1388
*           ;                       /* YES - DO NOTHING HERE         */
*         ELSE                                                     1390
*           DO;                     /* NOT FSS - ISSUE TAKEDEF MSG   */
*/* ERRFMT    LEVEL(VALUE)  ERROR(INVAL)  ACTION(TAKEDEF)            */
*                                                                  1391
*             DO;                                                  1391
*               DCL                                                1392
*                 1 CMZP0084 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                  2 CMZL0084 FIXED(8) INIT(5),/* LEVEL PARAMETER  1392
*                                      (CLEV)                        */
*                  2 CMZE0084 FIXED(8) INIT(4),/* ERROR PARAMETER  1392
*                                      (CERR)                        */
*                  2 CMZA0084 CHAR(1) INIT('2'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                  2 CMZS0084 FIXED(8) INIT(0);/* LENGTH OF STRING 1392
*                                      PARAM                         */
*               DCL                                                1393
*                 CMZR0084 REGISTER(1);/* ESTABLISH PARAMeter        */
*               RESPECIFY                                          1394
*                 CMZR0084 RSTD;    /* REGISTER FOR                  */
*               CMZR0084=ADDR(CMZP0084);/* ADDRESS OF PARAMETER LIST */
         LA    CMZR0084,CMZP0084                                   1395
*               CALL ISTSDCC2;      /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1396
         BALR  @14,@15                                             1396
*               RESPECIFY                                          1397
*                 CMZR0084 UNRSTD;                                 1397
*             END;                                                 1398
*           END;                                                   1399
*         RLUSSCFM=RLUFSS;          /* SET FSS IF SPECIFIED OR IF  1400
*                                      THERE WAS AN ERROR            */
@RT01388 L     @11,MLCPTR6(,MLCAREG)                               1400
         MVI   RLUSSCFM(@11),X'01'                                 1400
*         RC=0;                     /* FORCE RETURN CODE OF ZERO     */
         SLR   @11,@11                                             1401
         STH   @11,RC                                              1401
*       END;                                                       1402
*   GPR14=ADDR(MAINSUB);                                           1403
@RC01385 DS    0H                                                  1403
@RC01383 LA    GPR14,MAINSUB                                       1403
*   END PUSSCPFM;                                                  1404
@EL00026 DS    0H                                                  1404
@EF00026 DS    0H                                                  1404
@ER00026 BR    @14                                                 1404
*                                                                  1405
*/********************************************************************/
*/*                                                                  */
*/*   USSTAB PARAMETER SUBROUTINE                                    */
*/*                                                                  */
*/*   THIS ROUTINE WILL CHECK FOR A VALID USSTAB NAME                */
*/*   (FUNCTION 33) AND MOVE THE NAME INTO THE LU SIFT ENTRY         */
*/*                                                                  */
*/********************************************************************/
*                                                                  1405
*PUUSSTAB:                                                         1405
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1405
PUUSSTAB DS    0H                                                  1406
*   IF PHRF34VF(1)=PHRVFAOK         /* IS USSTAB NAME VALID?         */
*     THEN                          /* MOVE NAME TO LU SIFT ENTRY    */
         CLI   PHRF34VF(PHR1REG),X'00'                             1406
         BNE   @RF01406                                            1406
*     RLUUSSNM=PHRF34SP(1);                                        1407
         L     @11,MLCPTR6(,MLCAREG)                               1407
         MVC   RLUUSSNM(8,@11),PHRF34SP(PHR1REG)                   1407
*   ELSE                                                           1408
*     DO;                           /* NO - ERROR - ISSUE MSG        */
         B     @RC01406                                            1408
@RF01406 DS    0H                                                  1409
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  1409
*       DO;                                                        1409
*         DCL                                                      1410
*           1 CMZP0085 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0085 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0085 FIXED(8) INIT(4),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0085 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0085 FIXED(8) INIT(0);/* LENGTH OF STRING PARAM   */
*         DCL                                                      1411
*           CMZR0085 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                1412
*           CMZR0085 RSTD;          /* REGISTER FOR                  */
*         CMZR0085=ADDR(CMZP0085);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0085,CMZP0085                                   1413
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV02911                                        1414
         BALR  @14,@15                                             1414
*         RESPECIFY                                                1415
*           CMZR0085 UNRSTD;                                       1415
*       END;                                                       1416
*       RLUUSSNM=BLANK8;            /* SET NAME TO BLANKS            */
         L     @11,MLCPTR6(,MLCAREG)                               1417
         MVC   RLUUSSNM(8,@11),@CC02923                            1417
*     END;                                                         1418
*   RC=0;                           /* SET OK RETURN CODE            */
@RC01406 SLR   @11,@11                                             1419
         STH   @11,RC                                              1419
*   GPR14=ADDR(MAINSUB);            /* RESET RETURN ADDR             */
         LA    GPR14,MAINSUB                                       1420
*   END PUUSSTAB;                                                  1421
@EL00027 DS    0H                                                  1421
@EF00027 DS    0H                                                  1421
@ER00027 BR    @14                                                 1421
*   END PUDOLOOP;                   /* END LOOP TO PROCESS ALL     1422
*                                      KEYWORDS SPECIFIED ON MACRO   */
@EL00003 DS    0H                                                  1422
@EF00003 DS    0H                                                  1422
@ER00003 BR    @14                                                 1422
@PB00003 DS    0H                                                  1423
*                                                                  1423
*/********************************************************************/
*/*                                                                  */
*/*             PHR MACRO-GENERATED TABLES                           */
*/*                                                                  */
*/********************************************************************/
*/********************************************************************/
*/*          PRE SCAN KEYWORD TABLE                                  */
*/********************************************************************/
*                                                                  1423
*   DCL                                                            1423
*    (ISTSDCC5,                                                    1423
*     ISTSDCC6,                                                    1423
*     ISTSDCR1) EXT ENTRY NONLOCAL;                                1423
*   DCL                                                            1424
*     1 PREKWTBL BDY(WORD) STATIC LOCAL,                           1424
*      2 * FIXED(15) INIT(1),                                      1424
*      2 * FIXED(15) INIT(13),                                     1424
*      2 * CHAR(8) INIT('PUTYPE'),                                 1424
*      2 * FIXED(8) INIT('2'X),                                    1424
*      2 * PTR(31) INIT(ADDR(PUPUTP)) BDY(BYTE);                   1424
*                                                                  1424
*/********************************************************************/
*/*          KEYWORD TABLE FOR PUX MACRO                             */
*/********************************************************************/
*                                                                  1425
*   DCL                                                            1425
*     1 PUXKWTBL BDY(WORD) STATIC LOCAL,                           1425
*      2 * FIXED(15) INIT(2),                                      1425
*      2 * FIXED(15) INIT(13),      /*                       @XM00168*/
*      2 * CHAR(8) INIT('MAXLU'),                                  1425
*      2 * FIXED(8) INIT('7'X),                                    1425
*      2 * PTR(31) INIT(ADDR(PUMAXLU)) BDY(BYTE),                  1425
*      2 * CHAR(8) INIT('PUTYPE'),                                 1425
*      2 * FIXED(8) INIT('06'X),                                   1425
*      2 * PTR(31) INIT(ADDR(ISTSDCR1)) BDY(BYTE);                 1425
*                                                                  1425
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @XM00168*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1426
*                                                                  1426
*/********************************************************************/
*/*          KEYWORD TABLE FOR PU MACRO IN LOCAL SUBAREA             */
*/********************************************************************/
*                                                                  1426
*   DCL                                                            1426
*     1 LPUKWTBL BDY(WORD) STATIC LOCAL,                           1426
*      2 * FIXED(15) INIT(13),                                     1426
*      2 * FIXED(15) INIT(13),                                     1426
*      2 * CHAR(8) INIT('BUFLIM'),                                 1426
*      2 * FIXED(8) INIT('8'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PUBFLIM)) BDY(BYTE),                  1426
*      2 * CHAR(8) INIT('CUADDR'),                                 1426
*      2 * FIXED(8) INIT('4'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PUCUADDR)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('DISCNT'),                                 1426
*      2 * FIXED(8) INIT('2'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PUDISC)) BDY(BYTE),                   1426
*                                                                  1426
*     /***************************************************************/
*     /*                                                             */
*     /*                                                     @D32CKMX*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1426
*      2 * CHAR(8) INIT('ISTATUS'),                                1426
*      2 * FIXED(8) INIT('2'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PUISTU)) BDY(BYTE),                   1426
*      2 * CHAR(8) INIT('LOGAPPL'),                                1426
*      2 * FIXED(8) INIT('33'X),                                   1426
*      2 * PTR(31) INIT(ADDR(PULOGAPL)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('LOGTAB'),                                 1426
*      2 * FIXED(8) INIT('33'X),                                   1426
*      2 * PTR(31) INIT(ADDR(PULOGTAB)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('LUTYPE'),                                 1426
*      2 * FIXED(8) INIT('8'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PULUTYPE)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('MAXBFRU'),                                1426
*      2 * FIXED(8) INIT('8'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PUMAXBFR)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('MODETAB'),                                1426
*      2 * FIXED(8) INIT('33'X),                                   1426
*      2 * PTR(31) INIT(ADDR(PUMODTAB)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('PUTYPE'),                                 1426
*      2 * FIXED(8) INIT('7'X),                                    1426
*      2 * PTR(31) INIT(ADDR(PUTYPE)) BDY(BYTE),                   1426
*      2 * CHAR(8) INIT('SSCPFM'),                                 1426
*      2 * FIXED(8) INIT('33'X),                                   1426
*      2 * PTR(31) INIT(ADDR(PUSSCPFM)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('USSTAB'),                                 1426
*      2 * FIXED(8) INIT('33'X),                                   1426
*      2 * PTR(31) INIT(ADDR(PUUSSTAB)) BDY(BYTE),                 1426
*      2 * CHAR(8) INIT('VPACING'),                                1426
*      2 * FIXED(8) INIT('8'X),                                    1426
*      2 * PTR(31) INIT(ADDR(ISTSDCP6)) BDY(BYTE);                 1426
*                                                                  1427
*/********************************************************************/
*/*          KEYWORD TABLE FOR PU MACRO IN SWITCHED SUBAREA OR IN    */
*/*                 370X NCPGEN DECK                                 */
*/********************************************************************/
*                                                                  1427
*   DCL                                                            1427
*     1 PUKWTBL BDY(WORD) STATIC LOCAL,                            1427
*      2 * FIXED(15) INIT(24),                                     1427
*      2 * FIXED(15) INIT(13),                                     1427
*      2 * CHAR(8) INIT('ADDR'),                                   1427
*      2 * FIXED(8) INIT('24'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUADDR)) BDY(BYTE),                   1427
*      2 * CHAR(8) INIT('BATCH'),                                  1427
*      2 * FIXED(8) INIT('2'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUBTCH)) BDY(BYTE),                   1427
*      2 * CHAR(8) INIT('BNNSUP'),                                 1427
*      2 * FIXED(8) INIT('2'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUBNNS)) BDY(BYTE),                   1427
*      2 * CHAR(8) INIT('BUFLIM'),                                 1427
*      2 * FIXED(8) INIT('8'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUBFLIM)) BDY(BYTE),                  1427
*      2 * CHAR(8) INIT('CUTYPE'),                                 1427
*      2 * FIXED(8) INIT('33'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUCUTYPE)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('DISCNT'),                                 1427
*      2 * FIXED(8) INIT('2'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUDISC)) BDY(BYTE),                   1427
*                                                                  1427
*     /***************************************************************/
*     /*                                                             */
*     /*                                                     @D32CKMX*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1427
*      2 * CHAR(8) INIT('IDBLK'),                                  1427
*      2 * FIXED(8) INIT('24'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUIDBLK)) BDY(BYTE),                  1427
*      2 * CHAR(8) INIT('IDNUM'),                                  1427
*      2 * FIXED(8) INIT('24'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUIDNUM)) BDY(BYTE),                  1427
*      2 * CHAR(8) INIT('IRETRY'),                                 1427
*      2 * FIXED(8) INIT('2'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUITRY)) BDY(BYTE),                   1427
*      2 * CHAR(8) INIT('ISTATUS'),                                1427
*      2 * FIXED(8) INIT('2'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUISTU)) BDY(BYTE),                   1427
*      2 * CHAR(8) INIT('LOGAPPL'),                                1427
*      2 * FIXED(8) INIT('33'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PULOGAPL)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('LOGTAB'),                                 1427
*      2 * FIXED(8) INIT('33'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PULOGTAB)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('LUTYPE'),                                 1427
*      2 * FIXED(8) INIT('8'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PULUTYPE)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('MAXDATA'),                                1427
*      2 * FIXED(8) INIT('44'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUMAXDAT)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('MAXPATH'),                                1427
*      2 * FIXED(8) INIT('44'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUMAXPAT)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('MAXOUT'),                                 1427
*      2 * FIXED(8) INIT('7'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUMAXOUT)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('MODETAB'),                                1427
*      2 * FIXED(8) INIT('33'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUMODTAB)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('PACING'),                                 1427
*      2 * FIXED(8) INIT('8'X),                                    1427
*      2 * PTR(31) INIT(ADDR(ISTSDCP7)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('PASSLIM'),                                1427
*      2 * FIXED(8) INIT('7'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUPASSLM)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('PUTYPE'),                                 1427
*      2 * FIXED(8) INIT('7'X),                                    1427
*      2 * PTR(31) INIT(ADDR(PUTYPE)) BDY(BYTE),                   1427
*      2 * CHAR(8) INIT('RETRIES'),                                1427
*      2 * FIXED(8) INIT('6'X),                                    1427
*      2 * PTR(31) INIT(ADDR(ISTSDCR1)) BDY(BYTE),                 1427
*                                                                  1427
*     /***************************************************************/
*     /*                                                             */
*     /*                                                     @DC39940*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1427
*      2 * CHAR(8) INIT('SSCPFM'),                                 1427
*      2 * FIXED(8) INIT('33'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUSSCPFM)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('USSTAB'),                                 1427
*      2 * FIXED(8) INIT('33'X),                                   1427
*      2 * PTR(31) INIT(ADDR(PUUSSTAB)) BDY(BYTE),                 1427
*      2 * CHAR(8) INIT('VPACING'),                                1427
*      2 * FIXED(8) INIT('8'X),                                    1427
*      2 * PTR(31) INIT(ADDR(ISTSDCP6)) BDY(BYTE);                 1427
*                                                                  1428
*/********************************************************************/
*/*                                                                  */
*/*  INTERMEDIATE POINTER BLOCK TABLE                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  1428
*   DCL                                                            1428
*     1 PUIRB BDY(WORD) STATIC LOCAL,                              1428
*      2 * FIXED(15) INIT(6),                                      1428
*      2 * FIXED(15) INIT(8),                                      1428
*      2 PUBNNS PTR(31) INIT(ADDR(PUBNNSUP)),                      1428
*      2 * PTR(31) INIT(ADDR(BNNSUB)),                             1428
*      2 PUBTCH PTR(31) INIT(ADDR(PUBATCH)),                       1428
*      2 * PTR(31) INIT(ADDR(BTHSUB)),                             1428
*      2 PUDISC PTR(31) INIT(ADDR(PUDISCNT)),                      1428
*      2 * PTR(31) INIT(ADDR(DISSUB)),/*                     @D32CKMX*/
*      2 PUISTU PTR(31) INIT(ADDR(PUISTATU)),                      1428
*      2 * PTR(31) INIT(ADDR(ISTSUB)),                             1428
*      2 PUITRY PTR(31) INIT(ADDR(PUIRETRY)),                      1428
*      2 * PTR(31) INIT(ADDR(ITYSUB)),                             1428
*      2 PUPUTP PTR(31) INIT(ADDR(PUPUTYPE)),                      1428
*      2 * PTR(31) INIT(ADDR(PUTSUB));                             1428
*                                                                  1429
*/********************************************************************/
*/*                                                                  */
*/*  SUBPARAMETER TABLE FOR INTERNAL PROCEDURES                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  1429
*   DCL                                                            1429
*     1 BNNSUB BDY(WORD) STATIC LOCAL,                             1429
*      2 * FIXED(15) INIT(2),                                      1429
*      2 * FIXED(15) INIT(12),                                     1429
*      2 * CHAR(8) INIT('3270'),                                   1429
*      2 * FIXED(31) INIT(1),                                      1429
*      2 * CHAR(8) INIT('STANDARD'),                               1429
*      2 * FIXED(31) INIT(0);                                      1429
*   DCL                                                            1430
*     1 DISSUB BDY(WORD) STATIC LOCAL,                             1430
*      2 * FIXED(15) INIT(2),                                      1430
*      2 * FIXED(15) INIT(12),      /*                       @D32CKMX*/
*      2 * CHAR(8) INIT('YES'),                                    1430
*      2 * FIXED(31) INIT(1),                                      1430
*                                                                  1430
*/* @D32CKMX                                                         */
*                                                                  1430
*      2 * CHAR(8) INIT('NO'),                                     1430
*      2 * FIXED(31) INIT(0);                                      1430
*                                                                  1430
*/*  @D32CKMX                                                        */
*                                                                  1431
*   DCL                                                            1431
*     1 ISTSUB BDY(WORD) STATIC LOCAL,                             1431
*      2 * FIXED(15) INIT(2),                                      1431
*      2 * FIXED(15) INIT(12),                                     1431
*      2 * CHAR(8) INIT('ACTIVE'),                                 1431
*      2 * FIXED(31) INIT(1),                                      1431
*      2 * CHAR(8) INIT('INACTIVE'),                               1431
*      2 * FIXED(31) INIT(0);                                      1431
*   DCL                                                            1432
*     1 ITYSUB BDY(WORD) STATIC LOCAL,                             1432
*      2 * FIXED(15) INIT(2),                                      1432
*      2 * FIXED(15) INIT(12),                                     1432
*      2 * CHAR(8) INIT('YES'),                                    1432
*      2 * FIXED(31) INIT(1),                                      1432
*      2 * CHAR(8) INIT('NO'),                                     1432
*      2 * FIXED(31) INIT(0);                                      1432
*   DCL                                                            1433
*     1 PUTSUB BDY(WORD) STATIC LOCAL,                             1433
*      2 * FIXED(15) INIT(3),                                      1433
*      2 * FIXED(15) INIT(12),                                     1433
*      2 * CHAR(8) INIT('1'),                                      1433
*      2 * FIXED(31) INIT(0),                                      1433
*      2 * CHAR(8) INIT('2'),                                      1433
*      2 * FIXED(31) INIT(1),                                      1433
*      2 * CHAR(8) INIT('4'),                                      1433
*      2 * FIXED(31) INIT(2);                                      1433
*   DCL                                                            1434
*     1 BTHSUB BDY(WORD) STATIC LOCAL,                             1434
*      2 * FIXED(15) INIT(2),                                      1434
*      2 * FIXED(15) INIT(12),                                     1434
*      2 * CHAR(8) INIT('YES'),                                    1434
*      2 * FIXED(31) INIT(1),                                      1434
*      2 * CHAR(8) INIT('NO'),                                     1434
*      2 * FIXED(31) INIT(0);                                      1434
*                                                                  1435
*/* TPEPILOG                                                         */
*                                                                  1435
*   GEN(PRINT OFF);                                                1435
         PRINT OFF
*   DECLARE                                                        1436
*     EMCR0 PTR REG(0),                                            1436
*     EMCR1 PTR REG(1),                                            1436
*     EMCR2 PTR REG(2),                                            1436
*     EMCR3 PTR REG(3),                                            1436
*     EMCR4 PTR REG(4),                                            1436
*     EMCR5 PTR REG(5),                                            1436
*     EMCR6 PTR REG(6),                                            1436
*     EMCR7 PTR REG(7),                                            1436
*     EMCR8 PTR REG(8),                                            1436
*     EMCR9 PTR REG(9),                                            1436
*     EMCR10 PTR REG(10),                                          1436
*     EMCR11 PTR REG(11),                                          1436
*     EMCR12 PTR REG(12),                                          1436
*     EMCR13 PTR REG(13),                                          1436
*     EMCR14 PTR REG(14),                                          1436
*     EMCR15 PTR REG(15);                                          1436
*   GEN(PRINT ON);                                                 1437
*                                                                  1437
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1438
*   END ISTSDCPU                                                   1438
*                                                                  1438
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  1438
*       ;                                                          1438
@EL00001 DS    0H                                                  1438
@EF00001 DS    0H                                                  1438
@ER00001 LM    @14,@12,12(@13)                                     1438
         BR    @14                                                 1438
@DATA    DS    0H
@CH00064 DC    H'3'
@CH00052 DC    H'4'
@CH00285 DC    H'5'
@CH00036 DC    H'8'
@CH00033 DC    H'12'
@CH03094 DC    H'255'
@CH03297 DC    XL2'100'
@DATD    DSECT
         DS    0F
ISTSDCPU CSECT
         DS    0F
@CF00039 DC    F'1'
@CH00039 EQU   @CF00039+2
@CF00234 DC    F'2'
@CH00234 EQU   @CF00234+2
@CF03119 DC    XL4'FFFFFFFF'
@CF02158 DC    XL4'FFFF'
@DATD    DSECT
         DS    0D
CVTPTR   DS    A
KWDTBPTR DS    A
GPR1SAVE DS    F
SAVMLCKW DS    A
CVBNUM   DS    FL4
         ORG   CVBNUM
@NM00037 DS    CL2
CVBNUM1  DS    AL2
         ORG   CVBNUM+4
RC       DS    H
         DS    CL2
STAIDWKA DS    CL8
         ORG   STAIDWKA
@NM00035 DS    FL4
IDNUMWKA DS    FL4
         ORG   IDNUMWKA
IDBLKWKA DS    FL2
@NM00036 DS    FL2
         ORG   STAIDWKA+8
FLAGS    DS    BL1
         ORG   FLAGS
EXITSW   DS    BL1
INVALSW  EQU   FLAGS+0
CUAFTPT  EQU   FLAGS+0
BLKFTPT  EQU   FLAGS+0
NUMFTPT  EQU   FLAGS+0
         ORG   FLAGS+1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCPU CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02910 DC    V(ISTSDCC1)
@CV02911 DC    V(ISTSDCC2)
@CV02912 DC    V(ISTSDCC4)
@CV02913 DC    V(ISTSDCP6)
@CV02914 DC    V(ISTINCPH)
@CV02915 DC    V(ISTSDCRS)
@CV02916 DC    V(ISTSDCIN)
@CV02917 DC    V(ISTSDCP7)
@CV03403 DC    V(ISTSDCR1)
@CV03401 DC    V(ISTSDCC5)
@CV03402 DC    V(ISTSDCC6)
         DS    0D
CMZA0054 DS    FL4
         ORG   CMZA0054
@NM00038 DC    AL1(96)
@NM00039 DC    AL1(96)
@NM00040 DC    AL1(229)
@NM00041 DC    XL1'00'
         ORG   CMZA0054+4
@CC02923 DC    C'        '
@CC03383 DC    C'USSSCS  '
@CC03384 DC    C'USS3270 '
@CC03385 DC    C'FSS     '
PUXKWTBL DS    CL30
         ORG   PUXKWTBL
@NM00049 DC    H'2'
@NM00050 DC    H'13'
@NM00051 DC    CL8'MAXLU'
@NM00052 DC    XL1'7'
@NM00053 DC    AL4(PUMAXLU)
@NM00054 DC    CL8'PUTYPE'
@NM00055 DC    XL1'06'
@NM00056 DC    VL4(ISTSDCR1)
         ORG   PUXKWTBL+30
         DS    CL2
LPUKWTBL DS    CL173
         ORG   LPUKWTBL
@NM00057 DC    H'13'
@NM00058 DC    H'13'
@NM00059 DC    CL8'BUFLIM'
@NM00060 DC    XL1'8'
@NM00061 DC    AL4(PUBFLIM)
@NM00062 DC    CL8'CUADDR'
@NM00063 DC    XL1'4'
@NM00064 DC    AL4(PUCUADDR)
@NM00065 DC    CL8'DISCNT'
@NM00066 DC    XL1'2'
@NM00067 DC    AL4(PUDISC)
@NM00068 DC    CL8'ISTATUS'
@NM00069 DC    XL1'2'
@NM00070 DC    AL4(PUISTU)
@NM00071 DC    CL8'LOGAPPL'
@NM00072 DC    XL1'33'
@NM00073 DC    AL4(PULOGAPL)
@NM00074 DC    CL8'LOGTAB'
@NM00075 DC    XL1'33'
@NM00076 DC    AL4(PULOGTAB)
@NM00077 DC    CL8'LUTYPE'
@NM00078 DC    XL1'8'
@NM00079 DC    AL4(PULUTYPE)
@NM00080 DC    CL8'MAXBFRU'
@NM00081 DC    XL1'8'
@NM00082 DC    AL4(PUMAXBFR)
@NM00083 DC    CL8'MODETAB'
@NM00084 DC    XL1'33'
@NM00085 DC    AL4(PUMODTAB)
@NM00086 DC    CL8'PUTYPE'
@NM00087 DC    XL1'7'
@NM00088 DC    AL4(PUTYPE)
@NM00089 DC    CL8'SSCPFM'
@NM00090 DC    XL1'33'
@NM00091 DC    AL4(PUSSCPFM)
@NM00092 DC    CL8'USSTAB'
@NM00093 DC    XL1'33'
@NM00094 DC    AL4(PUUSSTAB)
@NM00095 DC    CL8'VPACING'
@NM00096 DC    XL1'8'
@NM00097 DC    VL4(ISTSDCP6)
         ORG   LPUKWTBL+173
         DS    CL3
PUKWTBL  DS    CL316
         ORG   PUKWTBL
@NM00098 DC    H'24'
@NM00099 DC    H'13'
@NM00100 DC    CL8'ADDR'
@NM00101 DC    XL1'24'
@NM00102 DC    AL4(PUADDR)
@NM00103 DC    CL8'BATCH'
@NM00104 DC    XL1'2'
@NM00105 DC    AL4(PUBTCH)
@NM00106 DC    CL8'BNNSUP'
@NM00107 DC    XL1'2'
@NM00108 DC    AL4(PUBNNS)
@NM00109 DC    CL8'BUFLIM'
@NM00110 DC    XL1'8'
@NM00111 DC    AL4(PUBFLIM)
@NM00112 DC    CL8'CUTYPE'
@NM00113 DC    XL1'33'
@NM00114 DC    AL4(PUCUTYPE)
@NM00115 DC    CL8'DISCNT'
@NM00116 DC    XL1'2'
@NM00117 DC    AL4(PUDISC)
@NM00118 DC    CL8'IDBLK'
@NM00119 DC    XL1'24'
@NM00120 DC    AL4(PUIDBLK)
@NM00121 DC    CL8'IDNUM'
@NM00122 DC    XL1'24'
@NM00123 DC    AL4(PUIDNUM)
@NM00124 DC    CL8'IRETRY'
@NM00125 DC    XL1'2'
@NM00126 DC    AL4(PUITRY)
@NM00127 DC    CL8'ISTATUS'
@NM00128 DC    XL1'2'
@NM00129 DC    AL4(PUISTU)
@NM00130 DC    CL8'LOGAPPL'
@NM00131 DC    XL1'33'
@NM00132 DC    AL4(PULOGAPL)
@NM00133 DC    CL8'LOGTAB'
@NM00134 DC    XL1'33'
@NM00135 DC    AL4(PULOGTAB)
@NM00136 DC    CL8'LUTYPE'
@NM00137 DC    XL1'8'
@NM00138 DC    AL4(PULUTYPE)
@NM00139 DC    CL8'MAXDATA'
@NM00140 DC    XL1'44'
@NM00141 DC    AL4(PUMAXDAT)
@NM00142 DC    CL8'MAXPATH'
@NM00143 DC    XL1'44'
@NM00144 DC    AL4(PUMAXPAT)
@NM00145 DC    CL8'MAXOUT'
@NM00146 DC    XL1'7'
@NM00147 DC    AL4(PUMAXOUT)
@NM00148 DC    CL8'MODETAB'
@NM00149 DC    XL1'33'
@NM00150 DC    AL4(PUMODTAB)
@NM00151 DC    CL8'PACING'
@NM00152 DC    XL1'8'
@NM00153 DC    VL4(ISTSDCP7)
@NM00154 DC    CL8'PASSLIM'
@NM00155 DC    XL1'7'
@NM00156 DC    AL4(PUPASSLM)
@NM00157 DC    CL8'PUTYPE'
@NM00158 DC    XL1'7'
@NM00159 DC    AL4(PUTYPE)
@NM00160 DC    CL8'RETRIES'
@NM00161 DC    XL1'6'
@NM00162 DC    VL4(ISTSDCR1)
@NM00163 DC    CL8'SSCPFM'
@NM00164 DC    XL1'33'
@NM00165 DC    AL4(PUSSCPFM)
@NM00166 DC    CL8'USSTAB'
@NM00167 DC    XL1'33'
@NM00168 DC    AL4(PUUSSTAB)
@NM00169 DC    CL8'VPACING'
@NM00170 DC    XL1'8'
@NM00171 DC    VL4(ISTSDCP6)
         ORG   PUKWTBL+316
PREKWTBL DS    CL17
         ORG   PREKWTBL
@NM00044 DC    H'1'
@NM00045 DC    H'13'
@NM00046 DC    CL8'PUTYPE'
@NM00047 DC    XL1'2'
@NM00048 DC    AL4(PUPUTP)
         ORG   PREKWTBL+17
CMZP0011 DS    CL4
         ORG   CMZP0011
CMZL0011 DC    AL1(4)
CMZE0011 DC    AL1(6)
CMZA0011 DC    CL1'6'
CMZS0011 DC    AL1(0)
         ORG   CMZP0011+4
CMZP0012 DS    CL4
         ORG   CMZP0012
CMZL0012 DC    AL1(5)
CMZE0012 DC    AL1(4)
CMZA0012 DC    CL1'6'
CMZS0012 DC    AL1(0)
         ORG   CMZP0012+4
CMZP0014 DS    CL4
         ORG   CMZP0014
CMZL0014 DC    AL1(5)
CMZE0014 DC    AL1(4)
CMZA0014 DC    CL1'2'
CMZS0014 DC    AL1(0)
         ORG   CMZP0014+4
CMZP0017 DS    CL4
         ORG   CMZP0017
CMZL0017 DC    AL1(4)
CMZE0017 DC    AL1(4)
CMZA0017 DC    CL1'1'
CMZS0017 DC    AL1(0)
         ORG   CMZP0017+4
CMZP0019 DS    CL4
         ORG   CMZP0019
CMZL0019 DC    AL1(4)
CMZE0019 DC    AL1(6)
CMZA0019 DC    CL1'6'
CMZS0019 DC    AL1(0)
         ORG   CMZP0019+4
CMZP0020 DS    CL4
         ORG   CMZP0020
CMZL0020 DC    AL1(4)
CMZE0020 DC    AL1(4)
CMZA0020 DC    CL1'6'
CMZS0020 DC    AL1(0)
         ORG   CMZP0020+4
CMZP0022 DS    CL11
         ORG   CMZP0022
CMZL0022 DC    AL1(5)
CMZE0022 DC    AL1(4)
CMZA0022 DC    CL1'6'
CMZS0022 DC    AL1(7)
CMZM0022 DC    CL7'ISTATUS'
         ORG   CMZP0022+11
CMZP0023 DS    CL11
         ORG   CMZP0023
CMZL0023 DC    AL1(4)
CMZE0023 DC    AL1(8)
CMZA0023 DC    CL1'6'
CMZS0023 DC    AL1(7)
CMZM0023 DC    CL7'MAXDATA'
         ORG   CMZP0023+11
CMZP0024 DS    CL8
         ORG   CMZP0024
CMZL0024 DC    AL1(4)
CMZE0024 DC    AL1(8)
CMZA0024 DC    CL1'6'
CMZS0024 DC    AL1(4)
CMZM0024 DC    CL4'ADDR'
         ORG   CMZP0024+8
CMZP0025 DS    CL9
         ORG   CMZP0025
CMZL0025 DC    AL1(4)
CMZE0025 DC    AL1(8)
CMZA0025 DC    CL1'6'
CMZS0025 DC    AL1(5)
CMZM0025 DC    CL5'IDBLK'
         ORG   CMZP0025+9
CMZP0026 DS    CL9
         ORG   CMZP0026
CMZL0026 DC    AL1(4)
CMZE0026 DC    AL1(8)
CMZA0026 DC    CL1'6'
CMZS0026 DC    AL1(5)
CMZM0026 DC    CL5'IDNUM'
         ORG   CMZP0026+9
CMZP0027 DS    CL10
         ORG   CMZP0027
CMZL0027 DC    AL1(5)
CMZE0027 DC    AL1(4)
CMZA0027 DC    CL1'2'
CMZS0027 DC    AL1(6)
CMZM0027 DC    CL6'BNNSUP'
         ORG   CMZP0027+10
CMZP0028 DS    CL11
         ORG   CMZP0028
CMZL0028 DC    AL1(5)
CMZE0028 DC    AL1(4)
CMZA0028 DC    CL1'2'
CMZS0028 DC    AL1(7)
CMZM0028 DC    CL7'PASSLIM'
         ORG   CMZP0028+11
CMZP0030 DS    CL4
         ORG   CMZP0030
CMZL0030 DC    AL1(5)
CMZE0030 DC    AL1(7)
CMZA0030 DC    CL1'1'
CMZS0030 DC    AL1(0)
         ORG   CMZP0030+4
CMZP0031 DS    CL4
         ORG   CMZP0031
CMZL0031 DC    AL1(5)
CMZE0031 DC    AL1(4)
CMZA0031 DC    CL1'6'
CMZS0031 DC    AL1(0)
         ORG   CMZP0031+4
CMZP0032 DS    CL4
         ORG   CMZP0032
CMZL0032 DC    AL1(5)
CMZE0032 DC    AL1(4)
CMZA0032 DC    CL1'2'
CMZS0032 DC    AL1(0)
         ORG   CMZP0032+4
CMZP0033 DS    CL4
         ORG   CMZP0033
CMZL0033 DC    AL1(5)
CMZE0033 DC    AL1(4)
CMZA0033 DC    CL1'2'
CMZS0033 DC    AL1(0)
         ORG   CMZP0033+4
CMZP0034 DS    CL4
         ORG   CMZP0034
CMZL0034 DC    AL1(5)
CMZE0034 DC    AL1(4)
CMZA0034 DC    CL1'2'
CMZS0034 DC    AL1(0)
         ORG   CMZP0034+4
CMZP0035 DS    CL4
         ORG   CMZP0035
CMZL0035 DC    AL1(5)
CMZE0035 DC    AL1(7)
CMZA0035 DC    CL1'1'
CMZS0035 DC    AL1(0)
         ORG   CMZP0035+4
CMZP0036 DS    CL4
         ORG   CMZP0036
CMZL0036 DC    AL1(5)
CMZE0036 DC    AL1(7)
CMZA0036 DC    CL1'1'
CMZS0036 DC    AL1(0)
         ORG   CMZP0036+4
CMZP0037 DS    CL4
         ORG   CMZP0037
CMZL0037 DC    AL1(5)
CMZE0037 DC    AL1(4)
CMZA0037 DC    CL1'6'
CMZS0037 DC    AL1(0)
         ORG   CMZP0037+4
CMZP0038 DS    CL4
         ORG   CMZP0038
CMZL0038 DC    AL1(5)
CMZE0038 DC    AL1(4)
CMZA0038 DC    CL1'6'
CMZS0038 DC    AL1(0)
         ORG   CMZP0038+4
CMZP0039 DS    CL4
         ORG   CMZP0039
CMZL0039 DC    AL1(4)
CMZE0039 DC    AL1(4)
CMZA0039 DC    CL1'1'
CMZS0039 DC    AL1(0)
         ORG   CMZP0039+4
CMZP0040 DS    CL4
         ORG   CMZP0040
CMZL0040 DC    AL1(5)
CMZE0040 DC    AL1(4)
CMZA0040 DC    CL1'2'
CMZS0040 DC    AL1(0)
         ORG   CMZP0040+4
CMZP0041 DS    CL4
         ORG   CMZP0041
CMZL0041 DC    AL1(5)
CMZE0041 DC    AL1(7)
CMZA0041 DC    CL1'1'
CMZS0041 DC    AL1(0)
         ORG   CMZP0041+4
CMZP0042 DS    CL4
         ORG   CMZP0042
CMZL0042 DC    AL1(5)
CMZE0042 DC    AL1(4)
CMZA0042 DC    CL1'6'
CMZS0042 DC    AL1(0)
         ORG   CMZP0042+4
CMZP0043 DS    CL4
         ORG   CMZP0043
CMZL0043 DC    AL1(5)
CMZE0043 DC    AL1(7)
CMZA0043 DC    CL1'1'
CMZS0043 DC    AL1(0)
         ORG   CMZP0043+4
CMZP0044 DS    CL4
         ORG   CMZP0044
CMZL0044 DC    AL1(5)
CMZE0044 DC    AL1(4)
CMZA0044 DC    CL1'6'
CMZS0044 DC    AL1(0)
         ORG   CMZP0044+4
CMZP0045 DS    CL4
         ORG   CMZP0045
CMZL0045 DC    AL1(5)
CMZE0045 DC    AL1(4)
CMZA0045 DC    CL1'2'
CMZS0045 DC    AL1(0)
         ORG   CMZP0045+4
CMZP0046 DS    CL4
         ORG   CMZP0046
CMZL0046 DC    AL1(5)
CMZE0046 DC    AL1(4)
CMZA0046 DC    CL1'2'
CMZS0046 DC    AL1(0)
         ORG   CMZP0046+4
CMZP0047 DS    CL4
         ORG   CMZP0047
CMZL0047 DC    AL1(4)
CMZE0047 DC    AL1(4)
CMZA0047 DC    CL1'1'
CMZS0047 DC    AL1(0)
         ORG   CMZP0047+4
CMZP0048 DS    CL4
         ORG   CMZP0048
CMZL0048 DC    AL1(4)
CMZE0048 DC    AL1(4)
CMZA0048 DC    CL1'1'
CMZS0048 DC    AL1(0)
         ORG   CMZP0048+4
CMZP0049 DS    CL4
         ORG   CMZP0049
CMZL0049 DC    AL1(5)
CMZE0049 DC    AL1(7)
CMZA0049 DC    CL1'1'
CMZS0049 DC    AL1(0)
         ORG   CMZP0049+4
CMZP0050 DS    CL4
         ORG   CMZP0050
CMZL0050 DC    AL1(5)
CMZE0050 DC    AL1(7)
CMZA0050 DC    CL1'1'
CMZS0050 DC    AL1(0)
         ORG   CMZP0050+4
CMZP0051 DS    CL4
         ORG   CMZP0051
CMZL0051 DC    AL1(5)
CMZE0051 DC    AL1(4)
CMZA0051 DC    CL1'2'
CMZS0051 DC    AL1(0)
         ORG   CMZP0051+4
CMZP0052 DS    CL4
         ORG   CMZP0052
CMZL0052 DC    AL1(5)
CMZE0052 DC    AL1(4)
CMZA0052 DC    CL1'6'
CMZS0052 DC    AL1(0)
         ORG   CMZP0052+4
CMZP0053 DS    CL4
         ORG   CMZP0053
CMZL0053 DC    AL1(5)
CMZE0053 DC    AL1(4)
CMZA0053 DC    CL1'2'
CMZS0053 DC    AL1(0)
         ORG   CMZP0053+4
CMZAA072 DC    CL4'303I'
CMZP0081 DS    CL4
         ORG   CMZP0081
CMZL0081 DC    AL1(5)
CMZE0081 DC    AL1(4)
CMZA0081 DC    CL1'6'
CMZS0081 DC    AL1(0)
         ORG   CMZP0081+4
CMZP0082 DS    CL4
         ORG   CMZP0082
CMZL0082 DC    AL1(4)
CMZE0082 DC    AL1(4)
CMZA0082 DC    CL1'1'
CMZS0082 DC    AL1(0)
         ORG   CMZP0082+4
CMZP0083 DS    CL4
         ORG   CMZP0083
CMZL0083 DC    AL1(4)
CMZE0083 DC    AL1(4)
CMZA0083 DC    CL1'1'
CMZS0083 DC    AL1(0)
         ORG   CMZP0083+4
CMZP0084 DS    CL4
         ORG   CMZP0084
CMZL0084 DC    AL1(5)
CMZE0084 DC    AL1(4)
CMZA0084 DC    CL1'2'
CMZS0084 DC    AL1(0)
         ORG   CMZP0084+4
CMZP0085 DS    CL4
         ORG   CMZP0085
CMZL0085 DC    AL1(4)
CMZE0085 DC    AL1(4)
CMZA0085 DC    CL1'1'
CMZS0085 DC    AL1(0)
         ORG   CMZP0085+4
         DS    CL2
PUIRB    DS    CL52
         ORG   PUIRB
@NM00172 DC    H'6'
@NM00173 DC    H'8'
PUBNNS   DC    AL4(PUBNNSUP)
@NM00174 DC    AL4(BNNSUB)
PUBTCH   DC    AL4(PUBATCH)
@NM00175 DC    AL4(BTHSUB)
PUDISC   DC    AL4(PUDISCNT)
@NM00176 DC    AL4(DISSUB)
PUISTU   DC    AL4(PUISTATU)
@NM00177 DC    AL4(ISTSUB)
PUITRY   DC    AL4(PUIRETRY)
@NM00178 DC    AL4(ITYSUB)
PUPUTP   DC    AL4(PUPUTYPE)
@NM00179 DC    AL4(PUTSUB)
         ORG   PUIRB+52
BNNSUB   DS    CL28
         ORG   BNNSUB
@NM00180 DC    H'2'
@NM00181 DC    H'12'
@NM00182 DC    CL8'3270'
@NM00183 DC    F'1'
@NM00184 DC    CL8'STANDARD'
@NM00185 DC    F'0'
         ORG   BNNSUB+28
BTHSUB   DS    CL28
         ORG   BTHSUB
@NM00212 DC    H'2'
@NM00213 DC    H'12'
@NM00214 DC    CL8'YES'
@NM00215 DC    F'1'
@NM00216 DC    CL8'NO'
@NM00217 DC    F'0'
         ORG   BTHSUB+28
DISSUB   DS    CL28
         ORG   DISSUB
@NM00186 DC    H'2'
@NM00187 DC    H'12'
@NM00188 DC    CL8'YES'
@NM00189 DC    F'1'
@NM00190 DC    CL8'NO'
@NM00191 DC    F'0'
         ORG   DISSUB+28
ISTSUB   DS    CL28
         ORG   ISTSUB
@NM00192 DC    H'2'
@NM00193 DC    H'12'
@NM00194 DC    CL8'ACTIVE'
@NM00195 DC    F'1'
@NM00196 DC    CL8'INACTIVE'
@NM00197 DC    F'0'
         ORG   ISTSUB+28
ITYSUB   DS    CL28
         ORG   ITYSUB
@NM00198 DC    H'2'
@NM00199 DC    H'12'
@NM00200 DC    CL8'YES'
@NM00201 DC    F'1'
@NM00202 DC    CL8'NO'
@NM00203 DC    F'0'
         ORG   ITYSUB+28
PUTSUB   DS    CL40
         ORG   PUTSUB
@NM00204 DC    H'3'
@NM00205 DC    H'12'
@NM00206 DC    CL8'1'
@NM00207 DC    F'0'
@NM00208 DC    CL8'2'
@NM00209 DC    F'1'
@NM00210 DC    CL8'4'
@NM00211 DC    F'2'
         ORG   PUTSUB+40
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GETSSIZE EQU   @08
SAVSAV   EQU   @08
RPHPTR   EQU   @01
GPR0     EQU   @00
GPR1     EQU   @01
PHR1REG  EQU   @02
ATCVTPTR EQU   @03
MLCAREG  EQU   @05
RNCAREG  EQU   @06
ENTRYPTR EQU   @07
WORKREG  EQU   @08
SAVREG   EQU   @13
GPR14    EQU   @14
GPR15    EQU   @15
CMZR0011 EQU   @01
CMZR0012 EQU   @01
CMZR0014 EQU   @01
CMZR0017 EQU   @01
CMZR0019 EQU   @01
CMZR0020 EQU   @01
CMZR0022 EQU   @01
CMZR0023 EQU   @01
CMZR0024 EQU   @01
CMZR0025 EQU   @01
CMZR0026 EQU   @01
CMZR0027 EQU   @01
CMZR0028 EQU   @01
CMZR0030 EQU   @01
CMZR0031 EQU   @01
CMZR0032 EQU   @01
CMZR0033 EQU   @01
CMZR0034 EQU   @01
CMZR0035 EQU   @01
CMZR0036 EQU   @01
CMZR0037 EQU   @01
CMZR0038 EQU   @01
CMZR0039 EQU   @01
CMZR0040 EQU   @01
CMZR0041 EQU   @01
CMZR0042 EQU   @01
CMZR0043 EQU   @01
CMZR0044 EQU   @01
CMZR0045 EQU   @01
CMZR0046 EQU   @01
CMZR0047 EQU   @01
CMZR0048 EQU   @01
CMZR0049 EQU   @01
CMZR0050 EQU   @01
CMZR0051 EQU   @01
CMZR0052 EQU   @01
CMZR0053 EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
REG1072  EQU   @01
EMCR13   EQU   @13
REG15072 EQU   @15
CMZR0081 EQU   @01
CMZR0082 EQU   @01
CMZR0083 EQU   @01
CMZR0084 EQU   @01
CMZR0085 EQU   @01
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR04F   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
ATCLCPTR EQU   1032
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTPHROA EQU   0
PHROADTA EQU   ISTPHROA+4
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00006 EQU   LOKCHNG+2
ISTRPRE  EQU   0
RPRCOMID EQU   ISTRPRE+8
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPBFLIM EQU   ISTRCPRE+90
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
RCPLGNAP EQU   RCPLGNIN
RCPLGNCT EQU   RCPLGNIN+8
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNCTECL EQU   ISTRRN+162
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
RGPADIL  EQU   RGPFLG
RGPCTECL EQU   ISTRGP+76
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNCTECL EQU   ISTRLN+76
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCTYPE  EQU   ISTRCC+72
RCCFLAG  EQU   ISTRCC+73
RCCRBISA EQU   RCCFLAG
RCCFLAGB EQU   ISTRCC+74
RCCIRETR EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCIDPUT EQU   RCCID48
RCCCRFLG EQU   ISTRCC+108
RCCPATHT EQU   ISTRCC+120
RCCMXDAT EQU   ISTRCC+128
RCCMXOUT EQU   ISTRCC+130
RCCPASSL EQU   ISTRCC+131
RCCADDR  EQU   ISTRCC+132
ISTRLU   EQU   0
RLUTYPE  EQU   ISTRLU+124
RLUFLAG  EQU   ISTRLU+125
RLURBISA EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLUCRFLG EQU   ISTRLU+126
RLUSSCFM EQU   ISTRLU+127
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUUSSNM EQU   RLUUSSTB
RLUMODET EQU   ISTRLU+152
RLUMODEN EQU   RLUMODET
ISTRPX   EQU   0
RPXMAXLU EQU   ISTRPX+76
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDARBISA EQU   RDAFLAG
RDAUCBAD EQU   RDAADR+1
RDACTPCC EQU   ISTRDA+79
RDADFCUA EQU   ISTRDA+80
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTMLCA  EQU   0
MLCRPH   EQU   ISTMLCA+4
MLCFLAGS EQU   ISTMLCA+16
MLCKWD   EQU   ISTMLCA+24
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCERBF2 EQU   MLCERBF+8
MLCERBF3 EQU   MLCERBF+32
MLCCNFG2 EQU   MLCERBF3
MLCPTRS  EQU   ISTMLCA+96
MLCPTR5  EQU   MLCPTRS+20
MLCPTR6  EQU   MLCPTRS+24
MLCNCSPL EQU   MLCPTRS+36
MLCSAV4  EQU   ISTMLCA+524
MLCDAT4  EQU   ISTMLCA+596
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
ISTRNCA  EQU   0
RNCRN    EQU   ISTRNCA
RNCGP    EQU   ISTRNCA+16
RNCLN    EQU   ISTRNCA+20
RNCCC    EQU   ISTRNCA+28
RNCDA    EQU   ISTRNCA+52
RNCPX    EQU   ISTRNCA+56
RNCGPU   EQU   ISTRNCA+122
RNCGCLPU EQU   ISTRNCA+126
RNCGRNBD EQU   ISTRNCA+126
RNCGLSBD EQU   ISTRNCA+126
RNCGPUIN EQU   ISTRNCA+127
RNCRNMDL EQU   ISTRNCA+2984
RNCTRMDL EQU   RNCRNMDL
RNCLUMDL EQU   RNCTRMDL
RNCLNMDL EQU   RNCLUMDL
RNCSWMDL EQU   RNCLNMDL
RNCLSMDL EQU   RNCSWMDL
RNCCLMDL EQU   RNCLSMDL
RNCDAMDL EQU   RNCCLMDL
RNCCMMDL EQU   ISTRNCA+3240
RNCINMDL EQU   RNCCMMDL
RNCCCMDL EQU   RNCINMDL
RNCGPMDL EQU   RNCCCMDL
RNCPXMDL EQU   RNCGPMDL
RNCWORK1 EQU   ISTRNCA+3844
RNCPHR1  EQU   RNCWORK1
RNCWORK2 EQU   ISTRNCA+5892
RNCPHR2  EQU   RNCWORK2
RNCWORK3 EQU   ISTRNCA+7940
ISTLCST  EQU   0
LCSTTYPE EQU   ISTLCST+12
LCSTACR  EQU   ISTLCST+18
ISTDITHD EQU   0
ISTDHDVI EQU   0
DHDDIVTH EQU   ISTDHDVI+12
ISTDDTVI EQU   0
ISTRNCDT EQU   0
ISTRNCGT EQU   0
ISTRNCPT EQU   0
RNCPTLN  EQU   ISTRNCPT
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCGTSTR EQU   ATCCOM+164
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00025 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTPOHD  EQU   0
POHSTAT  EQU   ISTPOHD+1
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTNCSPL EQU   0
@NM00028 EQU   ISTNCSPL
NCSPFX   EQU   @NM00028
NCSPLVBF EQU   ISTNCSPL+18
NCSPLVFL EQU   ISTNCSPL+20
NCSPLVF1 EQU   ISTNCSPL+21
NCSPLCMD EQU   ISTNCSPL+60
NCSCMDA  EQU   NCSPLCMD
NCSCRFLG EQU   ISTNCSPL+67
NCSPLRAD EQU   ISTNCSPL+144
NCSIOCID EQU   ISTNCSPL+148
NCSPLCID EQU   NCSIOCID
NCSPLFSB EQU   ISTNCSPL+168
NCSPLFL1 EQU   ISTNCSPL+176
NCSPLFL2 EQU   ISTNCSPL+177
NCSPLFL3 EQU   ISTNCSPL+178
NCSPLFL4 EQU   ISTNCSPL+179
NCSPLFL5 EQU   ISTNCSPL+181
NCSPLAPP EQU   ISTNCSPL+216
NCSSENSE EQU   ISTNCSPL+244
NCSCRMSK EQU   ISTNCSPL+268
NCSCHKPT EQU   NCSCRMSK
NCSCRMOD EQU   NCSCRMSK+2
NCSPLSID EQU   ISTNCSPL+271
NCSPLSTA EQU   NCSPLSID
NCSPLPHD EQU   NCSPLSID+1
NCSAPP   EQU   0
NCSAPBUE EQU   NCSAPP+88
NCSUSSRU EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
PARMHDLR EQU   0
SAVAREA  EQU   0
SAVCLLR  EQU   SAVAREA+4
SAVCLLD  EQU   SAVAREA+8
@NM00042 EQU   0
CMZID072 EQU   @NM00042
@NM00043 EQU   @NM00042+4
CMZRL072 EQU   @NM00043
CMZRA072 EQU   @NM00043+1
CMZEA072 EQU   @NM00042+8
CMZVP072 EQU   @NM00042+12
CMZSA072 EQU   0
CMTA072  EQU   0
PHRFN1OA EQU   PHROADTA
PHRFN2OA EQU   PHROADTA
PHRF2VAL EQU   PHRFN2OA+4
PHRF2FLG EQU   PHRF2VAL+2
PHRF34OA EQU   PHROADTA
PHRF34NS EQU   PHRF34OA
PHRF34EN EQU   PHRF34OA+4
PHRF34VF EQU   PHRF34EN
PHRF34SL EQU   PHRF34EN+2
PHRF34SP EQU   PHRF34EN+4
PHRFN5OA EQU   PHROADTA
PHRF5ENT EQU   PHRFN5OA+4
PHRFN7OA EQU   PHROADTA
PHRF7NUM EQU   PHRFN7OA+4
PHRFN8OA EQU   PHROADTA
PHRF8NSP EQU   PHRFN8OA
PHRF8ENT EQU   PHRFN8OA+4
PHRF8FLG EQU   PHRF8ENT
PHRF8DFT EQU   PHRF8FLG
PHRF8NUM EQU   PHRF8ENT+1
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00004 EQU   PHRF8FLG
PHRF7NSP EQU   PHRFN7OA
PHRF5SPT EQU   PHRF5ENT+4
PHRF5SL  EQU   PHRF5ENT+2
@NM00003 EQU   PHRF5ENT+1
PHRF5VF  EQU   PHRF5ENT
PHRF5NSP EQU   PHRFN5OA
@NM00002 EQU   PHRF34EN+1
PHRF2MSK EQU   PHRF2VAL+3
PHRF2MV  EQU   PHRF2FLG
PHRF2OFF EQU   PHRF2FLG
PHRF2ON  EQU   PHRF2FLG
@NM00001 EQU   PHRF2FLG
PHRF2TR  EQU   PHRF2FLG
PHRF2CL  EQU   PHRF2FLG
PHRF2LN  EQU   PHRF2FLG
PHRF2GP  EQU   PHRF2FLG
PHRF2OFS EQU   PHRF2VAL
PHRF2NVL EQU   PHRFN2OA
PHRF1SLN EQU   PHRFN1OA+4
PHRF1SAD EQU   PHRFN1OA
SAV12    EQU   SAVAREA+68
SAV11    EQU   SAVAREA+64
SAV10    EQU   SAVAREA+60
SAV9     EQU   SAVAREA+56
SAV8     EQU   SAVAREA+52
SAV7     EQU   SAVAREA+48
SAV6     EQU   SAVAREA+44
SAV5     EQU   SAVAREA+40
SAV4     EQU   SAVAREA+36
SAV3     EQU   SAVAREA+32
SAV2     EQU   SAVAREA+28
SAV1     EQU   SAVAREA+24
SAV0     EQU   SAVAREA+20
SAV15    EQU   SAVAREA+16
SAV14    EQU   SAVAREA+12
SAVRES   EQU   SAVAREA
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00034 EQU   CVTFIX+248
@NM00033 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
NCSRUITS EQU   NCSUSSRU+2
NCSRULEN EQU   NCSUSSRU
NCSAPPAB EQU   NCSAPP+608
NCSAPDAT EQU   NCSAPBUE+8
NCSAPRU  EQU   NCSAPBUE+3
NCSRSV04 EQU   NCSAPBUE
NCSAPEND EQU   NCSAPP+84
NCSAPTXT EQU   NCSAPP+76
NCSAPECB EQU   NCSAPP+72
NCSAPSA  EQU   NCSAPP
NCSPLPDB EQU   NCSPLSID+5
NCSPLNID EQU   NCSPLPHD
NCSPLPO  EQU   NCSPLSTA
NCSRSVD4 EQU   NCSPLSTA
NCSRSVD2 EQU   NCSCRMOD
NCSPTMOD EQU   NCSCRMOD
NCSAIMOD EQU   NCSCRMOD
NCSRSVD1 EQU   NCSCHKPT+1
NCSPTUSE EQU   NCSCHKPT+1
NCSRNME  EQU   NCSCHKPT+1
NCSCUA   EQU   NCSCHKPT+1
NCSANSMD EQU   NCSCHKPT+1
NCSLGMOD EQU   NCSCHKPT
NCSLGAPL EQU   NCSCHKPT
NCSDTRLM EQU   NCSCHKPT
NCSESLM  EQU   NCSCHKPT
NCSNRPL  EQU   NCSCHKPT
NCSPOLD  EQU   NCSCHKPT
NCSPACTV EQU   NCSCHKPT
NCSACTV  EQU   NCSCHKPT
NCSCRDTE EQU   ISTNCSPL+264
NCSPLRTY EQU   ISTNCSPL+263
NCSPLRH  EQU   ISTNCSPL+260
NCSUFMCB EQU   ISTNCSPL+256
NCSMGLPT EQU   ISTNCSPL+252
NCSCPWPT EQU   ISTNCSPL+248
NCSSENS2 EQU   NCSSENSE+2
NCSSNS2  EQU   NCSSENSE+1
NCSSNS1  EQU   NCSSENSE
NCSPLNSN EQU   ISTNCSPL+240
NCSPLMID EQU   ISTNCSPL+232
NCSPLPID EQU   ISTNCSPL+231
NCSPLGID EQU   ISTNCSPL+230
NCSPLSQN EQU   ISTNCSPL+228
NCSRNAME EQU   ISTNCSPL+220
NCSPLRUI EQU   ISTNCSPL+212
NCSPLRUO EQU   ISTNCSPL+208
NCSPLRRP EQU   ISTNCSPL+204
NCSPLWEL EQU   ISTNCSPL+200
NCSPLSPL EQU   ISTNCSPL+196
NCSPLP3  EQU   ISTNCSPL+192
NCSPLP2  EQU   ISTNCSPL+188
NCSPLP1  EQU   ISTNCSPL+184
NCSPLOLN EQU   ISTNCSPL+182
@NM00032 EQU   NCSPLFL5
NCSFORCE EQU   NCSPLFL5
NCSSDLK  EQU   NCSPLFL5
NCSSCPPS EQU   NCSPLFL5
NCSDLRSN EQU   ISTNCSPL+180
NCSPL2AP EQU   NCSPLFL4
NCSDSPN  EQU   NCSPLFL4
NCSDSPI  EQU   NCSPLFL4
NCSDSPA  EQU   NCSPLFL4
NCSDSPE  EQU   NCSPLFL4
NCSPLVID EQU   NCSPLFL4
NCSPLRSO EQU   NCSPLFL4
NCSDLNID EQU   NCSPLFL4
NCSEND   EQU   NCSPLFL3
NCSFINAL EQU   NCSPLFL3
NCSANS   EQU   NCSPLFL3
NCSPID   EQU   NCSPLFL3
NCSGID   EQU   NCSPLFL3
NCSPLANS EQU   NCSPLFL3
NCSEPP   EQU   NCSPLFL3
NCSPLMOM EQU   NCSPLFL3
NCSPLVIT EQU   NCSPLFL2
NCSPLVIS EQU   NCSPLFL2
NCSREMPO EQU   NCSPLFL2
NCSPLDS  EQU   NCSPLFL2
NCSOUFMC EQU   NCSPLFL2
NCSPLRIO EQU   NCSPLFL2
NCSPLRSF EQU   NCSPLFL2
NCSPLVDP EQU   NCSPLFL2
NCSPLPOS EQU   NCSPLFL1
NCSPL2CN EQU   NCSPLFL1
NCSPLAPU EQU   NCSPLFL1
NCSPLNON EQU   NCSPLFL1
NCSPLREQ EQU   NCSPLFL1
NCSPLEBN EQU   NCSPLFL1
NCSPLSOM EQU   NCSPLFL1
NCSPL2IN EQU   NCSPLFL1
NCSPLRCR EQU   ISTNCSPL+172
NCSPLECB EQU   ISTNCSPL+164
NCSPLRPH EQU   ISTNCSPL+160
NCSPLCVT EQU   ISTNCSPL+156
NCSPLWKA EQU   ISTNCSPL+152
NCSPLDAF EQU   NCSPLCID+2
NCSPLSAF EQU   NCSPLCID
NCSPLRCD EQU   NCSPLRAD+1
NCSLSCMD EQU   NCSPLRAD
NCSPLWRF EQU   ISTNCSPL+72
NCSPLWRE EQU   ISTNCSPL+68
NCSSTCMD EQU   NCSCRFLG
NCSUSRNF EQU   NCSCRFLG
NCSOPRQU EQU   NCSCRFLG
NCSCRDSE EQU   NCSCRFLG
NCSFMERP EQU   NCSCRFLG
NCSFMCLD EQU   NCSCRFLG
NCSPLCLD EQU   NCSCRFLG
NCSPLWRM EQU   NCSCRFLG
NCSPLUAD EQU   ISTNCSPL+64
NCSMSGSP EQU   ISTNCSPL+63
NCSNCPEP EQU   ISTNCSPL+62
NCSCMDB  EQU   NCSPLCMD+1
@NM00031 EQU   NCSCMDA
NCSPLUFM EQU   NCSCMDA
NCSPLFLO EQU   NCSCMDA
NCSPLSYN EQU   NCSCMDA
NCSPLCTL EQU   NCSCMDA
NCSPLSYS EQU   NCSCMDA
NCSPLLPT EQU   ISTNCSPL+56
NCSPLRPT EQU   ISTNCSPL+52
NCSCRPID EQU   ISTNCSPL+51
NCSCRCMD EQU   ISTNCSPL+50
NCSDLID  EQU   ISTNCSPL+44
NCSPLLID EQU   ISTNCSPL+36
NCSPLRID EQU   ISTNCSPL+28
NCSRRNPT EQU   ISTNCSPL+24
NCSIORC  EQU   ISTNCSPL+23
NCSPRMRC EQU   ISTNCSPL+22
NCSOVFMC EQU   NCSPLVF1
NCSRSV02 EQU   NCSPLVFL
NCSDACLK EQU   NCSPLVFL
NCSABCON EQU   NCSPLVFL
NCSDCONT EQU   NCSPLVFL
NCSVSTAT EQU   NCSPLVFL
NCSVDEL  EQU   NCSPLVFL
NCSVNCSA EQU   NCSPLVFL
NCSVBF16 EQU   NCSPLVBF+1
NCSVBF15 EQU   NCSPLVBF+1
NCSVBF14 EQU   NCSPLVBF+1
NCSVBF13 EQU   NCSPLVBF+1
NCSVBF12 EQU   NCSPLVBF+1
NCSVBF11 EQU   NCSPLVBF+1
NCSVBF10 EQU   NCSPLVBF+1
NCSVBF09 EQU   NCSPLVBF+1
NCSVBF08 EQU   NCSPLVBF
NCSVBF07 EQU   NCSPLVBF
NCSVBF06 EQU   NCSPLVBF
NCSVBF05 EQU   NCSPLVBF
NCSVBF04 EQU   NCSPLVBF
NCSVBF03 EQU   NCSPLVBF
NCSVBF02 EQU   NCSPLVBF
NCSVBF01 EQU   NCSPLVBF
NCSPLVCD EQU   ISTNCSPL+17
@NM00030 EQU   ISTNCSPL+16
NCSCRWKA EQU   NCSPFX+12
@NM00029 EQU   NCSPFX
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
POHID    EQU   ISTPOHD+2
POHGEN   EQU   POHSTAT
POHRREQ  EQU   POHSTAT
POHRSVD2 EQU   POHSTAT
POHCNTRL EQU   POHSTAT
POHLBL   EQU   POHSTAT
POHDATA  EQU   POHSTAT
POHEND   EQU   POHSTAT
POHRSVD1 EQU   ISTPOHD
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00027 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00026 EQU   @NM00025
ATCVTMAB EQU   @NM00025
@NM00024 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00023 EQU   ISTATCVT+819
@NM00022 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00021 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00020 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00019 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00018 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00017 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00016 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
RNCPT    EQU   ISTRNCPT+4
RNCGT    EQU   ISTRNCGT+4
RNCGTLN  EQU   ISTRNCGT
RNCDT    EQU   ISTRNCDT+4
RNCDTLN  EQU   ISTRNCDT
DDTASSOC EQU   ISTDDTVI+40
DDTRDTPT EQU   ISTDDTVI+36
DDTTRNM  EQU   ISTDDTVI+28
DDTBSCLN EQU   ISTDDTVI+27
DDTBSCID EQU   ISTDDTVI+4
DDTFWPTR EQU   ISTDDTVI
DHDGPPTR EQU   ISTDHDVI+32
DHDDVOFF EQU   ISTDHDVI+28
DHDDTPTR EQU   ISTDHDVI+24
DHDDHPTR EQU   ISTDHDVI+20
DHDRSVD  EQU   DHDDIVTH+6
DHDIDLEN EQU   DHDDIVTH+4
DHDNUMFE EQU   DHDDIVTH+2
DHDNUME  EQU   DHDDIVTH
DHDHNAME EQU   ISTDHDVI+4
DHDFWPTR EQU   ISTDHDVI
DITDITT  EQU   ISTDITHD+16
DITLEN   EQU   ISTDITHD+15
DITUNUSD EQU   ISTDITHD+12
DITLSTNM EQU   ISTDITHD+4
DITFWDPT EQU   ISTDITHD
LCSTCODE EQU   ISTLCST+19
LCSTACR3 EQU   LCSTACR
LCSTACR2 EQU   LCSTACR
LCSTACR1 EQU   LCSTACR
LCSTACR0 EQU   LCSTACR
LCSTLCCD EQU   LCSTTYPE+5
LCSTLCTP EQU   LCSTTYPE
LCSTNAME EQU   ISTLCST+4
LCSTFWDP EQU   ISTLCST
RNCWORD5 EQU   ISTRNCA+8084
RNCWORD4 EQU   ISTRNCA+8080
RNCWORD3 EQU   ISTRNCA+8076
RNCWORD2 EQU   ISTRNCA+8072
RNCWORD1 EQU   ISTRNCA+8068
RNCWORK4 EQU   ISTRNCA+8004
RNCLDPRM EQU   RNCWORK3
RNCOCPRM EQU   RNCPHR2
RNCLMDCB EQU   RNCPHR1
RNCDAT3  EQU   ISTRNCA+3788
RNCSAV3  EQU   ISTRNCA+3716
RNCDAT2  EQU   ISTRNCA+3660
RNCSAV2  EQU   ISTRNCA+3588
RNCDAT1  EQU   ISTRNCA+3532
RNCSAV1  EQU   ISTRNCA+3460
@NM00015 EQU   ISTRNCA+3456
RNCLXMDL EQU   RNCPXMDL
RNCDSMDL EQU   RNCDAMDL
RNCCCLU  EQU   ISTRNCA+2808
RNCCLTR  EQU   ISTRNCA+2596
RNCLNLU  EQU   ISTRNCA+2420
RNCLNTR  EQU   ISTRNCA+2208
RNCLNPX  EQU   ISTRNCA+2124
RNCLNCC  EQU   ISTRNCA+1976
RNCLNCL  EQU   ISTRNCA+1880
RNCGPLU  EQU   ISTRNCA+1704
RNCGPTR  EQU   ISTRNCA+1492
RNCGPPX  EQU   ISTRNCA+1408
RNCGPCC  EQU   ISTRNCA+1260
RNCGPCL  EQU   ISTRNCA+1164
RNCGPLN  EQU   ISTRNCA+1004
RNCLUDEF EQU   ISTRNCA+828
RNCTRDEF EQU   ISTRNCA+616
RNCPXDEF EQU   ISTRNCA+532
RNCCCDEF EQU   ISTRNCA+384
RNCCLDEF EQU   ISTRNCA+288
RNCLNDEF EQU   ISTRNCA+128
RNCRSV01 EQU   ISTRNCA+127
RNCTBFR  EQU   ISTRNCA+127
RNCGVB   EQU   ISTRNCA+127
RNCGSWBD EQU   ISTRNCA+126
RNCGANS  EQU   ISTRNCA+126
RNCGINOD EQU   ISTRNCA+126
RNCGCUA  EQU   ISTRNCA+126
RNCGRNAM EQU   ISTRNCA+126
RNCGDLLN EQU   ISTRNCA+125
RNCGRGAP EQU   ISTRNCA+125
RNCLNID  EQU   ISTRNCA+125
RNCGPID  EQU   ISTRNCA+125
RNCLNOW  EQU   ISTRNCA+125
RNCGNOW  EQU   ISTRNCA+125
RNCLQUE  EQU   ISTRNCA+125
RNCGQUE  EQU   ISTRNCA+125
RNCDTYPE EQU   ISTRNCA+124
RNCGVSEQ EQU   ISTRNCA+123
RNCGTWX  EQU   ISTRNCA+123
RNCGCTRM EQU   ISTRNCA+123
RNCGSTBH EQU   ISTRNCA+123
RNCGCOMP EQU   ISTRNCA+123
RNCGLU   EQU   ISTRNCA+123
RNCGTERM EQU   ISTRNCA+123
RNCGPA   EQU   ISTRNCA+123
RNCGCLUS EQU   ISTRNCA+122
RNCGLINE EQU   ISTRNCA+122
RNCGGRP  EQU   ISTRNCA+122
RNCGHOST EQU   ISTRNCA+122
RNCGSYSC EQU   ISTRNCA+122
RNCGBLD  EQU   ISTRNCA+122
RNCGPCCU EQU   ISTRNCA+122
RNCLPCT  EQU   ISTRNCA+120
RNCLPNM  EQU   ISTRNCA+112
RNCDIVT  EQU   ISTRNCA+108
RNCDITT  EQU   ISTRNCA+104
RNCLCST  EQU   ISTRNCA+100
RNCLWS   EQU   ISTRNCA+96
RNCFWS   EQU   ISTRNCA+92
RNCOFFS2 EQU   ISTRNCA+88
RNCOFFST EQU   ISTRNCA+84
RNCLTBLS EQU   ISTRNCA+80
RNCFTBLS EQU   ISTRNCA+76
RNCLENT  EQU   ISTRNCA+72
RNCFENT  EQU   ISTRNCA+68
RNCLRNLL EQU   ISTRNCA+64
RNCFRNLL EQU   ISTRNCA+60
RNCLLN   EQU   ISTRNCA+48
RNCCM    EQU   ISTRNCA+44
RNCIN    EQU   ISTRNCA+40
RNCLU    EQU   ISTRNCA+36
RNCTR    EQU   ISTRNCA+32
RNCCL    EQU   ISTRNCA+24
RNCDS    EQU   ISTRNCA+12
RNCRSV07 EQU   ISTRNCA+8
RNCSWLS  EQU   ISTRNCA+4
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCMHDAT EQU   ISTMLCA+908
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDAT3  EQU   ISTMLCA+468
MLCSAV3  EQU   ISTMLCA+396
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00014 EQU   ISTMLCA+136
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCFII   EQU   MLCERBF2+16
MLCMACRO EQU   MLCERBF2+8
MLCNAME  EQU   MLCERBF2
MLCCONFG EQU   MLCERBF1
MLCENT   EQU   ISTMLCA+20
MLCINT   EQU   MLCFLAGS
MLCSKDCB EQU   ISTMLCA+12
MLCSKEL  EQU   ISTMLCA+8
MLCSECCA EQU   ISTMLCA
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUUSSPT EQU   RLUUSSTB+8
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUNDSES EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00013 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00012 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00011 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00010 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00009 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
@NM00008 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
RPRNAME  EQU   ISTRPRE
LOKXCL   EQU   @NM00006
LOKPRY   EQU   @NM00006
@NM00007 EQU   @NM00006
@NM00005 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PHROALEN EQU   ISTPHROA
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00486 EQU   @RC00484
PUPRSCN@ EQU   @PB00002
@RC00542 EQU   @RC00536
@RC00561 EQU   @RC00559
PUMOVE@  EQU   @PB00003
@RT00646 EQU   @RC00642
@RT00644 EQU   @RC00642
@RT00714 EQU   @RC00713
@RC00755 EQU   @RC00754
@RC00871 EQU   @RC00864
@RC01187 EQU   @RC01183
@RC01236 EQU   @RC01232
@PB00027 EQU   @EL00003
@RC00546 EQU   @RC00542
@RC01237 EQU   @RC01236
@RC01288 EQU   @RC01236
@PB00026 EQU   @PB00027
@PB00025 EQU   @PB00026
@PB00024 EQU   @PB00025
@PB00023 EQU   @PB00024
@PB00022 EQU   @PB00023
@PB00021 EQU   @PB00022
@PB00020 EQU   @PB00021
@PB00019 EQU   @PB00020
@PB00018 EQU   @PB00019
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
PUVLCHK@ EQU   @PB00004
@ENDDATA EQU   *
         END   ISTSDCPU,(C'PLS1633',0603,76222)
