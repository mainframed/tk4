         TITLE 'ISTSDCMT  MTALCST MACRO PROCESSOR                      *
                        '
ISTSDCMT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSDCMT  75.172'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0179
*/********************************************************************/
*/*                 ENTRY LINKAGE                                    */
*/********************************************************************/
*                                                                  0179
*   RNCSAV1(2)=SAVREG;              /* SET UP SAVE AREA PTRS         */
         ST    SAVREG,RNCSAV1+4(,RNCAREG)                          0179
*   SAVREG=ADDR(RNCSAV1);           /* BY SYSDEF CONVENTIONS         */
         LA    SAVREG,RNCSAV1(,RNCAREG)                            0180
*   MLCSAV3(3)=SAVREG;                                             0181
         ST    SAVREG,MLCSAV3+8(,MLCAREG)                          0181
*   DATDREG=ADDR(RNCDAT1);          /* SET UP VIDSEQ DATA REG        */
         LA    DATDREG,RNCDAT1(,RNCAREG)                           0182
*   GENERATE NOREFS NOSETS;                                        0183
*                                                                  0183
           USING @DATD,11                    @ABILITY FOR DATA
*/********************************************************************/
*/* MTALCST STANDS FOR MULTIPLE TERMINAL ACCESS LINE CONTROL         */
*/* SELECTION TABLE.  MTALCST MACRO BUILDS A DATA BLOCK WHICH        */
*/* CONTAINS INFORMATION FOR EACH TYPE OF TERMINAL ALLOWED ON THE    */
*/* SPECIFIC MTA LINE.  THE NEW BLOCK IS CHAINED TO THE HEAD OF THE  */
*/* LCST CHAIN EVEN IF PREVIOUS BLOCKS EXIST. ALL LCST DATA BLOCKS   */
*/* ARE OF ONE SIZE REGARDLESS OF NUMBER OF TERMINAL TYPES ALLOWED.  */
*/********************************************************************/
*                                                                  0184
*   DQSW='0'B                       /* THIS SWITCH IS SET TO ONE   0184
*                                      LATER IF AN LCST DATA BLOCK IS
*                                      QUEUED AND THEN FOUND TO BE 0184
*                                      INVALID, THUS REQUIR-         */
*       ;                           /* ING A DEQUEUE                 */
         NI    DQSW,B'01111111'                                    0184
*   SW='0'B                         /* THIS SWITCH IS USED FOR A 'DO
*                                      WHILE' IN THE                 */
*       ;                           /* PARAMETER PROCESSOR           */
         NI    SW,B'01111111'                                      0185
*/********************************************************************/
*/* STORAGE FOR THE LCST DATA BLOCK IS OBTAINED VIA WORK AREA        */
*/* HANDLER (ISTSDCC7). AT ENTRY TO ISTSDCC7 TO OBTAIN STORAGE, WORK */
*/* AREA HANDLER REQUIRES THE DESIRED LENGTH IN REG0, AND REG1       */
*/* SHOULD CONTAIN ZEROES.  UPON RETURN FROM WORK AREA HANDLER,      */
*/* REG15 IS ZERO IF STORAGE WAS OBTAINED, NONZERO IF NOT. IF        */
*/* STORAGE WAS OBTAINED REG1 HAS THE ACTUAL (VIRTUAL) ADDRESS, AND  */
*/* REG0 HAS THE RELATIVE OFFSET FROM THE BEGINNING OF THE           */
*/* TABLE/STRING BUILD AREA.  THIS MODULE DOES NOT USE THE           */
*/* INFORMATION RETURNED IN REG0.                                    */
*/********************************************************************/
*                                                                  0186
*   GPR0=LENGTH(ISTLCST);           /* SIZE OF AREA REQUIRED         */
         LA    GPR0,20                                             0186
*   GPR1=0                          /* ZERO OUT R1 FOR STORAGE       */
*       ;                           /* REQUEST                       */
         SLR   GPR1,GPR1                                           0187
*   CALL ISTSDCC7                   /* OBTAIN STORAGE FOR LCST       */
*       ;                           /* DATA BLOCK                    */
         L     @15,@CV01219                                        0188
         BALR  @14,@15                                             0188
*   IF GPR15^=0                     /* WAS STORAGE OBTAINED?         */
*     THEN                          /* NO-ERROR CONDITION            */
         LTR   GPR15,GPR15                                         0189
         BZ    @RF00189                                            0189
*NOSPACE:                                                          0190
*     RC=4;                         /* RETURN CODE-KILL BUILD        */
NOSPACE  LA    RC,4                                                0190
*   ELSE                            /* STORAGE WAS OBTAINED.         */
*HAVSPACE:                                                         0191
*     DO;                           /* CAN BUILD A DATA BLOCK        */
         B     @RC00189                                            0191
@RF00189 DS    0H                                                  0191
HAVSPACE DS    0H                                                  0192
*/********************************************************************/
*/* THE DATA BLOCK WILL BE QUEUED UP NOW AND WILL BE DEQUEUED LATER  */
*/* IF UNUSABLE (SEE LABEL DEQUEUE).                                 */
*/********************************************************************/
*                                                                  0192
*       LCSTREG=GPR1;               /* @ OF NEW LCST DATA BLOK       */
         LR    LCSTREG,GPR1                                        0192
*       ISTLCST=ISTLCST&&ISTLCST;   /* ZERO OUT DATA BLOCK           */
         XC    ISTLCST(20,LCSTREG),ISTLCST(LCSTREG)                0193
*       LCSTFWDP=RNCLCST;           /* CHAIN UP NEW DATA BLOCK       */
         L     @10,RNCLCST(,RNCAREG)                               0194
         ST    @10,LCSTFWDP(,LCSTREG)                              0194
*       RNCLCST=LCSTREG;                                           0195
*                                                                  0195
         ST    LCSTREG,RNCLCST(,RNCAREG)                           0195
*/********************************************************************/
*/* START FILLING IN THE LCST WITH WHAT IS KNOWN NOW                 */
*/********************************************************************/
*                                                                  0196
*       LCSTLCTP='1050 ';           /* DEFAULT LINE CNTRL TYPE       */
         MVC   LCSTLCTP(5,LCSTREG),@CC01239                        0196
*       LCSTLCCD='1C'X;             /* DEFAULT LINE CNTRL CODE     0197
*                                                            @DY04863*/
         MVI   LCSTLCCD(LCSTREG),X'1C'                             0197
*       LCSTNAME=MLCNAME            /* NAME OF MTALCST MACRO. THIS 0198
*                                      WILL LATER BE RE- FERRED TO IN
*                                      THE LCST= PARAMETER ON A VTERM*/
*           ;                       /* MACRO.                        */
*                                                                  0198
         MVC   LCSTNAME(8,LCSTREG),MLCNAME(MLCAREG)                0198
*       /*************************************************************/
*       /*                                                           */
*       /* SEGMENT(PARAMS)REQUEST                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0199
*       DO;                                                        0199
*         GOTO PARAMS;                                             0200
         B     PARAMS                                              0200
*PARAMS#:                                                          0201
*       END;                        /* PROCESS PARAMETERS            */
PARAMS#  DS    0H                                                  0202
*       RC=0                        /* RETURN CODE IS VALID        0202
*                                      REGARDLESS OF PARAM-          */
*           ;                       /* PROCESSING OR ERRORS          */
         SLR   RC,RC                                               0202
*     END HAVSPACE;                                                0203
*                                                                  0203
*/********************************************************************/
*/* ALL PROCESSING NECESSARY TO BUILD AND CHAIN THE NEW LCST DATA    */
*/* BLOCK IS NOW DONE. IF THE NEW DATA BLOCK IS INVALID, SWITCH DQSW */
*/* WILL BE SET. IF IT IS SET, THE INVALID BLOCK MUST BE DEQUEUED    */
*/* FROM THE CHAIN. THE STORAGE WILL BE LEFT AS GARBAGE TO BE FREED  */
*/* BY GENEND.                                                       */
*/********************************************************************/
*                                                                  0204
*   IF DQSW='1'B                    /* INVALID BLOCK TO DEQUE?       */
*     THEN                                                         0204
@RC00189 TM    DQSW,B'10000000'                                    0204
         BNO   @RF00204                                            0204
*     RNCLCST=LCSTFWDP;             /* YES-DEQUEUE THE BLOCK         */
         L     @10,LCSTFWDP(,LCSTREG)                              0205
         ST    @10,RNCLCST(,RNCAREG)                               0205
*   ELSE                                                           0206
*     ;                             /* NOTHIN TO DEQUEUE             */
@RF00204 DS    0H                                                  0207
*/********************************************************************/
*/*                 RETURN TO CALLER.                                */
*/*                 RC=0 IS GOOD RETURN.  RC=4 KILLS THE BUILD.      */
*/********************************************************************/
*                                                                  0207
*RETRN:                                                            0207
*   SAVREG=RNCSAV1(2);              /* RESTORE CALLER'S REGS         */
RETRN    L     SAVREG,RNCSAV1+4(,RNCAREG)                          0207
*   RETURN CODE(RC);                /* RETURN TO CALLER              */
         LR    @15,RC                                              0208
         L     @14,12(,@13)                                        0208
         LM    @00,@12,20(@13)                                     0208
         BR    @14                                                 0208
*                                                                  0209
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(PARAMS)START                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0209
*   DO;                                                            0209
*     GOTO PARAMS@;                                                0210
*PARAMS:                                                           0211
*   END;                                                           0211
*                                                                  0211
PARAMS   DS    0H                                                  0212
*/********************************************************************/
*/* PROCESSING THE PARAMETERS IS TABLE DRIVEN.  A DO WHILE LOOP      */
*/* CAUSES PHR (PARAMETER HANDLER ROUTINE, ISTINCPH) TO ANALYSE EACH */
*/* PARAMETER IN TURN. THEN A SPECIFIC PARAMETER HANDLER SUBROUTINE  */
*/* IS CHOSEN FROM A TABLE, AND THE PARAMETER IS PROCESSED           */
*/* APPROPRIATELY. PROCESSING ENDS WHEN ALL PARAMETERS HAVE BEEN     */
*/* PROCESSED.                                                       */
*/********************************************************************/
*                                                                  0212
*CHKPARMS:                                                         0212
*   DO WHILE(SW='0'B)               /* LOOK AT EACH PARAMETER        */
*         ;                         /* IN TURN                       */
CHKPARMS B     @DE00212                                            0212
@DL00212 DS    0H                                                  0213
*/********************************************************************/
*/*          PHR REQUIRES THE FOLLOWING INPUT:                       */
*/*               REG0 - @ OF PARAMETER TABLE                        */
*/*               REG1 - @ OF FIRST/NEXT KEYWORD                     */
*/*               REG2 - @ OF PARAMETER LIST CREATED BY PHR          */
*/********************************************************************/
*                                                                  0213
*     GPR0=ADDR(MTAKWTBL)           /* @ PARAMETER KEY WORD          */
*         ;                         /* TABLE                         */
         LA    GPR0,MTAKWTBL                                       0213
*     GPR1=MLCKWD;                  /* NEXT KEYWORD @                */
         L     GPR1,MLCKWD(,MLCAREG)                               0214
*     PHRREG=ADDR(RNCPHR1);         /* @ OF PARAMETER LIST           */
         LA    PHRREG,RNCPHR1(,RNCAREG)                            0215
*     CALL ISTINCPH;                /* LOOK FOR 1ST PARAMETER        */
         L     @15,@CV01217                                        0216
         BALR  @14,@15                                             0216
*/********************************************************************/
*/*          PHR OUTPUT VARIES ACCORDING TO THE FUNCTION             */
*/*          USED AND THE KEYWORD TYPE.  THE OUTPUT EXPECTED         */
*/*          AT THIS TIME IS AS FOLLOWS:                             */
*/*               REG0 - @ OF PARAMETER HANDLING SUBROUTINE          */
*/*               REG1 - @ OF THE NEXT KEYWORD                       */
*/*               REG2 - @ OF DATA FOR PARAMETER HANDLER. THE        */
*/*                      DATA IS DERIVED FROM THE SUBTABLES          */
*/*                      SUPPLIED TO PHR FOR THE KEYWORD             */
*/*               REG15- RETURN CODE FROM PHR                        */
*/********************************************************************/
*                                                                  0217
*     KWDPTR=GPR1;                  /* SAVE @ OF NEXT KEYWORD        */
         LR    KWDPTR,GPR1                                         0217
*     IF GPR15=0                    /* VALID KEYWORD FOUND?          */
*       THEN                        /* YES-HANDLE PARAMETER          */
         LTR   GPR15,GPR15                                         0218
         BNZ   @RF00218                                            0218
*FOUND:                                                            0219
*       DO;                                                        0219
FOUND    DS    0H                                                  0220
*         GPR15=GPR0;               /* @ OF PARAMETER HANDLER      0220
*                                      REG2-ALREADY SET UP           */
         LR    GPR15,GPR0                                          0220
*         CALL PARMHDLR;            /* HANDLE PARAMETER              */
         BALR  @14,@15                                             0221
*MAINSUB:                                                          0222
*         ;                         /* RETURN @ FROM SUBROUTIN       */
MAINSUB  DS    0H                                                  0223
*         MLCKWD=KWDPTR;            /* POINT TO NEXT KEYWORD         */
         ST    KWDPTR,MLCKWD(,MLCAREG)                             0223
*       END FOUND;                  /* AND LOOK AT IT                */
*     ELSE                          /* NOT VALID KEY WORD.           */
*NOTFOUND:                                                         0225
*       DO;                         /* CHECK FOR ERROR               */
         B     @RC00218                                            0225
@RF00218 DS    0H                                                  0225
NOTFOUND DS    0H                                                  0226
*         IF GPR15=4                /* UNEXPECTED KEYWORD?           */
*           THEN                    /* YES-POSSIBLE ERROR            */
         C     GPR15,@CF00051                                      0226
         BNE   @RF00226                                            0226
*XTRAPARM:                                                         0227
*           DO;                                                    0227
*                                                                  0227
XTRAPARM DS    0H                                                  0228
*/* ERRFMT    LEVEL(PARM)  ERROR(INVAL)  ACTION(IGNORE)              */
*                                                                  0228
*             DO;                                                  0228
*               DCL                                                0229
*                 1 CMZP0005 STATIC LOCAL,/* PARAMETER LIST PASSED TO
*                                      ERROR FORMAT ROUTINE          */
*                  2 CMZL0005 FIXED(8) INIT(4),/* LEVEL PARAMETER  0229
*                                      (CLEV)                        */
*                  2 CMZE0005 FIXED(8) INIT(4),/* ERROR PARAMETER  0229
*                                      (CERR)                        */
*                  2 CMZA0005 CHAR(1) INIT('1'),/* ACTION PARAMETER
*                                      (CACT)                        */
*                  2 CMZS0005 FIXED(8) INIT(0);/* LENGTH OF STRING 0229
*                                      PARAM                         */
*               DCL                                                0230
*                 CMZR0005 REGISTER(1);/* ESTABLISH PARAMeter        */
*               RESPECIFY                                          0231
*                 CMZR0005 RSTD;    /* REGISTER FOR                  */
*               CMZR0005=ADDR(CMZP0005);/* ADDRESS OF PARAMETER LIST */
         LA    CMZR0005,CMZP0005                                   0232
*               CALL ISTSDCC2;      /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV01218                                        0233
         BALR  @14,@15                                             0233
*               RESPECIFY                                          0234
*                 CMZR0005 UNRSTD;                                 0234
*             END;                                                 0235
*             MLCKWD=KWDPTR;        /* POINT TO NEXT KEYWORD         */
         ST    KWDPTR,MLCKWD(,MLCAREG)                             0236
*           END XTRAPARM;           /* LOOK FOR NEXT KEYWORD         */
*         ELSE                                                     0238
*NOTXTRA:                                                          0238
*           DO;                                                    0238
         B     @RC00226                                            0238
@RF00226 DS    0H                                                  0238
NOTXTRA  DS    0H                                                  0239
*             IF GPR15=8            /* END OF KEYWORD STRING?        */
*               THEN                /* YES-CHECK AND SET             */
         C     GPR15,@CF00035                                      0239
         BNE   @RF00239                                            0239
*CLEANUP:                                                          0240
*               DO;                                                0240
*                                                                  0240
CLEANUP  DS    0H                                                  0241
*                 /***************************************************/
*                 /*                                                 */
*                 /* SEGMENT(SETDFLT)REQUEST                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0241
*                 DO;                                              0241
*                   GOTO SETDFLT;                                  0242
         B     SETDFLT                                             0242
*SETDFLT#:                                                         0243
*                 END;              /* BLOCKS                        */
SETDFLT# DS    0H                                                  0244
*               END CLEANUP;        /* LABEL 'GETOUT' IS NEXT        */
*             ELSE                                                 0245
*BADSYNTX:                                                         0245
*               DO;                                                0245
*                                                                  0245
         B     @RC00239                                            0245
@RF00239 DS    0H                                                  0245
BADSYNTX DS    0H                                                  0246
*/* ERRFMT    LEVEL(PARM)  ERROR(SYN)  ACTION(IGNORE)                */
*                                                                  0246
*                 DO;                                              0246
*                   DCL                                            0247
*                     1 CMZP0007 STATIC LOCAL,/* PARAMETER LIST    0247
*                                      PASSED TO ERROR FORMAT ROUTINE*/
*                      2 CMZL0007 FIXED(8) INIT(4),/* LEVEL PARAMETER
*                                      (CLEV)                        */
*                      2 CMZE0007 FIXED(8) INIT(6),/* ERROR PARAMETER
*                                      (CERR)                        */
*                      2 CMZA0007 CHAR(1) INIT('1'),/* ACTION      0247
*                                      PARAMETER (CACT)              */
*                      2 CMZS0007 FIXED(8) INIT(0);/* LENGTH OF    0247
*                                      STRING PARAM                  */
*                   DCL                                            0248
*                     CMZR0007 REGISTER(1);/* ESTABLISH PARAMeter    */
*                   RESPECIFY                                      0249
*                     CMZR0007 RSTD;/* REGISTER FOR                  */
*                   CMZR0007=ADDR(CMZP0007);/* ADDRESS OF PARAMETER
*                                      LIST                          */
         LA    CMZR0007,CMZP0007                                   0250
*                   CALL ISTSDCC2;  /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV01218                                        0251
         BALR  @14,@15                                             0251
*                   RESPECIFY                                      0252
*                     CMZR0007 UNRSTD;                             0252
*                 END;                                             0253
*SETTODQ:                                                          0254
*                 DQSW='1'B;        /* SET TO DEQUEUE DATA BLK       */
SETTODQ  OI    DQSW,B'10000000'                                    0254
*               END BADSYNTX;                                      0255
*                                                                  0255
*/********************************************************************/
*/*          WHETHER ERROR OR END OF PARAMETER LIST, NO MORE         */
*/*          PARAMETERS ARE TO BE PROCESSED.                         */
*/********************************************************************/
*                                                                  0256
*GETOUT:                                                           0256
*             SW='1'B;              /* GET OUT OF LOOP               */
@RC00239 DS    0H                                                  0256
GETOUT   OI    SW,B'10000000'                                      0256
*           END NOTXTRA;                                           0257
*       END NOTFOUND;                                              0258
@RC00226 DS    0H                                                  0259
*   END CHKPARMS;                                                  0259
*                                                                  0259
@RC00218 DS    0H                                                  0259
@DE00212 TM    SW,B'10000000'                                      0259
         BZ    @DL00212                                            0259
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(PARAMS)FINISH                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0260
*   DO;                                                            0260
*     GOTO PARAMS#;                                                0261
         B     PARAMS#                                             0261
*PARAMS@:                                                          0262
*   END;                            /* RETURN TO CALLER              */
PARAMS@  DS    0H                                                  0263
*                                                                  0263
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SETDFLT)START                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*   DO;                                                            0263
*     GOTO SETDFLT@;                                               0264
         B     SETDFLT@                                            0264
*SETDFLT:                                                          0265
*   END;                                                           0265
*                                                                  0265
SETDFLT  DS    0H                                                  0266
*/********************************************************************/
*/*          AT THIS POINT ALL THE PARAMETERS ON THE MTALCST         */
*/*          MACRO HAVE BEEN PROCESSED VALIDLY.                      */
*/*                                                                  */
*/*          SOME VALUES TO BE ENTERED INTO THE LCST DATA            */
*/*          BLOCKS HAVE DEFAULT VALUES FOR OTHER INFORMATION        */
*/*          SPECIFIED.  THE VALUES MUST BE ENTERED NOW IF NO        */
*/*          SPECIAL VALUE WAS SUPPLIED ON THE MACRO CALL.           */
*/********************************************************************/
*                                                                  0266
*   IF LCSTACR2='1'B                /* WAS ACR OPTION ON A           */
*       &LCSTLCTP^='1050 '          /* NON-1050 DEVICE?              */
*     THEN                          /* YES-ERR CONDITION. ACR        */
         TM    LCSTACR2(LCSTREG),B'00100000'                       0266
         BNO   @RF00266                                            0266
         CLC   LCSTLCTP(5,LCSTREG),@CC01239                        0266
         BE    @RF00266                                            0266
*ACRINVAL:                                                         0267
*     DO;                           /* IS ONLY LEGAL ON 1050.        */
ACRINVAL DS    0H                                                  0268
*/* ERRFMT    LEVEL(PARM)  ERROR(CONF)  ACTION(IGNORE)  STRING('ACR')*/
*                                                                  0268
*       DO;                                                        0268
*         DCL                                                      0269
*           1 CMZP0010 STATIC LOCAL,/* PARAMETER LIST PASSED TO ERROR
*                                      FORMAT ROUTINE                */
*            2 CMZL0010 FIXED(8) INIT(4),/* LEVEL PARAMETER (CLEV)   */
*            2 CMZE0010 FIXED(8) INIT(2),/* ERROR PARAMETER (CERR)   */
*            2 CMZA0010 CHAR(1) INIT('1'),/* ACTION PARAMETER (CACT) */
*            2 CMZS0010 FIXED(8) INIT(3),/* LENGTH OF STRING PARAM   */
*            2 CMZM0010 CHAR(3) INIT('ACR');/* PARAMETER STRING      */
*         DCL                                                      0270
*           CMZR0010 REGISTER(1);   /* ESTABLISH PARAMeter           */
*         RESPECIFY                                                0271
*           CMZR0010 RSTD;          /* REGISTER FOR                  */
*         CMZR0010=ADDR(CMZP0010);  /* ADDRESS OF PARAMETER LIST     */
         LA    CMZR0010,CMZP0010                                   0272
*         CALL ISTSDCC2;            /* CALL ERROR FORMAT ROUTINE     */
         L     @15,@CV01218                                        0273
         BALR  @14,@15                                             0273
*         RESPECIFY                                                0274
*           CMZR0010 UNRSTD;                                       0274
*       END;                                                       0275
*       DQSW='1'B;                  /* DEQUEUE DATE BLOCK SW         */
         OI    DQSW,B'10000000'                                    0276
*     END ACRINVAL;                                                0277
*   ELSE                                                           0278
*     ;                             /* NO INVALID COMBINATION-       */
*                                                                  0278
@RF00266 DS    0H                                                  0279
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SETDFLT)FINISH                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0279
*   DO;                                                            0279
*     GOTO SETDFLT#;                                               0280
         B     SETDFLT#                                            0280
*SETDFLT@:                                                         0281
*   END;                                                           0281
*                                                                  0281
*/*  RETURN TO CALLER                                                */
*                                                                  0282
*                                                                  0282
*/********************************************************************/
*/* THIS ROUTINE IS A NOP FOR PARMS WHICH ARE NOT USED BY SYSDEF.    */
*/********************************************************************/
*                                                                  0282
*MTNOP:                                                            0282
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0282
         B     @PB00002                                            0282
MTNOP    DS    0H                                                  0283
*   GPR15=0;                        /* VALID RETURN CODE             */
         SLR   GPR15,GPR15                                         0283
*   GPR14=ADDR(MAINSUB);            /* RETURN TO MAINLINE            */
         LA    GPR14,MAINSUB                                       0284
*   END MTNOP;                                                     0285
@EL00002 DS    0H                                                  0285
@EF00002 DS    0H                                                  0285
@ER00002 BR    @14                                                 0285
*                                                                  0286
*/********************************************************************/
*/* THIS ROUTINE PROCESSES THE ACR, CODE, AND LCTYPE PARAMETERS.     */
*/*                                                                  */
*/*                 LABELS FOR DEBUGGING                             */
*/*        DCL  (NOTACR,NOTCODE,CHKBLANK,TABLNDX) LOCAL EXT LABEL    */
*/********************************************************************/
*                                                                  0286
*MTPARM:                                                           0286
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0286
MTPARM   DS    0H                                                  0287
*   IF KEYWORD(1:3)='ACR'           /* WAS PARAMETER 'ACR'?          */
*     THEN                                                         0287
         L     @10,MLCKWD(,MLCAREG)                                0287
         CLC   KEYWORD(3,@10),@CC01296                             0287
         BNE   @RF00287                                            0287
*     LCSTACR=PHRF2MSK(1);          /* YES-TURN ON ACR BIT           */
         MVC   LCSTACR(1,LCSTREG),PHRF2MSK(PHRREG)                 0288
*   ELSE                            /* NO-CHECK FOR OTHERS           */
*NOTACR:                                                           0289
*     DO;                                                          0289
         B     @RC00287                                            0289
@RF00287 DS    0H                                                  0289
NOTACR   DS    0H                                                  0290
*       IF KEYWORD(1:6)^='LCTYPE' THEN/* AT PRESENT THIS AN        0290
*                                      IMPOSSIBLE CONDITION. IF    0290
*                                      ADDITION PARAMETERS ARE ADDED
*                                      LATER, THEIR                  */
         L     @10,MLCKWD(,MLCAREG)                                0290
         CLC   KEYWORD(6,@10),@CC01307                             0290
         BNE   @RT00290                                            0290
*         ;                         /* CHECKS SHOULD GO HERE.        */
*       ELSE                        /* 'LCTYPE' PARAMETER            */
*CHKBLANK:                                                         0292
*         DO;                                                      0292
CHKBLANK DS    0H                                                  0293
*           IF PHRF2VAL(1)=0        /* WAS PARAMETER BLANK?          */
*             THEN                                                 0293
         L     @10,PHRF2VAL(,PHRREG)                               0293
         LTR   @10,@10                                             0293
         BZ    @RT00293                                            0293
*             ;                     /* YES-USE DEFAULT               */
*           ELSE                                                   0295
*TABLNDX:                                                          0295
*             DO;                   /* NO-FILL IN LC INFO.           */
TABLNDX  DS    0H                                                  0296
*/********************************************************************/
*/*          TO FILL IN THE LINE CONTROL CODE AND ASSOCIATED         */
*/*          TERMINAL TYPE, THE NEXT TWO INSTRUCTIONS USE THE        */
*/*          OUTPUT FROM PHR IN A WAY THAT PHR DOESN'T EXPECT        */
*/*          WHEN IT CREATES THE OUTPUT.  WHAT HAPPENS IS            */
*/*          THIS.  SUBTABLE 'MTTYPTB2 CONSISTS OF A TERMINAL        */
*/*          TYPE AND A ONE WORD FIELD WHICH PHR TREATS AS AN        */
*/*          OFFSET, A FLAG BYTE, AND A ONE-BYTE BIT-PATTERN.        */
*/*          THE ONE WORD FIELD REALLY CONSISTS OF AN                */
*/*          UNUSED BYTE (ZEROES), A ONE BYTE LINE CONTROL           */
*/*          CODE (CORRESPONDING TO THE TERMINAL TYPE), AND A        */
*/*          TWO BYTE INDEX (ONLY THE SECOND BYTE IS NON-            */
*/*          ZERO) TO THE ENTRY WITHIN MTTYPTB2 WHICH PHR            */
*/*          USED TO CREATE THE WORD OF OUTPUT WHICH IS BEING        */
*/*          EXPLAINED BY THIS SENTENCE.                             */
*/*                                                                  */
*/*          THE LINE CONTROL CODE CAN BE MOVED TO THE LCST          */
*/*          AS IT IS BY REFERING TO AN OVERLAY TO                   */
*/*          PHRF2VAL(1) WHICH SUBDIVIDES THE TWO BYTE               */
*/*          OFFSET INTO TWO ONE BYTE FIELDS.  AS STATED             */
*/*          BEFORE, THE LINE CONTROL CODE IS THE SECOND             */
*/*          BYTE (NAMED 'WKCOD' IN THE OVERLAY).                    */
*/*                                                                  */
*/*          TO MOVE THE TERMINAL TYPE, THE PHRF2VAL(1) OVER-        */
*/*          LAY IS USED TO REFERENCE AN INDEX (NAMED 'WKNDX'        */
*/*          IN THE OVERLAY) TO THE ENTRY IN MTTYPTB2.               */
*/*          ANOTHER OVERLAY, FOR THE ENTRY IN MTTYPTB2, IS          */
*/*          THEN USED TO EXTRACT THE TERMINAL TYPE.                 */
*/********************************************************************/
*                                                                  0296
*               LCSTLCCD=WKCOD;     /* LINE CONTROL CODE             */
         MVC   LCSTLCCD(1,LCSTREG),WKCOD(PHRREG)                   0296
*               LCSTLCTP=           /* TERMINAL TYPE                 */
*                   TERMTYPE(WKNDX,1:5);                           0297
         LH    @10,WKNDX(,PHRREG)                                  0297
         MH    @10,@CH00032                                        0297
         LA    @08,TERMTYPE-12(@10)                                0297
         MVC   LCSTLCTP(5,LCSTREG),0(@08)                          0297
*             END TABLNDX;                                         0298
*         END CHKBLANK;                                            0299
@RT00293 DS    0H                                                  0300
*     END NOTACR;                                                  0300
@RT00290 DS    0H                                                  0301
*   GPR15=0;                        /* VALID RETURN CODE             */
@RC00287 SLR   GPR15,GPR15                                         0301
*   GPR14=ADDR(MAINSUB);            /* RETURN TO MAINLINE            */
         LA    GPR14,MAINSUB                                       0302
*   END MTPARM;                                                    0303
@EL00003 DS    0H                                                  0303
@EF00003 DS    0H                                                  0303
@ER00003 BR    @14                                                 0303
@PB00003 DS    0H                                                  0304
*                                                                  0304
*/********************************************************************/
*/*                 PHR KEYWORD TABLE                                */
*/********************************************************************/
*                                                                  0304
*   DCL                                                            0304
*    (ISTSDCC5,                                                    0304
*     ISTSDCC6,                                                    0304
*     ISTSDCR1) EXT ENTRY NONLOCAL;                                0304
*   DCL                                                            0305
*     1 MTAKWTBL BDY(WORD) STATIC LOCAL,                           0305
*      2 * FIXED(15) INIT(12),                                     0305
*      2 * FIXED(15) INIT(13),      /*                       @D31KKMX*/
*      2 * CHAR(8) INIT('ACR'),                                    0305
*      2 * FIXED(8) INIT('2'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTACRTB1)) BDY(BYTE),                 0305
*      2 * CHAR(8) INIT('CLOCKNG'),                                0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('CODE'),                                   0305
*      2 * FIXED(8) INIT('06'X),                                   0305
*      2 * PTR(31) INIT(ADDR(ISTSDCR1)) BDY(BYTE),                 0305
*      2 * CHAR(8) INIT('CRRATE'),                                 0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('DATRATE'),                                0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('INTPRI'),                                 0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('LCTYPE'),                                 0305
*      2 * FIXED(8) INIT('2'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTTYPTB1)) BDY(BYTE),                 0305
*      2 * CHAR(8) INIT('LINESIZ'),                                0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('RETRIES'),                                0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('GROUP'),                                  0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('SPEED'),                                  0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE),                    0305
*      2 * CHAR(8) INIT('TRANSFR'),                                0305
*      2 * FIXED(8) INIT('6'X),                                    0305
*      2 * PTR(31) INIT(ADDR(MTNOP)) BDY(BYTE);                    0305
*                                                                  0305
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D31KKMX*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*/********************************************************************/
*/*                 INTERMEDIATE POINTER BLOCK                       */
*/********************************************************************/
*                                                                  0306
*   DCL                                                            0306
*     1 BLDIPB BDY(WORD) STATIC LOCAL,                             0306
*      2 * FIXED(15) INIT(2),                                      0306
*      2 * FIXED(15) INIT(8),                                      0306
*      2 MTACRTB1 PTR(31) INIT(ADDR(MTPARM)),                      0306
*      2 * PTR(31) INIT(ADDR(MTACRTB2)),                           0306
*      2 MTTYPTB1 PTR(31) INIT(ADDR(MTPARM)),                      0306
*      2 * PTR(31) INIT(ADDR(MTTYPTB2));                           0306
*                                                                  0306
*/********************************************************************/
*/*                 SUBPARAMETER TABLES                              */
*/********************************************************************/
*                                                                  0307
*   DCL                                                            0307
*     1 MTACRTB2 BDY(WORD) STATIC LOCAL,                           0307
*      2 * FIXED(15) INIT(2),                                      0307
*      2 * FIXED(15) INIT(12),                                     0307
*      2 * CHAR(8) INIT('YES'),                                    0307
*      2 * FIXED(31) INIT('20'X),                                  0307
*      2 * CHAR(8) INIT('NO'),                                     0307
*      2 * FIXED(31) INIT('00'X);                                  0307
*   DCL                                                            0308
*     1 MTTYPTB2 BDY(WORD) STATIC LOCAL,                           0308
*      2 * FIXED(15) INIT(7),                                      0308
*      2 * FIXED(15) INIT(12),                                     0308
*      2 * CHAR(8) INIT('2741'),                                   0308
*      2 * FIXED(31) INIT('00000001'X),                            0308
*      2 * CHAR(8) INIT('2740A'),                                  0308
*      2 * FIXED(31) INIT('00020002'X),                            0308
*      2 * CHAR(8) INIT('2740D'),                                  0308
*      2 * FIXED(31) INIT('00060003'X),                            0308
*      2 * CHAR(8) INIT('2740E'),                                  0308
*      2 * FIXED(31) INIT('000A0004'X),                            0308
*      2 * CHAR(8) INIT('2740F'),                                  0308
*      2 * FIXED(31) INIT('000C0005'X),                            0308
*      2 * CHAR(8) INIT('1050'),                                   0308
*      2 * FIXED(31) INIT('001C0006'X),/*                    @DY04863*/
*      2 * CHAR(8) INIT('TWX'),                                    0308
*      2 * FIXED(31) INIT('00220007'X);                            0308
*                                                                  0309
*/********************************************************************/
*/*                OVERLAY TO REFER TO MTTYPTB2                      */
*/********************************************************************/
*                                                                  0309
*   DCL                                                            0309
*     1 *(7) BDY(WORD) DEFINED(MTTYPTB2) POSITION(5),              0309
*      2 TERMTYPE CHAR(8),                                         0309
*      2 * CHAR(4);                                                0309
*                                                                  0309
*/********************************************************************/
*/*                OVERLAY TO PHR FUNCTION 2 OUTPUT AREA             */
*/********************************************************************/
*                                                                  0310
*   DCL                                                            0310
*     1 * DEFINED(PHRF2VAL),                                       0310
*      2 * PTR(8),                                                 0310
*      2 WKCOD PTR(8),                                             0310
*      2 WKNDX PTR(15);                                            0310
*                                                                  0310
*/* TPEPILOG                                                         */
*                                                                  0311
*   GEN(PRINT OFF);                                                0311
         PRINT OFF
*   GEN(PRINT ON);                                                 0312
*                                                                  0312
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0313
*   END ISTSDCMT;                                                  0313
@EL00001 DS    0H                                                  0313
@EF00001 DS    0H                                                  0313
@ER00001 LM    @14,@12,12(@13)                                     0313
         BR    @14                                                 0313
@DATA    DS    0H
@CH00032 DC    H'12'
@DATD    DSECT
         DS    0F
ISTSDCMT CSECT
         DS    0F
@CF00051 DC    F'4'
@CF00035 DC    F'8'
@DATD    DSECT
         DS    0D
DQSW     DS    BL1
SW       DS    BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCMT CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01217 DC    V(ISTINCPH)
@CV01218 DC    V(ISTSDCC2)
@CV01219 DC    V(ISTSDCC7)
@CV01317 DC    V(ISTSDCR1)
@CV01315 DC    V(ISTSDCC5)
@CV01316 DC    V(ISTSDCC6)
         DS    0D
@CC01307 DC    C'LCTYPE'
@CC01239 DC    C'1050 '
@CC01296 DC    C'ACR'
         DS    CL2
MTAKWTBL DS    CL160
         ORG   MTAKWTBL
@NM00017 DC    H'12'
@NM00018 DC    H'13'
@NM00019 DC    CL8'ACR'
@NM00020 DC    XL1'2'
@NM00021 DC    AL4(MTACRTB1)
@NM00022 DC    CL8'CLOCKNG'
@NM00023 DC    XL1'6'
@NM00024 DC    AL4(MTNOP)
@NM00025 DC    CL8'CODE'
@NM00026 DC    XL1'06'
@NM00027 DC    VL4(ISTSDCR1)
@NM00028 DC    CL8'CRRATE'
@NM00029 DC    XL1'6'
@NM00030 DC    AL4(MTNOP)
@NM00031 DC    CL8'DATRATE'
@NM00032 DC    XL1'6'
@NM00033 DC    AL4(MTNOP)
@NM00034 DC    CL8'INTPRI'
@NM00035 DC    XL1'6'
@NM00036 DC    AL4(MTNOP)
@NM00037 DC    CL8'LCTYPE'
@NM00038 DC    XL1'2'
@NM00039 DC    AL4(MTTYPTB1)
@NM00040 DC    CL8'LINESIZ'
@NM00041 DC    XL1'6'
@NM00042 DC    AL4(MTNOP)
@NM00043 DC    CL8'RETRIES'
@NM00044 DC    XL1'6'
@NM00045 DC    AL4(MTNOP)
@NM00046 DC    CL8'GROUP'
@NM00047 DC    XL1'6'
@NM00048 DC    AL4(MTNOP)
@NM00049 DC    CL8'SPEED'
@NM00050 DC    XL1'6'
@NM00051 DC    AL4(MTNOP)
@NM00052 DC    CL8'TRANSFR'
@NM00053 DC    XL1'6'
@NM00054 DC    AL4(MTNOP)
         ORG   MTAKWTBL+160
CMZP0005 DS    CL4
         ORG   CMZP0005
CMZL0005 DC    AL1(4)
CMZE0005 DC    AL1(4)
CMZA0005 DC    CL1'1'
CMZS0005 DC    AL1(0)
         ORG   CMZP0005+4
CMZP0007 DS    CL4
         ORG   CMZP0007
CMZL0007 DC    AL1(4)
CMZE0007 DC    AL1(6)
CMZA0007 DC    CL1'1'
CMZS0007 DC    AL1(0)
         ORG   CMZP0007+4
CMZP0010 DS    CL7
         ORG   CMZP0010
CMZL0010 DC    AL1(4)
CMZE0010 DC    AL1(2)
CMZA0010 DC    CL1'1'
CMZS0010 DC    AL1(3)
CMZM0010 DC    CL3'ACR'
         ORG   CMZP0010+7
         DS    CL1
BLDIPB   DS    CL20
         ORG   BLDIPB
@NM00055 DC    H'2'
@NM00056 DC    H'8'
MTACRTB1 DC    AL4(MTPARM)
@NM00057 DC    AL4(MTACRTB2)
MTTYPTB1 DC    AL4(MTPARM)
@NM00058 DC    AL4(MTTYPTB2)
         ORG   BLDIPB+20
MTACRTB2 DS    CL28
         ORG   MTACRTB2
@NM00059 DC    H'2'
@NM00060 DC    H'12'
@NM00061 DC    CL8'YES'
@NM00062 DC    XL4'20'
@NM00063 DC    CL8'NO'
@NM00064 DC    XL4'00'
         ORG   MTACRTB2+28
MTTYPTB2 DS    CL88
         ORG   MTTYPTB2
@NM00065 DC    H'7'
@NM00066 DC    H'12'
@NM00067 DC    CL8'2741'
@NM00068 DC    XL4'00000001'
@NM00069 DC    CL8'2740A'
@NM00070 DC    XL4'00020002'
@NM00071 DC    CL8'2740D'
@NM00072 DC    XL4'00060003'
@NM00073 DC    CL8'2740E'
@NM00074 DC    XL4'000A0004'
@NM00075 DC    CL8'2740F'
@NM00076 DC    XL4'000C0005'
@NM00077 DC    CL8'1050'
@NM00078 DC    XL4'001C0006'
@NM00079 DC    CL8'TWX'
@NM00080 DC    XL4'00220007'
         ORG   MTTYPTB2+88
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
KWDPTR   EQU   @09
RC       EQU   @09
GPR0     EQU   @00
GPR1     EQU   @01
PHRREG   EQU   @02
LCSTREG  EQU   @04
MLCAREG  EQU   @05
RNCAREG  EQU   @06
DATDREG  EQU   @11
SAVREG   EQU   @13
GPR14    EQU   @14
GPR15    EQU   @15
CMZR0005 EQU   @01
CMZR0007 EQU   @01
CMZR0010 EQU   @01
R12      EQU   @12
R3       EQU   @03
R4       EQU   @04
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTPHROA EQU   0
PHROADTA EQU   ISTPHROA+4
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00006 EQU   LOKCHNG+2
ISTRPRE  EQU   0
RPRCOMID EQU   ISTRPRE+8
RPRFLAGA EQU   ISTRPRE+21
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTRNCA  EQU   0
RNCLCST  EQU   ISTRNCA+100
RNCRNMDL EQU   ISTRNCA+2984
RNCTRMDL EQU   RNCRNMDL
RNCLUMDL EQU   RNCTRMDL
RNCLNMDL EQU   RNCLUMDL
RNCSWMDL EQU   RNCLNMDL
RNCLSMDL EQU   RNCSWMDL
RNCCLMDL EQU   RNCLSMDL
RNCDAMDL EQU   RNCCLMDL
RNCCMMDL EQU   ISTRNCA+3240
RNCINMDL EQU   RNCCMMDL
RNCCCMDL EQU   RNCINMDL
RNCGPMDL EQU   RNCCCMDL
RNCPXMDL EQU   RNCGPMDL
RNCSAV1  EQU   ISTRNCA+3460
RNCDAT1  EQU   ISTRNCA+3532
RNCWORK1 EQU   ISTRNCA+3844
RNCPHR1  EQU   RNCWORK1
RNCWORK2 EQU   ISTRNCA+5892
RNCPHR2  EQU   RNCWORK2
RNCWORK3 EQU   ISTRNCA+7940
ISTLCST  EQU   0
LCSTFWDP EQU   ISTLCST
LCSTNAME EQU   ISTLCST+4
LCSTTYPE EQU   ISTLCST+12
LCSTLCTP EQU   LCSTTYPE
LCSTLCCD EQU   LCSTTYPE+5
LCSTACR  EQU   ISTLCST+18
LCSTACR2 EQU   LCSTACR
ISTDITHD EQU   0
ISTDHDVI EQU   0
DHDDIVTH EQU   ISTDHDVI+12
ISTDDTVI EQU   0
ISTRNCDT EQU   0
ISTRNCGT EQU   0
ISTRNCPT EQU   0
ISTMLCA  EQU   0
MLCFLAGS EQU   ISTMLCA+16
MLCKWD   EQU   ISTMLCA+24
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCERBF2 EQU   MLCERBF+8
MLCNAME  EQU   MLCERBF2
MLCERBF3 EQU   MLCERBF+32
MLCPTRS  EQU   ISTMLCA+96
MLCSAV3  EQU   ISTMLCA+396
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
PARMHDLR EQU   0
KEYWORD  EQU   0
PHRFN1OA EQU   PHROADTA
PHRFN2OA EQU   PHROADTA
PHRF2VAL EQU   PHRFN2OA+4
PHRF2FLG EQU   PHRF2VAL+2
PHRF2MSK EQU   PHRF2VAL+3
PHRF34OA EQU   PHROADTA
PHRF34EN EQU   PHRF34OA+4
PHRFN5OA EQU   PHROADTA
PHRF5ENT EQU   PHRFN5OA+4
PHRFN7OA EQU   PHROADTA
PHRFN8OA EQU   PHROADTA
PHRF8ENT EQU   PHRFN8OA+4
PHRF8FLG EQU   PHRF8ENT
@NM00081 EQU   MTTYPTB2+4
TERMTYPE EQU   @NM00081
@NM00083 EQU   PHRF2VAL
WKCOD    EQU   @NM00083+1
WKNDX    EQU   @NM00083+2
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00084 EQU   @NM00083
@NM00082 EQU   @NM00081+8
PHRF8NUM EQU   PHRF8ENT+1
@NM00004 EQU   PHRF8FLG
PHRF8DFT EQU   PHRF8FLG
PHRF8NSP EQU   PHRFN8OA
PHRF7NUM EQU   PHRFN7OA+4
PHRF7NSP EQU   PHRFN7OA
PHRF5SPT EQU   PHRF5ENT+4
PHRF5SL  EQU   PHRF5ENT+2
@NM00003 EQU   PHRF5ENT+1
PHRF5VF  EQU   PHRF5ENT
PHRF5NSP EQU   PHRFN5OA
PHRF34SP EQU   PHRF34EN+4
PHRF34SL EQU   PHRF34EN+2
@NM00002 EQU   PHRF34EN+1
PHRF34VF EQU   PHRF34EN
PHRF34NS EQU   PHRF34OA
PHRF2MV  EQU   PHRF2FLG
PHRF2OFF EQU   PHRF2FLG
PHRF2ON  EQU   PHRF2FLG
@NM00001 EQU   PHRF2FLG
PHRF2TR  EQU   PHRF2FLG
PHRF2CL  EQU   PHRF2FLG
PHRF2LN  EQU   PHRF2FLG
PHRF2GP  EQU   PHRF2FLG
PHRF2OFS EQU   PHRF2VAL
PHRF2NVL EQU   PHRFN2OA
PHRF1SLN EQU   PHRFN1OA+4
PHRF1SAD EQU   PHRFN1OA
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCMHDAT EQU   ISTMLCA+908
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDAT4  EQU   ISTMLCA+596
MLCSAV4  EQU   ISTMLCA+524
MLCDAT3  EQU   ISTMLCA+468
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00016 EQU   ISTMLCA+136
MLCNCSPL EQU   MLCPTRS+36
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR6  EQU   MLCPTRS+24
MLCPTR5  EQU   MLCPTRS+20
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCCNFG2 EQU   MLCERBF3
MLCFII   EQU   MLCERBF2+16
MLCMACRO EQU   MLCERBF2+8
MLCCONFG EQU   MLCERBF1
MLCENT   EQU   ISTMLCA+20
MLCINT   EQU   MLCFLAGS
MLCSKDCB EQU   ISTMLCA+12
MLCSKEL  EQU   ISTMLCA+8
MLCRPH   EQU   ISTMLCA+4
MLCSECCA EQU   ISTMLCA
RNCPT    EQU   ISTRNCPT+4
RNCPTLN  EQU   ISTRNCPT
RNCGT    EQU   ISTRNCGT+4
RNCGTLN  EQU   ISTRNCGT
RNCDT    EQU   ISTRNCDT+4
RNCDTLN  EQU   ISTRNCDT
DDTASSOC EQU   ISTDDTVI+40
DDTRDTPT EQU   ISTDDTVI+36
DDTTRNM  EQU   ISTDDTVI+28
DDTBSCLN EQU   ISTDDTVI+27
DDTBSCID EQU   ISTDDTVI+4
DDTFWPTR EQU   ISTDDTVI
DHDGPPTR EQU   ISTDHDVI+32
DHDDVOFF EQU   ISTDHDVI+28
DHDDTPTR EQU   ISTDHDVI+24
DHDDHPTR EQU   ISTDHDVI+20
DHDRSVD  EQU   DHDDIVTH+6
DHDIDLEN EQU   DHDDIVTH+4
DHDNUMFE EQU   DHDDIVTH+2
DHDNUME  EQU   DHDDIVTH
DHDHNAME EQU   ISTDHDVI+4
DHDFWPTR EQU   ISTDHDVI
DITDITT  EQU   ISTDITHD+16
DITLEN   EQU   ISTDITHD+15
DITUNUSD EQU   ISTDITHD+12
DITLSTNM EQU   ISTDITHD+4
DITFWDPT EQU   ISTDITHD
LCSTCODE EQU   ISTLCST+19
LCSTACR3 EQU   LCSTACR
LCSTACR1 EQU   LCSTACR
LCSTACR0 EQU   LCSTACR
RNCWORD5 EQU   ISTRNCA+8084
RNCWORD4 EQU   ISTRNCA+8080
RNCWORD3 EQU   ISTRNCA+8076
RNCWORD2 EQU   ISTRNCA+8072
RNCWORD1 EQU   ISTRNCA+8068
RNCWORK4 EQU   ISTRNCA+8004
RNCLDPRM EQU   RNCWORK3
RNCOCPRM EQU   RNCPHR2
RNCLMDCB EQU   RNCPHR1
RNCDAT3  EQU   ISTRNCA+3788
RNCSAV3  EQU   ISTRNCA+3716
RNCDAT2  EQU   ISTRNCA+3660
RNCSAV2  EQU   ISTRNCA+3588
@NM00015 EQU   ISTRNCA+3456
RNCLXMDL EQU   RNCPXMDL
RNCDSMDL EQU   RNCDAMDL
RNCCCLU  EQU   ISTRNCA+2808
RNCCLTR  EQU   ISTRNCA+2596
RNCLNLU  EQU   ISTRNCA+2420
RNCLNTR  EQU   ISTRNCA+2208
RNCLNPX  EQU   ISTRNCA+2124
RNCLNCC  EQU   ISTRNCA+1976
RNCLNCL  EQU   ISTRNCA+1880
RNCGPLU  EQU   ISTRNCA+1704
RNCGPTR  EQU   ISTRNCA+1492
RNCGPPX  EQU   ISTRNCA+1408
RNCGPCC  EQU   ISTRNCA+1260
RNCGPCL  EQU   ISTRNCA+1164
RNCGPLN  EQU   ISTRNCA+1004
RNCLUDEF EQU   ISTRNCA+828
RNCTRDEF EQU   ISTRNCA+616
RNCPXDEF EQU   ISTRNCA+532
RNCCCDEF EQU   ISTRNCA+384
RNCCLDEF EQU   ISTRNCA+288
RNCLNDEF EQU   ISTRNCA+128
RNCRSV01 EQU   ISTRNCA+127
RNCTBFR  EQU   ISTRNCA+127
RNCGPUIN EQU   ISTRNCA+127
RNCGVB   EQU   ISTRNCA+127
RNCGLSBD EQU   ISTRNCA+126
RNCGSWBD EQU   ISTRNCA+126
RNCGRNBD EQU   ISTRNCA+126
RNCGCLPU EQU   ISTRNCA+126
RNCGANS  EQU   ISTRNCA+126
RNCGINOD EQU   ISTRNCA+126
RNCGCUA  EQU   ISTRNCA+126
RNCGRNAM EQU   ISTRNCA+126
RNCGDLLN EQU   ISTRNCA+125
RNCGRGAP EQU   ISTRNCA+125
RNCLNID  EQU   ISTRNCA+125
RNCGPID  EQU   ISTRNCA+125
RNCLNOW  EQU   ISTRNCA+125
RNCGNOW  EQU   ISTRNCA+125
RNCLQUE  EQU   ISTRNCA+125
RNCGQUE  EQU   ISTRNCA+125
RNCDTYPE EQU   ISTRNCA+124
RNCGVSEQ EQU   ISTRNCA+123
RNCGTWX  EQU   ISTRNCA+123
RNCGCTRM EQU   ISTRNCA+123
RNCGSTBH EQU   ISTRNCA+123
RNCGCOMP EQU   ISTRNCA+123
RNCGLU   EQU   ISTRNCA+123
RNCGTERM EQU   ISTRNCA+123
RNCGPA   EQU   ISTRNCA+123
RNCGPU   EQU   ISTRNCA+122
RNCGCLUS EQU   ISTRNCA+122
RNCGLINE EQU   ISTRNCA+122
RNCGGRP  EQU   ISTRNCA+122
RNCGHOST EQU   ISTRNCA+122
RNCGSYSC EQU   ISTRNCA+122
RNCGBLD  EQU   ISTRNCA+122
RNCGPCCU EQU   ISTRNCA+122
RNCLPCT  EQU   ISTRNCA+120
RNCLPNM  EQU   ISTRNCA+112
RNCDIVT  EQU   ISTRNCA+108
RNCDITT  EQU   ISTRNCA+104
RNCLWS   EQU   ISTRNCA+96
RNCFWS   EQU   ISTRNCA+92
RNCOFFS2 EQU   ISTRNCA+88
RNCOFFST EQU   ISTRNCA+84
RNCLTBLS EQU   ISTRNCA+80
RNCFTBLS EQU   ISTRNCA+76
RNCLENT  EQU   ISTRNCA+72
RNCFENT  EQU   ISTRNCA+68
RNCLRNLL EQU   ISTRNCA+64
RNCFRNLL EQU   ISTRNCA+60
RNCPX    EQU   ISTRNCA+56
RNCDA    EQU   ISTRNCA+52
RNCLLN   EQU   ISTRNCA+48
RNCCM    EQU   ISTRNCA+44
RNCIN    EQU   ISTRNCA+40
RNCLU    EQU   ISTRNCA+36
RNCTR    EQU   ISTRNCA+32
RNCCC    EQU   ISTRNCA+28
RNCCL    EQU   ISTRNCA+24
RNCLN    EQU   ISTRNCA+20
RNCGP    EQU   ISTRNCA+16
RNCDS    EQU   ISTRNCA+12
RNCRSV07 EQU   ISTRNCA+8
RNCSWLS  EQU   ISTRNCA+4
RNCRN    EQU   ISTRNCA
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00014 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00013 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00012 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRSV22 EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPRSV09 EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00011 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00010 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00009 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
@NM00008 EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRENTRY EQU   ISTRPRE+20
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
RPRNAME  EQU   ISTRPRE
LOKXCL   EQU   @NM00006
LOKPRY   EQU   @NM00006
@NM00007 EQU   @NM00006
@NM00005 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PHROALEN EQU   ISTPHROA
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00002 EQU   @PB00003
SETDFLT@ EQU   @PB00002
@ENDDATA EQU   *
         END   ISTSDCMT,(C'PLS0116',0603,75172)
