         TITLE 'ISTSDCVG - SWITCHED/LOCAL SUBAREA SKELETON BUILD       *
                        '
ISTSDCVG CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSDCVG  75.168'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0359
*/********************************************************************/
*/*                          LINKAGE                                 */
*/********************************************************************/
*                                                                  0360
*   SAVCLLD=ADDR(RNCSAV1);                                         0360
         LA    @14,RNCSAV1(,RNCAPTR)                               0360
         ST    @14,SAVCLLD(,SAVREG)                                0360
*   RNCSAV1(2)=SAVREG;                                             0361
         ST    SAVREG,RNCSAV1+4(,RNCAPTR)                          0361
*   SAVREG=ADDR(RNCSAV1);                                          0362
*                                                                  0362
         LA    SAVREG,RNCSAV1(,RNCAPTR)                            0362
*/********************************************************************/
*/*                    BASE DATA AREA                                */
*/********************************************************************/
*                                                                  0363
*   GENERATE REFS(RNCDAT1,RNCSAV1,SAVREG) NOSETS                   0363
*       (USING @DATD-(RNCDAT1-RNCSAV1),SAVREG);                    0363
*                                                                  0363
         USING @DATD-(RNCDAT1-RNCSAV1),SAVREG
*/********************************************************************/
*/*                       MAINLINE ROUTINE                           */
*/* THIS ROUTINE SETS THE LAST ENTRY FLAG AND THEN CALLS SUBROUTINES */
*/* TO DO THE FOLLOWING:                                             */
*/*    1. VGROOM  - DETERMINE RDT SIZE AND GET SPACE.                */
*/*    2. VGMOVE  - MOVE BUILD AREAS TO RDT SKELETON.                */
*/*    3. VGSWTCH - FOR SWITCHED SUBAREA, MOVE AND FREE TABLES,      */
*/*                 GENERATE CID'S, AND COUNT LU'S.                  */
*/*    4. VGLOCAL - FOR LOCAL SUBAREA, GENERATE CID'S AND VERIFY     */
*/*                 LOCAL ADDRESSES.                                 */
*/* IF AN ERROR IS DETECTED IN GETTING STORAGE AN ERROR MESSAGE IS   */
*/* ISSUED AND THE BUILD IS KILLED. IF STORAGE REQUEST IS OK THE     */
*/* ADDRESS IS SAVED.                                                */
*/********************************************************************/
*                                                                  0364
*   MLCENT->RPRENTED='1'B;          /* SET LAST ENTRY                */
*                                                                  0364
         L     @14,MLCENT(,MLCAPTR)                                0364
         OI    RPRENTED(@14),B'00000100'                           0364
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(VGROOM)REQUEST                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0365
*   DO;                                                            0365
*     GOTO VGROOM;                                                 0366
         B     VGROOM                                              0366
*VGROOM#:                                                          0367
*   END;                            /* GET SKELETON SPACE            */
VGROOM#  DS    0H                                                  0368
*   IF RC^=0                        /* NO STORAGE?                   */
*     THEN                                                         0368
         SLR   @14,@14                                             0368
         CH    @14,RC                                              0368
         BE    @RF00368                                            0368
*     DO;                                                          0369
*                                                                  0369
*/*TPMSG MSGID('303I')MSG((ADDR(MLCCONFG)))PLAREA(MLCTPMSG)OPTIONS(NCSP
*SID)                                                                */
*                                                                  0370
*       DO;                                                        0370
*         DCL                                                      0371
*           REG1005 REG(1) PTR;                                    0371
*         RFY                                                      0372
*          (REG1005) RSTD;                                         0372
*         RFY                                                      0373
*          (EMCR13) RSTD;                                          0373
*         DCL                                                      0374
*           1 * BASED(REG1005),                                    0374
*            2 CMZID005 PTR(31),                                   0374
*            2 *,                                                  0374
*             3 CMZRL005 PTR(8),                                   0374
*             3 CMZRA005 PTR(24) BDY(BYTE),                        0374
*            2 CMZEA005 PTR(31),                                   0374
*            2 CMZVP005 PTR(31);                                   0374
*                                                                  0374
*/*XREGSET  PID('PLAREA')PPARM(MLCTPMSG)RREG(,REG1005)               */
*                                                                  0375
*         DO;                                                      0375
*           REG1005=ADDR(MLCTPMSG); /* SET RREG SYMBOL TO ADDRESS OF
*                                      PPARM OPERAND                 */
         LA    REG1005,MLCTPMSG(,MLCAPTR)                          0376
*         END;                      /* XREGSET                       */
*         CMZID005=0;                                              0378
         ST    @14,CMZID005(,REG1005)                              0378
*         CMZRL005=0;                                              0379
         MVI   CMZRL005(REG1005),X'00'                             0379
*         CMZRA005=0;                                              0380
         STCM  @14,7,CMZRA005(REG1005)                             0380
*         CMZEA005=0;                                              0381
         ST    @14,CMZEA005(,REG1005)                              0381
*         CMZVP005=0;                                              0382
         ST    @14,CMZVP005(,REG1005)                              0382
*         DCL                                                      0383
*           CMZAA005 CHAR(4) INIT('303I');                         0383
*         CMZID005=ADDR(CMZAA005);                                 0384
         LA    @14,CMZAA005                                        0384
         ST    @14,CMZID005(,REG1005)                              0384
*         CMZVP005=ADDR(MLCCONFG);                                 0385
         LA    @14,MLCCONFG(,MLCAPTR)                              0385
         ST    @14,CMZVP005(,REG1005)                              0385
*         DCL                                                      0386
*           CMZSA005(18) PTR(31) BASED(EMCR13);                    0386
*         CMZSA005(5)=ADDR(NCSPLSID);                              0387
         L     @14,MLCNCSPL(,MLCAPTR)                              0387
         LA    @14,NCSPLSID(,@14)                                  0387
         ST    @14,CMZSA005+16(,EMCR13)                            0387
*         DCL                                                      0388
*           REG15005 REG(15) PTR;                                  0388
*         RFY                                                      0389
*           REG15005 RSTD;                                         0389
*         DO;                       /* LISATCVT                    0390
*                                      CVTBASE(PAGEABLE,(REG15005))  */
*           REG15005=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     REG15005,ATCLCPTR                                   0391
*         END;                      /* LISATCVT                      */
*         DCL                                                      0393
*           CMTA005 BASED(REG15005) ENTRY VALUERANGE(*);           0393
*         REG15005=REG15005->ATCMSGP;                              0394
         L     REG15005,ATCMSGP(,REG15005)                         0394
*         CALL CMTA005;                                            0395
         BALR  @14,@15                                             0395
*         RESPECIFY                                                0396
*          (REG1005,                                               0396
*           REG15005) UNRESTRICTED;                                0396
*         RFY                                                      0397
*          (EMCR13) UNRSTD;                                        0397
*       END;                        /*                       @D32CKQH*/
*       RC=4;                                                      0399
         MVC   RC(2),@CH00075                                      0399
*     END;                                                         0400
*   ELSE                                                           0401
*     DO;                                                          0401
         B     @RC00368                                            0401
@RF00368 DS    0H                                                  0402
*       MLCSKEL=RPHSRPRM;                                          0402
*                                                                  0402
         L     @14,RPHSRPRM(,RPHPTR)                               0402
         ST    @14,MLCSKEL(,MLCAPTR)                               0402
*       /*************************************************************/
*       /*                                                           */
*       /* SEGMENT(VGMOVE)REQUEST                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0403
*       DO;                                                        0403
*         GOTO VGMOVE;                                             0404
         B     VGMOVE                                              0404
*VGMOVE#:                                                          0405
*       END;                                                       0405
VGMOVE#  DS    0H                                                  0406
*       IF RNCGSWBD='1'B            /* SWITCHED SUBAREA BUILD?       */
*         THEN                      /* SEGMENT(VGSWTCH)REQUEST       */
         TM    RNCGSWBD(RNCAPTR),B'00000010'                       0406
         BNO   @RF00406                                            0406
*         DO;                                                      0407
*           GOTO VGSWTCH;                                          0408
         B     VGSWTCH                                             0408
*VGSWTCH#:                                                         0409
*         END;                                                     0409
*       ELSE                        /* SEGMENT(VGLOCAL)REQUEST       */
*         DO;                                                      0410
         B     @RC00406                                            0410
@RF00406 DS    0H                                                  0411
*           GOTO VGLOCAL;                                          0411
         B     VGLOCAL                                             0411
*VGLOCAL#:                                                         0412
*         END;                                                     0412
VGLOCAL# DS    0H                                                  0413
*     END;                                                         0413
@RC00406 DS    0H                                                  0414
*   SAVREG=RNCSAV1(2);                                             0414
@RC00368 L     SAVREG,RNCSAV1+4(,RNCAPTR)                          0414
*   RETURN CODE(RC);                                               0415
         LH    @15,RC                                              0415
         L     @14,12(,@13)                                        0415
         LM    @00,@12,20(@13)                                     0415
         BR    @14                                                 0415
*                                                                  0416
*/********************************************************************/
*/*                       VGROOM ROUTINE                             */
*/* THIS ROUTINE GETS A BLOCK OF CONTIGUOUS STORAGE TO PUT THE RDT   */
*/* TOGETHER. CALCULATION OF SIZE IS AS FOLLOWS:                     */
*/*   LOCAL SUBAREA - ADD UP LENGTH USED IN EACH BUILD AREA BLOCK.   */
*/*   SWITCHED SUBAREA - GO THROUGTH EACH ENTRY WITHIN THE BLOCKS    */
*/*                      AND ADD UP ENTRY LENGTH PLUS THE LENGTH OF  */
*/*                      ANY TABLES THE ENTRIES NEED.                */
*/********************************************************************/
*/* SEGMENT(VGROOM)START                                             */
*                                                                  0416
*   DO;                                                            0416
*     GOTO VGROOM@;                                                0417
*VGROOM:                                                           0418
*   END;                                                           0418
VGROOM   DS    0H                                                  0419
*   BLOCKPTR=RNCFENT;               /* FIRST BLOCK                   */
         L     BLOCKPTR,RNCFENT(,RNCAPTR)                          0419
*   ENTRYPTR=ADDR(BLDAREA);         /* FIRST ENTRY                   */
         LA    ENTRYPTR,BLDAREA(,BLOCKPTR)                         0420
*   SKELSIZ=0;                      /* START AT ZERO                 */
         SLR   @14,@14                                             0421
         ST    @14,SKELSIZ                                         0421
*   IF RNCGSWBD='1'B                /* SWITCHED SUBAREA BUILD?       */
*     THEN                                                         0422
         TM    RNCGSWBD(RNCAPTR),B'00000010'                       0422
         BNO   @RF00422                                            0422
*     DO;                                                          0423
*       COUNT=0;                    /* START AT ZERO                 */
         LR    COUNT,@14                                           0424
*       IF RSWDIALT=0               /* NO DNT?                       */
*         THEN                                                     0425
         C     @14,RSWDIALT(,ENTRYPTR)                             0425
         BE    @RT00425                                            0425
*         ;                                                        0426
*       ELSE                                                       0427
*         SKELSIZ=SKELSIZ+(RSWDIALZ*LENGTH(ISTDNT));               0427
         LH    @14,RSWDIALZ(,ENTRYPTR)                             0427
         MH    @14,@CH02290                                        0427
         AL    @14,SKELSIZ                                         0427
         ST    @14,SKELSIZ                                         0427
*       IF RSWGRUPT=0               /* NO GNT?                       */
*         THEN                                                     0428
@RT00425 L     @14,RSWGRUPT(,ENTRYPTR)                             0428
         LTR   @14,@14                                             0428
         BZ    @RT00428                                            0428
*         ;                                                        0429
*       ELSE                                                       0430
*         SKELSIZ=SKELSIZ+(RSWGRUPZ*LENGTH(ISTGNT));               0430
         LH    @14,RSWGRUPZ(,ENTRYPTR)                             0430
         SLA   @14,3                                               0430
         AL    @14,SKELSIZ                                         0430
         ST    @14,SKELSIZ                                         0430
*       DO WHILE(BLOCKPTR^=0);                                     0431
@RT00428 B     @DE00431                                            0431
@DL00431 DS    0H                                                  0432
*         SKELSIZ=SKELSIZ+RPRELEN;  /* ADD IN ENTRY LENGTH           */
         LH    @14,RPRELEN(,ENTRYPTR)                              0432
         AL    @14,SKELSIZ                                         0432
         ST    @14,SKELSIZ                                         0432
*         IF RPRENTRY=RPRENTCC      /* PU ENTRY?                     */
*             &RCCPATHT^=0          /* AND PATH TABLE?               */
*           THEN                                                   0433
         CLI   RPRENTRY(ENTRYPTR),X'71'                            0433
         BNE   @RF00433                                            0433
         L     @03,RCCPATHT(,ENTRYPTR)                             0433
         LTR   @03,@03                                             0433
         BZ    @RF00433                                            0433
*           SKELSIZ=SKELSIZ+(RCCPATHZ*LENGTH(ISTPAT));             0434
         LH    @03,RCCPATHZ(,ENTRYPTR)                             0434
         SLA   @03,3                                               0434
         ALR   @14,@03                                             0434
         ST    @14,SKELSIZ                                         0434
*         ELSE                                                     0435
*           ;                                                      0435
@RF00433 DS    0H                                                  0436
*         COUNT=COUNT+RPRELEN;                                     0436
         AH    COUNT,RPRELEN(,ENTRYPTR)                            0436
*         IF COUNT>=BLDARLNG        /* BLOCK FINISHED?               */
*           THEN                                                   0437
         C     COUNT,BLDARLNG(,BLOCKPTR)                           0437
         BL    @RF00437                                            0437
*           DO;                                                    0438
*             COUNT=0;              /* SET UP                        */
         SLR   COUNT,COUNT                                         0439
*             BLOCKPTR=BLDARFWD;    /* FOR NEXT                      */
         L     BLOCKPTR,BLDARFWD(,BLOCKPTR)                        0440
*             ENTRYPTR=ADDR(BLDAREA);/* BLOCK                        */
         LA    ENTRYPTR,BLDAREA(,BLOCKPTR)                         0441
*           END;                                                   0442
*         ELSE                                                     0443
*           ENTRYPTR=ENTRYPTR+RPRELEN;/* NEXT ENTRY                  */
         B     @RC00437                                            0443
@RF00437 AH    ENTRYPTR,RPRELEN(,ENTRYPTR)                         0443
*       END;                                                       0444
@RC00437 DS    0H                                                  0444
@DE00431 LTR   BLOCKPTR,BLOCKPTR                                   0444
         BNZ   @DL00431                                            0444
*     END;                                                         0445
*   ELSE                                                           0446
*     DO;                                                          0446
*                                                                  0446
         B     @RC00422                                            0446
@RF00422 DS    0H                                                  0447
*/********************************************************************/
*/*                  COMPUTE LOCAL SIZE                              */
*/********************************************************************/
*                                                                  0447
*       DO WHILE(BLOCKPTR^=0);                                     0447
         B     @DE00447                                            0447
@DL00447 DS    0H                                                  0448
*         SKELSIZ=SKELSIZ+BLDARLNG; /* ADD BLOCK LENGTH              */
         L     @14,SKELSIZ                                         0448
         AL    @14,BLDARLNG(,BLOCKPTR)                             0448
         ST    @14,SKELSIZ                                         0448
*         BLOCKPTR=BLDARFWD;        /* NEXT BLOCK                    */
         L     BLOCKPTR,BLDARFWD(,BLOCKPTR)                        0449
*       END;                                                       0450
@DE00447 LTR   BLOCKPTR,BLOCKPTR                                   0450
         BNZ   @DL00447                                            0450
*     END;                                                         0451
*                                                                  0451
*   /*****************************************************************/
*   /*                                                               */
*   /* GETSTOR SIZE(SKELSIZ)                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0452
*   DO;                                                            0452
*                                                                  0452
@RC00422 DS    0H                                                  0453
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0453
*     DCL                                                          0453
*       GPR00F FIXED(31) REG(00);                                  0453
*     DCL                                                          0454
*       GPR00P PTR(31) REG(00);                                    0454
*     DCL                                                          0455
*       GPR01F FIXED(31) REG(01);                                  0455
*     DCL                                                          0456
*       GPR01P PTR(31) REG(01);                                    0456
*     DCL                                                          0457
*       GPR02F FIXED(31) REG(02);                                  0457
*     DCL                                                          0458
*       GPR02P PTR(31) REG(02);                                    0458
*     DCL                                                          0459
*       GPR03F FIXED(31) REG(03);                                  0459
*     DCL                                                          0460
*       GPR03P PTR(31) REG(03);                                    0460
*     DCL                                                          0461
*       GPR04F FIXED(31) REG(04);                                  0461
*     DCL                                                          0462
*       GPR04P PTR(31) REG(04);                                    0462
*     DCL                                                          0463
*       GPR05F FIXED(31) REG(05);                                  0463
*     DCL                                                          0464
*       GPR05P PTR(31) REG(05);                                    0464
*     DCL                                                          0465
*       GPR06F FIXED(31) REG(06);                                  0465
*     DCL                                                          0466
*       GPR06P PTR(31) REG(06);                                    0466
*     DCL                                                          0467
*       GPR07F FIXED(31) REG(07);                                  0467
*     DCL                                                          0468
*       GPR07P PTR(31) REG(07);                                    0468
*     DCL                                                          0469
*       GPR08F FIXED(31) REG(08);                                  0469
*     DCL                                                          0470
*       GPR08P PTR(31) REG(08);                                    0470
*     DCL                                                          0471
*       GPR09F FIXED(31) REG(09);                                  0471
*     DCL                                                          0472
*       GPR09P PTR(31) REG(09);                                    0472
*     DCL                                                          0473
*       GPR10F FIXED(31) REG(10);                                  0473
*     DCL                                                          0474
*       GPR10P PTR(31) REG(10);                                    0474
*     DCL                                                          0475
*       GPR11F FIXED(31) REG(11);                                  0475
*     DCL                                                          0476
*       GPR11P PTR(31) REG(11);                                    0476
*     DCL                                                          0477
*       GPR12F FIXED(31) REG(12);                                  0477
*     DCL                                                          0478
*       GPR12P PTR(31) REG(12);                                    0478
*     DCL                                                          0479
*       GPR13F FIXED(31) REG(13);                                  0479
*     DCL                                                          0480
*       GPR13P PTR(31) REG(13);                                    0480
*     DCL                                                          0481
*       GPR14F FIXED(31) REG(14);                                  0481
*     DCL                                                          0482
*       GPR14P PTR(31) REG(14);                                    0482
*     DCL                                                          0483
*       GPR15F FIXED(31) REG(15);                                  0483
*     DCL                                                          0484
*       GPR15P PTR(31) REG(15);                                    0484
*     RFY                                                          0485
*      (GPR00P,                                                    0485
*       GPR01P,                                                    0485
*       GPR02P,                                                    0485
*       GPR03P) RSTD;                                              0485
*     RFY                                                          0486
*       ISTRPH BASED(GPR01P);                                      0486
*     GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,
*         GPR10P,GPR11P,GPR12P,GPR13P) SETS(RPHWORK);              0487
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*     GPR00F=SKELSIZ;               /* SIZE IN REG0                  */
         L     GPR00F,SKELSIZ                                      0488
*     DCL                                                          0489
*       1 CMZA0018 FIXED(31) STATIC LOCAL,                         0489
*        2 * FIXED(8) INIT(64),     /* OPTION FLAGS                  */
*        2 * FIXED(8) INIT(96),     /* STORAGE KEY                   */
*        2 * FIXED(8) INIT(231),    /* SUBPOOL NUMBER                */
*        2 * FIXED(8) INIT('00'X);  /* REQUEST TYPE                  */
*     GPR03F=CMZA0018;                                             0490
         L     GPR03F,CMZA0018                                     0490
*     DO;                           /* LISATCVT                    0491
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*       GPR02P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     0492
*     END;                          /* LISATCVT                      */
*     CALL GPR02P->ATCGTSTR;        /* CALL ISTORFSR                 */
         L     @15,ATCGTSTR(,GPR02P)                               0494
         BALR  @14,@15                                             0494
*     RFY                                                          0495
*      (GPR00P,                                                    0495
*       GPR01P,                                                    0495
*       GPR02P,                                                    0495
*       GPR03P) UNRSTD;                                            0495
*   END;                            /* END OF GETSTOR                */
*   RC=GPR15;                                                      0497
         STH   GPR15,RC                                            0497
*   SKELSIZ=(SKELSIZ+7)&-8;         /* ROUND TO MULTIPLE OF 8      0498
*                                                            @XA00477*/
         LA    @14,7                                               0498
         AL    @14,SKELSIZ                                         0498
         N     @14,@CF02230                                        0498
         ST    @14,SKELSIZ                                         0498
*/* SEGMENT(VGROOM)FINISH                                            */
*                                                                  0499
*   DO;                                                            0499
*     GOTO VGROOM#;                                                0500
         B     VGROOM#                                             0500
*VGROOM@:                                                          0501
*   END;                                                           0501
VGROOM@  DS    0H                                                  0502
*                                                                  0502
*/********************************************************************/
*/*                    VGMOVE ROUTINE                                */
*/* MOVE ALL BUILD AREAS IN CHAIN INTO THE CONTIGUOUS SPACE FOR      */
*/* SKELETON RDT. MOVE IN ONLY THE USED PORTION OF THE BUILD AREAS.  */
*/********************************************************************/
*/* SEGMENT(VGMOVE)START                                             */
*                                                                  0502
*   DO;                                                            0502
*     GOTO VGMOVE@;                                                0503
         B     VGMOVE@                                             0503
*VGMOVE:                                                           0504
*   END;                                                           0504
VGMOVE   DS    0H                                                  0505
*   BLOCKPTR=RNCFENT;               /* FIRST BUILD AREA              */
         L     BLOCKPTR,RNCFENT(,RNCAPTR)                          0505
*   RFY                                                            0506
*    (MVCLR1A,                                                     0506
*     MVCLR1L,                                                     0506
*     MVCLR2A,                                                     0506
*     MVCLR2L) RSTD;                                               0506
*   MVCLR1A=MLCSKEL;                /* MOVE TO ADR-UPDATED BY MVCL   */
         L     MVCLR1A,MLCSKEL(,MLCAPTR)                           0507
*   DO WHILE(BLOCKPTR^=0);                                         0508
         B     @DE00508                                            0508
@DL00508 DS    0H                                                  0509
*     MVCLR1L=BLDARLNG;             /* BUILD AREA LENGTH             */
         L     MVCLR1L,BLDARLNG(,BLOCKPTR)                         0509
*     MVCLR2A=ADDR(BLDAREA);        /* MOVE FROM ADDR                */
         LA    MVCLR2A,BLDAREA(,BLOCKPTR)                          0510
*     MVCLR2L=MVCLR1L;              /* MOVE LENGTH                   */
         LR    MVCLR2L,MVCLR1L                                     0511
*     MVCL(MVCLR1A,MVCLR2A);        /* MOVE IT                       */
         MVCL  MVCLR1A,MVCLR2A                                     0512
*     BLOCKPTR=BLDARFWD;            /* NEXT AREA                     */
         L     BLOCKPTR,BLDARFWD(,BLOCKPTR)                        0513
*   END;                                                           0514
@DE00508 LTR   BLOCKPTR,BLOCKPTR                                   0514
         BNZ   @DL00508                                            0514
*   TBLADR=MVCLR1A;                 /* SAVE IT FOR LATER             */
         ST    MVCLR1A,TBLADR                                      0515
*   RFY                                                            0516
*    (MVCLR1A,                                                     0516
*     MVCLR1L,                                                     0516
*     MVCLR2A,                                                     0516
*     MVCLR2L) UNRSTD;                                             0516
*   RDTLEN=SKELSIZ;                 /* SET RDT LENGTH                */
         L     @14,MLCSKEL(,MLCAPTR)                               0517
         MVC   RDTLEN(3,@14),SKELSIZ+1                             0517
*/* SEGMENT(VGMOVE)FINISH                                            */
*                                                                  0518
*   DO;                                                            0518
*     GOTO VGMOVE#;                                                0519
         B     VGMOVE#                                             0519
*VGMOVE@:                                                          0520
*   END;                                                           0520
VGMOVE@  DS    0H                                                  0521
*                                                                  0521
*/********************************************************************/
*/*                        VGSWTCH ROUTINE                           */
*/* MOVE INTO SKELETON ANY DIAL NUMBER, GROUP NAME, AND PATH TABLES  */
*/* THAT EXIST AND FREE THE SPACE THEY CAME FROM. DO NOT MOVE IN THE */
*/* FIRST 4 BYTES WHICH IS A LENGTH FIELD BUT USE IT TO FREE THE     */
*/* AREA. STARTING WITH HDR CID - GENERATE CID FOR EACH ENTRY.       */
*/********************************************************************/
*/* SEGMENT(VGSWTCH)START                                            */
*                                                                  0521
*   DO;                                                            0521
*     GOTO VGSWTCH@;                                               0522
         B     VGSWTCH@                                            0522
*VGSWTCH:                                                          0523
*   END;                                                           0523
VGSWTCH  DS    0H                                                  0524
*   RFY                                                            0524
*    (MVCLR1A,                                                     0524
*     MVCLR1L,                                                     0524
*     MVCLR2A,                                                     0524
*     MVCLR2L) RSTD;                                               0524
*   ENTRYPTR=MLCSKEL;               /* FIRST ENTRY                   */
         L     ENTRYPTR,MLCSKEL(,MLCAPTR)                          0525
*   IF RSWDIALT=0                   /* DNT NOT EXIST?                */
*     THEN                                                         0526
         L     @14,RSWDIALT(,ENTRYPTR)                             0526
         LTR   @14,@14                                             0526
         BZ    @RT00526                                            0526
*     ;                                                            0527
*   ELSE                                                           0528
*     DO;                                                          0528
*       IF RSWDIALZ=0               /* NO ENTRIES IN DNT?            */
*         THEN                                                     0529
         LH    @14,RSWDIALZ(,ENTRYPTR)                             0529
         LTR   @14,@14                                             0529
         BZ    @RT00529                                            0529
*         ;                                                        0530
*       ELSE                                                       0531
*         DO;                                                      0531
*           MVCLR1A=TBLADR;         /* MOVE TO ADDR                  */
         L     MVCLR1A,TBLADR                                      0532
*           MVCLR1L=RSWDIALZ*LENGTH(ISTDNT);/* MOVE LENGTH           */
         LH    MVCLR1L,RSWDIALZ(,ENTRYPTR)                         0533
         MH    MVCLR1L,@CH02290                                    0533
*           MVCLR2A=ADDR(RNCDT);    /* MOVE FROM ADDR                */
         L     MVCLR2A,RSWDIALT(,ENTRYPTR)                         0534
         LA    MVCLR2A,RNCDT(,MVCLR2A)                             0534
*           MVCLR2L=MVCLR1L;        /* MOVE LENGTH                   */
         LR    MVCLR2L,MVCLR1L                                     0535
*           MVCL(MVCLR1A,MVCLR2A);  /* MOVE THE DNT                  */
         MVCL  MVCLR1A,MVCLR2A                                     0536
*         END;                                                     0537
*                                                                  0537
*/*  FREESTOR AREA(RSWDIALT)SIZE(RNCDTLN)TYPE(PAGEABLE)ADSPACE(PRIVATE)
*                                                                    */
*                                                                  0538
*       DO;                                                        0538
*                                                                  0538
@RT00529 DS    0H                                                  0539
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0539
*         RFY                                                      0539
*          (GPR00P,                                                0539
*           GPR01P,                                                0539
*           GPR02P,                                                0539
*           GPR03P) RSTD;                                          0539
*         RFY                                                      0540
*           ISTRPH BASED(GPR01P);                                  0540
*         GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P) SETS(RPHWORK);   0541
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*         GPR00F=RNCDTLN;           /* SIZE IN REG0                  */
         L     @14,RSWDIALT(,ENTRYPTR)                             0542
         L     GPR00F,RNCDTLN(,@14)                                0542
*         DCL                                                      0543
*           1 CMZA0040 FIXED(31) STATIC LOCAL,                     0543
*            2 * FIXED(8) INIT(64), /* OPTION FLAGS                  */
*            2 * FIXED(8) INIT(96), /* STORAGE KEY                   */
*            2 * FIXED(8) INIT(229),/* SUBPOOL NUMBER                */
*            2 * FIXED(8) INIT('01'X);/* REQUEST TYPE                */
*         GPR03F=CMZA0040;                                         0544
         L     GPR03F,CMZA0040                                     0544
*         RFY                                                      0545
*          (GPR04P) RSTD;                                          0545
*         GPR04P=RSWDIALT;          /* PUT FREEMAIN ADDR IN REG4     */
         LR    GPR04P,@14                                          0546
*         DO;                       /* LISATCVT                    0547
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*           GPR02P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     0548
*         END;                      /* LISATCVT                      */
*         CALL GPR02P->ATCGTSTR;    /* CALL ISTORFSR                 */
         L     @15,ATCGTSTR(,GPR02P)                               0550
         BALR  @14,@15                                             0550
*         RFY                                                      0551
*          (GPR00P,                                                0551
*           GPR01P,                                                0551
*           GPR02P,                                                0551
*           GPR03P,                                                0551
*           GPR04P) UNRSTD;                                        0551
*       END;                        /* END OF FREESTOR               */
*                                                                  0552
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @X04BHQH*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0553
*       IF RSWDIALZ=0               /* NO ENTRIES IN DNT?            */
*         THEN                                                     0553
         SLR   @14,@14                                             0553
         CH    @14,RSWDIALZ(,ENTRYPTR)                             0553
         BNE   @RF00553                                            0553
*         RSWDIALT=0;               /* CLEAR ADR PTR                 */
         ST    @14,RSWDIALT(,ENTRYPTR)                             0554
*       ELSE                                                       0555
*         DO;                                                      0555
         B     @RC00553                                            0555
@RF00553 DS    0H                                                  0556
*           RSWDIALT=TBLADR-MLCSKEL;/* DNT OFFSET                    */
         L     @14,TBLADR                                          0556
         SL    @14,MLCSKEL(,MLCAPTR)                               0556
         ST    @14,RSWDIALT(,ENTRYPTR)                             0556
*           TBLADR=MVCLR1A;         /* SAVE NEW ADDR                 */
         ST    MVCLR1A,TBLADR                                      0557
*         END;                                                     0558
*     END;                                                         0559
@RC00553 DS    0H                                                  0560
*   IF RSWGRUPT=0                   /* GNT NOT EXIST?                */
*     THEN                                                         0560
@RT00526 L     @14,RSWGRUPT(,ENTRYPTR)                             0560
         LTR   @14,@14                                             0560
         BZ    @RT00560                                            0560
*     ;                                                            0561
*   ELSE                                                           0562
*     DO;                                                          0562
*       IF RSWGRUPZ=0               /* NO ENTRIES IN GNT?            */
*         THEN                                                     0563
         LH    @14,RSWGRUPZ(,ENTRYPTR)                             0563
         LTR   @14,@14                                             0563
         BZ    @RT00563                                            0563
*         ;                                                        0564
*       ELSE                                                       0565
*         DO;                                                      0565
*           MVCLR1A=TBLADR;         /* MOVE TO ADDR                  */
         L     MVCLR1A,TBLADR                                      0566
*           MVCLR1L=RSWGRUPZ*LENGTH(ISTGNT);/* MOVE LENGTH           */
         LH    MVCLR1L,RSWGRUPZ(,ENTRYPTR)                         0567
         SLA   MVCLR1L,3                                           0567
*           MVCLR2A=ADDR(RNCGT);    /* MOVE FROM ADDR                */
         L     MVCLR2A,RSWGRUPT(,ENTRYPTR)                         0568
         LA    MVCLR2A,RNCGT(,MVCLR2A)                             0568
*           MVCLR2L=MVCLR1L;        /* MOVE LENGTH                   */
         LR    MVCLR2L,MVCLR1L                                     0569
*           MVCL(MVCLR1A,MVCLR2A);  /* MOVE THE GNT                  */
         MVCL  MVCLR1A,MVCLR2A                                     0570
*         END;                                                     0571
*                                                                  0571
*/*  FREESTOR AREA(RSWGRUPT)SIZE(RNCGTLN)TYPE(PAGEABLE)ADSPACE(PRIVATE)
*                                                                    */
*                                                                  0572
*       DO;                                                        0572
*                                                                  0572
@RT00563 DS    0H                                                  0573
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0573
*         RFY                                                      0573
*          (GPR00P,                                                0573
*           GPR01P,                                                0573
*           GPR02P,                                                0573
*           GPR03P) RSTD;                                          0573
*         RFY                                                      0574
*           ISTRPH BASED(GPR01P);                                  0574
*         GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P) SETS(RPHWORK);   0575
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*         GPR00F=RNCGTLN;           /* SIZE IN REG0                  */
         L     @14,RSWGRUPT(,ENTRYPTR)                             0576
         L     GPR00F,RNCGTLN(,@14)                                0576
*         DCL                                                      0577
*           1 CMZA0059 FIXED(31) STATIC LOCAL,                     0577
*            2 * FIXED(8) INIT(64), /* OPTION FLAGS                  */
*            2 * FIXED(8) INIT(96), /* STORAGE KEY                   */
*            2 * FIXED(8) INIT(229),/* SUBPOOL NUMBER                */
*            2 * FIXED(8) INIT('01'X);/* REQUEST TYPE                */
*         GPR03F=CMZA0059;                                         0578
         L     GPR03F,CMZA0059                                     0578
*         RFY                                                      0579
*          (GPR04P) RSTD;                                          0579
*         GPR04P=RSWGRUPT;          /* PUT FREEMAIN ADDR IN REG4     */
         LR    GPR04P,@14                                          0580
*         DO;                       /* LISATCVT                    0581
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*           GPR02P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     0582
*         END;                      /* LISATCVT                      */
*         CALL GPR02P->ATCGTSTR;    /* CALL ISTORFSR                 */
         L     @15,ATCGTSTR(,GPR02P)                               0584
         BALR  @14,@15                                             0584
*         RFY                                                      0585
*          (GPR00P,                                                0585
*           GPR01P,                                                0585
*           GPR02P,                                                0585
*           GPR03P,                                                0585
*           GPR04P) UNRSTD;                                        0585
*       END;                        /* END OF FREESTOR               */
*                                                                  0586
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @X04BHQH*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0587
*       IF RSWGRUPZ=0               /* NO ENTRIES IN GNT?            */
*         THEN                                                     0587
         SLR   @14,@14                                             0587
         CH    @14,RSWGRUPZ(,ENTRYPTR)                             0587
         BNE   @RF00587                                            0587
*         RSWGRUPT=0;               /* CLEAR ADR PTR                 */
         ST    @14,RSWGRUPT(,ENTRYPTR)                             0588
*       ELSE                                                       0589
*         DO;                                                      0589
         B     @RC00587                                            0589
@RF00587 DS    0H                                                  0590
*           RSWGRUPT=TBLADR-MLCSKEL;/* GNT OFFSET                    */
         L     @14,TBLADR                                          0590
         SL    @14,MLCSKEL(,MLCAPTR)                               0590
         ST    @14,RSWGRUPT(,ENTRYPTR)                             0590
*           TBLADR=MVCLR1A;         /* SAVE NEW ADDR                 */
         ST    MVCLR1A,TBLADR                                      0591
*         END;                                                     0592
*     END;                                                         0593
@RC00587 DS    0H                                                  0594
*   SAVCID=RPRCOMID;                /* SAVE CID                      */
@RT00560 L     @14,RPRCOMID(,ENTRYPTR)                             0594
         ST    @14,SAVCID                                          0594
*   DO WHILE(RPRENTED='0'B);        /* LOOK FOR LAST ENTRY           */
         B     @DE00595                                            0595
@DL00595 DS    0H                                                  0596
*     SAVELEN=RPRELEN;              /* SAVE ENTRY LENGTH             */
         LH    @14,RPRELEN(,ENTRYPTR)                              0596
         LR    SAVELEN,@14                                         0596
*     ENTRYPTR=ENTRYPTR+RPRELEN;    /* NEXT ENTRY                    */
         ALR   ENTRYPTR,@14                                        0597
*     RPRPELEN=SAVELEN;             /* SET PREV ENTRY LENGTH         */
         STH   SAVELEN,RPRPELEN(,ENTRYPTR)                         0598
*     RDTCTSNT=RDTCTSNT+1;          /* UP COUNT TO GET SNT           */
         L     @14,MLCSKEL(,MLCAPTR)                               0599
         LA    @04,1                                               0599
         LH    @00,RDTCTSNT(,@14)                                  0599
         ALR   @00,@04                                             0599
         STH   @00,RDTCTSNT(,@14)                                  0599
*     SAVCID=SAVCID+1;              /* STEP CID                      */
         AL    @04,SAVCID                                          0600
         ST    @04,SAVCID                                          0600
*     RPRCOMID=SAVCID;              /* USE IN THIS ENTRY             */
         ST    @04,RPRCOMID(,ENTRYPTR)                             0601
*     IF RPRENTRY=RPRENTCC          /* PU ENTRY?                     */
*       THEN                                                       0602
         CLI   RPRENTRY(ENTRYPTR),X'71'                            0602
         BNE   @RF00602                                            0602
*       DO;                                                        0603
*         IF RCCPATHT=0             /* PATH TABLE NOT EXIST?         */
*           THEN                                                   0604
         L     @14,RCCPATHT(,ENTRYPTR)                             0604
         LTR   @14,@14                                             0604
         BZ    @RT00604                                            0604
*           ;                                                      0605
*         ELSE                                                     0606
*           DO;                                                    0606
*             IF RCCPATHZ=0         /* NO ENTRIES IN PAT?            */
*               THEN                                               0607
         LH    @14,RCCPATHZ(,ENTRYPTR)                             0607
         LTR   @14,@14                                             0607
         BZ    @RT00607                                            0607
*               ;                                                  0608
*             ELSE                                                 0609
*               DO;                                                0609
*                 MVCLR1A=TBLADR;   /* MOVE TO ADDR                  */
         L     MVCLR1A,TBLADR                                      0610
*                 MVCLR1L=RCCPATHZ*LENGTH(ISTPAT);/* MOVE LENGTH     */
         LH    MVCLR1L,RCCPATHZ(,ENTRYPTR)                         0611
         SLA   MVCLR1L,3                                           0611
*                 MVCLR2A=ADDR(RNCPT);/* MOVE FROM ADDR              */
         L     MVCLR2A,RCCPATHT(,ENTRYPTR)                         0612
         LA    MVCLR2A,RNCPT(,MVCLR2A)                             0612
*                 MVCLR2L=MVCLR1L;  /* MOVE LENGTH                   */
         LR    MVCLR2L,MVCLR1L                                     0613
*                 MVCL(MVCLR1A,MVCLR2A);/* MOVE PATH TABLE           */
         MVCL  MVCLR1A,MVCLR2A                                     0614
*               END;                                               0615
*                                                                  0615
*             /*******************************************************/
*             /*                                                     */
*             /* FREESTOR AREA(RCCPATHT)SIZE(RNCPTLN)TYPE(PAGEABLE)AD*/
*             /* SPACE(PRIVATE)                                      */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0616
*             DO;                                                  0616
*                                                                  0616
@RT00607 DS    0H                                                  0617
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0617
*               RFY                                                0617
*                (GPR00P,                                          0617
*                 GPR01P,                                          0617
*                 GPR02P,                                          0617
*                 GPR03P) RSTD;                                    0617
*               RFY                                                0618
*                 ISTRPH BASED(GPR01P);                            0618
*               GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                   GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P) SETS(
*                   RPHWORK);                                      0619
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*               GPR00F=RNCPTLN;     /* SIZE IN REG0                  */
         L     @14,RCCPATHT(,ENTRYPTR)                             0620
         L     GPR00F,RNCPTLN(,@14)                                0620
*               DCL                                                0621
*                 1 CMZA0078 FIXED(31) STATIC LOCAL,               0621
*                  2 * FIXED(8) INIT(64),/* OPTION FLAGS             */
*                  2 * FIXED(8) INIT(96),/* STORAGE KEY              */
*                  2 * FIXED(8) INIT(229),/* SUBPOOL NUMBER          */
*                  2 * FIXED(8) INIT('01'X);/* REQUEST TYPE          */
*               GPR03F=CMZA0078;                                   0622
         L     GPR03F,CMZA0078                                     0622
*               RFY                                                0623
*                (GPR04P) RSTD;                                    0623
*               GPR04P=RCCPATHT;    /* PUT FREEMAIN ADDR IN REG4     */
         LR    GPR04P,@14                                          0624
*               DO;                 /* LISATCVT                    0625
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*                 GPR02P=ATCLCPTR;  /* SET UP ATCVT POINTER          */
         L     GPR02P,ATCLCPTR                                     0626
*               END;                /* LISATCVT                      */
*               CALL GPR02P->ATCGTSTR;/* CALL ISTORFSR               */
         L     @15,ATCGTSTR(,GPR02P)                               0628
         BALR  @14,@15                                             0628
*               RFY                                                0629
*                (GPR00P,                                          0629
*                 GPR01P,                                          0629
*                 GPR02P,                                          0629
*                 GPR03P,                                          0629
*                 GPR04P) UNRSTD;                                  0629
*             END;                  /* END OF FREESTOR               */
*                                                                  0630
*             /*******************************************************/
*             /*                                                     */
*             /*                                             @X04BHQH*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0631
*             IF RCCPATHZ=0         /* NO ENTRIES IN PAT?            */
*               THEN                                               0631
         SLR   @14,@14                                             0631
         CH    @14,RCCPATHZ(,ENTRYPTR)                             0631
         BNE   @RF00631                                            0631
*               RCCPATHT=0;         /* CLEAR ADR PTR                 */
         ST    @14,RCCPATHT(,ENTRYPTR)                             0632
*             ELSE                                                 0633
*               DO;                                                0633
         B     @RC00631                                            0633
@RF00631 DS    0H                                                  0634
*                 RCCPATHT=TBLADR-MLCSKEL;/* PATH TABLE OFFSET       */
         L     @14,TBLADR                                          0634
         SL    @14,MLCSKEL(,MLCAPTR)                               0634
         ST    @14,RCCPATHT(,ENTRYPTR)                             0634
*                 TBLADR=MVCLR1A;   /* SAVE NEW ADDR                 */
         ST    MVCLR1A,TBLADR                                      0635
*               END;                                               0636
*           END;                                                   0637
*       END;                                                       0638
*     ELSE                                                         0639
*       MLCSKEL->RSWCTELU=MLCSKEL->RSWCTELU+1;/* ADD TO LU COUNT     */
         B     @RC00602                                            0639
@RF00602 L     @14,MLCSKEL(,MLCAPTR)                               0639
         LA    @04,1                                               0639
         AH    @04,RSWCTELU(,@14)                                  0639
         STH   @04,RSWCTELU(,@14)                                  0639
*   END;                                                           0640
@RC00602 DS    0H                                                  0640
@DE00595 TM    RPRENTED(ENTRYPTR),B'00000100'                      0640
         BZ    @DL00595                                            0640
*   RNCTBFR='1'B;                   /* SET TABLES FREED FLAG         */
         OI    RNCTBFR(RNCAPTR),B'00100000'                        0641
*   RFY                                                            0642
*    (MVCLR1A,                                                     0642
*     MVCLR1L,                                                     0642
*     MVCLR2A,                                                     0642
*     MVCLR2L) UNRSTD;                                             0642
*                                                                  0642
*/* SEGMENT(VGSWTCH)FINISH                                           */
*                                                                  0643
*   DO;                                                            0643
*     GOTO VGSWTCH#;                                               0644
         B     VGSWTCH#                                            0644
*VGSWTCH@:                                                         0645
*   END;                                                           0645
VGSWTCH@ DS    0H                                                  0646
*                                                                  0646
*/********************************************************************/
*/*                         VGLOCAL ROUTINE                          */
*/* START WITH HEADER CID AND GENERATE THE CID FOR OTHER ENTRIES.    */
*/* FOR LU ADD THE LOCADDR VALUE, FOR DAN AND PU JUST ADD 1. IF      */
*/* THE LOCADDR VALUE IS INVALID, KILL THE BUILD.                    */
*/********************************************************************/
*/* SEGMENT(VGLOCAL)START                                            */
*                                                                  0646
*   DO;                                                            0646
*     GOTO VGLOCAL@;                                               0647
         B     VGLOCAL@                                            0647
*VGLOCAL:                                                          0648
*   END;                                                           0648
VGLOCAL  DS    0H                                                  0649
*   RFY                                                            0649
*     SAVLCA RSTD;                                                 0649
*   ENTRYPTR=MLCSKEL;               /* FIRST ENTRY                   */
         L     ENTRYPTR,MLCSKEL(,MLCAPTR)                          0650
*   SAVCID=RPRCOMID;                /* SAVE HEADER CID               */
         L     @14,RPRCOMID(,ENTRYPTR)                             0651
         ST    @14,SAVCID                                          0651
*   SAVLCA=0;                       /* CLR SAVED LOCADDR             */
         SLR   SAVLCA,SAVLCA                                       0652
*   DO WHILE(RC=0&RPRENTED^='1'B);  /* LOOP THRU ENTRIES             */
         B     @DE00653                                            0653
@DL00653 DS    0H                                                  0654
*     SAVELEN=RPRELEN;              /* SAVE ENTRY LENGTH             */
         LH    @14,RPRELEN(,ENTRYPTR)                              0654
         LR    SAVELEN,@14                                         0654
*     ENTRYPTR=ENTRYPTR+RPRELEN;    /* STEP TO NEXT ENTRY            */
         ALR   ENTRYPTR,@14                                        0655
*     RPRPELEN=SAVELEN;             /* SET PREV ENTRY LENGTH         */
         STH   SAVELEN,RPRPELEN(,ENTRYPTR)                         0656
*     IF RPRENTRY=RPRENTDA          /* DAN ENTRY?                    */
*       THEN                                                       0657
         CLI   RPRENTRY(ENTRYPTR),X'51'                            0657
         BNE   @RF00657                                            0657
*       DO;                                                        0658
*         SAVCID=SAVCID+SAVLCA+1;   /* STEP CID                      */
         LR    @14,SAVLCA                                          0659
         AL    @14,SAVCID                                          0659
         AL    @14,@CF00035                                        0659
         ST    @14,SAVCID                                          0659
*         RPRCOMID=SAVCID;          /* SET DAN CID                   */
         ST    @14,RPRCOMID(,ENTRYPTR)                             0660
*       END;                                                       0661
*     ELSE                                                         0662
*       DO;                                                        0662
         B     @RC00657                                            0662
@RF00657 DS    0H                                                  0663
*         IF RPRENTRY=RPRENTCC      /* PU ENTRY?                     */
*           THEN                                                   0663
         CLI   RPRENTRY(ENTRYPTR),X'71'                            0663
         BNE   @RF00663                                            0663
*           DO;                                                    0664
*             SAVLCA=0;             /* CLR SAVED LOCADDR             */
         SLR   SAVLCA,SAVLCA                                       0665
*             SAVCID=SAVCID+1;      /* STEP CID                      */
         LA    @14,1                                               0666
         AL    @14,SAVCID                                          0666
         ST    @14,SAVCID                                          0666
*             RPRCOMID=SAVCID;      /* SET PU CID                    */
         ST    @14,RPRCOMID(,ENTRYPTR)                             0667
*           END;                                                   0668
*         ELSE                                                     0669
*           DO;                                                    0669
         B     @RC00663                                            0669
@RF00663 DS    0H                                                  0670
*             IF RLULOCAD>SAVLCA    /* LOCADR VALID?                 */
*               THEN                                               0670
         SLR   @14,@14                                             0670
         IC    @14,RLULOCAD(,ENTRYPTR)                             0670
         CR    @14,SAVLCA                                          0670
         BNH   @RF00670                                            0670
*               DO;                                                0671
*                 SAVLCA=RLULOCAD;  /* SAVE LOCADDR                  */
         LR    SAVLCA,@14                                          0672
*                 RPRCOMID=SAVCID+SAVLCA;/* SET LU CID               */
         LR    @14,SAVLCA                                          0673
         AL    @14,SAVCID                                          0673
         ST    @14,RPRCOMID(,ENTRYPTR)                             0673
*                 MLCSKEL->RLSCTELU=MLCSKEL->RLSCTELU+1;/* STEP LU 0674
*                                      COUNT                         */
         L     @14,MLCSKEL(,MLCAPTR)                               0674
         LA    @08,1                                               0674
         AH    @08,RLSCTELU(,@14)                                  0674
         STH   @08,RLSCTELU(,@14)                                  0674
*               END;                                               0675
*             ELSE                                                 0676
*               DO;                                                0676
         B     @RC00670                                            0676
@RF00670 DS    0H                                                  0677
*                 RC=4;                                            0677
         MVC   RC(2),@CH00075                                      0677
*                 MLCNAME=RPRNAME;  /* LU NAME TO MLCA               */
         MVC   MLCNAME(8,MLCAPTR),RPRNAME(ENTRYPTR)                0678
*/*TPMSG MSGID('137I')MSG((ADDR(MLCCONFG)))OPTIONS(NCSPLSID)PLAREA(MLCT
*MSG)                                                                */
*                                                                  0679
*                 DO;                                              0679
*                   DCL                                            0680
*                     REG1099 REG(1) PTR;                          0680
*                   RFY                                            0681
*                    (REG1099) RSTD;                               0681
*                   RFY                                            0682
*                    (EMCR13) RSTD;                                0682
*                   DCL                                            0683
*                     1 * BASED(REG1099),                          0683
*                      2 CMZID099 PTR(31),                         0683
*                      2 *,                                        0683
*                       3 CMZRL099 PTR(8),                         0683
*                       3 CMZRA099 PTR(24) BDY(BYTE),              0683
*                      2 CMZEA099 PTR(31),                         0683
*                      2 CMZVP099 PTR(31);                         0683
*                                                                  0683
*/*XREGSET  PID('PLAREA')PPARM(MLCTPMSG)RREG(,REG1099)               */
*                                                                  0684
*                   DO;                                            0684
*                     REG1099=ADDR(MLCTPMSG);/* SET RREG SYMBOL TO 0685
*                                      ADDRESS OF PPARM OPERAND      */
         LA    REG1099,MLCTPMSG(,MLCAPTR)                          0685
*                   END;            /* XREGSET                       */
*                   CMZID099=0;                                    0687
         SLR   @14,@14                                             0687
         ST    @14,CMZID099(,REG1099)                              0687
*                   CMZRL099=0;                                    0688
         MVI   CMZRL099(REG1099),X'00'                             0688
*                   CMZRA099=0;                                    0689
         STCM  @14,7,CMZRA099(REG1099)                             0689
*                   CMZEA099=0;                                    0690
         ST    @14,CMZEA099(,REG1099)                              0690
*                   CMZVP099=0;                                    0691
         ST    @14,CMZVP099(,REG1099)                              0691
*                   DCL                                            0692
*                     CMZAA099 CHAR(4) INIT('137I');               0692
*                   CMZID099=ADDR(CMZAA099);                       0693
         LA    @14,CMZAA099                                        0693
         ST    @14,CMZID099(,REG1099)                              0693
*                   CMZVP099=ADDR(MLCCONFG);                       0694
         LA    @14,MLCCONFG(,MLCAPTR)                              0694
         ST    @14,CMZVP099(,REG1099)                              0694
*                   DCL                                            0695
*                     CMZSA099(18) PTR(31) BASED(EMCR13);          0695
*                   CMZSA099(5)=ADDR(NCSPLSID);                    0696
         L     @14,MLCNCSPL(,MLCAPTR)                              0696
         LA    @14,NCSPLSID(,@14)                                  0696
         ST    @14,CMZSA099+16(,EMCR13)                            0696
*                   DCL                                            0697
*                     REG15099 REG(15) PTR;                        0697
*                   RFY                                            0698
*                     REG15099 RSTD;                               0698
*                   DO;             /* LISATCVT                    0699
*                                      CVTBASE(PAGEABLE,(REG15099))  */
*                     REG15099=ATCLCPTR;/* SET UP ATCVT POINTER      */
         L     REG15099,ATCLCPTR                                   0700
*                   END;            /* LISATCVT                      */
*                   DCL                                            0702
*                     CMTA099 BASED(REG15099) ENTRY VALUERANGE(*); 0702
*                   REG15099=REG15099->ATCMSGP;                    0703
         L     REG15099,ATCMSGP(,REG15099)                         0703
*                   CALL CMTA099;                                  0704
         BALR  @14,@15                                             0704
*                   RESPECIFY                                      0705
*                    (REG1099,                                     0705
*                     REG15099) UNRESTRICTED;                      0705
*                   RFY                                            0706
*                    (EMCR13) UNRSTD;                              0706
*                 END;                                             0707
*               END;                                               0708
*           END;                                                   0709
@RC00670 DS    0H                                                  0710
*       END;                                                       0710
@RC00663 DS    0H                                                  0711
*     RPRSWDAF=RPRDAF;              /* SET SWITCHED DAF              */
@RC00657 MVC   RPRSWDAF(2,ENTRYPTR),RPRDAF(ENTRYPTR)               0711
*   END;                                                           0712
@DE00653 LH    @14,RC                                              0712
         LTR   @14,@14                                             0712
         BNZ   @DC00653                                            0712
         TM    RPRENTED(ENTRYPTR),B'00000100'                      0712
         BNO   @DL00653                                            0712
@DC00653 DS    0H                                                  0713
*   RFY                                                            0713
*     SAVLCA UNRSTD;                                               0713
*                                                                  0713
*/********************************************************************/
*/* THE SNT MUST BE GENERATED WITH ENTRIES IN IT FOR ALL POSSIBLE    */
*/* SUB-NODES.THE FOLLOWING REMOVES THE X PORTION OF THE DAF LEAVING */
*/* THE HIGHEST NODE  OR Y DAF VALUE USED. THIS NUMBER IS USED IN    */
*/* ISTSDCCB TO CALCULATE THE STORAGE TO GET FOR THE SNT FOR THIS RDT*/
*/********************************************************************/
*                                                                  0714
*   RFY                                                            0714
*    (XREG,                                                        0714
*     YREG) RSTD;                                                  0714
*   IF RC=0 THEN                                                   0715
         LH    @14,RC                                              0715
         LTR   @14,@14                                             0715
         BNZ   @RF00715                                            0715
*     DO;                                                          0716
*       XREG=ATCXRANG;              /* NUMBER OF BITS NECC. TO     0717
*                                      EXPRESS X                     */
         L     @14,ATCLCPTR                                        0717
         SLR   XREG,XREG                                           0717
         IC    XREG,ATCXRANG(,@14)                                 0717
*       YREG=RPRCOMID;                                             0718
         L     YREG,RPRCOMID(,ENTRYPTR)                            0718
*       GEN;                                                       0719
      SLL  YREG,16(XREG)
      SRL  YREG,16(XREG)
*       RDTCTSNT=YREG;                                             0720
         L     @14,MLCSKEL(,MLCAPTR)                               0720
         STH   YREG,RDTCTSNT(,@14)                                 0720
*     END;                                                         0721
*   ELSE                                                           0722
*     ;                                                            0722
@RF00715 DS    0H                                                  0723
*   RFY                                                            0723
*    (XREG,                                                        0723
*     YREG) UNRSTD;                                                0723
*                                                                  0723
*/* SEGMENT(VGLOCAL)FINISH                                           */
*                                                                  0724
*   DO;                                                            0724
*     GOTO VGLOCAL#;                                               0725
         B     VGLOCAL#                                            0725
*VGLOCAL@:                                                         0726
*   END;                                                           0726
*                                                                  0726
VGLOCAL@ DS    0H                                                  0727
*/* TPEPILOG                                                         */
*                                                                  0727
*   GEN(PRINT OFF);                                                0727
         PRINT OFF
*   DECLARE                                                        0728
*     EMCR0 PTR REG(0),                                            0728
*     EMCR1 PTR REG(1),                                            0728
*     EMCR2 PTR REG(2),                                            0728
*     EMCR3 PTR REG(3),                                            0728
*     EMCR4 PTR REG(4),                                            0728
*     EMCR5 PTR REG(5),                                            0728
*     EMCR6 PTR REG(6),                                            0728
*     EMCR7 PTR REG(7),                                            0728
*     EMCR8 PTR REG(8),                                            0728
*     EMCR9 PTR REG(9),                                            0728
*     EMCR10 PTR REG(10),                                          0728
*     EMCR11 PTR REG(11),                                          0728
*     EMCR12 PTR REG(12),                                          0728
*     EMCR13 PTR REG(13),                                          0728
*     EMCR14 PTR REG(14),                                          0728
*     EMCR15 PTR REG(15);                                          0728
*   GEN(PRINT ON);                                                 0729
*                                                                  0729
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0730
*   END ISTSDCVG;                                                  0730
@EL00001 DS    0H                                                  0730
@EF00001 DS    0H                                                  0730
@ER00001 LM    @14,@12,12(@13)                                     0730
         BR    @14                                                 0730
@DATA    DS    0H
@CH00075 DC    H'4'
@CH02290 DC    H'33'
@DATD    DSECT
         DS    0F
ISTSDCVG CSECT
         DS    0F
@CF00035 DC    F'1'
@CF02230 DC    F'-8'
@DATD    DSECT
         DS    0D
SKELSIZ  DS    A
TBLADR   DS    A
SAVCID   DS    F
RC       DS    H
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCVG CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
CMZA0018 DS    FL4
         ORG   CMZA0018
@NM00029 DC    AL1(64)
@NM00030 DC    AL1(96)
@NM00031 DC    AL1(231)
@NM00032 DC    XL1'00'
         ORG   CMZA0018+4
CMZA0040 DS    FL4
         ORG   CMZA0040
@NM00033 DC    AL1(64)
@NM00034 DC    AL1(96)
@NM00035 DC    AL1(229)
@NM00036 DC    XL1'01'
         ORG   CMZA0040+4
CMZA0059 DS    FL4
         ORG   CMZA0059
@NM00037 DC    AL1(64)
@NM00038 DC    AL1(96)
@NM00039 DC    AL1(229)
@NM00040 DC    XL1'01'
         ORG   CMZA0059+4
CMZA0078 DS    FL4
         ORG   CMZA0078
@NM00041 DC    AL1(64)
@NM00042 DC    AL1(96)
@NM00043 DC    AL1(229)
@NM00044 DC    XL1'01'
         ORG   CMZA0078+4
CMZAA005 DC    CL4'303I'
CMZAA099 DC    CL4'137I'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
COUNT    EQU   @02
SAVELEN  EQU   @04
BLOCKPTR EQU   @04
RPHPTR   EQU   @01
SAVREG   EQU   @13
GPR15    EQU   @15
MLCAPTR  EQU   @05
RNCAPTR  EQU   @06
ENTRYPTR EQU   @07
SAVLCA   EQU   @09
MVCLR1A  EQU   @02
MVCLR1L  EQU   @03
MVCLR2A  EQU   @08
MVCLR2L  EQU   @09
XREG     EQU   @02
YREG     EQU   @03
REG1005  EQU   @01
EMCR13   EQU   @13
REG15005 EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
REG1099  EQU   @01
REG15099 EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR04F   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
ATCLCPTR EQU   1032
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00002 EQU   LOKCHNG+2
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRDAF   EQU   RPRCOMID+2
RPRELEN  EQU   ISTRPRE+16
RPRPELEN EQU   ISTRPRE+18
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRENTED EQU   RPRFLAGA
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRSWDAF EQU   ISTRPRE+58
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTLEN   EQU   RDTPLEN+1
RDTCTSNT EQU   ISTRDT+86
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
RCCPATHT EQU   ISTRCC+120
RCCPATHZ EQU   ISTRCC+124
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLULOCAD EQU   ISTRLU+136
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
RSWDIALT EQU   ISTRSW+136
RSWGRUPT EQU   ISTRSW+140
RSWDIALZ EQU   ISTRSW+144
RSWGRUPZ EQU   ISTRSW+146
RSWCTELU EQU   ISTRSW+148
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
RLSCTELU EQU   ISTRLS+136
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTMLCA  EQU   0
MLCSKEL  EQU   ISTMLCA+8
MLCFLAGS EQU   ISTMLCA+16
MLCENT   EQU   ISTMLCA+20
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCCONFG EQU   MLCERBF1
MLCERBF2 EQU   MLCERBF+8
MLCNAME  EQU   MLCERBF2
MLCERBF3 EQU   MLCERBF+32
MLCPTRS  EQU   ISTMLCA+96
MLCNCSPL EQU   MLCPTRS+36
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
ISTRNCA  EQU   0
RNCFENT  EQU   ISTRNCA+68
RNCGSWBD EQU   ISTRNCA+126
RNCTBFR  EQU   ISTRNCA+127
RNCRNMDL EQU   ISTRNCA+2984
RNCTRMDL EQU   RNCRNMDL
RNCLUMDL EQU   RNCTRMDL
RNCLNMDL EQU   RNCLUMDL
RNCSWMDL EQU   RNCLNMDL
RNCLSMDL EQU   RNCSWMDL
RNCCLMDL EQU   RNCLSMDL
RNCDAMDL EQU   RNCCLMDL
RNCCMMDL EQU   ISTRNCA+3240
RNCINMDL EQU   RNCCMMDL
RNCCCMDL EQU   RNCINMDL
RNCGPMDL EQU   RNCCCMDL
RNCPXMDL EQU   RNCGPMDL
RNCSAV1  EQU   ISTRNCA+3460
RNCDAT1  EQU   ISTRNCA+3532
RNCWORK1 EQU   ISTRNCA+3844
RNCPHR1  EQU   RNCWORK1
RNCWORK2 EQU   ISTRNCA+5892
RNCPHR2  EQU   RNCWORK2
RNCWORK3 EQU   ISTRNCA+7940
ISTLCST  EQU   0
LCSTTYPE EQU   ISTLCST+12
LCSTACR  EQU   ISTLCST+18
ISTDITHD EQU   0
ISTDHDVI EQU   0
DHDDIVTH EQU   ISTDHDVI+12
ISTDDTVI EQU   0
ISTRNCDT EQU   0
RNCDTLN  EQU   ISTRNCDT
RNCDT    EQU   ISTRNCDT+4
ISTRNCGT EQU   0
RNCGTLN  EQU   ISTRNCGT
RNCGT    EQU   ISTRNCGT+4
ISTRNCPT EQU   0
RNCPTLN  EQU   ISTRNCPT
RNCPT    EQU   ISTRNCPT+4
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCGTSTR EQU   ATCCOM+164
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCXRANG EQU   ISTATCVT+317
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTPOHD  EQU   0
POHSTAT  EQU   ISTPOHD+1
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTNCSPL EQU   0
@NM00021 EQU   ISTNCSPL
NCSPFX   EQU   @NM00021
NCSPLVBF EQU   ISTNCSPL+18
NCSPLVFL EQU   ISTNCSPL+20
NCSPLVF1 EQU   ISTNCSPL+21
NCSPLCMD EQU   ISTNCSPL+60
NCSCMDA  EQU   NCSPLCMD
NCSCRFLG EQU   ISTNCSPL+67
NCSPLRAD EQU   ISTNCSPL+144
NCSIOCID EQU   ISTNCSPL+148
NCSPLCID EQU   NCSIOCID
NCSPLFSB EQU   ISTNCSPL+168
NCSPLFL1 EQU   ISTNCSPL+176
NCSPLFL2 EQU   ISTNCSPL+177
NCSPLFL3 EQU   ISTNCSPL+178
NCSPLFL4 EQU   ISTNCSPL+179
NCSPLFL5 EQU   ISTNCSPL+181
NCSPLAPP EQU   ISTNCSPL+216
NCSSENSE EQU   ISTNCSPL+244
NCSCRMSK EQU   ISTNCSPL+268
NCSCHKPT EQU   NCSCRMSK
NCSCRMOD EQU   NCSCRMSK+2
NCSPLSID EQU   ISTNCSPL+271
NCSPLSTA EQU   NCSPLSID
NCSPLPHD EQU   NCSPLSID+1
NCSAPP   EQU   0
NCSAPBUE EQU   NCSAPP+88
NCSUSSRU EQU   0
SAVAREA  EQU   0
SAVCLLD  EQU   SAVAREA+8
BLDARHDR EQU   0
BLDARFWD EQU   BLDARHDR
BLDARLNG EQU   BLDARHDR+4
BLDAREA  EQU   BLDARHDR+8
@NM00027 EQU   0
CMZID005 EQU   @NM00027
@NM00028 EQU   @NM00027+4
CMZRL005 EQU   @NM00028
CMZRA005 EQU   @NM00028+1
CMZEA005 EQU   @NM00027+8
CMZVP005 EQU   @NM00027+12
CMZSA005 EQU   0
CMTA005  EQU   0
@NM00045 EQU   0
CMZID099 EQU   @NM00045
@NM00046 EQU   @NM00045+4
CMZRL099 EQU   @NM00046
CMZRA099 EQU   @NM00046+1
CMZEA099 EQU   @NM00045+8
CMZVP099 EQU   @NM00045+12
CMZSA099 EQU   0
CMTA099  EQU   0
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00026 EQU   SAVAREA+36
SAV3     EQU   SAVAREA+32
SAV2     EQU   SAVAREA+28
SAV1     EQU   SAVAREA+24
SAV0     EQU   SAVAREA+20
SAV15    EQU   SAVAREA+16
SAV14    EQU   SAVAREA+12
SAVCLLR  EQU   SAVAREA+4
SAVRES   EQU   SAVAREA
NCSRUITS EQU   NCSUSSRU+2
NCSRULEN EQU   NCSUSSRU
NCSAPPAB EQU   NCSAPP+608
NCSAPDAT EQU   NCSAPBUE+8
NCSAPRU  EQU   NCSAPBUE+3
NCSRSV04 EQU   NCSAPBUE
NCSAPEND EQU   NCSAPP+84
NCSAPTXT EQU   NCSAPP+76
NCSAPECB EQU   NCSAPP+72
NCSAPSA  EQU   NCSAPP
NCSPLPDB EQU   NCSPLSID+5
NCSPLNID EQU   NCSPLPHD
NCSPLPO  EQU   NCSPLSTA
NCSRSVD4 EQU   NCSPLSTA
NCSRSVD2 EQU   NCSCRMOD
NCSPTMOD EQU   NCSCRMOD
NCSAIMOD EQU   NCSCRMOD
NCSRSVD1 EQU   NCSCHKPT+1
NCSPTUSE EQU   NCSCHKPT+1
NCSRNME  EQU   NCSCHKPT+1
NCSCUA   EQU   NCSCHKPT+1
NCSANSMD EQU   NCSCHKPT+1
NCSLGMOD EQU   NCSCHKPT
NCSLGAPL EQU   NCSCHKPT
NCSDTRLM EQU   NCSCHKPT
NCSESLM  EQU   NCSCHKPT
NCSNRPL  EQU   NCSCHKPT
NCSPOLD  EQU   NCSCHKPT
NCSPACTV EQU   NCSCHKPT
NCSACTV  EQU   NCSCHKPT
NCSCRDTE EQU   ISTNCSPL+264
NCSPLRTY EQU   ISTNCSPL+263
NCSPLRH  EQU   ISTNCSPL+260
NCSUFMCB EQU   ISTNCSPL+256
NCSMGLPT EQU   ISTNCSPL+252
NCSCPWPT EQU   ISTNCSPL+248
NCSSENS2 EQU   NCSSENSE+2
NCSSNS2  EQU   NCSSENSE+1
NCSSNS1  EQU   NCSSENSE
NCSPLNSN EQU   ISTNCSPL+240
NCSPLMID EQU   ISTNCSPL+232
NCSPLPID EQU   ISTNCSPL+231
NCSPLGID EQU   ISTNCSPL+230
NCSPLSQN EQU   ISTNCSPL+228
NCSRNAME EQU   ISTNCSPL+220
NCSPLRUI EQU   ISTNCSPL+212
NCSPLRUO EQU   ISTNCSPL+208
NCSPLRRP EQU   ISTNCSPL+204
NCSPLWEL EQU   ISTNCSPL+200
NCSPLSPL EQU   ISTNCSPL+196
NCSPLP3  EQU   ISTNCSPL+192
NCSPLP2  EQU   ISTNCSPL+188
NCSPLP1  EQU   ISTNCSPL+184
NCSPLOLN EQU   ISTNCSPL+182
@NM00025 EQU   NCSPLFL5
NCSSDLK  EQU   NCSPLFL5
NCSSCPPS EQU   NCSPLFL5
NCSDLRSN EQU   ISTNCSPL+180
NCSPL2AP EQU   NCSPLFL4
NCSDSPN  EQU   NCSPLFL4
NCSDSPI  EQU   NCSPLFL4
NCSDSPA  EQU   NCSPLFL4
NCSDSPE  EQU   NCSPLFL4
NCSPLVID EQU   NCSPLFL4
NCSPLRSO EQU   NCSPLFL4
NCSDLNID EQU   NCSPLFL4
NCSEND   EQU   NCSPLFL3
NCSFINAL EQU   NCSPLFL3
NCSANS   EQU   NCSPLFL3
NCSPID   EQU   NCSPLFL3
NCSGID   EQU   NCSPLFL3
NCSPLANS EQU   NCSPLFL3
NCSEPP   EQU   NCSPLFL3
NCSPLMOM EQU   NCSPLFL3
NCSPLVIT EQU   NCSPLFL2
NCSPLVIS EQU   NCSPLFL2
NCSREMPO EQU   NCSPLFL2
NCSPLDS  EQU   NCSPLFL2
NCSOUFMC EQU   NCSPLFL2
NCSPLRIO EQU   NCSPLFL2
NCSPLRSF EQU   NCSPLFL2
NCSPLVDP EQU   NCSPLFL2
NCSPLPOS EQU   NCSPLFL1
NCSPL2CN EQU   NCSPLFL1
NCSPLAPU EQU   NCSPLFL1
NCSPLNON EQU   NCSPLFL1
NCSPLREQ EQU   NCSPLFL1
NCSPLEBN EQU   NCSPLFL1
NCSPLSOM EQU   NCSPLFL1
NCSPL2IN EQU   NCSPLFL1
NCSPLRCR EQU   ISTNCSPL+172
NCSPLECB EQU   ISTNCSPL+164
NCSPLRPH EQU   ISTNCSPL+160
NCSPLCVT EQU   ISTNCSPL+156
NCSPLWKA EQU   ISTNCSPL+152
NCSPLDAF EQU   NCSPLCID+2
NCSPLSAF EQU   NCSPLCID
NCSPLRCD EQU   NCSPLRAD+1
NCSLSCMD EQU   NCSPLRAD
NCSPLWRF EQU   ISTNCSPL+72
NCSPLWRE EQU   ISTNCSPL+68
NCSSTCMD EQU   NCSCRFLG
NCSUSRNF EQU   NCSCRFLG
NCSOPRQU EQU   NCSCRFLG
NCSCRDSE EQU   NCSCRFLG
NCSFMERP EQU   NCSCRFLG
NCSFMCLD EQU   NCSCRFLG
NCSPLCLD EQU   NCSCRFLG
NCSPLWRM EQU   NCSCRFLG
NCSPLUAD EQU   ISTNCSPL+64
NCSMSGSP EQU   ISTNCSPL+63
NCSNCPEP EQU   ISTNCSPL+62
NCSCMDB  EQU   NCSPLCMD+1
@NM00024 EQU   NCSCMDA
NCSPLUFM EQU   NCSCMDA
NCSPLFLO EQU   NCSCMDA
NCSPLSYN EQU   NCSCMDA
NCSPLCTL EQU   NCSCMDA
NCSPLSYS EQU   NCSCMDA
NCSPLLPT EQU   ISTNCSPL+56
NCSPLRPT EQU   ISTNCSPL+52
NCSCRPID EQU   ISTNCSPL+51
NCSCRCMD EQU   ISTNCSPL+50
NCSDLID  EQU   ISTNCSPL+44
NCSPLLID EQU   ISTNCSPL+36
NCSPLRID EQU   ISTNCSPL+28
NCSRRNPT EQU   ISTNCSPL+24
NCSIORC  EQU   ISTNCSPL+23
NCSPRMRC EQU   ISTNCSPL+22
NCSOVFMC EQU   NCSPLVF1
NCSRSV02 EQU   NCSPLVFL
NCSDACLK EQU   NCSPLVFL
NCSABCON EQU   NCSPLVFL
NCSDCONT EQU   NCSPLVFL
NCSVSTAT EQU   NCSPLVFL
NCSVDEL  EQU   NCSPLVFL
NCSVNCSA EQU   NCSPLVFL
NCSVBF16 EQU   NCSPLVBF+1
NCSVBF15 EQU   NCSPLVBF+1
NCSVBF14 EQU   NCSPLVBF+1
NCSVBF13 EQU   NCSPLVBF+1
NCSVBF12 EQU   NCSPLVBF+1
NCSVBF11 EQU   NCSPLVBF+1
NCSVBF10 EQU   NCSPLVBF+1
NCSVBF09 EQU   NCSPLVBF+1
NCSVBF08 EQU   NCSPLVBF
NCSVBF07 EQU   NCSPLVBF
NCSVBF06 EQU   NCSPLVBF
NCSVBF05 EQU   NCSPLVBF
NCSVBF04 EQU   NCSPLVBF
NCSVBF03 EQU   NCSPLVBF
NCSVBF02 EQU   NCSPLVBF
NCSVBF01 EQU   NCSPLVBF
NCSPLVCD EQU   ISTNCSPL+17
@NM00023 EQU   ISTNCSPL+16
NCSCRWKA EQU   NCSPFX+12
@NM00022 EQU   NCSPFX
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
POHID    EQU   ISTPOHD+2
POHGEN   EQU   POHSTAT
POHRREQ  EQU   POHSTAT
POHRSVD2 EQU   POHSTAT
POHCNTRL EQU   POHSTAT
POHLBL   EQU   POHSTAT
POHDATA  EQU   POHSTAT
POHEND   EQU   POHSTAT
POHRSVD1 EQU   ISTPOHD
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00020 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00019 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00018 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00017 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00016 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00015 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00014 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00013 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
DDTASSOC EQU   ISTDDTVI+40
DDTRDTPT EQU   ISTDDTVI+36
DDTTRNM  EQU   ISTDDTVI+28
DDTBSCLN EQU   ISTDDTVI+27
DDTBSCID EQU   ISTDDTVI+4
DDTFWPTR EQU   ISTDDTVI
DHDGPPTR EQU   ISTDHDVI+32
DHDDVOFF EQU   ISTDHDVI+28
DHDDTPTR EQU   ISTDHDVI+24
DHDDHPTR EQU   ISTDHDVI+20
DHDRSVD  EQU   DHDDIVTH+6
DHDIDLEN EQU   DHDDIVTH+4
DHDNUMFE EQU   DHDDIVTH+2
DHDNUME  EQU   DHDDIVTH
DHDHNAME EQU   ISTDHDVI+4
DHDFWPTR EQU   ISTDHDVI
DITDITT  EQU   ISTDITHD+16
DITLEN   EQU   ISTDITHD+15
DITUNUSD EQU   ISTDITHD+12
DITLSTNM EQU   ISTDITHD+4
DITFWDPT EQU   ISTDITHD
LCSTCODE EQU   ISTLCST+19
LCSTACR3 EQU   LCSTACR
LCSTACR2 EQU   LCSTACR
LCSTACR1 EQU   LCSTACR
LCSTACR0 EQU   LCSTACR
LCSTLCCD EQU   LCSTTYPE+5
LCSTLCTP EQU   LCSTTYPE
LCSTNAME EQU   ISTLCST+4
LCSTFWDP EQU   ISTLCST
RNCWORD5 EQU   ISTRNCA+8084
RNCWORD4 EQU   ISTRNCA+8080
RNCWORD3 EQU   ISTRNCA+8076
RNCWORD2 EQU   ISTRNCA+8072
RNCWORD1 EQU   ISTRNCA+8068
RNCWORK4 EQU   ISTRNCA+8004
RNCLDPRM EQU   RNCWORK3
RNCOCPRM EQU   RNCPHR2
RNCLMDCB EQU   RNCPHR1
RNCDAT3  EQU   ISTRNCA+3788
RNCSAV3  EQU   ISTRNCA+3716
RNCDAT2  EQU   ISTRNCA+3660
RNCSAV2  EQU   ISTRNCA+3588
@NM00012 EQU   ISTRNCA+3456
RNCLXMDL EQU   RNCPXMDL
RNCDSMDL EQU   RNCDAMDL
RNCCCLU  EQU   ISTRNCA+2808
RNCCLTR  EQU   ISTRNCA+2596
RNCLNLU  EQU   ISTRNCA+2420
RNCLNTR  EQU   ISTRNCA+2208
RNCLNPX  EQU   ISTRNCA+2124
RNCLNCC  EQU   ISTRNCA+1976
RNCLNCL  EQU   ISTRNCA+1880
RNCGPLU  EQU   ISTRNCA+1704
RNCGPTR  EQU   ISTRNCA+1492
RNCGPPX  EQU   ISTRNCA+1408
RNCGPCC  EQU   ISTRNCA+1260
RNCGPCL  EQU   ISTRNCA+1164
RNCGPLN  EQU   ISTRNCA+1004
RNCLUDEF EQU   ISTRNCA+828
RNCTRDEF EQU   ISTRNCA+616
RNCPXDEF EQU   ISTRNCA+532
RNCCCDEF EQU   ISTRNCA+384
RNCCLDEF EQU   ISTRNCA+288
RNCLNDEF EQU   ISTRNCA+128
RNCRSV01 EQU   ISTRNCA+127
RNCGPUIN EQU   ISTRNCA+127
RNCGVB   EQU   ISTRNCA+127
RNCGLSBD EQU   ISTRNCA+126
RNCGRNBD EQU   ISTRNCA+126
RNCGCLPU EQU   ISTRNCA+126
RNCGANS  EQU   ISTRNCA+126
RNCGINOD EQU   ISTRNCA+126
RNCGCUA  EQU   ISTRNCA+126
RNCGRNAM EQU   ISTRNCA+126
RNCGDLLN EQU   ISTRNCA+125
RNCGRGAP EQU   ISTRNCA+125
RNCLNID  EQU   ISTRNCA+125
RNCGPID  EQU   ISTRNCA+125
RNCLNOW  EQU   ISTRNCA+125
RNCGNOW  EQU   ISTRNCA+125
RNCLQUE  EQU   ISTRNCA+125
RNCGQUE  EQU   ISTRNCA+125
RNCDTYPE EQU   ISTRNCA+124
RNCGVSEQ EQU   ISTRNCA+123
RNCGTWX  EQU   ISTRNCA+123
RNCGCTRM EQU   ISTRNCA+123
RNCGSTBH EQU   ISTRNCA+123
RNCGCOMP EQU   ISTRNCA+123
RNCGLU   EQU   ISTRNCA+123
RNCGTERM EQU   ISTRNCA+123
RNCGPA   EQU   ISTRNCA+123
RNCGPU   EQU   ISTRNCA+122
RNCGCLUS EQU   ISTRNCA+122
RNCGLINE EQU   ISTRNCA+122
RNCGGRP  EQU   ISTRNCA+122
RNCGHOST EQU   ISTRNCA+122
RNCGSYSC EQU   ISTRNCA+122
RNCGBLD  EQU   ISTRNCA+122
RNCGPCCU EQU   ISTRNCA+122
RNCLPCT  EQU   ISTRNCA+120
RNCLPNM  EQU   ISTRNCA+112
RNCDIVT  EQU   ISTRNCA+108
RNCDITT  EQU   ISTRNCA+104
RNCLCST  EQU   ISTRNCA+100
RNCLWS   EQU   ISTRNCA+96
RNCFWS   EQU   ISTRNCA+92
RNCOFFS2 EQU   ISTRNCA+88
RNCOFFST EQU   ISTRNCA+84
RNCLTBLS EQU   ISTRNCA+80
RNCFTBLS EQU   ISTRNCA+76
RNCLENT  EQU   ISTRNCA+72
RNCLRNLL EQU   ISTRNCA+64
RNCFRNLL EQU   ISTRNCA+60
RNCPX    EQU   ISTRNCA+56
RNCDA    EQU   ISTRNCA+52
RNCLLN   EQU   ISTRNCA+48
RNCCM    EQU   ISTRNCA+44
RNCIN    EQU   ISTRNCA+40
RNCLU    EQU   ISTRNCA+36
RNCTR    EQU   ISTRNCA+32
RNCCC    EQU   ISTRNCA+28
RNCCL    EQU   ISTRNCA+24
RNCLN    EQU   ISTRNCA+20
RNCGP    EQU   ISTRNCA+16
RNCDS    EQU   ISTRNCA+12
RNCRSV07 EQU   ISTRNCA+8
RNCSWLS  EQU   ISTRNCA+4
RNCRN    EQU   ISTRNCA
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCMHDAT EQU   ISTMLCA+908
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDAT4  EQU   ISTMLCA+596
MLCSAV4  EQU   ISTMLCA+524
MLCDAT3  EQU   ISTMLCA+468
MLCSAV3  EQU   ISTMLCA+396
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00011 EQU   ISTMLCA+136
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR6  EQU   MLCPTRS+24
MLCPTR5  EQU   MLCPTRS+20
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCCNFG2 EQU   MLCERBF3
MLCFII   EQU   MLCERBF2+16
MLCMACRO EQU   MLCERBF2+8
MLCKWD   EQU   ISTMLCA+24
MLCINT   EQU   MLCFLAGS
MLCSKDCB EQU   ISTMLCA+12
MLCRPH   EQU   ISTMLCA+4
MLCSECCA EQU   ISTMLCA
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00010 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00009 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00008 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRSV22 EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPRSV09 EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00007 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00006 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00005 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
@NM00004 EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRRLOCK EQU   ISTRPRE+12
RPRSAF   EQU   RPRCOMID
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
LOKXCL   EQU   @NM00002
LOKPRY   EQU   @NM00002
@NM00003 EQU   @NM00002
@NM00001 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
VGSWTCH# EQU   @RC00406
@RT00604 EQU   @RC00602
@RC00631 EQU   @RC00602
@ENDDATA EQU   *
         END   ISTSDCVG,(C'PLS1133',0603,75168)
