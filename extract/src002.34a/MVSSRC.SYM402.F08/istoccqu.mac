SVTM     TITLE 'ISTOCCQU - QUIESCE ROUTINE                             *
                        '
ISTOCCQU CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTOCCQU  75.136'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0314
*/********************************************************************/
*/*  ROUTINE NAME: MAIN LINE                                         */
*/*  FUNCTION:                                                       */
*/*      THIS IS THE MAIN LINE FOR ISTOCCQU. IT'S FUNCTION IS TO     */
*/*      ROUTE CONTROL TO THE PROPER FUNCTION OF SETLOGON. IF THE    */
*/*      RPL INDICATES THAT THIS IS A FIRST TIME REQUEST, THEN THE   */
*/*       ACTIVATE ROUTINE IS CALLED TO PROCESS LOGONS. FOR A        */
*/*      QUIESCE REQUEST, THE QUIESCE ROUTINE IS CALLED. IF THE APPL */
*/*      WANTS TO TEMPARILY BLOCK LOGONS, THEN RAPATLGN IS SET.      */
*/*      FOR A SECOND TIME START, RAPATLGN IS RESET. THIS ROUTINE    */
*/*      WILL CALL ROUTINES DOLOCK AND DOUNLOCK TO OBTAIN AND        */
*/*      RELEASE LOCKS. EXIT IS TO ISTOCCUR.                         */
*/*  ROUTINES CALLED:                                                */
*/*      DOLOCK - OBTAIN THE VOC AND RDT LOCKS                       */
*/*      ACTIVATE - PROCESS QUEUED LOGONS OR VARY LOGON TERMINALS    */
*/*      QUIESCE - QUIESCE THE APPLICATION                           */
*/*      DOUNLOCK - RELEASE THE LOCKS OBTAINED IN DOLOCK             */
*/*  MACROS USED:                                                    */
*/*      CRRMAINT - FOOT PRINT                                       */
*/********************************************************************/
*                                                                  0314
*   DO;                                                            0314
*                                                                  0314
*/***  CRRMAINT  PROCNM(ISTOCCQU)COMP(OC)FUNC(MAIN)  **              */
*                                                                  0315
*     DCL                                                          0315
*       CMZK0006 PTR(31) REG(1);                                   0315
*     RFY                                                          0316
*      (CMZK0006) RSTD;                                            0316
*                                                                  0316
*/* ATBUILD (ISTRPH,ISTCRA,ISTPFCRR,ISTOCCRR)                        */
*                                                                  0317
*     RFY                                                          0317
*       ISTLCCW;                                                   0317
*     RFY                                                          0318
*       ISTLCPB;                                                   0318
*     RFY                                                          0319
*       ISTZSAVE;                                                  0319
*     RFY                                                          0320
*       ISTPFCRR;                                                  0320
*     RFY                                                          0321
*       ISTCFCRR;                                                  0321
*     RFY                                                          0322
*       ISTZCRR;                                                   0322
*     RFY                                                          0323
*       ISTASCRR;                                                  0323
*     RFY                                                          0324
*       ISTAPCRR;                                                  0324
*     RFY                                                          0325
*       ISTCRA;                                                    0325
*     RFY                                                          0326
*       ISTCNSTA;                                                  0326
*     RFY                                                          0327
*       ISTOCCRR;                                                  0327
*                                                                  0327
*/* END OF ATBUILD                                                   */
*/*  ** SAVE CRR AND FRR POINTERS **                                 */
*                                                                  0328
*     ADDR(CMZK0006->RPHCRR->CRAPROCR)->PFCCRRO=CMZK0006->RPHCRR-> 0328
*         CRACRR;                                                  0328
         L     @11,RPHCRR(,CMZK0006)                               0328
         LA    @05,312                                             0328
         ALR   @05,@11                                             0328
         L     @00,CRACRR(,@11)                                    0328
         ST    @00,PFCCRRO(,@05)                                   0328
*     ADDR(CMZK0006->RPHCRR->CRAPROCR)->PFCFRRO=CMZK0006->RPHCRR-> 0329
*         CRAFRR;                                                  0329
*                                                                  0329
         L     @00,CRAFRR(,@11)                                    0329
         ST    @00,PFCFRRO(,@05)                                   0329
*/*  ** SET UP POINTERS TO OUR CRR, FRR **                           */
*                                                                  0330
*     CMZK0006->RPHCRR->CRACRR=ADDR(CMZK0006->RPHCRR->CRAPROCR);   0330
         LA    @05,CRAPROCR(,@11)                                  0330
         ST    @05,CRACRR(,@11)                                    0330
*     CMZK0006->RPHCRR->CRAFRR=0;                                  0331
*                                                                  0331
         SLR   @00,@00                                             0331
         ST    @00,CRAFRR(,@11)                                    0331
*/*  ** SET OUR COMPONENT PROCESS ID IN CRR **                       */
*                                                                  0332
*     CMZK0006->RPHCRR->CRACRR->PFCFTA=TIDOCCQU;                   0332
*                                                                  0332
         MVI   PFCFTA(@05),X'20'                                   0332
*/*  ** CLEAR COMPONENT ENTERED INDICATORS **                        */
*                                                                  0333
*     CMZK0006->RPHCRR->CRACRR->OCCNTRD='0'B;                      0333
*                                                                  0333
         XC    OCCNTRD+1(2,@05),OCCNTRD+1(@05)                     0333
         MVI   OCCNTRD(@05),B'00000000'                            0333
*/*  ** SET ENTERED BIT FOR THIS PROCEDURE **                        */
*                                                                  0334
*     CMZK0006->RPHCRR->CRACRR->NOCCQU='1'B;                       0334
*                                                                  0334
         OI    NOCCQU(@05),B'10000000'                             0334
*/*  ** CLEAR AND SET CURRENT PROCEDURE BIT **                       */
*                                                                  0335
*     CMZK0006->RPHCRR->CRACRR->OCCCRT='0'B;                       0335
         XC    OCCCRT+1(2,@05),OCCCRT+1(@05)                       0335
         MVI   OCCCRT(@05),B'00000000'                             0335
*     CMZK0006->RPHCRR->CRACRR->COCCQU='1'B;                       0336
         OI    COCCQU(@05),B'10000000'                             0336
*   END;                                                           0337
*   OCWPTR=RPHWEA;                  /* SET UP POINTER TO OCW         */
         L     OCWPTR,RPHWEA(,RPHPTR)                              0338
*   SVEAREA=ADDR(OCWSAVE1);         /* SET UP PTR TO REG SAVE AREA   */
         LA    SVEAREA,OCWSAVE1(,OCWPTR)                           0339
*   C14SVPTR=ADDR(OCWR14SV)+4;      /* SET UP R14 SAVE AREA          */
         LA    @11,OCWR14SV(,OCWPTR)                               0340
         AL    @11,@CF00053                                        0340
         ST    @11,C14SVPTR+624(,OCWPTR)                           0340
*   CALL DOLOCK;                    /* LOCK RDTE IN STORAGE          */
         BAL   @14,DOLOCK                                          0341
*   IF OCWRC^=0                     /* IF LOCKS NOT OBTAINED         */
*     THEN                                                         0342
         CLI   OCWRC(OCWPTR),0                                     0342
         BNE   @RT00342                                            0342
*     ;                                                            0343
*   ELSE                                                           0344
*     IF RAPABLGN=CON×RAPAQUI=CON   /* ILLEGAL QUIESCE               */
*       THEN                                                       0344
         L     @11,OCWARDTE(,OCWPTR)                               0344
         TM    RAPABLGN(@11),B'11000000'                           0344
         BZ    @RF00344                                            0344
*       DO;                                                        0345
*         OCWRC='08'X;              /* LOGICAL ERROR                 */
         MVI   OCWRC(OCWPTR),X'08'                                 0346
*         OCWEC='66'X;              /* ILLEGAL QUIESCE               */
         MVI   OCWEC(OCWPTR),X'66'                                 0347
*       END;                                                       0348
*     ELSE                                                         0349
*       DO;                                                        0349
         B     @RC00344                                            0349
@RF00344 DS    0H                                                  0350
*         IF RPLSTART=CON           /* START LOGONS FOR APPLI        */
*           THEN                                                   0350
         L     @11,OCWRPL(,OCWPTR)                                 0350
         TM    RPLSTART(@11),B'01000000'                           0350
         BNO   @RF00350                                            0350
*           IF RAPASLGI=COFF        /* FIRST TIME FOR ACTIVATE?      */
*             THEN                                                 0351
         L     @11,OCWARDTE(,OCWPTR)                               0351
         TM    RAPASLGI(@11),B'00100000'                           0351
         BNZ   @RF00351                                            0351
*             IF ATCQKHLT=CON×ATCSNHLT=CON/* HALT GOING ON           */
*               THEN                                               0352
         L     @11,OCWACVT(,OCWPTR)                                0352
         TM    ATCQKHLT(@11),B'00110000'                           0352
         BZ    @RF00352                                            0352
*               DO;                                                0353
*                 OCWRC='08'X;      /* LOGICAL ERR                   */
         MVI   OCWRC(OCWPTR),X'08'                                 0354
*                 OCWEC='5B'X;      /* HALT IN PROGRESS              */
         MVI   OCWEC(OCWPTR),X'5B'                                 0355
*               END;                                               0356
*             ELSE                                                 0357
*               DO;                                                0357
         B     @RC00352                                            0357
@RF00352 DS    0H                                                  0358
*                 RAPASLGI=CON;     /* NOT FIRST TIME ANY MORE       */
*                 RAPATLGN=COFF;    /* TEMP STOP LOGONS FLAG OFF     */
         L     @11,OCWARDTE(,OCWPTR)                               0359
         OI    RAPASLGI(@11),B'00100000'                           0359
         NI    RAPATLGN(@11),B'11101111'                           0359
*                 CALL ACTIVATE;                                   0360
         BAL   @14,ACTIVATE                                        0360
*               END;                                               0361
*           ELSE                                                   0362
*             DO;                                                  0362
         B     @RC00351                                            0362
@RF00351 DS    0H                                                  0363
*               RAPATLGN=COFF;      /* APPL WILL ACCEPT LOGONS NOW   */
         L     @11,OCWARDTE(,OCWPTR)                               0363
         NI    RAPATLGN(@11),B'11101111'                           0363
*               OCWRC=0;                                           0364
         MVI   OCWRC(OCWPTR),X'00'                                 0364
*               OCWEC=0;                                           0365
         MVI   OCWEC(OCWPTR),X'00'                                 0365
*             END;                                                 0366
*         ELSE                                                     0367
*           IF RPLSTOP=CON          /* STOP LOGONS TO THIS APPL      */
*             THEN                                                 0367
         B     @RC00350                                            0367
@RF00350 L     @11,OCWRPL(,OCWPTR)                                 0367
         TM    RPLSTOP(@11),B'00100000'                            0367
         BNO   @RF00367                                            0367
*             RAPATLGN=CON;         /* STOP LOGONS TO THIS TERM FOR
*                                      NOW                           */
         L     @11,OCWARDTE(,OCWPTR)                               0368
         OI    RAPATLGN(@11),B'00010000'                           0368
*           ELSE                                                   0369
*             IF RPLQUIES=CON       /* APPL SHUTTING DOWN?           */
*               THEN                                               0369
         B     @RC00367                                            0369
@RF00367 L     @11,OCWRPL(,OCWPTR)                                 0369
         TM    RPLQUIES(@11),B'10000000'                           0369
         BNO   @RF00369                                            0369
*               CALL QUIESCE;       /* QUIESCE THIS APPL             */
         BAL   @14,QUIESCE                                         0370
*             ELSE                                                 0371
*               DO;                                                0371
         B     @RC00369                                            0371
@RF00369 DS    0H                                                  0372
*                 OCWRC='24'X;      /* SYSTEM ERROR                  */
         MVI   OCWRC(OCWPTR),X'24'                                 0372
*                 OCWEC='01'X;                                     0373
         MVI   OCWEC(OCWPTR),X'01'                                 0373
*               END;                                               0374
*       END;                                                       0375
@RC00369 DS    0H                                                  0375
@RC00367 DS    0H                                                  0375
@RC00350 DS    0H                                                  0376
*   CALL DOUNLOCK;                  /* LOCK RDTE IN STORAGE          */
@RC00344 DS    0H                                                  0376
@RT00342 BAL   @14,DOUNLOCK                                        0376
*   RPHWEA=OCWPTR;                  /* OCW ADDR INTO RPH             */
         ST    OCWPTR,RPHWEA(,RPHPTR)                              0377
*   RPLRTNCD=OCWRC;                 /* ERROR CODE INTO RPL           */
         L     @11,OCWRPL(,OCWPTR)                                 0378
         MVC   RPLRTNCD(1,@11),OCWRC(OCWPTR)                       0378
*   RPLFDB2=OCWEC;                  /* DITTO                 @DM09103*/
         MVC   RPLFDB2(1,@11),OCWEC(OCWPTR)                        0379
*   RFY                                                            0380
*     ISTATCVT BASED(OCWACVT);                                     0380
*   CALL ISTOCCUR;                  /* EXIT TO UNROUTER              */
         L     @15,@CV03198                                        0381
         BALR  @14,@15                                             0381
*                                                                  0382
*/********************************************************************/
*/*  ROUTINE NAME: QUIESCE                                           */
*/*  FUNCTION:                                                       */
*/*      THIS ROUTINE IS CALLED BY MAIN LINE TO SET A BIT IN THE     */
*/*      APPLICATION'S RDT WHICH WILL BLOCK LOGONS TO THIS APPL.     */
*/*      THE NUMBER OF QUEUED LOGONS WILL BE RETURNED IN THE RPL.    */
*/*  ROUTINES CALLED:                                                */
*/*      NONE                                                        */
*/*  MACROS USED:                                                    */
*/*      NONE                                                        */
*/********************************************************************/
*                                                                  0382
*QUIESCE:                                                          0382
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0382
         B     @PB00002                                            0382
QUIESCE  DS    0H                                                  0383
*   C14SAVE=CR14PTR;                                               0383
         LA    @11,624                                             0383
         ALR   @11,OCWPTR                                          0383
         L     @05,C14SVPTR(,@11)                                  0383
         ST    CR14PTR,C14SAVE(,@05)                               0383
*   C14SVPTR=C14SVPTR+4;                                           0384
         AL    @05,@CF00053                                        0384
         ST    @05,C14SVPTR(,@11)                                  0384
*   RFY                                                            0385
*     CLGNPND RSTD;                                                0385
*   RAPAQUI=CON;                    /* INDICATE QUIESCE IN PROGRESS  */
         L     @05,OCWARDTE(,OCWPTR)                               0386
         OI    RAPAQUI(@05),B'01000000'                            0386
*   CLGNPND=CZERO;                  /* CLEAR LOGONS PENDING COUNTER  */
         SLR   CLGNPND,CLGNPND                                     0387
*   RAPATLGN=COFF;                  /* ENSURE TEMP BLK LOGONS BIT OFF*/
         NI    RAPATLGN(@05),B'11101111'                           0388
*   ICEPTR=RAPICELG;                /* GET LOGON ICE POINTER         */
         L     ICEPTR,RAPICELG(,@05)                               0389
*   DO WHILE(ICEPTR^=ADDR(RAPICELG));/* COUNT PENDING LOGONS         */
         B     @DE00390                                            0390
@DL00390 DS    0H                                                  0391
*     CLGNPND=CLGNPND+1;            /* INCREMENT LOGON PENDING COUNT */
         AL    CLGNPND,@CF00061                                    0391
*     ICEPTR=ICESUBJQ;              /* GET POINTER TO NEXT ICE       */
         L     ICEPTR,ICESUBJQ(,ICEPTR)                            0392
*   END;                            /* END LOGON PENDING COUNT LOOP  */
@DE00390 L     @05,OCWARDTE(,OCWPTR)                               0393
         LA    @05,RAPICELG(,@05)                                  0393
         CR    ICEPTR,@05                                          0393
         BNE   @DL00390                                            0393
*   RPLFDBK=CLGNPND;                /* INDICATE HOW MANY LOGONS PEND */
         L     @05,OCWRPL(,OCWPTR)                                 0394
         STCM  CLGNPND,7,RPLFDBK(@05)                              0394
*   RFY                                                            0395
*     CLGNPND UNRSTD;                                              0395
*   C14SVPTR=C14SVPTR-4;                                           0396
         LA    @11,624                                             0396
         ALR   @11,OCWPTR                                          0396
         L     @05,C14SVPTR(,@11)                                  0396
         SL    @05,@CF00053                                        0396
         ST    @05,C14SVPTR(,@11)                                  0396
*   CR14PTR=C14SAVE;                                               0397
         L     CR14PTR,C14SAVE(,@05)                               0397
*   END QUIESCE;                                                   0398
@EL00002 DS    0H                                                  0398
@EF00002 DS    0H                                                  0398
@ER00002 BR    @14                                                 0398
*ACTIVATE:                                                         0399
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0399
*                                                                  0399
ACTIVATE DS    0H                                                  0400
*/********************************************************************/
*/*  ROUTINE NAME: ACTIVATE                                          */
*/*  FUNCTION:                                                       */
*/*      THIS ROUTINE IS CALLED BY MAIN LINE TO DETERMINE IF THERE   */
*/*      ARE ANY LOGONS QUEUED ON THE LOGONTOME CHAIN OR IF THERE IS */
*/*      A VARY LOGON CHAIN TO BE PROCESSED.                         */
*/*  ROUTINES CALLED:                                                */
*/*      LOGEXIT - SCHEDULES USERS EXITS FOR ANY QUEUED ICES         */
*/*      DOLOGON - CALLS CONN SERV TO LOGON TERMS ON VARY LOGON      */
*/*      CHAIN.                                                      */
*/*  MACROS USED:                                                    */
*/*      NONE                                                        */
*/********************************************************************/
*                                                                  0400
*   C14SAVE=CR14PTR;                                               0400
         LA    @11,624                                             0400
         ALR   @11,OCWPTR                                          0400
         L     @05,C14SVPTR(,@11)                                  0400
         ST    CR14PTR,C14SAVE(,@05)                               0400
*   C14SVPTR=C14SVPTR+4;                                           0401
         AL    @05,@CF00053                                        0401
         ST    @05,C14SVPTR(,@11)                                  0401
*   IF RAPICELG^=ADDR(RAPICELG)     /* REAL LOGONS PENDING?          */
*     THEN                                                         0402
         L     @11,OCWARDTE(,OCWPTR)                               0402
         LA    @05,RAPICELG(,@11)                                  0402
         C     @05,RAPICELG(,@11)                                  0402
         BE    @RF00402                                            0402
*     CALL LOGEXIT;                 /* LOGON EXIT PROCESSING         */
         BAL   @14,LOGEXIT                                         0403
*   ELSE                                                           0404
*     ;                                                            0404
@RF00402 DS    0H                                                  0405
*   IF RPRLGONF^=RPRLGONB           /* IF LOGONS PENDING             */
*     THEN                                                         0405
         L     @11,OCWARDTE(,OCWPTR)                               0405
         CLC   RPRLGONF(4,@11),RPRLGONB(@11)                       0405
         BE    @RF00405                                            0405
*     DO;                                                          0406
*       CALL DOLOGON;               /* CALL CON SERV FOR LOG         */
         BAL   @14,DOLOGON                                         0407
*     END;                                                         0408
*   ELSE                                                           0409
*     ;                                                            0409
@RF00405 DS    0H                                                  0410
*   C14SVPTR=C14SVPTR-4;                                           0410
         LA    @11,624                                             0410
         ALR   @11,OCWPTR                                          0410
         L     @05,C14SVPTR(,@11)                                  0410
         SL    @05,@CF00053                                        0410
         ST    @05,C14SVPTR(,@11)                                  0410
*   CR14PTR=C14SAVE;                                               0411
         L     CR14PTR,C14SAVE(,@05)                               0411
*   END ACTIVATE;                                                  0412
@EL00003 DS    0H                                                  0412
@EF00003 DS    0H                                                  0412
@ER00003 BR    @14                                                 0412
*LOGEXIT:                                                          0413
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0413
*                                                                  0413
LOGEXIT  DS    0H                                                  0414
*/********************************************************************/
*/*  ROUTINE NAME: LOGEXIT                                           */
*/*  FUNCTION:                                                       */
*/*      THIS ROUTINE IS CALLED BY ACTIVATE TO DETERMINE             */
*/*      IF USER EXIT'S SHOULD BE SCHEDULED FOR ANY ICE'S QUEUED.    */
*/*      THE APPLICATION'S LOGONTOME ICE CHAIN IS LOOPED THROUGH AND */
*/*      LOGSCHED IS CALLED TO SCHEDULE THE EXIT FOR EACH ICE.       */
*/*  ROUTINES CALLED:                                                */
*/*      LOGSCHED - SCHE A UECB FOR ONE ICE                          */
*/*  MACROS USED:                                                    */
*/*        MODESET                                                   */
*/********************************************************************/
*                                                                  0414
*   C14SAVE=CR14PTR;                                               0414
         LA    @11,624                                             0414
         ALR   @11,OCWPTR                                          0414
         L     @05,C14SVPTR(,@11)                                  0414
         ST    CR14PTR,C14SAVE(,@05)                               0414
*   C14SVPTR=C14SVPTR+4;                                           0415
         AL    @05,@CF00053                                        0415
         ST    @05,C14SVPTR(,@11)                                  0415
*   ICEPTR=RAPICELG;                /* SET PTR TO ISTICE             */
         L     @05,OCWARDTE(,OCWPTR)                               0416
         L     ICEPTR,RAPICELG(,@05)                               0416
*   DO;                             /* MODESET EXTKEY(ZERO)          */
*     SPKA(0);                      /* SET PSW KEY                   */
         SLR   @11,@11                                             0418
         SPKA  0(@11)                                              0418
*   END;                            /* MODESET EXTKEY(ZERO)          */
*   IF ACBUEL^=CZERO                /* IF UEXL PTR NOT ZERO          */
*     THEN                                                         0420
         L     @05,OCWACDEB(,OCWPTR)                               0420
         L     @05,ACDACB-1(,@05)                                  0420
         LA    @05,0(,@05)                                         0420
         L     @05,ACBUEL(,@05)                                    0420
         CR    @05,@11                                             0420
         BE    @RF00420                                            0420
*     IF EXLLGNP^=CZERO             /* IF LOGN EXIT PTR NOT 0        */
*       THEN                                                       0421
         ICM   @00,15,EXLLGNP(@05)                                 0421
         CR    @11,@00                                             0421
         BE    @RF00421                                            0421
*       DO;                                                        0422
*         DO WHILE ICEPTR^=ADDR(RAPICELG);/* DO WHILE ICE'S EXST     */
         B     @DE00423                                            0423
@DL00423 DS    0H                                                  0424
*           CALL LOGSCHED;          /* LOGON EXIT FOR DEST           */
         BAL   @14,LOGSCHED                                        0424
*           IF OCWRC='00'X          /* IF ACB COPY ERR CODE 0        */
*             THEN                                                 0425
         CLI   OCWRC(OCWPTR),X'00'                                 0425
         BNE   @RF00425                                            0425
*             ICEPTR=ICESUBJQ;      /* GET ADDR NEXT ICE             */
         L     ICEPTR,ICESUBJQ(,ICEPTR)                            0426
*           ELSE                                                   0427
*             ICEPTR=ADDR(RAPICELG);/* GET OUT OF LOOP               */
         B     @RC00425                                            0427
@RF00425 L     ICEPTR,OCWARDTE(,OCWPTR)                            0427
         LA    ICEPTR,RAPICELG(,ICEPTR)                            0427
*         END;                                                     0428
@RC00425 DS    0H                                                  0428
@DE00423 L     @11,OCWARDTE(,OCWPTR)                               0428
         LA    @11,RAPICELG(,@11)                                  0428
         CR    ICEPTR,@11                                          0428
         BNE   @DL00423                                            0428
*       END;                                                       0429
*     ELSE                                                         0430
*       ;                                                          0430
@RF00421 DS    0H                                                  0431
*   ELSE                                                           0431
*     ;                                                            0431
@RF00420 DS    0H                                                  0432
*   DO;                             /* MODESET EXTKEY(VTAM)          */
*     SPKA(96);                     /* SET PSW KEY                   */
         LA    @11,96                                              0433
         SPKA  0(@11)                                              0433
*   END;                            /* MODESET EXTKEY(VTAM)          */
*   C14SVPTR=C14SVPTR-4;                                           0435
         LA    @11,624                                             0435
         ALR   @11,OCWPTR                                          0435
         L     @05,C14SVPTR(,@11)                                  0435
         SL    @05,@CF00053                                        0435
         ST    @05,C14SVPTR(,@11)                                  0435
*   CR14PTR=C14SAVE;                                               0436
         L     CR14PTR,C14SAVE(,@05)                               0436
*   END LOGEXIT;                                                   0437
@EL00004 DS    0H                                                  0437
@EF00004 DS    0H                                                  0437
@ER00004 BR    @14                                                 0437
*DOLOGON:                                                          0438
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0438
*                                                                  0438
DOLOGON  DS    0H                                                  0439
*/********************************************************************/
*/*  ROUTINE NAME: DOLOGON                                           */
*/*  FUNCTION:                                                       */
*/*      DOLOGON IS CALLED BY ACTIVATE TO PROCESS THE VARY LOGON     */
*/*      CHAIN IN THE APPLICATION'S RDTE. THIS CHAIN IS LOOPED       */
*/*      THROUGH AND CONN SERV IS CALLED FOR EVERY TERM ON THE       */
*/*      CHAIN TO LOG IT ON TO THE APPLICATION.                      */
*/*  ROUTINES CALLED:                                                */
*/*      CSINIT - INITIALIZE A CONN SERV PARM LIST                   */
*/*      ISTCSCMR - LOGON TERM TO APPL                               */
*/*  MACROS USED:                                                    */
*/*      CRRMINT - FOOTPRINT                                         */
*/********************************************************************/
*                                                                  0439
*   C14SAVE=CR14PTR;                                               0439
         LA    @11,624                                             0439
         ALR   @11,OCWPTR                                          0439
         L     @05,C14SVPTR(,@11)                                  0439
         ST    CR14PTR,C14SAVE(,@05)                               0439
*   C14SVPTR=C14SVPTR+4;                                           0440
         AL    @05,@CF00053                                        0440
         ST    @05,C14SVPTR(,@11)                                  0440
*   OCWDRDTE=RPRLGONF;              /* SET UP DEST RDTE BASE         */
*                                                                  0441
         L     @11,OCWARDTE(,OCWPTR)                               0441
         L     @11,RPRLGONF(,@11)                                  0441
         ST    @11,OCWDRDTE(,OCWPTR)                               0441
*   /*****************************************************************/
*   /*                                                               */
*   /* DO WHILE Q NOT EMPTY & NO ERRORS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0442
*   DO WHILE OCWDRDTE^=RPRLGONB&OCWRC=0;                           0442
         B     @DE00442                                            0442
@DL00442 DS    0H                                                  0443
*     IF OCWDRDTE->RPRTIED=COFF&    /* IF DEST RDTE UNTIED           */
*         OCWDRDTE->RPRLIVE=CON     /* IF TERMINAL LIVE              */
*       THEN                                                       0443
         L     @11,OCWDRDTE(,OCWPTR)                               0443
         TM    RPRLIVE(@11),B'00000001'                            0443
         BNO   @RF00443                                            0443
         TM    RPRTIED(@11),B'00100000'                            0443
         BNZ   @RF00443                                            0443
*       DO;                                                        0444
*         CALL CSINIT;              /* INITIALIZE CS PARM LIST       */
         BAL   @14,CSINIT                                          0445
*         CALL ATCCSMR;             /* CALL CONNECT SERVICES         */
         L     @11,OCWACVT(,OCWPTR)                                0446
         L     @15,ATCCSMR(,@11)                                   0446
         BALR  @14,@15                                             0446
*         DO;                                                      0447
*                                                                  0447
*/***  CRRMAINT  PROCNM(ISTOCCQU)COMP(OC)FUNC(RET)  **               */
*                                                                  0448
*           DCL                                                    0448
*             CMZK0012 PTR(31) REG(1);                             0448
*           RFY                                                    0449
*            (CMZK0012) RSTD;                                      0449
*                                                                  0449
*           /*********************************************************/
*           /*                                                       */
*           /* ** CLEAR AND SET CURRENT PROCEDURE BIT                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0450
*           CMZK0012->RPHCRR->CRACRR->OCCCRT='0'B;                 0450
         L     @11,RPHCRR(,CMZK0012)                               0450
         L     @11,CRACRR(,@11)                                    0450
         XC    OCCCRT+1(2,@11),OCCCRT+1(@11)                       0450
         MVI   OCCCRT(@11),B'00000000'                             0450
*           CMZK0012->RPHCRR->CRACRR->COCCQU='1'B;                 0451
         OI    COCCQU(@11),B'10000000'                             0451
*         END;                                                     0452
*         IF CSPCC=0×CSPCC=8        /* IF SIM LOG RET CODE OK        */
*           THEN                                                   0453
         LH    @11,CSPCC+224(,OCWPTR)                              0453
         LTR   @11,@11                                             0453
         BZ    @RT00453                                            0453
         C     @11,@CF00059                                        0453
         BE    @RT00453                                            0453
*           ;                                                      0454
*         ELSE                                                     0455
*           IF CSPCC=12             /* NO UECB SPACE AVAIL   @XM02306*/
*             THEN                                                 0455
         CLC   CSPCC+224(2,OCWPTR),@CH00032                        0455
         BNE   @RF00455                                            0455
*             DO;                                                  0456
*               OCWRC='14'X;        /* 'TEMPORARY' ERROR             */
         MVI   OCWRC(OCWPTR),X'14'                                 0457
*               OCWEC='01'X;        /* STORAGE ALLOCATION FAILURE    */
         MVI   OCWEC(OCWPTR),X'01'                                 0458
*             END;                                                 0459
*           ELSE                                                   0460
*             DO;                                                  0460
         B     @RC00455                                            0460
@RF00455 DS    0H                                                  0461
*               OCWRC='24'X;        /* SYSTEM ERROR                  */
         MVI   OCWRC(OCWPTR),X'24'                                 0461
*               OCWEC='01'X;        /* UNEXP RC                      */
         MVI   OCWEC(OCWPTR),X'01'                                 0462
*             END;                                                 0463
*       END;                                                       0464
*     ELSE                                                         0465
*       ;                                                          0465
@RF00443 DS    0H                                                  0466
*     OCWDRDTE=OCWDRDTE->RPRLGONF;  /* PTR TO NEXT DEST RDTE         */
@RC00443 L     @11,OCWDRDTE(,OCWPTR)                               0466
         L     @11,RPRLGONF(,@11)                                  0466
         ST    @11,OCWDRDTE(,OCWPTR)                               0466
*   END;                                                           0467
@DE00442 L     @11,OCWARDTE(,OCWPTR)                               0467
         CLC   OCWDRDTE(4,OCWPTR),RPRLGONB(@11)                    0467
         BE    @DC00442                                            0467
         CLI   OCWRC(OCWPTR),0                                     0467
         BE    @DL00442                                            0467
@DC00442 DS    0H                                                  0468
*   C14SVPTR=C14SVPTR-4;            /* RESTORE REG 14                */
         LA    @11,624                                             0468
         ALR   @11,OCWPTR                                          0468
         L     @05,C14SVPTR(,@11)                                  0468
         SL    @05,@CF00053                                        0468
         ST    @05,C14SVPTR(,@11)                                  0468
*   CR14PTR=C14SAVE;                                               0469
         L     CR14PTR,C14SAVE(,@05)                               0469
*   END DOLOGON;                                                   0470
@EL00005 DS    0H                                                  0470
@EF00005 DS    0H                                                  0470
@ER00005 BR    @14                                                 0470
*CSINIT:                                                           0471
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0471
*                                                                  0471
CSINIT   DS    0H                                                  0472
*/********************************************************************/
*/*  ROUTINE NAME: CSINIT                                            */
*/*  FUNCTION:                                                       */
*/*      CALLED BY DOLOGON TO INITIALIZE THE CONN SERV PARM LIST     */
*/*      FOR A LOGON REQUEST.                                        */
*/*  INPUT:                                                          */
*/*      ISTCSP - CONNECTION SERVICE PARM LIST                       */
*/*  OUTPUT:                                                         */
*/*      SEE CODE                                                    */
*/*  ROUTINES CALLED:                                                */
*/*      NONE                                                        */
*/*  MACROS USED:                                                    */
*/*      NONE                                                        */
*/********************************************************************/
*                                                                  0472
*   C14SAVE=CR14PTR;                                               0472
         LA    @11,624                                             0472
         ALR   @11,OCWPTR                                          0472
         L     @05,C14SVPTR(,@11)                                  0472
         ST    CR14PTR,C14SAVE(,@05)                               0472
*   C14SVPTR=C14SVPTR+4;                                           0473
         LA    @09,4                                               0473
         ALR   @05,@09                                             0473
         ST    @05,C14SVPTR(,@11)                                  0473
*   ISTCSP(1:LENGTH(ISTCSP))=ISTCSP(1:LENGTH(ISTCSP))&&/* ZERO PARM
*                                      LIST                          */
*       ISTCSP(1:LENGTH(ISTCSP));                                  0474
         LA    @08,224                                             0474
         ALR   @08,OCWPTR                                          0474
         XC    ISTCSP(40,@08),ISTCSP(@08)                          0474
*   ISTCSL(1:LENGTH(ISTCSL))=ISTCSL(1:LENGTH(ISTCSL))&&/* ZERO CSL   */
*       ISTCSL(1:LENGTH(ISTCSL));   /*                       @D32CKQM*/
         LA    @08,28                                              0475
         ALR   @08,OCWPTR                                          0475
         XC    ISTCSL(12,@08),ISTCSL(@08)                          0475
*   CSLRDTE=OCWDRDTE;               /* CSL -> TO DEST RDTE   @D32CKQM*/
         L     @00,OCWDRDTE(,OCWPTR)                               0476
         ST    @00,CSLRDTE(,@08)                                   0476
*   CSPRSCE=ADDR(OCWCSL);           /* PTR TO CSL            @D32CKQM*/
         LA    @08,224                                             0477
         ALR   @08,OCWPTR                                          0477
         LA    @00,OCWCSL(,OCWPTR)                                 0477
         ST    @00,CSPRSCE(,@08)                                   0477
*   CSPDEST=OCWARDTE;               /* DETS IS APPL                  */
         L     @00,OCWARDTE(,OCWPTR)                               0478
         ST    @00,CSPDEST(,@08)                                   0478
*   RPHCSPA=ADDR(OCWCSPL);          /* @ PARM LIST IN RPH            */
         LA    @00,OCWCSPL(,OCWPTR)                                0479
         ST    @00,RPHCSPA(,RPHPTR)                                0479
*   CSPIDX=CSPILGN;                 /* CALL TO CS LOGON TYPE @D32CKQM*/
         STH   @09,CSPIDX(,@08)                                    0480
*   C14SVPTR=C14SVPTR-4;            /* RESTORE REG 14                */
         SLR   @05,@09                                             0481
         ST    @05,C14SVPTR(,@11)                                  0481
*   CR14PTR=C14SAVE;                                               0482
         L     CR14PTR,C14SAVE(,@05)                               0482
*   END CSINIT;                                                    0483
@EL00006 DS    0H                                                  0483
@EF00006 DS    0H                                                  0483
@ER00006 BR    @14                                                 0483
*LOGSCHED:                                                         0484
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0484
*                                                                  0484
LOGSCHED DS    0H                                                  0485
*/********************************************************************/
*/*  ROUTINE NAME: LOGSCHED                                          */
*/*  FUNCTION:                                                       */
*/*      LOGSCHED IS CALLED BY LOGEXIT TO SCHED A UECB FOR A USER    */
*/*      EXIT. LOGSCHED REQSTORES AND WAITS FOR THE UECB. IT THEN    */
*/*      INITIALIZES THE UECB AND TPQUES IT TO THE UECPAB            */
*/*  ROUTINES CALLED:                                                */
*/*      NONE                                                        */
*/*  MACROS USED:                                                    */
*/*      REQSTORE - OBTAIN UECB                                      */
*/*      TPWAIT - WAIT FOR STORAGE IF NECESSARY                      */
*/*      TPQUE - SCHED USER EXIT                                     */
*/********************************************************************/
*                                                                  0485
*   C14SAVE=CR14PTR;                                               0485
         LA    @11,624                                             0485
         ALR   @11,OCWPTR                                          0485
         L     @05,C14SVPTR(,@11)                                  0485
         ST    CR14PTR,C14SAVE(,@05)                               0485
*   C14SVPTR=C14SVPTR+4;                                           0486
         AL    @05,@CF00053                                        0486
         ST    @05,C14SVPTR(,@11)                                  0486
*   RFY                                                            0487
*     UECBPTR RSTD;                                                0487
*   RFY                                                            0488
*     CRETCODE RSTD;                                               0488
*                                                                  0488
*/*  REQSTORE CBID(UECB)RPH(RPHPTR)CLEAR(YES)SAVE(YES)               */
*                                                                  0489
*   DO;                                                            0489
*                                                                  0489
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0490
*     RFY                                                          0490
*      (GPR02P,                                                    0490
*       GPR03P,                                                    0490
*       GPR04P,                                                    0490
*       GPR15P) RSTD;                                              0490
*     RFY                                                          0491
*      (GPR01P,                                                    0491
*       GPR13P) RSTD;                                              0491
*     GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);           0492
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*     RFY                                                          0493
*      (GPR01P,                                                    0493
*       GPR13P) UNRSTD;                                            0493
*     DO;                           /* LISATCVT                    0494
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0495
*     END;                          /* LISATCVT                      */
*     GPR02P=GPR15P->ATCBPDA×'80000000'X;                          0497
         L     GPR02P,ATCBPDA(,GPR15P)                             0497
         O     GPR02P,@CF01250                                     0497
*     DCL                                                          0498
*       1 FMZA0013 FIXED(31) STATIC LOCAL,                         0498
*        2 * FIXED(8) INIT(184),                                   0498
*        2 * PTR(24) INIT(0);                                      0498
*     GPR03F=FMZA0013;                                             0499
         L     GPR03F,FMZA0013                                     0499
*     GPR04F=17;                                                   0500
         LA    GPR04F,17                                           0500
*     GPR15P=GPR15P->ATCSMRQ;                                      0501
         L     GPR15P,ATCSMRQ(,GPR15P)                             0501
*     DCL                                                          0502
*       FMZL0013 BASED(GPR15P) LABEL VALUERANGE(*);                0502
*     CALL FMZL0013;                                               0503
         BALR  @14,@15                                             0503
*     RFY                                                          0504
*      (GPR13P) RSTD;                                              0504
*     GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);           0505
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*     RFY                                                          0506
*      (GPR13P) UNRSTD;                                            0506
*     RFY                                                          0507
*      (GPR02P,                                                    0507
*       GPR03P,                                                    0507
*       GPR04P,                                                    0507
*       GPR15P) UNRSTD;                                            0507
*   END;                            /* ******** END OF REQSTORE    0508
*                                      EXPANSION                     */
*   IF CRETCODE=8 THEN                                             0509
         C     CRETCODE,@CF00059                                   0509
         BNE   @RF00509                                            0509
*     DO;                                                          0510
*                                                                  0510
*/*  TPWAIT (OCWPTR,ICEPTR,SVEAREA,CBASEREG)                         */
*                                                                  0511
*       DO;                         /* BEGIN TPWAIT GENERATION       */
*         RFY                                                      0512
*          (GPR01P,                                                0512
*           GPR14P,                                                0512
*           GPR15P) RSTD;                                          0512
*         RFY                                                      0513
*          (GPR00P) RSTD;                                          0513
*         GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))                 0514
*         REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);                0514
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0515
*          (GPR00P) UNRSTD;                                        0515
*         GPR15P=ADDR(LHAA0032);                                   0516
         LA    GPR15P,LHAA0032                                     0516
*         GPR14P=0;                                                0517
         SLR   GPR14P,GPR14P                                       0517
*         GPR15P=GPR15P&'00FFFFFF'X;                               0518
         N     GPR15P,@CF03231                                     0518
*         GPR15P=GPR15P×RPHWT1;                                    0519
         O     GPR15P,@CF01274                                     0519
*         CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                      0520
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0520
*         BC(7,LHAB0032);                                          0521
*                                                                  0521
         BC    7,LHAB0032                                          0521
*/* TPEXIT  NONE                                                     */
*                                                                  0522
*         DO;                                                      0522
*           RESPECIFY                                              0523
*             GPR15P RSTD;                                         0523
*                                                                  0523
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0524
*           DO;                     /* LISATCVT                    0524
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0525
*           END;                    /* LISATCVT                      */
*           RESPECIFY                                              0527
*             GPR00F RSTD;                                         0527
*           GPR00F=0;               /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       0528
*           GPR15P=GPR15P->ATCAP31;                                0529
         L     GPR15P,ATCAP31(,GPR15P)                             0529
*           DCL                                                    0530
*             FMZL0037 BASED(GPR15P) LABEL VALUERANGE(*);          0530
*           CALL FMZL0037;                                         0531
         BALR  @14,@15                                             0531
*           RESPECIFY                                              0532
*            (GPR00F,                                              0532
*             GPR15P) UNRSTD;                                      0532
*         END;                      /* **** END OF TPEXIT            */
*LHAB0032:                                                         0534
*         ;                                                        0534
LHAB0032 DS    0H                                                  0535
*         GPR01P->RPHRESMA=0;                                      0535
         SLR   @11,@11                                             0535
         ST    @11,RPHRESMA(,GPR01P)                               0535
*         RFY                                                      0536
*          (GPR00P) RSTD;                                          0536
*LHAA0032:                                                         0537
*         ;                                                        0537
LHAA0032 DS    0H                                                  0538
*         GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))                 0538
*         REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);                0538
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0539
*          (GPR00P,                                                0539
*           GPR01P,                                                0539
*           GPR14P,                                                0539
*           GPR15P) UNRSTD;                                        0539
*       END;                        /* ****END OF TPWAIT             */
*       CRETCODE=0;                 /* INDIC BUFF OBT        @DM14044*/
         SLR   CRETCODE,CRETCODE                                   0541
*     END;                                                         0542
*   ELSE                                                           0543
*     ;                                                            0543
@RF00509 DS    0H                                                  0544
*   IF CRETCODE<=4 THEN                                            0544
         C     CRETCODE,@CF00053                                   0544
         BH    @RF00544                                            0544
*     DO;                                                          0545
*       UECBPTR=RPHSRPRM;           /* SET PTR FOR UECB              */
         L     UECBPTR,RPHSRPRM(,RPHPTR)                           0546
*       UECID=UEID;                 /* CON. BLK ID FOR UECB          */
         MVI   UECID(UECBPTR),X'10'                                0547
*       UECLEN=LENGTH(ISTUECB);     /* PUT DEB TASK ID INTO UECB     */
         MVI   UECLEN(UECBPTR),X'54'                               0548
*       UECTSKID=ACDTSKID;                                         0549
         L     @11,OCWACDEB(,OCWPTR)                               0549
         L     @09,ACDTSKID(,@11)                                  0549
         ST    @09,UECTSKID(,UECBPTR)                              0549
*       UECACB=ACDACB;              /* POINT TO ACB                  */
         L     @11,ACDACB-1(,@11)                                  0550
         LA    @11,0(,@11)                                         0550
         ST    @11,UECACB(,UECBPTR)                                0550
*       UECSYMNM=ICEOBJ->RPRNAME;   /* SYMBOLIC NAME IN UECB         */
         L     @11,ICEOBJ(,ICEPTR)                                 0551
         MVC   UECSYMNM(8,UECBPTR),RPRNAME(@11)                    0551
*       UECNDID=ADDR(UECSYMNM);     /* @ OF SYM NAME                 */
         LA    @11,UECSYMNM(,UECBPTR)                              0552
         ST    @11,UECNDID(,UECBPTR)                               0552
*       UECDLEN=ICEDATA->DATALN;    /* LENGTH OF LOGON DATA          */
         L     @11,ICEDATA(,ICEPTR)                                0553
         ICM   @11,12,DATALN(@11)                                  0553
         SRA   @11,16                                              0553
         ST    @11,UECDLEN(,UECBPTR)                               0553
*       UECREQTR=0;                 /* MAY PUT @ OF LOG ON DATA LATER*/
         SLR   @11,@11                                             0554
         ST    @11,UECREQTR(,UECBPTR)                              0554
*       UECTYPE=UECLOGON;           /* EXIT TYPE = LOGON             */
         MVI   UECTYPE(UECBPTR),X'06'                              0555
*       UECDVTPT=ATCUEP;            /* @ OF EXIT ROUTINE             */
         L     @11,OCWACVT(,OCWPTR)                                0556
         L     @11,ATCUEP(,@11)                                    0556
         ST    @11,UECDVTPT(,UECBPTR)                              0556
*       PABDVTA=ADDR(UECDVTPT);     /* @ OF ABOVE                    */
         LA    @11,16                                              0557
         ALR   @11,UECBPTR                                         0557
         LA    @09,UECDVTPT(,UECBPTR)                              0557
         STCM  @09,7,PABDVTA(@11)                                  0557
*       PABOFFST=ADDR(UECPAB)-UECBPTR;/* PUT OFFSET OF PAB INTO PAB  */
         LA    @09,UECPAB(,UECBPTR)                                0558
         SLR   @09,UECBPTR                                         0558
         STC   @09,PABOFFST(,@11)                                  0558
*       PABAPYP=CON;                /* PAB TYPE IS USER              */
         OI    PABAPYP(@11),B'10000000'                            0559
*/*  TPQUE (UECBPTR,UECPAB) NORM                                     */
*                                                                  0560
*       DO;                                                        0560
*         RFY                                                      0561
*          (GPR00P,                                                0561
*           GPR01P,                                                0561
*           GPR04P,                                                0561
*           GPR05P,                                                0561
*           GPR15P) RSTD;                                          0561
*         GEN REFS(GPR01P) SETS(RPHWORK)                           0562
*             (STM GPR02P,GPR08P,RPHWORK(GPR01P));                 0562
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*         GPR00P=0;                                                0563
         SLR   GPR00P,GPR00P                                       0563
*         GPR15P=ADDR(UECPAB);      /* HOLD PAB PTR                  */
         LA    GPR15P,UECPAB(,UECBPTR)                             0564
*         GPR04P=UECBPTR;           /* WORK ELE PTR                  */
         LR    GPR04P,UECBPTR                                      0565
*         GPR05P=GPR15P;            /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       0566
*         CALL ATCLCPTR->ATCAP37->ISTAPC37;                        0567
         L     @11,ATCLCPTR                                        0567
         L     @15,ATCAP37(,@11)                                   0567
         BALR  @14,@15                                             0567
*         GEN(NOPR  0)                                             0568
*         NOSETS NOREFS;                                           0568
         NOPR  0
*         RFY                                                      0569
*          (GPR00P,                                                0569
*           GPR01P,                                                0569
*           GPR04P,                                                0569
*           GPR05P,                                                0569
*           GPR15P) UNRSTD;                                        0569
*       END;                        /* *** END OF TPQUE GENERATION 0570
*                                      SCHEDULE PAB TO FIRE OFF EX RT*/
*     END;                                                         0571
*   ELSE                                                           0572
*     DO;                                                          0572
         B     @RC00544                                            0572
@RF00544 DS    0H                                                  0573
*       OCWRC='24'X;                /* SYSTEM ERROR                  */
         MVI   OCWRC(OCWPTR),X'24'                                 0573
*       OCWEC='01'X;                /* UNEXPECTED ERROR CODE         */
         MVI   OCWEC(OCWPTR),X'01'                                 0574
*     END;                                                         0575
*   RFY                                                            0576
*     UECBPTR UNRSTD;                                              0576
@RC00544 DS    0H                                                  0577
*   RFY                                                            0577
*     CRETCODE UNRSTD;                                             0577
*   C14SVPTR=C14SVPTR-4;                                           0578
         LA    @15,624                                             0578
         ALR   @15,OCWPTR                                          0578
         L     @11,C14SVPTR(,@15)                                  0578
         SL    @11,@CF00053                                        0578
         ST    @11,C14SVPTR(,@15)                                  0578
*   CR14PTR=C14SAVE;                                               0579
         L     CR14PTR,C14SAVE(,@11)                               0579
*   END LOGSCHED;                                                  0580
@EL00007 DS    0H                                                  0580
@EF00007 DS    0H                                                  0580
@ER00007 BR    @14                                                 0580
*DOLOCK:                                                           0581
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0581
*                                                                  0581
DOLOCK   DS    0H                                                  0582
*/********************************************************************/
*/*  ROUTINE NAME: DOLOCK                                            */
*/*  FUNCTION:                                                       */
*/*      CALLED BY MAIN LINE TO OBTAIN THE VOC AND RDT LOCKS         */
*/*  ROUTINES CALLED:                                                */
*/*      NONE                                                        */
*/*  MACROS USED:                                                    */
*/*      TPLOCK - LOCK THE VOC AND RDT LOCKS                         */
*/********************************************************************/
*                                                                  0582
*   C14SAVE=CR14PTR;                                               0582
         LA    @15,624                                             0582
         ALR   @15,OCWPTR                                          0582
         L     @11,C14SVPTR(,@15)                                  0582
         ST    CR14PTR,C14SAVE(,@11)                               0582
*   C14SVPTR=C14SVPTR+4;                                           0583
*                                                                  0583
         AL    @11,@CF00053                                        0583
         ST    @11,C14SVPTR(,@15)                                  0583
*/*** START -TPLOCK (VOCLOCK)- **                                    */
*                                                                  0584
*   DO;                                                            0584
*     RFY                                                          0585
*      (GPR00P,                                                    0585
*       GPR01P,                                                    0585
*       GPR02P,                                                    0585
*       GPR03P,                                                    0585
*       GPR04P,                                                    0585
*       GPR15P) RSTD;                                              0585
*     GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);   0586
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*     GPR15P=ATCAP35;               /* ADDRESS OF LOCK ROUTINE       */
         L     @11,OCWACVT(,OCWPTR)                                0587
         L     GPR15P,ATCAP35(,@11)                                0587
*     GPR02P=ADDR(ATCVOCLK);        /* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,ATCVOCLK(,@11)                               0588
*     GPR04P=GPR01P->RPHCRR;        /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0589
*     GPR00P=CRALMS02;              /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            0590
*     GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL PTR    */
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0591
*     DCL                                                          0592
*       FMZL0053 BASED(GPR15P) LABEL VALUERANGE(*);                0592
*     CALL FMZL0053;                                               0593
         BALR  @14,@15                                             0593
*     GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P,
*         GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P, 0594
*         GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);              0594
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*     RFY                                                          0595
*      (GPR00P,                                                    0595
*       GPR01P,                                                    0595
*       GPR02P,                                                    0595
*       GPR03P,                                                    0595
*       GPR04P,                                                    0595
*       GPR15P) UNRSTD;                                            0595
*   END;                                                           0596
*                                                                  0596
*/*** END -TPLOCK (VOCLOCK)- **                                      */
*                                                                  0597
*                                   /* GET VOC LOCK            SHARED*/
*   RFY                                                            0597
*     CRETCODE RSTD;                /*                       @XL03HHG*/
*   IF CRETCODE=0                   /* LOCK OBTAINED                 */
*     THEN                                                         0598
         LTR   CRETCODE,CRETCODE                                   0598
         BNZ   @RF00598                                            0598
*     DO;                                                          0599
*       OCWVLOCK=CON;               /* INDICATE LOCK OBTAINED        */
         OI    OCWVLOCK(OCWPTR),B'10000000'                        0600
*/*** START -TPLOCK (RDTLOCK)TYPE(XCLSIVE)- **                       */
*                                                                  0601
*       DO;                                                        0601
*         RFY                                                      0602
*          (GPR00P,                                                0602
*           GPR01P,                                                0602
*           GPR02P,                                                0602
*           GPR03P,                                                0602
*           GPR04P,                                                0602
*           GPR15P) RSTD;                                          0602
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*         GPR15P=ATCAP36;           /* ADDRESS OF LOCK ROUTINE       */
         L     @11,OCWACVT(,OCWPTR)                                0604
         L     GPR15P,ATCAP36(,@11)                                0604
*         GPR02P=ADDR(ATCRDTLK);    /* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,ATCRDTLK(,@11)                               0605
*         GPR04P=GPR01P->RPHCRR;    /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0606
*         GPR00P=CRALMS03;          /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,4                                            0607
*         GPR03P=ADDR(GPR04P->CRAL3PTR);/* SET PARAM - LOCK LEVEL PTR*/
         LA    GPR03P,CRAL3PTR(,GPR04P)                            0608
*         DCL                                                      0609
*           FMZL0058 BASED(GPR15P) LABEL VALUERANGE(*);            0609
*         CALL FMZL0058;                                           0610
         BALR  @14,@15                                             0610
*         GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P, 0611
*             GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);   0611
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0612
*          (GPR00P,                                                0612
*           GPR01P,                                                0612
*           GPR02P,                                                0612
*           GPR03P,                                                0612
*           GPR04P,                                                0612
*           GPR15P) UNRSTD;                                        0612
*       END;                                                       0613
*                                                                  0613
*/*** END -TPLOCK (RDTLOCK)TYPE(XCLSIVE)- **                         */
*                                                                  0614
*                                   /* GET RDT LOCK EXECLUSIVE       */
*       IF CRETCODE=0               /* LOCK GOTTEN                   */
*         THEN                                                     0614
         LTR   CRETCODE,CRETCODE                                   0614
         BNZ   @RF00614                                            0614
*         OCWRLOCK=CON;             /* INDICATE LOCK GOTTEN          */
         OI    OCWRLOCK(OCWPTR),B'01000000'                        0615
*       ELSE                                                       0616
*         DO;                                                      0616
         B     @RC00614                                            0616
@RF00614 DS    0H                                                  0617
*           OCWRC='24'X;            /* SYSTEM ERROR                  */
         MVI   OCWRC(OCWPTR),X'24'                                 0617
*           OCWEC='06'X;            /* NO RDT LOCK                   */
         MVI   OCWEC(OCWPTR),X'06'                                 0618
*         END;                                                     0619
*     END;                                                         0620
*   ELSE                                                           0621
*     DO;                                                          0621
         B     @RC00598                                            0621
@RF00598 DS    0H                                                  0622
*       OCWRC='24'X;                /* SYSTEM ERROR                  */
         MVI   OCWRC(OCWPTR),X'24'                                 0622
*       OCWEC='05'X;                /* NO VOC LOCK                   */
         MVI   OCWEC(OCWPTR),X'05'                                 0623
*     END;                                                         0624
*   RFY                                                            0625
*     CRETCODE UNRSTD;              /*                       @XL03HHG*/
@RC00598 DS    0H                                                  0626
*   C14SVPTR=C14SVPTR-4;                                           0626
         LA    @15,624                                             0626
         ALR   @15,OCWPTR                                          0626
         L     @11,C14SVPTR(,@15)                                  0626
         SL    @11,@CF00053                                        0626
         ST    @11,C14SVPTR(,@15)                                  0626
*   CR14PTR=C14SAVE;                /* RESTORE R14 FOR RETURN        */
         L     CR14PTR,C14SAVE(,@11)                               0627
*   END DOLOCK;                                                    0628
@EL00008 DS    0H                                                  0628
@EF00008 DS    0H                                                  0628
@ER00008 BR    @14                                                 0628
*DOUNLOCK:                                                         0629
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0629
*                                                                  0629
DOUNLOCK DS    0H                                                  0630
*/********************************************************************/
*/*  ROUTINE NAME: DOUNLOCK                                          */
*/*  FUNCTION:                                                       */
*/*      CALLED BY MAIN LINE TO RELE THE VOC AND/OR RDT LOCKS        */
*/*  ROUTINES CALLED:                                                */
*/*      NONE                                                        */
*/*  MACROS USED:                                                    */
*/*      TPUNLOCK - UNLOCK THE VOC AND/OR RDT LOCKS                  */
*/********************************************************************/
*                                                                  0630
*   C14SAVE=CR14PTR;                                               0630
         LA    @15,624                                             0630
         ALR   @15,OCWPTR                                          0630
         L     @11,C14SVPTR(,@15)                                  0630
         ST    CR14PTR,C14SAVE(,@11)                               0630
*   C14SVPTR=C14SVPTR+4;                                           0631
         AL    @11,@CF00053                                        0631
         ST    @11,C14SVPTR(,@15)                                  0631
*   IF OCWRLOCK=CON                 /* RDT LOCK HELD?                */
*     THEN                                                         0632
         TM    OCWRLOCK(OCWPTR),B'01000000'                        0632
         BNO   @RF00632                                            0632
*     DO;                                                          0633
*                                                                  0633
*/*** START -TPUNLOCK (RDTLOCK)- **                                  */
*                                                                  0634
*       DO;                                                        0634
*                                                                  0634
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  0635
*         RFY                                                      0635
*          (GPR00P,                                                0635
*           GPR01P,                                                0635
*           GPR02P,                                                0635
*           GPR03P,                                                0635
*           GPR04P,                                                0635
*           GPR15P) RSTD;                                          0635
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*         GPR02P=ADDR(ATCRDTLK);    /* SET PARAM - LOCKWORD PTR      */
         L     GPR02P,OCWACVT(,OCWPTR)                             0637
         LA    GPR02P,ATCRDTLK(,GPR02P)                            0637
*         GPR04P=GPR01P->RPHCRR;    /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0638
*         GPR00P=CRALMS03;          /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,4                                            0639
*         GPR03P=ADDR(GPR04P->CRAL3PTR);/* SET PARAM - LOCK LEVEL PTR*/
         LA    GPR03P,CRAL3PTR(,GPR04P)                            0640
*         DO;                       /* LISATCVT                    0641
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0642
*         END;                      /* LISATCVT                      */
*         GPR15P=GPR15P->ATCAP33;                                  0644
         L     GPR15P,ATCAP33(,GPR15P)                             0644
*         DCL                                                      0645
*           FMZL0063 BASED(GPR15P) LABEL VALUERANGE(*);            0645
*         CALL FMZL0063;                                           0646
         BALR  @14,@15                                             0646
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P, 0647
*             GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);   0647
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0648
*          (GPR00P,                                                0648
*           GPR01P,                                                0648
*           GPR02P,                                                0648
*           GPR03P,                                                0648
*           GPR04P,                                                0648
*           GPR15P) UNRSTD;                                        0648
*       END;                                                       0649
*                                                                  0649
*/*** END -TPUNLOCK (RDTLOCK)- **                                    */
*                                                                  0650
*                                   /* UNLOCK IT                     */
*       OCWRLOCK=COFF;              /* INDICATE LOCK NOT HELD        */
         NI    OCWRLOCK(OCWPTR),B'10111111'                        0650
*     END;                                                         0651
*   ELSE                                                           0652
*     ;                                                            0652
@RF00632 DS    0H                                                  0653
*   IF OCWVLOCK=CON                 /* VOC LOCK HELD?                */
*     THEN                                                         0653
         TM    OCWVLOCK(OCWPTR),B'10000000'                        0653
         BNO   @RF00653                                            0653
*     DO;                                                          0654
*                                                                  0654
*/*** START -TPUNLOCK (VOCLOCK)- **                                  */
*                                                                  0655
*       DO;                                                        0655
*                                                                  0655
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  0656
*         RFY                                                      0656
*          (GPR00P,                                                0656
*           GPR01P,                                                0656
*           GPR02P,                                                0656
*           GPR03P,                                                0656
*           GPR04P,                                                0656
*           GPR15P) RSTD;                                          0656
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*         GPR02P=ADDR(ATCVOCLK);    /* SET PARAM - LOCKWORD PTR      */
         L     GPR02P,OCWACVT(,OCWPTR)                             0658
         LA    GPR02P,ATCVOCLK(,GPR02P)                            0658
*         GPR04P=GPR01P->RPHCRR;    /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0659
*         GPR00P=CRALMS02;          /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            0660
*         GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL PTR*/
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0661
*         DO;                       /* LISATCVT                    0662
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0663
*         END;                      /* LISATCVT                      */
*         GPR15P=GPR15P->ATCAP33;                                  0665
         L     GPR15P,ATCAP33(,GPR15P)                             0665
*         DCL                                                      0666
*           FMZL0073 BASED(GPR15P) LABEL VALUERANGE(*);            0666
*         CALL FMZL0073;                                           0667
         BALR  @14,@15                                             0667
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P, 0668
*             GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);   0668
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      0669
*          (GPR00P,                                                0669
*           GPR01P,                                                0669
*           GPR02P,                                                0669
*           GPR03P,                                                0669
*           GPR04P,                                                0669
*           GPR15P) UNRSTD;                                        0669
*       END;                                                       0670
*                                                                  0670
*/*** END -TPUNLOCK (VOCLOCK)- **                                    */
*                                                                  0671
*                                   /* RELEASE VOC LOCK              */
*       OCWVLOCK=COFF;              /* INDICATE LOCK NOT HELD        */
         NI    OCWVLOCK(OCWPTR),B'01111111'                        0671
*     END;                                                         0672
*   ELSE                                                           0673
*     ;                                                            0673
@RF00653 DS    0H                                                  0674
*   C14SVPTR=C14SVPTR-4;                                           0674
         LA    @15,624                                             0674
         ALR   @15,OCWPTR                                          0674
         L     @11,C14SVPTR(,@15)                                  0674
         SL    @11,@CF00053                                        0674
         ST    @11,C14SVPTR(,@15)                                  0674
*   CR14PTR=C14SAVE;                /* RESTORE R14 FOR RETURN        */
         L     CR14PTR,C14SAVE(,@11)                               0675
*   END DOUNLOCK;                                                  0676
*                                                                  0676
@EL00009 DS    0H                                                  0676
@EF00009 DS    0H                                                  0676
@ER00009 BR    @14                                                 0676
@PB00009 DS    0H                                                  0677
*/* TPEPILOG                                                         */
*                                                                  0677
*   GEN(PRINT OFF);                                                0677
         PRINT OFF
*/* LOGICAL CHANNEL COMMAND WORD                                      *
*/* ADD A DECLARE                                      003 10/18/74   *
*DCL  1  ISTLCCW BDY(WORD) BASED,                                  0678
*        2  LCCWOP    CHAR(1),         /* OPERATION CODE -CONTROL     *
*           3  LCCWSI BIT(1),          /* SESS INIT / START DIALOG FLG*
*           3  LCCWSD BIT(1),          /* SESS DISCON/END DIALOG FLG  *
*           3  LCCWRWOP BIT(6),        /* READ/WRITE OPERATION CODE   *
*              4  * BIT(1),            /* RESERVED                    *
*              4  LCCWSOP BIT(1),      /* SPECIAL OPERATION LIKE   0678
*                                         ERASE OR READ CONT          *
*              4  LCCWCTL BIT(4),      /* CONTROL TYPE                *
*                 5  LCCWMODE BIT(2),  /* MODE TYPE                   *
*                 5  LCCWTYPE BIT(2),  /* OPERATION TYPE              *
*        2  LCCWFLAG  CHAR(1),         /* FLAG BYTE                   *
*           3  LCCWCD BIT(1),          /* CHAIN DATA                  *
*           3  LCCWCC BIT(1),          /* CHAIN COMMAND               *
*           3  LCCWCKPT BIT(1),        /* SUPPRESS 3705 CHECK POINT
*                                         RECORD                      *
*           3  LCCWNTVC BIT(1),        /* DO NOT PERFORM VALCHEK      *
*           3  LCCWIDAT BIT(1),        /* LCCWDATA CONTAINS DATA      *
*           3  LCCWLSI BIT(1),         /* LCCW SYNCH INDICATOR        *
*              4  LCCWPER BIT(1),      /* POST=RESP                   *
*           3  LCCWRFI BIT(1),         /* REQUEST FEEDBACK INDICATOR  *
*           3  LCCWACI BIT(1),         /* ADDITION COMMAND INDICATOR  *
*        2  LCCWCNT FIXED(16),         /* DATA COUNT                  *
*        2  LCCWDATA PTR(31);          /* DATA ADDRESS OR IMMED. DATA *
*/* LOGICAL COMMAND CODES */                                       0679
*DCL  LXDQ     BIT(8) CONSTANT('3B'X), /* RESET DEVICE QUEUE          *
*     LXEC     BIT(8) CONSTANT('4B'X), /* RESET AT END OF COMMAND     *
*     LXO      BIT(8) CONSTANT('5B'X), /* RESET ORDERLY               *
*     LCCWPRGE BIT(8) CONSTANT('6B'X), /* PURGE                       *
*     LWH      BIT(8) CONSTANT('0F'X), /* WRITE HEADER INDI. 1ST BLOCK*
*     LWRVI    BIT(8) CONSTANT('1F'X), /* WRITE RVI                   *
*     LWNA     BIT(8) CONSTANT('2F'X), /* WRITE NEGATIVE ACK          *
*     LWAA     BIT(8) CONSTANT('3F'X), /* WRITE ALTERNATE ACK         *
*     LWPLG    BIT(8) CONSTANT('5F'X), /* WRITE ACK LEADING GRAPHICS  *
*     LWNLG    BIT(8) CONSTANT('6F'X), /* WRITE NACK LEADING GRAPHICS *
*     LSMDE    BIT(8) CONSTANT('4F'X), /* SET MODE                    *
*     LIFBM    BIT(8) CONSTANT('7F'X), /* INDIC 1ST BLOCK OF MESSAGE  *
*     LTEST    BIT(8) CONSTANT('FE'X), /* TEST LCCW                   *
*     LPRMPT   BIT(8) CONSTANT('13'X), /* PREEMPT LCCW                *
*     LRSTR    BIT(8) CONSTANT('43'X), /* RESTORE LCCW                *
*     LEXEC    BIT(8) CONSTANT('FF'X), /* SPECIAL CONTROL OPERATION   *
*     LREAD    BIT(2) CONSTANT('10'B),  /* READ TYPE LCCW             *
*     LWRITE   BIT(2) CONSTANT('01'B),  /* WRITE TYPE LCCW            *
*     LCNTRL   BIT(2) CONSTANT('11'B),  /* CONTROL TYPE LCCW          *
*     LRESET   BIT(4) CONSTANT('1011'B),/* RESET COMMANDS             *
*     LTIC     BIT(8) CONSTANT('08'X),  /* LOGICAL TIC                *
*     LWR      BIT(6) CONSTANT('000001'B),  /* WRITE CONVERSATIONAL   *
*     LWB      BIT(6) CONSTANT('000101'B),  /* WRITE BLOCK            *
*     LWM      BIT(6) CONSTANT('001001'B),  /* WRITE MESSAGE          *
*     LWT      BIT(6) CONSTANT('001101'B),  /* WRITE TRANSMISSION     *
*     LEWM     BIT(6) CONSTANT('011001'B),  /* ERASE/WRITE MESSAGE    *
*     LEWT     BIT(6) CONSTANT('011101'B),  /* ERASE/WRITE TRNSMSSN   *
*     LEAU     BIT(6) CONSTANT('010001'B),  /* ERASE ALL UNPROTECTED  *
*     LRB      BIT(6) CONSTANT('000110'B),  /* READ BLOCK             *
*     LRM      BIT(6) CONSTANT('001010'B),  /* READ MESSAGE           *
*     LRT      BIT(6) CONSTANT('001110'B),  /* READ TRANSMISSION      *
*     LRMOD    BIT(6) CONSTANT('010010'B),  /* READ MODIFIED          *
*     LRBUF    BIT(6) CONSTANT('010110'B),  /* READ BUFFER            *
*     LRCONT   BIT(6) CONSTANT('011010'B),  /* READ CONTINUOUS        *
*     LRPEP    BIT(6) CONSTANT('011110'B),  /* READ PERPETUAL         *
*     LCPYM    BIT(6) CONSTANT('101001'B),  /* COPY MESSAGE           *
*     LCPYT    BIT(6) CONSTANT('101101'B),  /* COPY TRANSMISSION      *
*     LD       BIT(8) CONSTANT('23'X),  /* DISCONNECT                 *
*     LDEC     BIT(8) CONSTANT('33'X),  /* DISCONNECT WITH END OF CALL*
*     LEOC     BIT(8) CONSTANT('53'X),  /* END OF CALL COMMAND        *
*     LXEL     BIT(8) CONSTANT('0B'X),  /* RESET ERROR LOCK           *
*     LXC      BIT(8) CONSTANT('1B'X),  /* RESET CONDITIONAL          *
*     LXI      BIT(8) CONSTANT('2B'X),  /* RESET IMMEDIATE            *
*     LC       BIT(8) CONSTANT('03'X),  /* CONTACT                    *
*     LWPA     BIT(8) CONSTANT('FD'X); /* WRITE POSITIVE ACK          *
*DCL  LMT      BIT(2) CONSTANT('11'B), /* TRANSMISSION MODE           *
*     LMS      BIT(2) CONSTANT('00'B), /* SPECIAL MODE LIKE CONV, EAU *
*     LMB      BIT(2) CONSTANT('01'B), /* BLOCK MODE                  *
*     LMM      BIT(2) CONSTANT('10'B); /* MSG OR CONTINUOUS MODE      *
*/* FOLLOWING EQUATES FOR  - PORT SOLICITOR (DIAL)                    *
*/* PORT SOLICITOR COMMAND CODES                                      *
*DCL PSOL    BIT(8) CONSTANT('FE'X), /* SPECIAL PORT SOLICITOR     0681
*                                       COMMAND                       *
*    STCTL    BIT(8) CONSTANT('01'X), /* START CONTROL                *
*    RESTCTL  BIT(8) CONSTANT('02'X), /* RESET & CONTROL - REDRIVE    *
*    STIPUT   BIT(8) CONSTANT('03'X); /* START INPUT                  *
*/*   FOLLOWING EQUATES FOR SDLC SUPPORT                              *
*DCL  LCCHOLD  BIT(8) CONSTANT('01'X),  /* HOLD                       *
*     LCCRHOLD BIT(8) CONSTANT('02'X),  /* RELEASE HOLD               *
*     LSEND    BIT(8) CONSTANT ('F1'X), /* SEND                       *
*     LCLEAR   BIT(8) CONSTANT ('F2'X), /* CLEAR                      *
*     LCRUD    BIT(8) CONSTANT ('F3'X), /* CLEAR, UNBIND              *
*     LCRUDNFY BIT(8) CONSTANT ('F4'X), /* CLEAR, UNBIND, NOTIFY      *
*     LNFY     BIT(8) CONSTANT ('F5'X), /* NOTIFY                     *
*     LRELCB   BIT(8) CONSTANT ('F6'X), /* RELEASE CB                 *
*     LRESTSR  BIT(8) CONSTANT ('F7'X), /* RESETSR                    *
*     LCLRNFY  BIT(8) CONSTANT('F8'X),  /* CLEAR/NOTIFY               *
*     LCHPUR   BIT(8) CONSTANT('F9'X);  /* PURGE                      *
*DCL  LCCWSIZE FIXED(8) CONSTANT(8);    /* LCCW SIZE                  *
*DCL  LRDS     BIT(8) CONSTANT('FF'X);  /* RECORD DEV STATS COMMAND   *
*DCL  LQUIS    BIT(8) CONSTANT('FE'X);  /* QUIESCE COMMAND            *
*/*              LOGICAL CHANNEL PROGRAM BLOCK                       */
*/*                                                                  */
*/*  REVISIONS                                         006 03/24/75  */
*/*                                                                  */
*DCL  1  ISTLCPB BDY(WORD) BASED(LCPBPTR),                         0686
*        2 LCPTYPE CHAR(1),            /* TYPE CODE                  */
*        2 LCPLNGTH  PTR(8),           /* LENGTH IN BYTES            */
*        2 LCPREQTG CHAR(2),           /* LCPB REQ. TAG FIELD        */
*          3 LCPFLAGS BIT(8),          /* FLAG BYTE                  */
*            4 LCPZRT00 BIT(1),        /* LOGICAL ERROR FLAG         */
*            4 LCPZRT01 BIT(1),        /* CONTROL BLOCK ERROR        */
*            4 LCPZF001 BIT(1),        /* LCP START PROCESS FLAG     */
*              5 LCPZRT02 BIT(1),      /* I/O INITIATION DISABLED    */
*                6 LCPZRTL2 BIT(1),    /* END OF SCHEDULABLE BLOCK   */
*            4 LCPZF002 BIT(1),        /* LCP IN PROCESSING FLAG     */
*              5 LCPZRT03 BIT(1),      /* GO LOOK AT FMCB LINE STATE */
*                                      /* FIELD (REQ. TAG OVERLAY)   */
*                6 LCPZRTL3 BIT(1),    /* WRITE/READ REQUEST         */
*            4 LCPZF003 BIT(1),        /* LCP PROCESSING COMPLETE FLAG*
*              5 LCPZRT04 BIT(1),      /* STPR SET IN BDU FLAG       */
*                                      /* (REQ. TAG OVERLAY)         */
*                6 LCPZRTL4 BIT(1),    /* FEEDBACK REQUESTED         */
*            4 LCPZF004 BIT(1),        /* SINGLE LCCW/LCP FLAG       */
*              5 LCPZRT05 BIT(1),      /* FEEDBACK TO BE ROUTED TO   */
*                                      /* ICNCB FMCB (REQ. TAG       */
*                                      /* OVERLAY)                   */
*                6 LCPZRTL5 BIT(1),    /* DECREMENT SCHED COUNT ON DEQ*
*            4 LCPZRT06 BIT(1),        /* CRITICAL TEXT BLOCK        */
*                                      /* FLAG (REQ. TAG OVERLAY)    */
*              5 LCPZRTL6 BIT(1),      /* WRITE REQUEST              */
*            4 LCPZRT07 BIT(1),        /* BUFFER TRACE ACTIVE        */
*                                      /* FLAG (REQ. TAG OVERLAY)    */
*              5 LCPZRTL7 BIT(1),      /* SCHEDULING FLAG            */
*          3 LCPMNRCD CHAR(1),         /* LCP MINOR REJECTION CODE   */
*            4 LCPZRT08 BIT(1),        /* I/O TRACE ACTIVE FLAG      */
*                                      /* (REQ. TAG OVERLAY)         */
*              5 LCPZRTL8 BIT(1),      /* DEVICE END NOTIFICATION    */
*            4 LCPZRT09 BIT(1),        /* DIALOGUE SCHED DISABLED    */
*              5 LCPZRTL9 BIT(1),      /* CRITICAL TEXT FLAG         */
*            4 LCPZRT0A BIT(1),        /* SIMULATED CONTACT FLAG     */
*            4 LCPZRT0B BIT(1),        /* SIMULATED DISCONNECT FLAG  */
*        2 LCPCHAIN PTR(31),           /* APS CHAIN                  */
*          3 LCPCHAI1 PTR(8),                                      0686
*            4 LCPCHNG BIT(1),         /* GATE BIT                   */
*          3 LCPCHAI2 PTR(24),         /* ADDRESS FIELD              */
*        2 LCPRUCNT PTR(8),            /* NUMBER OF RU FOR THIS LCPB */
*          3 LCPZMIRC CHAR(1),         /* MINOR RETURN CODE          */
*        2 LCPFLAG2 CHAR(1),           /* SECOND FLAG BYTE           */
*          3 LCPPRFLG BIT(1),          /* PACING REQUIRED            */
*          3 LCPASYN  BIT(1),          /* ASYNCHRONOUS LCPB          */
*          3 LCPRSTRT BIT(1),          /* RESTART LCPB               */
*          3 LCPTLBPI BIT(1),          /* TPIOS BLOCK LCCW           */
*            4 LCPZRIMM BIT(1),        /* RESET IMMED REQUIRED ON ERR*/
*          3 LCPFID0  BIT(1),          /* FID0 TH INDICATOR FOR RECORD*
*            4 LCPEXRES BIT(1),        /* EXCEP. RESPONSE SPEC. 3270R*/
*          3 LCPDSTAT BIT(1),          /* DIALOGUE STATE BIT, 3270R  */
*                                      /* 0=REQ. REJECT,1=STATE ERROR*/
*          3 LCPFREE  BIT(1),          /* DEALLOCATE LCPB 3270R      */
*          3 LCPATOP  BIT(1),          /* ATOP LCPB  3270R           */
*        2 LCPSEQ   FIXED(16),         /* OUTBOUND SEQUENCE NUMBER   */
*          3 LCPRRCCT PTR(8),          /* COUNT OF RESPONSES RECEIVED*/
*          3 LCPRRCNT PTR(8),          /* COUNT OF RESPONSES REQUESTED*
*        2 LCPLCCW1 PTR(31),           /* ADDR FIRST LCCW FOR FID1   */
*        2 LCPCID CHAR(4) BDY(WORD),   /* COMMUNICATION ID           */
*          3 LCPSAF BIT(16),           /* SOURCE IDENTIFICATION      */
*          3 LCPDAF BIT(16),           /* DESTINATION IDENTIFICATION */
*        2 LCPNXLCW PTR(31),           /* ADDR NEXT LCCW             */
*        2 LCPFDBA PTR(31),            /* BTU ADDRESS                */
*          3 LCPFDB1 PTR(8),                                       0686
*          3 LCPFDB2 PTR(24),          /* ADDRESS FIELD              */
*        2 LCPTLBAD PTR(31),           /* ADDRESS OF TLB             */
*        2 LCPFOSN  BIT(16),           /* SEQUENCE NUMBER FIRST RU   */
*        2 LCPFSNCH FIXED(15),         /* 1ST SEQ NUMBER IN RU CHAIN */
*        2 LCPSTYPE FIXED(8),          /* LCPB SUB-TYPE X'FF' = RESET,*
*                                      /* X'00' = NON-RESET          */
*        2 LCPFLG1 CHAR(1),            /* FLAGS                      */
*          3 LCPRESET BIT(1),          /* A TPQUE WITH RESET QUEUED  */
*                                      /* THIS ELEMENT               */
*          3 LCPINTER BIT(1),          /* INTERNAL LCPB              */
*          3 LCPDIRPT BIT(1),          /* NOT SEND W/POST=SCHED=0    */
*          3 LCPREDRV BIT(1),          /* LCPB IS FOR REDRIVE        */
*          3 LCPSTLB  BIT(1),          /* TLB NOT TO BE FREED        */
*          3 LCPTRANS BIT(1),          /* DATA INCLUDES CONTROL CHARS*/
*          3 LCPRSV78 BIT(2),          /* RESERVED                   */
*        2 LCPLCCWC BIT(8),            /* COUNT OF LCCWS             */
*        2 LCPRSV77 CHAR(1),           /* RESERVED                   */
*        2 LCPFLCCW PTR(31),           /* ADDR OF FIRST LCCW         */
*          3 LCPUBFSB PTR(31),         /* UNBIND FSB ADDRESS         */
*        2 LCPCLREP PTR(31),           /* PTR TO CLEAR LCPB IN UCB   */
*/*  NOTE:  THE FOLLOWING FIELD - LCPLCCW MUST BE THE LAST FIELD     */
*/*         IN THIS CONTROL BLOCK.  THE CONTROL BLOCK ISTDCLCP HAS   */
*/*         FIELDS IN IT WHICH MUST BE CONTIGUOUS WITH LCPLCCW       */
*        2 LCPLCCW  CHAR(LENGTH(ISTLCCW)) BDY(WORD), /* FIRST LCCW   */
*          3 LCPRSTQH PTR(31),         /* RESET LCPB QUEUE HEADER    */
*          3 LCPPABA  PTR(31),         /* PAB POINTER                */
*            4 LCPRPHA  PTR(31),       /* RPH POINTER                */
*              5 LCPFTYPE BIT(1);      /* FEEDBACK TYPE              */
*/*     CONSTANTS FOR LCPTYPE                                         *
*DCL  LCRPHFT  BIT(1) CONSTANT('1'B);                              0687
*DCL  LCPABFT  BIT(1) CONSTANT('0'B);                              0688
*DCL LCPBFIRM BIT(8) CONSTANT('10'X);  /* LU FAILED, CLSDST, SCHED LOST
*                                         TERM, OPNDST MAY BE TRIED   *
*DCL LCPBTERM BIT(8) CONSTANT('11'X);  /* TERM RECEIVED,CLSDST,    0690
*                                         SCHED LOST TERM             *
*/*                                                                   *
*                                                                  0691
*DCL 1 LCPZTIE BDY(WORD) DEFINED(LCPCID), /* TOLTEP INTERFACE      0691
*                                         ELEMENT OVERLAY            */
*       2  LCPZFMCA PTR(31),           /* ACTIVE FMCB ADDRESS        */
*       2  LCPZSNA PTR(31),            /* SYMBOLIC NAME ADDRESS      */
*       2  LCPZSNAM CHAR(8) BDY(WORD), /* SYMBOLIC NAME              */
*          3  LCPZTRV1 PTR(31),        /* RESERVED FOR RESTORE LCP   */
*          3  LCPZTRV4 PTR(31);        /* RESERVED FOR RESTORE LCP   */
*DCL LCTYPE BIT(8) CONSTANT('04'X);                                0692
*DCL PLCPTYPE BIT(8) CONSTANT('28'X);  /* PURGE LCPB TYPE ID         */
*DCL LCPCLACB BIT(8) CONSTANT('04'X);  /* LCPB FROM CLOSE ACB        */
*DCL LSRSTYPE BIT(8) CONSTANT('FF'X);  /* RESET SUBTYPE              */
*DCL LCPETYPE BIT(8) CONSTANT('40'X);  /* EXTENDED LCPB TYPE ID      */
*/*                                                                  */
*/*  MINOR RETURN CODES                                              */
*/*                                                                  */
*DCL LCMCRSTR BIT(8) CONSTANT('F7'X),  /* MINOR RC FOR RESETSR       */
*    LCPMNEW  BIT(8) CONSTANT('02'X),  /* EARLY WARNING,             */
*                                      /* RECOVERY IN PROGRESS       */
*    LCPMNPF  BIT(8) CONSTANT('03'X),  /* PERM. I/O FAILURE          */
*    LCPMNAS  BIT(8) CONSTANT('04'X),  /* AUTO NETWORK SHUTDOWN      */
*    LCPMNCL  BIT(8) CONSTANT('06'X),  /* CLOSE/CLSDST OCCURED       */
*    LCPMNVD  BIT(8) CONSTANT('07'X),  /* VARY DEACTIVATE            */
*    LCPMNTF  BIT(8) CONSTANT('10'X),  /* TEMP RECORD DEVICE FAILURE */
*    LCPMNSF  BIT(8) CONSTANT('01'X),  /* TEMP BASIC FAILURE /       */
*    LCPMNTS  BIT(8) CONSTANT('11'X),  /* TERMINATE SELF             */
*    LCPMNAP  BIT(8) CONSTANT('0A'X),  /* APPL. ISSUED CLEAR         */
*    LCPMNPR  BIT(8) CONSTANT('0B'X),  /* PREEMPT                    */
*    LCPMNRE  BIT(8) CONSTANT('0C'X);  /* RESTORE                    */
*/* VS1, VS2 TPIOS SAVEAREA FORMAT */                              0698
*DCL  1  ISTZSAVE BDY(WORD) BASED,                                 0698
*        2   ZSAZSVBC PTR(31),         /* SAVEAREA BACK CHAIN        */
*            3   ZSAZSVMS CHAR(1),     /* MODULE TRACE CODE          */
*                4 ZSAZACTV BIT(1),    /* ACTIVE SAVE AREA FLAG      */
*        2   ZSAZSVFC PTR(31),         /* SAVEAREA FORWARD CHAIN     */
*        2   ZSAZSVRR PTR(31),         /* RETURN REGISTER            */
*        2   ZSAZSVVR (6) PTR(31),    /* VARIABLE REGS (7-12) SVEAREA*/
*        2   ZSAZTRAC CHAR(4);        /* EBCDIC NAME OF OWNER        */
*/*                                                                0699
*THE FOLLOWING EQUATES SHOULD READ ''FIXED(8) CONSTANT(LENGTH(X))'',
*WHERE X IS THE NAME OF THE VARIABLE CONTROL BLOCK OR FIELD OF WHICH
*LENGTH IS THE VALUE BEING EQUATED, SHOULD THE PLS COMPILER BE     0699
*BE ABLE TO TAKE IT.                                               0699
*                                                                    */
*DCL ZSAZSVVA FIXED(8) CONSTANT(8);  /* DISPLACEMENT TO VARIABLE REGS*/
*DCL ZSAZSVSZ FIXED(8) CONSTANT(40); /* LENGTH OF ISTZSAVE           */
*/* PREFIX FOR CRR                                                   */
*/*                                                                  */
*/* RELEASE 1 - JUNE 28, 1973                                        */
*/*                                                                  */
*DCL 1 ISTPFCRR BASED BDY(WORD),        /* PREFIX FOR CRR            */
*     2  PFCCRR   CHAR(4),              /* CRR HEADER                */
*        3  PFCCRRID CHAR(1),           /* CRR ID FIELD              */
*           4  CRRID CHAR(1),           /* BASIC CTL LAYER DEFINITION*/
*        3  PFCRSV10 CHAR(1),           /* RESERVED FOR ALIGNMENT    */
*        3  PFCCRRLN CHAR(2),           /* CRR LENGTH                */
*           4  CRRLEN CHAR(2),          /* BASIC CTL LAYER DEF       */
*     2  PFCHDR CHAR(8) BDY(WORD),      /* SAVE AREA FOR OLD CRR FRR */
*        3  PFCCRRO  PTR(31),           /* PTR TO OLD CRR            */
*           4  CRRCHAIN PTR(31),        /* BASIC CTL LAYER DEFINITION
*                                          FOR OLD CRR PTR           */
*        3  PFCFRRO  PTR(31),           /* PTR TO OLD FRR            */
*           4  CRRFRR   PTR(31),        /* BASIC CTL LAYER         0701
*                                          DEFINITION OF OLD FRR PTR */
*     2  PFCFTA BIT(8),                 /* ID OF LAST FUNCTION TRACED*/
*     2  PFCRSV01 CHAR(3);              /* ALIGNMENT                 */
*DCL PFIDPIE BIT(8) CONSTANT('80'X);    /* DOS/VS TPIOS              */
*DCL PFIDORE BIT(8) CONSTANT('81'X);    /* DOS/VS BMS                */
*DCL PFIDAPE BIT(8) CONSTANT('82'X);    /* DOS/VS PSS                */
*DCL PFCIDPSV BIT(8) CONSTANT('38'X); /* COMPONENT ID              0705
*                                          PSS - VS1 AND 2           */
*DCL PFCIDTPV BIT(8) CONSTANT('3C'X); /* COMPONENT ID              0706
*                                          TPIOS VS1 AND 2           */
*DCL PFCIDSME BIT(8) CONSTANT('3D'X); /* COMPONENT ID              0707
*                                          STORAGE MANAGEMENT DOS    */
*DCL PFCIDOC BIT(8) CONSTANT('31'X);    /* COMPONENT ID OPEN/CLOSE   */
*DCL PFCIDPS BIT(8) CONSTANT('32'X);    /* PORT SOLICITOR            */
*DCL PFCIDCS BIT(8) CONSTANT('34'X);    /* CLUSTER SOLICITOR         */
*DCL PFCIDIT BIT(8) CONSTANT('35'X);    /* INIT/TERM                 */
*DCL PFCIDVY BIT(8) CONSTANT('36'X);    /* VARY                      */
*DCL PFCIDNS  BIT(8) CONSTANT('37'X);   /* NET. STAT.SRV.            */
*DCL PFCIDTPE BIT(8) CONSTANT('38'X);   /* COMPONENT ID            0714
*                                          TPIOS - DOS               */
*DCL PFCIDCL BIT(8) CONSTANT('39'X);    /* COMPONENT ID            0715
*                                          CONTROL LAYER             */
*DCL PFCIDPSE BIT(8) CONSTANT('3A'X);   /* COMPONENT ID            0716
*                                          PSS - DOS                 */
*DCL PFCIDSMV BIT(8) CONSTANT('3F'X);   /* COMPONENT ID            0717
*                                          STORAGE MANAGEMENT        */
*DCL PFCIDTIO BIT(8) CONSTANT('40'X);   /* COMPONENT ID TIIO       0718
*                                          PROCESSING (VS2)          */
*DCL PFCIDRS  BIT(8) CONSTANT('41'X);   /* ID FOR REMOTE SOLICITOR   */
*/* CRR FOR COMMAND FACILITIES                                      */
*DCL  1  ISTCFCRR BDY(WORD) BASED, /* CRR FOR COMMAND FACILITIES    */
*        2 CFCAUDIT,               /* AUDIT TRAIL FOR CMD FACILITIES*/
*          3 CFCNTRD  CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES ENTERED            */
*            4 NCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 ENTERED   */
*            4 NCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 ENTERED   */
*            4 NCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 ENTERED   */
*            4 NCFCRP   BIT(1),    /* IND MODULE ISTCFCRP ENTERED   */
*            4 NCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 ENTERED   */
*            4 NCFRSVD  BIT(3),    /* RESERVED                      */
*          3 CFCCRT   CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES RUNNING            */
*            4 CCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 RUNNING   */
*            4 CCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 RUNNING   */
*            4 CCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 RUNNING   */
*            4 CCFCRP   BIT(1),    /* IND MODULE ISTCFCRP RUNNING   */
*            4 CCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 RUNNING   */
*            4 CCFRSVD1 BIT(3);    /* RESERVED                      */
*/* COMPONENT RECOVERY RECORD FOR TPIOS */                         0721
*/*  DELTA                                             006 02/10/75  */
*DCL                                                               0721
*1  ISTZCRR BDY(WORD) BASED,     /* CONTROL WORD                     */
*   2  ZCRCRR CHAR(4),           /* CONTROL WORD                     */
*      3  ZCRID CHAR(1),         /* CONTROL BLOCK ID                 */
*      3  ZCRLEN CHAR(2),        /* LENGTH OF ZCR                    */
*      3  ZCRFLAG CHAR(1),       /* FLAGS                            */
*   2  ZCRCHAIN PTR(31),         /* POINTER TO PREVIOUS ZCR          */
*   2  ZCRFRRA PTR(31),          /* PTR TO FRR                       */
*   2  ZCRFLGS1 CHAR(1),         /* FLGS USED BY REQUEST COMPLETION  */
*      3  ZCREXSW BIT(1),        /* EXIT SWITCH                      */
*      3  ZCRQUESW BIT(1),       /* QUEUE SWITCH                     */
*      3  ZCRDEQSW BIT(1),       /* DEQUEUE SWITCH                   */
*      3  ZCRWAIT BIT(1),        /* WAIT Q ANALYSIS COMPLETE         */
*      3  ZCRNRMEX BIT(1),       /* NORMAL EXIT TO BE TAKEN          */
*      3  ZCRENDLP BIT(1),       /* END OF LOOP SWITCH               */
*      3  ZCRUNSOL BIT(1),       /* UNSOLICITED DATA                 */
*      3  ZCRFEXIT BIT(1),       /* FORCE EXIT SWITCH                */
*   2  ZCRFLGS2 CHAR(1),         /* FLAGS USED WITHIN TPIOS          */
*      3  ZCRLOCAL BIT(1),       /* LOCAL SUPPORT                    */
*      3  ZCRSHEDI BIT(1),       /* IMMEDIATE SCHEDULE               */
*      3  ZCRFMSED BIT(1),       /* FMCB SEARCH ENDED                */
*      3  ZCROB    BIT(1),       /* OUTBOUND PROC IN PROGRESS        */
*      3  ZCRIF0E1 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E2 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E3 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*   2  ZCRSWFLD CHAR(1),         /* SWITCHES FOR TPIOS OUTBOUND      */
*      3  ZCRENDSH BIT(1),       /* EXIT FROM REMOTE DEV SCHEDULER   */
*         4  ZCRSLCP BIT(1),     /* SCHEDULE LCPB                    */
*      3  ZCREXTYP BIT(1),       /* TPEXIT TYPE                      */
*      3  ZCRENDPR BIT(1),       /* EXIT FROM INNER PROCESS          */
*      3  ZCRNDLCP BIT(1),       /* EXIT FROM LCPB PROCESSING        */
*         4  ZCROB1 BIT(1),      /* REMOTE DEV SCHED 1ST TIME SWITCH */
*      3  ZCRENDX BIT(1),        /* EXIT FROM LCCW/BTU XLATION       */
*      3  ZCRENDXL BIT(1),       /* EXIT FROM LCCW PROC              */
*      3  ZCRENDAN BIT(1),       /* EXIT FROM LCPB ANALYSIS          */
*      3  ZCRRESET BIT(1),                                         0721
*         4  ZCRCNLXL BIT(1),    /* CANCEL FURTHER XLATE             */
*   2  ZCRFLGS3 CHAR(1),         /* FLAGS FOR OUTBOUND PROCESSING    */
*      3  ZCRTIC BIT(1),         /* SELECT NOT TO BE SENT            */
*      3  ZCRTPCON BIT(1),       /* TPIOS CONTACT SENT               */
*      3  ZCRTPDIS BIT(1),       /* TPIOS DISCONNECT TO BE SENT      */
*      3  ZCRDISC  BIT(1),       /* DISCONNECT IN PROCESS            */
*      3  ZCREDRIV BIT(1),       /* DO DERIVE                        */
*      3  ZCRNOFRE BIT(1),       /* NO FREEING OF SIO QUEUE          */
*      3  ZCRWRPTR BIT(1),       /* WRITE TO PRINTER REQUEST         */
*      3  ZCRINLCP BIT(1),       /* ERROR OCCURED DURING OUTBND PROC */
*   2  ZCRGENSW CHAR(1),         /* GENERAL SWITCHES                 */
*      3  ZCRTSW1  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRTSW2  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRRT06  BIT(1),       /* CRITICAL TEXT OPTION             */
*      3  ZCRLCSYN BIT(1),       /* LCCW SYNC SPECIFIED              */
*      3  ZCREXRES BIT(1),       /* EXCEPTION RESPONSE SPECIFIED     */
*      3  ZCRCLRBD BIT(1),       /* FLAG INDICATING BIND WAS CLEARED */
*      3  ZCRBRIS  BIT(1),       /* BRACKET REJECTED DUE TO IN BRAC. */
*      3  ZCRF1RES BIT(1),       /* FID1 RESPONSE TO BE GENERATED    */
*   2  ZCRPFLGS CHAR(1),         /* UTILITIES PROC OPTION FLAGS      */
*      3  ZCRQAHED BIT(1),      /* QXFR RTN TO USE INSERT OPT'N ON TPQ*
*      3  *        BIT(7),      /* RESERVED                          */
*   2  ZCRIBPR CHAR(1),          /* INBOUND PROCESSING FLAGS         */
*         3  ZCRNOBUF BIT(1),    /* FSB WITH NO BUFFER               */
*         3  ZCRERR   BIT(1),    /* ERROR INDICATOR                  */
*         3  ZCRRELK  BIT(1),    /* RESET ERROR LOCK FUNCTION REQ.   */
*         3  ZCRLCPFR BIT(1),    /* FLAG IND. DEALLOCATE ATOP LCPB   */
*         3  ZCRLCPFD BIT(1),    /* FLAG IND. LCPB FOUND ON WAITQ    */
*         3  ZCR3270  BIT(1),    /* 3270 DEVICE                      */
*         3  ZCR3270R BIT(1),    /* 3270 DEVICE IN RECORD MODE       */
*         3  *        BIT(1),    /* RESERVED                         */
*   2  ZCRSCPSW CHAR(1),         /* SESSION CONTROL FLAGS            */
*         3  ZCRTPEX BIT(1),     /* TP EXIT                          */
*         3  ZCRTPINV BIT(1),    /* INVOKE TPIOS                     */
*         3  ZCRRJLCP BIT(1),    /* LCPB REJECTED                    */
*         3  ZCRLREQ BIT(1),     /* REQUEST                          */
*         3  ZCRPRCMP BIT(1),    /* PROCESSING COMPLETE              */
*         3  ZCRFSBWE BIT(1),    /* FSB IS WORK ELEMENT              */
*         3  ZCRSKIPT BIT(1),    /* SKIP TRACE FLAG                  */
*         3  *       BIT(1),     /* RESERVED                         */
*   2  ZCRCRLCP PTR(31),         /* CURRENT LCPB PTR                 */
*   2  ZCRPARMS BDY(WORD),       /* PARAMETERS PASSED TO UTILITIES */
*      3  ZCRFBPTR PTR(31),      /* PTR TO FROM BUFFER               */
*         4  ZCRCBPTR PTR(31),   /* PTR TO CURRENT BUFFER            */
*      3  ZCRTBPTR PTR(31),      /* PTR TO TO-OR-TRANSLATE BUFFER    */
*      3  ZCRMLNG FIXED(15),     /* LENGTH TO MOVE                   */
*      3  ZCRDFRDA FIXED(15),    /* OFFSET FROM DATA ADDR IN FROM BUF*/
*         4  ZCRDTODA FIXED(15), /* OFFSET FROM DATA ADDR XLATE BUF  */
*      3  ZCRPCOD1 CHAR(1),      /* CODE BYTE FOR ALLOC/DISALLOC     */
*         4  ZCRPPG BIT(1),      /* GET PAGEABLE BUFF                */
*         4  ZCRPLNG BIT(1),     /* LENGTH OF BUFFER SPECIFIED       */
*         4  ZCRPFSB BIT(1),     /* GET FSB                          */
*         4  ZCRPLSBF BIT(1),    /* GET LSCB AND BUFFER              */
*            5 ZCRPLSBQ BIT(1),  /* PURGE LSCB QUEUE                 */
*         4  ZCRPLSCB BIT(1),    /* GET OR RELEASE LSCB              */
*         4  ZCRPBUF BIT(1),     /* GET OR RELEASE BUFFER            */
*         4  ZCRPCFTX BIT(1),    /* CONFIDENTIAL TEXT                */
*         4  ZCRPRES BIT(1),     /* RESERVED                         */
*      3  ZCRPCOD2 CHAR(1),      /* CODE BYTE FOR MOVE               */
*         4  ZCRPPG2 BIT(1),     /* GET PAGEABLE BUFFER              */
*         4  ZCRPFHDR BIT(1),    /* FROM BUFFER FDB TO BE USED       */
*         4  ZCRPMFGF BIT(1),    /* MOVE STARTS WIHT 1ST BUFF IN BLOCK*
*         4  ZCRPRES2 BIT(5),    /* RESERVED                         */
*      3  ZCRPCHAR CHAR(1),      /* TRANSLATE & TEST SEARCH CHARACTER*/
*      3  ZCRPSW   CHAR(1),      /* SWITCH FIELD                     */
*   2  ZCRCCWA PTR(31),          /* PTR TO CURRENT CCW (CCW 1 OR 2)  */
*   2  ZCRBFPTR PTR(31),         /* SAVE 1ST BUFF PTR IN TO-BUFF CHN
*                                   OR LAST BUFFER IN CHANNEL PGM    */
*   2  ZCRZLB PTR(31),           /* PTR TO CURR BUFF IN CHANNEL PGM  */
*   2  ZCRPVZB PTR(31),          /* PTR TO PREVIOUS BUFF IN CHAN PGM */
*   2  ZCRSVRTN BDY(WORD),       /* REG 14 SAVE AREAS                */
*      3  ZCRSVF1 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF2 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF3 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF4 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF5 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF6 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF7 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF8 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF9 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF10 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF11 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF12 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF13 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF14 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF15 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF16 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF17 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF18 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF19 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF20 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF21 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF22 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF23 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF24 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF25 PTR(31),      /* SAVE REQUIRED REGISTER           */
*   2  ZCRWKARA BDY(WORD),       /* TEMPORARY REG SAVE AREA          */
*      3  ZCRSVWK1 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK2 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK3 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK4 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK5 PTR(31),      /* SAVE REQUIRED REG                */
*   2  ZCRFSBSV PTR(31),         /* FSB CHAIN PTR SAVEAREA           */
*   2  ZCRFBPRC BIT(1),          /* FSB PROCESS SW                   */
*   2  ZCRMOREL BIT(1),          /* MORE ELEMENTS SW                 */
*   2  ZCRSCANQ BIT(1),          /* SCAN QUEUE SW                    */
*   2  ZCRNXTEL BIT(1),          /* NEXT ELEMENT SW                  */
*   2  ZCRXSCHD BIT(1),          /* EXIT SCHEDULE SW                 */
*   2  ZCRLSTFB BIT(1),          /* INBOUND PROC LAST FSB FOR ELEM SW*/
*   2  ZCRTOPQ  BIT(1),          /* QUEUE ELEMENT TO TOP SW          */
*   2  ZCRAWQSW BIT(1),          /* CHECK AWAITQ FOR MORE WORK =1    */
*                                /* CHECK WAITQ =0                   */
*   2  ZCRRCDSV CHAR(1),         /* RETURN CODE SAVEAREA             */
*   2  ZCRPRMTC CHAR(1),         /* PREEMPT COMPLETION PARAMETER BYTE*/
*   2  ZCROPCDE CHAR(1),         /* OP CODE TO BE TRANSFORMED         *
*   2  ZCRR2SV PTR(31),          /* ISTZBFDI REG 2 SAVE EREA         */
*   2  ZCRR13SV PTR(31),         /* ISTSBFDI REG 13 SAVE EREA        */
*   2  ZCRCIDSV BDY(WORD),       /* ISTZBFDI CID SAVE AREA           */
*      3  ZCRSAFSV CHAR(2),      /* ISTZBFDI SAF SAVE AREA           */
*      3  ZCRDAFSV CHAR(2),      /* ISTZBFDI DAF SAVE AREA           */
*   2  ZCRSAVEZ (6) BDY(WORD) CHAR(LENGTH(ISTZSAVE)),              0721
*                                /* SAVE/TRACE AREAS FOR TPIOS MODS  */
*   2  ZCRREMIC PTR(31),        /* POINTER TO REMOTE RN ICNCB        */
*   2  ZCRAUDIT CHAR(36),        /* TPIOS AUDIT TRAIL AREA           */
*      3  ZCRTID CHAR(1),        /* THREAD I.D.                      */
*      3  ZCRTNAME CHAR(4),      /* LAST 4 CHARS OF THREAD NAME      */
*      3  ZCRENTER BIT(248),     /* BIT ARRAY FOR MODULES ENTERED    */
*         4  ZCREAC1A BIT(1),    /* ISTZAC1A ENTERED                 */
*         4  ZCREAC0A BIT(1),    /* ISTZAC0A ENTERED                 */
*         4  ZCREAC0B BIT(1),    /* ISTZAC0B ENTERED                 */
*         4  ZCREAC1B BIT(1),    /* ISTZAC1B ENTERED                 */
*         4  ZCREBCAA BIT(1),    /* ISTZBCAA ENTERED                 */
*         4  ZCREBCAB BIT(1),    /* ISTZBCAB ENTERED                 */
*         4  ZCREBCAE BIT(1),    /* ISTZBCAE ENTERED                 */
*         4  ZCREBCAG BIT(1),    /* ISTZBCAG ENTERED                 */
*         4  ZCREBCAI BIT(1),    /* ISTZBCAI ENTERED                 */
*         4  ZCREBCAM BIT(1),    /* ISTZBCAM ENTERED                 */
*         4  ZCREBCBA BIT(1),    /* ISTZBCBA ENTERED                 */
*         4  ZCREBCBB BIT(1),    /* ISTZBCBB ENTERED                 */
*         4  ZCREBCBI BIT(1),    /* ISTZBCBI ENTERED                 */
*         4  ZCREBCCB BIT(1),    /* ISTZBCCB ENTERED                 */
*         4  ZCREBCDI BIT(1),    /* ISTZBCDI ENTERED                 */
*         4  ZCREBCEB BIT(1),    /* ISTZBCEB ENTERED                 */
*         4  ZCREBCFA BIT(1),    /* ISTZBCFA ENTERED                 */
*         4  ZCREBCFB BIT(1),    /* ISTZBCFB ENTERED                 */
*         4  ZCREBCGA BIT(1),    /* ISTZBCGA ENTERED                 */
*         4  ZCREBCGB BIT(1),    /* ISTZBCGB ENTERED                 */
*         4  ZCREBCHA BIT(1),    /* ISTZBCHA ENTERED                 */
*         4  ZCREBCHB BIT(1),    /* ISTZBCHB ENTERED                 */
*         4  ZCREBCIA BIT(1),    /* ISTZBCIA ENTERED                 */
*         4  ZCREBCIB BIT(1),    /* ISTZBCIB ENTERED                 */
*         4  ZCREBCID BIT(1),    /* ISTZBCID ENTERED                 */
*         4  ZCREBCJA BIT(1),    /* ISTZBCJA ENTERED                 */
*         4  ZCREBCJB BIT(1),    /* ISTZBCJB ENTERED                 */
*         4  ZCREBCKA BIT(1),    /* ISTZBCKA ENTERED                 */
*         4  ZCREBCKB BIT(1),    /* ISTZBCKB ENTERED                 */
*         4  ZCREBCLA BIT(1),    /* ISTZBCLA ENTERED                 */
*         4  ZCREBCLB BIT(1),    /* ISTZBCLB ENTERED                 */
*         4  ZCREBCMB BIT(1),    /* ISTZBCMB ENTERED                 */
*         4  ZCREBCND BIT(1),    /* ISTZBCND ENTERED                 */
*         4  ZCREBCNE BIT(1),    /* ISTZBCNE ENTERED                 */
*         4  ZCREBCOB BIT(1),    /* ISTZBCOB ENTERED                 */
*         4  ZCREBCPB BIT(1),    /* ISTZBCPB ENTERED                 */
*         4  ZCREBCQB BIT(1),    /* ISTZBCQB ENTERED                 */
*         4  ZCREBCRA BIT(1),    /* ISTZBCRA ENTERED                 */
*         4  ZCREBCRB BIT(1),    /* ISTZBCRB ENTERED                 */
*         4  ZCREBCSC BIT(1),    /* ISTZBCSC ENTERED                 */
*         4  ZCREBCXA BIT(1),    /* ISTZBCXA ENTERED                 */
*         4  ZCREBCX0 BIT(1),    /* ISTZBCX0 ENTERED                 */
*         4  ZCREBCY0 BIT(1),    /* ISTZBCY0 ENTERED                 */
*         4  ZCREBCZ0 BIT(1),    /* ISTZBCZ0 ENTERED                 */
*         4  ZCREBC0A BIT(1),    /* ISTZBC0A ENTERED                 */
*         4  ZCREBC0B BIT(1),    /* ISTZBC0B ENTERED                 */
*         4  ZCRECC0A BIT(1),    /* ISTZCC0A ENTERED                 */
*         4  ZCRECC0B BIT(1),    /* ISTZCC0B ENTERED                 */
*         4  ZCRECC1A BIT(1),    /* ISTZCC1A ENTERED                 */
*         4  ZCRECC1B BIT(1),    /* ISTZCC1B ENTERED                 */
*         4  ZCRECC2B BIT(1),    /* ISTZCC2B ENTERED                 */
*         4  ZCREDCA0 BIT(1),    /* ISTZDCA0 ENTERED                 */
*         4  ZCREDCB0 BIT(1),    /* ISTZDCB0 ENTERED                 */
*         4  ZCREDCC0 BIT(1),    /* ISTZDCC0 ENTERED                 */
*         4  ZCREDCD0 BIT(1),    /* ISTZDCD0 ENTERED                 */
*         4  ZCREDCE0 BIT(1),    /* ISTZDCE0 ENTERED                 */
*         4  ZCREDCF0 BIT(1),    /* ISTZDCF0 ENTERED                 */
*         4  ZCREDCH0 BIT(1),    /* ISTZDCH0 ENTERED                 */
*         4  ZCREDCI0 BIT(1),    /* ISTZDCI0 ENTERED                 */
*         4  ZCREDCJ0 BIT(1),    /* ISTZDCJ0 ENTERED                 */
*         4  ZCREDCKA BIT(1),    /* ISTZDCKA ENTERED                 */
*         4  ZCREDCKB BIT(1),    /* ISTZDCKB ENTERED                 */
*         4  ZCREDCL0 BIT(1),    /* ISTZDCL0 ENTERED                 */
*         4  ZCREDCMB BIT(1),    /* ISTZDCMB ENTERED                 */
*         4  ZCREECBA BIT(1),    /* ISTZECBA ENTERED                 */
*         4  ZCREECBB BIT(1),    /* ISTZECBB ENTERED                 */
*         4  ZCREECCA BIT(1),    /* ISTZECCA ENTERED                 */
*         4  ZCREECCB BIT(1),    /* ISTZECCB ENTERED                 */
*         4  ZCREECDA BIT(1),    /* ISTZECDA ENTERED                 */
*         4  ZCREECEA BIT(1),    /* ISTZECEA ENTERED                 */
*         4  ZCREECTA BIT(1),    /* ISTZECTA ENTERED                 */
*         4  ZCREFCEA BIT(1),    /* ISTZFCEA ENTERED                 */
*         4  ZCREFCEB BIT(1),    /* ISTZFCEB ENTERED                 */
*         4  ZCREGCAB BIT(1),    /* ISTZGCAB ENTERED                 */
*         4  ZCREGCBB BIT(1),    /* ISTZGCBB ENTERED                 */
*         4  *        BIT(1),    /* NOT USED                         */
*         4  ZCREGCDB BIT(1),    /* ISTZGCDB ENTERED                 */
*         4  ZCREGCEB BIT(1),    /* ISTZGCEB ENTERED                 */
*         4  ZCREGCLA BIT(1),    /* ISTZGCLA ENTERED                 */
*         4  ZCREGC0A BIT(1),    /* ISTZGC0A ENTERED                 */
*         4  ZCREGC0B BIT(1),    /* ISTZGC0B ENTERED                 */
*         4  ZCREHCAN BIT(1),    /* ISTZHCAN ENTERED                 */
*         4  ZCREICAA BIT(1),    /* ISTZICAA ENTERED                 */
*         4  ZCREICAB BIT(1),    /* ISTZICAB ENTERED                 */
*         4  ZCREICBB BIT(1),    /* ISTZICBB ENTERED                 */
*         4  ZCREICBI BIT(1),    /* ISTZICBI ENTERED                 */
*         4  ZCREICCB BIT(1),    /* ISTZICCB ENTERED                 */
*         4  ZCREICCI BIT(1),    /* ISTZICCI ENTERED                 */
*         4  ZCREICDB BIT(1),    /* ISTZICDB ENTERED                 */
*         4  ZCREICEB BIT(1),    /* ISTZICEB ENTERED                 */
*         4  ZCREICGB BIT(1),    /* ISTZICGB ENTERED                 */
*         4  ZCREICHB BIT(1),    /* ISTZICHB ENTERED                 */
*         4  ZCREICIB BIT(1),    /* ISTZICIB ENTERED                 */
*         4  ZCREICID BIT(1),    /* ISTZICID ENTERED                 */
*         4  ZCREICJB BIT(1),    /* ISTZICJB ENTERED                 */
*         4  ZCREICKB BIT(1),    /* ISTZICKB ENTERED                 */
*         4  ZCREICKE BIT(1),    /* ISTZICKE ENTERED                 */
*         4  ZCREICKG BIT(1),    /* ISTZICKG ENTERED                 */
*         4  ZCREICLB BIT(1),    /* ISTZICLB ENTERED                 */
*         4  ZCREICMB BIT(1),    /* ISTZICMB ENTERED                 */
*         4  ZCREICNA BIT(1),    /* ISTZICNA ENTERED                 */
*         4  ZCREICNB BIT(1),    /* ISTZICNB ENTERED                 */
*         4  ZCREICOA BIT(1),    /* ISTZICOA ENTERED                 */
*         4  ZCREICOB BIT(1),    /* ISTZICOB ENTERED                 */
*         4  ZCREICQA BIT(1),    /* ISTZICQA ENTERED                 */
*         4  ZCREICQB BIT(1),    /* ISTZICQB ENTERED                 */
*         4  ZCREICRB BIT(1),    /* ISTZICRB ENTERED                 */
*         4  ZCREICSB BIT(1),    /* ISTZICSB ENTERED                 */
*         4  ZCREICSC BIT(1),    /* ISTZICSC ENTERED                 */
*         4  ZCREICTB BIT(1),    /* ISTZICTB ENTERED                 */
*         4  ZCREICUB BIT(1),    /* ISTZICUB ENTERED                 */
*         4  ZCREICVB BIT(1),    /* ISTZICVB ENTERED                 */
*         4  ZCREICWB BIT(1),    /* ISTZICWB ENTERED                 */
*         4  ZCREICX0 BIT(1),    /* ISTZICX0 ENTERED                 */
*         4  ZCREIC0B BIT(1),    /* ISTZIC0B ENTERED                 */
*         4  ZCREIC1B BIT(1),    /* ISTZIC1B ENTERED                 */
*         4  ZCREJCAB BIT(1),    /* ISTZJCAB ENTERED                 */
*         4  ZCREJCBB BIT(1),    /* ISTZJCBB ENTERED                 */
*         4  ZCREJCCB BIT(1),    /* ISTZJCCB ENTERED                 */
*         4  ZCREJCDB BIT(1),    /* ISTZJCDB ENTERED                 */
*         4  ZCREJC0B BIT(1),    /* ISTZJC0B ENTERED                 */
*         4  ZCREKCBB BIT(1),    /* ISTZKCBB ENTERED                 */
*         4  ZCREKCBN BIT(1),    /* ISTZKCBN ENTERED                 */
*         4  ZCREKCCN BIT(1),    /* ISTZKCCN ENTERED                 */
*         4  ZCREDCWR BIT(1),    /* ISTZDCWR ENTERED                 */
*         4  ZCREDCWB BIT(1),    /* ISTZDCWB ENTERED                 */
*         4  ZCREDCXR BIT(1),    /* ISTZDCXR ENTERED                 */
*         4  ZCREBCBR BIT(1),    /* ISTZBCBR ENTERED                 */
*         4  ZCREBCDR BIT(1),    /* ISTZBCDR ENTERED                 */
*         4  ZCREBCAR BIT(1),    /* ISTZBCAR ENTERED                 */
*         4  ZCRECCBI BIT(1),    /* ISTZCCBI ENTERED                 */
*         4  ZCRECCAI BIT(1),    /* ISTZCCAI ENTERED                 */
*         4  ZCRECCCI BIT(1),    /* ISTZCCCI ENTERED                 */
*         4  ZCREAC1R BIT(1),    /* ISTZAC1R ENTERED                 */
*         4  ZCREBCSB BIT(1),    /* ISTZBCSB ENTERED                 */
*         4  ZCREDCPR BIT(1),    /* ISTZDCPR ENTERED                 */
*         4  ZCREDCQR BIT(1),    /* ISTZDCQR ENTERED                 */
*         4  ZCREBCAL BIT(1),    /* ISTZBCAL ENTERED                 */
*         4  ZCREBC0L BIT(1),    /* ISTZBC0L ENTERED                 */
*         4  ZCREBCNB BIT(1),    /* ISTZBCNB ENTERED                 */
*         4  ZCREICOE BIT(1),    /* ISTZICOE ENTERED                 */
*         4  ZCREDCNB BIT(1),    /* ISTZDCNB ENTERED                 */
*         4  ZCREKCCB BIT(1),    /* ISTZKCCB ENTERED                 */
*         4  ZCRECFY0 BIT(1),    /* ISTZCFY0 ENTERED                 */
*         4  ZCREDCK0 BIT(1),    /* ISTZDFK0 ENTERED                 */
*         4  ZCREICSG BIT(1),    /* ISTZICSG ENTERED                 */
*         4  ZCREBCIF BIT(1),    /* ISTZBCIF ENTERED                 */
*         4  ZCREDCMF BIT(1),    /* ISTZDCMF ENTERED                 */
*         4  ZCRELCAB BIT(1),    /* ISTZLCAB ENTERED                 */
*         4  ZCREAC2B BIT(1),    /* ISTZAC2B ENTERED                 */
*         4  ZCREIC2B BIT(1),    /* ISTZIC2B ENTERED                 */
*         4  ZCRRSV97 BIT(97),   /* RESERVED                         */
*   2  ZCRCMNRC CHAR(1),                /* PURGE MWOR RETURN CODE    */
*   2  ZCRWORDA CHAR(3),                /* RESERVED FOR LATER USE    */
*   2  ZCRLCPB  CHAR(LENGTH(ISTLCPB)),  /* 3270 S/R LCPB             */
*      3 ZCRRHRU,                       /* SAVEAREA FOR RH AND RU    */
*        4 ZCRRH    CHAR(3),            /* RH                        */
*        4 ZCRRU    CHAR(*);            /* RU                        */
*DCL ZCTYPE BIT(8) CONSTANT('00'X);   /* ZCR TYPE                   */
*DCL ZCLNG FIXED(15) CONSTANT(172);   /* ZCRR LENGTH                */
*DCL ZCRSAVNO BIT(8) CONSTANT('06'X); /* NUMBER OF SAVEAREAS IN ZCRR */
*DCL ZCRLSVNO BIT(8) CONSTANT('04'X); /* NUMBER OF SAVE AREAS IN   0725
*                                         LOCAL SUPPORT              */
*/* *** EQUATES FOR ZCRRCDSV *** */                                0726
*                                                                  0726
*DCL ZCRMRFSB BIT(8) CONSTANT('0C'X);  /* REQUEST COMPLETION MOVE FSB
*                                         TO PROCESS                 */
*DCL ZCRSRCHQ BIT(8) CONSTANT('10'X);  /* REQUEST COMPLETION SEARCH
*                                         REQUEST QUEUE              */
*DCL ZCREXIT  BIT(8) CONSTANT('14'X);  /* REQUEST COMPLETION EXIT    */
*DCL ZCRSFSB  BIT(8) CONSTANT('18'X);  /* REQUEST COMPLETION SINGLE
*                                         FSB                        */
*DCL ZCRDLFSB BIT(8) CONSTANT('1C'X);  /* REQUEST COMPLETION DUAL FSB *
*DCL ZCRNOSCH BIT (8) CONSTANT('20'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NONE                 */
*DCL ZCRNRSCH BIT (8) CONSTANT('24'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NORM                 */
*DCL ZCRLGERR FIXED(8) CONSTANT(8);    /* LOGICAL ERROR              */
*DCL ZCPLSCB BIT(8) CONSTANT('08'X);   /* GET A RELEASE LSCB         */
*DCL ZCPBUF  BIT(8) CONSTANT('04'X);   /* GET A RELEASE BUFFER       */
*DCL ZCRTAC0A FIXED(8) CONSTANT(01);   /* LOCAL DEVICE SCHEDULER(OUT)*/
*DCL ZCRTAC0B FIXED(8) CONSTANT(02);   /* REMOTE DEVICE SCHEDLER(OUT)*/
*DCL ZCRTCC1A FIXED(8) CONSTANT(03);   /* LOCAL DIALOG SCHEDLER(IN)  */
*DCL ZCRTCC1B FIXED(8) CONSTANT(04);   /* REMOTE DIALOG SCHEDLER(IN) */
*DCL ZCRTDCE0 FIXED(8) CONSTANT(05);   /* NCP SLOWDOWN RECOVERY      */
*DCL ZCRTDCKA FIXED(8) CONSTANT(06);   /* LOCAL GENERAL FUNCTIONS    */
*DCL ZCRTDCKB FIXED(8) CONSTANT(07);   /* REMOTE GENERAL FUNCTIONS   */
*DCL ZCRTFCEB FIXED(8) CONSTANT(08);   /* REMOTE READ BUFFER ALLOC.  */
*DCL ZCRTGCLA FIXED(8) CONSTANT(09);   /* LCAL CTL & TEST FEEDBACK(IN)*
*DCL ZCRTGC0A FIXED(8) CONSTANT(10);   /* LOCAL REQ. COMPLETION(IN)  */
*DCL ZCRTGC0B FIXED(8) CONSTANT(11);   /* REMOTE REQ. COMPLETION(IN) */
*DCL ZCRTICWB FIXED(8) CONSTANT(12);   /* RESET CLEANUP (PHASE 5)    */
*DCL ZCRTIC0B FIXED(8) CONSTANT(13);   /* REMOTE REQ COMPLTION CTL(IN)*
*DCL ZCRTAC1B FIXED(8) CONSTANT(14);   /* ISTZAC1B THREAD ID         */
*DCL ZCRTIC1B FIXED(8) CONSTANT(15);   /* ISTZIC1B THREAD ID         */
*DCL ZCRTCCBI FIXED(8) CONSTANT(16);   /* ISTZCCBI THREAD ID         */
*DCL ZCRTAC1R FIXED(8) CONSTANT(17);   /* ISTZAC1R THREAD ID         */
*DCL ZCRTAC1A FIXED(8) CONSTANT(18);   /* ISTZAC1A THREAD ID         */
*DCL ZCRTLCAB FIXED(8) CONSTANT(19);   /* ISTZLCAB THREAD ID         */
*/* COMPONENT RECOVERY                                               */
*/*                                                                  */
*DCL 1 ISTASCRR BDY(WORD) BASED,        /* CRR FOR SMS               */
*     2  ASCPFCRR CHAR(LENGTH(ISTPFCRR)),                          0755
*     2  ASCFLAGS CHAR(7),              /* FLAGS                     */
*        3  ASCFLG1 CHAR(2),            /* MODULE TRACE FLAGS        */
*           4  ASCFBA BIT(1),           /* ALLOCATION IN PATH        */
*           4  ASCFBD BIT(1),           /* DE-ALLOCATION IN PATH     */
*           4  ASCFSR BIT(1),           /* FSR IN PATH               */
*           4  ASCPASTR BIT(13),        /* RESERVED PATH FLAGS       */
*        3  ASCFLG2 CHAR(2),            /* MODULE IN CONTROL FLAGS   */
*           4  ASCFBAIC BIT(1),         /* ALLOCATION IN CONTROL     */
*           4  ASCFBDIC BIT(1),         /* DE-ALLOCATION IN CONTROL  */
*           4  ASCFSRIC BIT(1),         /* FSR IN CONTROL            */
*           4  ASCICR BIT(13),          /* RESERVED IN CONTROL FLAGS */
*        3  ASCFLG3 CHAR(3),            /* AUDIT FLAGS               */
*           4  ASCFSRGT BIT(1),         /* FSR DOING GET PROCESSING  */
*           4  ASCFBDAL BIT(1),         /* FBD DOING ALLOCATION      */
*           4  ASCKEYF BIT(1),          /* KEY HAS BEEN ALTERED      */
*           4  ASCLLKF BIT(1),          /* LOCAL LOCK HELD           */
*           4  ASCFBDUD BIT(1),         /* FBD USING USER DATA       */
*           4  ASCAUDIT BIT(19),        /* RESERVED AUDIT BITS       */
*     2  ASCKEY CHAR(1),                /* ORIGINAL KEY              */
*     2  ASCETRYA PTR(31),              /* RETRY ADRS FOR CONTINUE 0755
*                                          OPTION                    */
*     2  ASCUSRGS CHAR(16),             /* SAVE AREA FOR USER REGS 0755
*                                          14 - 1                    */
*        3  ASCUSR14 CHAR(4),           /* REGISTER 14               */
*        3  ASCUSR15 CHAR(4),           /* REGISTER 15               */
*        3  ASCUSR00 CHAR(4),           /* REGISTER 0                */
*        3  ASCUSR01 CHAR(4),           /* REGISTER 1                */
*     2  ASCPSREG CHAR(16);             /* SAVE AREA FOR PSS       0755
*                                          REGS 1 - 4                */
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL 1 ISTAPCRR BDY(WORD) BASED,                                   0756
*     2 APCHDRSV CHAR(LENGTH(ISTPFCRR)),  /* HEADER                  */
*     2  APCATFLG CHAR(2),              /* AUDIT TRACE FLAGS         */
*        3  APC51E BIT(1),              /* ISTAPC51 WAS ENTERED      */
*        3  APC52E BIT(1),              /* ISTAPC52  '     '         */
*        3  APC53E BIT(1),              /* ISTAPC53                  */
*        3  APC54E BIT(1),                                         0756
*        3  APC56E BIT(1),                                         0756
*        3  APC57E BIT(1),                                         0756
*        3  APC58E BIT(1),                                         0756
*        3  APC31E BIT(1),                                         0756
*        3 * BIT(8),                    /* RESERVED                  */
*     2  APCRFLG CHAR(2),               /* AUDIT TRACE FLAGS         */
*        3  APC51R BIT(1),              /* ISTAPCR1 IS RUNNING       */
*        3  APC52R BIT(1),              /* ISTAPC52 IS RUNNING       */
*        3  APC53R BIT(1),                                         0756
*        3  APC54R BIT(1),                                         0756
*        3  APC56R BIT(1),                                         0756
*        3  APC57R BIT(1),                                         0756
*        3  APC58R BIT(1),                                         0756
*        3  APC31R BIT(1),                                         0756
*        3  *      BIT(8),              /* RESERVED                  */
*     2  APCPSTA PTR(31),               /* PST@                      */
*     2  APCTCBA PTR(31),               /* TCB@                      */
*     2  APCRTRN PTR(31),               /*@ TO BR14 TO RTN TO SYSTEM */
*     2  APCPABSV PTR(31),              /*SAVED PAB@ TO REDISPATCH   */
*     2  APCQWFO PTR(31),               /* Q@ IN PST WORK AREA ON    */
*     2  APCFRRPM PTR(31),              /* WORKAREA@ RTN'D FROM SETFR*/
*     2  APCSAVE CHAR(72),                                         0756
*        3  APCESTAL CHAR(72),          /* ESTAE PARAMETER LIST AREA */
*     2  APCCOMF CHAR(4) BDY(HWORD),    /* FLAGS USED BY ALL PSS RTN */
*        3  APCCOMF1 CHAR(2),                                      0756
*           4  APCSSTSK BIT(1),         /* IRB TYPE WORK             */
*           4  APCUETSK BIT(1),         /* USER EXIT RUNNING UNDER IRB*
*           4  APCSMCR BIT(1),          /* SMA CRA BEING USED        */
*           4  APCIRB1 BIT(1),          /* IRB1 BEING USED           */
*           4  APCIRB2 BIT(1),          /* IRB2 BEING USED           */
*           4  APCRELR BIT(1),          /*CALL ISTAPC58 TO RLEASE CRA*/
*           4  APCEXIT BIT(1),          /* TELLS ISTAPC58 TO EXIT SYS*/
*           4  APCZLBER BIT(1),         /* ERR WHILE RUNNING ZLFAB PAB*
*           4  * BIT(8),                /* RESERVED                  */
*        3  APCRETCD FIXED(15),         /* RTN CODE FOR R15 FOR SYS  */
*     2  APCSAV1 PTR(31),               /* 1ST SAVE WORD             */
*     2  APCSAV2 PTR(31),               /* 2ND SAVE WORD             */
*     2  APCSWTWD CHAR(4),              /* SWITCH AREA FOR PSS RTN   */
*     2  APC31FLG CHAR(1),              /* ISTAPC31 FLAGS            */
*        3  APCTPXIT BIT(1),            /* TPEXIT IN PROGRESS        */
*        3  APCRESCH BIT(1),            /*PAB TPEXIT OCCURED  RESCHED*/
*        3  APCSORT BIT(1),       /* PAB SORTED TO PROPER PST/MPST   */
*        3  *       BIT(5),       /* RESERVED                        */
*     2  APC52FLG CHAR(1),        /* ISTAPC52 FLAGS                  */
*        3  APCCKRQ BIT(1),       /* CHECK RDY Q FOR WORK            */
*        3  APCSMSR BIT(1),       /* RETURNING SMS RPH               */
*        3  APCQENQ BIT(1),       /* ENQUEUEING PAB'S ON PST Q'S     */
*        3  APCRDQ BIT(1),        /* DEQUEING PAB'S FROM PST RDY Q   */
*        3  APCNWF BIT(1),        /* NO WORK FOUND                   */
*        3  APCWKF   BIT(1),      /* WORK FOUND                      */
*        3    *      BIT(2),      /* RESERVED                        */
*     2  APC53FLG CHAR(1),        /* ISTAPC53 FLAGS                  */
*        3  APCPR153 BIT(1),      /* USED PREALLOCATED CRA           */
*     2  APC54FLG CHAR(1),        /* ISTAPC54 FLAGS                  */
*        3  APCRLST BIT(1),       /* SMS BEING CALLED TO RELEASE UECB*/
*        3  * BIT(7),             /* RESERVED                        */
*     2  APC57FLG CHAR(1),        /* ISTAPC57 FLAGS                  */
*        3  APCRECRA BIT(1),      /* RELEASE CRA BEING DONE          */
*        3  APCNREL BIT(1),       /* DID NOT RELEASE CRA             */
*        3  *   BIT(6),           /* RESERVED                        */
*     2  * CHAR(15);              /* RESERVED                        */
*/*               COMPONENT RECOVERY AREA                            */
*/*  REVISIONS                                         005 04/09/75  */
*DCL 1  ISTCRA BASED BDY(DWORD),        /* COMPONENT RECOVERY AREA   */
*     2  CRABASIC BDY(WORD),            /* CRA WITHOUT PROCESS CRR   */
*      3 CRAHDR CHAR(8) BDY(WORD),      /* CRA HEADER                */
*        4  CRACRR PTR(31),             /* PTR TO ACTIVE CRR         */
*        4  CRAFRR PTR(31),             /* PTR TO ACTIVE FRR         */
*      3 CRALKACT BIT(32),              /* LOCK LEVEL AND          0757
*                                          OWNERSHIP FLAGS           */
*        4  CRALEV32 BIT(1),            /* 1 = LEVEL 32 LOCK HELD    */
*        4  CRALEV31 BIT(1),            /* 1 = LEVEL 31 LOCK HELD    */
*        4  CRALEV30 BIT(1),            /* 1 = LEVEL 30 LOCK HELD    */
*        4  CRALEV29 BIT(1),            /* 1 = LEVEL 29 LOCK HELD    */
*        4  CRALEV28 BIT(1),            /* 1 = LEVEL 28 LOCK HELD    */
*        4  CRALEV27 BIT(1),            /* 1 = LEVEL 27 LOCK HELD    */
*        4  CRALEV26 BIT(1),            /* 1 = LEVEL 26 LOCK HELD    */
*        4  CRALEV25 BIT(1),            /* 1 = LEVEL 25 LOCK HELD    */
*        4  CRALEV24 BIT(1),            /* 1 = LEVEL 24 LOCK HELD    */
*        4  CRALEV23 BIT(1),            /* 1 = LEVEL 23 LOCK HELD    */
*        4  CRALEV22 BIT(1),            /* 1 = LEVEL 22 LOCK HELD    */
*        4  CRALEV21 BIT(1),            /* 1 = LEVEL 21 LOCK HELD    */
*        4  CRALEV20 BIT(1),            /* 1 = LEVEL 20 LOCK HELD    */
*        4  CRALEV19 BIT(1),            /* 1 = LEVEL 19 LOCK HELD    */
*        4  CRALEV18 BIT(1),            /* 1 = LEVEL 18 LOCK HELD    */
*        4  CRALEV17 BIT(1),            /* 1 = LEVEL 17 LOCK HELD    */
*        4  CRALEV16 BIT(1),            /* 1 = LEVEL 16 LOCK HELD    */
*        4  CRALEV15 BIT(1),            /* 1 = LEVEL 15 LOCK HELD    */
*        4  CRALEV14 BIT(1),            /* 1 = LEVEL 14 LOCK HELD    */
*        4  CRALEV13 BIT(1),            /* 1 = LEVEL 13 LOCK HELD    */
*        4  CRALEV12 BIT(1),            /* 1 = LEVEL 12 LOCK HELD    */
*        4  CRALEV11 BIT(1),            /* 1 = LEVEL 11 LOCK HELD    */
*        4  CRALEV10 BIT(1),            /* 1 = LEVEL 10 LOCK HELD    */
*        4  CRALEV09 BIT(1),            /* 1 = LEVEL 9 LOCK HELD     */
*        4  CRALEV08 BIT(1),            /* 1 = LEVEL 8 LOCK HELD     */
*        4  CRALEV07 BIT(1),            /* 1 = LEVEL 7 LOCK HELD     */
*        4  CRALEV06 BIT(1),            /* 1 = LEVEL 6 LOCK HELD     */
*        4  CRALEV05 BIT(1),            /* 1 = LEVEL 5 LOCK HELD     */
*        4  CRALEV04 BIT(1),            /* 1 = LEVEL 4 LOCK HELD     */
*        4  CRALEV03 BIT(1),            /* 1 = LEVEL 3 LOCK HELD     */
*        4  CRALEV02 BIT(1),            /* 1 = LEVEL 2 LOCK HELD     */
*        4  CRALEV01 BIT(1),            /* 1 = LEVEL 1 LOCK HELD     */
*      3 CRAL1PTR PTR(31),              /* PTR TO LEVEL 1 LOCK       */
*      3 CRAL2PTR PTR(31),              /* PTR TO LEVEL 2 LOCK       */
*      3 CRAL3PTR PTR(31),              /* PTR TO LEVEL 3 LOCK       */
*      3 CRAL4PTR PTR(31),              /* PTR TO LEVEL 4 LOCK       */
*      3 CRAL5PTR PTR(31),              /* PTR TO LEVEL 5 LOCK       */
*      3 CRAL6PTR PTR(31),              /* PTR TO LEVEL 6 LOCK       */
*      3 CRAL7PTR PTR(31),              /* PTR TO LEVEL 7 LOCK       */
*      3 CRAL8PTR PTR(31),              /* PTR TO LEVEL 8 LOCK       */
*      3 CRAL9PTR PTR(31),              /* PTR TO LEVEL 9 LOCK       */
*      3 CRALAPTR PTR(31),              /* RESERVED                  */
*/*                                                                  */
*/*   VS1/VS2 EXTENSION                                              */
*/*                                                                  */
*     2  CRARPH CHAR(LENGTH(ISTRPH)),   /* RPH ASSOCIATED WITH     0757
*                                          THIS CRH                  */
*     2  CRAPSS CHAR(LENGTH(ISTAPCRR)), /* PSS CRR                   */
*     2  CRAPROCR CHAR(LENGTH(ISTZCRR)) BDY(DWORD), /* PROCESS CRR   */
*     2  CRASVC CHAR(72) BDY(WORD),     /* SERVICE RTN CRA           */
*        3  CRAASCRR CHAR(LENGTH(ISTASCRR)), /* CRR FOR SMS          */
*        3  CRAHSIZ  PTR(31),           /* HEADER SIZE QUED SMS REQ  */
*        3  CRAMASK  PTR(31),           /* PREFIX MASK QUED SMS REQ  */
*        3  CRABUFA  FIXED(31),         /* BUFF QUE FOR FBQ ALLOCATION*
*           4 CRABFTBA BIT(1),          /* NO BUFFERS ALLOCATED YET   *
*     2  CRARSV01 PTR(31),              /* RESERVED                  */
*     2  CRARSV02 PTR(31),              /* RESERVED                  */
*     2  CRACHAIN PTR(31);              /* CHAIN FIELD USED TO QUEUE
*                                          CRA TO PREALLOCATE QUEUE
*                                          WHEN NOT IN USE           */
*DCL CRALMS32 BIT(32) CONSTANT('80000000'X); /* 32ND LEVEL LOCK MASK */
*DCL CRALMS31 BIT(32) CONSTANT('40000000'X); /* 31ST LEVEL LOCK MASK */
*DCL CRALMS30 BIT(32) CONSTANT('20000000'X); /* 30TH LEVEL LOCK MASK */
*DCL CRALMS29 BIT(32) CONSTANT('10000000'X); /* 29TH LEVEL LOCK MASK */
*DCL CRALMS28 BIT(32) CONSTANT('08000000'X); /* 28TH LEVEL LOCK MASK */
*DCL CRALMS27 BIT(32) CONSTANT('04000000'X); /* 27TH LEVEL LOCK MASK */
*DCL CRALMS26 BIT(32) CONSTANT('02000000'X); /* 26TH LEVEL LOCK MASK */
*DCL CRALMS25 BIT(32) CONSTANT('01000000'X); /* 25TH LEVEL LOCK MASK */
*DCL CRALMS24 BIT(32) CONSTANT('00800000'X); /* 24TH LEVEL LOCK MASK */
*DCL CRALMS23 BIT(32) CONSTANT('00400000'X); /* 23RD LEVEL LOCK MASK */
*DCL CRALMS22 BIT(32) CONSTANT('00200000'X); /* 22ND LEVEL LOCK MASK */
*DCL CRALMS21 BIT(32) CONSTANT('00100000'X); /* 21ST LEVEL LOCK MASK */
*DCL CRALMS20 BIT(32) CONSTANT('00080000'X); /* 20TH LEVEL LOCK MASK */
*DCL CRALMS19 BIT(32) CONSTANT('00040000'X); /* 19TH LEVEL LOCK MASK */
*DCL CRALMS18 BIT(32) CONSTANT('00020000'X); /* 18TH LEVEL LOCK MASK */
*DCL CRALMS17 BIT(32) CONSTANT('00010000'X); /* 17TH LEVEL LOCK MASK */
*DCL CRALMS16 BIT(32) CONSTANT('00008000'X); /* 16TH LEVEL LOCK MASK */
*DCL CRALMS15 BIT(32) CONSTANT('00004000'X); /* 15TH LEVEL LOCK MASK */
*DCL CRALMS14 BIT(32) CONSTANT('00002000'X); /* 14TH LEVEL LOCK MASK */
*DCL CRALMS13 BIT(32) CONSTANT('00001000'X); /* 13TH LEVEL LOCK MASK */
*DCL CRALMS12 BIT(32) CONSTANT('00000800'X); /* 12TH LEVEL LOCK MASK */
*DCL CRALMS11 BIT(32) CONSTANT('00000400'X); /* 11TH LEVEL LOCK MASK */
*DCL CRALMS10 BIT(32) CONSTANT('00000200'X); /* 10TH LEVEL LOCK MASK */
*DCL CRALMS09 BIT(32) CONSTANT('00000100'X); /* 9TH LEVEL LOCK MASK  */
*DCL CRALMS08 BIT(32) CONSTANT('00000080'X); /* 8TH LEVEL LOCK MASK  */
*DCL CRALMS07 BIT(32) CONSTANT('00000040'X); /* 7TH LEVEL LOCK MASK  */
*DCL CRALMS06 BIT(32) CONSTANT('00000020'X); /* 6TH LEVEL LOCK MASK  */
*DCL CRALMS05 BIT(32) CONSTANT('00000010'X); /* 5TH LEVEL LOCK MASK  */
*DCL CRALMS04 BIT(32) CONSTANT('00000008'X); /* 4TH LEVEL LOCK MASK  */
*DCL CRALMS03 BIT(32) CONSTANT('00000004'X); /* 3RD LEVEL LOCK MASK  */
*DCL CRALMS02 BIT(32) CONSTANT('00000002'X); /* 2ND LEVEL LOCK MASK  */
*DCL CRALMS01 BIT(32) CONSTANT('00000001'X); /* 1ST LEVEL LOCK MASK  */
*DCL CRACRA   CHAR(4) CONSTANT('CRA ');      /* CHARACTER C.B. ID    */
* /*  CONNECTION SERVICES COMPONENT RECOVERY RECORD                  */
* /* COMPLETED DCR SOLUTIONS                                         */
* /* 1H0540 APRIL 28, 1973 MB                                        */
*/* ZTR4417 JUNE 20, 73 DNM */                                     0791
* DCL 1 ISTCNSTA BDY(WORD) BASED,       /* CONNECTION SERVICES     0791
*                                          COMPONENT RECOVERY RECORD */
*     2  CNSTPFX CHAR(LENGTH(ISTPFCRR)), /* STANDARD PREFIX        0791
*                                          FOR CRR                   */
*     2  CNSTFLDA CHAR(3),              /* TRACE FIELD A - HISTORY   */
*        3  CNSMRINA BIT(1),            /* MASTER ENTERED            */
*        3  CNSAUTHA BIT(1),            /* ABOUT TO CALL AUTHORI-  0791
*                                          SATION EXIT       ZTR4417 */
*        3  CNSAQINA BIT(1),            /* ACQUIRE ENTERED           */
*        3  CNSXREQA BIT(1),            /* ACQUIRE SATISFIED         */
*        3  CNSQREQA BIT(1),            /* ACQUIRE QUEUED            */
*        3  CNSRLINA BIT(1),            /* RELEASE ENTERED           */
*        3  CNSDORLA BIT(1),            /* DOREL REALLOCATION      0791
*                                          ENTERED                   */
*        3  CNSTRRLA BIT(1),            /* RELEASE OF ACTIVE       0791
*                                          CONNECTION                */
*        3  CNSRQRLA BIT(1),            /* RELEASE QUEUED REQUEST    */
*        3  CNSPSINA BIT(1),            /* PASS ENTERED              */
*        3  CNSACINA BIT(1),            /* ACCEPT ENTERED            */
*        3  CNSLGINA BIT(1),            /* LOGON ENTERED             */
*        3  CNSGBINA BIT(1),            /* PREEMPT ENTERED           */
*        3  CNSCLINA BIT(1),            /* CANCEL ENTERED            */
*        3  CNSCLAQA BIT(1),            /* CANCEL ACQUIRES           */
*        3  CNSTCONA BIT(1),            /* TCONNECT                  */
*        3  CNSACONA BIT(1),            /* ACONNECT                  */
*        3  CNSQUEUA BIT(1),            /* QUEUE                     */
*        3  CNSSEARA BIT(1),            /* SEARCH Q                  */
*        3  CNSGETSA BIT(1),            /* CONNECTION SERVICES     0791
*                                          GETSTORE                  */
*        3  CNSFREEA BIT(1),            /* CONNECTION SERVICES     0791
*                                          FREESTORE                 */
*        3  CNSACCTA BIT(1),            /* ABOUT TO CALL           0791
*                                          ACCOUNTING EXIT           */
*        3  CNSLOG0A BIT(1),            /* LOGON 0                   */
*        3  CNSRSV01 BIT(1),            /* RESERVED                  */
*     2  CNSTFLDB CHAR(3),              /* TRACE FIELD B -         0791
*                                          CURRENT ACTIVITY          */
*        3  CNSMRINB BIT(1),                                       0791
*        3  CNSAUTHB BIT(1),                                       0791
*        3  CNSAQINB BIT(1),                                       0791
*        3  CNSXREQB BIT(1),                                       0791
*        3  CNSQREQB BIT(1),                                       0791
*        3  CNSRLINB BIT(1),                                       0791
*        3  CNSDORLB BIT(1),                                       0791
*        3  CNSTRRLB BIT(1),                                       0791
*        3  CNSRQRLB BIT(1),                                       0791
*        3  CNSPSINB BIT(1),                                       0791
*        3  CNSACINB BIT(1),                                       0791
*        3  CNSLGINB BIT(1),                                       0791
*        3  CNSGBINB BIT(1),                                       0791
*        3  CNSCLINB BIT(1),                                       0791
*        3  CNSCLAQB BIT(1),                                       0791
*        3  CNSTCONB BIT(1),                                       0791
*        3  CNSACONB BIT(1),                                       0791
*        3  CNSQUEUB BIT(1),                                       0791
*        3  CNSSEARB BIT(1),                                       0791
*        3  CNSGETSB BIT(1),                                       0791
*        3  CNSFREEB BIT(1),                                       0791
*        3  CNSACCTB BIT(1),                                       0791
*        3  CNSLOG0B BIT(1),                                       0791
*        3  CNSRSV05 BIT(1);                                       0791
* /*     CRR FOR OPEN/CLOSE                                          */
*/*  REVISIONS                                         002 03/27/75  */
* DCL 1 ISTOCCRR BDY(WORD) BASED,       /* CRR FOR OPEN/CLOSE        */
*     2  OCCCNS   CHAR(LENGTH(ISTCNSTA)), /* RESERVE SPACE FOR     0792
*                                          CONN. SVC'S AUDIT         */
*     2  OCCAUDIT,                      /* AUDIT TRAIL FOR OPEN/CLOSE*/
*        3  OCCNTRD CHAR(3),            /* LIST OF MODULES IN OPEN/
*                                          CLOSE ENTERED             */
*           4  NOCCOC BIT(1),           /* INDICATES MODULE ISTOCCOC
*                                          ENTERED                   */
*           4  NOCCCL BIT(1),           /* INDICATES MODULE ISTOCCCL
*                                          ENTERED                   */
*           4  NOCCCH BIT(1),           /* INDICATES MODULE ISTOCCCH
*                                          ENTERED                   */
*           4  NOCCSL BIT(1),           /* INDICATES MODULE ISTOCCSL
*                                          ENTERED                   */
*           4  NOCCFO BIT(1),           /* INDICATES MODULE ISTOCCFO
*                                          ENTERED                   */
*           4  NOCCFR BIT(1),           /* INDICATES MODULE ISTOCCFR
*                                          ENTERED                   */
*           4  NOCCMD BIT(1),           /* INDICATES MODULE ISTOCCMD
*                                          ENTERED                   */
*           4  NOCCFD BIT(1),           /* INDICATES MODULE ISTOCCFD
*                                          ENTERED                   */
*           4  NOCCRD BIT(1),           /* INDICATES MODULE ISTOCCRD
*                                          ENTERED                   */
*           4  NOCCSD BIT(1),           /* INDICATES MODULE ISTOCCSD
*                                          ENTERED                   */
*           4  NOCCOD BIT(1),           /* INDICATES MODULE ISTOCCOD
*                                          ENTERED                   */
*           4  NOCCOE BIT(1),           /* INDICATES MODULE ISTOCCOE
*                                          ENTERED                   */
*           4  NOCCLD BIT(1),           /* INDICATES MODULE ISTOCCLD
*                                          ENTERED                   */
*           4  NOCCOF BIT(1),           /* INDICATES MODULE ISTOCCOF
*                                          ENTERED                   */
*           4  NOCCFB BIT(1),           /* INDICATES MODULE ISTOCCFB
*                                          ENTERED                   */
*           4  NOCCRT BIT(1),           /* INDICATES MODULE ISTOCCRT
*                                          ENTERED                   */
*           4  NOCCQU BIT(1),           /* INDICATES MODULE ISTOCCQU
*                                          ENTERED                   */
*           4  NOCCRL BIT(1),           /* INDICATES MODULE ISTOCCRL
*                                          ENTERED                   */
*           4  NOCCCC   BIT(1),         /* INDICATES MODULE ISTOCCCC
*                                          ENTERED                   */
*           4  NOCCNV BIT(1),           /* INDICATES MODULE ISTOCCNV
*                                          ENTERED                   */
*           4  NOCCCM BIT(1),           /* ISTOCCCM ENTERED          */
*           4  NOCCCN BIT(1),           /* ISTOCCCN ENTERED          */
*           4  NOCACX   BIT(1),                                    0792
*           4  NOCPOI BIT(1),           /* ISTCFCPO ENTERED OR       */
*                                       /* ISTCFCPC ENTERED          */
*        3  OCCCRT CHAR(3),             /* LIST OF OPEN/CLOSE      0792
*                                          MODULES RUNNING           */
*           4  COCCOC BIT(1),           /* INDICATES MODULE ISTOCCOC
*                                          RUNNING                   */
*           4  COCCCL BIT(1),           /* INDICATES MODULE ISTOCCCL
*                                          RUNNING                   */
*           4  COCCCH BIT(1),           /* INDICATES MODULE ISTOCCCH
*                                          RUNNING                   */
*           4  COCCSL BIT(1),           /* INDICATES MODULE ISTOCCSL
*                                          RUNNING                   */
*           4  COCCFO BIT(1),           /* INDICATES MODULE ISTOCCFO
*                                          RUNNING                   */
*           4  COCCFR BIT(1),           /* INDICATES MODULE ISTOCCFR
*                                          RUNNING                   */
*           4  COCCMD BIT(1),           /* INDICATES MODULE ISTOCCMD
*                                          RUNNING                   */
*           4  COCCFD BIT(1),           /* INDICATES  MODULE ISTOCCFD
*                                          RUNNING                   */
*           4  COCCRD BIT(1),           /* INDICATES MODULE ISTOCCRD
*                                          RUNNING                   */
*           4  COCCSD BIT(1),           /* INDICATES MODULE ISTOCCSD
*                                          RUNNING                   */
*           4  COCCOD BIT(1),           /* INDICATES MODULE ISTOCCOD
*                                          RUNNING                   */
*           4  COCCOE BIT(1),           /* INDICATES MODULE ISTOCCOE
*                                          RUNNING                   */
*           4  COCCLD BIT(1),           /* INDICATES MODULE ISTOCCLD
*                                          RUNNING                   */
*           4  COCCOF BIT(1),           /* INDICATES MODULE ISTOCCOF
*                                          RUNNING                   */
*           4  COCCFB BIT(1),           /* INDICATES MODULE ISTOCCFB
*                                          RUNNING                   */
*           4  COCCRT BIT(1),           /* INDICATES MODULE ISTOCCRT
*                                          RUNNING                   */
*           4  COCCQU BIT(1),           /* INDICATES MODULE ISTOCCQU
*                                          RUNNING                   */
*           4  COCCRL BIT(1),           /* INDICATES MODULE ISTOCCRL
*                                          RUNNING                   */
*           4  COCCCC   BIT(1),         /* INDICATES MOD ISTOCCCC  0792
*                                          RUNNING                   */
*           4  COCCNV BIT(1),           /* INDICATES MODULE ISTOCCNV
*                                          RUNNING                   */
*           4  COCCCM BIT(1),           /* ISTOCCCM RUNNING          */
*           4  COCCCN BIT(1),           /* ISTOCCCN RUNNING          */
*           4  COCACX   BIT(1),                                    0792
*           4  COCPOI BIT(1);           /* ISTCFCPO RUNNING OR       */
*                                       /* ISTCFCPC RUNNING          */
*DCL TIDOCCCC BIT(8) CONSTANT('00'X);   /* THREAD ID FOR           0793
*                                          ISTOCCCC                  */
*DCL TIDOCCCH BIT(8) CONSTANT('01'X);   /* THREAD ID FOR           0794
*                                          ISTOCCCH                  */
*DCL TIDOCCOD BIT(8) CONSTANT('02'X);   /* THREAD ID FOR           0795
*                                          ISTOCCOD                  */
*DCL TIDOCCCL BIT(8) CONSTANT('04'X);   /* THREAD ID FOR           0796
*                                          ISTOCCCL                  */
*DCL TIDOCCOC BIT(8) CONSTANT('08'X);   /* THREAD ID FOR           0797
*                                          ISTOCCOC                  */
*DCL TIDOCCRT BIT(8) CONSTANT('10'X);   /* THREAD ID FOR           0798
*                                          ISTOCCRT                  */
*DCL TIDOCCQU BIT(8) CONSTANT('20'X);   /* THREAD ID FOR           0799
*                                          ISTOCCQU                  */
*DCL TIDOCACX BIT(8) CONSTANT('30'X);   /* THREAD ID FOR           0800
*                                          ISTOCACX                  */
*   DCL                                                            0801
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            0802
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                                 0803
*                                                                  0803
         PRINT ON
*/* END OF TPEPILOG                                                  */
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTPAB                                               */
*/*             ISTCSP                                               */
*/*             ISTICE                                               */
*/*             ISTPROCD                                             */
*/*             ISTDEVCH                                             */
*/*             ISTBIND                                              */
*/*             ISTCSL                                               */
*/*             ISTNIB                                               */
*/*             ISTOCW                                               */
*/*             ISTLOK                                               */
*/*             ISTRDT                                               */
*/*             ISTRPH                                               */
*/*             ISTDYPAB                                             */
*/*             ISTATCVT                                             */
*/*             ISTUECB                                              */
*/*             ISTACDEB                                             */
*/*             ISTLCCW                                              */
*/*             ISTLCPB                                              */
*/*             ISTZSAVE                                             */
*/*             ISTPFCRR                                             */
*/*             ISTCFCRR                                             */
*/*             ISTZCRR                                              */
*/*             ISTASCRR                                             */
*/*             ISTAPCRR                                             */
*/*             ISTCRA                                               */
*/*             ISTCNSTA                                             */
*/*             ISTOCCRR                                             */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0804
*   END ISTOCCQU                                                   0804
*                                                                  0804
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */
*/*%INCLUDE SYSLIB  (IFGEXLVT)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*                                                                  0804
*       ;                                                          0804
@EL00001 DS    0H                                                  0804
@EF00001 DS    0H                                                  0804
@ER00001 BR    @14                                                 0804
@DATA    DS    0H
@CH00032 DC    H'12'
@DATD    DSECT
         DS    0F
ISTOCCQU CSECT
         DS    0F
@CF00061 DC    F'1'
@CF00053 DC    F'4'
@CF00059 DC    F'8'
@CF01250 DC    XL4'80000000'
@CF01274 DC    XL4'08000000'
@CF03231 DC    XL4'00FFFFFF'
@DATD    DSECT
         DS    0D
CVTPTR   DS    A
LCPBPTR  DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTOCCQU CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03198 DC    V(ISTOCCUR)
         DS    0D
FMZA0013 DS    FL4
         ORG   FMZA0013
@NM00088 DC    AL1(184)
@NM00089 DC    AL3(0)
         ORG   FMZA0013+4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
OCWPTR   EQU   @04
UECBPTR  EQU   @08
ICEPTR   EQU   @10
CLGNPND  EQU   @11
SVEAREA  EQU   @13
CR14PTR  EQU   @14
CRETCODE EQU   @15
CMZK0006 EQU   @01
CMZK0012 EQU   @01
CBASEREG EQU   @12
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLQUIES EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
IFGEXLST EQU   0
EXLCOMN  EQU   IFGEXLST
EXLLEN   EQU   EXLCOMN+2
EXLEODF  EQU   EXLCOMN+5
EXLSYNF  EQU   EXLCOMN+10
EXLLERF  EQU   EXLCOMN+15
EXLSCIPF EQU   EXLCOMN+20
EXLLGNF  EQU   EXLCOMN+25
EXLLGNP  EQU   EXLCOMN+26
EXLJRNF  EQU   EXLCOMN+30
EXLOPNF  EQU   EXLCOMN+35
EXLVTEXT EQU   IFGEXLST+40
EXLNLGNF EQU   EXLVTEXT
EXLRLRQF EQU   EXLVTEXT+5
EXLATTNF EQU   EXLVTEXT+15
EXLTPNDF EQU   EXLVTEXT+20
EXLDFAS  EQU   0
EXLDFASF EQU   EXLDFAS
EXLRESP  EQU   0
EXLRESPF EQU   EXLRESP
IFGEXLEF EQU   0
EXLENTRY EQU   IFGEXLEF
EXLFLAG  EQU   EXLENTRY
EXLENFL  EQU   EXLFLAG
EXLEXITP EQU   EXLENTRY+1
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBUEL   EQU   ACBEXLST
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBVTEXT EQU   IFGACB+76
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABOFFST EQU   ISTPAB+8
PABDVTA  EQU   ISTPAB+9
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABAPYP  EQU   PABFLAGS
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTCSP   EQU   0
CSPIDX   EQU   ISTCSP
CSPOPT   EQU   ISTCSP+2
CSPOPT1  EQU   CSPOPT
CSPOPT2  EQU   CSPOPT+1
CSPDEST  EQU   ISTCSP+8
CSPRSCE  EQU   ISTCSP+12
CSPCC    EQU   ISTCSP+20
ISTICE   EQU   0
ICEOBJ   EQU   ISTICE+4
ICESUBJQ EQU   ISTICE+8
ICEDATA  EQU   ISTICE+20
ICEFLAGS EQU   ISTICE+28
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTBIND  EQU   0
BINFMTY  EQU   ISTBIND
BINPRIP  EQU   ISTBIND+3
BINSECP  EQU   ISTBIND+4
BINCMNP  EQU   ISTBIND+5
BINCMNP2 EQU   ISTBIND+6
ISTCSL   EQU   0
CSLRDEF  EQU   ISTCSL
CSLRDTE  EQU   CSLRDEF
CSLNDEF  EQU   ISTCSL+4
CSLNIB   EQU   CSLNDEF
CSLDDEF  EQU   ISTCSL+8
CSLDATA  EQU   CSLDDEF
ISTNIB   EQU   0
NIBFLGS  EQU   ISTNIB+40
NIBFLG1  EQU   NIBFLGS
ISTOCW   EQU   0
OCWRPL   EQU   ISTOCW+12
OCWACVT  EQU   ISTOCW+24
OCWCSL   EQU   ISTOCW+28
OCWLRDTE EQU   ISTOCW+40
OCWDRDTE EQU   OCWLRDTE
OCWARDTE EQU   ISTOCW+48
OCWACDEB EQU   ISTOCW+64
OCWODRC  EQU   ISTOCW+92
OCWRC    EQU   OCWODRC
OCWEC    EQU   OCWODRC+1
OCWSVCOD EQU   ISTOCW+94
OCWSWTA  EQU   ISTOCW+204
OCWSWTB  EQU   ISTOCW+205
OCWSWTC  EQU   ISTOCW+206
OCWSWTD  EQU   ISTOCW+207
OCWCSPL  EQU   ISTOCW+224
OCWSAVE1 EQU   ISTOCW+264
OCWR14SV EQU   ISTOCW+624
OCWSWTRD EQU   ISTOCW+730
OCWSWTE  EQU   ISTOCW+731
OCWLOCKS EQU   ISTOCW+740
OCWVLOCK EQU   OCWLOCKS
OCWRLOCK EQU   OCWLOCKS
OCWCID   EQU   ISTOCW+744
OCWSHPL  EQU   ISTOCW+784
OCWBIND  EQU   ISTOCW+796
OCWFLG1  EQU   ISTOCW+847
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00070 EQU   LOKCHNG+2
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRFLAGA EQU   ISTRPRE+21
RPRTIED  EQU   RPRFLAGA
RPRLIVE  EQU   RPRFLAGA
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRLGONF EQU   ISTRPRE+28
RPRLGONB EQU   ISTRPRE+32
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPICELG EQU   ISTRAP+88
RAPFLG   EQU   ISTRAP+108
RAPABLGN EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTDYPAB EQU   0
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSNHLT EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCCSMR  EQU   ISTATCVT+296
ATCUEP   EQU   ISTATCVT+304
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCAP35  EQU   ISTATCVT+448
ATCAP36  EQU   ISTATCVT+452
ATCVOCLK EQU   ISTATCVT+468
ATCRDTLK EQU   ISTATCVT+472
ATCVLCNT EQU   ISTATCVT+772
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTUECB  EQU   0
UECID    EQU   ISTUECB
UECLEN   EQU   ISTUECB+1
UECTYPE  EQU   ISTUECB+3
UECTSKID EQU   ISTUECB+8
UECPAB   EQU   ISTUECB+16
UECPLIST EQU   ISTUECB+32
UECACB   EQU   UECPLIST
UECNDID  EQU   UECPLIST+4
UECTPNCD EQU   UECNDID
UECREQTR EQU   UECPLIST+8
UECDLEN  EQU   UECPLIST+12
UECRSNCD EQU   UECDLEN
UECSYMNM EQU   ISTUECB+52
UECDVTPT EQU   ISTUECB+68
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDTSKID EQU   ACDVTPRX+8
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDACB   EQU   ACDACBAD+1
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
C14SVPTR EQU   0
C14SAVE  EQU   0
CDATA    EQU   0
DATALN   EQU   CDATA+8
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
PFCFTA   EQU   ISTPFCRR+12
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRAFRR   EQU   CRAHDR+4
CRALKACT EQU   CRABASIC+8
CRAL2PTR EQU   CRABASIC+16
CRAL3PTR EQU   CRABASIC+20
CRAPROCR EQU   ISTCRA+312
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSTFLDB EQU   ISTCNSTA+19
ISTOCCRR EQU   0
OCCAUDIT EQU   ISTOCCRR+22
OCCNTRD  EQU   OCCAUDIT
NOCCQU   EQU   OCCNTRD+2
OCCCRT   EQU   OCCAUDIT+3
COCCQU   EQU   OCCCRT+2
FMZL0013 EQU   0
FMZL0037 EQU   0
ISTAPC37 EQU   0
FMZL0053 EQU   0
FMZL0058 EQU   0
FMZL0063 EQU   0
FMZL0073 EQU   0
ISTACB   EQU   0
ISTAPC34 EQU   0
ISTRPL   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTEVERM EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
COCPOI   EQU   OCCCRT+2
COCACX   EQU   OCCCRT+2
COCCCN   EQU   OCCCRT+2
COCCCM   EQU   OCCCRT+2
COCCNV   EQU   OCCCRT+2
COCCCC   EQU   OCCCRT+2
COCCRL   EQU   OCCCRT+2
COCCRT   EQU   OCCCRT+1
COCCFB   EQU   OCCCRT+1
COCCOF   EQU   OCCCRT+1
COCCLD   EQU   OCCCRT+1
COCCOE   EQU   OCCCRT+1
COCCOD   EQU   OCCCRT+1
COCCSD   EQU   OCCCRT+1
COCCRD   EQU   OCCCRT+1
COCCFD   EQU   OCCCRT
COCCMD   EQU   OCCCRT
COCCFR   EQU   OCCCRT
COCCFO   EQU   OCCCRT
COCCSL   EQU   OCCCRT
COCCCH   EQU   OCCCRT
COCCCL   EQU   OCCCRT
COCCOC   EQU   OCCCRT
NOCPOI   EQU   OCCNTRD+2
NOCACX   EQU   OCCNTRD+2
NOCCCN   EQU   OCCNTRD+2
NOCCCM   EQU   OCCNTRD+2
NOCCNV   EQU   OCCNTRD+2
NOCCCC   EQU   OCCNTRD+2
NOCCRL   EQU   OCCNTRD+2
NOCCRT   EQU   OCCNTRD+1
NOCCFB   EQU   OCCNTRD+1
NOCCOF   EQU   OCCNTRD+1
NOCCLD   EQU   OCCNTRD+1
NOCCOE   EQU   OCCNTRD+1
NOCCOD   EQU   OCCNTRD+1
NOCCSD   EQU   OCCNTRD+1
NOCCRD   EQU   OCCNTRD+1
NOCCFD   EQU   OCCNTRD
NOCCMD   EQU   OCCNTRD
NOCCFR   EQU   OCCNTRD
NOCCFO   EQU   OCCNTRD
NOCCSL   EQU   OCCNTRD
NOCCCH   EQU   OCCNTRD
NOCCCL   EQU   OCCNTRD
NOCCOC   EQU   OCCNTRD
OCCCNS   EQU   ISTOCCRR
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSRQRLB EQU   CNSTFLDB+1
CNSTRRLB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSRLINB EQU   CNSTFLDB
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSRQRLA EQU   CNSTFLDA+1
CNSTRRLA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSRLINA EQU   CNSTFLDA
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
@NM00102 EQU   ISTAPCRR+137
@NM00101 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00100 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00099 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00098 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00097 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00096 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00095 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00094 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00093 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00092 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00091 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00090 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
@NM00087 EQU   CDATA
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
ACDRSV09 EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
UECRVPT4 EQU   ISTUECB+80
UECRVPT3 EQU   ISTUECB+76
UECLGDTA EQU   ISTUECB+72
UECREQNM EQU   ISTUECB+60
UECVRPL  EQU   UECPLIST+16
UECRSNBT EQU   UECRSNCD+3
@NM00086 EQU   UECRSNCD
UECUSFLD EQU   UECREQTR
UECDAF   EQU   UECTPNCD+2
UECSAF   EQU   UECTPNCD
UECRPLAD EQU   UECACB
UECEXLST EQU   ISTUECB+12
UECFORW  EQU   ISTUECB+4
UECRSV01 EQU   ISTUECB+2
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00085 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00084 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ISTATCVT+788
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00083 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00082 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00081 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00080 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00079 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00078 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00077 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00076 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRSV22 EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPRSV09 EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00075 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00074 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00073 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
@NM00072 EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRENTRY EQU   ISTRPRE+20
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
LOKXCL   EQU   @NM00070
LOKPRY   EQU   @NM00070
@NM00071 EQU   @NM00070
@NM00069 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
OCWEND   EQU   ISTOCW+848
@NM00068 EQU   OCWFLG1
OCWEXIT  EQU   OCWFLG1
OCWSENSE EQU   ISTOCW+843
OCWBNDSZ EQU   ISTOCW+841
OCWBINDD EQU   OCWBIND+37
OCWBINDA EQU   OCWBIND+1
OCWBINDC EQU   OCWBIND
OCWSHPLC EQU   OCWSHPL+8
OCWSHPLB EQU   OCWSHPL+4
OCWSHPLA EQU   OCWSHPL
OCWBNDRU EQU   ISTOCW+780
OCWELCP  EQU   ISTOCW+776
OCWRSV12 EQU   ISTOCW+772
OCWRSV11 EQU   ISTOCW+768
OCWRSV10 EQU   ISTOCW+764
OCWRSV09 EQU   ISTOCW+760
OCWPROCD EQU   ISTOCW+756
OCWRSV08 EQU   ISTOCW+752
OCWRSV07 EQU   ISTOCW+748
OCWDAF   EQU   OCWCID+2
OCWSAF   EQU   OCWCID
OCWNMLLN EQU   ISTOCW+742
OCWRSV0A EQU   ISTOCW+741
OCWRSV82 EQU   OCWLOCKS
OCWMLOCK EQU   OCWLOCKS
OCWALOCK EQU   OCWLOCKS
OCWDLOCK EQU   OCWLOCKS
OCWCLOCK EQU   OCWLOCKS
OCWELOCK EQU   OCWLOCKS
OCWACE   EQU   ISTOCW+736
OCWIOMIN EQU   ISTOCW+735
OCWIOMAJ EQU   ISTOCW+734
OCWBHSID EQU   ISTOCW+733
OCWRSV03 EQU   ISTOCW+732
OCWSWTE7 EQU   OCWSWTE
OCWSWTE6 EQU   OCWSWTE
OCWSWTE5 EQU   OCWSWTE
OCWSWTE4 EQU   OCWSWTE
OCWSWTE3 EQU   OCWSWTE
OCWSWTE2 EQU   OCWSWTE
OCWLCPBC EQU   OCWSWTE
OCWSKEL  EQU   OCWSWTE
OCWSWTR7 EQU   OCWSWTRD
OCWSWTR6 EQU   OCWSWTRD
OCWSWTR5 EQU   OCWSWTRD
OCWDPDVT EQU   OCWSWTRD
OCWEPTLP EQU   OCWSWTRD
OCWCPARE EQU   OCWSWTRD
OCWCLEN  EQU   OCWSWTRD
OCWSRDVT EQU   OCWSWTRD
OCWCLCD2 EQU   ISTOCW+728
OCWCLCD1 EQU   ISTOCW+726
OCWLALEN EQU   ISTOCW+724
OCWSDVTA EQU   ISTOCW+720
OCWOENIB EQU   ISTOCW+716
OCWSORTP EQU   ISTOCW+712
OCWMDVT  EQU   ISTOCW+708
OCWSDVT  EQU   ISTOCW+704
OCWPREV  EQU   ISTOCW+700
OCWLCPBA EQU   ISTOCW+696
OCWSAVE5 EQU   ISTOCW+552
OCWSAVE4 EQU   ISTOCW+480
OCWSAVE3 EQU   ISTOCW+408
OCWSAVE2 EQU   ISTOCW+336
OCWRSVD  EQU   ISTOCW+212
OCWVPAB  EQU   ISTOCW+208
OCWSWTD7 EQU   OCWSWTD
OCWSWTD6 EQU   OCWSWTD
OCWSWTD5 EQU   OCWSWTD
OCWSWTD4 EQU   OCWSWTD
OCWSWTD3 EQU   OCWSWTD
OCWSTCTL EQU   OCWSWTD
OCWNPOST EQU   OCWSWTD
OCWCLDEB EQU   OCWSWTD
OCWVARY  EQU   OCWSWTC
OCWPRMTR EQU   OCWSWTC
OCWPBH   EQU   OCWSWTC
OCWRBH   EQU   OCWSWTC
OCWCKACE EQU   OCWSWTC
OCWODCLS EQU   OCWSWTC
OCWSWTC1 EQU   OCWSWTC
OCWSPCLS EQU   OCWSWTC
OCWCSCAL EQU   OCWSWTB
OCWPSREQ EQU   OCWSWTB
OCWOLOCK EQU   OCWSWTB
OCWCOREQ EQU   OCWSWTB
OCWDOPHY EQU   OCWSWTB
OCWCLOOP EQU   OCWSWTB
OCWRECL  EQU   OCWSWTB
OCWGOFUN EQU   OCWSWTB
OCWNODLT EQU   OCWSWTA
OCWODCL  EQU   OCWSWTA
OCWGODST EQU   OCWSWTA
OCWSORT  EQU   OCWSWTA
OCWGOCNT EQU   OCWSWTA
OCWNOCON EQU   OCWSWTA
OCWSRT   EQU   OCWSWTA
OCWGTLST EQU   OCWSWTA
OCWSCPAD EQU   ISTOCW+176
OCWDNIB  EQU   ISTOCW+112
OCWBADNO EQU   ISTOCW+110
OCWDSTNO EQU   ISTOCW+108
OCWODCT2 EQU   ISTOCW+106
OCWODCT1 EQU   ISTOCW+104
OCWRSV02 EQU   ISTOCW+100
OCWRSV01 EQU   ISTOCW+96
OCWSVEC  EQU   OCWSVCOD+1
OCWSVRC  EQU   OCWSVCOD
OCWODFST EQU   ISTOCW+88
OCWODNAS EQU   ISTOCW+84
OCWODLST EQU   ISTOCW+80
OCWLPOST EQU   ISTOCW+76
OCWCPOST EQU   ISTOCW+72
OCWFPOST EQU   ISTOCW+68
OCWNCB   EQU   ISTOCW+60
OCWFMCB  EQU   ISTOCW+56
OCWEPTAB EQU   ISTOCW+52
OCWNIB   EQU   ISTOCW+44
OCWDRHOB EQU   OCWDRDTE
OCWPAB   EQU   ISTOCW+20
OCWRPH   EQU   ISTOCW+16
OCWCHAIN EQU   ISTOCW+8
OCWPBCHN EQU   ISTOCW+4
OCWTLEN  EQU   ISTOCW+2
OCWSLEN  EQU   ISTOCW+1
OCWID    EQU   ISTOCW
NIBRESV  EQU   ISTNIB+60
NIBNDAR  EQU   ISTNIB+56
NIBLMODE EQU   ISTNIB+48
NIBEXLST EQU   ISTNIB+44
NIBLIMIT EQU   ISTNIB+42
@NM00067 EQU   ISTNIB+41
@NM00066 EQU   NIBFLG1
@NM00065 EQU   NIBFLG1
@NM00064 EQU   NIBFLG1
@NM00063 EQU   NIBFLG1
NIBSHLTP EQU   NIBFLG1
NIBSDAPP EQU   NIBFLG1
NIBCON   EQU   NIBFLG1
NIBLAST  EQU   NIBFLG1
NIBPROCD EQU   ISTNIB+36
NIBDEVCH EQU   ISTNIB+28
NIBMODE  EQU   ISTNIB+20
NIBSYM   EQU   ISTNIB+12
NIBUSER  EQU   ISTNIB+8
NIBCID   EQU   ISTNIB+4
NIBLEN   EQU   ISTNIB+3
NIBCONDN EQU   ISTNIB+2
NIBRSV01 EQU   ISTNIB+1
NIBID    EQU   ISTNIB
CSLDATAF EQU   CSLDATA
CSLNIBF  EQU   CSLNIB
CSLRDTEF EQU   CSLRDTE
BINUSE   EQU   ISTBIND+36
BINUSEL  EQU   ISTBIND+35
BINPRIM  EQU   ISTBIND+27
BINPRIML EQU   ISTBIND+26
BINPRSVC EQU   ISTBIND+7
BINCONR  EQU   BINCMNP2
BINRCHN  EQU   BINCMNP2
BINMDIBK EQU   BINCMNP2
BINBKFS  EQU   BINCMNP2
BINRCVR  EQU   BINCMNP2
BINFMTRM EQU   BINCMNP2
BINRSV04 EQU   BINCMNP
BINALT   EQU   BINCMNP
BINBKTR  EQU   BINCMNP
BINBRAK  EQU   BINCMNP
BINFMHD  EQU   BINCMNP
BINRSV03 EQU   BINCMNP
BINSSEB  EQU   BINSECP
BINSCMP  EQU   BINSECP
BINRSV02 EQU   BINSECP
BINSCHNR EQU   BINSECP
BINSMCH  EQU   BINSECP
BINSCHN  EQU   BINSECP
BINPSEB  EQU   BINPRIP
BINPCMP  EQU   BINPRIP
BINRSV01 EQU   BINPRIP
BINPCHNR EQU   BINPRIP
BINPMCH  EQU   BINPRIP
BINPCHN  EQU   BINPRIP
BINTS    EQU   ISTBIND+2
BINFM    EQU   ISTBIND+1
BINTYPE  EQU   BINFMTY
BINFMT   EQU   BINFMTY
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PRORSV11 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
ICERSC2B EQU   ISTICE+36
ICEUECBX EQU   ISTICE+32
@NM00062 EQU   ISTICE+29
@NM00061 EQU   ICEFLAGS
ICESTAPR EQU   ICEFLAGS
ICERSC2F EQU   ICEFLAGS
ICELGON  EQU   ICEFLAGS
ICEICX   EQU   ICEFLAGS
ICESPEC  EQU   ICEFLAGS
ICERPHA  EQU   ISTICE+24
ICESIDE  EQU   ISTICE+16
ICEOBJQ  EQU   ISTICE+12
ICESUBJ  EQU   ISTICE
CSPRSC2B EQU   ISTCSP+32
CSPTRDTE EQU   ISTCSP+28
CSPRLRPH EQU   ISTCSP+24
CSPNO    EQU   ISTCSP+22
CSPDATA  EQU   ISTCSP+16
CSPSRC   EQU   ISTCSP+4
@NM00060 EQU   CSPOPT2
CSPRSC2F EQU   CSPOPT2
CSPWASQD EQU   CSPOPT2
CSPACQS  EQU   CSPOPT2
CSPACES  EQU   CSPOPT2
CSPNOREL EQU   CSPOPT2
CSPCOREQ EQU   CSPOPT2
CSPSTAP  EQU   CSPOPT2
@NM00059 EQU   CSPOPT1
CSPANY   EQU   CSPOPT1
CSPACT   EQU   CSPOPT1
CSPSESS  EQU   CSPOPT1
CSPPND   EQU   CSPOPT1
CSPLOGI  EQU   CSPOPT1
CSPQ     EQU   CSPOPT1
CSPRSC   EQU   CSPOPT1
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
@NM00058 EQU   ACBVTEXT+8
@NM00057 EQU   ACBVTEXT+6
ACBRTN   EQU   ACBVTEXT
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00056 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00055 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00054 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00053 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00052 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00051 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00050 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00049 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00048 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00047 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00046 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00045 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
EXLEADDR EQU   EXLEXITP
@NM00044 EQU   EXLENFL
EXLLNK   EQU   EXLENFL
EXLACTM  EQU   EXLENFL
EXLSPEC  EQU   EXLENFL
EXLRESPP EQU   EXLRESP+1
@NM00043 EQU   EXLRESPF
EXLRESPK EQU   EXLRESPF
EXLRESPA EQU   EXLRESPF
EXLRESPS EQU   EXLRESPF
EXLDFASP EQU   EXLDFAS+1
@NM00042 EQU   EXLDFASF
EXLDFASK EQU   EXLDFASF
EXLDFASA EQU   EXLDFASF
EXLDFASS EQU   EXLDFASF
EXLTPNDP EQU   EXLVTEXT+21
@NM00041 EQU   EXLTPNDF
EXLTPNDK EQU   EXLTPNDF
EXLTPNDA EQU   EXLTPNDF
EXLTPNDS EQU   EXLTPNDF
EXLATTNP EQU   EXLVTEXT+16
@NM00040 EQU   EXLATTNF
EXLATTNK EQU   EXLATTNF
EXLATTNA EQU   EXLATTNF
EXLATTNS EQU   EXLATTNF
@NM00039 EQU   EXLVTEXT+10
EXLRLRQP EQU   EXLVTEXT+6
@NM00038 EQU   EXLRLRQF
EXLRLRQK EQU   EXLRLRQF
EXLRLRQA EQU   EXLRLRQF
EXLRLRQS EQU   EXLRLRQF
EXLNLGNP EQU   EXLVTEXT+1
@NM00037 EQU   EXLNLGNF
EXLNLGNK EQU   EXLNLGNF
EXLNLGNA EQU   EXLNLGNF
EXLNLGNS EQU   EXLNLGNF
EXLOPNP  EQU   EXLCOMN+36
@NM00036 EQU   EXLOPNF
EXLOPNK  EQU   EXLOPNF
EXLOPNA  EQU   EXLOPNF
EXLOPNS  EQU   EXLOPNF
EXLJRNP  EQU   EXLCOMN+31
@NM00035 EQU   EXLJRNF
EXLJRNK  EQU   EXLJRNF
EXLJRNA  EQU   EXLJRNF
EXLJRNS  EQU   EXLJRNF
@NM00034 EQU   EXLLGNF
EXLLGNK  EQU   EXLLGNF
EXLLGNA  EQU   EXLLGNF
EXLLGNS  EQU   EXLLGNF
EXLSCIPP EQU   EXLCOMN+21
@NM00033 EQU   EXLSCIPF
EXLSCIPK EQU   EXLSCIPF
EXLSCIPA EQU   EXLSCIPF
EXLSCIPS EQU   EXLSCIPF
EXLLERP  EQU   EXLCOMN+16
@NM00032 EQU   EXLLERF
EXLLERK  EQU   EXLLERF
EXLLERA  EQU   EXLLERF
EXLLERS  EQU   EXLLERF
EXLSYNP  EQU   EXLCOMN+11
@NM00031 EQU   EXLSYNF
EXLSYNK  EQU   EXLSYNF
EXLSYNA  EQU   EXLSYNF
EXLSYNS  EQU   EXLSYNF
EXLEODP  EQU   EXLCOMN+6
@NM00030 EQU   EXLEODF
EXLEODK  EQU   EXLEODF
EXLEODA  EQU   EXLEODF
EXLEODS  EQU   EXLEODF
@NM00029 EQU   EXLCOMN+4
EXLLEN2  EQU   EXLLEN
EXLSTYP  EQU   EXLCOMN+1
EXLID    EQU   EXLCOMN
RPLSEQNO EQU   RPLOF60+6
@NM00028 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00027 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00026 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00025 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00024 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00023 EQU   RPLRESP
@NM00022 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00021 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00020 EQU   RPLVTFL1
@NM00019 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00018 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00017 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00016 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00015 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00014 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00013 EQU   RPLOPT12
@NM00012 EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00009 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00008 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00007 EQU   RPLRBAR+3
@NM00006 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00005 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00004 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00003 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00351 EQU   @RC00350
@RC00455 EQU   @RC00443
@RT00453 EQU   @RC00443
@RC00614 EQU   @RC00598
@PB00008 EQU   @PB00009
@RC00352 EQU   @RC00351
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   ISTOCCQU,(C'PLS1926',0603,75136)
