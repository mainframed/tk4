         TITLE 'ISTZBFID/AID-VS1/MID-VS2 - FID1 LCCW PROCESSOR         *
                        '
ISTZBFID CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTZBFID  77.326'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         PRINT OFF
         PRINT ON
*                                                            @XM19747*/
         EJECT
*                                                                  0555
*/********************************************************************/
*/*                                                                  */
*/*      ISTZBFID: FID1 LCCW PROCESSOR                               */
*/*                                                                  */
*/********************************************************************/
*/* TPZSAVE (7,12,14) AC(BCID)BASE                                   */
*                                                                  0555
*   DO;                                                            0555
*     RFY                                                          0556
*      (GPR01P,                                                    0556
*       GPR12P,                                                    0556
*       GPR13P,                                                    0556
*       GPR14P) RSTD;                                              0556
*     GEN(PRINT OFF);                                              0557
*                                                                  0557
         PRINT OFF
*/* ATBUILD (ISTZSAVE)                                               */
*/* END OF ATBUILD                                                   */
*                                                                  0558
*     GEN(PRINT ON);                                               0558
         PRINT ON
*     RFY                                                          0559
*       ISTZSAVE BASED(GPR13P);                                    0559
*     GEN SETS(ZSAZSVVR)(STM   7,12,ZSAZSVVR+0(13));               0560
         STM   7,12,ZSAZSVVR+0(13)
*     GEN SETS(GPR12P);                                            0561
         BALR  GPR12P,0
@TSTART  DS    0H
         USING @TSTART,GPR12P
*     GEN(PRINT OFF);                                              0562
*                                                                  0562
         PRINT OFF
*/* ATBUILD (ISTZCRR,ISTRPH,ISTCRA) EJECT(NO)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0563
*     GEN(PRINT ON);                                               0563
         PRINT ON
*     GPR01P->RPHCRR->CRACRR->ZCREBCID='1'B;                       0564
         L     @15,RPHCRR(,GPR01P)                                 0564
         L     @15,CRACRR(,@15)                                    0564
         OI    ZCREBCID(@15),B'10000000'                           0564
*     ZSAZACTV='1'B;                                               0565
         OI    ZSAZACTV(GPR13P),B'10000000'                        0565
*     ZSAZTRAC='BCID';                                             0566
         MVC   ZSAZTRAC(4,GPR13P),@CC03723                         0566
*     ZSAZSVRR=GPR14P;                                             0567
         ST    GPR14P,ZSAZSVRR(,GPR13P)                            0567
*     GPR13P=ZSAZSVFC;                                             0568
         L     GPR13P,ZSAZSVFC(,GPR13P)                            0568
*     RFY                                                          0569
*      (GPR01P) UNRSTD;                                            0569
*     RFY                                                          0570
*      (GPR14P) UNRSTD;                                            0570
*   END;                                                           0571
*                                                                  0571
*/* END TPZSAVE                                                      */
*                                                                  0572
*   LSCBPTR=LCPBPTR;                /* ADDR OF LSCB/LCPB IN 8        */
         LR    LSCBPTR,LCPBPTR                                     0572
*   IF LCPTYPE=LSTYPE THEN          /* IF ELEMENT A LSCB             */
         CLI   LCPTYPE(LCPBPTR),X'DF'                              0573
         BNE   @RF00573                                            0573
*     LCPBPTR=LSCLCPBA;             /* ADDRESS THE LCPB              */
         L     LCPBPTR,LSCLCPBA(,LSCBPTR)                          0574
*   ELSE                                                           0575
*     ;                             /* IF ELEMENT A LCPB             */
@RF00573 DS    0H                                                  0576
*   LCCWPTR=LCPNXLCW;               /* SAVE A(FIRST LCCW)    @XL03HEN*/
         L     @09,RPHCRR(,RPHPTR)                                 0576
         L     @09,CRACRR(,@09)                                    0576
         L     @15,LCPNXLCW(,LCPBPTR)                              0576
         ST    @15,LCCWPTR(,@09)                                   0576
*   IF LCCWOP=LCLEAR                /* IF LCCWOP=CLEAR       @XM19747*/
*       ×LCCWOP=LCLRNFY THEN                                       0577
         CLI   LCCWOP(@15),X'F2'                                   0577
         BE    @RT00577                                            0577
         CLI   LCCWOP(@15),X'F8'                                   0577
         BNE   @RF00577                                            0577
@RT00577 DS    0H                                                  0578
*     DO;                           /* × LCCWOP=CLEAR/NOTIFY @XM19747*/
*       LCPRUCNT=LCPMNRCD;          /* SAVE MINOR RETURN CODE      0579
*                                                            @XM19747*/
         MVC   LCPRUCNT(1,LCPBPTR),LCPMNRCD(LCPBPTR)               0579
*       CALL BFID0CLR;              /* PURGE QUEUES          @XM19747*/
         BAL   @14,BFID0CLR                                        0580
*       IF LCCWOP=LCLRNFY THEN      /* IF CLEAR/NOTIFY       @XM19747*/
         L     @09,RPHCRR(,RPHPTR)                                 0581
         L     @09,CRACRR(,@09)                                    0581
         L     @09,LCCWPTR(,@09)                                   0581
         CLI   LCCWOP(@09),X'F8'                                   0581
         BNE   @RF00581                                            0581
*         CALL NOTIFY;              /* PROCESS NOTIFY        @XM19747*/
         BAL   @14,NOTIFY                                          0582
*       ELSE                                                       0583
*         ;                         /* NOT CLEAR/NOTIFY      @XM19747*/
@RF00581 DS    0H                                                  0584
*     END;                          /* END CLEAR PROCESSING  @XM19747*/
*   ELSE                            /* NOT A CLEAR REQUEST   @XM19747*/
*     IF LCCWOP=LQUIS THEN          /* QUIESCE REQUEST?      @XL03HEN*/
         B     @RC00577                                            0585
@RF00577 L     @09,RPHCRR(,RPHPTR)                                 0585
         L     @09,CRACRR(,@09)                                    0585
         L     @09,LCCWPTR(,@09)                                   0585
         CLI   LCCWOP(@09),X'FE'                                   0585
         BNE   @RF00585                                            0585
*       ZOBCPTCC='FF'X;             /* INDICATE QUIESCE      @XL03HEN*/
         MVI   ZOBCPTCC(FDBPTR),X'FF'                              0586
*     ELSE                                                         0587
*       ;                                                          0587
@RF00585 DS    0H                                                  0588
*   THFID=THFID1;                   /* SET FID VALUE                 */
@RC00577 LA    @09,28                                              0588
         ALR   @09,FDBPTR                                          0588
         NI    THFID(@09),B'00011111'                              0588
         OI    THFID(@09),B'00010000'                              0588
*   THMPF=MAPVAL;                   /* SET TH MAP FIELD              */
         OI    THMPF(@09),B'00001100'                              0589
*   THPYF=THCNOPYF;                 /* SET TH PRIORITY FIELD         */
         NI    THPYF(@09),B'00001111'                              0590
*   THSEF=THCNOSEF;                 /* SET TH SECURITY FIELD         */
         NI    THSEF(@09),B'11110011'                              0591
*   THCDF=THCNOCDF;                 /* SET TH CODE FIELD             */
         NI    THCDF(@09),B'11111100'                              0592
*   THDAF=NCBSWDAF;                 /* SET TH DAF PER LUNCB          */
         MVC   THDAF(2,@09),NCBSWDAF(LUNCBPTR)                     0593
*   THOAF=FMCSAF;                   /* SET TH OAF PER FMCB           */
         MVC   THOAF(2,@09),FMCSAF(FMCBPTR)                        0594
*   FDBDATCT=LENGTH(ISTTH);         /* SET FDB DATA COUNT TO 10      */
         MVC   FDBDATCT(2,FDBPTR),@CH02554                         0595
*   FDBDATAA=ADDR(ZOBTEXT);         /* SET FDB DATA ADDRESS          */
         LA    @09,ZOBTEXT(,FDBPTR)                                0596
         ST    @09,FDBDATAA(,FDBPTR)                               0596
*   LCPLCCW1=LCPNXLCW;              /* SAVE FIRST LCCW ADDR. @XM09478*/
         L     @09,LCPNXLCW(,LCPBPTR)                              0597
         ST    @09,LCPLCCW1(,LCPBPTR)                              0597
*   CALL ISTZDFC0;                  /* CALL ROUTINE TO MOVE RH, RU TO
*                                      BUFFER                        */
         L     @09,ATCZPSVT(,ATCVTPTR)                             0598
         L     @15,ZPSZDFC0(,@09)                                  0598
         BALR  @14,@15                                             0598
*   LSCLCCWA=LCPNXLCW;              /* SET UP LCCWA ADDR     @ZA27739*/
         L     @09,LCPNXLCW(,LCPBPTR)                              0599
         ST    @09,LSCLCCWA(,LSCBPTR)                              0599
*   RFY                                                            0600
*     R15 RSTD;                                                    0600
*   IF R15=0 THEN                                                  0601
         LTR   R15,R15                                             0601
         BNZ   @RF00601                                            0601
*     DO;                           /* CONTINUE ONLY IF MOVE       0602
*                                      SUCCESSFUL                    */
*       RFY                                                        0603
*         R15 UNRSTD;                                              0603
*       RFY                                                        0604
*         RHPTR RSTD;                                              0604
*       RFY                                                        0605
*         ISTRH BASED(RHPTR);                                      0605
*       IF LCCWIDAT='1'B THEN       /* IMMEDIATE DATA IN LCCW        */
         L     @11,RPHCRR(,RPHPTR)                                 0606
         L     @11,CRACRR(,@11)                                    0606
         L     @11,LCCWPTR(,@11)                                   0606
         TM    LCCWIDAT(@11),B'00001000'                           0606
         BNO   @RF00606                                            0606
*         RHPTR=ADDR(LCCWDATA);     /* THE RH IS IN THE LCCW         */
         LA    RHPTR,LCCWDATA(,@11)                                0607
*       ELSE                                                       0608
*         RHPTR=LCCWDATA;           /* OTHERWISE THE LCCW POINTS TO
*                                      RH                            */
         B     @RC00606                                            0608
@RF00606 L     @09,RPHCRR(,RPHPTR)                                 0608
         L     @09,CRACRR(,@09)                                    0608
         L     @09,LCCWPTR(,@09)                                   0608
         L     RHPTR,LCCWDATA(,@09)                                0608
*       IF RHQS='1'B THEN           /* LCPB FOR A RESPONSE?          */
@RC00606 TM    RHQS(RHPTR),B'10000000'                             0609
         BNO   @RF00609                                            0609
*         DO;                       /* ASSGN SEQN PER LCPB           */
*           IF LCPASYN='1'B THEN    /* LCPB ASYN?                    */
         TM    LCPASYN(LCPBPTR),B'01000000'                        0611
         BNO   @RF00611                                            0611
*             THAFI='1'B;           /* THEN TH ASYN                  */
         OI    THAFI+28(FDBPTR),B'00000001'                        0612
*           ELSE                                                   0613
*             THAFI='0'B;           /* ELSE TH SYNCH                 */
         B     @RC00611                                            0613
@RF00611 NI    THAFI+28(FDBPTR),B'11111110'                        0613
*           THPSI='0'B;             /* SECONDARY TO PRIMARY FLOW   0614
*                                                            @XL03HEN*/
@RC00611 LA    @11,28                                              0614
         ALR   @11,FDBPTR                                          0614
         NI    THPSI(@11),B'11111101'                              0614
*           THSNF=LCPFOSN;          /* ASSGN SEQN PER LCPB           */
         MVC   THSNF(2,@11),LCPFOSN(LCPBPTR)                       0615
*         END;                                                     0616
*       ELSE                                                       0617
*         DO;                                                      0617
         B     @RC00609                                            0617
@RF00609 DS    0H                                                  0618
*           THPSI='1'B;             /* FLOW = PRIM. TO SEC.          */
         LA    @11,28                                              0618
         ALR   @11,FDBPTR                                          0618
         OI    THPSI(@11),B'00000010'                              0618
*           IF LCPASYN='1'B THEN    /* ASYNCH FLOW?                  */
         TM    LCPASYN(LCPBPTR),B'01000000'                        0619
         BNO   @RF00619                                            0619
*             DO;                   /* YES,DO...                     */
*               THAFI='1'B;         /* SET FLOW=ASYNCH               */
         OI    THAFI(@11),B'00000001'                              0621
*               FMCOASN=FMCOASN+1;  /* UPDATE FMCB ASYN SEQN VERSION
*                                      CODE REMOVED FOR DCR 4086.0 0622
*                                                            @X50BHM2*/
         LA    @11,1                                               0622
         LH    @09,FMCOASN(,FMCBPTR)                               0622
         N     @09,@CF03835                                        0622
         ALR   @09,@11                                             0622
         STH   @09,FMCOASN(,FMCBPTR)                               0622
*               IF FMCOASN=0 THEN   /* SEQUENCE NO. OVERFLOW @X04BHEN*/
         LTR   @09,@09                                             0623
         BNZ   @RF00623                                            0623
*                 FMCOASN=1;        /* RESET SEQ. NO.        @X04BHEN*/
         STH   @11,FMCOASN(,FMCBPTR)                               0624
*               ELSE                                               0625
*                 ;                 /* VERSION CODE REMOVED FOR DCR
*                                      4086.0                @X50BHM2*/
@RF00623 DS    0H                                                  0626
*               THSNF=FMCOASN;      /* ASSIGN TH ASYNCH SEQ #        */
         MVC   THSNF+28(2,FDBPTR),FMCOASN(FMCBPTR)                 0626
*             END;                                                 0627
*           ELSE                                                   0628
*             DO;                   /* NO, DO...                     */
         B     @RC00619                                            0628
@RF00619 DS    0H                                                  0629
*               THAFI='0'B;         /* RESET SYNCH/ASYNCH FLOW       */
         NI    THAFI+28(FDBPTR),B'11111110'                        0629
*               FMCOSSN=FMCOSSN+1;  /* UPDATE FMCB SYN SEQN@DL03HGE  */
         LA    @11,1                                               0630
         LH    @09,FMCOSSN(,FMCBPTR)                               0630
         N     @09,@CF03835                                        0630
         ALR   @11,@09                                             0630
         STH   @11,FMCOSSN(,FMCBPTR)                               0630
*               IF RHCHAIN='10'B×   /* FIRST OR ONLY IN CHAIN        */
*                   RHCHAIN='11'B THEN/*                     @XL03HEN*/
         TM    RHCHAIN(RHPTR),B'00000010'                          0631
         BNO   @GL00002                                            0631
         TM    RHCHAIN(RHPTR),B'00000001'                          0631
         BZ    @RT00631                                            0631
@GL00002 TM    RHCHAIN(RHPTR),B'00000011'                          0631
         BNO   @RF00631                                            0631
@RT00631 DS    0H                                                  0632
*                 DO;                                              0632
*                   FMCPURCH='0'B;  /* RESET PURGING CHAIN STATE   0633
*                                                            @XL03HEN*/
         NI    FMCPURCH(FMCBPTR),B'11111101'                       0633
*                   FMCZFCSQ=FMCOSSN;/* SAVE SEQ. NO.        @XL03HEN*/
         LH    @11,FMCOSSN(,FMCBPTR)                               0634
         N     @11,@CF03835                                        0634
         STH   @11,FMCZFCSQ(,FMCBPTR)                              0634
*                 END;                                             0635
*               ELSE                                               0636
*                 ;                                                0636
@RF00631 DS    0H                                                  0637
*               LCPFSNCH=FMCZFCSQ;  /* SEQ NO. IN ELEMENT    @XM01409*/
         LH    @11,FMCZFCSQ(,FMCBPTR)                              0637
         N     @11,@CF03835                                        0637
         STH   @11,LCPFSNCH(,LCPBPTR)                              0637
*               THSNF=FMCOSSN;      /* ASSIGN TH SYNCH SEQ #         */
         MVC   THSNF+28(2,FDBPTR),FMCOSSN(FMCBPTR)                 0638
*             END;                                                 0639
*         END;                                                     0640
@RC00619 DS    0H                                                  0641
*       RFY                                                        0641
*         RHPTR UNRSTD;                                            0641
@RC00609 DS    0H                                                  0642
*       RFY                                                        0642
*         ISTRH BASED(ADDR(ZOBTEXT)+LENGTH(ISTTH));                0642
*       LSCREQTG=THSNF;             /* SET SEQ. NUMBER               */
         LA    @09,28                                              0643
         ALR   @09,FDBPTR                                          0643
         MVC   LSCREQTG(2,LSCBPTR),THSNF(@09)                      0643
*       FMCZF001='1'B;              /* SET ALLOC REQ'D FLAG IN FMCB  */
         OI    FMCZF001(FMCBPTR),B'10000000'                       0644
*       THDCF=0;                    /* INIT. TH DATA CNT. FLD        */
         SLR   @15,@15                                             0645
         STH   @15,THDCF(,@09)                                     0645
*       RFY                                                        0646
*         HOLDPTR RSTD;                                            0646
*       HOLDPTR=FDBPTR;             /* SAVE FDB POINTER              */
         LR    HOLDPTR,FDBPTR                                      0647
*       DO WHILE HOLDPTR^=0;        /* ROUTINE TO SUM UP THE FDB DATA
*                                      COUNT                         */
         B     @DE00648                                            0648
@DL00648 DS    0H                                                  0649
*         THDCF=THDCF+HOLDPTR->FDBDATCT;                           0649
         LA    @15,28                                              0649
         ALR   @15,FDBPTR                                          0649
         LH    @14,THDCF(,@15)                                     0649
         N     @14,@CF03835                                        0649
         AH    @14,FDBDATCT(,HOLDPTR)                              0649
         STH   @14,THDCF(,@15)                                     0649
*         HOLDPTR=HOLDPTR->FDBFDBA&ZAPBIT;                         0650
         L     @15,FDBFDBA(,HOLDPTR)                               0650
         N     @15,@CF00491                                        0650
         LR    HOLDPTR,@15                                         0650
*       END;                                                       0651
@DE00648 LTR   HOLDPTR,HOLDPTR                                     0651
         BNZ   @DL00648                                            0651
*       RFY                                                        0652
*         HOLDPTR UNRSTD;                                          0652
*       THDCF=THDCF-LENGTH(ISTTH);  /* TO LENGTH OF PIU      @DL03HGE*/
         LA    @09,28                                              0653
         ALR   @09,FDBPTR                                          0653
         LH    @15,THDCF(,@09)                                     0653
         N     @15,@CF03835                                        0653
         SL    @15,@CF02554                                        0653
         STH   @15,THDCF(,@09)                                     0653
*       IF FMCCIPI='1'B×            /* CLEAR OR UNBIND IN PROGRESS ? */
*           FMCUIPI='1'B THEN       /* YES, SHIP OUT THE CLEAR       */
         TM    FMCCIPI(FMCBPTR),B'01100000'                        0654
         BZ    @RF00654                                            0654
*         CALL BFID0SHP;                                           0655
         BAL   @14,BFID0SHP                                        0655
*       ELSE                                                       0656
*         ;                                                        0656
@RF00654 DS    0H                                                  0657
*     END;                                                         0657
*   ELSE                                                           0658
*     DO;                           /* DFC0 MOVE UNSUCCESSFUL        */
         B     @RC00601                                            0658
@RF00601 DS    0H                                                  0659
*/***********************************************************@XM10446*/
*/*                                                          @XM10447*/
*/*      HANDLE INVALID DATA ADDRESS OR LENGTH               @XM10446*/
*/*                                                          @XM10446*/
*/***********************************************************@XM10446*/
*                                                                  0659
*       LCPMNRCD=FRMINDTR;          /* INVALID DATA ADDRESS          */
         MVI   LCPMNRCD(LCPBPTR),X'17'                             0659
*       CALL ISTZBFZ0;              /* ERROR RECOVERY                */
         L     @09,ATCZPSVT(,ATCVTPTR)                             0660
         L     @15,ZPSZBFZ0(,@09)                                  0660
         BALR  @14,@15                                             0660
*       FMCSHEDQ=0;                 /* CLEAR SCHED QUEUE     @XM10446*/
         SLR   @09,@09                                             0661
         ST    @09,FMCSHEDQ(,FMCBPTR)                              0661
*       FSBMJRCD=FRCBLKE;           /* MAJOR=CB ERROR        @XM10446*/
         LA    @15,16                                              0662
         ALR   @15,FDBPTR                                          0662
         MVI   FSBMJRCD(@15),X'04'                                 0662
*       FSBMNRCD=FRMINDTR;          /* MINOR=INVALID DATA    @XM10446*/
         MVI   FSBMNRCD(@15),X'17'                                 0663
*       FSBTHFLD=0;                 /* CLEAR TH FIELD        @XM10446*/
         STH   @09,FSBTHFLD(,@15)                                  0664
*       FSBRHFLD=0;                 /* CLEAR RH FIELD        @XM10446*/
         STCM  @09,7,FSBRHFLD(@15)                                 0665
*       FSBRQTAG=LCPFOSN;           /* SET SEQUENCE ID       @XM10446*/
         MVC   FSBRQTAG(2,@15),LCPFOSN(LCPBPTR)                    0666
*       FSBCID=LCPCID;              /* COPY CID FROM LCPB    @XM10446*/
         MVC   FSBCID(4,@15),LCPCID(LCPBPTR)                       0667
*       FSBLCPB=LCPBPTR;            /* SET FSB LCPB PTR      @XM10446*/
         ST    LCPBPTR,FSBLCPB(,@15)                               0668
*       FSBLCCWA=LCPNXLCW;          /* SET FSB LCCW PTR      @XM10446*/
         L     @09,LCPNXLCW(,LCPBPTR)                              0669
         ST    @09,FSBLCCWA(,@15)                                  0669
*       ZIBFDBS=ZIBFDBZ;            /* SET SYSTEM FDB        @XM10446*/
         MVC   ZIBFDBS(12,FDBPTR),ZIBFDBZ(FDBPTR)                  0670
*       ADDR(ZIBFDBS)->FDBOFSET=DISFDBS;/* SET FDB DISPLACEMENT    0671
*                                                            @XM10446*/
         L     @09,DISFDBS                                         0671
         STH   @09,FDBOFSET+48(,FDBPTR)                            0671
*/*  TPQUE (ADDR(ZIBFSB),FMCPAB2) NORM                               */
*                                                                  0672
*       DO;                                                        0672
*         RFY                                                      0673
*          (GPR00P,                                                0673
*           GPR01P,                                                0673
*           GPR04P,                                                0673
*           GPR05P,                                                0673
*           GPR15P) RSTD;                                          0673
*         GEN REFS(GPR01P) SETS(RPHWORK)                           0674
*             (STM GPR02P,GPR08P,RPHWORK(GPR01P));                 0674
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*         GPR00P=0;                                                0675
         SLR   GPR00P,GPR00P                                       0675
*         GPR15P=ADDR(FMCPAB2);     /* HOLD PAB PTR                  */
         LA    GPR15P,FMCPAB2(,FMCBPTR)                            0676
*         GPR04P=ADDR(ZIBFSB);      /* WORK ELE PTR                  */
         LA    GPR04P,ZIBFSB(,FDBPTR)                              0677
*         GPR05P=GPR15P;            /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       0678
*         CALL ATCLCPTR->ATCAP37->ISTAPC37;                        0679
         L     @09,ATCLCPTR                                        0679
         L     @15,ATCAP37(,@09)                                   0679
         BALR  @14,@15                                             0679
*         GEN(NOPR  0)                                             0680
*         NOSETS NOREFS;                                           0680
         NOPR  0
*         RFY                                                      0681
*          (GPR00P,                                                0681
*           GPR01P,                                                0681
*           GPR04P,                                                0681
*           GPR05P,                                                0681
*           GPR15P) UNRSTD;                                        0681
*       END;                        /* *** END OF TPQUE GENERATION 0682
*                                      QUEUE FSB TO CLIP     @XM10446*/
*     END;                          /* END MOVE FAILURE      @XM10446*/
*/* TPZRETN                                                          */
*                                                                  0684
*   DO;                                                            0684
@RC00601 DS    0H                                                  0685
*     RFY                                                          0685
*      (GPR07P,                                                    0685
*       GPR14P,                                                    0685
*       GPR15P) RSTD;                                              0685
*     GPR13P=ZSAZSVBC;                                             0686
         L     GPR13P,ZSAZSVBC(,GPR13P)                            0686
*     IF GPR13P=0 THEN                                             0687
         LTR   GPR13P,GPR13P                                       0687
         BZ    @RT00687                                            0687
*       ;                           /* TPDVTS ISTZFARR               */
*     ELSE                                                         0689
*       GPR14P=ZSAZSVRR;                                           0689
         L     GPR14P,ZSAZSVRR(,GPR13P)                            0689
*     GEN REFS(ZSAZSVVR)(LM    7,12,ZSAZSVVR+0(13));               0690
@RT00687 DS    0H                                                  0690
         LM    7,12,ZSAZSVVR+0(13)
*     GEN REFS(GPR14P) EXIT NOSEQFLOW(BR    GPR14P);               0691
         BR    GPR14P
*     RFY                                                          0692
*      (GPR07P,                                                    0692
*       GPR14P,                                                    0692
*       GPR15P) UNRSTD;                                            0692
*   END;                                                           0693
*                                                                  0693
*/* END TPZRETN                                                      */
*                                                                  0694
*                                   /* RETURN TO CALLER              */
         EJECT
*                                                                  0694
*/********************************************************************/
*/*                                                                  */
*/* SUBROUTINE-                                                      */
*/*      BFID0CLR                                                    */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      CLEAR WAIT AND AWAIT QUEUE.                                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  0694
*BFID0CLR:                                                         0694
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0694
BFID0CLR DS    0H                                                  0695
*   RFY                                                            0695
*     R14 RSTD;                                                    0695
*   ZCRSVF4=R14;                    /* SAVE REG 14                   */
         L     @15,RPHCRR(,RPHPTR)                                 0696
         L     @15,CRACRR(,@15)                                    0696
         ST    R14,ZCRSVF4(,@15)                                   0696
*   ZCRSVF6=LCPBPTR;                /*                       @XM09587*/
         ST    LCPBPTR,ZCRSVF6(,@15)                               0697
*   RFY                                                            0698
*     R14 UNRSTD;                                                  0698
*   RFY                                                            0699
*     WQEPTR RSTD;                                                 0699
         EJECT
*                                                                  0700
*/********************************************************************/
*/*      CLEAR WAIT QUEUE                                            */
*/********************************************************************/
*                                                                  0700
*   DO UNTIL(WQEPTR=0);             /* CLEAR WAIT QUEUE              */
@DL00700 DS    0H                                                  0701
*/* TPDEQ (,FMCLCPBQ) RETPTR(WQEPTR)                                 */
*                                                                  0701
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       DCL                                                        0702
*         FMZCA026 BIT(32) CONSTANT('80000000'X);                  0702
*       DCL                                                        0703
*         FMZCB026 BIT(32) CONSTANT('7FFFFFFF'X);                  0703
*       RFY                                                        0704
*        (GPR00P,                                                  0704
*         GPR01P,                                                  0704
*         GPR14P,                                                  0704
*         GPR15P) RSTD;                                            0704
*       GPR15P=ADDR(FMCLCPBQ);      /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCLCPBQ(,FMCBPTR)                           0705
*       GPR14P=GPR15P->PABWEQA×FMZCA026;                           0706
         L     @11,@CF00493                                        0706
         L     GPR14P,PABWEQA(,GPR15P)                             0706
         OR    GPR14P,@11                                          0706
*       IF GPR14P=FMZCA026 THEN                                    0707
         CLR   GPR14P,@11                                          0707
         BE    @RT00707                                            0707
*         ;                                                        0708
*       ELSE                                                       0709
*         DO;                                                      0709
*FMZL1026:                                                         0710
*           ;                                                      0710
FMZL1026 DS    0H                                                  0711
*           DO WHILE(GPR14P->WKECHAIN^=FMZCA026);                  0711
         B     @DE00711                                            0711
@DL00711 DS    0H                                                  0712
*             GPR15P=ADDR(GPR14P->WKECHAIN);                       0712
         LA    GPR15P,WKECHAIN(,GPR14P)                            0712
*             GPR14P=GPR15P->PABWEQA;                              0713
         L     GPR14P,PABWEQA(,GPR15P)                             0713
*           END;                                                   0714
@DE00711 L     @11,@CF00493                                        0714
         CL    @11,WKECHAIN(,GPR14P)                               0714
         BNE   @DL00711                                            0714
*           GPR00P=FMZCA026;                                       0715
         LR    GPR00P,@11                                          0715
*           CS(GPR14P,GPR00P,GPR15P->PABWEQA);                     0716
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0716
*           BC(7,FMZL1026);                                        0717
         BC    7,FMZL1026                                          0717
*           GPR14P->WKECHAIN=0;                                    0718
         SLR   @11,@11                                             0718
         ST    @11,WKECHAIN(,GPR14P)                               0718
*         END;                                                     0719
*ISTA0026:                                                         0720
*       ;                                                          0720
@RT00707 DS    0H                                                  0720
ISTA0026 DS    0H                                                  0721
*       GPR14P=GPR14P&FMZCB026;                                    0721
         N     GPR14P,@CF00491                                     0721
*       WQEPTR=GPR14P;                                             0722
         LR    WQEPTR,GPR14P                                       0722
*       RFY                                                        0723
*        (GPR00P,                                                  0723
*         GPR01P,                                                  0723
*         GPR14P,                                                  0723
*         GPR15P) UNRSTD;                                          0723
*     END;                          /* END TPDEQ GENERATION GET NEXT
*                                      WAIT QUEUE ELEMENT            */
*     IF WQEPTR^=0 THEN                                            0725
         LTR   WQEPTR,WQEPTR                                       0725
         BZ    @RF00725                                            0725
*       DO;                         /* ANYTHING ON WAIT QUEUE        */
*         LCPBPTR=ZCRSVF6;          /* RESTORE LCPB POINTER  @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 0727
         L     @11,CRACRR(,@11)                                    0727
         L     LCPBPTR,ZCRSVF6(,@11)                               0727
*         CALL BFID1CLR;            /* PURGE WAIT QUEUE      @XM08862*/
         BAL   @14,BFID1CLR                                        0728
*       END;                        /* END ELEMENT ON WAIT QUEUE     */
*     ELSE                                                         0730
*       ;                           /* NO ELEMENT ON WAIT QUEUE      */
@RF00725 DS    0H                                                  0731
*   END;                            /* WAIT QUEUE CLEARED    @XM19747*/
@DE00700 LTR   WQEPTR,WQEPTR                                       0731
         BNZ   @DL00700                                            0731
         EJECT
*                                                                  0732
*/********************************************************************/
*/*      CLEAR AWAIT QUEUE                                           */
*/********************************************************************/
*                                                                  0732
*   DO UNTIL(WQEPTR=0);             /* CLEAR AWAIT QUEUE             */
@DL00732 DS    0H                                                  0733
*/* TPDEQ (,FMCLCPAQ) RETPTR(WQEPTR)                                 */
*                                                                  0733
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       RFY                                                        0734
*        (GPR00P,                                                  0734
*         GPR01P,                                                  0734
*         GPR14P,                                                  0734
*         GPR15P) RSTD;                                            0734
*       GPR15P=ADDR(FMCLCPAQ);      /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCLCPAQ(,FMCBPTR)                           0735
*       GPR14P=GPR15P->PABWEQA×FMZCA026;                           0736
         L     @11,@CF00493                                        0736
         L     GPR14P,PABWEQA(,GPR15P)                             0736
         OR    GPR14P,@11                                          0736
*       IF GPR14P=FMZCA026 THEN                                    0737
         CLR   GPR14P,@11                                          0737
         BE    @RT00737                                            0737
*         ;                                                        0738
*       ELSE                                                       0739
*         DO;                                                      0739
*FMZL1030:                                                         0740
*           ;                                                      0740
FMZL1030 DS    0H                                                  0741
*           DO WHILE(GPR14P->WKECHAIN^=FMZCA026);                  0741
         B     @DE00741                                            0741
@DL00741 DS    0H                                                  0742
*             GPR15P=ADDR(GPR14P->WKECHAIN);                       0742
         LA    GPR15P,WKECHAIN(,GPR14P)                            0742
*             GPR14P=GPR15P->PABWEQA;                              0743
         L     GPR14P,PABWEQA(,GPR15P)                             0743
*           END;                                                   0744
@DE00741 L     @11,@CF00493                                        0744
         CL    @11,WKECHAIN(,GPR14P)                               0744
         BNE   @DL00741                                            0744
*           GPR00P=FMZCA026;                                       0745
         LR    GPR00P,@11                                          0745
*           CS(GPR14P,GPR00P,GPR15P->PABWEQA);                     0746
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0746
*           BC(7,FMZL1030);                                        0747
         BC    7,FMZL1030                                          0747
*           GPR14P->WKECHAIN=0;                                    0748
         SLR   @11,@11                                             0748
         ST    @11,WKECHAIN(,GPR14P)                               0748
*         END;                                                     0749
*ISTA0030:                                                         0750
*       ;                                                          0750
@RT00737 DS    0H                                                  0750
ISTA0030 DS    0H                                                  0751
*       GPR14P=GPR14P&FMZCB026;                                    0751
         N     GPR14P,@CF00491                                     0751
*       WQEPTR=GPR14P;                                             0752
         LR    WQEPTR,GPR14P                                       0752
*       RFY                                                        0753
*        (GPR00P,                                                  0753
*         GPR01P,                                                  0753
*         GPR14P,                                                  0753
*         GPR15P) UNRSTD;                                          0753
*     END;                          /* END TPDEQ GENERATION GET NEXT
*                                      AWAIT QUEUE ELEMENT   @XM08862*/
*     IF WQEPTR^=0 THEN                                            0755
         LTR   WQEPTR,WQEPTR                                       0755
         BZ    @RF00755                                            0755
*       DO;                         /* IF ANYTHING ON AWAIT QUEUE    */
*         LCPBPTR=ZCRSVF6;          /* RESTORE LCPB POINTER  @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 0757
         L     @11,CRACRR(,@11)                                    0757
         L     LCPBPTR,ZCRSVF6(,@11)                               0757
*         CALL BFID1CLR;            /* PURGE AWAIT QUEUE             */
         BAL   @14,BFID1CLR                                        0758
*       END;                        /* END ELEMENT ON AWAIT QUEUE    */
*     ELSE                                                         0760
*       ;                           /* NO ELEMENT ON AWAIT QUEUE     */
@RF00755 DS    0H                                                  0761
*   END;                            /* AWAIT QUEUE CLEARED   @XM19747*/
@DE00732 LTR   WQEPTR,WQEPTR                                       0761
         BNZ   @DL00732                                            0761
         EJECT
*                                                                  0762
*/********************************************************************/
*/*      CLEAR SCHEDULE QUEUE                                        */
*/********************************************************************/
*                                                                  0762
*   DO UNTIL(WQEPTR=0);             /* CLEAR SCHEDULE QUEUE  @XM19747*/
@DL00762 DS    0H                                                  0763
*/* TPDEQ (,FMCSHEDQ) RETPTR(WQEPTR)                                 */
*                                                                  0763
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       RFY                                                        0764
*        (GPR00P,                                                  0764
*         GPR01P,                                                  0764
*         GPR14P,                                                  0764
*         GPR15P) RSTD;                                            0764
*       GPR15P=ADDR(FMCSHEDQ);      /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCSHEDQ(,FMCBPTR)                           0765
*       GPR14P=GPR15P->PABWEQA×FMZCA026;                           0766
         L     @11,@CF00493                                        0766
         L     GPR14P,PABWEQA(,GPR15P)                             0766
         OR    GPR14P,@11                                          0766
*       IF GPR14P=FMZCA026 THEN                                    0767
         CLR   GPR14P,@11                                          0767
         BE    @RT00767                                            0767
*         ;                                                        0768
*       ELSE                                                       0769
*         DO;                                                      0769
*FMZL1034:                                                         0770
*           ;                                                      0770
FMZL1034 DS    0H                                                  0771
*           DO WHILE(GPR14P->WKECHAIN^=FMZCA026);                  0771
         B     @DE00771                                            0771
@DL00771 DS    0H                                                  0772
*             GPR15P=ADDR(GPR14P->WKECHAIN);                       0772
         LA    GPR15P,WKECHAIN(,GPR14P)                            0772
*             GPR14P=GPR15P->PABWEQA;                              0773
         L     GPR14P,PABWEQA(,GPR15P)                             0773
*           END;                                                   0774
@DE00771 L     @11,@CF00493                                        0774
         CL    @11,WKECHAIN(,GPR14P)                               0774
         BNE   @DL00771                                            0774
*           GPR00P=FMZCA026;                                       0775
         LR    GPR00P,@11                                          0775
*           CS(GPR14P,GPR00P,GPR15P->PABWEQA);                     0776
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0776
*           BC(7,FMZL1034);                                        0777
         BC    7,FMZL1034                                          0777
*           GPR14P->WKECHAIN=0;                                    0778
         SLR   @11,@11                                             0778
         ST    @11,WKECHAIN(,GPR14P)                               0778
*         END;                                                     0779
*ISTA0034:                                                         0780
*       ;                                                          0780
@RT00767 DS    0H                                                  0780
ISTA0034 DS    0H                                                  0781
*       GPR14P=GPR14P&FMZCB026;                                    0781
         N     GPR14P,@CF00491                                     0781
*       WQEPTR=GPR14P;                                             0782
         LR    WQEPTR,GPR14P                                       0782
*       RFY                                                        0783
*        (GPR00P,                                                  0783
*         GPR01P,                                                  0783
*         GPR14P,                                                  0783
*         GPR15P) UNRSTD;                                          0783
*     END;                          /* END TPDEQ GENERATION REMOVE 0784
*                                      ELEMENT FROM SCHEDULE QUEUE 0784
*                                                            @XM19747*/
*     IF WQEPTR^=0 THEN                                            0785
         LTR   WQEPTR,WQEPTR                                       0785
         BZ    @RF00785                                            0785
*       DO;                         /* IF ANY ELEMENT ON QUEUE     0786
*                                                            @XM19747*/
*         ZCRPCOD1=ZCPBUF;          /* ZDFB0 PARAMETER       @XM19747*/
         L     @11,RPHCRR(,RPHPTR)                                 0787
         L     @11,CRACRR(,@11)                                    0787
         MVI   ZCRPCOD1(@11),X'04'                                 0787
*         LCPBPTR=WQEPTR->LSCFDBA;  /* ZDFB0 PARAMETER       @XM19747*/
         L     LCPBPTR,LSCFDBA(,WQEPTR)                            0788
*         CALL ISTZDFB0;            /* BUFFER RELEASE UTILITY      0789
*                                                            @XM19747*/
         L     @11,ATCZPSVT(,ATCVTPTR)                             0789
         L     @15,ZPSZDFB0(,@11)                                  0789
         BALR  @14,@15                                             0789
*         WQEPTR->LSCFDBA=0;        /* CLEAR BUFFER POINTER  @XM19747*/
         SLR   @11,@11                                             0790
         ST    @11,LSCFDBA(,WQEPTR)                                0790
*         LCPBPTR=ZCRSVF6;          /* RESTORE LCPB POINTER  @XM19747*/
         L     @11,RPHCRR(,RPHPTR)                                 0791
         L     @11,CRACRR(,@11)                                    0791
         L     LCPBPTR,ZCRSVF6(,@11)                               0791
*         CALL BFID1CLR;            /* PURGE SCHEDULE QUEUE  @XM19747*/
         BAL   @14,BFID1CLR                                        0792
*       END;                        /* END ELEMENT ON SCHEDULE QUEUE
*                                                            @XM19747*/
*     ELSE                                                         0794
*       ;                           /* NO ELEMENT ON SCHEDULE QUEUE
*                                                            @XM19747*/
@RF00785 DS    0H                                                  0795
*   END;                            /* SCHEDULE QUEUE CLEARED      0795
*                                                            @XM19747*/
@DE00762 LTR   WQEPTR,WQEPTR                                       0795
         BNZ   @DL00762                                            0795
         EJECT
*                                                                  0796
*/********************************************************************/
*/*      CLEAR FMCB TOP                                              */
*/********************************************************************/
*                                                                  0796
*   DO UNTIL(WQEPTR=0);             /* FMCB TOP              @XM19747*/
@DL00796 DS    0H                                                  0797
*/* TPDEQ (,FMCPAB3) RETPTR(WQEPTR)                                  */
*                                                                  0797
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       RFY                                                        0798
*        (GPR00P,                                                  0798
*         GPR01P,                                                  0798
*         GPR14P,                                                  0798
*         GPR15P) RSTD;                                            0798
*       GPR15P=ADDR(FMCPAB3);       /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCPAB3(,FMCBPTR)                            0799
*       GPR14P=GPR15P->PABWEQA×FMZCA026;                           0800
         L     @11,@CF00493                                        0800
         L     GPR14P,PABWEQA(,GPR15P)                             0800
         OR    GPR14P,@11                                          0800
*       IF GPR14P=FMZCA026 THEN                                    0801
         CLR   GPR14P,@11                                          0801
         BE    @RT00801                                            0801
*         ;                                                        0802
*       ELSE                                                       0803
*         DO;                                                      0803
*FMZL1038:                                                         0804
*           ;                                                      0804
FMZL1038 DS    0H                                                  0805
*           DO WHILE(GPR14P->WKECHAIN^=FMZCA026);                  0805
         B     @DE00805                                            0805
@DL00805 DS    0H                                                  0806
*             GPR15P=ADDR(GPR14P->WKECHAIN);                       0806
         LA    GPR15P,WKECHAIN(,GPR14P)                            0806
*             GPR14P=GPR15P->PABWEQA;                              0807
         L     GPR14P,PABWEQA(,GPR15P)                             0807
*           END;                                                   0808
@DE00805 L     @11,@CF00493                                        0808
         CL    @11,WKECHAIN(,GPR14P)                               0808
         BNE   @DL00805                                            0808
*           GPR00P=FMZCA026;                                       0809
         LR    GPR00P,@11                                          0809
*           CS(GPR14P,GPR00P,GPR15P->PABWEQA);                     0810
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0810
*           BC(7,FMZL1038);                                        0811
         BC    7,FMZL1038                                          0811
*           GPR14P->WKECHAIN=0;                                    0812
         SLR   @11,@11                                             0812
         ST    @11,WKECHAIN(,GPR14P)                               0812
*         END;                                                     0813
*ISTA0038:                                                         0814
*       ;                                                          0814
@RT00801 DS    0H                                                  0814
ISTA0038 DS    0H                                                  0815
*       GPR14P=GPR14P&FMZCB026;                                    0815
         N     GPR14P,@CF00491                                     0815
*       WQEPTR=GPR14P;                                             0816
         LR    WQEPTR,GPR14P                                       0816
*       RFY                                                        0817
*        (GPR00P,                                                  0817
*         GPR01P,                                                  0817
*         GPR14P,                                                  0817
*         GPR15P) UNRSTD;                                          0817
*     END;                          /* END TPDEQ GENERATION REMOVE 0818
*                                      ELEMENT FROM FMCB TOP @XM19747*/
*     IF WQEPTR^=0 THEN                                            0819
         LTR   WQEPTR,WQEPTR                                       0819
         BZ    @RF00819                                            0819
*       DO;                         /* IF ANY ELEMENT FMCB TOP     0820
*                                                            @XM19747*/
*         LCPBPTR=ZCRSVF6;          /* RESTORE LCPB POINTER  @XM19747*/
         L     @11,RPHCRR(,RPHPTR)                                 0821
         L     @11,CRACRR(,@11)                                    0821
         L     LCPBPTR,ZCRSVF6(,@11)                               0821
*         CALL BFID1CLR;            /* PURGE FMCB TOP        @XM19747*/
         BAL   @14,BFID1CLR                                        0822
*       END;                        /* END ELEMENT ON FMCB TOP     0823
*                                                            @XM19747*/
*     ELSE                                                         0824
*       ;                           /* NO ELEMENT ON FMCB TOP      0824
*                                                            @XM19747*/
@RF00819 DS    0H                                                  0825
*   END;                            /* FMCB TOP CLEARED      @XM19747*/
@DE00796 LTR   WQEPTR,WQEPTR                                       0825
         BNZ   @DL00796                                            0825
         EJECT
*                                                                  0826
*/********************************************************************/
*/*      CLEAR ASYNCHRONOUS SCHEDULE QUEUE                           */
*/********************************************************************/
*                                                                  0826
*   DO UNTIL(WQEPTR=0);             /* CLEAR ASYNCHRONOUS SCHEDULE 0826
*                                      QUEUE                 @XM19747*/
@DL00826 DS    0H                                                  0827
*/* TPDEQ (,FMCSHEAQ) RETPTR(WQEPTR)                                 */
*                                                                  0827
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       RFY                                                        0828
*        (GPR00P,                                                  0828
*         GPR01P,                                                  0828
*         GPR14P,                                                  0828
*         GPR15P) RSTD;                                            0828
*       GPR15P=ADDR(FMCSHEAQ);      /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCSHEAQ(,FMCBPTR)                           0829
*       GPR14P=GPR15P->PABWEQA×FMZCA026;                           0830
         L     @11,@CF00493                                        0830
         L     GPR14P,PABWEQA(,GPR15P)                             0830
         OR    GPR14P,@11                                          0830
*       IF GPR14P=FMZCA026 THEN                                    0831
         CLR   GPR14P,@11                                          0831
         BE    @RT00831                                            0831
*         ;                                                        0832
*       ELSE                                                       0833
*         DO;                                                      0833
*FMZL1042:                                                         0834
*           ;                                                      0834
FMZL1042 DS    0H                                                  0835
*           DO WHILE(GPR14P->WKECHAIN^=FMZCA026);                  0835
         B     @DE00835                                            0835
@DL00835 DS    0H                                                  0836
*             GPR15P=ADDR(GPR14P->WKECHAIN);                       0836
         LA    GPR15P,WKECHAIN(,GPR14P)                            0836
*             GPR14P=GPR15P->PABWEQA;                              0837
         L     GPR14P,PABWEQA(,GPR15P)                             0837
*           END;                                                   0838
@DE00835 L     @11,@CF00493                                        0838
         CL    @11,WKECHAIN(,GPR14P)                               0838
         BNE   @DL00835                                            0838
*           GPR00P=FMZCA026;                                       0839
         LR    GPR00P,@11                                          0839
*           CS(GPR14P,GPR00P,GPR15P->PABWEQA);                     0840
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0840
*           BC(7,FMZL1042);                                        0841
         BC    7,FMZL1042                                          0841
*           GPR14P->WKECHAIN=0;                                    0842
         SLR   @11,@11                                             0842
         ST    @11,WKECHAIN(,GPR14P)                               0842
*         END;                                                     0843
*ISTA0042:                                                         0844
*       ;                                                          0844
@RT00831 DS    0H                                                  0844
ISTA0042 DS    0H                                                  0845
*       GPR14P=GPR14P&FMZCB026;                                    0845
         N     GPR14P,@CF00491                                     0845
*       WQEPTR=GPR14P;                                             0846
         LR    WQEPTR,GPR14P                                       0846
*       RFY                                                        0847
*        (GPR00P,                                                  0847
*         GPR01P,                                                  0847
*         GPR14P,                                                  0847
*         GPR15P) UNRSTD;                                          0847
*     END;                          /* END TPDEQ GENERATION REMOVE 0848
*                                      ELEMENT FROM ASCHED QUEUE   0848
*                                                            @XM19747*/
*     IF WQEPTR^=0 THEN                                            0849
         LTR   WQEPTR,WQEPTR                                       0849
         BZ    @RF00849                                            0849
*       DO;                         /* IF ANY ELEMENT ON QUEUE     0850
*                                                            @XM19747*/
*         LCPBPTR=ZCRSVF6;          /* RESTORE LCPB POINTER  @XM19747*/
         L     @11,RPHCRR(,RPHPTR)                                 0851
         L     @11,CRACRR(,@11)                                    0851
         L     LCPBPTR,ZCRSVF6(,@11)                               0851
*         CALL BFID1CLR;            /* PURGE ASYNCHRONOUS SCHEDULE 0852
*                                      QUEUE                 @XM19747*/
         BAL   @14,BFID1CLR                                        0852
*       END;                        /* END ELEMENT ON ASYNCHRONOUS 0853
*                                      SCHEDULE QUEUE        @XM19747*/
*     ELSE                                                         0854
*       ;                           /* NO ELEMENT ON ASYNCHRONOUS  0854
*                                      SCHEDULE QUEUE        @XM19747*/
@RF00849 DS    0H                                                  0855
*   END;                            /* ASYNCHRONOUS SCHEDULE QUEUE 0855
*                                      CLEARED               @XM19747*/
@DE00826 LTR   WQEPTR,WQEPTR                                       0855
         BNZ   @DL00826                                            0855
         EJECT
*                                                                  0856
*/********************************************************************/
*/*      CLEAR ATOP SIDE QUEUE                                       */
*/********************************************************************/
*                                                                  0856
*   DO UNTIL(WQEPTR=0);             /* CLEAR ATOP SIDE QUEUE @XM19747*/
@DL00856 DS    0H                                                  0857
*     LCPBPTR=ZCRSVF6;              /* RESTORE LCPB POINTER  @XM19747*/
         L     @11,RPHCRR(,RPHPTR)                                 0857
         L     @11,CRACRR(,@11)                                    0857
         L     LCPBPTR,ZCRSVF6(,@11)                               0857
*/* TPDEQ (,LCPRSTQH) RETPTR(WQEPTR)RESET(YES)                       */
*                                                                  0858
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       RFY                                                        0859
*        (GPR00P,                                                  0859
*         GPR01P,                                                  0859
*         GPR14P,                                                  0859
*         GPR15P) RSTD;                                            0859
*       GPR15P=ADDR(LCPRSTQH);      /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,LCPRSTQH(,LCPBPTR)                           0860
*       RFY                                                        0861
*        (GPR02P,                                                  0861
*         GPR03P) RSTD;                                            0861
*       STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                  0862
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0862
*       IF GPR15P->PABWEQA=PABWEQG1×GPR15P->PABWEQA=0 THEN         0863
         L     @11,PABWEQA(,GPR15P)                                0863
         CL    @11,@CF00493                                        0863
         BE    @RT00863                                            0863
         LTR   @11,@11                                             0863
         BNZ   @RF00863                                            0863
@RT00863 DS    0H                                                  0864
*         GPR14P=PABWEQG1;                                         0864
         L     GPR14P,@CF00493                                     0864
*       ELSE                                                       0865
*         DO;                                                      0865
         B     @RC00863                                            0865
@RF00863 DS    0H                                                  0866
*FMZL1046:                                                         0866
*           ;                                                      0866
FMZL1046 DS    0H                                                  0867
*           GPR14P=GPR15P->PABWEQA;                                0867
         L     GPR14P,PABWEQA(,GPR15P)                             0867
*           IF GPR14P->WKECHAIN=PABWEQG1 THEN                      0868
         L     @11,@CF00493                                        0868
         CL    @11,WKECHAIN(,GPR14P)                               0868
         BNE   @RF00868                                            0868
*             DO;                                                  0869
*               IF GPR14P->FSBTYPE=FSTYPE×GPR14P->LCPRESET='0'B×GPR14P
*                   ->LCPRSTQH=PABWEQG1 THEN                       0870
         CLI   FSBTYPE(GPR14P),X'02'                               0870
         BE    @RT00870                                            0870
         TM    LCPRESET(GPR14P),B'10000000'                        0870
         BZ    @RT00870                                            0870
         CL    @11,LCPRSTQH(,GPR14P)                               0870
         BNE   @RF00870                                            0870
@RT00870 DS    0H                                                  0871
*                 DO;                                              0871
*                   GPR02P=PABWEQG1;                               0872
         L     GPR02P,@CF00493                                     0872
*                   CS(GPR14P,GPR02P,GPR15P->PABWEQA);             0873
         CS    GPR14P,@02,PABWEQA(GPR15P)                          0873
*                   BC(7,FMZL1046);                                0874
         BC    7,FMZL1046                                          0874
*                   GPR14P->WKECHAIN=0;                            0875
         SLR   @11,@11                                             0875
         ST    @11,WKECHAIN(,GPR14P)                               0875
*                 END;                                             0876
*               ELSE                                               0877
*                 DO;                                              0877
         B     @RC00870                                            0877
@RF00870 DS    0H                                                  0878
*                   GPR15P=ADDR(GPR14P->LCPRSTQH);                 0878
         LA    GPR15P,LCPRSTQH(,GPR14P)                            0878
*                   GOTO FMZL1046;                                 0879
         B     FMZL1046                                            0879
*                 END;                                             0880
*             END;                                                 0881
*           ELSE                                                   0882
*             DO;                                                  0882
         B     @RC00868                                            0882
@RF00868 DS    0H                                                  0883
*               GPR15P=ADDR(GPR14P->WKECHAIN);                     0883
         LA    GPR15P,WKECHAIN(,GPR14P)                            0883
*               GOTO FMZL1046;                                     0884
         B     FMZL1046                                            0884
*             END;                                                 0885
*         END;                                                     0886
@RC00868 DS    0H                                                  0887
*ISTA0046:                                                         0887
*       ;                                                          0887
@RC00863 DS    0H                                                  0887
ISTA0046 DS    0H                                                  0888
*       LM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                   0888
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0888
*       RFY                                                        0889
*        (GPR02P,                                                  0889
*         GPR03P) UNRSTD;                                          0889
*       GPR14P=GPR14P&FMZCB026;                                    0890
         N     GPR14P,@CF00491                                     0890
*       WQEPTR=GPR14P;                                             0891
         LR    WQEPTR,GPR14P                                       0891
*       RFY                                                        0892
*        (GPR00P,                                                  0892
*         GPR01P,                                                  0892
*         GPR14P,                                                  0892
*         GPR15P) UNRSTD;                                          0892
*     END;                          /* END TPDEQ GENERATION REMOVE 0893
*                                      ELEMENT FROM ELEMENT SIDEQ  0893
*                                                            @XM19747*/
*     IF WQEPTR^=0 THEN             /* IF ANY ELEMENT ON FMCB ATOP 0894
*                                      SIDE QUEUE            @XM19747*/
         LTR   WQEPTR,WQEPTR                                       0894
         BZ    @RF00894                                            0894
*       IF WQEPTR->LCPTYPE=FSTYPE THEN                             0895
         CLI   LCPTYPE(WQEPTR),X'02'                               0895
         BNE   @RF00895                                            0895
*         DO;                       /* IF ELEMENT IS A FSB   @XM19747*/
*           LCPBPTR=WQEPTR;         /* ADDRESS FSB           @XM19747*/
         LR    LCPBPTR,WQEPTR                                      0897
*           CALL ISTZBFSC;          /* PROCESS FSB           @XM19747*/
         L     @11,PABDVTA+95(,FMCBPTR)                            0898
         LA    @11,0(,@11)                                         0898
         L     @15,ZLBZBFSC(,@11)                                  0898
         BALR  @14,@15                                             0898
*         END;                      /* END ELEMENT A FSB     @XM19747*/
*       ELSE                        /* ELEMENT IS A LCPB     @XM19747*/
*         CALL BFID1CLR;            /* PURGE SIDE QUEUE ELEMENT    0900
*                                                            @XM19747*/
         B     @RC00895                                            0900
@RF00895 BAL   @14,BFID1CLR                                        0900
*     ELSE                                                         0901
*       ;                           /* NO ELEMENT ON FMCB ATOP SIDE
*                                      QUEUE                 @XM19747*/
@RF00894 DS    0H                                                  0902
*   END;                            /* ATOP SIDE QUEUE CLEARED     0902
*                                                            @XM19747*/
@RC00894 DS    0H                                                  0902
@DE00856 LTR   WQEPTR,WQEPTR                                       0902
         BNZ   @DL00856                                            0902
*   RFY                                                            0903
*     WQEPTR UNRSTD;                                               0903
*   RFY                                                            0904
*     R14 RSTD;                                                    0904
*   LCPBPTR=ZCRSVF6;                /* RESTORE PTR(LCPB)     @XM09587*/
         L     @15,RPHCRR(,RPHPTR)                                 0905
         L     @15,CRACRR(,@15)                                    0905
         L     LCPBPTR,ZCRSVF6(,@15)                               0905
*   R14=ZCRSVF4;                                                   0906
         L     R14,ZCRSVF4(,@15)                                   0906
*   RFY                                                            0907
*     R14 UNRSTD;                                                  0907
*   END BFID0CLR;                                                  0908
@EL00002 DS    0H                                                  0908
@EF00002 DS    0H                                                  0908
@ER00002 BR    @14                                                 0908
         EJECT
*                                                                  0909
*/********************************************************************/
*/*                                                                  */
*/* SUBROUTINE-                                                      */
*/*      BFID1CLR                                                    */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      POST BACK THE COMPLETION FOR A CLEARED REQUEST.             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0909
*BFID1CLR:                                                         0909
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0909
BFID1CLR DS    0H                                                  0910
*   RFY                                                            0910
*     R14 RSTD;                                                    0910
*   ZCRSVF5=R14;                    /* SAVE RETURN REG               */
         L     @15,RPHCRR(,RPHPTR)                                 0911
         L     @15,CRACRR(,@15)                                    0911
         ST    R14,ZCRSVF5(,@15)                                   0911
*   RFY                                                            0912
*     R14 UNRSTD;                                                  0912
*   RFY                                                            0913
*     WQEPTR RSTD;                                                 0913
*   RFY                                                            0914
*     ISTLSCB BASED(WQEPTR);                                       0914
*   IF LSCFDBA=0×LSCFDBA='80000000'X THEN/*                  @ZA16243*/
         L     @11,LSCFDBA(,WQEPTR)                                0915
         LTR   @11,@11                                             0915
         BZ    @RT00915                                            0915
         CL    @11,@CF00493                                        0915
         BNE   @RF00915                                            0915
@RT00915 DS    0H                                                  0916
*     DO;                           /* IF NO FSB                     */
*       ZCRPCOD1=0;                 /* ZDFA0 PARAMETER               */
         L     @11,RPHCRR(,RPHPTR)                                 0917
         L     @11,CRACRR(,@11)                                    0917
         MVI   ZCRPCOD1(@11),X'00'                                 0917
*       ZCRPFSB='1'B;               /* ZDFA0 PARAMETER               */
         OI    ZCRPFSB(@11),B'00100000'                            0918
*       CALL ISTZDFA0;              /* BUFFER ALLOCATION UTILITY     */
         L     @11,ATCZPSVT(,ATCVTPTR)                             0919
         L     @15,ZPSZDFA0(,@11)                                  0919
         BALR  @14,@15                                             0919
*       LSCFDBA=NEWFSB;             /* ATTACH FSB TO ELEMENT @XM19013*/
         L     @11,NEWFSB(,RPHPTR)                                 0920
         ST    @11,LSCFDBA(,WQEPTR)                                0920
*       RFY                                                        0921
*         ISTFSB BASED(LSCFDBA);    /* BASE FSB FROM LCPB    @XM19013*/
*     END;                          /* END FSB ALLOCATION    @XM19013*/
*   ELSE                            /* IF ALREADY ATTACHED   @XM19013*/
*     ADDR(FSBFDB)->FDBOFSET=DISFDBS;/* SET FDB OFFSET FOR CONTROL 0923
*                                      LAYER                 @XM19013*/
*                                                                  0923
         B     @RC00915                                            0923
@RF00915 L     @11,LSCFDBA(,WQEPTR)                                0923
         L     @09,DISFDBS                                         0923
         STH   @09,FDBOFSET+32(,@11)                               0923
*   /*****************************************************************/
*   /*                                                               */
*   /* LOGIC FOR INITIALIZING THE FSB MADE COMMON WHETHER OR NOT THE */
*   /* FSB WAS ALLOCATED BY ZBFID                            @XM19013*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0924
*   IF LSCTYPE=LSTYPE THEN                                         0924
@RC00915 CLI   LSCTYPE(WQEPTR),X'DF'                               0924
         BNE   @RF00924                                            0924
*     DO;                           /* IF INPUT AN LSCB              */
*       FSBLCPB=LSCLCPBA;           /* ADDRESS LCPB FROM LSCB        */
         L     @11,LSCFDBA(,WQEPTR)                                0926
         L     @09,LSCLCPBA(,WQEPTR)                               0926
         ST    @09,FSBLCPB(,@11)                                   0926
*       FSBCID=LSCLCPBA->LCPCID;    /* SET CID IN FSB                */
         MVC   FSBCID(4,@11),LCPCID(@09)                           0927
*     END;                          /* END LSCB PROCESS              */
*   ELSE                                                           0929
*     DO;                           /* NOT LSCB - IS LCPB            */
         B     @RC00924                                            0929
@RF00924 DS    0H                                                  0930
*       FSBLCPB=WQEPTR;             /* SET LCPB PTR IN FSB           */
         L     @11,LSCFDBA(,WQEPTR)                                0930
         ST    WQEPTR,FSBLCPB(,@11)                                0930
*       FSBCID=WQEPTR->LCPCID;      /* SET CID IN FSB                */
         MVC   FSBCID(4,@11),LCPCID(WQEPTR)                        0931
*     END;                          /* END LCPB PROCESSING           */
*   FSBLCCWA=LSCLCCWA;              /* SET LCCW PTR IN FSB           */
@RC00924 L     @11,LSCFDBA(,WQEPTR)                                0933
         L     @09,LSCLCCWA(,WQEPTR)                               0933
         ST    @09,FSBLCCWA(,@11)                                  0933
*   ADDR(FSBFDB)->FDBFDBA=0;        /* CLEAR CHAIN POINTER   @XM19013*/
         SLR   @09,@09                                             0934
         LA    @15,32                                              0934
         ALR   @15,@11                                             0934
         ST    @09,FDBFDBA(,@15)                                   0934
*   ADDR(FSBFDB)->FDBDATAA=0;       /* CLEAR DATA POINTER    @XM19013*/
         ST    @09,FDBDATAA(,@15)                                  0935
*   ADDR(FSBFDB)->FDBDATCT=0;       /* CLEAR DATA COUNT      @XM19013*/
         STH   @09,FDBDATCT(,@15)                                  0936
*   FSBMJRCD=FRPURGE;               /* INDICATE OPERATION PURGED     */
         MVI   FSBMJRCD(@11),X'1C'                                 0937
*   FSBMNRCD=LCPRUCNT;              /* REASON CODE           @XL03HEN*/
         MVC   FSBMNRCD(1,@11),LCPRUCNT(LCPBPTR)                   0938
*   LCPBPTR=FSBLCPB;                /* ADDRESS LCPB          @XM19013*/
         L     LCPBPTR,FSBLCPB(,@11)                               0939
*   IF LCPTYPE=LCPETYPE THEN                                       0940
         CLI   LCPTYPE(LCPBPTR),X'40'                              0940
         BNE   @RF00940                                            0940
*     DO;                           /* IF SESSION CONTROL    @XM19013*/
*       FMCUIPI='0'B;               /* CLEAR UNBIND IN PROGRESS FLAG
*                                                            @XM19475*/
         NI    FMCUIPI(FMCBPTR),B'11011111'                        0942
*       ZCRSVF8=LCPBPTR;            /* SAVE LCPB POINTER     @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 0943
         L     @11,CRACRR(,@11)                                    0943
         ST    LCPBPTR,ZCRSVF8(,@11)                               0943
*       IF LSCTYPE=LSTYPE THEN                                     0944
         CLI   LSCTYPE(WQEPTR),X'DF'                               0944
         BNE   @RF00944                                            0944
*         DO;                       /* IF CLEAR/UNBIND CLEAR SEQUENCE
*                                                            @XM19013*/
*/* TPDEQ (LCPBPTR,FMCPAB5) RESET(RECON)                             */
*                                                                  0946
*           DO;                     /* BEGIN TPDEQ CODE GENERATION   */
*             RFY                                                  0947
*              (GPR00P,                                            0947
*               GPR01P,                                            0947
*               GPR14P,                                            0947
*               GPR15P) RSTD;                                      0947
*             GPR15P=ADDR(FMCPAB5); /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCPAB5(,FMCBPTR)                            0948
*             RFY                                                  0949
*              (GPR02P,                                            0949
*               GPR03P) RSTD;                                      0949
*             STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));            0950
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0950
*             GPR03P=LCPBPTR×FMZCA026;                             0951
         L     @11,@CF00493                                        0951
         LR    GPR03P,LCPBPTR                                      0951
         OR    GPR03P,@11                                          0951
*             GPR14P=FMZCA026;                                     0952
         LR    GPR14P,@11                                          0952
*             GPR15P=ADDR(GPR15P->PABWEQA);                        0953
*FMZL1053:                                                         0954
*             ;                                                    0954
FMZL1053 DS    0H                                                  0955
*             GPR02P=GPR15P->PABWEQA×FMZCA026;                     0955
         L     GPR02P,PABWEQA(,GPR15P)                             0955
         O     GPR02P,@CF00493                                     0955
*             DO WHILE(GPR02P^=GPR14P);                            0956
         B     @DE00956                                            0956
@DL00956 DS    0H                                                  0957
*               DO WHILE((GPR02P->WKECHAIN)^=GPR14P);              0957
         B     @DE00957                                            0957
@DL00957 DS    0H                                                  0958
*                 GPR15P=ADDR(GPR02P->WKECHAIN);                   0958
         LA    GPR15P,WKECHAIN(,GPR02P)                            0958
*                 GPR02P=GPR02P->WKECHAIN;                         0959
         L     GPR02P,WKECHAIN(,GPR02P)                            0959
*               END;                                               0960
@DE00957 C     GPR14P,WKECHAIN(,GPR02P)                            0960
         BNE   @DL00957                                            0960
*               IF GPR02P=GPR03P THEN                              0961
         CR    GPR02P,GPR03P                                       0961
         BNE   @RF00961                                            0961
*                 DO;                                              0962
*                   GPR00P=GPR02P->LCPRSTQH;                       0963
         L     GPR00P,LCPRSTQH(,GPR02P)                            0963
*                   CS(GPR02P,GPR00P,GPR15P->PABWEQA);             0964
         CS    GPR02P,@00,PABWEQA(GPR15P)                          0964
*                   BC(7,FMZL3053);                                0965
         BC    7,FMZL3053                                          0965
*                   GPR02P->LCPRSTQH='80000000'X;                  0966
         MVC   LCPRSTQH(4,GPR02P),@CF00493                         0966
*                   GPR14P=GPR02P;                                 0967
         LR    GPR14P,GPR02P                                       0967
*                   GPR14P->WKECHAIN=0;                            0968
         SLR   @11,@11                                             0968
         ST    @11,WKECHAIN(,GPR14P)                               0968
*                 END;                                             0969
*               ELSE                                               0970
*                 DO;                                              0970
         B     @RC00961                                            0970
@RF00961 DS    0H                                                  0971
*                   IF GPR02P->FSBTYPE=FSTYPE THEN                 0971
         CLI   FSBTYPE(GPR02P),X'02'                               0971
         BNE   @RF00971                                            0971
*                     DO;                                          0972
*                       GPR02P=GPR14P;                             0973
         LR    GPR02P,GPR14P                                       0973
*                       GOTO FMZL3053;                             0974
         B     FMZL3053                                            0974
*                     END;                                         0975
*                   GPR15P=ADDR(GPR02P->LCPRSTQH);                 0976
@RF00971 LA    GPR15P,LCPRSTQH(,GPR02P)                            0976
*                   GOTO FMZL1053;                                 0977
         B     FMZL1053                                            0977
*                 END;                                             0978
*FMZL3053:                                                         0979
*               ;                                                  0979
@RC00961 DS    0H                                                  0979
FMZL3053 DS    0H                                                  0980
*             END;                                                 0980
@DE00956 CR    GPR02P,GPR14P                                       0980
         BNE   @DL00956                                            0980
*ISTA0053:                                                         0981
*             ;                                                    0981
ISTA0053 DS    0H                                                  0982
*             LM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));             0982
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0982
*             RFY                                                  0983
*              (GPR02P,                                            0983
*               GPR03P) UNRSTD;                                    0983
*             GPR14P=GPR14P&FMZCB026;                              0984
         N     GPR14P,@CF00491                                     0984
*             GPR01P->RPHWEA=GPR14P;                               0985
         ST    GPR14P,RPHWEA(,GPR01P)                              0985
*             RFY                                                  0986
*              (GPR00P,                                            0986
*               GPR01P,                                            0986
*               GPR14P,                                            0986
*               GPR15P) UNRSTD;                                    0986
*           END;                    /* END TPDEQ GENERATION REMOVE 0987
*                                      CLEAR/UNBIND LCPB FROM ATOP 0987
*                                      ELEMENT SIDE QUEUE    @XM19013*/
*           LCPFDBA=LSCFDBA;        /* COPY FSB TO LCPB      @XM19013*/
         L     @11,LSCFDBA(,WQEPTR)                                0988
         ST    @11,LCPFDBA(,LCPBPTR)                               0988
*           LSCFDBA=0;              /* CLEAR FSB POINTER IN LSCB   0989
*                                                            @XM19013*/
         SLR   @11,@11                                             0989
         ST    @11,LSCFDBA(,WQEPTR)                                0989
*           ZCRPCOD1=ZCPLSCB;       /* ZDFB0 PARAMETER       @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 0990
         L     @11,CRACRR(,@11)                                    0990
         MVI   ZCRPCOD1(@11),X'08'                                 0990
*           LCPBPTR=WQEPTR;         /* ZDFB0 PARAMETER       @XM19013*/
         LR    LCPBPTR,WQEPTR                                      0991
*           CALL ISTZDFB0;          /* BUFFER RELEASE UTILITY      0992
*                                                            @XM19013*/
         L     @11,ATCZPSVT(,ATCVTPTR)                             0992
         L     @15,ZPSZDFB0(,@11)                                  0992
         BALR  @14,@15                                             0992
*           LCPBPTR=ZCRSVF8;        /* RESTORE LCPB POINTER  @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 0993
         L     @11,CRACRR(,@11)                                    0993
         L     LCPBPTR,ZCRSVF8(,@11)                               0993
*         END;                      /* END CLEAR OF CLEAR    @XM19013*/
*       ELSE                                                       0995
*         ;                         /* NOT CLEAR OF CLEAR    @XM19013*/
@RF00944 DS    0H                                                  0996
*       IF LCPTLBPI='1'B THEN                                      0996
         TM    LCPTLBPI(LCPBPTR),B'00010000'                       0996
         BNO   @RF00996                                            0996
*         DO;                       /* IF TLB PRESENT        @XM19013*/
*           IF LCPTLBAD->TLBFSBA^=0 THEN                           0998
         L     @11,LCPTLBAD(,LCPBPTR)                              0998
         L     @11,TLBFSBA(,@11)                                   0998
         LTR   @11,@11                                             0998
         BZ    @RF00998                                            0998
*             DO;                   /* IF TLB FSB PRESENT    @XM19013*/
*               ZCRPCOD1=ZCPBUF;    /* ZDFB0 PARAMETER       @XM19013*/
         L     @09,RPHCRR(,RPHPTR)                                 1000
         L     @09,CRACRR(,@09)                                    1000
         MVI   ZCRPCOD1(@09),X'04'                                 1000
*               LCPBPTR=LCPTLBAD->TLBFSBA-DISFSB;/* ZDFB0 PARAMETER
*                                      BUFFER ADDRESS        @XM19013*/
         SL    @11,DISFSB                                          1001
         LR    LCPBPTR,@11                                         1001
*               CALL ISTZDFB0;      /* RELEASE TLB FSB       @XM19013*/
         L     @11,ATCZPSVT(,ATCVTPTR)                             1002
         L     @15,ZPSZDFB0(,@11)                                  1002
         BALR  @14,@15                                             1002
*               LCPBPTR=ZCRSVF8;    /* RESTORE LCPB PTR      @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 1003
         L     @11,CRACRR(,@11)                                    1003
         L     LCPBPTR,ZCRSVF8(,@11)                               1003
*             END;                  /* END TLB FSB RELEASE   @XM19013*/
*           ELSE                                                   1005
*             ;                     /* NO TLB FSB PRESENT    @XM19013*/
@RF00998 DS    0H                                                  1006
*           LCPBPTR=LCPTLBAD-LENGTH(ISTBFHDR);/* ADDRESS TLB TO BE 1006
*                                      RELEASED              @XM19013*/
*                                                                  1006
         L     @11,LCPTLBAD(,LCPBPTR)                              1006
         SL    @11,@CF00071                                        1006
         LR    LCPBPTR,@11                                         1006
*           /*********************************************************/
*           /*                                                       */
*           /* RELSTORE BUFADDR(LCPBPTR)                             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1007
*           DO;                                                    1007
*                                                                  1007
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  1008
*             RFY                                                  1008
*              (GPR02P,                                            1008
*               GPR03P,                                            1008
*               GPR04P,                                            1008
*               GPR15P) RSTD;                                      1008
*             RFY                                                  1009
*              (GPR01P,                                            1009
*               GPR13P) RSTD;                                      1009
*             GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);   1010
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  1011
*               GPR13P UNRSTD;                                     1011
*             GPR04P=LCPBPTR;                                      1012
         LR    GPR04P,LCPBPTR                                      1012
*             DCL                                                  1013
*               1 FMZA0060 FIXED(31) STATIC LOCAL,                 1013
*                2 * FIXED(8) INIT(64),                            1013
*                2 * PTR(24) INIT(0);                              1013
*             GPR03F=FMZA0060;                                     1014
         L     GPR03F,FMZA0060                                     1014
*             DO;                   /* LISATCVT                    1015
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1016
*             END;                  /* LISATCVT                      */
*             GPR02P=GPR15P->ATCBPDA;                              1018
         L     GPR02P,ATCBPDA(,GPR15P)                             1018
*             GPR15P=GPR15P->ATCSMRS;                              1019
         L     GPR15P,ATCSMRS(,GPR15P)                             1019
*             DCL                                                  1020
*               FMZL0060 BASED(GPR15P) LABEL VALUERANGE(*);        1020
*             CALL FMZL0060;                                       1021
         BALR  @14,@15                                             1021
*             RFY                                                  1022
*               GPR13P RSTD;                                       1022
*             GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);   1023
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  1024
*              (GPR01P,                                            1024
*               GPR13P) UNRSTD;                                    1024
*             RFY                                                  1025
*              (GPR02P,                                            1025
*               GPR03P,                                            1025
*               GPR04P,                                            1025
*               GPR15P) UNRSTD;                                    1025
*           END;                    /* *********END OF RELSTORE    1026
*                                      EXPANSION********* RELEASE THE
*                                      TLB                   @XM19013*/
*           LCPBPTR=ZCRSVF8;        /* RESTORE LCPB PTR      @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 1027
         L     @11,CRACRR(,@11)                                    1027
         L     LCPBPTR,ZCRSVF8(,@11)                               1027
*           LCPTLBPI='0'B;          /* INDICATE TLB GONE     @XM19013*/
         NI    LCPTLBPI(LCPBPTR),B'11101111'                       1028
*           LCPTLBAD=0;             /* CLEAR TLB POINTER     @XM19013*/
         SLR   @11,@11                                             1029
         ST    @11,LCPTLBAD(,LCPBPTR)                              1029
*         END;                      /* END TLB PRESENT       @XM19013*/
*       ELSE                                                       1031
*         ;                         /* TLB NOT PRESENT       @XM19013*/
@RF00996 DS    0H                                                  1032
*       IF LCPFTYPE=LCRPHFT THEN                                   1032
         TM    LCPFTYPE(LCPBPTR),B'10000000'                       1032
         BNO   @RF01032                                            1032
*         DO;                       /* IF POST ANSWER        @XM19013*/
*           LCPRPHA->RPHWEA=LCPFDBA;/* SET FSB IN RPH        @XM19013*/
         L     @11,LCPRPHA(,LCPBPTR)                               1034
         L     @09,LCPFDBA(,LCPBPTR)                               1034
         ST    @09,RPHWEA(,@11)                                    1034
*           LCPFDBA=0;              /* CLEAR BUFFER PTR      @XM19013*/
         SLR   @11,@11                                             1035
         ST    @11,LCPFDBA(,LCPBPTR)                               1035
*/*TPPOST  (LCPRPHA)                                                 */
*                                                                  1036
*           DO;                     /* DECLARE AND RESTRICT REGS     */
*             RESPECIFY                                            1037
*              (GPR00F,                                            1037
*               GPR01F,                                            1037
*               GPR04F,                                            1037
*               GPR05F,                                            1037
*               GPR06F,                                            1037
*               GPR14F,                                            1037
*               GPR15F) RSTD;       /* 0,1,4,5,6,14, AND 15          */
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTRPH)                                 */
*/* END OF ATBUILD                                                   */
*                                                                  1038
*             GEN REFS(GPR01P,GPR02F,GPR06F) SETS(RPHWORK);        1038
        STM GPR02F,GPR06F,RPHWORK(GPR01P)
*             GPR04F=LCPRPHA;       /* LOAD RPH PNTR INTO REG 4      */
         L     GPR04F,LCPRPHA(,LCPBPTR)                            1039
*             RFY                                                  1040
*               GPR03F RSTD;                                       1040
*             GPR03F=0;                                            1041
         SLR   @11,@11                                             1041
         LR    GPR03F,@11                                          1041
*             DO;                   /* MODESET SAVEKEY(GPR06F)     1042
*                                      KEYADDR(GPR03F)             1042
*                                      WORKREG(GPR05F)               */
*               RESPECIFY                                          1043
*                (GPR02F) RESTRICTED;                              1043
*               GPR05F=GPR02F;      /* SAVE REGISTER 2               */
         LR    GPR05F,GPR02F                                       1044
*               IPK;                /* SAVE CURRENT PSW KEY          */
         IPK                                                       1045
*               GPR06F=GPR02F;                                     1046
         LR    GPR06F,GPR02F                                       1046
*               GPR02F=GPR05F;      /* RESTORE REGISTER 2            */
         LR    GPR02F,GPR05F                                       1047
*               SPKA(GPR03F);       /* SET PSW KEY                   */
         SPKA  0(GPR03F)                                           1048
*               RESPECIFY                                          1049
*                (GPR02F) UNRESTRICTED;                            1049
*             END;                  /* MODESET SAVEKEY(GPR06F)     1050
*                                      KEYADDR(GPR03F)             1050
*                                      WORKREG(GPR05F)               */
*             RFY                                                  1051
*               GPR03F UNRSTD;                                     1051
*             GPR05P=GPR04P->RPHMAJCB+GPR04P->RPHPABOF;/* LOAD REG 5
*                                      WITH ADDR OF MAJOR CONTROL  1052
*                                      BLOCK PLUS OFFSET OF PAB IN 1052
*                                      BLOCK                         */
         L     GPR05P,RPHMAJCB-1(,GPR04P)                          1052
         LA    GPR05P,0(,GPR05P)                                   1052
         SLR   @09,@09                                             1052
         IC    @09,RPHPABOF(,GPR04P)                               1052
         ALR   GPR05P,@09                                          1052
*             GPR14P=0;             /* LOAD 0 INTO REG 14            */
         LR    GPR14P,@11                                          1053
*             GPR15P='FFFFFFFF'X;   /* LOAD REG 15 WITH DUMMY ADDRESS*/
         SLR   GPR15P,GPR15P                                       1054
         BCTR  GPR15P,0                                            1054
*             CS(GPR14P,GPR15P,GPR04P->RPHRESMA);/* COMPARE RESUME 1055
*                                      ADDRESS WITH 0 AND,IF EQUAL,
*                                      PUT DUMMY ADDRESS IN CONTROL
*                                      BLOCK RESUME ADDRESS          */
         CS    GPR14P,@15,RPHRESMA(GPR04P)                         1055
*             BC(8,FMZT0076);       /* IF EQUAL, BYPASS REMAINDER OF
*                                      EXPANSION                     */
         BC    8,FMZT0076                                          1056
*FMZL0076:                                                         1057
*             IF GPR04P->RPHWT='1'B THEN/* WT/EXT CONTENTION FLAG ON */
FMZL0076 TM    RPHWT(GPR04P),B'00001000'                           1057
         BNO   @RF01057                                            1057
*               DO;                 /* IN RPH                        */
*                 GPR14P=GPR04P->RPHRESMA×RPHWT1;/* LOAD REG 14 WITH
*                                      FLAG FIELD AND MAKE CERTAIN 1059
*                                      WT/EXT CONTENTION FLAG STILL
*                                      ON                            */
         L     GPR14P,RPHRESMA(,GPR04P)                            1059
         O     GPR14P,@CF00517                                     1059
*                 GPR15P=GPR14P×RPHPT1;/* LOAD REG 15 WITH FLAG FIELD
*                                      AND TURN POST FLAG ON         */
         LR    GPR15P,GPR14P                                       1060
         O     GPR15P,@CF00507                                     1060
*                 CS(GPR14P,GPR15P,GPR04P->RPHRESMA);/* COMPARE REG
*                                      14 WITH FLAG FIELD--IF WT/EXT
*                                      BIT ON, TURN ON POST FLAG     */
         CS    GPR14P,@15,RPHRESMA(GPR04P)                         1061
*                 BC(4,FMZL0076);   /* IF WT/EXT BIT WAS OFF, LOOP TO
*                                      TEST CONTENTION FLAG          */
         BC    4,FMZL0076                                          1062
*                 BC(8,FMZT0076);   /* IF WT/EXT BIT WAS OFF, BRANCH
*                                      TO BYPASS CODE GEN            */
         BC    8,FMZT0076                                          1063
*               END;                /* IF POST FLAG IS ON, FALL THRU
*                                      BOTTOM OF LOOP                */
*             ELSE                                                 1065
*               ;                   /* WT/EXT CONTENTION FLAG OFF    */
@RF01057 DS    0H                                                  1066
*             IF GPR04P->RPHTSKID=GPR01P->RPHTSKID THEN            1066
         CLC   RPHTSKID(4,GPR04P),RPHTSKID(GPR01P)                 1066
         BNE   @RF01066                                            1066
*               DO;                                                1067
*                 GPR05P->PABCHNGP=GPR01P->RPHPABQP;/* PUT PAB QUEUE
*                                      ADDRESS IN SECOND WORD OF PAB */
         MVC   PABCHNGP(3,GPR05P),RPHPABQP(GPR01P)                 1068
*                 GPR01P->RPHPABQP=GPR05P;/* PUT PAB ADDRESS (IN   1069
*                                      MAJOR CONTROL BLOCK) IN PAB 1069
*                                      QUEUE ADRESS IN RPH           */
         STCM  GPR05P,7,RPHPABQP(GPR01P)                           1069
*               END;                                               1070
*             ELSE                                                 1071
*               DO;                                                1071
         B     @RC01066                                            1071
@RF01066 DS    0H                                                  1072
*                 GPR00F=0;         /* SET REG 0 TO INDICATE ENA     */
         SLR   GPR00F,GPR00F                                       1072
*                 DO;               /* LISATCVT                    1073
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                   GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1074
*                 END;              /* LISATCVT PUT POINTER TO ATCVT
*                                      IN IN REG 15                  */
*                 CALL GPR15P->ATCAP32;/* CALL ISTAPC32: TPSCHED     */
         L     @11,ATCAP32(,GPR15P)                                1076
         LR    @15,@11                                             1076
         BALR  @14,@15                                             1076
*               END;                                               1077
*FMZT0076:                                                         1078
*             DO;                   /* MODESET KEYADDR(GPR06F)     1078
*                                      WORKREG(GPR05F)               */
@RC01066 DS    0H                                                  1078
FMZT0076 DS    0H                                                  1079
*               GPR05F=GPR06F;      /* GET KEY FORM SAVE LOCATION    */
         LR    GPR05F,GPR06F                                       1079
*               SPKA(GPR05F);       /* SET PSW KEY                   */
         SPKA  0(GPR05F)                                           1080
*             END;                  /* MODESET KEYADDR(GPR06F)     1081
*                                      WORKREG(GPR05F)               */
*             GEN REFS(GPR04P,RPHWORK) SETS(GPR02F,GPR03F,GPR04F,GPR05F
*                 ,GPR06F);                                        1082
        LM GPR02F,GPR06F,RPHWORK(GPR01P)
*             RESPECIFY                                            1083
*              (GPR00F,                                            1083
*               GPR01F,                                            1083
*               GPR04F,                                            1083
*               GPR05F,                                            1083
*               GPR06F,                                            1083
*               GPR14F,                                            1083
*               GPR15F) UNRSTD;     /* UNRESTRICT REGS 0,1, 4,5,14,
*                                      AND 15                        */
*           END;                    /* ***END OF TPPOST GENERATION***
*                                      POST REQUESTOR        @XM19013*/
*           PABPTR=0;               /* INDICATE POST DONE    @XM19013*/
         L     @11,RPHCRR(,RPHPTR)                                 1085
         L     @11,CRACRR(,@11)                                    1085
         SLR   @09,@09                                             1085
         ST    @09,PABPTR(,@11)                                    1085
*         END;                      /* END POST ANSWER       @XM19013*/
*       ELSE                        /* IF QUEUE ANSWER       @XM19013*/
*         PABPTR=LCPPABA;           /* ADDRESS ANSWER PAB    @XM19013*/
         B     @RC01032                                            1087
@RF01032 L     @11,RPHCRR(,RPHPTR)                                 1087
         L     @11,CRACRR(,@11)                                    1087
         L     @09,LCPPABA(,LCPBPTR)                               1087
         ST    @09,PABPTR(,@11)                                    1087
*     END;                          /* END SESSION CONTROL   @XM19013*/
*   ELSE                            /* NOT SESSION CONTROL   @XM19013*/
*     PABPTR=ADDR(FMCPAB2);         /* ANSWER PAB=CLIP       @XM19013*/
         B     @RC00940                                            1089
@RF00940 L     @11,RPHCRR(,RPHPTR)                                 1089
         L     @11,CRACRR(,@11)                                    1089
         LA    @09,FMCPAB2(,FMCBPTR)                               1089
         ST    @09,PABPTR(,@11)                                    1089
*   IF PABPTR^=0 THEN               /* IF POST REQUIRED      @XM19013*/
@RC00940 L     @11,RPHCRR(,RPHPTR)                                 1090
         L     @11,CRACRR(,@11)                                    1090
         L     @11,PABPTR(,@11)                                    1090
         LTR   @11,@11                                             1090
         BZ    @RF01090                                            1090
*/*  TPQUE (LCPFDBA,PABPTR->PABWEQA) NORM                            */
*                                                                  1091
*     DO;                                                          1091
*       RFY                                                        1092
*        (GPR00P,                                                  1092
*         GPR01P,                                                  1092
*         GPR04P,                                                  1092
*         GPR05P,                                                  1092
*         GPR15P) RSTD;                                            1092
*       GEN REFS(GPR01P) SETS(RPHWORK)                             1093
*           (STM GPR02P,GPR08P,RPHWORK(GPR01P));                   1093
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*       GPR00P=0;                                                  1094
         SLR   GPR00P,GPR00P                                       1094
*       GPR15P=ADDR(PABPTR->PABWEQA);/* HOLD PAB PTR                 */
         L     @11,RPHCRR(,RPHPTR)                                 1095
         L     @11,CRACRR(,@11)                                    1095
         L     GPR15P,PABPTR(,@11)                                 1095
*       GPR04P=LCPFDBA;             /* WORK ELE PTR                  */
         L     GPR04P,LCPFDBA(,LCPBPTR)                            1096
*       GPR05P=GPR15P;              /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1097
*       CALL ATCLCPTR->ATCAP37->ISTAPC37;                          1098
         L     @11,ATCLCPTR                                        1098
         L     @15,ATCAP37(,@11)                                   1098
         BALR  @14,@15                                             1098
*       GEN(NOPR  0)                                               1099
*       NOSETS NOREFS;                                             1099
         NOPR  0
*       RFY                                                        1100
*        (GPR00P,                                                  1100
*         GPR01P,                                                  1100
*         GPR04P,                                                  1100
*         GPR05P,                                                  1100
*         GPR15P) UNRSTD;                                          1100
*     END;                          /* *** END OF TPQUE GENERATION 1101
*                                      POST ANSWER PAB       @XM19013*/
*   ELSE                                                           1102
*     ;                             /* RPH POSTING USED      @XM19013*/
@RF01090 DS    0H                                                  1103
*   RFY                                                            1103
*     ISTFSB;                       /* DEBASE FSB            @XM19013*/
*   RFY                                                            1104
*     WQEPTR UNRSTD;                                               1104
*   RFY                                                            1105
*     R14 RSTD;                                                    1105
*   R14=ZCRSVF5;                    /* RESTORE RETURN ADDRESS        */
         L     @09,RPHCRR(,RPHPTR)                                 1106
         L     @09,CRACRR(,@09)                                    1106
         L     R14,ZCRSVF5(,@09)                                   1106
*   RFY                                                            1107
*     R14 UNRSTD;                                                  1107
*   END BFID1CLR;                                                  1108
@EL00003 DS    0H                                                  1108
@EF00003 DS    0H                                                  1108
@ER00003 BR    @14                                                 1108
         EJECT
*                                                                  1109
*/***********************************************************@XM19747*/
*/*                                                          @XM19747*/
*/* SUBROUTINE-                                              @XM19747*/
*/*      NOTIFY                                              @XM19747*/
*/*                                                          @XM19747*/
*/* FUNCTION-                                                @XM19747*/
*/*      PROCESS NOTIFY FUNCTION OF LCCW.                    @XM19747*/
*/*                                                          @XM19747*/
*/***********************************************************@XM19747*/
*                                                                  1109
*   RFY                                                            1109
*     R14 RSTD;                     /* TO SAVE RETURN REG    @XM19747*/
*NOTIFY:                                                           1110
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/* NOTIFY: SUBROUTINE     1110
*                                                            @XM19747*/
NOTIFY   DS    0H                                                  1111
*   ZCRSVF4=R14;                    /* SAVE RETURN REG       @XM19747*/
         L     @15,RPHCRR(,RPHPTR)                                 1111
         L     @15,CRACRR(,@15)                                    1111
         ST    R14,ZCRSVF4(,@15)                                   1111
*   RFY                                                            1112
*     R14 UNRSTD;                   /* SAVED                 @XM19747*/
*   ZCRPCOD1=0;                     /* ZDFA0 PARAMETER       @XM19747*/
         MVI   ZCRPCOD1(@15),X'00'                                 1113
*   ZCRPFSB='1'B;                   /* ZDFA0 PARAMETER       @XM19747*/
         OI    ZCRPFSB(@15),B'00100000'                            1114
*   CALL ISTZDFA0;                  /* BUFFER ALLOCATION UTILITY   1115
*                                                            @XM19747*/
         L     @09,ATCZPSVT(,ATCVTPTR)                             1115
         L     @15,ZPSZDFA0(,@09)                                  1115
         BALR  @14,@15                                             1115
*   RPHSRPRM->FSBSAF=FMCSAF;        /* SET SOURCE ADDRESS IN FSB   1116
*                                                            @XM19747*/
         L     @09,RPHSRPRM(,RPHPTR)                               1116
         MVC   FSBSAF(2,@09),FMCSAF(FMCBPTR)                       1116
*   RPHSRPRM->FSBDAF=ADDR(FMCDNCBA->LUNCB)->NCBDAF;/* SET DESCINATION
*                                      ADDR IN FSB           @XM19747*/
         L     @15,FMCDNCBA(,FMCBPTR)                              1117
         MVC   FSBDAF(2,@09),NCBDAF(@15)                           1117
*   RPHSRPRM->FSBMJRCD=FRNOTIFY;    /* MAJOR=NOTIFY          @XM19747*/
         MVI   FSBMJRCD(@09),X'30'                                 1118
*   RPHSRPRM->FSBMNRCD=LCPRUCNT;    /* MINOR=LCPB CODE       @XM19747*/
         MVC   FSBMNRCD(1,@09),LCPRUCNT(LCPBPTR)                   1119
*/*  TPQUE (RPHSRPRM,FMCSIPA->PABWEQA) NORM                          */
*                                                                  1120
*   DO;                                                            1120
*     RFY                                                          1121
*      (GPR00P,                                                    1121
*       GPR01P,                                                    1121
*       GPR04P,                                                    1121
*       GPR05P,                                                    1121
*       GPR15P) RSTD;                                              1121
*     GEN REFS(GPR01P) SETS(RPHWORK)(STM GPR02P,GPR08P,RPHWORK(GPR01P))
*         ;                                                        1122
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*     GPR00P=0;                                                    1123
         SLR   GPR00P,GPR00P                                       1123
*     GPR15P=ADDR(FMCSIPA->PABWEQA);/* HOLD PAB PTR                  */
         L     GPR15P,FMCSIPA(,FMCBPTR)                            1124
*     GPR04P=RPHSRPRM;              /* WORK ELE PTR                  */
         L     GPR04P,RPHSRPRM(,RPHPTR)                            1125
*     GPR05P=GPR15P;                /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1126
*     CALL ATCLCPTR->ATCAP37->ISTAPC37;                            1127
         L     @09,ATCLCPTR                                        1127
         L     @15,ATCAP37(,@09)                                   1127
         BALR  @14,@15                                             1127
*     GEN(NOPR  0)                                                 1128
*     NOSETS NOREFS;                                               1128
         NOPR  0
*     RFY                                                          1129
*      (GPR00P,                                                    1129
*       GPR01P,                                                    1129
*       GPR04P,                                                    1129
*       GPR05P,                                                    1129
*       GPR15P) UNRSTD;                                            1129
*   END;                            /* *** END OF TPQUE GENERATION 1130
*                                      QUEUE FSB TO SSCP PAB @XM19747*/
*   RFY                                                            1131
*     R14 RSTD;                     /* TO RESTORE RETURN REG @XM19747*/
*   R14=ZCRSVF4;                    /* RESTORE RETURN REG    @XM19747*/
         L     @09,RPHCRR(,RPHPTR)                                 1132
         L     @09,CRACRR(,@09)                                    1132
         L     R14,ZCRSVF4(,@09)                                   1132
*   RFY                                                            1133
*     R14 UNRSTD;                   /* RESTORED              @XM19747*/
*   END NOTIFY;                     /* END NOTIFY            @XM19747*/
@EL00004 DS    0H                                                  1134
@EF00004 DS    0H                                                  1134
@ER00004 BR    @14                                                 1134
         EJECT
*                                                                  1135
*/********************************************************************/
*/*                                                                  */
*/* SUBROUTINE-                                                      */
*/*      BFID0SHP                                                    */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      SHIP OUT A CLEAR OR UNBIND REQUEST.                         */
*/*      (OR INSURE THAT RESPONSE IS GENERATED IF UNSHIPPABLE.)      */
*/*                                                                  */
*/********************************************************************/
*                                                                  1135
*BFID0SHP:                                                         1135
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1135
BFID0SHP DS    0H                                                  1136
*   RFY                                                            1136
*     R14 RSTD;                                                    1136
*   ZCRSVF4=R14;                    /* SAVE RETURN ADDRESS           */
         L     @15,RPHCRR(,RPHPTR)                                 1137
         L     @15,CRACRR(,@15)                                    1137
         ST    R14,ZCRSVF4(,@15)                                   1137
*   RFY                                                            1138
*     R14 UNRSTD;                                                  1138
*   RFY                                                            1139
*     ISTZOBUF BASED(FDBPTR);                                      1139
*   RFY                                                            1140
*     ISTZIBUF BASED(FDBPTR);       /* INPUT BUFFER          @ZA04074*/
*   RFY                                                            1141
*     ISTFSB BASED(ADDR(ZIBFSB));                                  1141
*   RFY                                                            1142
*     ISTLCPB BASED(LCPBPTR);                                      1142
*   RFY                                                            1143
*     ISTLSCB BASED(LSCBPTR);                                      1143
*   IF LSCTYPE^=LSTYPE THEN                                        1144
         CLI   LSCTYPE(LSCBPTR),X'DF'                              1144
         BE    @RF01144                                            1144
*     DO;                           /* IF INPUT A LCPB       @XM08862*/
*/* TPDEQ (LCPBPTR,FMCPAB5) RESET(YES)                               */
*                                                                  1146
*       DO;                         /* BEGIN TPDEQ CODE GENERATION   */
*         RFY                                                      1147
*          (GPR00P,                                                1147
*           GPR01P,                                                1147
*           GPR14P,                                                1147
*           GPR15P) RSTD;                                          1147
*         GPR15P=ADDR(FMCPAB5);     /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCPAB5(,FMCBPTR)                            1148
*         RFY                                                      1149
*          (GPR02P,                                                1149
*           GPR03P) RSTD;                                          1149
*         STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                1150
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     1150
*         GPR03P=LCPBPTR×FMZCA026;                                 1151
         L     @09,@CF00493                                        1151
         LR    GPR03P,LCPBPTR                                      1151
         OR    GPR03P,@09                                          1151
*         GPR14P=FMZCA026;                                         1152
         LR    GPR14P,@09                                          1152
*         GPR15P=ADDR(GPR15P->PABWEQA);                            1153
*FMZL1100:                                                         1154
*         ;                                                        1154
FMZL1100 DS    0H                                                  1155
*         GPR02P=GPR15P->PABWEQA×FMZCA026;                         1155
         L     GPR02P,PABWEQA(,GPR15P)                             1155
         O     GPR02P,@CF00493                                     1155
*         DO WHILE(GPR02P^=GPR14P);                                1156
         B     @DE01156                                            1156
@DL01156 DS    0H                                                  1157
*FMZL2100:                                                         1157
*           ;                                                      1157
FMZL2100 DS    0H                                                  1158
*           IF GPR02P=GPR03P THEN                                  1158
         CR    GPR02P,GPR03P                                       1158
         BNE   @RF01158                                            1158
*             DO;                                                  1159
*               GPR00P=GPR02P->WKECHAIN;                           1160
         L     GPR00P,WKECHAIN(,GPR02P)                            1160
*               CS(GPR02P,GPR00P,GPR15P->PABWEQA);                 1161
         CS    GPR02P,@00,PABWEQA(GPR15P)                          1161
*               BC(7,FMZL3100);                                    1162
         BC    7,FMZL3100                                          1162
*               GPR14P=GPR02P;                                     1163
         LR    GPR14P,GPR02P                                       1163
*               GPR14P->WKECHAIN=0;                                1164
         SLR   @09,@09                                             1164
         ST    @09,WKECHAIN(,GPR14P)                               1164
*             END;                                                 1165
*           ELSE                                                   1166
*             DO;                                                  1166
         B     @RC01158                                            1166
@RF01158 DS    0H                                                  1167
*               IF(GPR02P->WKECHAIN)=GPR14P THEN                   1167
         C     GPR14P,WKECHAIN(,GPR02P)                            1167
         BNE   @RF01167                                            1167
*                 DO;                                              1168
*                   IF GPR02P->FSBTYPE=FSTYPE THEN                 1169
         CLI   FSBTYPE(GPR02P),X'02'                               1169
         BNE   @RF01169                                            1169
*                     DO;                                          1170
*                       GPR02P=GPR14P;                             1171
         LR    GPR02P,GPR14P                                       1171
*                       GOTO FMZL3100;                             1172
         B     FMZL3100                                            1172
*                     END;                                         1173
*                   GPR15P=ADDR(GPR02P->LCPRSTQH);                 1174
@RF01169 LA    GPR15P,LCPRSTQH(,GPR02P)                            1174
*                   GOTO FMZL1100;                                 1175
         B     FMZL1100                                            1175
*                 END;                                             1176
*               ELSE                                               1177
*                 DO;                                              1177
@RF01167 DS    0H                                                  1178
*                   GPR15P=ADDR(GPR02P->WKECHAIN);                 1178
         LA    GPR15P,WKECHAIN(,GPR02P)                            1178
*                   GPR02P=GPR02P->WKECHAIN;                       1179
         L     GPR02P,WKECHAIN(,GPR02P)                            1179
*                   GOTO FMZL2100;                                 1180
         B     FMZL2100                                            1180
*                 END;                                             1181
*             END;                                                 1182
*FMZL3100:                                                         1183
*           ;                                                      1183
@RC01158 DS    0H                                                  1183
FMZL3100 DS    0H                                                  1184
*         END;                                                     1184
@DE01156 CR    GPR02P,GPR14P                                       1184
         BNE   @DL01156                                            1184
*ISTA0100:                                                         1185
*         ;                                                        1185
ISTA0100 DS    0H                                                  1186
*         LM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                 1186
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     1186
*         RFY                                                      1187
*          (GPR02P,                                                1187
*           GPR03P) UNRSTD;                                        1187
*         GPR14P=GPR14P&FMZCB026;                                  1188
         N     GPR14P,@CF00491                                     1188
*         GPR01P->RPHWEA=GPR14P;                                   1189
         ST    GPR14P,RPHWEA(,GPR01P)                              1189
*         RFY                                                      1190
*          (GPR00P,                                                1190
*           GPR01P,                                                1190
*           GPR14P,                                                1190
*           GPR15P) UNRSTD;                                        1190
*       END;                        /* END TPDEQ GENERATION DEQUEUE
*                                      LCPB FROM ATOP WITH RESET   1191
*                                      OPTION IN CASE OF A CLEAR OF A
*                                      CLEAR SITUATION       @ZA13688*/
*       ZCRENDSH='1'B;              /* SET ISTZAF1B EXIT SWITCH      */
         L     @09,RPHCRR(,RPHPTR)                                 1192
         L     @09,CRACRR(,@09)                                    1192
         OI    ZCRENDSH(@09),B'10000000'                           1192
*     END;                                                         1193
*   ELSE                                                           1194
*     ;                                                            1194
@RF01144 DS    0H                                                  1195
*   LSCFDBA=0;                      /* NO BUFFER THIS ELEMENT        */
         SLR   @09,@09                                             1195
         ST    @09,LSCFDBA(,LSCBPTR)                               1195
*/*  TPQUE (LSCBPTR,FMCLCPAQ)                                        */
*                                                                  1196
*   DO;                                                            1196
*     RFY                                                          1197
*      (GPR00P,                                                    1197
*       GPR01P,                                                    1197
*       GPR02P,                                                    1197
*       GPR14P,                                                    1197
*       GPR15P) RSTD;                                              1197
*     GEN REFS(GPR01P) SETS(RPHWORK)(STM GPR02P,GPR08P,RPHWORK(GPR01P))
*         ;                                                        1198
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*     GPR15P=LSCBPTR;               /* GET WORK ELEM POINTER         */
         LR    GPR15P,LSCBPTR                                      1199
*     GPR14P=ADDR(FMCLCPAQ);        /* ADDRESS PAB/QUEUE POINTER     */
         LA    GPR14P,FMCLCPAQ(,FMCBPTR)                           1200
*     GPR15P=GPR15P×PABWEQG1;                                      1201
         O     GPR15P,@CF00493                                     1201
*     GPR02P=GPR14P->PABWEQA;       /* INITIALIZE WITH QUEUE HEADER  */
         L     GPR02P,PABWEQA(,GPR14P)                             1202
*CMZA0107:                                                         1203
*     ;                             /* CS FAIL TARGET                */
CMZA0107 DS    0H                                                  1204
*     GPR00P=GPR02P;                /* SAVE QUEUE CONTENTS           */
         LR    GPR00P,GPR02P                                       1204
*     GPR15P->PABCHAIN=GPR02P×PABWEQG1;/* FORWARD CHAIN WORK ELEMENT */
         LR    @09,GPR02P                                          1205
         O     @09,@CF00493                                        1205
         ST    @09,PABCHAIN(,GPR15P)                               1205
*     CS(GPR02P,GPR15P,GPR14P->PABWEQA);/* CHECK FOR END OF QUEUE    */
         CS    GPR02P,@15,PABWEQA(GPR14P)                          1206
*     BC(7,CMZA0107);                                              1207
         BC    7,CMZA0107                                          1207
*     GEN REFS(RPHWORK,GPR01P) NOSETS                              1208
*         (LM    GPR02P,GPR08P,RPHWORK(GPR01P));                   1208
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*     RFY                                                          1209
*      (GPR00P,                                                    1209
*       GPR01P,                                                    1209
*       GPR02P,                                                    1209
*       GPR14P,                                                    1209
*       GPR15P) UNRSTD;                                            1209
*   END;                            /* *** END OF TPQUE GENERATION 1210
*                                      TPQUE THE LCPB TO THE AWAIT 1210
*                                      QUEUE                         */
*/*   IF REQUEST UNSHIPPABLE OVERLAY THE BUFFER SO THAT IT LOOKS   1211
*     LIKE AN INPUT BUFFER TO ACTIVATE THE INBOUND PROCESSOR       1211
*     FOR THE CLEAR OR UNBIND REQUEST                                */
*                                                                  1211
*   RFY                                                            1211
*     NCBPTR RSTD;                  /* RESTRICT NCBPTR       @DL03HGE*/
*   NCBPTR=ICNCBPTR;                /* START WITH THE ICNCB  @DL03HGE*/
         LR    NCBPTR,ICNCBPTR                                     1212
*   RFY                                                            1213
*    (ISTICNCB,                                                    1213
*     ISTNCB) BASED(NCBPTR);        /*                       @DL03HGE*/
*   DO WHILE(NCBNSNA^=0);           /* LOCATE LOCAL 370X     @XL03HEN*/
         B     @DE01214                                            1214
@DL01214 DS    0H                                                  1215
*     NCBPTR=NCBNSNA;               /* GET ADDRESS NEXT NODE @DL03HGE*/
         L     NCBPTR,NCBNSNA(,NCBPTR)                             1215
*   END;                            /*                       @DL03HGE*/
@DE01214 L     @11,NCBNSNA(,NCBPTR)                                1216
         LTR   @11,@11                                             1216
         BNZ   @DL01214                                            1216
*   IF LCPINTER='1'B                /* IF INTERNAL OPERATION         */
*       ×NCBCONF='1'B               /* × DEVICE DOWN                 */
*       ×(FMCSNBI='1'B&FMCBIP='0'B) /* × (SESSION NOT BOUND & BIND 1217
*                                      NOT IN PROGRESS)            1217
*                                      @ZM11715,@XA09510             */
*       ×(FMCCONF='1'B&LCPRSTRT='0'B) THEN/* × (OFFLINE DEVICE & NOT
*                                      RESTART               @XM09478*/
         TM    LCPINTER(LCPBPTR),B'01000000'                       1217
         BO    @RT01217                                            1217
         TM    NCBCONF(NCBPTR),B'01000000'                         1217
         BO    @RT01217                                            1217
         TM    FMCSNBI(FMCBPTR),B'10000000'                        1217
         BNO   @GL00007                                            1217
         TM    FMCBIP(FMCBPTR),B'00001000'                         1217
         BZ    @RT01217                                            1217
@GL00007 TM    FMCCONF(FMCBPTR),B'00000001'                        1217
         BNO   @RF01217                                            1217
         TM    LCPRSTRT(LCPBPTR),B'00100000'                       1217
         BNZ   @RF01217                                            1217
@RT01217 DS    0H                                                  1218
*     DO;                                                          1218
*       RFY                                                        1219
*         NCBPTR UNRSTD;            /*                       @XM08862*/
*       ZIBBTU=ZOBBTU;              /* MOVE TH,RH,RU TO ZIB  @ZA04074*/
         MVC   ZIBBTU(20,FDBPTR),ZOBBTU(FDBPTR)                    1220
*       ADDR(ZIBBTU)->THDAF=THOAF;  /* SWITCH OAF AND DAF    @ZA04074*/
         LA    @09,48                                              1221
         ALR   @09,FDBPTR                                          1221
         LA    @15,28                                              1221
         ALR   @15,FDBPTR                                          1221
         MVC   THDAF(2,@09),THOAF(@15)                             1221
*       ADDR(ZIBBTU)->THOAF=THDAF;  /* SWITCH DAF AND OAF    @ZA04074*/
         MVC   THOAF(2,@09),THDAF(@15)                             1222
*       RFY                                                        1223
*         ISTTH BASED(ADDR(ZIBBTU));/* ADDRESS TH            @ZA04074*/
*       RFY                                                        1224
*         ISTRH BASED(ADDR(ISTTH)+LENGTH(ISTTH));/* ADDRESS RH     1224
*                                                            @ZA04074*/
*       RHQS='1'B;                  /* FLAG AS A RESPONSE    @ZA04074*/
         OI    RHQS+58(FDBPTR),B'10000000'                         1225
*       FDBDATAA=ADDR(ISTTH)+LENGTH(ISTTH)+LENGTH(ISTRH);/* POINT TO
*                                      THE RU                @ZA04074*/
         LA    @15,61                                              1226
         ALR   @15,FDBPTR                                          1226
         ST    @15,FDBDATAA(,FDBPTR)                               1226
*/***********************************************************@ZA04074*/
*/*                                                          @ZA04074*/
*/*      INITIALIZE THE FSB                                  @ZA04074*/
*/*                                                          @ZA04074*/
*/***********************************************************@ZA04074*/
*                                                                  1227
*       FSBFSB=FSBFSB&&FSBFSB;      /* CLEAR THE FSB         @ZA04074*/
         LA    @15,16                                              1227
         ALR   @15,FDBPTR                                          1227
         XC    FSBFSB(32,@15),FSBFSB(@15)                          1227
*       FSBTYPE=FSTYPE;             /* SET FSB TYPE FIELD    @ZA04074*/
         MVI   FSBTYPE(@15),X'02'                                  1228
*       FSBLNGTH=LENGTH(ISTFSB);    /* SET FSB LENGTH FIELD  @ZA04074*/
         MVI   FSBLNGTH(@15),X'2C'                                 1229
*       FSBTHCNT=THDCF;             /* SET DATA COUNT FIELD  @ZA04074*/
         LH    @14,THDCF(,@09)                                     1230
         N     @14,@CF03835                                        1230
         STH   @14,FSBTHCNT(,@15)                                  1230
*       FSBRQTAG=THSNF;             /* SET SEQUENCE NUMBER   @ZA04074*/
         MVC   FSBRQTAG(2,@15),THSNF(@09)                          1231
*       FSBSAF=THDAF;               /* SET HOST SOURCE       @ZA04074*/
         MVC   FSBSAF(2,@15),THDAF(@09)                            1232
*       FSBDAF=THOAF;               /* SET HOST DESTINATION  @ZA04074*/
         MVC   FSBDAF(2,@15),THOAF(@09)                            1233
*       FSBMJRCD=FRMOK;             /* SET MAJOR = NORMAL    @ZA04074*/
         MVI   FSBMJRCD(@15),X'00'                                 1234
*       FSBMNRCD=FRMOK;             /* SET MINOR = NORMAL    @ZA04074*/
         MVI   FSBMNRCD(@15),X'00'                                 1235
*/*  TPQUE (ADDR(ZIBFSB),FMCPAB4) NORM                               */
*                                                                  1236
*       DO;                                                        1236
*         RFY                                                      1237
*          (GPR00P,                                                1237
*           GPR01P,                                                1237
*           GPR04P,                                                1237
*           GPR05P,                                                1237
*           GPR15P) RSTD;                                          1237
*         GEN REFS(GPR01P) SETS(RPHWORK)                           1238
*             (STM GPR02P,GPR08P,RPHWORK(GPR01P));                 1238
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*         GPR00P=0;                                                1239
         SLR   GPR00P,GPR00P                                       1239
*         GPR15P=ADDR(FMCPAB4);     /* HOLD PAB PTR                  */
         LA    GPR15P,FMCPAB4(,FMCBPTR)                            1240
*         GPR04P=ADDR(ZIBFSB);      /* WORK ELE PTR                  */
         LA    GPR04P,ZIBFSB(,FDBPTR)                              1241
*         GPR05P=GPR15P;            /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1242
*         CALL ATCLCPTR->ATCAP37->ISTAPC37;                        1243
         L     @09,ATCLCPTR                                        1243
         L     @15,ATCAP37(,@09)                                   1243
         BALR  @14,@15                                             1243
*         GEN(NOPR  0)                                             1244
*         NOSETS NOREFS;                                           1244
         NOPR  0
*         RFY                                                      1245
*          (GPR00P,                                                1245
*           GPR01P,                                                1245
*           GPR04P,                                                1245
*           GPR05P,                                                1245
*           GPR15P) UNRSTD;                                        1245
*       END;                        /* *** END OF TPQUE GENERATION 1246
*                                      QUEUE FSB TO CLIP     @ZA04074*/
*       RFY                                                        1247
*         ISTTH;                    /* END BASE COVER        @ZA04074*/
*       RFY                                                        1248
*         ISTRH;                    /* END BASE COVER        @ZA04074*/
*     END;                          /* END INTERNAL OPERATION      1249
*                                                            @ZA04074*/
*   ELSE                                                           1250
*     DO;                           /* IF SHIPOUT REQ'D      @XM10417*/
         B     @RC01217                                            1250
@RF01217 DS    0H                                                  1251
*       IF ADDR(LUNCB)->NCBFTRIO='1'B THEN/* IF I/O TRACE    @XM10417*/
         CLI   NCBFTRIO(LUNCBPTR),1                                1251
         BNE   @RF01251                                            1251
*         ZOBRT08='1'B;             /* SET I/O TRACE FLAG    @XM10417*/
         OI    ZOBRT08(FDBPTR),B'01000000'                         1252
*       ELSE                                                       1253
*         ;                         /* NOT I/O TRACE         @XM10417*/
@RF01251 DS    0H                                                  1254
*       IF ADDR(FMCPROCD)->PROCFTX='1'B THEN/* IF CONFIDENTIAL     1254
*                                                            @XM10417*/
         TM    PROCFTX+48(FMCBPTR),B'00000001'                     1254
         BNO   @RF01254                                            1254
*         ZOBRT06='1'B;             /* FLAG CONF TEXT        @XM10417*/
         OI    ZOBRT06(FDBPTR),B'10000000'                         1255
*       ELSE                                                       1256
*         ;                         /* NOT CONFIDENTIAL      @XM10417*/
@RF01254 DS    0H                                                  1257
*       CALL ISTZEFBB;              /* WRITE OUT BUFFER      @XM10417*/
         L     @09,ATCZFSVT(,ATCVTPTR)                             1257
         L     @15,ZFSZEFBB(,@09)                                  1257
         BALR  @14,@15                                             1257
*     END;                          /* END SHIPOUT REQ'D     @XM10417*/
*   RFY                                                            1259
*     R14 RSTD;                                                    1259
@RC01217 DS    0H                                                  1260
*   R14=ZCRSVF4;                    /* RESTORE RETURN REG            */
         L     @09,RPHCRR(,RPHPTR)                                 1260
         L     @09,CRACRR(,@09)                                    1260
         L     R14,ZCRSVF4(,@09)                                   1260
*   RFY                                                            1261
*     R14 UNRSTD;                                                  1261
*   RFY                                                            1262
*     INBDPTR UNRSTD;               /*                       @XM08862*/
*   RFY                                                            1263
*     ISTZIBUF BASED;               /*                       @XM08862*/
*   END BFID0SHP;                                                  1264
*                                                                  1264
@EL00005 DS    0H                                                  1264
@EF00005 DS    0H                                                  1264
@ER00005 BR    @14                                                 1264
*/* TPEPILOG                                                         */
*                                                                  1265
*   GEN(PRINT OFF);                                                1265
         PRINT OFF
*   DCL                                                            1266
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            1267
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                                 1268
*                                                                  1268
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1269
*   END ISTZBFID                                                   1269
*                                                                  1269
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*                                                                  1269
*       ;                                                          1269
@EL00001 DS    0H                                                  1269
@EF00001 DS    0H                                                  1269
@ER00001 BR    @14                                                 1269
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTZBFID CSECT
         DS    0F
@CF00071 DC    F'8'
@CF02554 DC    F'10'
@CH02554 EQU   @CF02554+2
@CF00491 DC    XL4'7FFFFFFF'
@CF00493 DC    XL4'80000000'
@CF00507 DC    XL4'04000000'
@CF00517 DC    XL4'08000000'
@CF03835 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IOSBPTR  DS    A
SRBPTR   DS    A
BFHDRPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTZBFID CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
DISFDBS  DC    AL4(ZIBFDBS-ISTZIBUF)
DISFSB   DC    AL4(ZIBFSB-ISTZIBUF)
FMZA0060 DS    FL4
         ORG   FMZA0060
@NM00076 DC    AL1(64)
@NM00077 DC    AL3(0)
         ORG   FMZA0060+4
@CC03723 DC    C'BCID'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
FMCBPTR  EQU   @05
LCPBPTR  EQU   @07
R0       EQU   @00
R1       EQU   @01
ATCVTPTR EQU   @02
ICNCBPTR EQU   @03
LUNCBPTR EQU   @04
FDBPTR   EQU   @06
LSCBPTR  EQU   @08
INBDPTR  EQU   @09
HOLDPTR  EQU   @09
WQEPTR   EQU   @10
NCBPTR   EQU   @10
RHPTR    EQU   @10
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR07P   EQU   @07
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
GPR06P   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
ATCLCPTR EQU   1032
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00002 EQU   IOSB+20
IOSCSW   EQU   @NM00002+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTNCB   EQU   0
NCBDAF   EQU   ISTNCB+2
NCBNSNA  EQU   ISTNCB+12
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
NCBCONF  EQU   NCBFLAG1
NCBSWDAF EQU   ISTNCB+44
ISTZPSVT EQU   0
ZPSZDFA0 EQU   ISTZPSVT
ZPSZDFC0 EQU   ISTZPSVT+4
ZPSZDFB0 EQU   ISTZPSVT+16
ZPSZBFZ0 EQU   ISTZPSVT+28
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABCHNGP EQU   PABCHAIN+1
PABDVTA  EQU   ISTPAB+9
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00013 EQU   LOKCHNG+2
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWT    EQU   RPHWPFLG
RPHPABOF EQU   ISTRPH+20
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHPABQP EQU   RPHPABQA+1
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRS  EQU   ATCCOM+188
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00024 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP32  EQU   ATCAOSM+28
ATCAP34  EQU   ATCAOSM+32
ATCZFSVT EQU   ATCAOSM+68
ATCZPSVT EQU   ATCAOSM+72
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00026 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTLSCB  EQU   0
LSC1WORD EQU   ISTLSCB
LSCTYPE  EQU   LSC1WORD
LSCREQTG EQU   LSC1WORD+2
LSCZRT02 EQU   LSCREQTG
LSCZRT03 EQU   LSCREQTG
LSCZRT04 EQU   LSCREQTG
LSCZRT05 EQU   LSCREQTG
LSCZRT06 EQU   LSCREQTG
LSCZRT07 EQU   LSCREQTG
LSCZMNRC EQU   LSCREQTG+1
LSCZRT08 EQU   LSCZMNRC
LSCZRT09 EQU   LSCZMNRC
LSCCHAIN EQU   ISTLSCB+4
LSCCHAI1 EQU   LSCCHAIN
LSCRUCNT EQU   ISTLSCB+8
LSCFLGS  EQU   ISTLSCB+9
LSCSEQ   EQU   ISTLSCB+10
LSCLCPBA EQU   ISTLSCB+16
LSCLCCWA EQU   ISTLSCB+20
LSCFDBA  EQU   ISTLSCB+24
ISTBDU   EQU   0
BDUMODIF EQU   ISTBDU+1
BDUMOD1  EQU   BDUMODIF
BDUDAF   EQU   ISTBDU+2
BDUFUNC  EQU   BDUDAF
BDUCHECK EQU   BDUFUNC
BDUFLAGS EQU   BDUDAF+1
ISTLH    EQU   0
ISTTH    EQU   0
THFLAG1  EQU   ISTTH
THFID    EQU   THFLAG1
THFLGA   EQU   THFLAG1
THMPF    EQU   THFLGA
THPSI    EQU   THFLGA
THAFI    EQU   THFLGA
THFLGB   EQU   THFLAG1+1
THPYF    EQU   THFLGB
THSEF    EQU   THFLGB
THCDF    EQU   THFLGB
THDAF    EQU   ISTTH+2
THOAF    EQU   ISTTH+4
THSNF    EQU   ISTTH+6
THDCF    EQU   ISTTH+8
ISTTH2   EQU   0
TH2FLAG1 EQU   ISTTH2
TH2MPF   EQU   TH2FLAG1
ISTFDB   EQU   0
FDBFDBA  EQU   ISTFDB
FDBDATAA EQU   ISTFDB+4
FDBDATCT EQU   ISTFDB+8
FDBOFSET EQU   ISTFDB+10
ISTBTU   EQU   0
BTUBTH   EQU   ISTBTU
BTUFID   EQU   BTUBTH
BTUREQ   EQU   BTUBTH+6
BTURQFLG EQU   BTUREQ
BTURH    EQU   BTUBTH+10
BTUSYSTR EQU   ISTBTU+18
ISTZOBUF EQU   0
ZOBFSM   EQU   ISTZOBUF+4
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROCFTX  EQU   PROPROC2
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSAF   EQU   ISTFMCB+2
FMCDNCBA EQU   ISTFMCB+16
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCPROCD EQU   ISTFMCB+48
FMCPAB2  EQU   ISTFMCB+80
FMCPAB3  EQU   ISTFMCB+96
FMCPAB4  EQU   ISTFMCB+112
FMCPAB5  EQU   ISTFMCB+128
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCOSSN  EQU   FMCNXCFM
FMCNXOSC EQU   FMCNXOSQ+2
FMCOASN  EQU   FMCNXOSC
FMCSSTAT EQU   ISTFMCB+159
FMCSNBI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCCONF  EQU   FMCSSTAT
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF001 EQU   FMCZFLAG
FMCZF006 EQU   FMCZFLAG
FMCZFCSQ EQU   FMCVS1+6
FMCSHEDQ EQU   FMCVS1+8
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWIDAT EQU   LCCWFLAG
LCCWLSI  EQU   LCCWFLAG
LCCWDATA EQU   ISTLCCW+4
ISTLCPB  EQU   0
LCPTYPE  EQU   ISTLCPB
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPASYN  EQU   LCPFLAG2
LCPRSTRT EQU   LCPFLAG2
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPLCCW1 EQU   ISTLCPB+12
LCPCID   EQU   ISTLCPB+16
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPTLBAD EQU   ISTLCPB+28
LCPFOSN  EQU   ISTLCPB+32
LCPFSNCH EQU   ISTLCPB+34
LCPFLG1  EQU   ISTLCPB+37
LCPRESET EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPRSTQH EQU   LCPLCCW
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
LCPFTYPE EQU   LCPRPHA
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RHQS     EQU   RH1
RHCHAIN  EQU   RH1
RH2      EQU   RHFLAGS+1
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBTYPE  EQU   FSBFSB
FSBLNGTH EQU   FSBFSB+1
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBSAF   EQU   FSBCID
FSBDAF   EQU   FSBCID+2
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBMJRCD EQU   FSBSRCAT
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
FSBTHCNT EQU   FSBFSB+28
FSBFDB   EQU   ISTFSB+32
ISTZIBUF EQU   0
ZIBFSM   EQU   ISTZIBUF+4
ISTICNCB EQU   0
@NM00053 EQU   ISTICNCB+53
ICNCKFLD EQU   ISTICNCB+96
ICNFLAG  EQU   ISTICNCB+100
ICNZF006 EQU   ICNFLAG
ICNFFLAG EQU   ISTICNCB+101
ICNZSWS  EQU   ISTICNCB+102
ICNFLAG2 EQU   ISTICNCB+236
ICNZD001 EQU   ISTICNCB+288
ICNWSCCW EQU   ICNZD001
ICNZD002 EQU   ISTICNCB+296
ICNZD003 EQU   ISTICNCB+320
ICNRSCCW EQU   ICNZD003
ICNZD004 EQU   ISTICNCB+328
ICNZS1VR EQU   ISTICNCB+348
ICNSRV02 EQU   ICNZS1VR
ICNDIEWA EQU   ICNSRV02
ICNDCDEB EQU   ISTICNCB+480
ICNDIDEB EQU   ICNDCDEB+12
ICNZFLAG EQU   ISTICNCB+508
ICNZH002 EQU   ISTICNCB+509
ICNZS002 EQU   ICNZH002
ICNZS003 EQU   ICNZH002
ICNZS004 EQU   ICNZH002
ICNZS006 EQU   ICNZH002
ICNZS007 EQU   ICNZH002
ICNZS008 EQU   ICNZH002
ICNZS009 EQU   ICNZH002+1
ICNZS00A EQU   ICNZH002+1
ICNZCONS EQU   ISTICNCB+680
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ZSAZACTV EQU   ZSAZSVMS
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZTRAC EQU   ISTZSAVE+36
ISTZFSVT EQU   0
ZFSZEFBB EQU   ISTZFSVT
ZFSZEABB EQU   ZFSZEFBB
ZFSZEFAB EQU   ISTZFSVT+4
ZFSZEAAB EQU   ZFSZEFAB
ISTSRU   EQU   0
SRUTYPE  EQU   ISTSRU+1
SRULDID  EQU   ISTSRU+2
SRUSPSN  EQU   SRULDID
ISTWKE   EQU   0
WKECHAIN EQU   ISTWKE+4
WKEFLAGS EQU   WKECHAIN
ISTLUNCB EQU   0
LUNCB    EQU   ISTLUNCB
LUNZOS   EQU   ISTLUNCB+48
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCREBCID EQU   ZCRENTER+3
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTBFHDR EQU   0
ISTTLB   EQU   0
TLBFSBA  EQU   ISTTLB+4
ISTZLBVT EQU   0
ZLBZBFSC EQU   ISTZLBVT+88
ISTZDFC0 EQU   0
ISTZDFA0 EQU   0
ISTZDFB0 EQU   0
ISTZEFBB EQU   0
ISTZBFZ0 EQU   0
ISTZBFSC EQU   0
ISTAPC37 EQU   0
FMZL0060 EQU   0
ISTAPC34 EQU   0
ZIBSRB   EQU   0
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
ZOBDLBT  EQU   ISTZOBUF
ZOBDLBCM EQU   ZOBDLBT
@NM00031 EQU   ZOBDLBCM+25
ZOBBTU   EQU   ZOBDLBT+28
ZOBWCC   EQU   ZOBDLBT+48
ZOBECCC  EQU   ZOBDLBT+50
ZOBTEXT  EQU   ZOBBTU
ZOBDIO   EQU   ZOBFSM
ZOBCCW2  EQU   ZOBDIO+8
ZOBCPTCC EQU   ZOBCCW2
ZOBFLAGS EQU   ZOBCCW2+5
ZOBRT06  EQU   ZOBFLAGS
ZOBRT08  EQU   ZOBFLAGS
ZOBCCW3  EQU   ZOBDIO+16
ZOBCPTRC EQU   ZOBCCW3
ZOBCPN2C EQU   ZOBCPTRC
ZOBCPTRA EQU   ZOBCCW3+1
@NM00035 EQU   ZOBBTU
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00047 EQU   FSBRQTAG
ZIBDIO   EQU   ZIBFSM
ZIBCCW2  EQU   ZIBDIO+8
ZIBCPTCC EQU   ZIBCCW2
ZIBAIO   EQU   ISTZIBUF
ZIBAIOCM EQU   ZIBAIO
ZIBFDBZ  EQU   ZIBAIOCM
ZIBFIB   EQU   ZIBAIO+16
ZIBFSB   EQU   ZIBFIB
ZIBMDREC EQU   ZIBFSB+4
ZIBMDRIN EQU   ZIBFSB+28
ZIBBTU   EQU   ZIBFIB+32
ZIBFDBS  EQU   ZIBBTU
@NM00050 EQU   ZIBBTU+12
ZIBFID1  EQU   @NM00050+1
ZIBFITXT EQU   ZIBFID1
ZIBSIB   EQU   ZIBFIB
ZIBREC   EQU   ZIBMDRIN
ZIBRECPL EQU   ZIBREC
ZIBRECHD EQU   ZIBRECPL
ZIBRECRS EQU   ZIBREC+8
ZIBRECDT EQU   ZIBREC+10
ZIBMDRRC EQU   ZIBMDREC
ZIBRCPL  EQU   ZIBMDRRC
ZIBRCDT  EQU   ZIBMDRRC+24
@NM00052 EQU   ZIBBTU
SRUSENSE EQU   ISTSRU
SRURMS   EQU   ISTSRU
SRUZIB   EQU   ISTSRU
SRUNETS  EQU   SRUZIB
ISTUNBRU EQU   SRUTYPE
LCCWPTR  EQU   ZCRSVF3
PABPTR   EQU   ZCRSVF7
NEWFSB   EQU   RPHSRPRM
NEWBUF   EQU   RPHSRPRM
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UNBTYPE  EQU   ISTUNBRU
SRUNAF   EQU   SRUZIB+3
SRUNSREQ EQU   SRUNETS+2
SRUNSUBC EQU   SRUNETS+1
SRUNSCAT EQU   SRUNETS
SRUREQRE EQU   SRURMS+2
SRUPFX2  EQU   SRURMS+1
SRUPFX1  EQU   SRURMS
SRUSENS2 EQU   SRUSENSE+2
SRUSNS2  EQU   SRUSENSE+1
SRUSNS1  EQU   SRUSENSE
ZIBTH2   EQU   @NM00052+4
ZIBLH    EQU   @NM00052
ZIBRCTXT EQU   ZIBMDRRC+36
ZIBRCRID EQU   ZIBRCDT+10
ZIBRCNAM EQU   ZIBRCDT+2
ZIBRCUA  EQU   ZIBRCDT
ZIBRCPUI EQU   ZIBRCPL+20
ZIBRCPUN EQU   ZIBRCPL+16
ZIBRCTIM EQU   ZIBRCPL+12
ZIBRCDAT EQU   ZIBRCPL+8
ZIBRCRS1 EQU   ZIBRCPL+6
ZIBRCSID EQU   ZIBRCPL+5
ZIBRCID  EQU   ZIBRCPL+4
ZIBRCSW  EQU   ZIBRCPL+2
ZIBRCSYR EQU   ZIBRCPL+1
ZIBRCL   EQU   ZIBRCPL
ZIBRECTX EQU   ZIBREC+22
ZIBRECID EQU   ZIBRECDT+10
ZIBRECNA EQU   ZIBRECDT+2
ZIBRECUA EQU   ZIBRECDT
ZIBRECSV EQU   ZIBRECRS
ZIBRECDA EQU   ZIBRECPL+4
ZIBRECSI EQU   ZIBRECHD+3
ZIBRECDV EQU   ZIBRECHD+2
ZIBRECFL EQU   ZIBRECHD+1
ZIBRECTY EQU   ZIBRECHD
ZIBTEXT  EQU   ZIBSIB+4
ZIBRSV04 EQU   ZIBSIB
ZIBTEXT2 EQU   ZIBFITXT
ZIBTEXT1 EQU   ZIBFIB+52
@NM00051 EQU   @NM00050
@NM00049 EQU   ZIBMDREC
@NM00048 EQU   ZIBFSB
ZIBLNG2  EQU   ZIBAIOCM+14
ZIBRSV03 EQU   ZIBAIOCM+13
ZIBWKBYT EQU   ZIBAIOCM+12
ZIBCPNPK EQU   ZIBCCW2+6
ZIBRSV02 EQU   ZIBCCW2+5
ZIBCPTPF EQU   ZIBCCW2+4
ZIBCPTCA EQU   ZIBCCW2+1
ZIBCPNPC EQU   ZIBCPTCC
ZIBCPRDK EQU   ZIBDIO+6
ZIBRSV01 EQU   ZIBDIO+5
ZIBCPRDF EQU   ZIBDIO+4
ZIBCPTXA EQU   ZIBDIO+1
ZIBCPRDC EQU   ZIBDIO
FSBRT0B  EQU   @NM00047+1
FSBRT0A  EQU   @NM00047+1
FSBRT09  EQU   @NM00047+1
FSBRT08  EQU   @NM00047+1
FSBRT07  EQU   @NM00047
FSBRT06  EQU   @NM00047
FSBRT05  EQU   @NM00047
FSBRT04  EQU   @NM00047
FSBRT03  EQU   @NM00047
FSBRT02  EQU   @NM00047
FSBRT01  EQU   @NM00047
FSBRT00  EQU   @NM00047
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
ZOBTH2   EQU   @NM00035+4
ZOBLH    EQU   @NM00035
ZOBCPN2K EQU   ZOBCCW3+6
ZOBRSV99 EQU   ZOBCCW3+5
ZOBCPN2F EQU   ZOBCCW3+4
ZOBCPTC2 EQU   ZOBCPTRA
ZOBCPTC1 EQU   ZOBCPN2C
ZOBCPNPK EQU   ZOBCCW2+6
ZOBRSV03 EQU   ZOBFLAGS
ZOBCPNPF EQU   ZOBCCW2+4
ZOBCPTCA EQU   ZOBCCW2+1
ZOBCPNPC EQU   ZOBCPTCC
ZOBCPWTK EQU   ZOBDIO+6
ZOBRSV02 EQU   ZOBDIO+5
ZOBCPWTF EQU   ZOBDIO+4
ZOBCPTXA EQU   ZOBDIO+1
ZOBCPWTC EQU   ZOBDIO
ZOBRSV09 EQU   ZOBECCC
ZOBECSP  EQU   ZOBECCC
ZOBRSV08 EQU   ZOBECCC
ZOBRSV07 EQU   ZOBDLBT+49
ZOBRSV06 EQU   ZOBWCC
ZOBWCSP  EQU   ZOBWCC
ZOBRSV05 EQU   ZOBWCC
ZOBRSV10 EQU   ZOBDLBCM+26
@NM00034 EQU   @NM00031
@NM00033 EQU   @NM00031
@NM00032 EQU   @NM00031
ZOBRSV04 EQU   ZOBDLBCM+16
ZOBLNG2  EQU   ZOBDLBCM+14
ZOBRSV01 EQU   ZOBDLBCM+12
ZOBFDB   EQU   ZOBDLBCM
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00007 EQU   IOSPCISC+4
@NM00006 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00005 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
ZLBZIFVB EQU   ISTZLBVT+84
ZLBZIFUB EQU   ISTZLBVT+80
ZLBZIFSB EQU   ISTZLBVT+76
ZLBRSV22 EQU   ISTZLBVT+72
ZLBZBFID EQU   ISTZLBVT+68
ZLBZBFX0 EQU   ISTZLBVT+64
ZLBRSV02 EQU   ISTZLBVT+60
ZLBRSV21 EQU   ISTZLBVT+56
ZLBZBFJB EQU   ISTZLBVT+52
ZLBZBFIB EQU   ISTZLBVT+48
ZLBZBFHB EQU   ISTZLBVT+44
ZLBZBFGB EQU   ISTZLBVT+40
ZLBZBFFB EQU   ISTZLBVT+36
ZLBZBFEB EQU   ISTZLBVT+32
ZLBZBFDB EQU   ISTZLBVT+28
ZLBZBFCB EQU   ISTZLBVT+24
ZLBZBFBB EQU   ISTZLBVT+20
ZLBZBFAB EQU   ISTZLBVT+16
ZLBZBFNB EQU   ISTZLBVT+12
ZLBZCFAI EQU   ISTZLBVT+8
ZLBZBF0B EQU   ISTZLBVT+4
ZLBZAF0B EQU   ISTZLBVT
TLBLCCWS EQU   ISTTLB+8
TLBLCPA  EQU   ISTTLB
BFHDATA  EQU   ISTBFHDR+8
BFHUSED  EQU   ISTBFHDR+6
BFHSIZE  EQU   ISTBFHDR+4
BFHNXCHN EQU   ISTBFHDR
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00075 EQU   ISTAPCRR+137
@NM00074 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00073 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00072 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00071 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00070 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00069 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00068 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00067 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00066 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00065 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00064 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
LUNZC001 EQU   LUNZOS+8
LUNLOCK  EQU   LUNZOS
WKECHNGP EQU   WKECHAIN+1
@NM00063 EQU   WKEFLAGS
WKEGATE  EQU   WKEFLAGS
@NM00062 EQU   ISTWKE
SRURSV01 EQU   SRULDID+4
SRUPSSN  EQU   SRULDID+2
SRUDFCLV EQU   SRUSPSN
@NM00061 EQU   SRUTYPE
SRUPSAC  EQU   SRUTYPE
SRUSPAC  EQU   SRUTYPE
SRUQSREQ EQU   ISTSRU
ZFSZWRD4 EQU   ISTZFSVT+36
ZFSZWRD3 EQU   ISTZFSVT+32
ZFSZEFCB EQU   ISTZFSVT+28
ZFSZFFEB EQU   ISTZFSVT+24
ZFSZDFJ0 EQU   ISTZFSVT+20
ZFSZFFFB EQU   ISTZFSVT+16
ZFSZFFDB EQU   ISTZFSVT+12
ZFSZFFCB EQU   ISTZFSVT+8
ZFSZEMAB EQU   ZFSZEAAB
ZFSZEMBB EQU   ZFSZEABB
ICNZCON6 EQU   ICNZCONS+10
ICNZCON5 EQU   ICNZCONS+8
ICNZCON4 EQU   ICNZCONS+6
ICNZCON3 EQU   ICNZCONS+4
ICNZCON2 EQU   ICNZCONS+2
ICNZCON1 EQU   ICNZCONS
ICNZATSA EQU   ISTICNCB+676
ICNZX012 EQU   ISTICNCB+675
ICNZX011 EQU   ISTICNCB+674
ICNZX010 EQU   ISTICNCB+672
ICNSRB   EQU   ISTICNCB+628
ICNIOSB  EQU   ISTICNCB+520
ICNZC001 EQU   ISTICNCB+512
ICNZX013 EQU   ISTICNCB+511
ICNZS010 EQU   ICNZH002+1
ICNZS00F EQU   ICNZH002+1
ICNZS00E EQU   ICNZH002+1
ICNZS00D EQU   ICNZH002+1
ICNZS00C EQU   ICNZH002+1
ICNZS00B EQU   ICNZH002+1
ICNZS01A EQU   ICNZS00A
ICNZS019 EQU   ICNZS009
ICNZS018 EQU   ICNZS008
ICNZS017 EQU   ICNZS007
ICNZS016 EQU   ICNZS006
ICNZS005 EQU   ICNZH002
ICNZS014 EQU   ICNZS004
ICNZS013 EQU   ICNZS003
ICNZS012 EQU   ICNZS002
ICNZS001 EQU   ICNZH002
ICNZF028 EQU   ICNZFLAG
ICNZF027 EQU   ICNZFLAG
ICNZF026 EQU   ICNZFLAG
ICNZF025 EQU   ICNZFLAG
ICNZF024 EQU   ICNZFLAG
ICNZF023 EQU   ICNZFLAG
ICNZF022 EQU   ICNZFLAG
ICNZF021 EQU   ICNZFLAG
ICNWORD5 EQU   ISTICNCB+504
ICNMSIZE EQU   ISTICNCB+500
ICNLCVTA EQU   ISTICNCB+496
ICNDEBAD EQU   ICNDIDEB+1
ICNDCBIF EQU   ICNDIDEB
ICNUCBAD EQU   ICNDCDEB+8
ICNAPPAD EQU   ICNDCDEB+5
ICNEXSCL EQU   ICNDCDEB+4
ICNDCBAD EQU   ICNDCDEB+1
ICNDEBID EQU   ICNDCDEB
@NM00060 EQU   ISTICNCB+477
ICNERCNT EQU   ISTICNCB+476
ICNZX002 EQU   ISTICNCB+475
ICNZX001 EQU   ISTICNCB+474
ICNZH001 EQU   ISTICNCB+472
ICNZSW3R EQU   ISTICNCB+468
ICNZSW2R EQU   ISTICNCB+464
ICNZSW1R EQU   ISTICNCB+460
ICNZS4VR EQU   ISTICNCB+436
ICNZS4RR EQU   ISTICNCB+432
ICNZS4FC EQU   ISTICNCB+428
ICNZS4BC EQU   ISTICNCB+424
ICNZS3VR EQU   ISTICNCB+400
ICNZS3RR EQU   ISTICNCB+396
ICNZS3FC EQU   ISTICNCB+392
ICNZS3BC EQU   ISTICNCB+388
ICNZS1RC EQU   ICNZS1VR+36
ICNDIEW3 EQU   ICNDIEWA+8
ICNDIEW2 EQU   ICNDIEWA+4
ICNDIEW1 EQU   ICNDIEWA
ICNZS1RR EQU   ISTICNCB+344
ICNZS1FC EQU   ISTICNCB+340
ICNZS1BC EQU   ISTICNCB+336
ICNRSTIC EQU   ICNZD004
ICNRDCOD EQU   ICNRSCCW
ICNZD006 EQU   ISTICNCB+312
ICNZD005 EQU   ISTICNCB+304
ICNWSTIC EQU   ICNZD002
ICNWRCOD EQU   ICNWSCCW
ICNZV008 EQU   ISTICNCB+284
ICNZV007 EQU   ISTICNCB+280
ICNZV006 EQU   ISTICNCB+276
ICNZV005 EQU   ISTICNCB+272
ICNZV004 EQU   ISTICNCB+268
ICNLSTIT EQU   ISTICNCB+264
ICNLSTIF EQU   ISTICNCB+260
ICNZV002 EQU   ISTICNCB+256
ICNZV001 EQU   ISTICNCB+252
ICNZV00A EQU   ISTICNCB+249
ICNBUFF  EQU   ISTICNCB+248
ICNCPQ   EQU   ISTICNCB+244
ICNNICNA EQU   ISTICNCB+240
@NM00059 EQU   ICNFLAG2+2
ICNZF019 EQU   ICNFLAG2+2
ICNZF018 EQU   ICNFLAG2+2
ICNZF017 EQU   ICNFLAG2+2
ICNZF016 EQU   ICNFLAG2+2
ICNZF015 EQU   ICNFLAG2+2
ICNMSG   EQU   ICNFLAG2+1
ICNCLOSE EQU   ICNFLAG2+1
ICNZF014 EQU   ICNFLAG2+1
ICNZF013 EQU   ICNFLAG2+1
ICNZF012 EQU   ICNFLAG2+1
ICNZF011 EQU   ICNFLAG2+1
ICNZF00D EQU   ICNFLAG2+1
ICNZF00B EQU   ICNFLAG2+1
ICNZF00A EQU   ICNFLAG2
ICNZF008 EQU   ICNFLAG2
ICNZF007 EQU   ICNFLAG2
ICNZF005 EQU   ICNFLAG2
ICNZF004 EQU   ICNFLAG2
ICNZF003 EQU   ICNFLAG2
ICNZF002 EQU   ICNFLAG2
ICNZF001 EQU   ICNFLAG2
ICNLOCK  EQU   ISTICNCB+232
ICNLICNA EQU   ISTICNCB+228
ICNRPH   EQU   ISTICNCB+120
ICNZV003 EQU   ISTICNCB+116
ICNLAST  EQU   ISTICNCB+112
ICNLSTBT EQU   ISTICNCB+108
ICNSIOQ  EQU   ISTICNCB+104
ICNFLAG1 EQU   ISTICNCB+103
ICNZSW08 EQU   ICNZSWS
ICNZSW07 EQU   ICNZSWS
ICNZSW06 EQU   ICNZSWS
ICNZSW05 EQU   ICNZSWS
ICNZSW04 EQU   ICNZSWS
ICNZSW03 EQU   ICNZSWS
ICNZSW02 EQU   ICNZSWS
ICNZSW01 EQU   ICNZSWS
ICNZFF69 EQU   ICNFFLAG
@NM00058 EQU   ICNFFLAG
ICNZFF05 EQU   ICNFFLAG
ICNZFF04 EQU   ICNFFLAG
ICNZFF03 EQU   ICNFFLAG
ICNZFF02 EQU   ICNFFLAG
ICNZFF01 EQU   ICNFFLAG
ICNZFF00 EQU   ICNFFLAG
@NM00057 EQU   ICNFLAG
ICNZCRIT EQU   ICNFLAG
ICNSTART EQU   ICNFLAG
ICNSLOW  EQU   ICNFLAG
ICNZF010 EQU   ICNFLAG
ICNZF00F EQU   ICNFLAG
ICNZF00E EQU   ICNFLAG
ICNCONF  EQU   ICNZF006
ICNCKPAB EQU   ICNCKFLD+1
ICNRSV07 EQU   ICNCKFLD
ICNCKBIT EQU   ICNCKFLD
ICNZPAB4 EQU   ISTICNCB+80
ICNZPAB1 EQU   ISTICNCB+64
ICNRSV01 EQU   ISTICNCB+60
@NM00056 EQU   ISTICNCB+56
@NM00055 EQU   ISTICNCB+54
@NM00054 EQU   @NM00053
ICNRRY   EQU   @NM00053
ICNLCLUS EQU   @NM00053
ICNROLN  EQU   @NM00053
ICNRNRY  EQU   @NM00053
ICNLNKMD EQU   ISTICNCB+52
ICNCUUA  EQU   ISTICNCB+48
ICNCB    EQU   ISTICNCB
ZIBLNG1  EQU   ZIBFSM
ZIBCHAIN EQU   ISTZIBUF
FSBRSV01 EQU   FSBFSB+30
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00046 EQU   FSBSS2
@NM00045 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00044 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBGATE  EQU   FSBFSBA
FSBLATOP EQU   FSBSFLGS
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHEB     EQU   RH3
RHBB     EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHEXCEPT EQU   RH2
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00043 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00042 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00041 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00040 EQU   FMCSHEAQ
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00039 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCNSALU EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00038 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00037 EQU   ISTFMCB+30
@NM00036 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
ZOBLNG1  EQU   ZOBFSM
ZOBCHAIN EQU   ISTZOBUF
BTUTEXT  EQU   ISTBTU+20
BTUEXTR  EQU   ISTBTU+19
BTURSV02 EQU   BTUSYSTR
BTUPHASE EQU   BTUSYSTR
BTURSV01 EQU   BTUSYSTR
BTUBDU   EQU   ISTBTU+14
BTUPAD   EQU   BTURH+3
BTURH3   EQU   BTURH+2
BTURH2   EQU   BTURH+1
BTURH1   EQU   BTURH
BTUDCF   EQU   BTUBTH+8
BTUZRTSC EQU   BTURQFLG+1
BTUZRT0B EQU   BTURQFLG+1
BTUZRT0A EQU   BTURQFLG+1
BTUZRT09 EQU   BTURQFLG+1
BTUZRT08 EQU   BTURQFLG+1
BTUZRT07 EQU   BTURQFLG
BTUZRT06 EQU   BTURQFLG
BTUZRT05 EQU   BTURQFLG
BTUZRT04 EQU   BTURQFLG
BTUZRT03 EQU   BTURQFLG
BTUZRT02 EQU   BTURQFLG
BTUZRT01 EQU   BTURQFLG
BTUZRT00 EQU   BTURQFLG
BTUSORCE EQU   BTUBTH+4
BTUDEST  EQU   BTUBTH+2
BTUCDF   EQU   BTUFID+1
BTUSCF   EQU   BTUFID+1
BTUPRY   EQU   BTUFID+1
BTUASFL  EQU   BTUFID
BTUPSFL  EQU   BTUFID
BTUMPF   EQU   BTUFID
BTUFIDNO EQU   BTUFID
TH2SNF   EQU   ISTTH2+4
TH2OAF   EQU   ISTTH2+3
TH2DAF   EQU   ISTTH2+2
TH2CDF   EQU   TH2FLAG1+1
TH2SEF   EQU   TH2FLAG1+1
TH2PYF   EQU   TH2FLAG1+1
TH2AFI   EQU   TH2FLAG1
TH2PSI   EQU   TH2FLAG1
TH2CMPLI EQU   TH2MPF
TH2RHI   EQU   TH2MPF
TH2FID   EQU   TH2FLAG1
THCMPLI  EQU   THMPF
THRHI    EQU   THMPF
LHVDATA  EQU   ISTLH+4
LHFUNCT  EQU   ISTLH+3
@NM00030 EQU   ISTLH+2
LHLEN    EQU   ISTLH
BDURSV04 EQU   BDUFLAGS
BDURTOE  EQU   BDUFLAGS
BDUSTPR  EQU   BDUFLAGS
BDURSV03 EQU   BDUFLAGS
BDUALT   EQU   BDUFUNC
BDUNACK  EQU   BDUFUNC
BDUACK   EQU   BDUFUNC
BDUTRPM  EQU   BDUFUNC
BDUFBMI  EQU   BDUFUNC
BDULDGPH EQU   BDUFUNC
BDUHEADP EQU   BDUFUNC
BDUSOH   EQU   BDUCHECK
BDURSV01 EQU   BDUMODIF
BDUMOD0  EQU   BDUMOD1
BDUCOMND EQU   ISTBDU
LSCTLBAD EQU   ISTLSCB+28
LSCFDB2  EQU   LSCFDBA+1
LSCFDB1  EQU   LSCFDBA
LSCLCCW1 EQU   ISTLSCB+12
LSCRRCNT EQU   LSCSEQ+1
LSCRRCCT EQU   LSCSEQ
LSCATOP  EQU   LSCFLGS
LSCFREE  EQU   LSCFLGS
LSCDSTAT EQU   LSCFLGS
LSCEXRES EQU   LSCFLGS
LSCZRIMM EQU   LSCFLGS
LSCRSV01 EQU   LSCFLGS
LSCSMODE EQU   LSCFLGS
LSCZMIRC EQU   LSCRUCNT
LSCCHAI2 EQU   LSCCHAIN+1
LSCCHNG  EQU   LSCCHAI1
LSCZRTSC EQU   LSCZMNRC
LSCZRT0B EQU   LSCZMNRC
LSCZRT0A EQU   LSCZMNRC
LSCZRTL9 EQU   LSCZRT09
LSCZRTL8 EQU   LSCZRT08
LSCZRTL7 EQU   LSCZRT07
LSCZRTL6 EQU   LSCZRT06
LSCZRTL5 EQU   LSCZRT05
LSCZRTL4 EQU   LSCZRT04
LSCZRTL3 EQU   LSCZRT03
LSCZRTL2 EQU   LSCZRT02
LSCZRT01 EQU   LSCREQTG
LSCZRT00 EQU   LSCREQTG
LSCLNGTH EQU   LSC1WORD+1
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00029 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00028 EQU   ATCAOSM+333
@NM00027 EQU   @NM00026
ATCSNUF  EQU   @NM00026
ATCOPKL  EQU   @NM00026
ATCABEN  EQU   @NM00026
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00025 EQU   @NM00024
ATCVTMAB EQU   @NM00024
@NM00023 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00022 EQU   ISTATCVT+819
@NM00021 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00020 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00019 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00018 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00017 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00016 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00015 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00013
LOKPRY   EQU   @NM00013
@NM00014 EQU   @NM00013
@NM00012 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABOFFST EQU   ISTPAB+8
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
ZPSZDFQR EQU   ISTZPSVT+80
ZPSZDFPR EQU   ISTZPSVT+76
ZPSZDFXR EQU   ISTZPSVT+72
ZPSZWRD5 EQU   ISTZPSVT+68
ZPSZWRD4 EQU   ISTZPSVT+64
ZPSZDFMB EQU   ISTZPSVT+60
ZPSZDFMF EQU   ISTZPSVT+56
ZPSZDFNB EQU   ISTZPSVT+52
@NM00011 EQU   ISTZPSVT+48
ZPSZDFF0 EQU   ISTZPSVT+44
ZPSZTRTT EQU   ISTZPSVT+40
ZPSZBFOB EQU   ISTZPSVT+36
ZPSZBFMB EQU   ISTZPSVT+32
ZPSZBFY0 EQU   ISTZPSVT+24
ZPSZDFI0 EQU   ISTZPSVT+20
ZPSZDFH0 EQU   ISTZPSVT+12
ZPSZDFD0 EQU   ISTZPSVT+8
NCBRSV01 EQU   ISTNCB+46
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00010 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
@NM00009 EQU   SRBSECT+40
@NM00008 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00004 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00003 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00002
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00001 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00870 EQU   @RC00868
@RC00895 EQU   @RC00894
@RC01032 EQU   @RC00940
@ENDDATA EQU   *
         END   ISTZBFID,(C'PLS2108',0603,77326)
