         TITLE 'IFG0555J, ALIAS IFG0196P/EOV, OPEN - DA OUTPUT USER HEAX
               DER LABELS'
         COPY  LCGASMSW
IFG0555J CSECT
         ENTRY IFG0196P                                          Y02080
IFG0196P EQU   IFG0555J                 ALLIAS ENTRY POINT       Y02080
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0555J (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = EOV/OPEN DA OUTPUT USER HEADER LABELS            *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE WRITES USER HEADER/TRAILER LABELS FOR OPEN-      *
*        EOV UNDER CONTROL OF THE CALLER'S OUTPUT USER HEADER/TRAILER *
*        LABEL ROUTINE, OR FORMATS THE USER LABEL TRACK IF NO USER    *
*        LABEL EXIT ROUTINE EXISTS AND THE DATA SET IS BEING PRO-     *
*        CESSED FOR OUTPUT AND LABEL = SUL.                           *
*        1) A 152 BYTE USER LABEL WORK AREA IS OBTAINED FOR EOV FROM  *
*        FETCH PROTECTED SUBPOOL 229 IN DATA MANAGEMENT KEY, AND      *
*        A 96 BYTE USER LABEL WORK AREA IS OBTAINED FOR THE CALLER    *
*        FROM FETCH PROTECTED SUBPOOL 229 IN THE CALLER'S KEY.        *
*        2) USER LABELS ARE PRESENTED TO END OF VOLUME AND WRITTEN    *
*        UNTIL 8 LABELS ARE WRITTEN OR THE CALLER INDICATES THROUGH   *
*        A RETURN CODE TO TERMINATE PROCESSING.                       *
*        3) THE CALLER RETURNS TO THIS MODULE (AFTER PROCESSING EACH  *
*        USER LABEL) WITH A RETURN CODE IN REGISTER 15:               *
*        0 - DO NOT WRITE LABEL BUT TERMINATE PROCESSING UL           *
*        4 - WRITE LABEL AND TERMINATE PROCESSING                     *
*        8 - WRITE LABEL AND CONTINUE PROCESSING                      *
*        4) IF NO USER LABEL TRACK WAS ALLOCATED, THE CALLER'S EXIT   *
*        ROUTINE IS ENTERED WITH THE BUFFER POINTER SET TO ZERO.      *
*        5) IF AN I/O ERROR OCCURS WHEN WRITING USER LABEL, THE       *
*        CALLER'S ROUTINE IS ENTERED AGAIN WITH BIT 0 OF THE          *
*        FLAG BYTE SET TO 1, AND A POINTER TO THE STATUS INFORMATION  *
*        IN THE WORK AREA IOB. ON RETURN, THE RETURN CODE IS IG-      *
*        NORED AND NORMAL PROCESSING RESUMES FOR EOV. HOWEVER, FOR    *
*        OPEN, THE DCBOFLGS BUSY BIT IS TURNED OFF TO TERMINATE       *
*        THE OPEN OF THE DCB. CONTROL IS PASSED TO THE END OF OPEN    *
*        TO FREE MAIN WORK AREAS AND TO RETURN TO THE CALLER OF OPEN  *
*        WITHOUT SETTING THE DCBOFLGS OPEN BIT.                       *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0555J                                                     *
*        IFG0196P - ALIAS                                             *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        DXRETMOD - RETURN TO MODULE WHICH CALLED 555J                *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0198N - I/O ERROR PROCESSING USER LABELS                  *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        PSA                                                          *
*        TCB                                                          *
*        RB                                                           *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES LOAD                                                  *
*        IECRES GET                                                   *
*        IECRES INIT                                                  *
*        IECRES FREE                                                  *
*        IECRES UEXIT                                                 *
*        EXCP                                                         *
*        WAIT                                                         *
*        SETLOCK                                                      *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TCB,RB,DCB,       DEFINE DESIRED DSCTS TO BE     X
               MAIN,DEB,USERLAB,RRPL,   EXPANDED AT THE END      Y02144X
               USERTOT,WTG,PREFX,PSA                             Y02082
*
         IECEQU ,                       DEFINE EQUATES
*
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING WTG,RWTG                 DEFINE BASE TO XCTL/WTG TABLE
         USING ULDMWK,RUCB              BASE FOR EOV UL W.A.     Y02082
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
***********************************************************************
*
*    OBTAIN STORAGE FOR EOV'S USER LABEL WORK AREA AND THE       Y02082
*    USER'S USER LABEL WORK AREA                                 Y02082
*                                                                Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES,STM=(2,14,WTGPREFX),   Y02082*
               SP=K229,ID=ULWA                                   Y02144
*
         LR    RUCB,R1                  SET BASE FOR ULWK DSECT
*
         IECRES GET,LV=USERLU,PREFIX=NO,STM=(2,14,WTGPREFX),     Y02082*
               SP=K229,KEY=USER                                  Y02082
         MODESET EXTKEY=DATAMGT         RESUME O/C/E KEY         Y02082
         USING ULUWK,R9                 BASE FOR USER'S UL W.A.  Y02082
         LR    R9,R1                    GOTTEN CORE ADDRESS      Y02082
         MVC   DXCCW11,DXCCW8           SAVE SAVED REGS 9-10 IN 0-1
*
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0196P)
         BNE   ULHDR08A                 BR IF NO
         MVC   DXVOLMT2(K5),DXCCW7      SAVE DSCB CCHHR ADDR     Y02134
*
ULHDR08A EQU   *                        NOT OPEN
*
*        DETERMINE IF A USER LABEL EXTENT HAS BEEN ALLOCATED FOR THIS
*        DATA SET.
*
         CLI   DSCEXTYP,ULEXT           IS 1ST EXTENT FOR USER LABELS
         BNE   ULNOEXT                  BR IF NO, GO TO USER
*
***********************************************************************
*
*        EXTENT EXISTS - PROCESS USER LABELS
*
         MVC   DXDAADDR+K3(K4),DSCLOWLM  CCHH FROM START OF 1ST EXTENT
         MVI   DXDAADDR+K7,K0           START SEARCH ID AT R0
*
*
*  SET UP CHANNEL PROGRAM TO WRITE A HEADER LABEL.
*  EACH HEADER LABEL WRITTEN IS FOLLOWED BY TWO FILE MARKS -
*  UHL(N+1) AND UTL0.
*
*        SEARCH ID EQ
*        TIC *-8
*        WRITE COUNT,KEY,DATA           ULWK1, UHLN,     LABEL
*        WRITE COUNT,KEY,(DATA)         ULWK5, UHL(N+1), FILE MARK
*        WRITE COUNT,KEY,(DATA)         ULWK2, UTL0,     FILE MARK
*        SEARCH ID EQ
*        TIC *-8
*        READ  COUNT,KEY,DATA           READ BACK UHLN CHECK
*
         XC    DXCCW1(K64),DXCCW1       CLEAR CCW AREA
         LA    R1,DXDAADDR+K3
         ST    R1,DXCCW1                SEARCH ID FROM IOBDADAD+3
         LA    R1,DXCCW1
         ST    R1,DXCCW2                TIC TO CCW1
         LA    R1,ULWK8                 WRITE C,K,DATA (UHL1)
         ST    R1,DXCCW3                FROM ULWK8
         LA    R1,ULWK5                 WRITE C,K (UHL2)
         ST    R1,DXCCW4                FROM ULWK5
*
         LA    R1,ULWK2
         ST    R1,DXCCW5                WRITE FILE MARK FROM ULWK2
         OC    DXCCW1(K40),ULCP26P      OR IN CMND, FLAGS, LENGTH
*
         MVC   DXCCW6(K24),DXCCW1       APPEND WRITE CHECK TO CHNL PGM
         LA    R1,DXCCW6
         ST    R1,DXCCW7                TIC BACK TO CCW6
         MVI   DXCCW7,CCWTIC            RESTORE TIC OP
         MVI   DXCCW8,ULHRDCKD          MAKE OP READ
         MVI   DXCCW8+K4,ULHSKIPB       SET SKIP BIT ON, CHAIN OFF
*
*        STRUCTURE COUNT AND KEY FIELDS IN WORK AREA.
*
         MVC   ULWK8,DXDAADDR+K3        CCHH TO COUNT FIELD IN WK AREA
         MVC   ULWK9(K8),UHLCON6P       RKDD, KEY TO WORK AREA FOR UHLN
*
         MVC   ULWK5(K12),ULWK8         CT, KEY FOR UHL(N+1)  FILE MARK
         MVC   ULWK2(K8),ULWK8          CT FOR UTLO  FILE MARK
         MVC   ULWK4,UTLCON6P           KEY FOR UTLO
*
*        DETERMINE IF ACTIVE EXIT LIST ENTRY EXISTS.
*
         LA    RC,0(RC)                 ZERO HIGH ORDER BYTE
         LTR   RC,RC                    CHECK FOR ACTIVE EXIT
         BZ    ULHDR17                  BR IF NO
*
***********************************************************************
*
*        COMPLETE STRUCTURING OF WORK AREA FOR WRITING HEADER LABEL
*
ULHDR09  EQU   *                        INITIALIZE WORK AREA
         MVI   ULWK9+K3,K80             DATA LENGTH=80 FOR LABEL
         SR    R1,R1                    CLEAR REG.
         IC    R1,ULWK9                 PICK UP R FROM CT FIELD OF LBL
         LA    R1,K1(R1)                INCR R BY 1
         STC   R1,ULWK6                 R+1  UHL(N+1)
         LA    R1,K1(R1)                INCR R BY 1
         STC   R1,ULWK3                 R+2  UTL0
         IC    R1,ULWK10+K3             PICK UP N FROM LABEL KEY
         LA    R1,K1(R1)                INCR N BY 1
         STC   R1,ULWK7+K3              N+1
         CLI   ULWK10+K3,C'8'           CHECK NO. LABELS GT 8
         BH    ULHDROUT                 BR IF YES TO SET UP RETURN
*
         L     R1,ULWK10                PLACE UHLN IN REG        Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*                                                                Y02082
         ST    R1,ULBUFR                PRIME USER BUFFER UHLN   Y02082
*
*        SET UP AND EXECUTE SYNCHRONOUS EXIT TO USER'S ROUTINE FOR
*        LABEL CONSTRUCTION.
*
         BAL   RD,ULSYNC6P              GO EXIT TO USER'S ROUTINE
* RETURNS IN DATAMGT KEY                                         Y02082
         L     R1,ULWK10                GET UTLX/UHLX            YM1175
         MODESET KEYADDR=DXUKEY,WORKREG=12 ASSUME USER KEY       YM1175
         ST    R1,ULBUFR                PLACE IN USER'S BUFFER   YM1175
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM1175
         LTR   RF,RF                    CHECK RETURN CODE FOR ZERO
         BZ    ULHDR13                  CODE=0, NO LABEL CREATED-BRANCH
         ST    RF,ULWK1                 SAVE RETURN CODE
         CLI   ULWK1+K3,K4              CHECK FOR RETURN CODE=4
         BE    ULHDR099                 RETURN CODE IS 4,CONTINUE
         CLI   ULWK1+K3,K8              CHECK FOR RETURN CODE=8
         BNE   ULHDR13                  RET CODE NOT 4,8-INVALID
*                                       RETURNED,NO FURTHER PROCESSING
ULHDR099 EQU   *                        RETURN CODE = 4
         OI    DXCCW2+K4,X01            SET SWITCH INDIC NOT FIRST
*                                                                Y02082
*    COPY LABEL FROM USER BUFFER TO EOV BUFFER                   Y02082
*                                                                Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y20082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*    GET LOCAL LOCK                                              Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASE BELOW')  Y02082
*                                                                Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL WORK AREA CORE           Y02082
         OC    ULUWK(USERLU),ULUWK      PROGRAM CHECK IF NOT     Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULDMBUFR,ULBUFR          COPY LABEL FROM USER     Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         BAL   RC,ULEXCP6P              GO WRITE LABEL
*
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR
         BZ    ULHDR10                  BR IF YES
*
         CLI   ULWK1+K3,K4              CHECK RET CODE FOR MORE LABELS
         BE    ULHDROUT                 NO, PREV LABEL WAS LAST
*
         MVC   DXDAADDR+K7(K1),ULWK9    R OF LABEL JUST WRITTEN TO IOB
         MVC   ULWK8(K12),ULWK5         CT,KEY OF UHL(N+1) BECOMES CT,
*                                       KEY OF NEXT USER LABEL
         B     ULHDR09                  BR TO PROCESS NEXT LABEL
*
***********************************************************************
*
*  I/O ERROR OCURRED WHILE WRITING USER LABELS.
*
ULHDR10  EQU   *                        I/O ERROR WRITING LABEL
         LA    R1,DXIOB                 INSERT POINTER TO STATUS INFO
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULERRPTR              IN PARAMETER LIST
         OI    ULERRPTR,ERROR           FLAG ERROR
         BAL   RD,ULSYNC61              GO TO SYNCH TO USER
* RETURNS IN DATAMGT KEY                                         Y02082
*
ULHDR105 EQU   *                        RETURN FROM SYNCH
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0196P)
         BNE   ULHDROUT                 BR IF NO
*
         NI    DCBOFLGS,X'FF'-DCBOBUSY  TURN OFF DCBOFLGS BUSY BIT TO
*                                       STOP OPEN
         B     ULHDROUT                 BR TO SET UP RETURN
*
***********************************************************************
*
ULHDR13  EQU   *                        INVALID RETURN CODE
         TM    DXCCW2+K4,X01            IS IT FIRST TIME
         BO    ULHDROUT                 BR IF NO
*
         MVI   ULWK6,K1                 R=1     UHL
         MVI   ULWK7+K3,CHAR1           N=1     UHL
*
*        IF THE USER REQUESTS, VIA THE RETURN CODE, THAT NO USER
*        HEADER LABELS BE WRITTEN OR
*        IF THE EXIT IS INACTIVE, BUT AN EXTENT HAS BEEN ALLOCATED FOR
*        USER LABELS, OPEN AND EOV MUST WRITE TWO FILE MARKS (UHL1
*        AND UTL0).
*
ULHDR17  EQU   *                        WRITE 2 FILE MARKS
         MVI   ULWK3,K2                 R=2 FOR UTL0
         MVC   DXCCW3(K16),DXCCW4       SET CP TO WRITE 2 FILEMARKS
         NI    DXCCW4+K4,X'FF'-CCWCMDCH  TURN OFF CC FLAG IN LAST CCW
*
         BAL   RC,ULEXCP6P              GO WRITE FILEMARKS
         TM    DXECB,ECBNOERR           CHECK FOR I/O ERROR
         BO    ULHDROUT                 BR IF NO ERROR
*
         L     R1,DXREGC                OBTAIN DCB EXIT LIST ENTRY
         LA    R1,0(R1)                 ZERO CODE BYTE
         LTR   R1,R1                    IS USER EXIT ACTIVE
         BNZ   ULHDR10                  BR IF YES TO GO TO EXIT RTN
         B     ULHDR105                 BR TO END LABEL PROCESSING
*
***********************************************************************
*
*        NO USER LABEL TRACK WAS ALLOCATED.  EXIT TO USER'S ROUTINE
*        WITH POINTER TO LABEL BUFFER ZEROED.
*
ULNOEXT  EQU   *                        EXIT TO USER'S ROUTINE
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULERRPTR,ULERRPTR        CLEAR ANY ERROR INDICATOR
         SR    R1,R1                    BUFFER POINTER TO ZERO
         BAL   RD,ULSYNC62              GO SYNCH TO USER
* RETURNS IN DATAMGT KEY                                         Y02082
*
***********************************************************************
*
ULHDROUT EQU   *                        SET RETURN FOR HEADER PROCESSNG
*
*        FREE  WORKAREA AND LABEL BUFFER AND XCTL TO I/O SUPPORT
*        MODULE WHICH CALLED THIS MODULE.
*
         IECRES FREE,A=(R9),PREFIX=NO,SP=K229,LV=USERLU,         Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         IECRES FREE,A=(RUCB),PREFIX=YES,STM=(2,14,WTGPREFX)     Y02082
*
         LM    RB,RET,DXREGB            RESTORE REGS 11-14
         LM    RTIOT,RUCB,DXREG0        RESTORE REGS 9-10 FROM 0-1
*
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0196P)
         BNE   ULHDR08B                 BR IF NO
         MVC   DXCCW7(K5),DXVOLMT2      RESTORE DSCB CCHHR       Y02134
         TM    DCBOFLGS,DCBOBUSY        IS DCB STILL BEING OPENED
         BO    ULHDR08B                 BR IF YES
*
         IECRES LOAD,MODNM=LOAD8N6P,BRCODE=4,BRANCH=QUEUED       Y02080
*                                      XCTL TO OPEN FINAL STRING Y02080
*
ULHDR08B EQU   *                        RETURN TO CALLING MOD
         IECRES LOAD,MODID=DXRETMOD,BRCODE=(14),BRANCH=QUEUED    Y02134
*
***********************************************************************
*
*        CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
*
ULEXCP6P EQU   *                        I/O ROUTINE
         EXCP  DXIOB                    WRITE USER HEADER LABEL
*
         WAIT  ECB=DXECB                WAIT FOR WRITE TO COMPLETE
*
         BR    RC                       RETURN FROM I/O SUBROUTINE
*
***********************************************************************
*
*        CLOSED SUBROUTINE TO PASS CONTROL TO USER EXIT          Y02082
*        REGISTER CONTENTS ARE AS FOLLOWS-                       Y02082
*                        R0 - CONTAINS NO MEANINGFUL INFO
*                        R1 - PTR TO PARAMETER LIST
*                    R2-R13 - USER'S CONTENTS BEFORE I/O SUPPORT
*                       R14 - RETURN ADDRESS (SET BY SYNCH)
*                       R15 - USER'S EXIT ROUTINE ADDRESS
*
ULSYNC6P EQU   *                        SYNCH ENTRY 1
         XC    ULERRPTR,ULERRPTR        ZERO ERROR INDICATORS
ULSYNC61 EQU   *                        SYNCH ENTRY 2
         LA    R1,ULBUFR                PTR TO LABEL BUFFER
ULSYNC62 EQU   *                        SYNCH ENTRY 3
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR,ULTOTPTR        ZERO TOTALING AREA
         TM    DCBDSORG,DCBORGDA        CK FOR DIRECT ORGANIZATION
         BO    ULSYNCH3                 BR IF DIRECT
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0196P)
         BE    ULSYNCH3                 BR IF YES, SKIP USER TOTALING
         TM    DCBMACRF,DCBMEXCP        TEST IF EXCP
         BO    ULSYNCH3                 BR IF YES, SKIP USER TOTALING
         TM    DCBOPTCD,DCBOPTT         TEST IF USER TOTALING
         BZ    ULSYNCH3                 HAS BEEN REQUESTED, BR IF NO
*
         L     RDEB,DCBDEBAD            GET ADDR OF USER'S DEB   Y01021
         SR    R1,R1                    CLEAR WORK REG
         IC    R1,DEBNMEXT-DEB(,RDEB)   GET NUMBER OF EXTENTS
         SLL   R1,K4                    MULTIPLY BY 16
         L     RDEB,K36(R1,RDEB)        GET ADDR TOTALING WORK AREA
*                                       DEB ADDR+32+4+LENGTH EXTENTS
         USING TOTSAVWA,RDEB            SET BASE - TOTALING AREA
         MVC   ULTOTPTR,TOTEOVPT        CURRENT IMAGE AREA ADDR TO
*                                       USER LBL PARM LIST
         DROP  RDEB                     DROP TOTALING AREA BASE
*
ULSYNCH3 EQU   *                        NO USER TOTALING
         MODESET EXTKEY=DATAMGT                                  Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT = 0         Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1  ASSUME USER'S KEY     Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         MODESET EXTKEY=DATAMGT                                  Y02082
         IECRES UEXIT,EXITAD=DXREGC,STM=(2,13,WTGPREFX)          Y02082
         L     RDCB,DXUDCBAD            PT TO CALLER'S DCB       YM3005
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME CALLER'S KEY    YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3005
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM3005
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE OFLGS FIELD       YM3005
         L     RDEB,DCBDEBAD            GET ADDR OF USER'S DEB   Y01021
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT = 1
         L     R0,ULWK10                PLACE UHLN IN REG        Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER KEY        Y02082
*                                                                Y02082
         ST    R0,ULBUFR                REPLACE UHLN IN USER BUFFY02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         BR    RD                       RETURN FROM SYNCH EXIT SUBR
         EJECT
***********************************************************************
*
*        CONSTANTS
*
UHLCON6P DC    0F'0',X'01040000'        RKDD - R0, COUNT, KEY FOR UHL
         DC    C'UHL1'                  KEY
UTLCON6P DC    C'UTL0'                  KEY FOR SEARCH ARGUMENT
*
*  CCW'S TO WRITE USER HEADER LABELS FOLLOWED BY UHL(N+1) UTL0 FILE MKS
ULCP26P  DC    X'3100000040000005'      SEARCH ID EQ
         DC    X'0800000000000000'      TIC *-8
         DC    X'1D0000004000005C'      WRITE CKD    UHLN     LABEL
         DC    X'1D0000004000000C'      WRITE CKD    UHL(N+1) FILE MARK
         DC    X'1D0000004000000C'      WRITE CKD    UTL0     FILE MARK
*
ULHRDCKD EQU   X'1E'                    READ COUNT, KEY, AND DATA
ULHSKIPB EQU   X'10'                    SET SKIP BIT ON
*
         XCTLTABL ID=(LOAD8N6P,IFG0198N),                        Y02080X
               BRT=YES,LENGTH=                                   Y02080
*
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
*
         END
