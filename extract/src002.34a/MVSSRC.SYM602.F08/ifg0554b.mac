         TITLE 'IFG0554B                      FEOV DIRECT ACCESS VBS UP*
               DATE REPOSITIONING/FREE DEB FUNCTION'             Y02082
IFG0554B CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 03 DELETIONS                                   *
*0000                                                          @ZM33024
*0000                                                          @ZA02522
*0000                                                          @ZA02528
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0554B (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME =                                                  *
*        FEOV DIRECT ACCESS VBS UPDATE REPOSITIONING/FREE DEB FUNCTION*
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        ENTERED FROM IFG0551H IF BIT 3 IN DCBIOBAD IS SET TO 1       *
*        AND FEOV WAS ISSUED FOR A DIRECT ACCESS UPDATE DATA SET      *
*        PROCESSING VARIABLE BLOCKED SPANNED RECORDS.                 *
*                                                                     *
*        THIS MODULE HAS TWO FUNCTIONS-                               *
*                                                                     *
*        1) (CALLED THE 'FREE OLD DEB' FUNCTION) FREE THE DEB         *
*        WHOSE ADDRESS HAS BEEN SAVED IN DCBIOBAD.                    *
*        THIS INVOLVES REMOVING IT FROM THE DEB TABLE AND FREEING THE *
*        VIRTUAL STORAGE IT OCCUPIES.                                 *
*                                                                     *
*        2) (CALLED THE 'REPOSITION' FUNCTION) REESTABLISH THE        *
*        DEB WHOSE ADDRESS HAS BEEN SAVED IN DCBIOBAD (CHAIN IT TO    *
*        THE TCB DEB CHAIN AND ENSURE THE VOLUME IT REPRESENTS IS     *
*        MOUNTED BY GIVING IFG0554A CONTROL) AND FREEING THE CURRENT  *
*        DEB WHICH DCBDEBAD POINTS TO.                                *
         EJECT
*        THE 'REPOSITION' FUNCTION IS IMPLEMENTED AS FOLLOWS-         *
*                                                                     *
*        R1) THE CURRENT DEB IS PAGE FREED IF IT HAD BEEN PAGE FIXED. *
*        THE LOCAL LOCK IS OBTAINED AND THE CURRENT DEB (POINTED      *
*        TO BY DCBDEBAD) IS DELETED FROM THE TCB DEB CHAIN OF THE TCB *
*        IN DEBTCBAD.                                                 *
*                                                                     *
*        R2) STILL HOLDING THE LOCK, THE BRANCH ENTRY TO THE DEB      *
*        VALIDITY CHECK ROUTINE IS ENTERED TO VERIFY THAT THE OLD DEB *
*        POINTED TO BY DCBIOBAD IS IN THE DEB TABLE. IT IS VERIFIED   *
*        THAT THE DEBDCBAD OF THE OLD DEB POINTS TO THE USER'S DCB    *
*        WITH ITS LOW ORDER BIT FLIPPED. IF EITHER OF THESE TESTS     *
*        FAIL, PROBLEM DETERMINATION IS GIVEN CONTROL CAUSING A       *
*        937-1C ABEND. THE LOCAL LOCK IS RELEASED.                    *
*                                                                     *
*        R3) THE OLD DEB IS POINTED TO THE COPIED DCB AND THE         *
*        COPIED DCB IS POINTED TO THE OLD DEB.                        *
*                                                                     *
*        R4) THE OLD DEB IS CHAINED TO THE TCB DEB CHAIN OF THE       *
*        TCB IN ITS DEBTCBAD.                                         *
*                                                                     *
*        R5) THE DEB EXTENSION IS POINTED TO THE OLD DEB.             *
*                                                                     *
*        R6) THE CURRENT DEB IS SAVED IN DCBIOBAD. THE CURRENT DEB    *
*        IS NOW CONSIDERED THE DEB TO BE FREED AND THE 'FREE OLD DEB' *
*        LOGIC IS ENTERED AS F3) BELOW.                               *
         EJECT
*        THE 'FREE OLD DEB' FUNCTION IS IMPLEMENTED AS FOLLOWS-       *
*                                                                     *
*        F1) THE LOCAL LOCK IS OBTAINED AND THE BRANCH ENTRY TO THE   *
*        DEB VALIDITY CHECK ROUTINE IS ENTERED TO VERIFY THAT THE DEB *
*        TO BE FREED (POINTED TO BY DCBIOBAD) IS IN THE DEB TABLE.    *
*        IF IT IS NOT CONTROL IS GIVEN TO F4 BELOW, CAUSING A 16E     *
*        ABEND WHEN AN ATTEMPT IS MADE TO DELETE THE DEB FROM THE DEB *
*        TABLE USING THE DEBCHK-DELETE MACRO. THE LOCAL LOCK IS       *
*        RELEASED.                                                    *
*                                                                     *
*        F2) IT IS VERIFIED THAT THE DEB TO BE FREED HAS THE ADDRESS  *
*        OF THE USER'S DCB IN DEBDCBAD WITH THE LOW ORDER BIT         *
*        FLIPPED. IF NOT CONTROL IS PASSED TO F4 BELOW CAUSING        *
*        A 16E ABEND.                                                 *
*                                                                     *
*        F3) THE DEBDCBAD FIELD OF THE DEB TO BE FREED IS POINTED     *
*        TO THE COPIED DCB-16 (DCB-(DCBDEBAD-DCBIOBAD)). THIS         *
*        ADDRESS AT OFFSET DCBDEBAD POINTS TO THE DCBIOBAD WHICH      *
*        WILL ALLOW DEBCHK-DELETE TO REMOVE THE DEB ADDRESS FROM THE  *
*        DEB TABLE.                                                   *
*                                                                     *
*        F4) DEBCHK-DELETE IS INVOKED PASSING AS A DCB ADDRESS THE    *
*        ADDRESS OF THE COPIED DCB-16. DEBCHK WILL FIND AT OFFSET     *
*        DCBDEBAD THE ADDRESS OF THE DEB TO BE FREED, AND THE         *
*        DEBDCBAD OF THIS DEB POINTS BACK TO THE 'DCB' (DCB-16).      *
*        THUS, DEBCHK WILL PROCEDE WITH ITS FUNCTION.                 *
*                                                                     *
*        F5) THE DEB TO BE FREED IS FREEMAINED USING A DIRECTED       *
*        BRANCH ENTRY TO FREEMAIN DIRECTED TO THE TCB IN DEBTCBAD.    *
         EJECT
*        IF THE 'FREE OLD DEB' FUNCTION WAS INVOKED, BITS 2 AND 3 IN  *
*        DCBIOBAD ARE SET TO 1 AND MODULE IFG0551L IS GIVEN CONTROL   *
*        TO COMPLETE EOV PROCESSING.                                  *
*                                                                     *
*        IF THE 'REPOSITION' FUNCTION WAS INVOKED, BIT 2 OF DCBIOBAD  *
*        IS SET TO 1 AND THE FOLLOWING FUNCTION IS PERFORMED-         *
*                                                                     *
*        THE DATA MANAGEMENT COUNT OF THE UCB OF THE DEB WHICH WAS    *
*        FREED IS DECREMENTED. DXVOLSEQ IS DECREMENTED AND MODULE     *
*        IFG0554A IS GIVEN CONTROL TO MOUNT AND VERIFY THE PREVIOUS   *
*        VOLUME (THE VOLUME OF THE NOW-CURRENT DEB) AND READ THE      *
*        DSCB(S).                                                     *
*                                                                     *
*        UPON RETURN FROM IFG0554A THE NOW-CURRENT DEB'S EXTENTS ARE  *
*        VERIFIED TO BE IDENTICAL TO THOSE OF THE DSCB(S) READ. THE   *
*        UCB ALSO IS VERIFIED TO BE IDENTICAL, AND THE NUMBER OF      *
*        EXTENTS IN THE DEB AND DSCB MUST BE EQUAL. IF ANY OF THESE   *
*        CHECKS FAIL, PROBLEM DETERMINATION IS GIVEN CONTROL TO       *
*        CAUSE A 937-1C ABEND.                                        *
*                                                                     *
*        IF THE VERIFICATION IS SUCCESSFUL, MODULE IFG0551L IS GIVEN  *
*        CONTROL.                                                     *
*                                                                     *
* NOTES =                                                             *
*        THE 'FREE OLD DEB' FUNCTION IS INVOKED BY THE SEQUENTIAL     *
*        ACCESS METHOD AFTER AN EOV HAS OCCURRED IN THE MIDDLE OF     *
*        OBTAINING THE SEGMENTS OF A VBS LOGICAL RECORD WHOSE         *
*        SEGMENTS SPAN TWO VOLUMES WHEN THE PROCESSING IS UPDATE. THE *
*        OLD DEB ALLOWING ACCESS TO THE FIRST SEGMENT(S) OF THE       *
*        LOGICAL RECORD HAS NEITHER BEEN FREED NOR DELETED FROM THE   *
*        DEB TABLE BY EOV, BUT ITS DEBDCBAD HAS HAD ITS LOW ORDER     *
*        BIT FLIPPED TO PREVENT ITS BEING EXCP-ED. THE DEB'S ADDRESS  *
*        HAS BEEN SAVED IN DCBIOBAD. IF THE LOGICAL RECORD WHICH      *
*        SPANS VOLUMES IS NOT UPDATED BY THE USER, A FEOV IS ISSUED   *
*        CAUSING THIS MODULE TO GAIN CONTROL IN ORDER TO FREE THE     *
*        OLD DEB AS IT IS NOT NEEDED ANY LONGER. THIS FUNCTION IS     *
*        INDICATED BY BIT 1 IN DCBIOBAD BEING SET TO 1.               *
*                                                                     *
*        THE 'REPOSITION' FUNCTION IN INVOKED UNDER THE SAME          *
*        CIRCUMSTANCES AS THE 'FREE OLD DEB' FUNCTION EXCEPT THAT THE *
*        USER HAS REQUESTED THAT THE LOGICAL RECORD WHICH SPANS       *
*        VOLUMES BE UPDATED. A FEOV CAUSES THIS MODULE TO GAIN        *
*        CONTROL IN ORDER TO REESTABLISH THE OLD DEB SO THAT THE      *
*        FIRST SEGMENT(S) OF THE LOGICAL RECORD MAY BE UPDATED.       *
         EJECT
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0554B                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
         EJECT
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB IF 'REPOSITION' FUNCTION.  *
*        DEBDCBAD POINTS TO USER DCB IF 'FREE OLD DEB' FUNCTION.      *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
*        DCBIOBAD POINTS TO A DEB TO BE FREED OR REESTABLISHED.       *
*        IF BIT 1 IN DCBIOBAD IS SET TO ONE THE DEB POINTED TO BY     *
*        DCBIOBAD IS FREED. OTHERWISE THE DEB POINTED TO BY DCBIOBAD  *
*        WILL BE REESTABLISHED.                                       *
*                                                                     *
*        REG 14 CONTAINS ENTRY CODE-                                  *
*        0 - ENTRY FROM IFG0551H.                                     *
*        4 - RETURN FROM IFG0554A WITH PREVIOUS VOLUME MOUNTED AND    *
*        DSCB(S) READ.                                                *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
*        IFG0554A -                                                   *
*        DXRETMOD CONTAINS ID-VCON OF IFG0554B, DXRETCOD = 4.         *
*        DXVOLSEQ DECREMENTED BY 1 TO VOLUME SEQUENCE OF PREVIOUS     *
*        VOLUME IN THE JFCB TO BE MOUNTED, AND DSCB(S) TO BE READ.    *
*                                                                     *
*        IFG0551L -                                                   *
*        DCBIOBAD DEB HAS BEEN FREED OR REESTABLISHED.                *
*        DEBDCBAD POINTS TO USER'S DCB.                               *
*        BITS 2 & 3 IN DCBIOBAD SET TO 1 IF 'FREE OLD DEB' FUNCTION   *
*        COMPLETED.                                                   *
*        BIT 2 IN DCBIOBAD SET TO 1 IF 'REPOSITION' FUNCTION          *
*        COMPLETED.                                                   *
*                                                                     *
*        IFG0550P (PROBLEM DETERMINATION) -                           *
*        REGISTER 0 CONTAINS 245 CAUSING 937-1C ABEND IF -            *
*        1) 'REPOSITION' FUNCTION AND DEB POINTED TO BY DCBIOBAD      *
*        EITHER IS NOT IN THE DEB TABLE OR ITS DEBDCBAD DOES NOT      *
*        POINT TO THE USER'S DCB WITH ITS LOW ORDER BIT FLIPPED.      *
*        2) 'REPOSITION' FUNCTION AND OLD DEB EXTENTS DO NOT MATCH    *
*        THOSE OF THE DSCB(S) READ.                                   *
         EJECT
* EXIT-NORMAL =                                                       *
*        IFG0554A TO MOUNT AND VERIFY DXVOLSEQ VOLUME AND READ        *
*        DSCB(S).                                                     *
*        IFG0551L TO COMPLETE EOV PROCESSING.                         *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P (PROBLEM DETERMINATION) WITH AN INTERNAL ABEND CODE *
*        IN REGISTER 0 -                                              *
*        245 CAUSING 937-1C ABEND.                                    *
*                                                                     *
*        DMABCOND PCK IF ERROR FROM PAGE FREE ROUTINE            YM5929
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*        IEAVPSIB THROUGH CVTVPSIB TO PAGE FREE DEB              YM5929
*        R0 = 0, NO ECB ADDRESS                                  YM5929
*        R1 = X'20', ADDRESS OF DEB PREFIX, START OF DEB PGFREE  YM5929
*        R2 = ADDRESS OF LAST BYTE OF DEB + 1, END OF PGFREE     YM5929
*        R4 = TCB ADDRESS IN DEBTCBAD                            YM5929
*                                                                     *
*        IFGDEBVR POINTED TO BY CVTDEBVR IN VS2 CVT EXTENSION IN      *
*        ORDER TO VERIFY THAT A DEB ADDRESS IS IN THE DEB TABLE.      *
*        CALLING SEQUENCE IS AS FOLLOWS -                             *
*        CALLED IN PROTECT KEY ZERO WITH LOCAL LOCK HELD.             *
*        REG 1 POINTS TO DEB TO BE VERIFIED.                          *
*        REG 10 POINTS TO TCB.                                        *
*        REG 11 WILL BE DESTROYED.                                    *
*        REG 14 CONTAINS RETURN ADDRESS.                              *
*        REG 15 CONTAINS ENTRY POINT TO IFGDEBVR.                     *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
         EJECT
*    CONTROL BLOCK =                                                  *
*        DCB                                                          *
*        TCB                                                          *
*        CVT                                                          *
*        DEB                                                          *
*        DEB EXTENSION                                                *
*                                                                     *
* TABLES =                                                            *
*        NONE.                                                        *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        SETLOCK                                                      *
*        DEBCHK                                                       *
*        FREEMAIN                                                     *
*        IECRES-LOAD                                                  *
*        DMABCOND                                                     *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
ERR245   EQU   245                      937-1C INTERNAL ABCODE   Y02082
*
***** INITIALIZE EOV REGISTERS                                    *****
*                                                                     *
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING TIOENTRY,RTIOT
         USING DEBBASIC,RDEB                                     YM5929
         USING IHADCB,RDCB
         USING *,RBASE
         USING UCB,RUCB
         USING CVT,RF
*
         L     RDEB,DCBDEBAD            ADDRESS OF USER'S DEB
*
         B     EDI12400(RET)            BR, ACCORDING TO RETURN CODE
EDI12400 EQU   *                        BRANCH TABLE
         B     EDI12500                 REGULAR PROCESSING
         B     EDI14000                 RETURNING FROM MOUNT     Y02082
*                                                                     *
*        SEE IF FREE OLD DEB OR REPOSITION FUNCTION
*                                                                     *
EDI12500 EQU   *                        TEST DCBIOCOM
         TM    DCBIOBAD,DCBUPDCM        CAN THIS DEB BE FREED    YM5370
         BO    EDI13000                 BRANCH TO FREE DEB
         EJECT
*
*        REPOSITION FUNCTION
*
*        PAGE FREE DEB IF IT HAD BEEN PAGE FIXED
*
         L     RF,DEBAPPAD              AVT ADDRESS              YM5929
         TM    DEBSIOAB-DEBAVT(RF),X10  WAS DEB FIXED            YM5929
         BZ    EDI12502                 BRANCH IF NOT            YM5929
         LA    RF,DEBBASIC              START OF DEB             YM5929
         SH    RF,CONST36               DEB PREFIX               YM5929
         XR    R1,R1                    CLEAR FOR IC             YM5929
         IC    R1,DEBLNGTH-DEBAVT(RF)   DEB LENGTH IN DWORDS     YM5929
         SLL   R1,K3                    DEB LENGTH IN BYTES      YM5929
         AR    RF,R1                    END OF DEB + 1           YM5929
         ICM   R1,B'0111',DEBAPPB       START OF DEB             YM5929
*        PGFREE R,A=(1),EA=(15)         PAGE FREE DEB            YM5929
         LA    R2,K0(,RF)               END ADDRESS OF PGFREE    YM5929
         L     RF,DXXPREFX              PREFIX ADDRESS           YM5929
         STM   RDEB,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS  YM5929
         MODESET EXTKEY=SUPR            SETLOCK, PGFREE KEY      YM5929
EDI12501 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  YM5929*
               RELATED=(LOCAL,IFG0554B(EDI12503)) GET LOCAL LOCK YM5929
         LM    RDEB,RET,IECREGSV-IECPREFX(RF) RESTORE REGS       YM5929
         EJECT
         XR    R0,R0                    NO ECB                   YM5929
         ICM   R1,B'1000',=AL1(X20)     PGFREE BIT               YM5929
         LR    RDEB,RCORE               SAVE RCORE               YM5929
         L     RCORE,DEBTCBAD-DEB(,R1)  PGFREE BY TCB            YM5929
         L     RF,CVTPTR                CVT                      YM5929
         L     RF,CVTVPSIB-CVT(,RF)     IEAVPSIB ENTRY           YM5929
         BALR  RET,RF                   REGS 0-14 UNCHANGED      YM5929
         LTR   RF,RF                    ERROR IN PGFREE          YM5929
         BNZ   EDI14902                 BRANCH IF YES            YM5929
         LR    RCORE,RDEB               RESTORE RCORE            YM5929
         L     RDCB,DXPDCBAD            RESTORE DCB ADDRESS      YM5929
         L     RDEB,DCBDEBAD            RESTORE DEB ADDRESS      YM5929
         L     RF,DEBAPPAD              DEB AVT ADDR             YM5929
         NI    DEBSIOAB-DEBAVT(RF),K255-X10 ZERO DEB FIXED BIT   YM5929
         L     RF,DXXPREFX              PREFIX ADDRESS           YM5929
         STM   RDEB,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS  YM5929
EDI12503 SETLOCK RELEASE,TYPE=LOCAL,                             YM5929*
               RELATED=(LOCAL,IFG0554B(EDI12501)) RELEASE LOCK   YM5929
         LM    RDEB,RET,IECREGSV-IECPREFX(RF) RESTORE REGS       YM5929
         MODESET EXTKEY=DATAMGT         RETURN TO D M KEY        YM5929
         EJECT
EDI12502 EQU   *                        UNCHAIN DEB              YM5929
*
*              UNCHAIN CURRENT DEB FROM DEBTCBAD'S TCB DEB CHAIN
*
         L     RF,WTGPREFX              PT TO PREFIX             Y02082
         USING IECPREFX,RF                                       Y02082
         STM   R0,RET,IECREGSV          SAVE REGS THRU LOCK      Y02082
         MODESET EXTKEY=SUPR            SETLOCK KEY              Y02082
*
*     OBTAIN LOCAL LOCK TO                                       Y02082
*              UNCHAIN CURRENT DEB FROM TCB DEB CHAIN
*              BRANCH ENTER DEBCHK ROUTINE TO VERIFY OLD DEB
*
EDI12505 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=(LOCAL,IFG0554B(EDI12600,EDI12903))       Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       Y02082
         LM    R0,RET,IECREGSV          RESTORE REGS             Y02082
         EJECT
*
*        LOCK STILL HELD
*
*        UNCHAIN CURRENT DEB FROM TCB
*
         LR    R7,RDEB                  SAVE DEBAD FOR CS        Y02082
EDI12510 EQU   *                        REMOVE DEB               Y02082
         L     R1,DEBTCBAD              GET PTR TO TCB           Y02082
         LA    R1,K4(,R1)               ADJUST FOR COMPARE       Y02082
EDI12520 EQU   *                        PROCESS DEB              Y02082
         CLC   DCBDEBAD+1(K3),DEBDEBB-DEBBASIC(R1) CORRECT DEB?  YM5929
         BE    EDI12530                 YES, GO DECHAIN          Y02082
         L     R1,DEBDEBAD-DEBBASIC(,R1) POINT TO NEXT DEB       YM5929
         LA    R1,K0(,R1)               CLEAR HI BYTES           Y02082
         B     EDI12520                 GO CHECK NEXT DEB        Y02082
*
EDI12530 EQU   *                        COMPLETE REMOVAL         Y02082
         L     R8,DEBDEBAD              PTR TO DEB               Y02082
         ICM   R8,K8,DEBDEBAD-DEBBASIC(R1) PRIME HI-ORDER BYTE   YM5929
         ICM   R7,K8,DEBDEBAD-DEBBASIC(R1) PRIME HI-ORDER BYTE   YM5929
         MODESET EXTKEY=ZERO            KEY ZERO FOR CS          Y02082
         CS    R7,R8,DEBDEBAD-DEBBASIC(R1) DECHAIN DEB           YM5929
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02082
         BZ    EDI12535                 BR IF SUCCESSFUL         Y02144
         LR    R7,RDEB                  RESTORE DEB ADDR         Y02082
         B     EDI12510                 GO TRY AGAIN             Y02082
EDI12535 EQU   *                        DEB REMOVED              Y02144
         OI    DXATEOV,DXATDCHN         SHOW DEB DECHAINED       Y02144
         EJECT
*
*        LOCK STILL HELD
*                                                                Y02134
*        VERIFY OLD DEB BY BRANCH ENTERING DEBCHK ROUTINE
*                                                                Y02134
         L     R1,DCBIOBAD              R1 = OLD DEB ADDRESS     Y02082
         LA    R1,K0(R1)                CLEAR HIGH ORDER BYTE  @ZM33024
         L     RF,CVTPTR                LOAD CVT ADDRESS         Y01021
         USING CVT,RF                   CVT ADDRESSABILITY       Y02080
         L     RUCB,CVTTCBP             RUCB = TCB POINTERS      Y01021
         L     RUCB,K4(R0,RUCB)         RUCB = TCB ADDRESS       Y01021
         L     RF,CVTEXT2               LOAD CVT EXTENSION ADDR  Y01021
         USING CVTXTNT2,RF              RF = CVT EXTENSION ADDR  Y01021
         L     RF,CVTDEBVR              RF = DEBCHK ADDRESS      Y01021
         MODESET EXTKEY=SUPR            KEY ZERO FOR DEBCHK      Y02082
         LR    R9,RDEB                  SAVE RDEB ACCROSS DEBCHK Y02082
         BALR  RET,RF                   BRANCH TO DEBCHK ROUTINE Y01021
*                                                                Y02134
*        DEBCHK GOOD RETURN TO NEXT INSTRUCTION                  Y02134
*
         B     EDI12902                 CHECK ADDR OF OLD DCB    Y02082
*
*        DEBCHK BAD RETURN - GO TO PROBLEM DETERMINATION         Y02082
*
EDI12550 EQU   *                        RELEASE LOCK             Y02082
         LR    RDEB,R9                  RESTORE CURRENT RDEB     Y02082
         L     RF,DXXPREFX              PREFIX ADDRESS           Y02082
         STM   RB,RET,IECREGSV-IECPREFX(RF) SAVE SETLOCK REGS    Y02082
EDI12600 SETLOCK RELEASE,TYPE=LOCAL,    RELEASE LOCK             Y02082*
               RELATED=(LOCAL,IFG0554B(EDI12505))                Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02082
         LM    RB,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         LA    RWTGC,DXXENTRY           INITIALIZE RWTGC       @ZA02522
         B     EDI14715                 GO TO PROBLEM DET.       Y02082
         EJECT
*
*    LOCK STILL HELD
*
*    IF THE DEB CHECK WAS SUCCESSFUL, CHECK THE DCB ADDRESS.     Y02082
*    FLIP THE LAST BIT IN THE DCB ADDR (DXUDCBAD) AND COMPARE    Y02082
*    TO THE ALTERED DCB ADDR IN THE OLD DEB                      Y02082
*
EDI12902 EQU   *                        TEST DCB ADDR            Y02082
         LR    RDEB,R9                  RESTORE CURRENT DEBAD    Y02082
         L     RF,DXXPREFX              LOAD POINTER TO PREFIX   Y02080
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE REGISTERS        Y02134
*                                                                Y02134
EDI12903 SETLOCK RELEASE,TYPE=LOCAL,                             Y02080*
               RELATED=(LOCAL,IFG0554B(EDI12505)) RELEASE LOCK   Y02080
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02082
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGISTERS     Y02134
         XI    DXUDCBAD+K3,K1           FLIP LAST BIT            Y02082
         CLC   DXUDCBAD+K1(K3),DEBDCBB-DEBBASIC(R1)              YM5929
         BE    EDI12905                 BRANCH IF OK             Y02082
         XI    DXUDCBAD+K3,K1           RESET LAST BIT           Y02082
         B     EDI14715                 ABEND                    Y02082
EDI12905 EQU   *                        RESET BIT & DCBDEBAD     Y02082
         XI    DXUDCBAD+K3,K1           RESET LAST BIT           Y02082
         STCM  R1,B'0111',DCBDEBAD+K1   PUT OLD DEB IN DCB COPY  Y02082
         MVC   DEBDCBB-DEBBASIC(K3,R1),DXPDCBAD+K1 POINT OLD DEB YM5929
*                                       TO COPIED DCB            Y02082
         EJECT
*
*     CHAIN OLD DEB BACK AGAIN                                   Y02082
*
         LR    R7,R1                    OLD DEB ADDR             Y02082
         L     R1,DEBTCBAD-DEBBASIC(,R1) ADDR OF TCB IN OLD DEB  YM5929
EDI12950 EQU   *                        CHAIN DEB                Y02082
         L     R8,TCBDEB-TCB(,R1)       PT TO FIRST DEB          Y02080
         STCM  R8,B'0111',DEBDEBB-DEBBASIC(R7) NEXT DEB ADDR     YM5929
         ICM   R7,B'1000',TCBDEB-TCB(R1) GET FRONT BYTE          YM5929
         MODESET EXTKEY=ZERO            KEY ZERO FOR CS          Y02082
         CS    R8,R7,TCBDEB-TCB(R1)     CHAIN DEB                Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       Y02082
         BNZ   EDI12950                 TRY AGAIN IF NO SUCCESS  Y02082
         DROP  RF                                                Y02082
         NI    DXATEOV,X'FF'-DXATDCHN   SHOW DEB CHAINED         Y02144
         L     R7,DXDEBXAD              GET DEB EXTENSION ADDR   Y02134
         USING DEBXTN,R7                                         Y02134
         MVC   DEBXDBPR+K1(K3),DCBDEBAD+K1 PUT OLD DEBAD IN DEBX Y02082
         DROP  R7                                                Y02134
         STCM  RDEB,B'0111',DCBIOBAD+K1 SAVE CURRENT DEB AS THE
*                                       DEB TO BE FREED
         L     RDEB,DCBDEBAD            LOAD OLD DEB ADDRESS -   Y02082
*                                       IT'S NOW THE CURRENT DEB
         SR    R1,R1
         IC    R1,DEBNMEXT              GET NO. IF EXTENTS
         SLL   R1,K4                    MULTIPLY BY 16
         LH    R7,DXVOLSEQ              GET CURRENT VOL SEQUENCE Y02134
         BCTR  R7,K0                    DECREMENT DEB VOL SEQ NO
         STH   R7,DEBSUCBA+(DEBVOLSQ-DEBACSMD)(R1) UPDATE VOLSEQ YM5929
         L     R1,DCBIOBAD              GET ADDR OF OLD DEB      Y02082
         B     EDI13020                 GO TO FREE OLD DEB       Y02082
         EJECT
*
*        FREE OLD DEB FUNCTION ENTRY
*                                                                Y02082
EDI13000 EQU   *                        VERIFY AND FREE OLD DEB  Y02082
         L     R1,DCBIOBAD              GET ADDR OF OLD DEB      Y02082
         LA    R1,K0(,R1)               CLEAR HIGH BYTE          YM5370
         LR    R9,RDEB                  SAVE CURRENT DEBAD       Y02082
*                                       ACCROSS SETLOCK, DEBCHK  Y02082
         L     RF,CVTPTR                GET CVT ADDRESS          Y02082
         USING CVT,RF                   ESTABLISH CVT ADDR.      Y02082
         L     RUCB,CVTTCBP             GET TCB POINTERS         Y02082
         L     RUCB,K4(,RUCB)           GET ADDR OF TCB          Y02082
         L     RF,CVTEXT2               GET ADDR OF CVT EXT      Y02082
         USING CVTXTNT2,RF              ESTABLISH ADDR.          Y02082
*        GET LOCAL LOCK TO BRANCH ENTER DEBCHK
         MODESET EXTKEY=SUPR            SETLOCK,DEBCHK KEY       Y02082
         L     RF,CVTDEBVR              GET ADDR DEBCHK MACRO    Y02082
EDI13002 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=(IFGDEBVR,IFG0554B(EDI13010,EDI13040))    Y02082
         BALR  RET,RF                   VERIFY OLD DEB           Y02082
         DROP  RF                                                Y02082
*
*    SUCCESSFUL DEBCHK-RETURN TO NEXT INSTRUCTION                Y02082
*
         B     EDI13010                 GO CHECK ADDR OF OLD DEB Y02082
*
*    ERROR, OLD DEB NOT IN TABLE. RETURN TO NEXT+4               Y02082
*
         B     EDI13040                 ERROR,DON'T CHECK ADDR   Y02082
*                                                                Y02082
*                                                                Y02082
EDI13010 SETLOCK RELEASE,TYPE=LOCAL,                             Y02082*
               RELATED=(IFGDEBVR,IFG0554B(EDI13002))             Y02082
         LR    RDEB,R9                  RESTORE CURRENT DEBAD    Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02082
         EJECT
         XI    DXUDCBAD+K3,K1           FLIP LAST BIT            Y02082
*    COMPARE DCB ADDR IN DEB AND IN WORK AREA                    Y02082
         CLC   DXUDCBAD+K1(K3),DEBDCBB-DEBBASIC(R1)              YM5929
         BNE   EDI13030                 ERROR,DCB'S UNEQUAL      Y02082
         XI    DXUDCBAD+K3,K1           RESTORE LAST BIT         Y02082
EDI13020 EQU   *                        DELETE DEB               Y02082
*
*    SET THE DCB ADDR IN THE DEB (DEBDCBAD) AND RF TO POINT TO   Y02082
*    THE COPIED DCB-16. THUS,DCBIOBAD (THE POINTER TO THE DEB TO Y02082
*    BE DELETED) WILL LOOK LIKE DCBDEBAD FOR THE DEBCHK MACRO.   Y02082
*    NOTE - AT THIS POINT R1 POINTS TO THE DEB TO BE FREED, AND  Y02082
*    RDEB POINTS TO THE DEB TO BE KEPT.                          Y02082
*
         LR    RF,RDCB                  GET DCB ADDR             Y02082
         LA    RET,DCBDEBAD-DCBIOBAD    CALC OFFSET-CURRENTLY 16 Y02082
         SR    RF,RET                   POINT TO DCB-16          Y02082
         STCM  RF,B'0111',DEBDCBB-DEBBASIC(R1)                   YM5929
EDI13025 EQU   *                        REMOVE DEB FROM DEBTABLE Y02082
         DEBCHK (RF),TYPE=DELETE                                 Y02082
         B     EDI13050                 BRANCH TO FREEMAIN       Y02082
EDI13030 EQU   *                        FLIP BIT                 Y02082
         XI    DXUDCBAD+K3,K1           FLIP BIT                 Y02082
         B     EDI13045                 BRANCH AROUND SETLOCK    Y02082
EDI13040 SETLOCK RELEASE,TYPE=LOCAL,    DEBCHK ERROR             Y02082*
               RELATED=(IFGDEBVR,IFG0554B(EDI13002))             Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       Y02082
         LR    RDEB,R9                  RESTORE CURRENT DEBAD    Y02082
EDI13045 EQU   *                        DCB AD FOR DEBCHK DELETE Y02082
         LR    RF,RDCB                  GET DCB ADDR             Y02082
         LA    RET,DCBDEBAD-DCBIOBAD    CALC OFFSET-CURRENTLY 16 YM5370
         SR    RF,RET                   POINT TO DCB-16          Y02082
         B     EDI13025                 DEBCHK WILL CAUSE ABEND  Y02082
         EJECT
EDI13050 EQU   *                        FREE MAIN OF DELETED DEB Y02082
         SH    R1,CONST36               GET ADDR OF DEB APPENDAGE TABLE
         SR    R0,R0                    CLEAR REGISTER
         IC    R0,DEBLNGTH-DEBAVT(R1)   LENGTH OF DEB IN DBLWD   YM5929
         SLL   R0,K3                    LENGTH OF DEB IN BYTES
         L     RA,DXXPREFX              PREFIX ADDRESS           Y02082
         STM   R0,RF,IECREGSV-IECPREFX(RA) SAVE REGS             Y02082
         MODESET EXTKEY=SUPR            SETLOCK,FREEMAIN KEY     Y02082
EDI13060 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=(FREEMAIN,IFG0554B(EDI13070))             Y02082
         L     R7,DXASCBAD              ASCB ADDR FOR FREEMAIN   Y02082
         L     RCORE,K36(,R1)           TCB ADDR FROM DEB        Y02082
         FREEMAIN RU,A=(1),LV=(0),SP=230,KEY=5,BRANCH=YES        YM5725
         MODESET EXTKEY=SUPR            SETLOCK KEY              Y02082
EDI13070 SETLOCK RELEASE,TYPE=LOCAL,                             Y02082*
               RELATED=(FREEMAIN,IFG0554B(EDI13060))             Y02082
         LM    R0,RF,IECREGSV-IECPREFX(RA) RESTORE REGS          Y02082
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       Y02082
         L     RDEB,DCBDEBAD            REESTABLISH DEB ADDRESS  Y02082
         OI    DXATEOV,DXATDFRE         SHOW DEB FREED           Y02144
         EJECT
*
*        SET DCBIOBAD BITS AND EXIT IF FREE OLD DEB FUNCTION
*
         TM    DCBIOBAD,DCBUPDCM        IS UPDATE TAKING PLACE   YM5370
         BZ    EDI13100                 YES, CONTINUE PROCESSING
         OI    DCBIOBAD,DCBNUPD         CLEAR IOBAD FIELD        YM5370
         B     EDI14700                 BRANCH
EDI13100 EQU   *                        TURN ON BIT
         OI    DCBIOBAD,DCBUPDT         CLEAR IOBAD FIELD        YM5370
         SPACE 2
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
*        DECREMENT DM COUNT                                      Y02134
*        WICLOSE NOT NEEDED AS VIO DATA SET CAN'T BE MULTIVOLUME YM5929
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
EDI13300 EQU   *                        DECREMENT DM COUNT       Y02134
         L     RUCB,DXUCBADR            LOAD UCB ADDRESS         Y02082
*                                                                Y02134
         LA    RF,K1                    LOAD DECREMENT VALUE     Y02134
*        SHIFT DECREMENT TO USE WITH CS INSTRUCTION              Y02134
         SLL   RF,K24-(K8*((UCBDMCT-UCB)-(((UCBDMCT-UCB)/4)*4))) Y02134
         L     R0,UCB+(((UCBDMCT-UCB)/K4)*K4) ALLIGN & LOAD WORD Y02134
*                                                                Y02134
EDI13400 EQU   *                        STORE DM COUNT           Y02134
*                                                                Y02134
         LR    RET,R0                   SAVE CS OPERAND          Y02134
         SLL   RET,K25                  LEAVE ONLY UCBDMCT COUNT Y02134
         LTR   RET,RET                  TEST FOR COUNT OF 0      Y02134
         BZ    EDI13500                 BRANCH IF ALREADY 0      Y02134
*                                                                Y02134
         LR    R1,R0                    LOAD OLD VALUE TO MODIFY Y02134
         SR    R1,RF                    ADD DECREMENT TO COUNT   Y02134
*                                                                Y02134
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
         CS    R0,R1,UCB+(((UCBDMCT-UCB)/K4)*K4) STORE NEW COUNT Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         BNE   EDI13400                 BRANCH IF NOT THE SAME   Y02134
         NI    DXATGENS,X'FF'-DXATDMCT  SHOW DM CNT DECREMENTED  Y02144
         EJECT
EDI13500 EQU   *                        DECREMENT VOL SEQ AND    Y02134
*                                       BRANCH QUEUED            Y02134
         LH    R1,DXVOLSEQ              LOAD VOL SEQ             Y02134
         BCTR  R1,0                     DECREMENT BY ONE         Y02134
         STH   R1,DXVOLSEQ              SAVE SEQUENCE NUMBER     Y02134
*                                                                Y02134
         MVI   DXRETCOD,K4              SET UP RETURN OFFSET     Y02134
         MVC   DXRETMOD,ID4B4B          SET UP IFG0554B RETURN   Y02134
*                                                                Y02134
         BAL   RET,EDI14900             SET UP REGISTERS         Y02134
         IECRES LOAD,MODID=ID4B4A,BRCODE=K0,BRANCH=QUEUED        Y02134
*                                                                Y02134
         EJECT
EDI14000 EQU   *                        RETURN FROM MOUNT        Y02082
         L     RF,DEBAPPAD              GET DEB APPENDAGE ADDR   Y02082
         MVC   K23(K5,RF),DXCCW7        MOVE CCHHR OF DSCB1      Y02082
*    VERIFY ALL EXTENTS IN DSCB AND DEB                          Y02082
         CLC   DEBNMEXT(K1),DSCNOEXT    COMPARE NO. OF EXTENTS   Y02082
         BNE   EDI14715                 ERROR, ABEND             Y02082
         LA    R1,K1                    INITIALIZE EXTENT CTR.   Y02082
         LA    RET,DEBSUCBA             INITILIZE DEB PTR.       YM5929
*                                       TO FIRST EXTENT          YM5929
         LA    RF,DSCEXTYP              INITIALIZE DSCB PTR      Y02082
EDI14710 EQU   *                        COMPARE LOOP FOR EXTENTS Y02082
*    INSURE CORRECT UCB ADDRESS IN EACH DEB EXTENT SECTION       Y02082
         MVC   DEBSUCBB-DEBSUCBA(K3,RET),DXUCBADR+K1             YM5929
*    COMPARE DEB AND DSCB EXTENTS                                Y02082
         CLC   DEBSTRCC-DEBDASD(K8,RET),DSCLOWLM-DSCEXTYP(RF)    YM5929
         BE    EDI14720                 CONTINUE COMPARE LOOP    Y02082
EDI14715 EQU   *                        PROBLEM DETERMINATION    Y02082
         DMABCOND ERR245,LOAD0P         ABEND                    Y02082
EDI14720 EQU   *                        TEST FOR ALL EXTENTS     Y02082
         CLM   R1,B'0001',DSCNOEXT      WAS THIS LAST EXTENT     Y02082
         BE    EDI14700                 YES, GO CHECK TRACE      Y02082
         CLM   R1,B'0001',CONST3        WAS THIS EXTENT 3        Y02082
         BNE   EDI14725                 GO CHECK FOR EXTENT 7    Y02082
         L     RF,CORECH(,RCORE)        POINT TO DSCB 3          Y02082
         LA    RF,K4(RF)                SKIP OVER KEY ID         Y02082
         B     EDI14740                 INCREMENT REGS           Y02082
EDI14725 EQU   *                        ADJUST DSCB PTR IF EXT 7 Y02082
         CLM   R1,B'0001',CONST7        WAS THIS EXTENT 7        Y02082
         BNE   EDI14730                 GO TO BUMP PTRS          Y02082
         LA    RF,K1(RF)                SKIP OVER DSCB ID BYTE   Y02082
EDI14730 EQU   *                        BUMP PTR'S               Y02082
         LA    RF,K10(RF)               BUMP DSCB EXTENT PTR     Y02082
EDI14740 EQU   *                        BUMP EXTENT CTR, PTR     Y02082
         LA    R1,K1(R1)                BUMP EXTENT PTR          Y02082
         LA    RET,K16(RET)             BUMP DEB EXTENT PTR      Y02082
         B     EDI14710                 RETURN TO COMPARE        Y02082
         EJECT
*
*        EXIT TO IFG0551L
*
EDI14700 EQU   *                        TURN OFF TRACE BIT
         TM    DXXPATHS+K1,WTGTRACE     IS TRACE ACTIVE
         BZ    EDI14750                 NO, BRANCH
         NI    DXXPATHS+K1,ALLBITS-WTGTRACE  IND TRACE END
EDI14750 EQU   *                        SET UP MODULE NAME
         BAL   RET,EDI14900             SET UP REGISTERS         XM0246
*                                                                Y02134
*        DEB ALREADY POINTS TO USER DCB IF FREE-OLD-DEB FUNCTION YM5370
         MVC   DEBDCBAD+K1(K3),DXUDCBAD+K1 POINT DEB TO USER DCB Y02082
         MVC   DXXMODID(K2),LOAD1L                               Y02080
*                                       MOVE ID TO WORKAREA
         MVC   DXXMODEP+K1(K3),LOAD1L+K2                         Y02080
*                                       MOVE TTR TO WORKAREA
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=DIRECT               Y02080
         SPACE 2
EDI14900 EQU   *                        SETUP REGISTERS
         LA    RWTGC,DXXENTRY           CURRENT MODULE NAME
         LA    RWTG,DXXAREA             NEXT MODULE NAME
         L     RTIOT,DXTIOTAD           GET TIOT ENTRY ADDR    @ZA02528
         BR    RET                      RETURN TO CALLER
         SPACE 2
EDI14902 DMABCOND PCK,PGFREE            PAGEFREE ERROR           YM5929
         EJECT
*
*        CONSTANTS
*
CONST36  DC    H'36'                    CONSTANT 36
CONST3   DC    X'03'                    CONSTANT 3               Y02082
CONST7   DC    X'07'                    CONSTANT 7               Y02082
         SPACE 2
         XCTLTABL ID=(LOAD0P,0P,LOAD1L,1L,ID4B4B,4B,ID4B4A,4A),  Y02134X
               SVC=055,BRT=YES,LENGTH=                           Y02080
*                                                                Y02134
         IECDSECS CVT,TCB,TIOT,IEZDEB,                           YM5929X
               DCB,UCB,MAIN,                                     YM5929X
               UNITTAB,WTG,PREFX,PSA,EXPAND=YES                  YM5929
         IECEQU IEZDEB=YES                                       YM5929
         END
