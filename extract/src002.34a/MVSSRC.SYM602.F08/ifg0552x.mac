         TITLE 'IFG0552X - EOV INPUT END-OF-DATA FUNCTION'
IFG0552X CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*          VS2 RELEASE 03 DELETIONS                                   *
*0000338500                                                     ZA00120
*0000655000                                                     ZA01289
*          VS2 RELEASE 04 DELETIONS/CHANGES                           *
*0000483020-483160,483300-465500                               @ZA01344
*0000                                                          @ZA06440
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0552X (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = EOV INPUT END-OF-DATA FUNCTION                   *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 4, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. DETERMINES WHETHER END-OF-DATA (EOD) HAS BEEN REACHED OR  *
*        IF THERE ARE CONCATENATED DATA SETS TO BE PROCESSED.         *
*        AT ENTRY WITH THE TIOT INDICATING A SPOOLED DATA SET OR      *
*        WITH REG 14 ZERO, END OF DATA/CONCATENATION IS INDICATED.    *
*                                                                     *
*        1A. IF EOD HAS BEEN REACHED, THE USER'S EODAD ADDRESS IS     *
*        PLACED IN THE RESUME (OLD) PSW, AND CONTROL IS RETURNED      *
*        TO THE USER                                                  *
*                                                                     *
*        1B. IF THERE ARE CONCATENATED DATA SETS WITH UNLIKE          *
*        ATTRIBUTES, CONTROL IS TRANSFERRED TO THE FIRST LOAD OF      *
*        CLOSE TO CLOSE THE DCB AND THEN REOPEN IT WITH NEW           *
*        ATTRIBUTES.                                                  *
*                                                                     *
*        1C. IF THERE ARE CONCATENATED DATA SETS WITH LIKE ATTRIBUTES,*
*        THIS FUNCTION FIRST DETERMINES WHETHER OR NOT SMF RECORDS    *
*        ARE TO BE WRITTEN, TRANSFERRING CONTROL TO THE CLOSE SMF     *
*        PROCESSING MODULE IF REQUIRED. THAT MODULE RETURNS CONTROL   *
*        TO THIS MODULE (WITH REGISER 14 CONTAINING 4)                *
*        UNLESS THE DATA SET AT EOF IS ON A TAPE VOLUME               *
*        IN WHICH CASE CONTROL IS RETURNED TO THE EOV TAPE INPUT      *
*        VOLUME POSITIONING FUNCTION. IF SMF RECORDS ARE NOT REQUIRED *
*        AND THE CURRENT DATA SET IS ON TAPE, CONTROL IS TRANSFERRED  *
*        DIRECTLY TO THE VOLUME POSITIONING FUNCTION. FOLLOWING SMF   *
         EJECT
*        UPON RETURN FROM SMF PROCESSING FOR NON-TAPE DEVICES,        *
*        OR IF THAT IS NOT REQUIRED, THE NEXT DSAB                    *
*        IS OBTAINED BY FORWARD CHAINING FROM THE CURRENT DSAB;       *
*        WORKAREA POINTERS, THE USER'S DCB, DEB, DEB EXTENSION        *
*        AND UCB ARE UPDATED TO REFLECT THE CONCATENATED DATA SET AND *
*        CONTROL IS TRANSFERRED TO THE INITIALIZATION FUNCTION TO     *
*        BEGIN PROCESSING THE CONCATENATED DATA SET.                  *
*                                                                     *
*        2. IF ENTRY IS FROM THE INITIAL FUNCTION WITH THE CONCAT.    *
*        BIT ON IN FIELD 'DCBOFLGS' (INDICATED BY REG 14 CONTINING    *
*        16 AT ENTRY), THEN VARIOUS RETURN INDICATORS                 *
*        ARE SET AND CONTROL IS PASSED TO THE USER VIA SVC 3 (EXCP)   *
*        OR TO THE EOV ACCESS METHOD EXECUTOR (BSAM OR QSAM           *
*        ACCESS METHOD) TO READ THE CONCATENATED DATA SET.            *
*        NOTE- THIS ENTRY CAN ONLY OCCUR WHEN THE CONCATENATED DATA   *
*        SET RESIDES ON/IN A UNIT RECORD DEVICE.                      *
*                                                                     *
*        3. IF ENTRY IS FROM THE PROBLEM DETERMINATION FUNCTION,      *
*        (INDICATED BY THE BUSY BIT, DCBOBUSY IN DCBOFLGS, SET TO 0), *
*        AN ERROR HAS PREVIOUSLY OCCURRED IN SOME EOV FUNCTION AND THE*
*        USER HAS INDICATED THAT IT IS TO BE IGNORED. EOV WILL THEN   *
*        CLOSE THE DCB AS IN THE CASE OF CONCATENATION WITH UNLIKE    *
*        ATTRIBUTES (REFER TO (3) ABOVE), AND CLOSE WILL EXIT TO THE  *
*        USER.                                                        *
*                                                                     *
*        BEFORE EITHER EXITING TO THE USER OR TRANSFERRING       Y02082
*        CONTROL TO IFG0551L OR IGC01020, THE DCB ADDRESS IN THE Y02082
*        DEB (DEBDCBAD) IS SET TO POINT TO THE USER'S DCB.       Y02082
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
         EJECT
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO COPIED DCB                                  *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*            R11 POINTS TO THE DEB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*        END OF LISTING.                                              *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IFG0552X FROM (REG 14 ENTRY POINT IN PARENTHESIS)     *
*               IFG0551F - INITIAL READ JFCB FUNCTION (SPOOLED TIOT)  *
*               IFG0551H DEVICE TYPE DETERMINATION (0,16)             *
*               IFG0552R TAPE INPUT STANDARD TRAILER LABEL (0)        *
*               IFG0552T TAPE INPUT VOLUME POSITIONING (0)            *
*               IFG0553P DA INPUT INITAL MODULE (0)                   *
*               IFG0194A VOLUME MOUNTING MODULE (0)                   *
*               IFG0559E PROBLEM DETERMINATION MODULE (BUSY BIT ZERO) *
*               IFG0553B SMF MODULE (4)                               *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        TRANSFERRED CONTROL THROUGH IECRES MACRO                     *
         EJECT
* INPUT =                                                             *
*        CONTROL PASSED IN PROTECT KEY 5                              *
*        REGISTER 2 POINTS TO COPIED DCB                              *
*        DEBDCBAD POINTS TO COPIED DCB EXCEPT FOR SPOOLED DCB         *
*        REGISTER 4 POINTS TO EOV WORKAREA                            *
*        REGISTER 14 CONTAINS ENTRY BRANCH OFFSET                     *
*              0 - TO PROCESS EOF                                     *
*              4 - RETURN FROM SMF                                    *
*              16 - TO FINISH UNIT RECORD CONCATENATION               *
*        BUSY BIT IN DCBOFLGS INDICATES ENTRY FROM PROBLEM            *
*              DETERMINATION.                                         *
*        SPOOLED BITS IN TIOT INDICATES ENTRY FROM IFG0551F.          *
*                                                                     *
* OUTPUT =                                                            *
*        RESUME PSW IN SVRB POINTING TO EODAD ADDRESS. REGISTERS IN   *
*        THE SVRB HAVE ALREADY BEEN SWAPPED TO BE THE USER'S REGS.    *
*        REGISTERS AT EXIT TO USER'S EODAD ROUTINE -                  *
*            0-1 - RESERVED                                           *
*           2-13 - CONTENTS BEFORE EXECUTION OF GET, CHECK, FEOV, OR  *
*                  EOV (EXCP)                                         *
*             14 - RETURN ADDRESS FOR GET OR CHECK MACRO INSTRUCTION, *
*                  OR CONTENTS BEFORE EXECUTION OF FEOV OR EOV (EXCP) *
*             15 - RESERVED                                           *
*        EOV WORKAREA AND ALL OTHER WORKAREAS FREED.                  *
*        USER DCB UPDATED FROM PROTECTED DCB.                         *
*              EODAD EXIT                                             *
*        REGISTER 2 POINTS TO COPIED DCB                              *
*              IFG0551L                                               *
*              IFG0551F                                               *
*              IFG0553B                                               *
*              IFG0552V                                               *
*        REGISTER 2 POINTS TO USER'S DCB AND                     YM3190
*        USER DCB UPDATED FROM PROTECTED DCB.                    YM3190
*              IGC00020 (ENTRY POINT IGC01020)                        *
*        REGISTER 4 POINTS TO EOV WORKAREA AND CONTROL PASSED         *
*        IN PROTECT KEY 5                                             *
*              ALL MODULES TRANSFERRED CONTROL                        *
*        DXRETMOD INDICATING RETURN MODULE ID FOR IFG0552X OR         *
*        IFG0552V                                                     *
*              IFG0553B                                               *
*        DXRETCOD INDICATING RETURN CONTENTS OF REGISTER 14           *
*              IFG0553B - 4                                           *
*        REGISTER 0 CONTAINING INTERNAL ABEND CODE                    *
*              IFG0550P                                               *
*        DEBDCBAD POINTING TO USER DCB                                *
*              IFG0551L                                               *
*              IGC00020 (ENTRY POINT IGC01020)                        *
*        DXDSABAD, DXDSAB, DXTIOTAD, DEB EXTENSION DSAB ADDRESS       *
*        UPDATED TO NEXT CONCATENATED DATA SET                        *
*              IFG0551F                                               *
*        DCBOCON BIT SET IN DCBOFLGS INDICATING CONCATENATION         *
*              IFG0551F                                               *
*              IFG0552V                                               *
*              IGC00020 (ENTRY POINT IFG01020)                        *
         EJECT
* EXIT-NORMAL = IFG0551L SAM EOV EXECUTOR, TO COMPLETE UR CONCAT.     *
*               IGC00020 (ENTRY POINT IGC01020) FOR UNLIKE ATTRUBUTES *
*               CONCATENATION, OR IF THE IGNORE OPTION WERE CHOSEN    *
*               FROM AN EOV ABEND EXIT.                               *
*               IFG0551F INITIAL READ JFCB OR CONCAT. OF LIKE ATTRIB. *
*               IFG0553B SMF RECORD PROCESSING                        *
*               IFG0552V TAPE INPUT VOLUME POSITIONING                *
*               RETURN TO CALLER                                      *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P PROBLEM DETERMINATION WITH ONE OF THE FOLLOWING     *
*        INTERNAL ABEND CODES IN REGISTER 0                           *
*                                                                     *
*        174-CAUSING 337-04 ABEND, NO FOUNDATION EXTENSION IN EXCP    *
*        DCB OR NO EODAD ROUTINE AT END OF DATA.                      *
*                                                                     *
*        176-CAUSING 637-0C ABEND, CONCATENATION OF UNLIKE DEVICES    *
*        AND THE UNLIKE ATTRIBUTES BIT NOT SET IN THE DCBOFLGS.       *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        TCB                                                          *
*        SVRB                                                         *
*        DCB                                                          *
*        TIOT                                                         *
*        DEB                                                          *
*        DEB EXTENSION                                                *
*        DSAB                                                         *
*        UCB                                                          *
*        VDSCB                                                        *
         EJECT
* TABLES =                                                            *
*        NONE.                                                        *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        SETLOCK                                                      *
*        DMABCOND                                                     *
*        WICLOSE                                                      *
*        IECRES LOAD                                                  *
*        IECRES INIT                                                  *
*        IECRES FREE                                                  *
*        IECRES EXIT                                                  *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE 'CHANGES/DELETIONS' SECTION JUST AFTER CSECT CARD        *
*                                                                     *
***********************************************************************
         EJECT
*
*****    INTERNAL ERROR CODES
*
EABD174  EQU   174                      NO EOD ADDRESS WAS PROVIDED
EABD176  EQU   176                      CONCATENATION OF DATA SETS WITH
*                                       ..LIKE ATTRIBUTES WAS SPECIFIED
*                                       ..BUT UNLIKE DEV WERE ALLOCATED
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
*
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING TIOENTRY,RTIOT
         USING DEBBASIC,RDEB                                     Y02134
         USING IHADCB,RDCB
         USING UCB,RUCB
*
*****          POINT TO THE SVRB FOR LATER PROCESSING
*
         L     RC,CVTPTR                LOAD ADDRESS OF CVT      M0017
         USING CVT,RC                   ESTABLISH CVT BASE ADDR  M0017
         L     RC,CVTTCBP               LOAD ADDR OF TCB POINTERS
         DROP  RC                                                M0017
         L     RC,K4(,RC)               LOAD ADDR OF ACTIVE TCB
         USING TCB,RC                   ESTABLISH TCB ADDRESSABILITY
         L     R0,TCBTIO                LOAD TIOT PTR
         L     RC,TCBRBP                LOAD ADDRESS OF CURRENT SVRB
         USING RBSECT,RC                ESTABLISH RB ADDRESSABILITY
         TM    DCBMACRF,DCBMEXCP        EXCP ACCESS METHOD
         BO    ECM60050                 YES BYPASS SPOOL TEST
         LH    RTIOT,DCBTIOT            GET TIOT OFFSET          Y02120
         AR    RTIOT,R0                 GET TIOT ENTRY           Y02120
         TM    TIOELINK,TIOESYIN+TIOESYOT  SPOOLED DCB?          Y02120
         BZ    ECM60050                 NO, CONTINUE NORMAL PROCESS
         OI    DCBOFLGS,DCBOBUSY        SET BUSY BIT ON
         L     RDCB,DXUDCBAD            USER DCB ADDRESS         YM7883
         MODESET KEYADDR=DXUKEY,WORKREG=10 ASSUME USER KEY       YM7883
         OI    DCBOFLGS,DCBOBUSY        SET BUSY BIT ON          YM7883
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       YM7883
         L     RDCB,DXPDCBAD            DCB COPY ADDRESS         YM7883
         SR    RUCB,RUCB                SET UCB REG TO 0
         B     ECM60400                 BR TO CONTINUE
         EJECT
*
*****          DETERMINE TYPE OF ENTRY TO MODULE IF NOT SPOOLED
*
ECM60050 EQU   *                        SEE IF PROBLEM DETERMINATION
*                                       ENTRY - IGNORE ABEND PROCESSING
         TM    DCBOFLGS,DCBOBUSY        TEST FOR ENTRY FROM PROBLEM
*                                       ..DETERMINATION FUNCTION-
         BO    ECM60100(RET)            ..BR IF NO TO CONTINUE   YM3970
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          YM3970
         OI    DCBOFLGS,DCBOBUSY        TURN ON THE BUSY BIT   @ZA06440
         NI    DCBOFLGS,ALLBITS-DCBOCON TURN OFF CONCAT BIT    @ZA06440
         B     ECM61800                 BRANCH TO CLOSE DCB      YM3970
*
ECM60100 EQU   *                        BRANCH TABLE
         B     ECM60200                 0-BR IF ENTERED TO PROCESS EOF
         B     ECM61200                 4-RETURN FROM SMF MODULE Y02134
         B     *                        NEVER ENTERED. WAS ENTRY TRACE
*                                       ..TERMINATION MODULE
         B     *                        NEVER ENTERED. WAS ENTRY Y02082
*                                       FOR ANSI HEADER MSG      Y02082
         B     ECM61600                 16-BR IF ENTERED FOR     M0015
*                                       ..UNIT RCD CONCATENATION M0015
         EJECT
*
***********************************************************************
*              END-OF-FILE FROCESSING                                 *
***********************************************************************
*
ECM60200 EQU   *                        REG 14 = 0 ENTRY POINT
*               TURN ON DEB EOF INDICATORS                       Y02080
         OI    DEBOFLGS,DEBOFEOF                                 Y02080
*    INDICATE THAT DEFERRED USER LBL PROCESSING CAN TAKE PLACE   Y02080
         OI    DEBFLGS1,DEBF1EOF                                 Y02080
         TM    DCBMACRF,DCBMEXCP        IS EXCP BEING USED?
         BO    ECM60400                 ..BRANCH IF NOT
         TM    DCBCIND2,DCBC2FEO        IS THIS AN FEOV ENTRY-
         BNO   ECM60400                 ..BR IF NOT FEOV
*               TURN OFF DEB EOF INDICATORS                      Y02080
         NI    DEBOFLGS,X'FF'-DEBOFEOF                           Y02080
         NI    DEBFLGS1,X'FF'-DEBF1EOF                           Y02080
*
*****          TEST FOR CONCATENATED DATA SETS
*
ECM60400 EQU   *                        SPOOLED DCB ENTRY
         L     R1,DXDSABAD              GET CURRENT DSAB         Y02134
         USING DSAB,R1                                           Y02134
         L     R1,DSABFCHN              GET NEXT (CONCATENATED?) Y02134
*                                       DSAB
         LTR   R1,R1                    IS THERE ANOTHER ONE?    Y02134
         BZ    ECM60500                 NO MORE-NO CONCATENATION Y02134
         L     R1,DSABTIOT              GET NEXT TIOT ENTRY      Y02134
         LR    RD,R1                    SAVE NEXT TIOT ENTRY     Y02134
         CLI   TIOEDDNM-TIOENTRY(R1),BLANK TEST FOR A BLANK DDNAME
         BE    ECM60850                 ..BR IF BLANK- CONCAT    Y02083
         EJECT
***********************************************************************
*              END-OF-DATA PROCESSING                                 *
***********************************************************************
*
ECM60500 EQU   *                        ABEND IF NO EODAD
         NI    DXATALL,X'FF'-DXATFC     RESET FORCE CLOSE INDIC  YM7099
         LA    R0,EABD174               LOAD INTERNAL ERROR CODE
         TM    DCBMACRF,DCBMEXCP        IS THE ACCESS METHOD EXCP-
         BZ    ECM60600                 ..BRANCH IF NOT
         TM    DCBMACRF,DCBMFOUN        IS FOUNDATION EXT PRESENT-
         BZ    ECM62800                 ..BR IF NOT TO ERROR RTN
ECM60600 EQU   *                        IS EODAD SPECIFIED
         L     RF,DCBEODAD              LOAD ADDRESS OF EODAD RTN
         LA    RF,0(,RF)                CLEAR THE HIGH-ORDER BYTE
         CH    RF,HALFWD1               IS THERE AN EODAD RTN ADDR-
         BE    ECM62800                 ..BR IF NOT TO ERROR RTN
         TM    DCBMACRF,DCBMEXCP        IS THE ACCESS METHOD EXCP-
         BO    ECM60700                 ..BRANCH IF YES
         TM    DCBCIND2,DCBC2QSM        IS THE ACCESS METHOD QSAM-
         BZ    ECM60650                 ..BR IF NO-BSAM DOESN'T YA02398
*                                       ..REQUIRE THE FOLLOWING INST
         TM    TIOELINK,TIOESYIN+TIOESYOT  TEST FOR SPOOLED      Y02120
         BM    ECM60700                 BRANCH IF SPOOLED        Y02120
         L     RF,DCBIOBA               LOAD IOB ADDRESS FROM DCB
         MODESET KEYADDR=DXUKEY,WORKREG=1 USER KEY FOR IOB       Y02082
         L     RF,K0(,RF)               LOAD ADDRESS OF NEXT IOB
         MVI   K4(RF),PUTCCODE          INDICATE IN SECOND IOB THAT
*                                       ..EODAD EXIT WAS TAKEN
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGT KEY   Y02082
         B     ECM60700                 SET UP EODAD ADDR       YA02398
         EJECT
ECM60650 EQU   *                        TEST FOR PS, DA         YA02398
*
*        RESET CURRENT (LAST SCHEDULED) BSAM IOB ADDR TO THE    YA02398
*        IOB IN ERROR IF MORE THAN ONE IOB, DSORG PS, AND DA.   YA02398
*        RESET DCBFDAD TO MBBCCHHR OF 'FILE MARK'.              YA02398
*
         TM    DCBDEVT,DCBDEVDA         IS IT DA DEVICE         YA02398
         BNO   ECM60700                 BRANCH IF NO            YA02398
         TM    DCBDSORG,DCBORGPS        PHYSICAL SEQUENTIAL     YA02398
         BNO   ECM60700                 BRANCH IF NOT           YA02398
         CLI   DCBNCP,K1                IS THERE ONE CHAN PGM   YA02398
         BNH   ECM60700                 BRANCH IF YES           YA02398
         L     RD,DCBIOBA               GET LAST SCHED. IOB     YA02398
         LA    RD,K0(,RD)               CLEAR HIGH BYTE FOR CR  YA02398
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER KEY       YA02398
         L     RUCB,K4(,RD)             GET IOB IN ERROR        YA02398
         LA    RUCB,K0(,RUCB)           CLARE HIGH BYTE FOR CR  YA02398
         CR    RUCB,RD                  IS ERROR IOB CURRENT    YA02398
         BE    ECM60700                 BRANCH IF YES           YA02398
*
*        MOVE ERROR IOB/ICBSEEK TO DCBFDAD                      YM05966
*
         TM    DCBCIND2,DCBC2CHN        CHAINED SCHEDULING      YM05966
         BZ    ECM60660                 BRANCH IF NO            YM05966
         LM    R0,R1,K32(RUCB)          GET ICBSEEK IN R0, R1   YM05966
         B     ECM60670                 UPDATE DCBFDAD          YM05966
ECM60660 EQU   *                        GET IOBSEEK             YM05966
         LM    R0,R1,K40(RUCB)          GET IOBSEEK IN R0, R1   YA02398
ECM60670 EQU   *                        UPDATE DCBFDAD          YM05966
         MODESET EXTKEY=DATAMGT         RETURN TO D. M. KEY     YA02398
         STCM  R0,B'1111',DCBFDAD       STICK IN FIRST 4 BYTES  YA02398
         STCM  R1,B'1111',DCBFDAD+K4    STICK IN LAST 4 BYTES   YA02398
         ST    RUCB,DCBIOBA             CURRENT IOB = ERROR IOB YA02398
         LR    RD,RUCB                  ERROR IOB IN RD         YA02398
         SR    RUCB,RUCB                ZERO RUCB FOR IC        YA02398
         IC    RUCB,DCBFDAD+K7          GET R FROM FDAD         YA02398
         LA    RUCB,K1(,RUCB)           INCREMENT R BY 1        YA02398
         STC   RUCB,DCBFDAD+K7          STORE R+1               YA02398
         MODESET KEYADDR=DXUKEY,WORKREG=1 GET IN USER KEY       YA02398
         L     RD,K0(,RD)               GET NEXT IOB            YA02398
         TM    DCBCIND2,DCBC2CHN        CHAINED SCHEDULING      YM05966
         BZ    ECM60680                 BRANCH IF NO            YM05966
         MVC   K32(L'DCBFDAD,RD),DCBFDAD PUT FILE MARK ADDR IN  YM05966
*                                       NEXT ICB                YM05966
         B     ECM60690                 CONTINUE                YM05966
ECM60680 EQU   *                        UPDATE IOBSEEK          YM05966
         MVC   K40(L'DCBFDAD,RD),DCBFDAD PUT FILE MARK ADDR IN  YA02398
*                                       NEXT IOB                YA02398
ECM60690 EQU   *                        GET IOBSEEK             YM05966
         EJECT
*
*****          SET UP 'EOV' RETURN INDICATOR
*
ECM60700 EQU   *                        SET EOV RETURN CODE
         MODESET EXTKEY=DATAMGT         GET IN KEY 5            YA02398
         SR    RUCB,RUCB                SET THE RETURN CODE TO ZERO
         CLC   FL1LABI(K3),EOVMARK      WAS ANY LABEL PROCESSED-
         BNE   ECM60800                 ..BR IF NOT- RETURN CODE EQ 0
         LA    RUCB,K4(,RUCB)           SET THE RETURN CODE TO 4
ECM60800 EQU   *                        PUT EODAD ADDRESS IN RESUME PSW
*
         L     RD,RBLINK                LOAD USER'S PRB ADDR FROM SVRB
         MODESET EXTKEY=SUPR            SUPERVISOR KEY           Y02082
         MVC   RBOPSW+K5-RBSECT(K3,RD),DCBEODAD+K1  MOVE EOD ADDR INTO
*                                       ..ADDR PORTION OF OLD PSW
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         TM    DCBMACRF,DCBMEXCP        EXCP BEING USED?
         BO    ECM62000                 ..BRANCH IF YES
*
*  SET UP REG 14 FOR EODAD EXIT AS GET OR CHECK RETURN ADDR.
*  ALREADY OK FOR EXCP AND FEOV.
*
         TM    DCBCIND2,DCBC2FEO        WAS FEOV ISSUED        @ZA01344
         BO    ECM60810                 BR IF YES, REG 14 OK   @ZA01344
         L     RET,RBGRS13              ADDR OF USER SAVE AREA @ZA01344
         MODESET KEYADDR=DXUKEY,WORKREG=15  ASSUME USER KEY    @ZA01344
         L     RET,K20(,RET)            COPY REG 14 FROM       @ZA01344
*                                       USER SAVE AREA         @ZA01344
         MODESET EXTKEY=SUPR            SVRB KEY               @ZA01344
         ST    RET,RBGRS14              TO RB RESUME REG 14    @ZA01344
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY    @ZA01344
ECM60810 EQU   *                                               @ZA01344
*
         TM    DCBCIND2,DCBC2CHN        CHAINED SCHEDULING      ZA01289
         BZ    ECM60820                 BRANCH IF NO            ZA01289
*
         L     RD,DCBIOBAD              GET CHAIN SCH IOB       ZA01289
         MODESET KEYADDR=DXUKEY,WORKREG=1  USER KEY             ZA01289
         OI    IOBCNOPA-IOBPREFX(RD),ALLOWIO SET TO RESTART I/O ZA01289
         MODESET EXTKEY=DATAMGT         GET IN KEY 5            ZA01289
*
ECM60820 EQU   *                        CONTINUE EOF            ZA01289
*
         TM    DCBCIND2,DCBC2QSM        IS THE ACCESS METHOD QSAM-
         BZ    ECM62000                 ..BRANCH IF NOT
         OI    DCBIFLGS,DCBIFPIO        TURN ON PERM ERROR IND IN DCB
         B     ECM62000                 BR TO RETURN TO CALLER
         EJECT
*****************************************************************Y02083
*        CONCATENATION-CHECK FOR CHECKPOINT DATA SET PROCESSING  Y02083
*****************************************************************Y02083
*                                                                Y02083
ECM60850 EQU   *                        CHECKPOINT BIT IN DSAB   Y02083
         L     R1,DXDSABAD              FETCH CURRENT DSAB ADDR  Y02083
         TM    DSABFLG4-DSAB(R1),DSABCKDS TEST FOR CHKPT D/S     Y02083
         BZ    ECM60900                 IF NOT, CONTINUE         Y02083
         L     R1,DSABFCHN-DSAB(R1)     FETCH NEXT DSAB ADDRESS  Y02083
         MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         OI    DSABFLG4-DSAB(R1),DSABCKDS PROPAGATE CHKPT STATUS Y02083
         MODESET EXTKEY=DATAMGT         BACK TO D/M KEY          Y02083
***********************************************************************
*              CONCATENATED DATA SET PROCESSING                       *
***********************************************************************
*
ECM60900 EQU   *                        RESET INDICATOR BITS
         OI    DCBOFLGS,DCBOCON         TURN ON EOV CONCATENATION IND
*
         TM    DCBOFLGS,DCBOUNLK        TEST FOR UNLIKE ATTRIBUTES-
         BO    ECM61900                 ..BR IF YES TO CLOSE DCB M0018
*
* TEST FOR JES SPOOLED SYSIN DATA SETS, MUST TREAT AS UNLIKE
* ATTRIBUTES IF ONE DATA SET IN A CONCATENTATED GROUP IS SPOOLED.
* NOTE THAT INPUT CONCATENATION TO SYSOUT IS INVALID, BUT
* IT IS ALLOWED TO SLIP THROUGH AND WILL BE ABENDED IN OPEN.
*
* TEST CURRENT DATA SET FOR SPOOLED INDICATOR
         TM    TIOELINK,TIOESYIN+TIOESYOT  IS CURRENT SYSIN OR SYSOUT
         BM    ECM61900                 BR IF YES TO CLOSE AND OPEN
* TEST NEXT DATA SET
         LR    R1,RD                    STEP TO NEXT ENTRY       Y02134
         TM    TIOELINK-TIOENTRY(R1),TIOESYIN+TIOESYOT  SYSIN OR SYSOUT
         BM    ECM61900                 BR IF YES TO CLOSE AND OPEN
*
         L     RET,TIOESTTB-TIOENTRY(,R1) LOAD NEXT UCB ADDRESS
         LA    RET,K0(,RET)             ZERO HIGH BYTE           YM5364
         LTR   RET,RET                  IS THE NEXT UCB A 'DUMMY'-
         BNZ   ECM61000                 ..BRANCH IF NOT
         NI    DCBOFLGS,X'FF'-DCBOCON   TURN OFF CONCATENATION SWITCH
         B     ECM60500                 BR TO PROCESS AS EOD
         EJECT
***********************************************************************
*              PROCESS CONCATENATED DATA SETS WITH LIKE ATTRIBUTES    *
***********************************************************************
*
ECM61000 EQU   *                        TURN OFF INDICATOR FOR EOD
         NI    DEBFLGS1,X'FF'-DEBF1EOF                           Y02080
         NI    DEBOFLGS,ALLBITS-DEBOFEOF TURN OFF EOF INDIC     ZA00120
*
         LA    R0,EABD176               LOAD INTERNAL ERROR CODE
         CLC   UCBTBYT3(K1),UCBTBYT3-UCB(RET) TEST FOR UNLIKE DEVICES-
         BNE   ECM62800                 ..BRANCH IF UNLIKE
*
         TM    UCBTBYT3,UCB3TAPE+UCB3DACC IS THIS A UNIT RECORD DEVICE-
         BZ    ECM61400                 ..BR IF YES- BYPASS SMF
*
*****          DETERMINE WHETHER OR NOT SMF PROCESSING IS REQUIRED
*
ECM61080 EQU   *                        GO TO SMF MODULE         M1782
         TM    DXXPATHS,WTGSMF          IS SMF PROCESSING REQ'D- A38013
         BNO   ECM61200                 ..BR IF NOT TO CONTINUE  A38013
         LA    RF,MODSMF2X              PT TO SMF MODULE'S NAME
         LA    RET,K4                   LD BR TABLE OFFSET FOR THAT MOD
         MVC   DXRETMOD,MOD2X2X         MOVE THIS MODULE'S ID/TTR
*                                       ..INTO RETURN ADDRESS SAVE AREA
         TM    UCBTBYT3,UCB3TAPE        IS THIS A TAPE DEVICE-
         BZ    ECM62300                 ..BR IF NOT TO GO TO SMF MODULE
         MVC   DXRETMOD,MOD2V2X         MOVE POSITIONING MOD ID/TTR
*                                       ..INTO RETURN ADDRESS SAVE AREA
         B     ECM62300                 BR TO LEAVE THIS MOD
*
*****          CONTINUE CONCATENATION FOLLOWING SMF PROCESSING
*
ECM61200 EQU   *                        REG 14 = 4 ENTRY - SMF RETURN
         LA    RF,MOD2V2X               PT TO POSITIONING MOD ID/TTR
         SR    RET,RET                  LD BR TABLE OFFSET FOR THAT MOD
         TM    UCBTBYT3,UCB3TAPE        IS THIS A TAPE DEVICE-
         BO    ECM62300                 ..BR IF YES- GO TO TAPE POS MOD
         L     RUCB,DXUCBADR            LOAD CURRENT UCB ADDRESS Y02134
         EJECT
*****************************************************************Y02134
*                                                                Y02134
*        DECREMENT DATA MANAGEMENT COUNT                         Y02134
*                                                                Y02134
*****************************************************************Y02134
*                                                                Y02134
         L     R0,UCBOB+(((UCBDMCT-UCBOB)/K4)*K4) ALLIGN & LOAD  Y02134
*                                                                Y02134
         MODESET EXTKEY=SUPR            UCB KEY                  Y02082
*                                                                Y02134
         L     RF,DXXPREFX              LOAD PREFIX POINTER      Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE 15 REGS          Y02134
*                                                                Y02134
ECM61300 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02134X
               RELATED=(LOCAL,IFG0552X(ECM61380))                Y02134
*                                                                Y02135
         LTR   RD,RD                    TEST FOR SETLOCK ERROR   Y02134
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGS          Y02134
         BZ    ECM61320                 BRANCH, NO ERROR         Y02134
*                                                                Y02134
         DMABCOND PCK,SETLOCK           SETLOCK ERROR            Y02134
*                                                                Y02134
ECM61320 EQU   *                        DECREMENT COUNT          Y02134
*                                                                Y02134
         LR    RF,R0                    SAVE CS OPERAND          Y02134
         SLL   RF,K25                   LEAVE ONLY UCBDMCT COUNT Y02134
         LTR   RF,RF                    TEST FOR COUNT OF 0      Y02134
         BZ    ECM61340                 BRANCH IF ALREADY 0      Y02134
*                                                                Y02134
         LR    R1,R0                    LOAD OLD VALUE TO MODIFY Y02134
         SH    R1,HALFWD1               ADD DECREMENT TO COUNT   Y02134
         CS    R0,R1,UCBOB+(((UCBDMCT-UCBOB)/K4)*K4) UPDAT COUNT Y02134
         BNE   ECM61320                 BRANCH IF NOT THE SAME   Y02134
         OI    DXATEOV,DXATNVOL         INDIC CURR UNIT INACTIVE YM6520
         EJECT
ECM61340 EQU   *                        LOCAL LOCK STILL HELD    Y02134
*
*        WICLOSE VIO UNIT IF D. M. COUNT NOW ZERO                Y02132
*
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02134
         BNO   ECM61360                 BRANCH IF NOT VIO        Y02134
*                                                                Y02134
         TM    UCBDMCT,UCBDMC           TEST FOR ANY USERS       Y02134
         BNZ   ECM61360                 BRANCH IF STILL IN USE   Y02134
         L     RD,DXXPREFX              LOAD SAVE AREA POINTER   Y02134
         LA    RD,IECREGSV-IECPREFX(,RD) PT TO REGSAVE AREA      Y02132
         LA    R1,VDSUCB-VDSCB(,RUCB)   GET VDSCB POINTER        Y02134
*                                                                Y02134
         WICLOSE VDSCB=(1)              CALL VIO CLOSE           Y02134
*                                                                Y02134
ECM61360 EQU   *                        RELEASE LOCK             Y02134
*                                                                Y02134
         L     RF,DXXPREFX              LOAD PREFIX POINTER      Y02134
         STM   R0,RF,IECREGSV-IECPREFX(RF) SAVE 15 REGS          Y02134
*                                                                Y02134
ECM61380 SETLOCK RELEASE,TYPE=LOCAL,                             Y02134X
               RELATED=(LOCAL,IFG0552X(ECM61300))                Y02134
*                                                                Y02135
         LTR   RD,RD                    TEST FOR SETLOCK ERROR   Y02134
         LM    R0,RF,IECREGSV-IECPREFX(RF) RESTORE REGS          Y02134
         BZ    ECM61390                 BRANCH, NO ERROR         Y02134
*                                                                Y02134
         DMABCOND PCK,SETLOCK           SETLOCK ERROR            Y02134
*                                                                Y02134
ECM61390 EQU   *                        RETURN TO DM KEY         Y02134
*                                                                Y02134
         MODESET EXTKEY=DATAMGT         RETURN TO DATA MGMNT KEY Y02082
*                                                                Y02134
         EJECT
*                                                                M0071
*****          INITIALIZE DCB AND DEB FOR NEW DATA SET           M0071
*                                                                M0071
         SR    RD,RD                    CLEAR WORK REGISTER
         IC    RD,DEBNMEXT              LOAD TOTAL NO. OF EXTENTS
         SLL   RD,K4                    CALC LENGTH OF THESE EXTENTS
         AR    RD,RDEB                  ..AND ADD DEB BASE ADDRESS
         MVI   DEBBASND-DEBBASIC+(DEBVOLSQ-DEBACSMD)+K1(RD),K1   Y02134
*                                       SET DEB VOLUME SEQ. TO 1 Y02134
*
ECM61400 EQU   *                        GET CURRENT DSAB ADDRESS
         L     R1,DXDSABAD              GET CURRENT DSAB         Y02134
         USING DSAB,R1                                           Y02134
*
*   CHAIN TO NEXT DSAB: UPDATE WORKAREA POINTERS, DCB,DEB, DEBX  Y02134
*
         L     R1,DSABFCHN              GET NEXT DSAB            Y02134
         ST    R1,DXDSABAD              STORE IN WORKAREA        Y02134
         ST    R1,DXDSAB                CURRENT DSAB ADDR        Y02134
         L     RTIOT,DSABTIOT           NEW TIOT ENTRY ADDR      Y02134
         ST    RTIOT,DXTIOTAD           STORE IN WORKAREA        Y02134
         L     RUCB,TIOESTTB            GET FIRST UCB ADDR       YM5741
         LA    RUCB,K0(,RUCB)           CLEAR HIGH BYTE          YM5741
         ST    RUCB,DXUCBADR            UPDATE UNIT ADDRESS      YM5741
         L     RF,DXDEBXAD              GET DEB EXTENSION        Y02134
         USING DEBXTN,RF                                         Y02134
         MVC   DEBXDSAB,DXDSABAD        UPDATE DEB EXTENSION'S   Y02134
*                                       DSAB ADDRESS             Y02134
         DROP  RF                                                Y02134
         L     RF,DXTCBADR              GET CURRENT TCB ADD      Y02134
         L     RF,TCBTIO-TCB(RF)        START OF TIOT ADDRESS    Y02134
         SR    RTIOT,RF                 NEW TIOT ENTRY OFFSET    Y02134
         STH   RTIOT,DCBTIOT            STORE IN DCB             Y02134
         L     RTIOT,DXTIOTAD           RESTORE TIOT ADDRESS     Y02134
         MODESET EXTKEY=SCHED           ASSUME SCHED KEY         Y02082
         OI    DSABFLG2,DSABOPEN        SET OPEN BIT IN DSAB     Y02134
         MODESET EXTKEY=DATAMGT         ASSUME DATA MGT KEY      Y02082
         LA    RF,MOD1F2X               PT TO INITIAL MODULE'S ID/TTR
         LA    RET,K8                   BR TABLE ENTRY           YM5364
         B     ECM62300                 BR TO RETURN TO INITIAL ROUTINE
*                                       ..TO INITIALIZE WORK AREA FOR
*                                       ..CONCATENATED DCB
         EJECT
*
*****          RETURN FROM THE INITIAL ROUTINE- COMPLETE PROCESSING
*****          ON UNIT RECORD CONCATENATION
*****          AND RETURN TO THE CALLER OR THE ACCESS METHOD EXECUTOR
*
ECM61600 EQU   *                        REG 14 = 16 ENTRY
         NI    DEBOFLGS,X'FF'-DEBOFEOF  RESET DEB EOF INDICATOR
         L     RTIOT,DXTIOTAD           GET CURRENT TIOT ENTRY   YM1278
         MVC   DEBSUCBA+K1(L'TIOEFSRT),TIOEFSRT PLACE NEW UNIT   YM1278
*                                       ADDRESS IN DEB           YM1278
         NI    DCBOFLGS,X'FF'-DCBOCON   CLEAR CONCATENATION INDICATOR
         TM    DCBMACRF,DCBMEXCP        IS THE ACCESS METHOD EXCP-
         BO    ECM62000                 ..BR IF YES TO RETURN TO CALLER
         MVC   DXXMODID,MOD1L2X         MOVE ACCESS METHOD EXECUTOR
*                                       ..ID INTO WTG TABLE      Y02080
         MVC   DXXMODEP+K1(K3),MOD1L2X+K2 MOVE ACCESS METHOD EX. Y02080
*                                       ..EPA INTO WTG TABLE     Y02080
         B     ECM62200                 BR TO XCTL TO A/M EXECUTOR
         EJECT
*
***********************************************************************
*              MODIFY THE USER'S RESUME PSW SO THAT AN 'EXIT' IS TO   *
*              TO THE USER RATHER THAN AN ACCESS METHOD MODULE        *
***********************************************************************
*
ECM61800 EQU   *                        BUSY BIT OFF ENTRY/RETURN
*                                       FROM IFG0554J ENTRY
         TM    DCBMACRF,DCBMEXCP        IS THIS AN EXCP DCB-     A45247
         BO    ECM61900                 ..BR IF YES- RESUME PSW  A45247
*                                       ..ADDRESS IS CORRECT     A45247
         TM    DCBCIND2,DCBC2FEO        WAS FEOV ISSUED-         A45247
         BO    ECM61900                 ..BR IF YES- RESUME PSW  A45247
*                                       ..ADDRESS IS CORRECT     A45247
         L     RD,RBLINK                PT TO THE PREVIOUS REQUEST BLK
         L     RC,RBGRS13               USER SAVE AREA ADDRESS  YA01870
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY      YA01870
         L     RC,K20(,RC)              REG 14 IN USER SAVEAREA YA01870
         MODESET EXTKEY=SUPR            SVRB KEY                YA01870
         STCM  RC,B'0111',RBOPSW+K5-RBSECT(RD) STORE RETURN     YA01870
*                                       ADDR IN RESUME PSW      YA01870
         EJECT
ECM61900 EQU   *                        UNLIKE ATTRIBUTES CONCATENATION
         MODESET EXTKEY=DATAMGT         ASSUME DATA MGT KEY     YA01870
         L     RF,DXXPREFX              GET PTR TO PREFIX        Y02082
         USING IECPREFX,RF              DEFINE WORK AREA PREFIX  Y02080
         L     R1,IECUPRML              CLOSE PARM LIST PT IN R1 Y02080
         L     RF,IECRRPRM-IECPREFX(RF) GET ADDR OF RECOVERY     Y02144
         USING RRPLIST,RF               ESTABLISH BASE           Y02144
         XC    RRPLIST+K1(K23),RRPLIST+K1  ZERO RECOVERY PARMS   Y02144
         XC    DXATCOM1(K8),DXATCOM1    EXCEPT RRFUNCTN          Y02144
         XC    DXATCOM4(K12),DXATCOM4   AND ADDR OF RRPLIST      Y02144
         DROP  RF                                                Y02080
*                                                                Y02082
*****    SET UP FOR ENTRY TO THE 'CLOSE' ROUTINE AT SECONDARY    Y02082
*****    ENTRY POINT IGC01020.  BIT 7 OF DCBOFLGS IS NOT RESET.  Y02082
*                                                                Y02082
         MVC   DXXMODNM(K12),CONLOAD    MOVE MODULE NAME AND EPA Y02082
         OI    DXATCOM2,DXATCCAT        EOV GOING TO CLOSE       Y02144
         B     ECM62200                 BR TO GO TO 'CLOSE'      Y02082
*                                                                Y02082
         USING UCB,RUCB                 ESTABLISH UCB ADDRESSABILITY
         EJECT
***********************************************************************
*              EXITS                                                  *
***********************************************************************
*
*****          EXIT TO THE USER
*
ECM62000 EQU   *                        FREE WORKAREA
*                                                                Y02080
         TM    TIOELINK,TIOESYIN+TIOESYOT  TEST FOR SPOOLED DS   YM1306
         BM    ECM62050                 AVOID POINTING DEB       YM1306
*                                                                Y02080
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXUDCBAD+K1 POINT DEB  Y02082*
                                        TO USER DCB              Y02082
         L     RF,DXDEBXAD              GET PTR TO DEB EXTN      YM1272
         NI    DEBXFLG1-DEBXTN(RF),ALLBITS-DEBXCDCB DEB PT USER  YM1272
ECM62050 EQU   *                        REFRESH USER DCB         Y01018
         NI    DCBOFLGS,X'FF'-DCBOBUSY  RESET I/O SUPPORT BIT IN DCB
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,DXXPREFX)          Y02082
         IECRES FREE,A=(RCORE),PREFIX=EOV RELEASE EOV WORK AREA  Y02080
         LR    RF,RUCB                  PLACE RET CODE IN REG 15 (ONLY
*                                       ..MEANINGFUL FOR THE EOD EXIT)
         IECRES EXIT                    RETURN                   Y02080
         EJECT
*                                                                Y02080
*****          XCTL TO THE 'CLOSE' ROUTINES TO CLOSE THE DATA SET
*
ECM62200 EQU   *                        UPDATE DEBDCBAD IF NOT SPOOLED
         TM    TIOELINK,TIOESYIN+TIOESYOT  CHECK FOR SPOOLED     YM1272
         BM    ECM62250                 BR IF SPOOLED            YM1272
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXUDCBAD+K1 POINT DEB  YM1272*
                                        TO USER DCB              YM1272
         L     RF,DXDEBXAD              GET PTR TO DEB EXTN      YM1272
         NI    DEBXFLG1-DEBXTN(RF),ALLBITS-DEBXCDCB DEB PT USER  YM1272
ECM62250 EQU   *                        ENTER CLOSE              YM1272
*
*        COPY BACK PROTECTED DCB TO USER DCB TO UPDATE THE       YM3190
*        USER DCB WITH THE MODIFICATIONS MADE TO IT BY EOV,      YM3190
*        SUCH AS THE CONCATENATION BIT IN DCBOFLGS               YM3190
*
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,DXXPREFX)          YM3190
*
*        GIVE CLOSE CONTROL                                      YM3190
*
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=DIRECT               YM3190
         EJECT
*
*****          XCTL TO ANOTHER END-OF-VOLUME MODULE
*
ECM62300 EQU   *                        GO TO NEXT MODULE
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080*
                                     INVOKE IECRES MACRO TO XCTL Y02080
         SPACE 2
*
*****          ERROR PROCESSING EXIT
*
ECM62800 EQU   *                        GO TO PROBLEM DETERMINATION
         DMABCOND (0),ABEND2X           INVOKE ERROR PROCESSING RTNS
         EJECT
***********************************************************************
*              CONSTANTS                                              *
***********************************************************************
*
HALFWD1  DC    H'1'                     EXIT LIST AND DM COUNT   Y02132
EOVMARK  DC    C'EOV'                   END-OF-VOLUME LABEL IDENTIFIER
         EJECT
***********************************************************************
*              XCTL TABLE                                             *
***********************************************************************
*
XCTLTB2X XCTLTABL ID=(ABEND2X,0P,MOD1F2X,1F,MOD1L2X,1L,MOD2V2X,2V,     C
               MOD2X2X,2X,MODSMF2X,3B,CONLOAD,IGC01020),         Y02082C
               SVC=055,BRT=YES,LENGTH=                           Y02082
         SPACE 2
         IECDSECS CVT,                                                 C
               TCB,                                                    C
               RB,                                                     C
               TIOT,                                                   C
               DCB,                                                    C
               IEZDEB,                                           Y02134*
               UCB,                                                    C
               (MAIN,(IOB,NO)),                                 ZA01289X
               IOB,                                             ZA01289X
               WTG,                                                    C
               DSAB,                                             Y02134*
               PREFX,                                            Y02080*
               PSA,                                              Y02132*
               RRPL,                                             Y02144*
               EXPAND=YES
         IDDVDSCB                                                Y02132
ALLOWIO  EQU   X'80'                    ALLOW CHAINED SCHED I/O ZA01289
         IECEQU IEZDEB=YES                                       Y02134
         END
