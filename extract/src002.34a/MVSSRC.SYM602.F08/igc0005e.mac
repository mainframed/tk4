         TITLE 'IGC0005E BASIC EOV RTN'                          S21940
IGC0005E CSECT
***********************************************************************
*                                                                     *
*                  VS2-037 ADD/DEL/CH                                 *
*A486050-486750,A487930-487960                                 @ZA29752
*                                                                     *
*        VS2 RELEASE 02 DELETIONS                                     *
*        VS2 RELEASE 03 DELETIONS                                     *
*0000                                                           ZA00004
*0000359135,359583                                              ZA00113
*0000213920-213940                                              ZA00621
*0000211500,398020-399420                                       ZA02545
*0000393600                                                    @ZM33366
*        VS2 RELEASE 04 DELETIONS                                     *
*0000502000                                                    @ZA02977
*0000265000-267000                                             @ZA03655
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IGC0005E (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = BASIC EOV ROUTINE                                *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE WILL BE THE FIRST LOAD OF THE EOV ROUTINES       *
*        WHEN THE EOV (SVC 55) MACRO IS ISSUED.                       *
*                                                                     *
*        1) IF REGISTER 0 CONTAINS X'1000' IN ITS LOW ORDER TWO BYTES *
*        A DCB ADDRESS IS PASSED IN REGISTER 1. AN EOV WORKAREA IS    *
*        OBTAINED AND INITIALIZED, AND 1A OR 1B BELOW IS PERFORMED.   *
*        1A) IF THE DSORG IS ISAM OR BDAM, MESSAGE 'IEC020I NO ERROR  *
*        HANDLING, (SYNAD), EXIT SPECIFIED' IS MOVED TO THE WORKAREA  *
*        AND MODULE IFG0551D IS GIVEN CONTROL TO WRITE THE MESSAGE    *
*        AND ISSUE A SYSTEM 001 ABEND.                                *
*        1B) IF DSORG IS NOT ISAM OR BDAM, MODULE IFG0551B IS GIVEN   *
*        CONTROL WITH REGISTER 7 SET TO AN ENTRY CODE OF 20. IT WILL  *
*        MOVE MESSAGE 'IEC020I DCB EROPT=ABE OR AN INVALID CODE       *
*        AND/OR NO SYNAD EXIT SPECIFIED' IN THE EOV WORKAREA AND      *
*        GIVE CONTROL TO IFG0551D WHICH WILL WRITE THE MESSAGE        *
*        AND ISSUE A SYSTEM 001 ABEND.                                *
*                                                                     *
*        2) IF REGISTER 1 IS NEGATIVE, IT WILL CONTAIN A NEGATED DCB  *
*        ADDRESS AND AN INTERNAL ABEND CODE WILL BE IN REGISTER 0.    *
*        AN EOV WORKAREA WILL BE OBTAINED AND INITIALIZED, A DCB      *
*        COPY WILL BE OBTAINED, AND PROBLEM DETERMINATION MODULE      *
*        IFG0550P WILL BE GIVEN CONTROL PASSING IT THE INTERNAL       *
*        ABEND CODE FROM REGISTER 0.                                  *
         EJECT
*        3) IF NEITHER CONDITION 1 NOR 2 IS TRUE AND REGISTER 1       *
*        POINTS TO AN AMB, THEN VSAM EOV PROCESSING IS INDICATED. THE *
*        AMB IS IN PROTECT KEY ZERO CORE AND FETCH PROTECTED, EVEN    *
*        THOUGH THE PROTECT KEY OF THE CALLER OF SVC 55 IS NOT IN KEY *
*        ZERO. AN EOV WORKAREA IS OBTAINED AND INITIALIZED, AND MODULE*
*        IFG0551F IS GIVEN CONTROL WITH REGISTER 14 CONTAINING AN     *
*        ENTRY CODE OF 12. ACBS ARE NOT PROCESSED BY EOV.             *
*                                                                     *
*        IF CONDITIONS 1, 2, OR 3, ARE NOT THE CASE, THEN REGISTER 1  *
*        CONTAINS A DCB ADDRESS. THE DCB IS CHECKED TO ENSURE IT IS   *
*        OPEN AND THE DEB IS VERIFIED TO POINT BACK TO THE DCB.       *
*                                                                     *
*        4) IF REGISTER ONE POINTS TO A DCB FOR A SUBSYSTEM DATA SET  *
*        AS INDICATED BY THE ACCESS METHOD TYPE IN THE DEB, AN EOV    *
*        WORKAREA IS OBTAINED AND INITIALIZED, A DCB COPY IS          *
*        OBTAINED, THE DEB IS DEB VALIDITY CHECKED USING THE DEBCHK   *
*        MACRO, AND MODULE IFG0551F IS GIVEN CONTROL TO PROCESS END   *
*        OF DATA OR CONCATENATION FOR THE SEQUENTIAL ACCESS METHOD-   *
*        SUBSYSTEM INTERFACE.                                         *
         EJECT
*        5) IF 1-4 ABOVE IS NOT TRUE, REGISTER 1 POINTS TO AN EXCP,   *
*        BSAM, QSAM, OR BPAM DCB, AND REGISTER 0 CONTAINS AN          *
*        IOB ADDRESS IF NOT EXCP. ONE OF THREE CONDITIONS WILL BE     *
*        DETERMINED BY THIS MODULE.                                   *
*                                                                     *
*        5A) AN END OF VOLUME CONDITION IS INDICATED IN THE IOB       *
*        PASSED IN REGISTER 0 OR ASSUMED IF AN EXCP DCB. THIS WILL    *
*        RESULT IN TAKING THE END OF DATA EXIT (EITHER IN THIS MODULE *
*        FOR BPAM OR IN A SUBSEQUENT EOV MODULE), SWITCHING TAPE OR   *
*        DIRECT ACCESS VOLUMES, OBTAINING MORE DIRECT ACCESS SPACE ON *
*        THE CURRENT OR NEXT VOLUME, OR PROCESSING                    *
*        CONCATENATION OF TWO DATA SETS. AN EOV                       *
*        WORKAREA IS OBTAINED AND INITIALIZED, A DCB COPY             *
*        IS OBTAINED, THE DEB IS DEB VALIDITY CHECKED USING THE DEBCHK*
*        MACRO, AND MODULE IFG0551F IS GIVEN CONTROL.                 *
*                                                                     *
*        5B) A PERMANENT I/O ERROR IS INDICATED IN THE IOB PASSED IN  *
*        REGISTER 0. THIS WILL RESULT IN EXITING TO THE SYNAD ERROR   *
*        ANALYSIS ROUTINE POINTED TO BY DCBSYNAD (BY WAY OF THE       *
*        ACCESS METHOD, THE CALLER OF SVC 55) EITHER FROM THIS MODULE *
*        (FOR BSAM AND BPAM) OR IN IFG0551B (FOR QSAM). IF NO SYNAD   *
*        ROUTINE IS DEFINED FOR BSAM A SYSTEM 001 ABEND WILL BE       *
*        ISSUED BY GIVING IFG0551D CONTROL. IF NO SYNAD ROUTINE IS    *
*        PRESENT FOR QSAM, MODULE IFG0551B IS GIVEN CONTROL TO        *
*        IMPLEMENT THE ERROR OPTIONS.                                 *
*        IF A SYNAD ROUTINE IS PRESENT, THE PERMANENT I/O ERROR BIT   *
*        (DCBC2PIO, BIT 3, IN DCBCIND2) IS SET TO 1 TO SERVE AS A     *
*        SECOND ENTRY SWITCH IF THE USER RETURNS FROM HIS SYNAD       *
*        ROUTINE, IN WHICH CASE THE ACCESS METHOD WILL RE-ISSUE SVC 55*
*        TO ATTEMPT TO BYPASS THE I/O ERROR AS THE USER INDICATED.    *
         EJECT
*        5C) A RETURN FROM THE SYNAD ROUTINE IS INDICATED BY BIT 3,   *
*        DCBC2PIO, IN DCBCIND2 BEING SET TO ONE. MODULE IFG0551B WILL *
*        BE GIVEN CONTROL -                                           *
*        1) IF QSAM TO IMPLEMENT THE ERROR OPTION                     *
*        INDICATED IN DCBEROPT. THIS MAY RESULT IN THE I/O ERROR      *
*        BEING ACCEPTED OR SKIPPED AND THE QSAM CHANNEL PROGRAMS      *
*        BEING RESTARTED.                                             *
*        2) IF BSAM AND A CHANNEL PROGRAM NEEDS TO BE RESTARTED.      *
*        IF BSAM AND THE IOB IN ERROR (PASSED IN REGISTER 0) IS THE   *
*        CURRENT IOB (POINTED TO BY DCBIOBA), THE ACCESS METHOD       *
*        IS RETURNED CONTROL FROM THIS MODULE.                        *
*                                                                     *
*        THE EOV WORKAREA IS OBTAINED THROUGH THE IECRES-GET MACRO    *
*        WHICH CAUSES A SHARED ENQ ON THE TIOT. IF THE CALLER OF EOV  *
*        IS ENQUEUED ON THE TIOT EXCLUSIVELY, EOV PROCESSING WILL     *
*        NOT PROCEED, BUT THE RECOVERY ROUTINES WILL BE GIVEN CONTROL.*
*        THE EOV WORKAREA IS INITITIALIZED THROUGH THE IECRES-INIT    *
*        MACRO WHICH FILLS IN CONTROL BLOCK POINTERS IN THE WORKAREA. *
*                                                                     *
         EJECT
* NOTES =                                                             *
*        WHEN THE BSAM/QSAM ACCESS METHOD ISSUES EOV, IT HAS SAVED    *
*        REGISTERS 14-8 IN THE SAVE AREA OF THE CALLER OF THE GET/PUT/*
*        CHECK MACRO INSTRUCTION POINTED TO BY REGISTER 13. THESE     *
*        REGISTERS ARE NOT SAVED ACCORDING TO STANDARD LINKAGE        *
*        CONVENTIONS, BUT ARE SAVED AT OFFSET 20 DECIMAL INTO THE     *
*        SAVE AREA. THE ACCESS METHOD CALLER OF EOV HAS PRESERVED     *
*        REGISTER 13. CONSEQUENTLY, THE REGISTERS SAVED IN THE SVRB   *
*        ARE THOSE OF THE ACCESS METHOD (14-8) AND OF THE CALLER OF   *
*        THE ACCESS METHOD (9-13).                                    *
*                                                                     *
*        ANTICIPATING TAKING THE EODAD OR SYNAD EXIT, EOV SWAPS       *
*        THE REGISTERS 0-8 BETWEEN THE USER SAVE AREA (POINTED TO BY  *
*        REGISTER 13 IN THE SVRB SAVE AREA) AND THE SVRB SAVE AREA.   *
*        THIS IS DONE BECAUSE OF THE METHOD OF TAKING THE SYNAD       *
*        OR EODAD EXIT.                                               *
*                                                                     *
*        THE SYNAD EXIT IS TAKEN BY EXITING FROM EOV WITH             *
*        REGISTER 15 CONTAINING THE SYNAD ADDRESS. THE ACCESS         *
*        METHOD GAINS CONTROL AT THE NSI AFTER THE SVC 55, TESTS      *
*        REGISTER 15, AND, IF NONZERO, ASSUMES REGISTER 15 POINTS TO  *
*        THE SYNAD ADDRESS AND ISSUES A BALR 14,15 INSTRUCTION. SINCE *
*        THE SVRB FOR EOV HAD BEEN MADE TO CONTAIN THE REGISTERS OF   *
*        THE CALLER OF THE ACCESS METHOD, THOSE REGISTERS ARE         *
*        RETURNED TO THE ACCESS METHOD AND WILL BE PRESENTED TO THE   *
*        SYNAD ROUTINE. FOR THIS REASON THE SYNAD ROUTINE MUST NOT    *
*        SAVE REGISTERS IN ITS SAVE AREA AS IT THEN CONTAINS THE      *
*        ACCESS METHOD REGISTERS WHICH WILL BE NEEDED IF A RETURN IS  *
*        MADE FROM THE SYNAD ROUTINE TO IGNORE THE I/O ERROR OR       *
*        IMPLEMENT THE DCB ERROR OPTIONS.                             *
*                                                                     *
*        SIMILARLY, THE EODAD EXIT IS TAKEN BY ALTERING THE RESUME    *
*        PSW IN THE EOV SVRB TO NOT CONTAIN THE ADDRESS OF THE NSI    *
*        AFTER THE SVC 55 IN THE ACCESS METHOD ROUTINE, BUT THE       *
*        ADDRESS OF THE EODAD EXIT. WHEN EOV EXITS, THE EODAD EXIT    *
*        WILL BE GIVEN CONTROL DIRECTLY AND THE REGISTERS WILL BE     *
*        LOADED FROM THE SVRB AND WILL BE THOSE OF THE CALLER OF THE  *
*        ACCESS METHOD.                                               *
*                                                                     *
*        WHEN EOV SUCCESSFULLY SWITCHES VOLUMES OR OBTAINS ADDITIONAL *
*        DIRECT ACCESS SPACE ON THE CURRENT OR A NEW VOLUME OR AFFECTS*
*        A CONCATENATION, EOV EXITS TO THE ACCESS METHOD WITH         *
*        15 SET TO ZERO INDICATING THAT ACCESS METHOD PROCESSING MAY  *
*        CONTINUE. IN THIS CASE THE REGISTERS THAT HAD BEEN SWAPPED   *
*        ANTICIPATING AN EODAD OR SYNAD EXIT MUST BE UN-SWAPPED SO    *
*        THE ACCESS METHOD WILL BE RETURNED ITS OWN REGISTERS.        *
         EJECT
*    DEPENDENCIES =                                                   *
*        THE ACCESS METHOD REGISTER SAVING CONVENTIONS STATED ABOVE   *
*        UNDER NOTES.                                                 *
*        CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE         *
*        WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED       *
*        IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.          *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IGC0005E                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = EOV MACRO (SVC 55)                                     *
         EJECT
* INPUT =                                                             *
*        THERE ARE FOUR DIFFERENT INPUT CONDITIONS -                  *
*                                                                     *
*        1) REGISTER 0 CONTAINS AN IOB ADDRESS.                       *
*        REGISTER 1 CONTAINS A DCB ADDRESS.                           *
*        IN THIS CASE IF THE DCBC2PIO BIT (BIT 3) IN DCBCIND2 IS SET, *
*        IT INDICATES A SECOND ENTRY INTO EOV UPON RETURN FROM THE    *
*        SYNAD ROUTINE.                                               *
*                                                                     *
*        2) REGISTER 1 CONTAINS A DCB/AMB ADDRESS.                    *
*                                                                     *
*        3) REGISTER 0 CONTAINS X'1000' IN THE LOW ORDER TWO BYTES.   *
*        REGISTER 1 CONTAINS A DCB ADDRESS.                           *
*                                                                     *
*        4) REGISTER 0 CONTAINS AN INTERNAL ABEND CODE TO BE PASSED   *
*        TO EOV PROBLEM DETERMINATION.                                *
*        REGISTER 1 CONTAINS A NEGATED DCB ADDRESS.                   *
*                                                                     *
* OUTPUT =                                                            *
*        1) EOV WORKAREA OBTAINED AND INITIALIZED AND TIOT ENQED UPON *
*        VIA THE IECRES MACRO (EXIT TO IFG0550P, IFG0551D, IFG0551F). *
*                                                                     *
*        2) DCB COPY (IFG0550P, AND IFG0551F IF NOT AMB).             *
*                                                                     *
*        3) DCBC2PIO BIT IN DCBCIND2 SET TO 1 (PERMANENT I/O ERROR).  *
*                                                                     *
*        4) ERROR MESSAGE PLACED AT OFFSET 8 IN EOV WORKAREA (EXIT TO *
*        IFG0551D).                                                   *
*                                                                     *
*        5) REGISTER 7 CONTAINING ENTRY CODE TO IFG0551B -            *
*        0 - QSAM I/O ERROR, SYNAD ADDRESS PRESENT.                   *
*        4 - QSAM I/O ERROR AND SYNAD ADDRESS ABSENT, OR SECOND       *
*        ENTRY FOR QSAM.                                              *
*        8 - BSAM SECOND ENTRY WITH CHANNEL PROGRAMS TO RESCHEDULE.   *
*        12 - BSAM SECOND ENTRY AND CHAINED SCHEDULING.               *
*        16 - BSAM SECOND ENTRY, PRINTER DEVICE AND IOBS PURGED.      *
*        20 - REGISTER 0 = X'1000' IN LOW ORDER 2 BYTES ON ENTRY TO   *
*        EOV AND NOT ISAM/BDAM.                                       *
*                                                                     *
*        6) REGISTER 0 CONTAINING INTERNAL ABEND CODE (IFG0550P).     *
*                                                                     *
*        7) REGISTER 14 CONTAINING ENTRY CODE TO IFG0551F -           *
*        0 - NOT AMB.                                                 *
*        12 - (VSAM) AMB.                                             *
*                                                                     *
*        8) RESUME PSW SET TO POINT TO EODAD EXIT (BPAM END OF DATA). *
*                                                                     *
*        9) REGISTER 15 CONTAINING SYNAD ADDRESS OR ZERO (EXIT        *
*        TO BSAM ACCESS METHOD CALLER FROM FIRST OR SECOND ENTRY      *
*        WHEN PROCESSING A PERMANENT I/O ERROR).                      *
*                                                                     *
*        10) REGISTERS 0-8 AT OFFSET 28 IN USER SAVE AREA, OFF        *
*        REGISTER 13 IN SVRB, SWAPPED WITH REGISTERS 0-8 IN SVRB      *
*        SAVE AREA (IF EXITING TO BSAM ACCESS METHOD CALLER WITH      *
*        SYNAD ADDRESS OR ZERO IN REGISTER 15, OR WHEN TAKING EODAD   *
*        EXIT FOR BPAM MEMBER, OR GIVING CONTROL TO IFG0551F EXCEPT   *
*        FOR VSAM AMB).                                               *
*                                                                     *
*        11) WHEN GOING TO IFG0551B WITH REGISTER 7 CONTAINING   YM4610
*        4 OR 12 - REGISTER 12 CONTAINS THE ADDRESS OF THE IOB   YM4610
*        IN ERROR.                                               YM4610
*
*        12) WHEN GOING TO IFG0551B WITH REGISTER 7 CONTAINING   YM4610
*        8 OR 16 - REGISTER 6 CONTAINS THE ADDRESS OF THE IOB    YM4610
*        IN ERROR AND REGISTER 12 CONTAINS THE ADDRESS OF THE    YM4610
*        LAST SCHEDULED IOB                                      YM4610
*                                                                     *
*        REGISTERS IF TRANSFERRING TO ANOTHER MODULE                  *
*        R2 POINTS TO USER'S DCB EXCEPT UNDER 2) ABOVE                *
*        R4 POINTS TO EOV WORKAREA                                    *
*        R6 POINTS TO THE WTG TABLE IN THE EOV WORKAREA EXCEPT   YM4610
*              FOR 11) AND 12) ABOVE                             YM4610
*        R8 POINTS TO THE CURRENT (AND ONLY) WTG TABLE ENTRY          *
*                                                                     *
*        CONTROL PASSED TO NEXT MODULE IN PROTECT KEY 5               *
         EJECT
* EXIT-NORMAL =                                                       *
*        IFG0551F                                                     *
*        IFG0550P                                                     *
*        IFG0551B                                                     *
*        IFG0551D                                                     *
*        EXIT TO ACCESS METHOD CALLER VIA IECRES-EXIT MACRO           *
*        EXIT TO EODAD ROUTINE (ADDRESS PLACED IN RESUME PSW) VIA     *
*        IECRES-EXIT MACRO.                                           *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P VIA DMABCOND AND IECRES-BRANCH MACRO WITH INTERNAL  *
*        ABEND CODE IN REGISTER 0 -                                   *
*        1) INTERNAL ABEND CODE 219 CAUSING                           *
*        A37-08 SYSTEM ABEND - DEB DOES NOT POINT TO DCB,             *
*        BAD CONTROL BLOCK STRUCTURE (ERROR FROM IECRES INIT).   YM7883
*        2) INTERNAL ABEND CODE 174 CAUSING                           *
*        337-04 SYSTEM ABEND - NO EODAD ADDRESS AT END OF DATA.       *
*        3) INTERNAL ABEND CODE 198 CAUSING                           *
*        A37-04 SYSTEM ABEND - DCB NOT OPEN.                          *
*                                                                     *
*        DMABCOND PCK IF RETURN CODE FROM IECRES-GET,PREFIX=EOV       *
*        INDICATES THAT THE CALLER OF EOV ENQUEUED ON THE TIOT        *
*        RESOURCE EXCLUSIVELY. THIS WILL NOT BE TOLERATED,            *
*        UNLESS FOR AN AMB CATALOG REQUEST, AND THE CALLER IS IN YM7883
*        A SYSTEM KEY.                                           YM7883
*                                                                     *
*        EXIT TO CALLER VIA IECRES-EXIT MACRO IF                      *
*        1) VTAM ACB - ACBERFLG SET TO 4.                             *
*        2) ACB ADDRESS PASSED IN REGISTER 1.                         *
*        3) LOCK BIT NOT ON IN DCB.                                   *
*        4) DEB CHAINED ON ANOTHER TCB AND IT IS BEING CLOSED BY      *
*        THE TASK CLOSE ROUTINE FOR THAT TCB.                         *
*        5) IECRES INIT ERROR FOR AMB CONTROL BLOCK              YM7883
*                                                                     *
*        IFG0551D WITH MESSAGE 'IEC020I ERROR OCCURRED WHILE CLOSING  *
*        DATA SET' AT LOCATION 8 IN THE EOV WORKAREA IF A PERMANENT   *
*        I/O ERROR OCCURRED AND THE DCB INDICATED THAT CLOSE'S        *
*        FLUSHING OF BURRERS DETECTED THE I/O ERROR AND CALLED EOV.   *
*                                                                     *
*        IFG0551D WITH MESSAGE 'IEC020I NO ERROR HANDLING, (SYNAD),   *
*        EXIT SPECIFIED' AT LOCATION 8 IN THE EOV WORKAREA IF         *
*        PERMANENT I/O ERROR ON BSAM/BPAM DCB AND NO SYNAD ADDRESS    *
*        WAS PRESENT IN THE DCB.                                      *
*                                                                     *
*        IFG0551D WITH MESSAGE 'IEC020I GET OR READ ISSUED AFTER END  *
*        OF FILE' AT OFFSET 8 IN EOV WORKAREA IF SECOND ENTRY AND     *
*        DEBF1EOF (BIT 1) IN DEBFLGS1 SET TO 1 INDICATING GET/READ    *
*        ISSUED FROM EODAD ROUTINE.                                   *
         EJECT
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*                                                                     *
*    DATA AREAS =                                                     *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        TCB                                                          *
*        SVRB                                                         *
*        DEB                                                          *
*        CVT                                                          *
*        SEQUENTIAL ACCESS METHOD IOBS                                *
*                                                                     *
* TABLES =                                                            *
*        EOV WORKAREA MAPPED BY FORCORE DSECT.                        *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        DMABCOND                                                     *
*        ICREST INIT                                                  *
*        IECRES EXIT                                                  *
*        IECRES GET                                                   *
*        IECRES LOAD                                                  *
*        IECRES FREE                                                  *
*        DEBCHK MF=L                                                  *
*        XCTLTABL                                                     *
*        IDAAMB                                                       *
*        IECEQU                                                       *
*        IECDSECS                                                     *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD          *
*                                                                     *
***********************************************************************
         EJECT
EABD174  EQU   174                      CODE FOR ABEND 337
EABD198  EQU   198                      CODE FOR ABEND A37      SA52379
EABD219  EQU   219                      CODE FOR ABEND A37      SA59307
         BALR  RBASE,0                  ESTABLISH BASE
         USING EIN00200,RBASE           BASE REGISTER USING
         USING IHADCB,RDCB              DCB ADDRESS USING
         USING SAVEAREA,RD              USER'S SAVE AREA DSECT   Y02082
*
EIN00200 EQU   *                        BASE UNTIL FOLLOWING BAL
*
         BAL   RBASE,EIN00500           BRANCH AROUND ABEND CODE
         USING EIN00300,RBASE           ESTABLISH NEW ADDRESABILITY
*        RBASE IS USED FOR BASE REGISTER AND ABEND ENTRY POINT
EIN00300 EQU   *                        PROBLEM DETERMINATION FUNCTION
*
*        REGISTER 7 POINTS TO ERROR MESSAGE OR CONTAINS A NEGATED
*        INTERNAL ABEND CODE TO BE PASSED TO PROBLEM DETERMINATION
*
         USING FORCORE,RCORE            EOV WORKAREA USING
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
*
         BAL   R8,EIN01800              GET CORE FOR EOV RTNS    A44814
*
         LTR   R7,R7                    001 ABEND OR OTHER
         BM    EIN00450                 OTHER, CALL PROB DET.
         LA    R1,DXCCW11+K4            MESSAGE AREA
         XC    K0(K12,R1),K0(R1)        ZERO AREA TO HOLD MESSAGE
         MVI   K1(R1),K16               ABEND CODE
         LH    RF,K0(R7)                MESSAGE LENGTH
         BCTR  RF,K0                    DECREMENT BY ONE
         EX    RF,EIN00400              MOVE MSG TO WKAREA
         LA    R7,K4                    INDICATE MESSAGE IS IN  SA53086
*                                       THE WORKAREA            SA53086
         MVC   DXXMODID,MOD2E5E         PUT ID IN NAME
         MVC   DXXMODEP+K1(K3),MOD2E5E+K2 MOVE IN EP ADDRESS     Y02080
         B     EIN02100                 BR TO SETUP FOR XCTL
EIN00400 MVC   MSGLSTSZ(K0),K0(R7)      GET LENGTH OF MSG
         EJECT
EIN00450 EQU   *                        NOT AN 001 ABEND
         MODESET EXTKEY=DATAMGT         GET IN D. M. KEY         YM7883
         LA    RWTG,DXXAREA             WTG REG POINTS TO DUMMY WTG TBL
         LA    RWTGC,DXXENTRY           CURRENT PTR POINTS TO DUMMY
*                                       ENTRY
         DMABCOND (0),RES=NO,REGSAVE=YES SETUP FOR 550P          M0067
         MVC   DXXMODNM+K6(K2),MODPD5E  MOVE ID OF IFG0550P, TO  M0067
*                                       NAME FIELD OF WTG TABLE  M0067
         MVC   DXXMODEP+K1(K3),MODPD5E+K2 IFG0550P EP            Y02080
         IECRES INIT,DCBCOPY=TOWKAR,PREFIX=DXXPREFX, COPY DCB TO Y02082*
               STM=(3,14,DXXPREFX)      PROTECTED CORE           Y02082
         LPR   R0,R7                    PUT POS INTERNAL CODE IN REG 0
         B     EIN02100                 GO XCTL                  M0067
         EJECT
EIN00500 EQU   *                        CHECK FOR ABEND/PROBELM DET
*
*        DETERMINE FUNCTION REQUESTED BY SVC 55 CALL
*
         DROP  RCORE                    DROP EOV WORKAREA USING  Y02082
         USING TCB,R4                   TCB PASSED IN R4 TO SVC  Y02082
         USING RBBASIC,R5               RB PASSED IN R5        @ZA02545
         LA    RDCB,K0(R1)              GET DCB ADDRESS
         CH    R0,ABCOD                 ABEND REQUESTED
         BE    EIN00550                 YES, 001 IS COMP CODE
         LTR   R1,R1                    ABEND OTHER THAN 001
         BNM   EIN00600                 NO, ABEND NOT REQUESTED
         TM    RBGRS1,ALLBITS           VALIDITY CHECK ABEND   @ZA02545
         BNO   EIN00600                 BRANCH IF NOT ABEND      Y02134
         LPR   RDCB,R1                  LOAD DCB ADDR INTO RDCB  Y02082
         LNR   R7,R0                    PUT NEGATIVE INTERNAL CODE
*                                       IN REG 7
         BAL   R8,EIN03010              LINK TO SWAP REGS      @ZA02545
         BR    RBASE                    ISSUE MESSAGE & ABEND
         SPACE 2
EIN00550 EQU   *                        001 ABEND REQUEST
         LA    R7,K20                   BRANCH OFFSET INTO       YM1197
*                                       IFG0551B IF NOT IS/DA    YM1197
         TM    DCBDSORG-IHADCB(RDCB),DCBORGPS PS PROCESSING     ZA00621
         BZ    EIN00575                 NO - GO TO IFG0551D     ZA00621
         TM    DCBCIND2,DCBC2QSM        QSAM PROCESSING         ZA00621
         BO    EIN02000                 YES - GO TO IFG0551B    ZA00621
EIN00575 EQU   *                                                ZA00621
         LA    R7,MSG1                  GET ADDR MSG NO SYNAD SPECIFIED
         BR    RBASE                    ISSUE MESSAGE & ABEND
         EJECT
EIN00600 EQU   *                        NOT SPECIAL PROBLEM
*                                       DETERMINATION USE OF SVC55
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          YM1391
         LA    R7,K20                   PUT ENTRY CODE IN REG
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    X02989
         BO    EIN00700                 BR IF YES, NOT ACB/AMB   XM1037
         TM    DCBDSORG+K1,ACBDORGA     IS CNTRL BLK AN ACB/AMB  X02989
         BNO   EIN00700                 BR IF NO                 X02989
         USING IDAAMB,RDCB                                       YM3843
         TM    AMBID,AMBIDENT           IS CNTRL BLK AN AMB      YM3843
         LA    R8,EIN02150              SKIP DCB COPY IF YES     YM3843
         BO    EIN01800                 BR IF YES - VSAM AMB     YM3843
         SPACE 2
*                                                                Y02004
*        ACB PASSED TO EOV IN REGISTER 1
*        DO NOT PROCESS VTAM ACB REQUESTS                        Y02004
*                                                                Y02004
         USING IFGACB,RACB              ADDRESS ACB              Y02004
         MODESET EXTKEY=RBT234,WORKREG=7 ASSUME CALLER'S KEY     YM3843
         CLI   ACBAMETH,ACBVTAM         IS THIS ACB FOR VTAM?    YM3011
         BNE   EIN01100                 NO, EXIT                 YM3843
         MVI   ACBERFLG,VSCACBCL        SET ACB ERROR FLAG       Y02004
         B     EIN01100                 RETURN TO USER           Y02004
*
         USING IHADCB,RDCB              RESTORE BASE FOR DCB     Y02004
         EJECT
EIN00700 EQU   *                        DCB PASSED IN REGISTER 1 X02989
         MODESET EXTKEY=RBT234,WORKREG=7 ASSUME CALLER'S KEY     YM1391
*
         LR    RET,RPAR                 GET SVRB PASSED BY MONITOR
         USING RBBASIC,RET              USING ON SVRB            Y02082
         DROP  R4                                                YM1391
         DROP  R5                                              @ZA02545
         USING FORCORE,RCORE                                     YM1391
*
*
         TM    DCBOFLGS,DCBOPEN+DCBOLOCK IS DCB OPEN + UNLOCKED SA52379
         BNO   EIN01150                 NO, STOP PROCESSING     SA52379
         USING DEBBASIC,RDEB            ADDRESSABILITY           YM2869
         L     RDEB,DCBDEBAD            GET DEB ADDRESS         SA59307
         L     RC,DEBDCBAD              GET DCB FROM DEB        SA59307
         LA    R7,K3                    NEG OFFSET TO AMTYP      YM1310
         SR    RDEB,R7                  PT TO DEBAMTYP           YM1310
         CLC   K0(K1,RDEB),DEBCKSS      TEST FOR SUBSYS DEB      YM1310
         L     RDEB,DCBDEBAD            RESTORE DEB ADDRESS      YM1310
         BNE   EIN00730                 BR IF NOT                YM1310
         L     RC,DEBECBAD              DCB ADDR FOR SUBSYS DEB  YM1310
EIN00730 EQU   *                        SEE IF DEB POINTS TO DCB YM1310
         LA    RC,0(RC)                 CLEAR HIGH ORDER BYTE   SA59307
         CR    RC,RDCB                  IS THIS A VALID DCB     SA59307
         BE    EIN00750                 YES                     SA59307
         LA    R7,EABD219               NO, BAD DCB PTR         SA59307
         LNR   R7,R7                    NOT 001 ABEND           SA59307
         BAL   R8,EIN03015              LINK TO SWAP REGS      @ZA02545
         BR    RBASE                    BRANCH TO ABEND         SA59307
         EJECT
EIN00750 EQU   *                        VALID DEB, CONTINUE     SA59307
         TM    DCBMACRF,DCBMEXCP        DCB USING EXCP MACRO
         BO    EIN01750                 YES XCTL TO EOV ROUTINE  YM2869
         NI    DCBCIND2,ALLBITS-DCBC2FEO    TURN OFF FEOV BIT   SA58624
         LA    RC,K3                    GET OFFSET TO DEBAMTYP   Y02120
         SR    RDEB,RC                  RDEB POINTS TO DEBAMTYP  Y02120
         CLC   DEBCKSS,K0(RDEB)         DEBAMTYP FOR SUBSYSTEM   Y02120
         LA    RDEB,K3(,RDEB)           RESTORE DEB ADDRESS      YM1119
         BE    EIN01700                 BRANCH IF SUBSYSTEM      YM2869
*
*        NOT SUBSYSTEM DCB, MUST BE NORMAL BSAM/QSAM
*
         LR    RC,R0                    GET IOB ADDRESS
         TM    DCBCIND2,DCBC2QSM        QSAM BEING USED
         BO    EIN00800                 YES BRANCH
         CLI   DCBDEVT,K80              PAPER TAPE BEING USED
         BE    EIN01750                 YES BRANCH               YM2869
         B     EIN00900                 NO, BRANCH              SA59307
EIN00800 EQU   *                        TEST FOR QSAM GET FROM EODAD
*
         LA    R7,MSG3                  GET ADDR MSG ISSUED BY EODAD
         TM    DEBFLGS1,DEBF1EOF        WAS EOD TAKEN           SA50649
         BCR   1,RBASE                  ISSUE MESSAGE AND ABEND SA50649
EIN00900 EQU   *                        BSAM/QSAM EOV
         L     RPAR,K12(RC)             GET ECB ADDR
         TM    DCBCIND2,DCBC2PIO        SECOND ENTRY INTO ROUTINE
         BZ    EIN01200                 NO CONTINUE
         EJECT
*
*        SECOND ENTRY INTO EOV - RETURN FROM SYNAD ROUTINE
*
         NI    DCBCIND2,ALLBITS-X10     TURN OFF PERM ERROR FLAGS
         TM    DCBCIND2,DCBC2QSM        QSAM BEING USED
         LA    R7,K4                    PUT 551B ENTRY CODE IN REG
         BO    EIN02000                 YES BRANCH TO QSAM ERROR
*                                       OPTIONS TEST
*
*        BSAM SECOND ENTRY TO EOV
*
         NI    DCBIFLGS,X'FF'-DCBIFPIO  TURN OFF ERROR FLAGS     A49379
*
         TM    DCBCIND2,DCBC2CHN        TEST FOR CHAINED SCHED @ZA03655
         BNO   EIN00950                 BRANCH NOT PCI         @ZA03655
*
         LA    R7,K12                   551B ENTRY CODE        @ZA03655
         L     RWTG,DCBIOBA             LOAD CURRENT ICB       @ZA03655
         LA    RWTG,K0(,RWTG)           CLEAR FOR COMPARE      @ZA03655
         CR    RC,RWTG                  ERROR ICB = CURRENT    @ZA03655
         BNE   EIN02000                 BRANCH TO RESCHED I/O  @ZA03655
         TM    K0(RC),X08               OUTPUT WITH READ       @ZA03655
         BNO   EIN02000                 BRANCH INVALID REQUEST @ZA03655
         B     EIN01050                 RETURN TO CALLER       @ZA03655
*
EIN00950 EQU   *                        NORMAL SCREDULING      @ZA03655
*
         LR    RWTG,RC                  GET CURRENT IOB
         L     RC,DCBIOBA               GET LAST IOB USED
         LA    RC,K0(RC)                CLEAR
         TM    DCBDEVT,DCBDVPR1         TEST IF DCB USING PRINTER
         BNO   EIN01000                 NO BRANCH
         TM    K12(RWTG),DEPEND         IOB INTERCEPTED OR PURGED
         LA    R7,K16                   PUT 551B ENTRY CODE IN REG
         BM    EIN02000                 YES, BRANCH
EIN01000 EQU   *                        WERE IOBS PURGED
         CR    RC,RWTG                  IS ERROR IOB CURRENT IOB
         LA    R7,K8                    PUT 551B ENTRY CODE IN REG
         BNE   EIN02000                 YES, BRANCH
         EJECT
*
*        BSAM - NO IOBS TO BE RESTARTED - RETURN TO CALLER
*
EIN01050 EQU   *                        TEST FOR PRESENCE OF SYNAD
         TM    DCBSYNAD+K3,K1           IS SYNAD PRESENT
         BO    EIN01100                 NO, BRANCH - NO REG UNSWAP
         LM    R0,R8,SAVREG0            GET ERR REGS 0-8         Y02082
*                                       PRE-SAVED IN SAVE AREA   Y02082
         MVC   SAVREG2(SAVREG9-SAVREG2),RBGRS2 MOVE REGS 2-8 IN  Y02082
*                                       SVRB TO SAVE AREA        Y02082
         MODESET EXTKEY=SUPR            SVRB KEY                 Y02082
         STM   R0,R8,RBGRS0             USER REGS TO SVRB        Y02082
EIN01100 EQU   *                        RETURN TO GERR/PERR
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         SR    RF,RF                    ZERO RETURN CODE         YM7883
*
         IECRES EXIT                    RETURN                   Y02080
         SPACE 2
*                                                                Y02080
*        OPEN AND LOCK BIT NOT BOTH ON
*
EIN01150 EQU   *                        ABEND OR RETURN TO USER SA52379
         TM    DCBOFLGS,DCBOPEN         IS THE OPEN BIT ON      SA52379
         BO    EIN01100                 BR IF YES-EXIT           YM7883
         LA    R7,EABD198               GET CODE FOR A37 ABEND  SA52379
         LNR   R7,R7                    INDICATE NON 001 ABEND  SA52379
         BAL   R8,EIN03010              LINK TO SWAP REGS      @ZA02545
         BR    RBASE                    GO TO ABEND CODE        SA52379
         EJECT
EIN01200 EQU   *                        TEST FOR I/O ERROR
*
*        FIRST ENTRY TO EOV
*
         TM    K20(RC),CSWUNITX         UNIT EXCEPTION ON IN CSW
         BZ    EIN01500                 NO BRANCH
*
         TM    K0(RC),IOBWRITE          WAS IOB USED FOR OUTPUT
         BO    EIN01300                 YES BRANCH
*
         TM    DCBDSORG,DCBORGPO        PAM DCB FOR INPUT
         BO    EIN02200                 YES BRANCH
*
EIN01300 EQU   *                        UNIT EXCEPTION - NOT PAM INPUT
*
         TM    DCBDEVT,DCBDEVDA         DA USED
         BO    EIN01400                 YES, BRANCH
         TM    K20(RC),K2               UNIT CHECK ON IN CSW
         BO    EIN02500                 YES,BRANCH
EIN01400 EQU   *                        END OF FILE INDICATION
         OI    DCBOFLGS,DCBOEOF         SET FILE IND-I/O SUPPORT
         B     EIN01600                 BR TO GET IOB
EIN01500 EQU   *                        NOT UNIT EXCEPTION
*
*        I/O ERROR UNLESS READ BACKWARDS INTO LOAD POINT
*
         TM    DCBDEVT,DCBDEVTP         DCB USING TAPE FOR INPUT
         BZ    EIN02500                 NO BRANCH - UNIT CHECK
*
         TM    K11(RC),UCBLDPT          READ LOAD POINT ON TAPE
         BZ    EIN02500                 NO BRANCH - UNIT CHECK
*
         TM    DCBOFLGS,DCBORDBK        IS IT READ BACK AT THE   M0180
*                                       LOAD POINT
         BZ    EIN02500                 NO, BRANCH - UNIT CHECK  M0180
*
EIN01600 EQU   *                        NOT I/O ERROR
*
         L     RPAR,K12(RC)             GET ECB ADDRESS
         MVI   K0(RPAR),ECBCOD7F        POST COMPLETE NO ERROR
         L     RWTG,DCBIOBA             GET CURR IOB FROM DCB
         STCM  RC,B'0111',K5(RWTG)      STORE ERROR IOB IN IT    Y02082
         NI    DCBCIND1,ALLBITS-K48     TURN OFF VOLUME FULL BITS
         EJECT
EIN01700 EQU   *                        NORMAL END OF VOLUME     YM2869
*                                                                Y02082
*        SWAP REGS 0-8 - THOSE IN THE SVRB AND THOSE IN THE      Y02082
*        CALLER'S SAVE AREA                                      Y02082
*
         LM    RCORE,RC,SAVREG0         LOAD REGS 0-8 IN SAVAREA Y02082
         MVC   SAVREG0(SAVREG9-SAVREG0),RBGRS0  MOVE REGS 0-8 IN Y02082
*                                       SVRB INTO THE SAVE AREA  Y02082
         MODESET EXTKEY=SUPR            SVRB KEY                 Y02082
         STM   RCORE,RC,RBGRS0          STORE REGS 0-8 FROM SAVE Y02082
*                                       AREA INTO SVRB           Y02082
*
EIN01750 EQU   *                        TEST TASK CLOSE BIT      YM2869
*
*        DON'T CONTINUE WITH EOV IF DEB IS CHAINED ON ANOTHER    YM2869
*        TCB'S DEB CHAIN AND IS BEING PROCESSED BY TASK CLOSE    YM2869
*
         L     R8,CVTPTR                CVT                      YM2869
         L     R8,CVTTCBP-CVT(,R8)      TCB POINTERS             YM2869
         L     R8,K4(,R8)               CURRENT TCB ADDR         YM2869
         USING TCB,R8                                            YM2869
         MODESET EXTKEY=RBT234,WORKREG=15 USER KEY               YM2869
         L     RDEB,DCBDEBAD            DEB ADDRESS              YM2869
         CLM   R8,B'0111',DEBTCBAD+K1   DEB ON CURRENT TCB       YM2869
         BE    EIN01760                 BRANCH IF YES            YM2869
         DROP  R8                                                YM2869
         LA    RF,DEBBASIC-DEBXTNP      OFFSET TO DEBX           YM2869
         LA    R8,DEBBASIC              CLEAR HIGH BYTE FOR LTR  YM2869
         SR    R8,RF                    R8 POINTS TO DEBX ADDR   YM2869
         USING DEBXTNP,R8                                        YM2869
         L     R8,DEBXTNP               R8 POINTS TO DEBX        YM2869
         USING DEBXTN,R8                                         YM2869
         TM    DEBXFLG1,DEBXTSK         IS TASK CLOSE ON DEB     YM2869
         BO    EIN01100                 BRANCH IF YES            YM2869
         DROP  R8                                                YM2869
DEBXTSK  EQU   X'40'                    TASK CLOSE PROCESSING    YM2869
         EJECT
EIN01760 EQU   *                        GET CORE FOR EOV         YM2869
         LA    R8,EIN01900              LOAD ADDR FOR RETURN     A44814
*                                       FROM GETMAIN             A44814
EIN01800 EQU   *                        GET EOV WORKAREA
*                                                                Y02080
* SAVE REGISTERS 2-12 IN SVRB EXTENDED SAVE AREA                 Y02080
*                                                                Y02080
         L     RF,CVTPTR                GET POINTER TO CVT       Y02080
         L     RF,CVTTCBP-CVT(,RF)      GET TCB WORDS            Y02080
         L     RF,K4(,RF)               TCB ADDRESS              Y02080
         L     RF,K0(,RF)               POINTER TO SVRB          Y02080
*                                                                Y02080
         MODESET EXTKEY=SUPR            SVRB KEY TO STM          Y02082
         IECRES GET,PREFIX=EOV,LV=EOVSIZE,STM=(2,13,96(15)),A=(RDCB)
*
         LR    RCORE,R1                 SET UP ADDRESS FOR EV RTS.
         STCM  RCORE,B'0111',DXXCORE    PUT WORKAREA ADDR IN     YM3843
*                                       EOV'S WTG TABLE ENTRY    YM3843
         LTR   R0,R0                    IS R0 ZERO               YM3185
         BZ    EIN01850                 BRANCH IF OK             YM7883
         EJECT
*        IF REG 0 IS NONZERO, IT IS BECAUSE THE CALLER HAS       YM3185
*        ENQUEUED EXCLUSIVELY ON THE TIOT. THIS MUST NOT BE      YM3185
*        ALLOWED TO GO UNNOTICED UNLESS FOR A CATALOG AMB.       YM7883
*
         MODESET EXTKEY=ZERO            AMB IN KEY 0             YM7883
         TM    DCBMACRF,DCBMEXCP        EXCP DCB                 YM7883
         BO    EIN03005                 BRANCH IF YES            YM7883
         TM    DCBDSRG2,ACBDORGA        ACB/AMB                 ZA00113
         BZ    EIN03005                 BRANCH IF NO             YM7883
         USING IDAAMB,RDCB              AMB USING                YM7883
         TM    AMBID,AMBIDENT           TEST FOR AMB             YM7883
         BZ    EIN03005                 BRANCH IF NOT            YM7883
         TM    AMBINFL,AMBCAT+AMBSCRA   CATALOG AMB?            Z30SSRL
         BZ    EIN03005                 BRANCH IF NOT            YM7883
         USING IHADCB,RDCB              RESUME DCB USING         YM7883
         TESTAUTH KEY=YES               IS CALLER IN SYSTEM KEY  YM7883
         LTR   RF,RF                    CALLER IN SYSTEM KEY     YM7883
         BNZ   EIN03005                 BRANCH IF NOT SYSTEM KEY YM7883
         EJECT
EIN01850 EQU   *                        PROCEED                  YM7883
         L     RF,DXXPREFX              GET PREFIX PTR           Y02144
         L     RF,IECRRPRM-IECPREFX(,RF) GET RRPLIST PTR         Y02144
         USING RRPLIST,RF                                        Y02144
         MVI   RRFUNCTN,RRFEOV          INDICATE EOV FUNCTION    Y02144
         ST    RF,DXATCOM3              SAVE RRPLIST PTR IN W/A  Y02144
         DROP  RF                                                Y02144
         IECRES LOAD,PREFIX=DXXPREFX,MODNM=EOV,BRANCH=NO         Y02080X
                                        GIVE OPT TRACE A SHOT    Y02080
*
         IECRES INIT,DEB=YES,STM=(2,14,DXXPREFX),PREFIX=DXXPREFX Y02082
*
         LR    R1,RDCB                  SET DCB ADDRESS IN REG 1
         CLI   DXWCOPYE,K0              WAS INIT SUCCESSFUL      YM4610
         BER   R8                       RETURN TO CALLER         A44814
*                                       OF SUBROUTINE
         LA    R7,EABD219               INTERNAL ABEND CODE      YM7883
         LNR   R7,R7                    NEGATE CODE              YM7883
         MODESET EXTKEY=ZERO            AMB IN KEY 0             YM7883
         TM    DCBMACRF,DCBMEXCP        EXCP DCB                 YM7883
         BO    EIN00450                 BRANCH IF YES            YM7883
         TM    DCBDSRG2,ACBDORGA        ACB/AMB                 ZA00113
         BZ    EIN00450                 BRANCH IF NO             YM7883
*        MUST BE AMB CONTROL BLOCK - ACB ALREADY SCREENED OUT    YM7883
         B     EIN01100                 EXIT                     YM7883
         EJECT
EIN01900 EQU   *                        COPY DCB
*
*        DCB COPY LEAVES BUSY BIT ALONE WHEN DEB= NOT CODED      YM7883
*
         IECRES INIT,DCBCOPY=TOWKAR,PREFIX=DXXPREFX, COPY DCB    Y02082*
               STM=(3,14,DXXPREFX)      BUT NOT AMB              Y02082
         EJECT
EIN01950 EQU   *                        DCB COPY SUCCESSFUL      Y02134
         SR    RET,RET                  ZERO BRANCH REG          YM1391
EIN01960 EQU   *                        GO TO IFG0551F           Y02082
         MVC   DXXMODID,MOD0Z5E         MOVE ID TO NAME
         MVC   DXXMODEP+K1(K3),MOD0Z5E+K2 MODULE EP ADDRESS      Y02080
         B     EIN02100                 BR TO XCTL
         SPACE 2
EIN02000 EQU   *                        GO TO IFG0551B
         BAL   R8,EIN01800              GETMAIN FOR EOV ROUTINES A44814
         MVC   DXXMODID,MOD2F5E         MOVE ID TO NAME
         MVC   DXXMODEP+K1(K3),MOD2F5E+K2 MODULE EP ADDRESS      Y02080
         SR    RET,RET                  ZERO BRANCH REG          YM1391
EIN02100 EQU   *                        SET AUDIT TRAIL          Y02080
         CLC   DXXMODID,MOD0Z5E         GOING TO IFG0551F        Y02144
         BNE   EIN02110                 BR IF NO                 Y02144
         L     RF,DXATCOM3              GET RRPLIST PTR          Y02144
         USING RRPLIST,RF                                        Y02144
         OI    RRFLAGS2,RRFFIN1         SET 1ST LOAD COMPLETED   Y02144
         DROP  RF                                                Y02144
EIN02110 EQU   *                        GO TO NEXT MODULE        Y02080
         MVC   DXXMODNM(K6),IGG5E       MOVE IN NAME
         CLC   DXXMODID,MOD2F5E         GOING TO IFG0551B        YM4610
         BE    EIN02120                 BRANCH IF YES, R6 HAS    YM4610
*                                       IOB ADDRESS              YM4610
         LA    R6,DXXMODNM              POINT TO NAME            Y02080
EIN02120 EQU   *                        GO TO NEXT MOD           YM4610
         IECRES LOAD,PREFIX=DXXPREFX,MODNM=DXXMODNM,             YM4610*
               BRANCH=DIRECT            USE IFG019RA TO XCTL     YM4610
EIN02150 EQU   *                        VSAM                     YM1391
         LA    RET,K12                  BRANCH CODE FOR 551F     YM1391
         B     EIN01960                 GO TO IFG0551F           YM1391
         EJECT
EIN02200 EQU   *                        BPAM EODAD
*
*        END OF DATA READING A BPAM MEMBER
*
         LA    R7,EABD174               ABEND 337 FOR PROB       M0067
*                                       DETER.                   M0067
         LNR   R7,R7                    INDICATE ABEND OTHER     M0067
*                                       THAN 001                 M0067
         BAL   R8,EIN03015              LINK TO SWAP REGS      @ZA02545
         TM    DCBEODAD+K3,K1           EODAD PRESENT            M0067
         BCR   1,RBASE                  YES - BRANCH TO ABEND    M0067
         NI    DCBIFLGS,X'FF'-DCBIFPIO  OFF WITH ERR FLAGS
         NI    DCBCIND1,ALLBITS-K48     TURN OFF VOLUME FULL BITS
         TM    DCBCIND2,DCBC2CHN       CHAINED SCHEDULING      @ZA02545
         BZ    EIN02300                NO                      @ZA02545
         L     RA,DCBIOBAD             YES - MUST TURN ON      @ZM33366
*                                      EXCP NEEDED FLAG        @ZA02545
         OI    K12(RA),K80             TURN ON FLAG            @ZA02545
EIN02300 EQU   *                       NO CHAINNED SCHEDULING  @ZA02545
*
         L     R9,SAVREG14              USERS REG 14           @ZA02545
         MODESET EXTKEY=SUPR            SVRB KEY               @ZA02545
*                                       INTO THE SVRB          @ZA02545
         ST    R9,RBGRS14               STORE USERS RET ADDR   @ZA02545
         L     RA,DCBEODAD              USER'S EODAD ADDRESS     Y02082
         L     RET,RBLINK               ADDR OF USERS RB         Y02082
         STCM  RA,B'0111',RBOPSW+K5     SET EODAD ADDR IN THE    Y02082
*                                       RESUME PSW               Y02082
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
         EJECT
EIN02500 EQU   *                        BSAM/QSAM ERROR ANALYSIS
*
*        PERMANENT I/O ERROR DETECTED
*
         OI    DCBCIND2,DCBC2PIO        SET PERMANENT ERROR INDICATOR
         TM    DCBCIND2,DCBC2QSM        DCB USING QSAM
         BO    EIN03000                 YES BRANCH
*
*        BSAM ONLY PROCESSING
*
         TM    DCBSYNAD+K3,K1           SYNAD PRESENT
         LA    R7,MSG1                  GET ADDR OF MSG -NO SYNAD EXIT-
         BCR   1,RBASE                  NO - BRANCH TO ABEND
         CLI   K4(RC),ALLBITS           ECB FLAGGED IN ERROR
         BNE   EIN02600                 NO BRANCH
         OI    K0(RC),BIT2+BIT4         TURN ON N/P ILLOGICAL REQUEST
         NI    K4(RC),K0                TURN OFF ECB ERROR INDICATOR
*
EIN02600 EQU   *                        COLLECT SYNAD INFORMATION
*                                       FOR BOTH BSAM AND QSAM
*
         TM    K0(RC),IOBWRITE          LAST USED FOR WRITING
         BO    EIN02900                 YES, BRANCH
         NI    K0(RC),ALLBITS-DCBMREAD  TURN OFF OLD READ BIT
         OI    K0(RC),UCBMOUNT          TURN ON NEW READ INDICATOR
         SR    RWTG,RWTG                CLEAR REG
         IC    RWTG,DCBOFFSR            GET READ CCW OFFSET
         LA    RWTG,K8(RWTG,RC)         GET READ CCW OFFSET PLUS A48213
*                                       EIGHT IN IOB             A48213
         TM    DCBCIND1,K1              QSAM EXCHANGE
         BZ    EIN02800                 NO, BRANCH
         LH    R0,DCBEROPT+K4           GET BLOCK FACTOR
         BCTR  R0,K0                    REDUCE COUNT BY ONE
         SLL   R0,K3                    MULTIPLY BY EIGHT
         AR    RWTG,R0                  DETERMINE OFFSET
EIN02800 EQU   *                        SEE IF BLOCK IS IN CORE
*
         L     R7,K16(RC)               GET ADDR OF CSW
         LA    R7,K0(R7)                CLEAR HIGH ORDER BIT
         CR    RWTG,R7                  COMPARE COMPUTED ADDR TO CSW
         BH    EIN02900                 BRANCH IF THE COMPUTED   A48213
*                                       ADDRESS IS HIGHER THAN   A48213
*                                       THAT IN THE CSW          A48213
         BL    EIN02850                 BR IF AHEAD OF THE      ZA00004
*                                       READ CSW                ZA00004
         LA    R1,K8                    GET BACKUP VALUE        ZA00004
         SR    R7,R1                    DECREMENT R7 BY 8       ZA00004
         CLC   K22(K2,RC),K6(R7)        COMPARE THE CCW COUNT   ZA00004
*                                       FIELD WITH THE CSW      ZA00004
*                                       COUNT FIELD AND BR IF   ZA00004
*                                       EQUAL - HAVE NOT READ   ZA00004
*                                       ANY DATA INTO CORE      ZA00004
         BE    EIN02900                 BR IF EQUAL -NO READ    ZA00004
*                                       DATA IN CORE - DO NOT   ZA00004
*                                       SET THE BLOCK IN CORE   ZA00004
*                                       INDICATOR               ZA00004
EIN02850 EQU   *                                                ZA00004
*
         OI    K0(RC),K16               SET BLOCK IN CORE INDICATOR
         EJECT
EIN02900 EQU   *                        PLACE SYNAD INFO IN R1/R2
*                                       TAKE SYNAD EXIT IF BSAM
*
         IC    R1,K0(RC)                GET ERROR INDICATORS
         SLL   R1,K24                   SHIFT TO HIGH BYTE
         OR    R1,RDCB                  PUT DCBAD IN SAME REG
         LR    RDCB,R1                  SAVE DCB AND RETURN CODE
         L     RF,DCBSYNAD              GET SYNAD ADDRESS
         XR    R7,R7                    PUT ENTRY CODE INTO REG  A44814
         TM    DCBCIND2,DCBC2QSM        DCB USING QSAM
         BO    EIN02000                 YES, BRANCH
         LR    R0,RPAR                  GET DECB ADDRESS FOR USER
*                                                                Y02082
*        MOVE REGS 0-6 IN SVRB INTO CALLER'S SAVE AREA           Y02082
*        MOVE REGS 2-8 IN CALLER'S SAVE AREA INTO SVRB           Y02082
*
*        CONTROL SHOULD NOW BE IN THE CALLER'S PROTECT KEY       Y02082
         LM    RDCB,R8,SAVREG2          GET SAVE AREA REGS 2-8   Y02082
         MVC   SAVREG0(SAVREG7-SAVREG0),RBGRS0    MOVE SVRB      Y02082
*                                       REGS 0-6 INTO SAVE AREA  Y02082
         MODESET EXTKEY=SUPR            SVRB KEY                 Y02082
         STM   RDCB,R8,RBGRS2           PUT SAVE AREA REGS 2-8   Y02082
*                                       INTO SVRB                Y02082
*
*               RETURN TO CHECK
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
         EJECT
EIN03000 EQU   *                        QSAM I/O ERROR ANALYSIS
*
         TM    DCBSYNAD+K3,K1           SYNAD PRESENT IN DCB
         LA    R7,K4                    PUT ENTRY CODE IN REG
         BO    EIN02000                 NO, BRANCH
*
         TM    DCBCIND2,DCBC2PUT        DID THE ERROR OCCUR WHILE
*                                       WE WERE CLOSING THE DATA SET
         LA    R7,MSG2                  GET ADDR OF MSG -ERR CLOSE DS-
         BCR   1,RBASE                  YES - BRANCH CANNOT GO TO
*                                         SYNAD FROM CLOSE NOW
*
         B     EIN02600                 BR TO CHK IF READ OR WRITE
         SPACE 2
EIN03005 EQU   *                        CALLER HOLDS TIOT EXC    YM3185
*
*   THE CALLER OF EOV HOLDS THE TIOT RESOURSE EXCLUSIVELY.     @ZA29752
*   THIS SHOULD NEVER VALIDLY HAPPEN AND CANNOT BE ALLOWED.    @ZA29752
*
         SR    RF,RF                    ZERO REG               @ZA29752
         SR    RC,RC                    ZERO REG               @ZA29752
         LA    RF,K16                   RETURN CODE            @ZA29752
         L     RC,ABND50D               ABEND CODE             @ZA29752
         ABEND (RC),DUMP                                       @ZA29752
         EJECT
*
EIN03010 EQU   *                        SWAP REGS              @ZA02545
*
***********************************************************************
*
*        PREPARE TO SWAP SVRB REGS WITH USER REGS IN SAVE AREA
*        R13 = USER SAVE AREA
*        R5 = SVRB WITH CALLERS REGS
*        IT IS NECESSARY TO SWAP REGS IF CALLER
*        IS AN ACCESS METHOD ROUTINE BECAUSE ACCESS
*        METHODS CALL EOV WITH ITS REGS INSTEAD OF
*        PROBLEM PROGRAM REGS WHICH HAVE BEEN SAVED
*        IN THE PROBLEM PROGRAM SAVE AREA:
*        USER SAVE AREA WORD 8 - WORD 16 = USER REGS 0 - 8
*        SVRB REG0 - 8 = ACCESS METHOD REG 0 - 8
*        NOTE1- THE SWAP IS NECESSARY FOR TAKING USER EXITS.
*        NOTE2- THE REGS ARE SWAPPED BACK BEFORE EOV EXIT.
*        NOTE3- UNLESS DCBMACRF = EXCP THE CALLER IS ASSUMED
*               TO BE AN ACCESS METHOD.
*
***********************************************************************
*
         L     RF,CVTPTR                LOAD CVT PTR           @ZA02545
         L     RF,CVTTCBP-CVT(,RF)      LOAD TCB PTRS          @ZA02545
         L     RF,K4(,RF)               LOAD CURRENT TCB       @ZA02545
         USING TCB,RF                   TCB ADDRESSABILITY     @ZA02545
         MODESET EXTKEY=RBT234,WORKREG=15 CALLER KEY           @ZA02545
         TM    DCBMACRF,DCBMEXCP        IF EXCP - NOSWAP       @ZA02545
         BO    EIN03020                 RETURN IF EXCP         @ZA02545
*
EIN03015 EQU   *                        SWAP REGS              @ZA02545
*
         L     RF,CVTPTR                LOAD CVT PTR           @ZA02545
         L     RF,CVTTCBP-CVT(,RF)      LOAD TCB PTRS          @ZA02545
         L     RF,K4(,RF)               LOAD CURRENT TCB       @ZA02545
         L     RET,TCBRBP               LOAD RB POINTER        @ZA02545
         USING RBBASIC,RET              RB ADDRESSABILITY      @ZA02545
         MODESET EXTKEY=ZERO            RB KEY                 @ZA02545
         STM   R0,R8,RBEXSAVE           SAVE REGS 0-8          @ZA02545
         MODESET EXTKEY=RBT234,WORKREG=15 CALLER KEY           @ZA02545
         LM    R0,R8,SAVREG0            LOAD USERS 0-8         @ZA02545
         MVC   SAVREG0(K9*K4),RBGRS0    SAVE CALLER REGS       @ZA02545
         MODESET EXTKEY=ZERO            RB KEY                 @ZA02545
         STM   R0,R8,RBGRS0             SAVE USERS REGS        @ZA02545
         LM    R0,R8,RBEXSAVE           LOAD EOV REGS          @ZA02545
         XC    RBEXSAVE(K9*K4),RBEXSAVE CLEAR SAVE AREA        @ZA02545
*
EIN03020 EQU   *                        SWAP REGS              @ZA02545
*
         L     RF,CVTPTR                LOAD CVT PTR           @ZA02545
         L     RF,CVTTCBP-CVT(,RF)      LOAD TCB PTRS          @ZA02545
         L     RF,K4(,RF)               LOAD CURRENT TCB       @ZA02545
         MODESET EXTKEY=RBT234,WORKREG=15 CALLER KEY           @ZA02545
         BR    R8                       RETURN                 @ZA02545
         DROP  RET                                             @ZA02545
         DROP  RF                                              @ZA02545
         EJECT
         DS    0F                                              @ZA29752
ABND50D  DC    XL4'0000050D'            ABEND 50D CODE         @ZA29752
         DS    0H
ABCOD    DC    X'1000'                  HWD OF 1000 FOR ABEND REQUEST
MSG1     DC    AL2(ENDMSG1-*)           MSG LINE FOR NO SYNAD EXIT
         DC    AL2(1)                   MSG
         DC    C'IEC020I NO ERROR HANDLING, ' MSG TEXT PART 1    A39511
         DC    C'(SYNAD), EXIT SPECIFIED' MSG TEXT PART 2        A39511
ENDMSG1  EQU   *                        END OF MSG1
         SPACE 2
         DS    0H
MSG2     DC    AL2(ENDMSG2-*)           MSG FOR ERROR CLOSING DATA SET
         DC    AL2(2)                   MSG
         DC    C'IEC020I ERROR OCCURRED ' MSG TEXT PART 1
         DC    C'WHILE CLOSING DATA SET' MSG TEXT PART 2
ENDMSG2  EQU   *                        END OF MSG 2
         SPACE 2
         DS    0H
MSG3     DC    AL2(ENDMSG3-*)           MSG TO GET ISSUED FROM EODAD
         DC    AL2(5)                   RETURN CODE              A39511
         DC    C'IEC020I GET '          MSG TEXT PART 1        @ZA02977
         DC    C'ISSUED AFTER END-OF-FILE' MSG TEXT PART 2       A39511
ENDMSG3  EQU   *                        END OF MSG3
         SPACE 2
IGG5E    DC    C'IFG055'                IST 6 CHARA OF EOV MOD NAME
DEBCKSS  DEBCHK AM=SUBSYS,MF=L          DEBAMTYP FOR SUBSYSTEM   Y02120
         EJECT
XCTLTA5E XCTLTABL ID=(MOD0Z5E,1F,MOD2E5E,1D,MOD2F5E,1B,          X02989X
               EOV,IGC0005E,                                     Y02080X
               MODPD5E,0P),SVC=055,BRT=YES,LENGTH=               Y02080
         EJECT
         IECEQU AOS=YES,IEZDEB=YES                               YM2869
         IECDSECS DCB,ACB,UCB,MAIN,CVT,TCB,WTG,TIOT,PREFX,       YM2869*
               RB,RRPL,IEZDEB,EXPAND=YES                         YM2869
         IDAAMB                                                  X02989
         EJECT
SAVEAREA DSECT                                                   Y02082
*        THIS DSECT MAPS THE SAVE AREA OF THE CALLER OF THE      Y02082
*        ACCESS METHOD (BSAM/QSAM).                              Y02082
*        THE ACCESS METHOD  SAVES REGISTERS 14-8 IN              Y02082
*        THE CALLER'S SAVE AREA STARTING WITH THE SIXTH WORD     Y02082
*        OF THE SAVE AREA - OFFSET 20 (X'14').                   Y02082
*        THE ACCESS METHOD DOES NOT ALTER REGS 9-13. HENCE,      Y02082
*        THESE REGISTERS ARE IN THE CURRENT SVRB.                Y02082
         DS    F                                                 Y02082
         DS    F                                                 Y02082
SAVREG11 DS    F                                                 Y02082
SAVREG12 DS    F                                                 Y02082
SAVREG13 DS    F                                                 Y02082
SAVREG14 DS    F                                                 Y02082
SAVREG15 DS    F                                                 Y02082
SAVREG0  DS    F                                                 Y02082
SAVREG1  DS    F                                                 Y02082
SAVREG2  DS    F                                                 Y02082
SAVREG3  DS    F                                                 Y02082
SAVREG4  DS    F                                                 Y02082
SAVREG5  DS    F                                                 Y02082
SAVREG6  DS    F                                                 Y02082
SAVREG7  DS    F                                                 Y02082
SAVREG8  DS    F                                                 Y02082
SAVREG9  DS    F                                                 Y02082
SAVREG10 DS    F                                                 Y02082
         END   ,                                                 Y02082
