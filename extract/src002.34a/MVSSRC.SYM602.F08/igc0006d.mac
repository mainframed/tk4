         TITLE 'IGC0006D/READ JFCB'
IGC0006D CSECT
*
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000313400,314100                                               YM3142
*0000                                                            YM3085
*0000                                                            YM1496
*0000                                                            YM1345
*0000                                                            YM4406
*0000379000                                                      YM5960
*          VS2 RELEASE 03 DELETIONS/CHANGES
*0000                                                          @ZA02219
*35530000                                                      @ZA16013
***********************************************************************
*                                                                     *
* MODULE NAME = IGC0006D (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = READ JFCB                                        *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION = THIS MODULE FIRST OBTAINS CORE FOR THE WTG TABLE AND     *
*            FOR THE RDJFCB WORK AREA.  IT THEN ASSUMES THE USER KEY. *
*            IF THE DCB IS NOT OPEN, IT SEARCHES THE DSAB CHAIN FOR   *
*            A TIOT ENTRY CONTAINING THE DCB DDNAME.  FOR AN OPEN     *
*            DCB, IT USES THE TIOT OFFSET IN THE DCB TO CALCULATE     *
*            THE TIOT ADDRESS.                                        *
*            AFTER VALIDITY CHECKING THE JFCB AREA ADDRESS (IF        *
*            RDJFCB WAS NOT CALLED BY A SYSTEM FUNCTION), IT          *
*            MOVES THE JFCB TO THE PROBLEM PROGRAM JFCB AREA.         *
*            IT THEN FREES THE WORK AREAS AND RETURNS.                *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO THE DCB.                                    *
*            R3 IS THE BASE REGISTER.                                 *
*            R4 POINTS TO THE RDJFCB WORK AREA.                       *
*            R5 POINTS TO THE RESIDENT ROUTINE.                       *
*            R6 POINTS TO THE WTG TABLE.                              *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY.           *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT.                   *
*                                                                     *
*    PATCH LABEL = IHB0023D (THIRD LABEL BEFORE ORG STATEMENT AT END  *
*                  OF LISTING).                                       *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE ,READ-ONLY, ENABLED,         *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT AND   *
*                 USER KEY, LINK PACK AREA RESIDENT/PAGEABLE.         *
*                                                                     *
* ENTRY POINT = IGC0006D FROM A RDJFCB MACRO OR AN SVC 64.            *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = THIS MODULE IS ENTERED VIA AN SVC 64.                  *
*                                                                     *
* INPUT = REGISTER 1 POINTS TO THE PARAMETER LIST.                    *
*                                                                     *
* OUTPUT = THE JFCB IS MOVED TO THE PROBLEM PROGRAM AREA.             *
*                                                                     *
* EXIT-NORMAL = RETURN TO THE CALLER.                                 *
*                                                                     *
* EXIT-ERROR = ABEND WITH A 140 OR 240 CODE.                          *
*              POSSIBLE INTERNAL CODES ARE:                           *
*              CODE    MEANING                                        *
*               79     NO FOUNDATION EXTENSION PRESENT IN AN EXCP DCB *
*               80     NO EXIT LIST                                   *
*               81     NO EXIT LIST ENTRY                             *
*               82     INVALID JFCB AREA ADDRESS                      *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = SETLOCK                                               *
*               WTO                                                   *
*               IECRES                                                *
*                                                                     *
*    DATA AREAS = PROBLEM PROGRAM JFCB AREA                           *
*                                                                     *
*    CONTROL BLOCKS = CVT                                             *
*                     DCB                                             *
*                     DSAB                                            *
*                     JSCB                                            *
*                     QDB                                             *
*                     PSA                                             *
*                     RB                                              *
*                     TCB                                             *
*                     TIOT                                            *
*                                                                     *
* TABLES = WTG TABLE, RDJFCB WORK AREA                                *
*                                                                     *
* MACROS = DMABCOND                                                   *
*          IECDSECS                                                   *
*          IECRES                                                     *
*          MODESET                                                    *
*          XCTLTABL                                                   *
*                                                                     *
* CHANGE ACTIVITY = SEE CHANGES/DELETIONS AFTER CSECT STATEMENT       *
*                                                                     *
***********************************************************************
         EJECT
*
         IECEQU AOS=YES                                          Y02080
OABD079  EQU   79
OABD080  EQU   80
OABD081  EQU   81
OABD082  EQU   82
MCSFLAG  EQU   X'80'                    WTP FLAGS FOR MSG        Y02080
         EJECT                                                   Y02080
         USING TIOENTRY,RTIOT
         USING IHADCB,RDCB
         BALR  RBASE,0
         USING *,RBASE
*                                                                Y02080
*   GETMAIN THE WHERE-TO-GO TABLE                                Y02080
*                                                                Y02080
         USING RBBASIC,RA               RB ADDRESSABILITY        YM1496
         LR    RA,R5                    GET SVRB ADDRESS         YM1496X
                                        (INITIALIZED BY SLIH)    YM1496
         IECRES GET,PREFIX=WTG,A=(R1),  GETMAIN FOR WTG TABLE    Y02080*
               STM=(2,12,RBEXSAVE)                               Y02080
*                                                                Y02080
*  ON RETURN FROM GET, THE PARAMETER LIST HAD BEEN MOVED INTO    Y02080
*  THE WORK AREA. HENCE PROTECTED ADDRESS MUST BE GOTTEN.        Y02080
*                                                                Y02080
*  FURTHERMORE, THE ENQ ON THE TIOT HAS BEEN DONE IN THE GET     Y02080
*  ROUTINE FOR WTG.                                              Y02080
*                                                                Y02080
         LR    RWTG,R1                  ADDR WTG TABLE FROM GET  Y02080
         USING WTG,RWTG                 WTG TABLE ADDRESSABILITY Y02080
         L     R8,WTGPREFX              ADDR BASE PREFIX         Y02080
         USING IECPREFX,R8              BASE PREFIX ADDR         Y02080
         L     RB,IECRRPRM              GET RRPLIST ADDRESS      Y02144
         MVI   RRFUNCTN-RRPLIST(RB),RRFRJFCB  INDICATE RDJFCB    Y02144X
                                        FUNCTION FOR RECOVERY    Y02144
*
         IECRES LOAD,BRANCH=NO,MODNM=RDJFCB,PREFIX=WTGPREFX      YM5960X
                                        LET OPTIONAL TRACE PRINT YM5960X
                                        THIS MODULE'S NAME       YM5960
*
         L     RPAR,IECUPRML            ADDR PROT PARAM LIST     Y02080
         LR    RPARC,RPAR               GET ADDR. OF PARAM ENTRY Y02080
         SR    RC,RC                    USE REG 12 TO COUNT NUM  Y02080
*                                       DCBS IN PARALIST
         SR    RD,RD                    ZERO RETURN CODE REG     Y02080
         IECRES GET,PREFIX=YES,LV=OPENSIZE,STM=(2,14,WTGPREFX),  Y02080*
               ID=RJWA                  WORK AREA FOR MSG/KEY/.. Y02080
         LR    RCORE,R1                 SET ADDR WORK AREA       Y02080
         USING FORCORE,RCORE            WORK AREA ADDRESSABILITY Y02080
         ST    RCORE,WTGENTRY+K4        SAVE WORK AREA ADDRESS   Y02080
         ST    RB,DXATCOM3              SAVE RRPLIST PTR IN W/A  Y02144
         L     RA,RBLINK                GET CALLER'S RB          Y02080
         MVC   DXUKEY,RBOPSW+K1         MOVE KEY,AMWP TO WORKAR  Y02080
         NI    DXUKEY,KEYMASK           ZERO AMWP FIELD          YM1496
         DROP  RA                                                Y02080
         MODESET KEYADDR=DXUKEY,WORKREG=2  ASSUME USER KEY       Y02080
*                                                                Y02080
*  THIS SECTION PROCESSES EACH DCB IN THE PARAMETER LIST.        YM1496
*                                                                Y02080
OP1010   EQU   *                                               @ZA16096
         LA    RC,K1(RC)                BUMP DCB COUNT           Y02080
         L     RDCB,PLISTDCB(,RPARC)    DCB ADDR.                Y02080
         TM    DCBOFLGS,DCBOLOCK        CHECK LOCK BIT           YM1496
         BO    OP1040                   BRANCH IF ON             Y02080
         LA    RD,K4                    SET RETURN CODE OF 4   @ZA02219
OP1020   EQU   *                        GET DCB
         TM    PLISTOPT(RPARC),LASTNTRY  CHECK FOR LAST ENTRY    Y02080
         BO    OP1110                   BRANCH IF YES            Y02080
         LA    RPARC,K4(,RPARC)         ADDR NEXT DCB ADDR       Y02080
         B     OP1010                   PROCESS NEXT DCB         Y02080
*
* THIS SECTION CALCULATES THE TIOT ADDRESS FOR AN OPENED DCB.
*
OP1040   EQU   *                        LOCK BIT ON
         L     RET,CVTADDR              GET POINTER TO CVT       Y02080
         L     RET,CVTTCBP-CVT(RET)     GET TCB WORDS            Y02080
         L     RET,K4(RET)              ADDR OF ACTIVE TCB       Y02080
         L     RTIOT,TCBTIO-TCB(,RET)   GET TIOT ADDRESS         Y02080
*
         TM    DCBOFLGS,DCBOPEN         CHECK FOR OPENED DCB     YM1496
         BNO   OP1045                   BRANCH IF NO             Y02080
         AH    RTIOT,DCBTIOT            PTR TO TIOT ENTRY
         B     OP1060                   CONTINUE                 Y02080
*
* IF THE DCB IS NOT OPEN, THIS SECTION SEARCHES FOR A TIOT ENTRY
* CONTAINING THE DCB DDNAME.
*
OP1045   EQU   *                        DCB NOT OPEN
         CLI   DCBDDNAM,BLANK           CHECK FOR BLANK DDNAME FIELD
         BE    OPJWTP                   IF IT IS, ISSUE WTP
         L     RF,TCBJSCB-TCB(,RET)     TCB'S JSCB               Y02134
         USING IEZJSCB,RF                                        Y02134
         L     RF,JSCBACT               ACTIVE JSCB FOR TASK     Y02134
         L     RF,JSCDSABQ              DSAB QDB                 Y02134
         USING QDB,RF                                            Y02134
         L     RF,QDBFELMP              FIRST DSAB               Y02134
OP1050   EQU   *                        DSAB PROCESSING
         LTR   RF,RF                    IS THERE A DSAB          Y02134
         BZ    OP1055                   BRANCH IF NOT - NO       Y02134X
                                        DD STATEMENT FOR DCB     Y02134
         USING DSAB,RF                                           Y02134
         L     RTIOT,DSABTIOT           GET TIOT ENTRY           Y02134
         CLC   DCBDDNAM,TIOEDDNM        LOOK FOR NAME IN TIOT    YM1496
         BE    OP1060                   BRANCH IF FOUND          Y02134
         L     RF,DSABFCHN              GET NEXT DSAB            Y02134
         B     OP1050                   TEST NEXT DSAB           Y02134
*
OP1055   EQU   *                        NO DSAB
         LA    RD,K4                    SET RETURN CODE OF 4     Y02080
         B     OP1020                   GET NEXT DCB
*
* THIS SECTION TEST THAT AN EXIT LIST ENTRY EXISTS.
*
OP1060   EQU   *                        NAME IN TIOT
         TM    DCBOFLGS,DCBOPEN         CHECK FOR OPENED DCB     YM1496
         BNO   OPJ99                    BRANCH IF NO             Y02080
         TM    DCBMACRF,DCBMEXCP        TEST FOR EXCP            YM1345
         BNO   OPJ100                   BRANCH IF NO             Y02080
         LA    R0,OABD079               LOAD INTERNAL CODE 79    Y02080
         TM    DCBMACRF,DCBMFOUN        TEST FOR FOUNDATION EXT  YM1345
         BNO   OPJERR                   BRANCH IF NO             Y02080
         B     OPJ100                   CONTINUE
OPJ99    EQU   *                        DCB NOT OPENED
         TM    DCBMACR,DCBMEXCP         IS IT EXCP METHOD        YM1496
         BNO   OPJ100                   BRANCH IF NO             Y02080
         LA    R0,OABD079               LOAD INTERNAL CODE 79    Y02080
         TM    DCBMACR,DCBMFOUN         TEST FOR FOUNDATION EXT  YM1496
         BNO   OPJERR                   BRANCH IF NO             Y02080
OPJ100   EQU   *                        CONTINUE PROCESSING
         LA    R0,OABD080               LOAD INTERNAL CODE 80    Y02080
         NC    DCBEXLSA,DCBEXLSA        CHECK IF EXLST PROVIDED  YM1496
         BZ    OPJERR                   NO, CALL PD
         TM    DCBEXLST+K3,X02+X01      CHECK FULLWORD BOUNDARY  Y02080
         BC    5,OPJERR                 BR IF INVALID ADDRESS    YM1496
         L     RF,DCBEXLST              ADDR OF EXIT LIST        Y02080
OPJ110   EQU   *                        EXIT LIST PROCESSING
         CLI   0(RF),XLRDJFCB           IS EXIT 7 ACTIVE         YM1496
         BE    OPJFOUND                 BRANCH IF YES            Y02080
         CLI   0(RF),LASTNTRY+XLRDJFCB  IS EXIT 7 ACTIVE         YM1496
         BE    OPJFOUND                 BRANCH IF YES            Y02080
         LA    R0,OABD081               LOAD INTERNAL CODE 81    Y02080
         TM    0(RF),LASTNTRY           LAST ENTRY IN LIST       YM1496
         BO    OPJERR                   ERROR NO EXIT LIST ENTRY Y02080
         LA    RF,K4(RF)                ADDR OF NEXT ENTRY       Y02080
         B     OPJ110                   GO TO EXIT PROCESS
*
         EJECT                                                   Y02080
OPJFOUND EQU   *                        EXIT 7 ACTIVE
         L     RA,K0(,RF)               ADDR USER JFCB AREA      Y02080
         LA    RA,0(,RA)                CLEAR HIGH ORDER BYTE    Y02080
         LA    RB,TIOEJFCB              JFCB PREFIX POINTER      Y02134
         IECRES LOCJFCB,(RB)            LOCATE JFCB              Y02134
         TM    JFCBMASK+K6-INFMJFCB(RB),JFCTRACE  TEST IF TRACE  Y02080C
                                        ROUTINE IS DESIRED       YM1496
         BZ    OPJFOUN1                 NO, CONTINUE             Y02080
         MODESET EXTKEY=DATAMGT         SWITCH TO DATAMGT KEY    YM4406
         OI    WTGPATHS+K1,WTGTRACE     YES, TURN ON TRACE INDR  Y02080
         MODESET KEYADDR=DXUKEY,WORKREG=15  RETURN TO USER KEY   YM4406
OPJFOUN1 EQU   *                        CONTINUE JFCB PROCESS    Y02080
         CLI   DXUKEY,X'80'             USER KEY 0 - 7           Y02080
         BL    OPJ220                   BRANCH IF SYSTEM KEY     Y02080
*                                                                Y02080
*  PERFORM VALIDITY CHECK IF NOT SYSTEM CALLER                   Y02080
*                                                                Y02080
         MODESET EXTKEY=ZERO            KEY FOR SETLOCK,VAL CHK  Y02080
         STM   R1,RF,IECREGSV           SAVE REGISTERS           Y02080
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02080*
               RELATED=(LOCAL,IGC0006D(OPJ180,OPJERR0))          Y02080
         LM    R1,RF,IECREGSV           RESTORE REGISTERS        Y02080
         LR    R1,RA                    START USER JFCB AREA     Y02080
         LA    R2,L'DXJBF-K1(,RA)       END USER JFCB AREA       Y02080
         XR    R4,R4                    INDIC USE CURRENT TCB    Y02080
         L     RF,CVTADDR               LOAD CVT ADDRESS         Y02080
         L     RF,CVT0VL00-CVT(,RF)     ADDR VAL CHK ROUTINE     Y02080
         BALR  RET,RF                   VALIDITY CHK USER JFCB   Y02080
         LM    R1,RF,IECREGSV           RESTORE REGISTERS        Y02080
         LA    R0,OABD082               INVALID ADDR ABEND CODE  Y02080
         BNZ   OPJERR0                  BRANCH IF NOT VALID      Y02080
*                                                                Y02080
         MVC   K0(L'DXJBF,RA),K0(RB)    MOVE IN SYSTEM JFCB      Y02080
         SETLOCK RELEASE,TYPE=LOCAL,                             Y02080*
               RELATED=(LOCAL,IGC0006D(OPJ150))                  Y02080
         LM    R1,RF,IECREGSV           RESTORE REGISTERS        Y02080
         MODESET KEYADDR=DXUKEY,WORKREG=15  RETURN TO USER KEY   Y02080
         B     OP1020                   PROCESS NEXT DCB         Y02080
*                                                                Y02080
*  FOR SYSTEM KEY CALLERS, PERFORM JFCB MOVE IN THEIR KEY.       Y02080
*  IF THE ADDRESS IS NOT VALID, AN ADDRESSING/PROTECTION/PAGING  Y02080
*  EXCEPTION WILL OCCUR.                                         Y02080
*                                                                Y02080
OPJ220   EQU   *                        SYSTEM KEY               Y02080
         MVC   K0(L'DXJBF,RA),K0(RB)    MOVE JFCB TO USER AREA   Y02080
         B     OP1020                   PROCESS NEXT DCB         Y02080
*                                                                Y02080
*  ALL DCBS HAVE BEEN PROCESSED.  FREE THE WORK AREAS AND        Y02080
*  EXIT TO THE USER.                                             Y02080
*                                                                Y02080
OP1110   EQU   *                        LAST ENTRY
         LR    RF,RD                    SAVE RETURN CODE         Y02080
         MODESET EXTKEY=DATAMGT         KEY OF WORK AREAS        Y02080
         IECRES FREE,PREFIX=WTG,A=(RWTG)  FREE ALL WORK AREAS    Y02080*
                                        AND DEQ THE TIOT         Y02080
         IECRES EXIT                    RETURN                   Y02080
         EJECT                                                   Y02080
*                                                                Y02080
*  ERROR HANDLING                                                Y02080
*                                                                Y02080
OPJERR0  EQU   *                        INVALID ADDRESS          YM3861
         SETLOCK RELEASE,TYPE=LOCAL,                             Y02080*
               RELATED=(LOCAL,IGC0006D(OPJ150))                  Y02080
         LM    R1,RF,IECREGSV           RESTORE REGISTERS        Y02080
OPJERR   EQU   *                        GO TO PROBLEM DETERMINATION
         TM    DCBOFLGS,DCBOPEN         CHECK FOR AN OPENED DCB  YM3085
         BNO   OPJERR10                 BRANCH IF NOT            YM3085
         MODESET EXTKEY=DATAMGT         O/C/E KEY FOR P.D.       Y02080
         IECRES INIT,DEB=YES,DCBCOPY=TOWKAR,STM=(3,0,WTGPREFX)   YM3142X
                                        COPY AN OPENED DCB FOR   YM3085X
                                        PROBLEM DETERMINATION    YM3085
         B     OPJERR20                 GO BRANCH TO P.D.        YM3085
*                                                                YM3085
OPJERR10 EQU   *                        COPY AN UNOPENED DCB     YM3085
         MODESET EXTKEY=DATAMGT         SWITCH TO O/C/E KEY      YM3085
         IECRES INIT,DEB=NO,DCBCOPY=TOWKAR,STM=(3,0,WTGPREFX)    YM3142X
                                        COPY AN UNOPENED DCB FOR YM3085X
                                        PROBLEM DETERMINATION    YM3085
*                                                                YM3085
OPJERR20 EQU   *                        GO TO PROB DETERMINATION YM3085
         LA    RWTGC,WTGENTRY           INIT CURRENT ENTRY PTR   Y02080
         MVC   WTGMODNM(K6),PDLOAD      MOVE IN PROB DET NAME    YM1345
         L     R5,CVTADDR               CVT ADDRESS              Y02080
         L     R5,CVTDMSR-CVT(,R5)      ADDR RESIDENT ROUTINE    Y02080
         DMABCOND (0),PDLOAD+K6         ABEND 140 OR 240         Y02080
*                                                                Y02080
*  MESSAGE TO PROGRAMMER FOR BLANK DDNAME IN THE DCB             Y02080
*                                                                Y02080
OPJWTP   EQU   *                        BUILD WTP MESSAGE        YM1496
         USING TIOT,RTIOT               START OF TIOT            Y02080
         MODESET EXTKEY=DATAMGT         RDJFCB WORK AREA KEY     Y02080
         LR    RET,RCORE                ADDR MSG AREA            Y02080
         XC    K0(K76,RET),K0(RET)      CLEAR MSG AREA           Y02080
         LA    RET,K4(RET)              BUMP PTR TO ACCOUNT FOR  Y02080
*                                       LENGTH AND MCS FLAGS
         MVC   K0(L'MSGID,RET),MSGID    MOVE ID OF MSG TO BUFFER
         LA    RET,L'MSGID(RET)         BUMP PTR TO BUFFER
         STC   RC,K8(RET)               STORE DCB COUNT IN BUFFER
         MVO   K6(K2,RET),K8(K1,RET)    SHIFT IN ORDER TO UNPACK
*                                       AND CONVERT TO EBCDIC
         UNPK  K0(K2,RET),K6(K2,RET)    UNPACK DCB COUNT
         OI    K1(RET),CHAR0            CONVERT SIGN
         TR    K0(K2,RET),EBCTBL        TRANSLATE TO EBCDIC
         MVI   K2(RET),COMMA            MOVE COMMA TO MSG
         LA    RET,K3(RET)              BUMP BUFFER PTR
         MVC   K0(K8,RET),TIOCNJOB      MOVE JOBNAME TO BUFFER   Y02080
         LA    RET,K7(RET)              BUMP PTR
         BAL   RA,OPJCLR                CLEAR TRAILING BLANKS
         MVC   K0(K8,RET),TIOCSTEP      MOVE STEPNAME TO BUFFER  Y02080
         LA    RET,K7(RET)              BUMP PTR
         BAL   RA,OPJCLR                CLEAR TRAILING BLANKS
         MVC   K0(L'BLANKDDN+K4,RET),BLANKDDN
*                                       MOVE MSG TO BUFFER
         LA    RET,L'BLANKDDN(RET)      POINT TO END OF MSG
         SR    RET,RCORE                CALCULATE MSG LENGTH     Y02080
         STH   RET,K0(RCORE)            STORE IN MSG             Y02080
         OI    K2(RCORE),MCSFLAG        SET MCS FLAGS            Y02080
         LR    RET,RCORE                SAVE BUFFER PTR          Y02080
         LR    R1,RCORE                 SET ADDR WTO             Y02080
         WTO   MF=(E,(1))               ISSUE WRITE-TO-PROG
         LA    RD,K4                    SET RETURN CODE
         MODESET KEYADDR=DXUKEY,WORKREG=2  ASSUME USER KEY     @ZA16096
         B     OP1020                   GET NEXT ENTRY IN PARAMLIST
*                                       THIS ROUTINE WILL MOVE
*                                       TRAILING BLANKS FROM VARIABLE
*                                       LENGTH FIELDS IN THE MESSAGE
*                                       SUCH AS JOBNAME AND STEPNAME
OPJCLR   EQU   *                        CLEAR TRAILING BLANKS    YM1496
         CLI   K0(RET),BLANK            BLANK CHARACTER
         BNE   OPJCLR2                  NO, MOVE COMMA AND RETURN
         BCT   RET,OPJCLR               POINT TO PRECEDING CHARACTER
*                                       AND CHECK IT
OPJCLR2  EQU   *                        MOVE COMMA
         MVI   K1(RET),COMMA            MOVE COMMA TO BUFFER
         LA    RET,K2(RET)              UPDATE BUFFER PTR
         BR    RA                       RETURN
*
EBCTBL   EQU   *-240                    START OF CONVERT TABLE
         DC    C'0123456789ABCDEF'      TABLE TO CONVERT UNPACKED DATA
*                                       TO EBCDIC
MSGID    DC    C'IEC131I '              ID OF WTP MSG
BLANKDDN DC    C'RDJFCB ISSUED FOR DCB WITH A BLANK DDNAME'
*                                       WRITE-TO-PROG MSG
         DC    X'04000020'              MCSFLAGS
*
         XCTLTABL ID=(RDJFCB,IGC0006D,PDLOAD,IGG0196M),          YM5960X
               SVC=064,BRT=YES,LENGTH=                           YM5960
         IECDSECS MAIN,DCB,CVT,TCB,TIOT,WTG,RB,PREFX,PSA,        Y02134*
               JSCB,QDB,DSAB,RRPL,EXPAND=YES                     Y02144
         END
