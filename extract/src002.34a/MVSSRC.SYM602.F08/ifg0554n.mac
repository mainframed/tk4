         TITLE 'IFG0554N                      EOV DIRECT ACCESS OUTPUT -
               - FEOV PROCESSING'                                Y02134
IFG0554N CSECT
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0554N (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME =                                                  *
*        EOV DIRECT ACCESS OUTPUT - FEOV PROCESSING                   *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE IS ENTERED FROM IFG0551H IF FEOV HAS BEEN        *
*        ISSUED FOR A DIRECT ACCESS DATA SET FOR WHICH THE LAST       *
*        OPERATION WAS AN OUTPUT OPERATION (THE TRAILER SWITCH OR     *
*        'WRITE BIT', BIT ZERO IN DCBOFLGS, WAS SET TO ONE).          *
*        THIS MODULE WRITES A FILE MARK AFTER THE DATA USING THE      *
*        DCBFDAD FIELD TO DETERMINE THE LAST DATA RECORD WRITTEN.     *
*                                                                     *
*        THE FILE MARK IS WRITTEN ON THE TRACK CONTAINING THE LAST    *
*        DATA RECORD IF THE RECORD FORMAT IS FIXED STANDARD AND IF    *
*        A RECORD OF LENGTH DEBBLKSI WILL FIT ON THE TRACK.           *
*                                                                     *
*        A FILE MARK IS WRITTEN AS RECORD ONE ON THE NEXT TRACK AFTER *
*        THE LAST TRACK CONTAINING DATA WHETHER OR NOT THE RECORD     *
*        FORMAT IS FIXED STANDARD. THIS MAY REQUIRE GOING TO A NEW    *
*        EXTENT, BUT THE DATA SET WILL NOT BE EXTENDED ON THIS VOLUME *
*        IN ORDER TO WRITE A FILE MARK. NO FILE MARK WILL BE WRITTEN  *
*        ON THE NEXT TRACK IF NO SUCH TRACK EXISTS.                   *
*                                                                     *
*        THE FORMAT 1 DSCB IS READ, AND THE THE DS1LSTAR AND DS1TRBAL *
*        FIELDS ARE FILLED IN FROM DCBFDAD AND DCBTRBAL, INDICATING   *
*        THE LAST DATA RECORD AND THE TRACK BALANCE ON THE LAST TRACK *
*        OF THIS VOLUME, NOT INCLUDING THE FILE MARK JUST WRITTEN.    *
*        THE LAST VOLUME BIT (BIT 0 OF DSCDSIND) IS TURNED OFF. THE   *
*        FORMAT 1 DSCB IS THEN REWRITTEN.                             *
         EJECT
*        IF NEITHER USER LABEL PROCESSING NOR SMF PROCESSING IS       *
*        REQUIRED, MODULE IFG0554P IS GIVEN CONTROL NEXT WITH         *
*        REGISTER 14 SET TO 4.                                        *
*                                                                     *
*        IF USER LABEL PROCESSING IS REQUIRED BUT NOT SMF PROCESSING  *
*        MODULE IFG0554Z IS NEXT GIVEN CONTROL WITH REGISTER 14 SET   *
*        TO ZERO.                                                     *
*                                                                     *
*        IF SMF PROCESSING AND NOT USER LABEL PROCESSING IS REQUIRED  *
*        MODULE IFG0553B (ALIAS FOR IFG0202H) IS GIVEN CONTROL WITH   *
*        DXRETMOD IN THE EOV WORKAREA SET TO THE ID-VCON OF IFG0554P  *
*        AS THE MODULE NEXT TO BE GIVEN CONTROL WHEN SMF PROCESSING   *
*        IS COMPLETED, AND REGISTER 14 SET TO 4, WHICH WILL BE        *
*        PASSED TO IFG0554P WHEN IT IS GIVEN CONTROL.                 *
*                                                                     *
*        IF BOTH SMF AND USER LABEL PROCESSING IS REQUIRED, MODULE    *
*        IFG0553B IS GIVEN CONTROL WITH DXRETMOD SET TO THE ID-VCON   *
*        OF IFG0554Z WITH REGISTER 14 SET TO ZERO.                    *
*                                                                     *
* NOTES =                                                             *
*        SEE BELOW.                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
         EJECT
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0554N                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        THE DEBDCBAD POINTING TO THE COPIED DCB,                     *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
*        IFG0553B -                                                   *
*        DXRETMOD SET TO ID-VCON OF IFG0554Z OR IFG0554P.             *
*        REGISTER 14 SET TO ZERO (DXRETMOD FOR IFG0554Z),             *
*        OR TO 4 (DXRETMOD FOR IFG0554P).                             *
*                                                                     *
*        IFG0554P -                                                   *
*        REGISTER 14 SET TO 4.                                        *
*                                                                     *
*        IFG0554Z -                                                   *
*        DXRETMOD SET TO ID-VCON IF IFG0554P.                         *
*        REGISTER 14 SET TO 0.                                        *
         EJECT
* EXIT-NORMAL =                                                       *
*        IFG0554Z TO PROCESS USER TRAILER LABELS.                     *
*        IFG0554P TO CONTINUE EOV PROCESSING.                         *
*        IFG0554B FOR SMF PROCESSING.                                 *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P GIVEN CONTROL THROUGH DMABCOND MACRO WITH AN        *
*        INTERNAL ABEND CODE IN REGISTER 0 -                          *
*        232 - 737-2C ABEND IF DCBFDAD DOESN'T CORRESPOND TO THE DEB. *
*        187 - 737-10 - I/O ERROR WRITING FILE MARK.                  *
*        190 - 737-4 - I/O ERROR READING OR WRITING DSCB.             *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*        IECPRLTV - MBBCCHHR TO TTR CONVERT ROUTINE                   *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        DCB                                                          *
*        TCB                                                          *
*        CVT                                                          *
*        UCB                                                          *
*        VDSCB                                                        *
*        DEB                                                          *
*                                                                     *
* TABLES =                                                            *
*        DEVICE CHARACTERISTICS TABLE                                 *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES-LOAD                                                  *
*        EXCP                                                         *
*        WAIT                                                         *
*        DMABCOND                                                     *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
*        INTERNAL ABEND CODES
EABD187  EQU   187                      READ DSCB I/O ERROR 737-10
EABD190  EQU   190                      WRITE DSCB I/O ERROR 737-4
EABD737  EQU   232                      BAD DCBFDAD INTERNAL     Y02082
*                                       ABEND CODE 737-2C        Y02082
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING TIOENTRY,RTIOT
         USING UCB,RUCB
         USING DEB,RDEB
         USING DCBRELAD,RDCB
         USING CVT,RF
         USING EDO00200,RBASE
EDO00200 EQU   *                        ENTRY
*
*                       WRITE FILE MARK
*
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,DCBFDAD               PICK UP M (CURRENT EXTENT NO.)
         CLM   R7,B'0001',DEBNMEXT      ARE THERE M EXTENTS      Y02082
*                                       IN THE DEB               Y02082
         LA    R0,EABD737               737 INTERNAL ABCODE      Y02082
         BNL   EDO02450                 BRANCH IF NO-737 ABEND   Y02082
         SLL   R7,4                     MPY BY 16 TO POINT TO EXTENT
         AR    RDEB,R7                  POINTING TO PROPER EXTENT (DEB)
         MVC   DXDEBBIN(K12),DEBBINUM   PLACE USERS EXTENT IN WORK AREA
         MVC   DXCCW4+K1(K8),DCBFDAD    MOVE MBBCCHHR TO WORK AREA
         MVI   DXDEBUCB,DCBRECUN        SET MODIFIER BYTE ALLOW WRITES
         MVC   DXDEBUCB+K1(K3),DXUCBADR+K1 UCB ADDRESS TO DEB    Y02134
         L     R1,DCBDVTBL              ADDRESS OF DEVICE TABLE
         LH    RF,K4(R1)                PICK UP NR OF BYTES PER TRACK
         CH    RF,DCBTRBAL              IS FULL TRCK AVAILABLE FOR FM
         BE    EDO01100                 BR IF FULL TRCK AVAILABLE
         TM    DCBRECFM,DCBRECFX+DCBRECST  IS THE USER WRITING FIXED
*                                       STANDARD RECORDS
         BNO   EDO00500                 NO,DO NOT WRITE F.M. ON THIS
*                                       TRACK
         EJECT
*
*        IF FIXED STANDARD, WRITE FILE MARK ON SAME TRACK AS     Y02082
*        LAST RECORD IF BLOCK WILL FIT THERE                     Y02082
*
         IC    R8,K7(R1)                LAST RECORD ID OVERHEAD SA57120
         LR    RF,R8                    SAVE VALUE
         IC    R8,DCBKEYCN              KEY OVERHEAD
         SR    RF,R8                    HIGH ORDER 3 BYTES OF
*                                       RF ARE ZEROED OUT
         LR    RD,RDEB                  SAVE DEB REGISTER
         L     RDEB,DCBDEBAD            PICK UP DEB ADDRESS
         SR    RC,RC                    CLEAR REGISTER
         IC    RC,DEBNMEXT              PICK UP NUMBER OF
*                                       EXTENTS
         SLL   RC,K4                    MULTIPLY BY 16
         AR    RC,RDEB                  ADD DEB ADDRESS
         TM    DCBMACRF,DCBMEXCP        IS IT EXCP
         BNO   EDO00300                 BRANCH IF NO
         LA    RF,K8                    GET LENGTH NEEDED FOR FM
         B     EDO00400                 YES BRANCH
EDO00300 EQU   *                        ADD DEBBLKSI VALUE
         AH    RF,K44(RC)               ADD KEYLENGTH+BLOCKSIZE
EDO00400 EQU   *                        SEE IF BLOCK FITS
         CH    RF,DCBTRBAL              WILL RECORD FIT ON THIS
*                                       TRACK
         LR    RDEB,RD                  RESTORE DEB REGISTER
         BP    EDO00500                 NO,DON'T WRITE THIS TRACK
         BAL   R8,EDO01300              YES,GO SET UP CHANNEL PROGRAM
         IC    RF,DXCCW4+K8             ADD 1 TO LAST RECORD NUMBER
         LA    RF,K1(,RF)               WRITTEN BY THE PROBLEM PROGRAM
         STC   RF,DXDSCB+K4             STORE UPDATED RECORD NUMBER
         BAL   R8,EDO01400              GO TO WRITE THE FILE MARK
         OI    DXATDACC,DXATEOF         EOF MARK WRITTEN         Y02144
*
*        WRITE FILE MARK ON NEXT TRACK
*
EDO00500 EQU   *                        CALCULATE NEXT TRACK
         SR    RF,RF                    CLEAR WORK REGISTER
         MVI   DXCCW4+K8,K0             SET R=0
         IC    RF,DXCCW4+K7             C(RJ)=000H
         LA    RF,K1(,RF)               C(RJ)=H+1
         STC   RF,DXCCW4+K7             C(CCW4+4)=CCH(H+1)
         L     R1,DCBDVTBL              ADDRESS OF DEVICE TABLE
         CLC   DXCCW4+K7(K1),K3(R1)     IS TRACK+1 VALID
         BNL   EDO00600                 BR IF TRACK NOT VALID
         L     R1,DCBDEBAD
         TM    K8(R1),DEBOFSPL          CHK FOR SPLIT CYLINDER
         BNO   EDO01100                 BR IF NO SPLIT CYLINDER
         EJECT
*
*        SPLIT CYLINDER EXTENT
*
         CLC   DXCCW4+K7(K1),DEBENDHH+K1  CHK FOR SPLIT CYL END TRACK
         BNH   EDO01100                 BR IF NOT END TRACK
*
*   IF TRACK NUMBER IS NOT VALID FOR THE DEVICE OR IS THE LAST OF A
*   SPLIT CYLINDER, STEP TO THE NEXT CYLINDER.
*
EDO00600 EQU   *                        CALCULATE NEXT CYLINDER
         LH    RF,DXCCW4+K4             C(RJ)=00CC
         LA    RF,K1(,RF)               C(RJ)=00C(C+1)
         SLL   RF,K16                   C(RJ)=C(C+1)00
EDO01000 EQU   *                        SET TRACK TO ZERO OR START OF
*                                       SPLIT CYLINDER.
         ST    RF,DXCCW4+K4             C(CCW4+4)=NEXT CYL, TRK ZERO
         L     RF,DCBDEBAD
         TM    K8(RF),DEBOFSPL          CHK FOR SPLIT CYLINDER
         BZ    EDO01100                 BR IF NOT SPLIT CYLINDER
         MVC   DXCCW4+K7(K1),DEBSTRHH+K1  SPLIT CYL, SET TRACK TO START
*
EDO01100 EQU   *                        IS ADDRESS IN EXTENT
         CLC   DXCCW4+K4(K4),DEBENDCC   IS CCHH IN THIS EXTENT
         BH    EDO01500                 NO,GO SEE IF ANOTHER EXTENT
EDO01200 EQU   *                        WRITE FILE MARK
         BAL   R8,EDO01300              YES,GO TO SET UP CHANNEL PROG
         MVI   DXDSCB+K4,K1             SET RCD NO. OF FILE MARK TO 1
         BAL   R8,EDO01400              GO TO WRITE THE FILE MARK
         OI    DXATDACC,DXATEOF         EOF MARK WRITTEN         Y02144
         B     EDO01600                 EXIT, FILE MARK WRITTEN
         SPACE 2
EDO01300 EQU   *                        BUILD CHANNEL PROGRAM SUBROUT'N
         LA    RF,DXCCW4+K4             PLACE ADDRESS OF CCHHR
         ST    RF,DXCCW1                INTO SEARCH CCW
         LA    RF,DXCCW1                ADDRESS OF CCW1
         MVI   DXCCW1,CCWSCHID          SET UP SEARCH OPERATION CODE
         ST    RF,DXCCW2                ADDRESS OF CCW1 INTO TIC CCW
         MVC   DXCCW1+K4(K5),WFMCCW1    COMMAND CHAIN,5 CHAR,TIC OPER
         LA    RF,DXDSCB                PLACE ADDRESS OF THE FILE MARK
         ST    RF,DXCCW3                INTO THE WRITE DATA CCW
         MVC   DXCCW2+K4(K5),WFMCCW2    COMMAND CHAIN,WR COMMAND OPER
         MVC   DXCCW3+K4(K4),WFMCCW3    8 CHARACTERS
         MVC   DXDSCB(K5),DXCCW4+K4     PLACE CCHHR INTO THE KEY
         XC    DXDSCB+K5(K3),DXDSCB+K5  ZERO OUT THE DATA PORTION
         BR    R8                       RETURN TO CALLER
         EJECT
EDO01400 EQU   *                        WRITE FILE MARK SUBROUTINE
         MVC   DXDAADDR,DXCCW4+K1       PLACE FULL DISK ADDRESS IN IOB
         MVI   DXDAADDR,K0              SET M (EXTENT NUMBER) TO ZERO
         EXCP  DXIOB                    EXECUTE CHANNEL PROGRAM
         WAIT  ,ECB=DXECB               WAIT FOR COMPLETION
         TM    DXECB,ECBCOD7F           TEST COMPLETION CODE
         BOR   R8                       RETURN TO CALLER
         LA    R0,EABD187               I/O ERROR WRITE FILE MARK
         B     EDO02450                 GO ISSUE 737 ABEND
         SPACE 2
EDO01500 EQU   *                        GET NEXT EXTENT SUBROUTINE
         L     RDEB,DCBDEBAD            RESTORE ADDRESS OF USER'S DEB
         SR    RF,RF                    CLEAR WORK REGISTER
         SR    R7,R7                    CLEAR WORK REGISTER
         IC    R7,DCBFDAD               PICK UP M (CURRENT EXTENT NO.)
         IC    RF,DEBNMEXT              PICK UP NUMBER OF EXTENTS
         LA    R7,K1(,R7)               UPDATE M BY ONE
         CR    R7,RF                    ARE THERE ANY MORE XTNTS
         BNL   EDO01600                 NO,FILE MARK NOT TO BE WRTN
         SLL   R7,K4                    MULTIPLY EXTENT NUMBER BY 16
         AR    RDEB,R7                  POINT TO CORRECT DEB EXTENT
         MVC   DXDEBBIN(K12),DEBBINUM   PUT BEGINNING CCHH IN WORK DEB
         MVC   DXCCW4+K2(K6),DXDEBBIN   STARTING BBCCHH TO SEARCH
         MVI   DXCCW4+K8,K0             SET RECORD NUMBER TO ZERO
         B     EDO01200                 WRITE FILE MARK IN NEW EXTENT
         EJECT
*
*        READ FORMAT 1 DSCB
*
EDO01600 EQU   *                        SEE IF VIO
         L     RDEB,DCBDEBAD            RESTORE ADDRESS OF USER'S DEB
         L     RUCB,DXUCBADR            PICK UP UCB POINTER      Y02134
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   EDO01700                 BR IF NOT                Y02132
*
*        READ VIO DSCB FROM SWA                                  Y02132
*
         MVC   DXDSCB(DSCEXT2-DSCFMTID),VDSDSCB-VDSUCB+L'JFCBDSNM(RUCB)
*                                                                Y02132
         OC    DXDSCB(DSCEXT2-DSCFMTID),DXDSCB IS DSCB = ZERO?   Y02132
         BZ    EDO02425                 BR IF YES,I/O ERROR      Y02132
*                                                                Y02132
         XC    DSCEXT2(DSCBEND-DSCEXT2),DSCEXT2 ZERO REMAIN CORE Y02132
*                                                                Y02132
         B     EDO01800                 CONTINUE PROCESSING      Y02132
EDO01700 EQU   *                        NOT VIO                  Y02132
*
*        READ REAL FORMAT 1 DSCB FROM VTOC
*
         MVC   DXDEBUCB+K1(K3),DXUCBADR+K1 UCB ADDRESS TO DEB    Y02134
         XC    DXDEBSCC(K4),DXDEBSCC    CLEAR START CCHH
         L     R1,K16                   GET CVT ADDR
         L     R1,K64(R1)               GET DEVICE TABLE
         SR    RF,RF                    CLEAR REG
         IC    RF,UCBTBYT4              GET DEVICE TYPE
         IC    RF,K0(RF,R1)             GET DEVICE INDEX
         LA    RF,K0(RF,R1)             GET DEVICE ENTRY
         MVC   DXDEBECC(K4),K0(RF)      GET MAX EXTENT
         MVI   DXDEBNTR,MAXTRK          INDICATE MAX TRACKS
         LR    R7,RDEB
         SH    R7,WFM016                POSITION AT (-16)
         MVC   DXDAADDR+K1(K7),DEB+K1-DEB(R7)  BBCCHHR OF DSCB
*                                       TO SEEK WRD
         MVI   DXDAADDR,K0              SET -M-TO ZERO
*
*        GENERATE CHANNEL PROGRAM TO READ DSCB FRMT 1
*
         XC    DXCCW1(K24),DXCCW1       ZERO CCWS 1 THRU 3
         LA    R1,DXDAADDR+K3           ADDR OF CCHHR
         ST    R1,DXCCW1                SRCH I.D.TO CCW 1
         LA    R1,DXCCW1                ADDR  OF SRCH CMD TO TIC
         ST    R1,DXCCW2                STORE IT
         LA    R1,DXDSCB                READ AREA ADDRESS
         ST    R1,DXCCW3                TO READ M/T CMD.
         OC    DXCCW1(K24),WFMCCWS      OR IN SKELETON CCWS-WKAREA.
         BAL   R7,EDO02400              BRANCH TO I/O ROUTINE
         EJECT
*
*        UPDATE THE DSCB AND REWRITE IT
*
*              MBBCCHHR TO TTR CONVERT ROUTINE (IECPRLTV) WILL BE USED
*
*              THE FOLLOWING IS THE REGISTER USAGE OF THAT ROUTINE
*
*                                  REG 0    RESULTANT TTR0
*                                  REG 1    DEB ADDRESS
*                                  REG 2    ADDR OF MBBCCHHR
*                                  REG 3-8  NOT USED
*                                  REG 9-13 VOLATILE-DESTROYED
*                                  REG 14   RETURN ADDRESS
*                                  REG 15   ENTRY POINT-BASE REGISTER
*
EDO01800 EQU   *                        GET TTR FROM DCBFDAD     Y02132
         L     R8,DXCCW7                SAVE MAIN UCB ADDR
         STM   RDCB,RD,DXCCW5           SAVE REGS
         LR    R1,RDEB                  ADDR OF USER'S DEB TO PARM REG
         LA    RDCB,DCBFDAD             ADDR OF MBBCCHHR TO PARM REG
         L     RF,CVTPTR                PICK UP ADDRESS OF CONVERT RTN
         L     RF,CVTPRLTV              FROM THE CVT
         BALR  RET,RF                   CONVERT MBBCCHHR TO TTR0
         LM    RDCB,RD,DXCCW5           RESTORE REGS
         ST    R8,DXCCW7                RESTORE ADDR FOR NEXT LOAD
         ST    R0,DXCCW5                STORE LAST BLK TTR
         MVC   DSCLSTAR+K3(K2),DCBTRBAL  NUM OF BYTES ON TRACK REMAININ
EDO01900 EQU   *                        TRBAL, LAST VOL BIT UPDATED
         MVC   DSCLSTAR(K3),DXCCW5      MOVE IN LAST BLK PTR
         NI    DSCDSIND,ALLBITS-LASTNTRY  TURN OFF LAST VOL IND.
         OI    DXATDACC,DXATTRAK        LAST TRK USED AND TRK    Y02144
*                                       BALANCE FIELDS UPDATED   Y02144
         EJECT
*
*        REWRITE DSCB
*
         TM    UCBJBNR,UCBVRDEV         TEST FOR VIO UCB         Y02132
         BNO   EDO01950                 BR IF NOT                Y02132
*                                                                Y02132
         MODESET EXTKEY=SCHED           ASSUME SCHEDULER KEY     Y02132
*                                                                Y02132
*        WRITE VIO FORMAT ONE DSCB TO SWA                        Y02132
*                                                                Y02132
         MVC   VDSDSCB-VDSUCB+L'JFCBDSNM(DSCEXT2-DSCFMTID,RUCB),DXDSCB
*                                                                Y02132
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02132
*                                                                Y02132
         B     EDO01975                 CONTINUE PROCESSING      Y02132
EDO01950 EQU   *                        BUILD CHANNEL PROGRAM
*
*        WRITE FORMAT 1 DSCB ONTO VTOC
*
         MVI   DXCCW3,CCWWRTDA          MOVE  WRITE OP CODE TO CCW
         MVI   DXCCW3+K4,CCWCMDCH       CHAIN COMMAND TO RDBACK CHECK
         MVC   DXCCW4(K24),DXCCW1       MOVE BASIC CCW'S RDBACK CHECK
         LA    R1,DXCCW4
         ST    R1,DXCCW5                ADDR FOR TIC
         MVI   DXCCW5,CCWTIC
         MVI   DXCCW6,CCWRDDA           READ COMMAND
         MVI   DXCCW6+K4,X10            SKIP FLAG ON- NO DATA
*                                       TRANSFER FOR RDBACK CHECK
         BAL   R7,EDO02400              BRANCH TO I/O ROUTINE
EDO01975 EQU   *                        SET AUDIT TRAIL          Y02132
         OI    DXATDACC,DXATUPDB        UPDATED DSCB WRITTEN     Y02144
*
*        WRITE COMPLETE HERE
*
         EJECT
EDO02000 EQU   *                        DETERMINE EXIT MODULE
*                                                                Y02134
         LA    RET,K4                   LOAD BRANCH CODE         Y02134
         LA    R7,ID4N4P                GET NEW VOLUME           Y02134
*                                                                Y02134
         TM    JFCBLTYP,JFCSL+JFCBUL    TEST FOR USER LABELS     Y02134
         BNO   EDO02100                 BRANCH, BYPASS USER LBLS Y02134
*                                                                Y02134
         LA    R7,ID4N4Z                USER LABEL PROCESS       Y02134
*                                                                Y02134
EDO02100 EQU   *                        CHECK FOR SMF            Y02134
*                                                                Y02134
         TM    DXXPATHS,WTGSMF          IS SMF REQUIRED          Y02134
         BNO   EDO02200                 BRANCH TO BYPASS SMF     Y02134
*                                                                Y02134
         MVC   DXRETMOD,DXXIDTTR-DXXIDTTR(R7) SAVE RETURN LOAD   Y02134
         LA    R7,ID4N3B                SMF PROCESSING           Y02134
*                                                                Y02134
EDO02200 EQU   *                        GIVE NEXT MODULE CONTROL Y02134
*                                                                Y02134
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         IECRES LOAD,MODID=(R7),BRCODE=(RET),BRANCH=QUEUED       Y02134
         EJECT
*
*        I/O ROUTINE -READS AND WRITES FRMT 1 DSCB
*
EDO02400 EQU   *                        EXCP, WAIT, TEST FOR I/O ERROR
         EXCP  DXIOB                    EXECUTE CHANNEL PROGRAM
         WAIT  ,ECB=DXECB               WAIT FOR COMPLETION
         TM    DXECB,ECBCOD7F           TEST COMPLETION CODE
         BOR   R7                       OK,RETURN
EDO02425 EQU   *                        GET INTERNAL ABCODE      Y02132
         LA    R0,EABD190               ABEND 737
EDO02450 EQU   *                        GIVE PROBLEM DETERMINATION
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         DMABCOND (0),ID4N0P                                     Y02134
         EJECT
*
*        CONSTANTS
*
WFM016   DC    H'16'                    HALF WORD 16
WFMCCWS  DC    X'3100000060000005'      SRCH EQUAL ID
         DC    X'0800000000000000'      TIC
         DC    X'8600000000000060'      READ DATA M/T
WFMCCW1  DC    X'4000000508'            LAST 5 CHAR FOR SRCH ID EQ
WFMCCW2  DC    X'400000001D'            USED FOR WRITE FILE MARK
WFMCCW3  DC    X'20000008'              USED FOR WRITE FILE MARK
         EJECT
*
*        XCTL  TABLE FOR IFG0554N
*
         XCTLTABL ID=(ID4N4P,4P,ID4N4Z,4Z,ID4N3B,3B,ID4N0P,0P),  Y02134X
               SVC=055,BRT=YES,LENGTH=                           Y02080
         IECDSECS CVT,TCB,TIOT,SMF,DCB,DEB,UCB,MAIN,USERLAB,     Y02080X
               WTG,PREFX,EXPAND=YES                              Y02080
         IECEQU
         IDDVDSCB                                                Y02132
         END
