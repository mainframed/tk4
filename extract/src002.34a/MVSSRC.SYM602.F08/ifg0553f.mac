         TITLE 'IFG0553F - NEW VOLUME HEADER LABEL VERIFICATION'
         COPY  LCGASMSW
IFG0553F CSECT
***********************************************************************
*                                                                     *
*          VS2 RELEASE 03 DELETIONS                                   *
*0000297556                                                     ZA00011
*                                                                     *
*          VS2-037 ADDITIONS, CHANGES, AND DELETIONS                  *
*0000A012993-013013,A019706-019726,A538000-538880              @ZA28943
*                                                                     *
*          VS2 RELEASE 04 DELETIONS                                   *
*0000022200                                                    @ZA03660
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0553F (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = NEW VOLUME HEADER LABEL VERIFICATION             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1) THIS FUNCTION POSITIONS DATA SETS ON AL, NL, AND SL TAPE  *
*        TO THE DESIRED DATA SET AS INDICATED BELOW. AT THIS POINT,   *
*        THE MOUNT/VERIFY ROUTINE HAS COMPLETED BUT THE TAPE MAY      *
*        NOT BE POSITIONED CORRECTLY.                                 *
*        1A) NL TAPES ARE POSITIONED TO EITHER THE INTERBLOCK GAP     *
*        PRECEDING THE FIRST DATA RECORD (READ FORWARD) OR TO THE     *
*        INTERBLOCK GAP FOLLOWING THE LAST DATA RECORD(RDBACK).       *
*        1B) AL AND SL TAPES ARE POSITIONED TO EITHER THE INTERBLOCK  *
*        GAP PRECEDING HEADER LABEL 1 (READ FORWARD) OR PRECEDING     *
*        TRAILER LABEL 1 (READBACK).                                  *
*        2) WHEN A CONCATENATED DATA SET IS TO BE PROCESSED, THE JFCB *
*        FILE SEQUENCE NUMBER (JFCBFLSQ) INDICATES THAT DATA SET'S    *
*        POSITION ON THE TAPE; THIS FIELD IS UTILIZED AS FOLLOWS:     *
*        3A) FOR NL TAPES OR DATA SETS ON AL OR SL TAPE WITH A JFCB   *
*        FILE SEQUENCE NO. OF 1, THE DESIRED POSITION (JFCBFLSQ) IS   *
*        COMPARED TO THE CURRENT TAPE POSITION (SRTEFSCT) AND THE     *
*        TAPE IS MOVED BACKWARD OR FORWARD AS REQUIRED. POSITION      *
*        WITHIN THE DATA SET IS AS SPECIFIED IN SECTION (1) ABOVE.    *
*        3B) FOR DATA SETS ON AL OR SL TAPE WITH A JFCB FILE SEQUENCE *
*        NUMBER GREATER THAN 1, HEADER LABEL 1 OF THE FIRST DATA      *
*        SET ON THE TAPE IS READ TO OBTAIN THE FILE SEQUENCE NO.      *
*        (IE. LOGICAL POSITION) ON THE TAPE OF THAT DATA SET. IF      *
*        THAT FILE SEQUENCE NO. IS '1', THEN THE TAPE IS POSITIONED   *
*        AS IN (3A) ABOVE. IF THAT FILE SEQUENCE NO. IS GREATER       *
*        THAN '1', THEN THE DIFFERENCE BETWEEN THIS FILE SEQUENCE     *
*        NO. AND THAT OF THE DESIRED DATA SET INDICATES THE PHY-      *
*        SICAL POSITION OF THE DESIRED DATA SET ON THE TAPE. POSI-    *
*        TIONING WITHIN THE DATA SET IS AS SPECIFIED IN SECTION(1).   *
*        4) CONTROL IS TRANSFERRED TO IFG0553H (BRANCH CODE=24) FOR   *
*        NL TAPES.                                                    *
*        5) FOR NSL, A DCB COPY IS PERFORMED FROM THE WORK AREA TO    *
*        THE CALLER'S CORE, AND CONTROL IS PASSED TO NSLEHDRI WITH    *
*        A BRANCH CODE OF 20.                                         *
*        6) READ FILE LABEL 1 AND VERIFY IT IS HDR1, EOV1, OR EOF1.   *
*        7) COMPARE THE LEAST SIGNIFICANT (IE. LAST) 17 CHARACTERS    *
*        OF THE DATA SET NAME IN THE JFCB TO THE DATA SET NAME IN     *
*        FILE LABEL 1. IF THE NAMES ARE NOT IDENTICAL AND THE DATA    *
*        SET IS A MEMBER OF A GENERATION DATA GROUP, THEN THE UN-     *
*        QUALIFIED DATA SET NAME, THE GENERATION NUMBER, AND THE      *
*        VERSION NUMBER ARE ALL VERIFIED SEPARATELY. AN ERROR EXIT    *
*        IS TAKEN WHEN THE VARIOUS COMPARANDS ARE NOT IDENTICAL;      *
*        8) IF THE DCB CONTAINS A TAPE-DEPENDENT SECTION, THE BLOCK   *
*        COUNT FROM THE LABEL IS CONVERTED TO BINARY AND PLACED       *
*        IN THE DCB.                                                  *
*        9) PERFORM CHECKPOINT DATA SET PROCESSING.                   *
*        10) PROCESS INPUT USER HEADER LABELS, IF REQUIRED-           *
*        10A) GET 2 USER LABEL WORK AREAS. A 152 BYTE AREA FROM FETCH *
*        PROTECTED SUBPOOL 229 IN DATA MANAGEMENT KEY FOR EOV, AND A  *
*        96 BYTE AREA FROM THE SAME SUBPOOL IN CALLER'S KEY FOR THE   *
*        CALLER.                                                      *
*        10B) A LABEL IS READ AND CONTROL IS PASSED TO THE USER VIA A *
*        IECRES-UEXIT MACRO. ADDITIONAL LABELS ARE READ IF THE USER   *
*        PASSES A RETURN CODE OF '4'; THIS CONTINUES UNTIL EITHER THE *
*        MAXIMUM NUMBER OF LABELS HAS BEEN READ OR UNTIL THE USER     *
*        INDICATES THAT PROCESSING IS TO TERMINATE. THE RETURN CODES  *
*        THAT THE USER PASSES IN REG 15 ARE AS FOLLOWS:               *
*        0 - CONTINUE READING USER LABELS;                            *
*        4 - DISCONTINUE PROCESSING USER LABELS;                      *
*        11) POSITION THE TAPE TO THE FIRST DATA RECORD; IE. AT THE   *
*        INTERBLOCK GAP PRECEDING THE FIRST DATA RECORD (READ FORWARD)*
*        OR AT THE INTERBLOCK GAP FOLLOWING THE LAST DATA RECORD      *
*        (READ BACKWARD).                                             *
*        12) TRANSFER CONTROL TO IFG0553H WITH A BRANCH CODE = 0.     *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0553F                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0553H - NORMAL EXIT, BRANCH CODE = 0                      *
*                   NL LOOK-AHEAD MOUNT, BRANCH CODE = 24             *
*        IFG0554J - ISSUE SECURE VOLUME MESSAGE, BRANCH CODE = 56     *
*           RETURN MODULE - IFG0553F, BRANCH CODE = 4                 *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P - PROBLEM DETERMINATION                             *
*             INTERNAL CODE = 162, ERROR POS CONCAT DATA SET          *
*             INTERNAL CODE = 163, ERROR POS NEW VOL FOR READ FORWARD *
*             INTERNAL CODE = 164, ERROR READING HEADER LABEL         *
*             INTERNAL CODE = 165, INCORRECT DATA SET NAME            *
*             INTERNAL CODE = 191, ERR POS TO FIRST DATA RECORD       *
*             INTERNAL CODE = 194, ERROR POS NEW VOL FOR RDBACK       *
*             INTERNAL CODE = 195, INVALID HEADER LABEL READ          *
*             INTERNAL CODE = 196, ERR POS AFTER USER LABEL PROCESSING*
*             INTERNAL CODE = 240, CHK PT DS ON NON SEC VOL           *
*             INTERNAL CODE = 241, NON CHK PT DS ON SECURE VOL        *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        DSAB                                                         *
*        JFCB                                                         *
*        PSA                                                          *
*        TCB                                                          *
*        UCB                                                          *
*        RB                                                           *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        IECRES LOAD                                                  *
*        IECRES GET                                                   *
*        IECRES INIT                                                  *
*        IECRES FREE                                                  *
*        IECRES WAIT                                                  *
*        IECRES UEXIT                                                 *
*        DMABCOND                                                     *
*        EXCP                                                         *
*        DEBCHK                                                       *
*        XLATE                                                        *
*        SETLOCK                                                      *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
*
*****          INTERNAL ERROR CODES
*
EABD162  EQU   162                      ERROR POS CONCATENATED DATA SET
EABD163  EQU   163                      ERROR POS NEW VOL FOR RD FWD
EABD194  EQU   194                      ERROR POS NEW VOL FOR RDBACK
*
EABD164  EQU   164                      ERROR READING HEADER LABEL
EABD165  EQU   165                      INCORRECT DATA SET NAME
EABD191  EQU   191                      ERROR POSITIONING TO
*                                       ..FIRST DATA RECORD
EABD195  EQU   195                      INVALID HEADER LABEL READ
EABD196  EQU   196                      ERR POSITIONING FOLLOWING USER
*                                       ..HEADER LABEL PROCESSING
EABD240  EQU   240                      CHK PT DS ON NON SEC VOL Y02083
EABD241  EQU   241                      NON CHK PT DS ON SEC VOL Y02083
EABD249  EQU   249                      937-20 ABEND CODE        YM5950
CHARC    EQU   C'C'                     CHARACTER C              Y02083
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING IHADCB,RDCB
         USING UCB,RUCB
*
         USING DEB,RDEB
         B     LABEL00(RET)             BR ON REG 14 CODE        Y02083
LABEL00  B     ETI18700                 NORMAL ENTRY             Y02083
         B     ETI24030                 RETURN FROM IFG0554J     Y02083
         B     ETI24016                 RETURN FROM SECURITY     YM5950
         B     ETI24011                 ASCII DISMOUNT RETURN    YM5950
*
*
*****    NOTE- 'RTIOT' AND 'RDEB' ARE NOW USED AS WORK REGISTERS
*
ETI18700 EQU   *                        CHECK FOR READBACK
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          YM3929
         STCM  RUCB,B'0111',DEBUCBAD+K1 PUT UNIT ADDR INTO DEB   YM3929
         LH    RD,SRTEFSCT              GET UCB FILE SEQ CT      YM4646
         LTR   RD,RD                    IS UCBFSCT EQ ZERO       YM4646
         BNZ   ETI18750                 BR IF NOT                YM4646
         MODESET EXTKEY=ZERO            ASSUME UCB KEY           YM4646
         MVI   SRTEFSCT+K1,K1           SET UCB FSCT TO ONE      YM4646
         MVI   SRTEFSEQ+K1,K1           SET LOGICAL CT TO 1      YM5950
         MODESET EXTKEY=DATAMGT         ASSUME DATA MGT KEY      YM4646
ETI18750 EQU   *                        UCB FSCT NOT ZERO        YM4646
         TM    DCBOFLGS,DCBORDBK        IS THE DCB OPENED FOR 'RDBACK'-
         BO    ETI20300                 ..BR IF YES TO POS FOR 'RDBACK'
         LA    RD,EABD163               LOAD INTERNAL ERROR CODE
         TM    DCBOFLGS,DCBOCON         IS CONCATENATION IN PROGRESS-
         BZ    ETI19900                 ..BRANCH IF NOT
*
***********************************************************************
*              POSITIONING FOR A CONCATENATED DATA SET                *
***********************************************************************
*
ETI18800 EQU   *                        CONCATENATION POSITIONING
         LA    RD,EABD162               LOAD INTERNAL ERROR CODE
         LH    RET,JFCBFLSQ             LOAD FILE SEQ NO. FROM JFCB
         CH    RET,REWND+6              IS JFCB FILE SEQ NO. EQ 1-
         BE    ETI18900                 ..BR IF YES
         BH    ETI19000                 ..BR IF GREATER THAN 1
*
*****          PROCESS FILE SEQUENCE NUMBER EQUAL TO 0
*
         LA    RET,K1                   INITLZ FOR FILE SEQ NO. EQUAL 1
         MVI   JFCBFLSQ+K1,K1           SET JFCB FILE SEQ NO. TO 1
         OI    DXXPATHS,WTGJFCBW        TURN ON JFCB 'WRITE-BACK' IND
*
*****          PROCESS FILE SEQUENCE NUMBER EQUAL TO 1
*
ETI18900 EQU   *                        FILE SEQUENCE EQ ONE
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         STH   RET,SRTEFSEQ             ST LOGICAL FILE SEQ NO. IN UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         TM    JFCBLTYP,JFCBLTM         LTM SPECIFIED ?        @2A28943
         BZ    ETI19900                 NO, BRANCH             @ZA28943
         BAL   RB,ETI26600              BR TO BYPASS LTM       @ZA28943
         B     ETI19900                 BR TO PERFORM POSITIONING
*
*****          PROCESS FILE SEQUENCE NUMBER GREATER THAN 1
*
ETI19000 EQU   *                        FILE SEQUENCE GT ONE
         TM    JFCBLTYP,JFCBAL+JFCSL    WAS SL OR AL SPECIFIED-
         BZ    ETI19500                 ..BR IF NOT- PERFORM NL POS
         CLC   SRTEFSCT(K2),REWND+K6    IS THE CURRENT POSITION '1'-
         BNE   ETI19300                 ..BR IF NOT TO POSITION
*
*****          AN SL TAPE IS CURRENTLY POSITIONED TO THE FIRST
*****          PHYSICAL DATA SET ON THE TAPE- USE THE DATA SET
*****          SEQUENCE NUMBER ( LOGICAL ) FROM THE HEADER 1 LABEL
*****          OF THAT DATA SET TO CALCULATE THE RELATIVE OFFSET
*****          ( PHYSICAL ) OF THE DESIRED DATA SET
*
         LA    RC,DXLBL                 LOAD ADDRESS OF LABEL BUFFER,
         ST    RC,DXCCW1                ..STORE IT INTO 'READ' CCW
         MVI   DXCCW1,CCWRDTAP          INITLZ CCW FOR 'READ' COMMAND
         MVC   DXCCW1+K4(K4),ARDCCW0C   IND NO FLAGS, LNG EQ 80 BYTES
         TM    JFCBLTYP,JFCBAL          WERE 'ANSI' LABELS SPECIFIED-
         BZ    ETI19100                 ..BR IF NOT TO READ LABEL
         OI    DXCCW1+K4,CCWSILI        TURN ON 'SILI' INDICATOR
ETI19100 EQU   *                        GO READ LABEL
         BAL   RC,ETI26400              BR AND LINK TO READ LABEL
         BNO   ETI26500                 BR TO ERROR RTN IF I/O ERROR
         TM    SRTESTAB,UCBBSTR         IS AN 'ANSI' VOLUME MOUNTED-
         BZ    ETI19200                 ..BR IF NOT TO CHK LABEL TYPE
         XLATE DXLBL,K80                TRANSLATE 'ANSI' LABEL DATA
ETI19200 EQU   *                        VERIFY HEADER1 READ
         CLC   FL1LABI,AVOL0C           IS THIS A VOLUME LABEL-
         BE    ETI19100                 ..BR IF YES- READ ANOTHER LABEL
         CLC   FL1LABI,UVOL3D           IS THIS A USER VOLUME LABEL-
         BE    ETI19100                 ..BR IF YES- READ ANOTHER LABEL
         CLC   FL1LABI,AHDR             IS THIS A HEADER LABEL-
         BNE   ETI26500                 ..BR IF NOT- ERROR
         MVI   DXCCW1,CCWBSR            INITLZ CCW FOR BSR COMMAND
         BAL   RC,ETI26400              BR AND LINK TO BSR PAST LABEL
         BNO   ETI26500                 BR IF ERROR TO ERROR RTN
         PACK  DXCCW2,FL1FILSQ          PACK LABEL FILE SEQ NO., THEN
         CVB   RET,DXCCW2               ..CONVERT IT TO BINARY AND
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         STH   RET,SRTEFSEQ             ..STORE IT IN THE UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         CH    RET,JFCBFLSQ             IS DESIRED DATA SET 1ST ON TAPE
*                                       ..(PHYSICAL POS EQ 1, LOGICAL
*                                       ..POSITION EQUAL ANYTHING )-
         BE    ETI20900                 ..BR IF YES- POS COMPLETE
         BH    ETI26500                 ..BR IF SPECIFIED SEQ NO. IS
*                                       ..LESS THAN THAT OF 1ST
*                                       ..PHYSICAL DATA SET- ERROR
*
*****          DETERMINE HOW TO POSITION AN SL DATA SET
*
ETI19300 EQU   *                        SL POSITIONING
         LH    RTIOT,SRTEFSEQ           LOAD CURRENT LOGICAL SEQ NO.
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         MVC   SRTEFSEQ,JFCBFLSQ        ST DESIRED LOG SEQ NO. IN UCB
         SH    RTIOT,SRTEFSEQ           CALC RELATIVE OFFSET OF THE 2
*                                       ..DATA SETS-
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         BZ    ETI20900                 ..BR IF 0- POS COMPLETE
         BP    ETI19400                 ..BR IF POSITIVE TO BACKSPACE
*
*****          FORWARD SPACE TO AN SL DATA SET
*
         LPR   RET,RTIOT                CALC NEW PHYSICAL SEQ NO.-
         AH    RET,SRTEFSCT             ..ADD RELATIVE OFFSET TO CUR
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         STH   RET,SRTEFSCT             ..PHYSICAL POS AND STORE IN UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         B     ETI19600                 BR TO ACTUALLY PERFORM POS
*
*****          BACKSPACE TO A SL DATA SET
*
ETI19400 EQU   *                        BSF
         LR    RET,RTIOT                SAVE RELATIVE OFFSET
         SH    RET,SRTEFSCT             CALC NEW PHYSICAL SEQ NO.-
         BNM   ETI26500                 ..BR IF NOT MINUS- ERROR
         LPR   RET,RET                  INSURE POSITIVE SEQ NUMBER
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         STH   RET,SRTEFSCT             ..AND STORE IN UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         B     ETI19600                 BR TO ACTUALLY PERFORM POS
*
*****          DETERMINE HOW TO POSITION AN NL DATA SET
*
ETI19500 EQU   *                        NL POSITIONING
         LH    RTIOT,SRTEFSCT           LOAD CURRENT PHYSICAL SEQ NO.
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         STH   RET,SRTEFSEQ             STORE DESIRED LOGICAL AND
         STH   RET,SRTEFSCT             ..PHYSICAL SEQ NOS. IN UCB
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         SR    RTIOT,RET                GET POSITIONING FACTOR
*
*****          PERFORM ACTUAL TAPE POSITIONING
*
ETI19600 EQU   *                        POSITION TAPE
         TM    JFCBLTYP,JFCBLP+JFCNL    WAS NL OR BLP SPECIFIED-
         BNZ   ETI19700                 ..BR IF YES TO CONTINUE
         MH    RTIOT,CONTHREE           MULTIPLY POSITIONING FACTOR BY
*                                       ..3 TO ACCOUNT FOR STD LABELS
ETI19700 EQU   *                        NL/BLP SPECIFIED
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR BSF COMMAND
         LTR   RTIOT,RTIOT              WHICH WAY DO WE POSITION-
         BM    ETI19800                 ..BR IF POSITIONING FORWARD
         BZ    ETI20900                 ..BR IF POSITIONING COMPLETE
         LA    RTIOT,K1(,RTIOT)         INCREASE NO. OF BSF BY 1
         BAL   RDEB,ETI21300            BR TO EXECUTE THE I/O LOOP
         TM    IOBSENSE+K1,UCBLDPT      WAS LOAD POINT REACHED-
         BO    ETI20900                 ..BR IF YES- POS COMPLETE
         LA    RTIOT,K1                 INITLZ FOR 1 FWD SPACE FILE
ETI19800 EQU   *                        FORWARD POSITIONING
         LPR   RTIOT,RTIOT              INSURE POSITIVE POS FACTOR
         MVI   DXCCW1,CCWFSF            INITLZ CCW FOR FSF COMMAND
         BAL   RDEB,ETI21300            BR TO EXECUTE THE I/O LOOP
         B     ETI20900                 ..BR- CONCATENATION POS DONE
*
*****          POSITIONING FOR READ FORWARD ON THE SAME DATA SET
*
ETI19900 EQU   *                        CHECK FILE SEQUENCE
         CLC   SRTEFSCT(K2),CONSTONE    IS CURRENT POSITION EQUAL '1'-
         BE    ETI20200                 ..BR IF YES- POS COMPLETE
ETI20000 EQU   *                        FILE SEQUENCE NOT EQUAL TO ONE
         MVI   DXCCW1,CCWREW            INITLZ CCW FOR REWIND COMMAND
         BAL   RC,ETI26400              BR AND LINK TO REWIND TAPE
         BNO   ETI26500                 BR IF ERROR TO ERROR RTN
         MVI   DXCCW1,CCWNOP            INITLZ CCW FOR A 'NOP'
         BAL   RC,ETI26400              BR AND LINK TO INITIATE 'NOP'
         BNO   ETI26500                 BR IF ERROR TO ERROR RTN
ETI20200 EQU   *                        FILE SEQUENCE EQUAL ONE
         TM    DCBOFLGS,DCBOCON         IS CONCATENATION TAKING PLACE-
         BO    ETI20900                 BR IF YES TO FINISH
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         MVC   SRTEFSEQ(K2),DXCCW7+K6   UPDATE LOG SEQ NO. FROM WK AREA
         MVC   SRTEFSCT(K2),CONSTONE    INITLZ PHYSICAL SEQ NO. TO 1
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         TM    JFCBLTYP,JFCBLTM         LTM SPECIFIED ?        @ZA28943
         BZ    ETI20900                 NO, BRANCH             @ZA28943
         BAL   RB,ETI26600              BAL TO POS PAST LTM    @ZA28943
         B     ETI20900                 BR TO FINISH
*
*****          POSITIONING FOR 'RDBACK' ON THE SAME DATA SET
*
ETI20300 EQU   *                        READBACK POSITIONING
         LA    RD,EABD194               INTERNAL CODE FOR POS ERROR
         LH    RTIOT,DXCCW7+K4          LOAD OLD PHYSICAL SEQ NO.
         LH    RET,SRTEFSCT             LOAD CURRENT PHYSICAL SEQ NO.
         TM    JFCBLTYP,JFCBLP+JFCNL    WAS NL OR BLP SPECIFIED-
         BM    ETI20600                 ..BR IF YES
         SR    RTIOT,RET                CALC POSITIONING FACTOR
         BNM   ETI20400                 BR TO POSITION FORWARD
         LA    RTIOT,K2                 INITLZ POS FACTOR FOR 2 BSF
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR BSF COMMAND
         BAL   RDEB,ETI21300            BR TO EXECUTE THE I/O LOOP
         LA    RTIOT,K2                 INITLZ POS FACTOR FOR FSF
         B     ETI20500                 BR TO FORWARD SPACE FILE
ETI20400 EQU   *                        FORWARD POSITIONING
         AH    RTIOT,CONSTONE           PLUS ONE TO POSITIONING FACTOR
         MH    RTIOT,CONTHREE           MULTIPLY POSITIONING FACTOR BY
*                                       ..3 TO ACCOUNT FOR STD LABELS
ETI20500 EQU   *                        FSF
         MVI   DXCCW1,CCWFSF            INITLZ CCW FOR FSF COMMAND
         BAL   RDEB,ETI21400            BR TO EXECUTE THE I/O LOOP
         B     ETI20800                 BR TO UPDATE UCB FILE SEQUENCE
*                                       ..COUNT AND NUMBER
ETI20600 EQU   *                        NL/BLP
         SR    RTIOT,RET                CALCULATE POSITIONING FACTOR
         BM    ETI20700                 BR TO POSITION BACKWARD
         AH    RTIOT,CONSTONE           PLUS ONE TO POSITIONING FACTOR
         MVI   DXCCW1,CCWFSF            INITLZ CCW FOR FSF COMMAND
         BAL   RDEB,ETI21300            BR TO EXECUTE THE I/O LOOP
ETI20700 EQU   *                        BACKWARD POSITIONING
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR BSF COMMAND
         LA    RTIOT,K1                 INITLZ POSITIONING FACTOR TO 1
         BAL   RDEB,ETI21300            BR TO EXECUTE THE I/O LOOP
ETI20800 EQU   *                        UPDATE UCB FILE SEQUENCE
         MODESET EXTKEY=SUPR            UCB/TIOT KEY             Y02082
         MVC   SRTEFSCT(K4),DXCCW7+K4   INITLZ PHYSICAL AND LOGICAL SEQ
*                                       ..NOS. FROM SAVE AREA
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
*****    NOTE- 'RDEB' AND 'RTIOT' ARE NO LONGER USED AS WORK REGS
*
ETI20900 EQU   *                        INIT DM COUNT TO ONE
         L     RDEB,DCBDEBAD            RESTORE DEB ADDRESS FROM DCB
         L     RTIOT,DXTIOTAD           RESTORE TIOT ADDR      @ZA03660
         NI    DCBOFLGS,X'FF'-DCBOEOF   RESET 'TAPE MARK READ' IND
         SPACE 2
***********************************************************************
*              EXITS                                                  *
***********************************************************************
*
         TM    JFCBLTYP,JFCBAL+JFCSL    WAS AL OR SL SPECIFIED-
         BZ    ETI21000                 ..BRANCH IF NOT
*
*****          EXIT TO PROCESS STANDARD HEADER LABELS
*
         B     ETI23100                 BRANCH, PROCESS SL TAPE  Y02134
*
*****          NL AND NSL EXIT DETERMINATION
*
ETI21000 EQU   *                        EXIT DETERMINATION
         LA    RF,MOD3F3H               ID/VCON OF MT-AHEAD MOD  Y02134
         TM    JFCBLTYP,JFCNSL          WAS NSL SPECIFIED-
         BO    ETI21200                 ..BRANCH IF YES
         LA    RET,K24                  BR TABLE OFFSET FOR NL
ETI21100 EQU   *                        EXIT
         L     RTIOT,DXTIOTAD           RELOAD TIOT PRT        @ZA03660
         IECRES LOAD,MODID=(RF),BRCODE=(RET),BRANCH=QUEUED       Y02080
*                                    INVOKE IECRES MACRO TO XCTL Y02080
         EJECT
*
*****          XCTL TO 'NSLEHDRI' TO PROCESS HEADER LABELS
*
ETI21200 EQU   *                        PROCESS NSL
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         L     RDCB,DXPDCBAD            GET COPIED DCB ADDR      YM5702
         MVC   DXXMODNM(K12),NSLEHDRI   NSL HEADER LABEL MODULE  Y02134
*                                       ..NAME INTO XCTL AREA
         LA    RET,K20                  BR TABLE OFFSET FOR NSL RETURN
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          YM2866
         IECRES LOAD,PREFIX=DXXPREFX,BRANCH=DIRECT               Y02080
         SPACE 2
***********************************************************************
*              SUBROUTINES FOR VOLUME/DATA SET VERIFICATION           *
***********************************************************************
*
*****          CLOSED SUBROUTINE TO ISSUE MULTIPLE POSITIONING CMDS
*
ETI21300 EQU   *                        SUBROUTINE FOR VOL/DS VER
         BAL   RC,ETI26400              BR AND LINK TO DO I/O
         BO    ETI21400                 BR IF NO ERROR TO CONTINUE
         TM    IOBSENS1,UCBLDPT         IS THE TAPE AT LOAD POINT-
         BNO   ETI26500                 ..BR IF NOT TO ERROR RTN
ETI21400 EQU   *                        NO ERROR
         BCT   RTIOT,ETI21300           DECREMENT THE POSITIONING
*                                       ..FACTOR- CONTINUE IF MORE I/O,
         BR    RDEB                     ..ELSE RETURN TO CALLER
*
***********************************************************************
*              VERIFY HEADER LABEL ( TRAILER LABEL IF READBACK )      *
***********************************************************************
*
*****          READ LABEL
*
ETI23100 EQU   *                        READ LABEL
         LA    RC,DXLBL                 LOAD ADDRESS OF LABEL BUFFER
         ST    RC,DXCCW1                ..STORE IT INTO 'READ' CCW
         MVI   DXCCW1,CCWRDTAP          INITLZ CCW FOR 'READ' COMMAND
         MVC   DXCCW1+K4(K4),ARDCCW7    IND NO FLAGS, LNG EQ 80 BYTES
         TM    JFCBLTYP,JFCBAL          WERE 'ANSI' LABELS SPECIFIED-
         BZ    ETI23200                 ..BR IF NOT TO READ LABEL
         MVI   DXCCW1+K4,CCWSILI        TURN ON SILI INDICATOR
ETI23200 EQU   *                        READ LABEL
         LA    RD,EABD164               LOAD INTERNAL ERROR CODE
         BAL   RC,ETI26400              BR AND LINK TO READ LABEL
         BNO   ETI26500                 BR TO ERROR RTN IF I/O ERROR
         TM    SRTESTAB,UCBBSTR         IS AN 'ANSI' VOLUME MOUNTED-
         BZ    ETI23300                 ..BR IF NOT TO VERIFY LABEL
         XLATE DXLBL,K80                TRANSLATE 'ANSI' LABEL DATA
*
*****          PERFORM FILE LABEL 1 VERIFICATION
*
ETI23300 EQU   *                        HEADER 1 VERIFY
         LA    RD,EABD195               LOAD INTERNAL ERROR CODE
         CLC   FL1LABI,AVOL7            IS THIS A VOLUME LABEL-
         BE    ETI23200                 ..BR IF YES- READ ANOTHER LABEL
         CLC   FL1LABI,UVOL0C           IS THIS A USER VOLUME LABEL-
         BE    ETI23200                 ..BR IF YES READ ANOTHER LABEL
         BAL   RC,ETI26420              GO CHECK LABEL            99223
         B     ETI26500                 BRANCH TO ERROR ROUT      99223
*
****           DETERMINE 17 LEAST SIGNIFICANT NON-BLANK
****           CHARACTERS IN DATA SET NAME IN JFCB
*
*              NOTE- RDEB ( 'RB' ) IS NOW USED AS A WORK REGISTER
ETI23400 EQU   *                        DSNAME PROCESSING
         LA    R0,JFCBDSNM              PT TO JFCB DSNAME FIELD  A41622
         LA    RC,JFCBDSNM+K27          POINT TO FIRST POSSIBLE  A41662
*                                       ..SIGNIFICANT CHARACTER  A41662
ETI23500 EQU   *                        DETERMINE 17 CHAR DSN    A41662
         CLI   K16(RC),BLANK            IS THE 17TH SIGNIFICANT  A41662
*                                       ..CHARACTER A BLANK-     A41662
         BNE   ETI23600                 ..BR IF NOT- 'RC' PTS TO A41662
*                                       ..FIRST SIGNIFICANT CHAR A41662
         BCT   RC,ETI23500              DECR STARTING ADDR AND   A41662
*                                       ..BR TO CHECK AGAIN      A41662
ETI23600 EQU   *                        SIGNIFICANT CHAR         A41662
         LA    RB,K17(,RC)              PT TO FIRST BLANK BEYOND A41662
*                                       ..17 SIGNIFICANT CHARS   A41662
         CLR   RC,R0                    IS DSNAME STARTING ADDR  A41662
*                                       ..WITHIN JFCB DSN FIELD- A41662
         BNL   ETI23700                 ..BR IF YES- USE 'RC'    A41662
         LR    RC,R0                    ..ELSE USE JFCBDSNM      A41662
*                                       ..AS STARTING ADDRESS    A41662
*                                                                A41662
*****          COMPARE THE 17 LEAST SIGNIFICANT CHARACTERS IN    A41662
*****          THE JFCB DSNAME TO THE DATA SET LABEL DSNAME      A41662
*****          INCLUDING THE GENERATION AND VERSION NUMBERS      A41662
*                                                                A41662
ETI23700 EQU   *                        COMPARE DATA SET NAMES   A41662
         CLC   FL1ID,K0(RC)             ARE THE NAMES IDENTICAL- A41662
         BE    ETI23900                 ..BR IF CORRECT DATA SET NAME
*
*****          THE DSNAMES IN THE JFCB AND THE HEADER LABEL ARE NOT
*****          THE SAME. IN THE EVENT THAT THIS IS A 'DOS' TAPE,
*****          VERIFY THE DATA SET NAME, GENERATION NUMBER, AND
*****          VERSION NUMBER SEPARATELY. OTHERWISE, EXIT TO THE
*****          ERROR ROUTINE.
*
ETI23800 EQU   *                        DSNAMES NOT EQUAL A41662
         TM    JFCBIND1,JFCGDG          IS THIS A GENERATION DATA SET-
         BZ    ETI26450                 ..BR IF NOT TO ERROR RTN
         LA    RET,K9                   LD LENGTH OF GENERATION  A41662
*                                       ..AND VERSION NUMBER     A41662
         SR    RB,RET                   POINT TO THE PERIOD PRE- A41662
*                                       ..CEDING GENERATION NO.  A41662
         CLC   FL1GNO,K2(RB)            IS THE GENERATION NO. CORRECT-
         BNE   ETI26450                 ..BR IF NOT TO ERROR RTN
         CLC   FL1VNG,K7(RB)            IS THE VERSION NUMBER CORRECT-
         BNE   ETI26450                 ..BR IF NOT TO ERROR RTN
*                                                                A41662
*****          'R0' NOW POINTS TO 'JFCBDSNM'                     A41662
*****          'RB' NOW POINTS TO THE PERIOD PRECEDING THE       A41662
*****             GENERATION AND VERSION NUMBERS                 A41662
*****          'RC' NOW POINTS TO THE BEGINNING OF THE 17 LEAST  A41662
*****             SIGNIFICANT CHARACTERS- INCLUDING THE GENER-   A41662
*****             ATION AND VERSION NUMBERS                      A41662
*                                                                A41662
         LA    RD,K17                   LD LENGTH OF LABEL NAME  A41662
         SR    RB,R0                    CALC LENGTH OF DSN WITHOUT GDG
         CR    RB,RD                    IS THIS NAME GREATER THAN 17
*                                       ..CHARACTERS-
         BH    ETI23840                 ..BR IF YES TO ADJUST ADDRESS
*                                       ..OF START OF JFCB DSNAME
         LR    RC,R0                    POINT TO START OF        A41662
*                                       ..JFCBDSNM FIELD         A41662
         B     ETI23860                 BRANCH TO COMPARE DSNAMES
*                                                                A41662
*****          THE FOLLOWING INSTRUCTION IS USED TO COMPARE THE  A41662
*****          DATA SET LABEL'S DSNAME TO THE DSNAME IN THE JFCB A41662
*****          WITHOUT THE GENERATION AND VERSION NUMBERS        A41662
*                                                                A41662
ETI23820 CLC   FL1ID(K0),K0(RC)         COMPARE DSNAMES          A41662
*                                                                A41662
ETI23840 EQU   *                        ADJUST ADDRESS
         SR    RC,RET                   CALC STARTING ADDR OF    A41662
*                                       ..DSNAME GREATER THAN    A41662
*                                       ..17 CHARACTERS LONG     A41662
         LR    RB,RD                    LOAD DSNAME LENGTH OF 17 CHARS
ETI23860 EQU   *                        COMPARE DSNAMES
         BCTR  RB,R0                    DECR LNG FOR USE IN 'CLC' INST
         EX    RB,ETI23820              IS THE DSNAME CORRECT-   A41662
         BNE   ETI26450                 ..BR IF NOT TO ERROR RTN
*
****           PLACE BLOCK COUNT INTO THE DCB
*
ETI23900 EQU   *                        CHECK FOR EXCP
         TM    DCBMACRF,DCBMEXCP        IS THE ACCESS METHOD EXCP-
         BNO   ETI24000                 ..BR IF NOT - BLK CT EXISTS
         TM    DCBMACRF+K1,DCBMDEV      IS THERE A TAPE SECTION-
         BZ    ETI24010                 BR IF NOT- BYPASS BLK CT Y02083
ETI24000 EQU   *                        BLOCK COUNT PROCESSING
         PACK  DXCCW6,FL1BLKCT          CONVERT BLK CT FROM EBCDIC TO
         OI    DXCCW6+K7,K15            UNPACKED, INSURE PROPER SIGN,
         CVB   RC,DXCCW6                ..CONVERT TO BINARY, AND STORE
         ST    RC,DCBBLKCT              ..BLOCK COUNT INTO THE DCB
         EJECT
***********************************************************************
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    'EOV TAPE INPUT STANDARD HEADER LABEL FUNCTION', PART II.        *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*    1. FOR DATA SETS ON AL OR SL TAPE, TEST FOR DATA SET SECURITY.   *
*       A DATA SET MAY BE BOTH READ AND WRITE PROTECTED, IN WHICH     *
*       CASE THE PASSWORD IS ALWAYS REQUIRED, OR IT MAY BE WRITE-     *
*       PROTECTED, IN WHICH CASE THE PASSWORD IS ONLY REQUIRED IF     *
*       THE DATA SET IS OPENED FOR 'INOUT'.CONTROL IS TRANSFERRED TO  *
*       OPEN/EOV SECURITY MODULE TO DETERMINE WHETHER OR NOT ACCESS   *
*       IS AUTHORIZED. IF AN ANSI TAPE HAS AN UNRECOGNIZABLE SECURITY *
*       INDICATOR, CONTROL IS TRANSFERRED TO MODULE IFG0552X TO       *
*       ISSUE AN ACCESSABILITY MESSAGE AND CLOSE THE DATA SET.        *
*                                                                     *
* ENTRY POINTS -                                                      *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* INPUT -                                                             *
*    1. REGISTER CONTENTS AT ENTRY ARE AS FOLLOWS-                    *
*       'RDCB' - ADDRESS OF THE DCB BEING PROCESSED;                  *
*       'RCORE'- ADDRESS OF THE WORK AREA FOR THAT DCB;               *
*       'RES'  - ADDRESS OF THE OPEN/CLOSE/EOV RESIDENT ROUTINE;      *
*       'RWTG' - ADDRESS OF THE WHERE-TO-GO TABLE;                    *
*       'RPARC'- ADDRESS OF THE EOV PSEUDO PARAMETER LIST ENTRY;      *
*       'RWTGC'- ADDRESS OF THE CURRENT WHERE-TO-GO TABLE ENTRY;      *
*       'RTIOT'- ADDRESS OF THE CURRENT TIOT ENTRY FOR THE DCB;       *
*       'RUCB' - ADDRESS OF THE CURRENT UCB FOR THE DCB;              *
*       'RDEB' - ADDRESS OF THE DCB'S DEB;                            *
*    2. CONTROL BLOCK INDICATORS-                                     *
*       'DCBOFLGS' - X'20', ON - INDICATES THAT CONCATENATION IS      *
*                                TAKING PLACE.                        *
*       'DEBFLGS1' - X'80', ON - INDICATES THAT 'OPEN' OR 'EOV' HAS   *
*                                PREVIOUSLY VERIFIED THE PASSWORD     *
*                                FOR THIS PROTECTED DATA SET.         *
*                                                                     *
* OUTPUT -                                                            *
*    1. AT EXIT TO IFG0195T (OPEN/EOV SECURITY MODULE)-               *
*       REGISTER CONTENTS ARE THE SAME AS AT ENTRY EXCEPT THAT        *
*          REGISTER 'RET' CONTAINS A BRANCH TABLE OFFSET OF '0';      *
*       CONTROL BLOCK INDICATORS-                                     *
*          'DCBOFLGS' - X'20', OFF - INDICATES THAT CONCATENATION     *
*                                    HAS BEEN COMPLETED.              *
*          'DEBFLGS1' - X'80', OFF - INDICATES THAT THE PASSWORD HAS  *
*                                    NOT PREVIOULY BEEN VERIFIED.     *
*    2. AT EXIT TO IFG0552X (EOD FUNCTION)-                           *
*       REGISTER CONTENTS ARE THE SAME AS AT ENTRY EXCEPT THAT        *
*          REGISTER 'RET' CONTAINS A BRANCH TABLE OFFSET OF '12'.     *
*    3. AT EXIT TO THE 'EOV TAPE INPUT VOLUME MOUNT-AHEAD FUNCTION',  *
*       OUTPUT IS VIRTUALLY THE SAME AS AT INPUT.                     *
*       BEFORE EITHER EXITING TO THE USER TO TO IFG0551L THE     Y02082
*       DCB ADDRESS IN THE DEB IS SET TO POINT TO THE USER DCB   Y02082
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* EXITS, NORMAL -                                                     *
*         IFG0195T - TO VERIFY THAT A SECURITY-PROTECTED DATA SET MAY *
*                    BE ACCESSED;                                     *
*                                                                     *
* EXITS, ERROR -                                                      *
*         IFG0554A - TO ISSUE ANSI ACCESSABILITY MESSAGE (-2)         *
*                                                                     *
*         REFER TO THE PRECEEDING MODULE PROLOG.                      *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE OPEN, CLOSE, OR EOV WORK AREA AND THE WHERE-TO-GO (WTG)      *
*    TABLE ARE DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.     *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEEDING MODULE PROLOG.                           *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
***********************************************************************
*
***********************************************************************
*              TEST FOR DATA SET SECURITY                             *
***********************************************************************
*
ETI24010 EQU   *                        TEST DATA SET SECURITY   YM5950
*                                                                YM5950
         TM    JFCBLTYP,JFCBAL          ANSI LABELS SPECIFIED-   YM5950
         BZ    ETI24012                 IF NOT- TEST SL SECURITY YM5950
*                                                                YM5950
*****          PERFORM SECURITY TESTS FOR ANSI ( AL ) DATA SET   YM5950
*                                                                YM5950
         CLI   FL1FSEC,BLANK            IS ACCESSIBILITY LIMITED YM5950
         BE    ETI24018                 ..BR IF NOT TO CONTINUE  YM5950
         CLI   FL1FSEC,FL1SECTY         SECURITY = READ/WRITE    YM5950
         BE    ETI24012                 ..BR YES TO TEST DEB FOR YM5950
*                                       ..PREVIOUS AUTHORIZATION YM5950
*                                                                YM5950
*        THE ANSI DATA SET LABEL CONTAINS AN INVALID SECURITY    YM5950
*        INDICATOR GO TO ISSUE ACCESSIBILITY MESSAGE             YM5950
*                                                                YM5950
         MVC   DXRETMOD,ID553F          SET UP RETURN MOD        YM5950
         MVI   DXRETCOD,K12             SET UP RETURN OFFSET     YM5950
*                                                                YM5950
         LA    R1,K2                    ACCESSABILITY CODE       YM5950
         L     RTIOT,DXTIOTAD           RELOAD TIOT PTR        @ZA03660
*                                                                YM5950
         IECRES LOAD,MODID=ID554J,BRCODE=K8,BRANCH=QUEUED        YM5950
*                                                                YM5950
ETI24011 EQU   *                        RETURN FROM DISMOUNT     YM5950
*                                                                YM5950
*        REJECT VOLUME AND ABEND                                 YM5950
         L     RTIOT,DXTIOTAD           RELOAD TIOT PTR        @ZA03660
         LA    R0,EABD249               937-20 ABEND             YM5950
         MVC   DXRETMOD,ID553F          SET UP RETURN MOD        YM5950
         MVI   DXRETCOD,K0              SET UP RETURN OFFSET     YM5950
*                                                                YM5950
         IECRES LOAD,MODID=ID3F4A,BRCODE=K16,BRANCH=QUEUED       YM5950
*                                                                YM5950
*****          CONTINUE SECURITY TESTS FOR SL AND AL DATA SETS   YM5950
*                                                                YM5950
ETI24012 EQU   *                        TEST LABEL SECURITY      YM5950
*                                                                YM5950
         NI    DEBFLGS1,X'FF'-DEBPWCKD  CLEAR THE                YM5950
*                                       'PASSWORD ..CHECKED'     YM5950
*                                       INDICATOR                YM5950
*                                                                YM5950
         CLI   FL1FSEC,FL1SECTY         SECURITY FOR READ/WRITE  YM5950
         BE    ETI24014                 BRANCH YES, GET PASSWORD YM5950
         CLI   FL1FSEC,FL1WRSEC         SECURITY FOR WRITE ONLY  YM5950
         BNE   ETI24018                 ..BR IF NOT TO CONTINUE  YM5950
*                                                                YM5950
*****          A PASSWORD IS REQUIRED IF THE USER HAS OPENED FOR YM5950
*****          'INOUT' AND THE DATA SET IS PROTECTED FOR OUTPUT  YM5950
*                                                                YM5950
         TM    DEBOPATB,DEBOPOUT-DEBOPRBK INPUT OR READBACK      YM5950
         BZ    ETI24018                 ..BRANCH IF YES          YM5950
*                                                                YM5950
*                                       ..MODE IS 'INOUT'        YM5950
ETI24014 EQU   *                        MODE IS INOUT            YM5950
*                                                                YM5950
         NI    DCBOFLGS,ALLBITS-DCBOCON SET OFF CONCATENATION    YM5950
*                                                                YM5950
         MVC   DXRETMOD,ID553F          SET UP RETURN LOAD       YM5950
         MVI   DXRETCOD,K8              SET UP RETURN OFFSET     YM5950
         L     RTIOT,DXTIOTAD           RELOAD TIOT PTR        @ZA03660
*                                                                YM5950
         IECRES LOAD,MODID=ID3F5T,BRCODE=K0,BRANCH=QUEUED        YM5950
*                                                                YM5950
ETI24016 EQU   *                        RETURN FROM PASSWORD     YM5950
*                                                                YM5950
         L     RDEB,DCBDEBAD            RESTORE PTR TO DEB       YM5950
         OI    DEBFLGS1,DEBPWCKD        TURN ON PASSWORD CHECK   YM5950
*                                                                YM5950
ETI24018 EQU   *                        READ HDR2 LABEL          YM5950
*                                                                YM5950
         TM    SRTESTAB,UCBBSTR         IS ANSI VOL MOUNTED       99223
         BO    ETI24100                 ..YES,CHECK FOR USER LABS 99223
         LA    RD,EABD164               LOAD ERROR CODE           99223
         BAL   RC,ETI26400              GO READ LABEL             99223
         BO    ETI24019                 BR, NO ERROR            ZA00011
         TM    IOBSTAT0,CSWUNITX        WAS A TAPE MARK READ    ZA00011
         BNO   ETI26500                 NO,BR TO ERROR ROUTINE  ZA00011
         MVC   DXCCW1(K16),BSFNOP1      SET UP 'BSF,NOP' CCWS   ZA00011
         LA    RD,EABD196               LOAD INT ERROR CODE     ZA00011
         BAL   RC,ETI26400              GO BACKSPACE FILE       ZA00011
         BNO   ETI26500                 BR IF I/O ERROR         ZA00011
         B     ETI24100                 BR,TEST FOR USER LABELS ZA00011
ETI24019 EQU   *                                                ZA00011
         BAL   RC,ETI26420              GO VERIFY LABEL TYPE      99223
*
         B     ETI24050                 GO BACKSPACE,NO LAB 2     99223
**                                        RETURN +4 IF LABEL OK   99223
         CLI   FL2ID+K4,BLANK           IS ID FIELD BLANK         99223
         BE    ETI24020                 .YES,CHECK FOR CHKPT DS  YM7820
         CLI   UCBTBYT4,UCB3400         TEST FOR 3400 DRIVE      YM1491
         BNE   ETI24020                 ..NO,CHECK FOR CHKPT DS  YM1491
         L     RC,UCBEXTPT              GET UCB EXTEN PTR        Y02146
         CLI   UCBSNSCT-UCBCMEXT(RC),K24 IS IT 3420?             Y02146
         BNE   ETI24020                 BR IF NOT                YM1491
***********************************************************************
* IF THE TAPE UNIT IS A 6250 BPI UNIT AND IBM STANDARD LABELS ARE     *
* BEING PROCESSED,THE SERIAL NUMBER OF THE CREATING TAPE DEVICE       *
* IS OBTAINED FROM THE HDR2/EOF2/EOV2 LABEL AND PLACED IN THE UCB     *
* EXTENSION AREA ON THE TAPE UNIT THAT IS PROCESSING THE TAPE.        *
***********************************************************************
         PACK  DXCCW6,FL2ID             CONVERT TAPE ID FROM      99223
         CVB   RB,DXCCW6                --INSURE PROPER SIGN      99223
         L     RC,UCBXTN                POINT TO UCB EXTENSION    99223
         MODESET EXTKEY=SUPR            SET KEY TO UCB KEY        99223
         USING UCBMT,RC                                           99223
         STH   RB,UCBCTD                STORE TAPE ID            YM8550
         DROP  RC                                                 99223
ETI24020 EQU   *                        BEGIN CHKPT DS TEST      Y02083
         L     RC,DXDSAB                ADDRESS OF DSAB          Y02083
         USING DSAB,RC                  ADDRESS DSAB             Y02083
         MODESET EXTKEY=SCHED           DSAB KEY                 Y02083
         NI    DSABFLG4,X'FF'-DSABCKVL  ZERO DSAB CHKPT VOL IND  Y02083
         MODESET EXTKEY=DATAMGT         RETURN TO D/M KEY        Y02083
*****************************************************************Y02083
* IF THIS IS A CHECKPOINT DATA SET, MAKE SURE THE VOLUME IS      Y02083
* SECURE. IF IT IS NOT OR A NON-CHECKPOINT DATA SET IS           Y02083
* ATTEMPTING TO USE A SECURE VOLUME, ABORT.                      Y02083
*****************************************************************Y02083
         CLI   FL2DSIND,CHARC           FL2DSIND=C (CHKPT DS)    Y02083
         BNE   ETI24035                 NO, FIND DATA SET TYPE   Y02083
*****************************************************************Y02083
* ASK OPERATOR IF THIS IS AN OLD SECURE VOLUME                   Y02083
*****************************************************************Y02083
ETI24025 EQU   *                        START WTOR LOGIC         Y02083
         MVC   DXRETMOD,ID553F          SET RETURN NAME & EPA    Y02083
         MVI   DXRETCOD,K4              SET BR TAB RETURN VALUE  Y02083
         XC    DXWORK1,DXWORK1          CLEAR WTOR REPLY AREA    Y02083
         LA    R1,DXWORK1               POINT TO REPLY AREA      Y02083
         LA    R0,K3                    SET REPLY LENGTH         Y02083
         SLL   R0,K24                   MOVE LENGTH TO HI BYTE   Y02083
         OR    R1,R0                    SET UP WTOR PARMS        Y02083
         L     RTIOT,DXTIOTAD           RELOAD TIOT PTR        @ZA03660
         IECRES LOAD,MODID=ID554J,BRCODE=K56,BRANCH=QUEUED       Y02083
ETI24030 EQU   *                        WAIT RETURN ENTRY        Y02083
         IECRES WAIT                    WAIT FOR REPLY           Y02083
         OC    DXWORK1(K3),BLANKS       FOLD REPLY TO UPPER CASE Y02083
         CLC   KYES,DXWORK1             REPLY=YES                Y02083
         BE    ETI24040                 IF YES, CONTINUE         Y02083
         CLC   KNO,DXWORK1              REPLY=NO                 Y02083
         BNE   ETI24025                 IF NOT, ISSUE MSG AGAIN  Y02083
*****************************************************************Y02083
* DATA SET NOT IDENTIFIED AS CHECKPOINT DATA SET                 Y02083
*****************************************************************Y02083
ETI24035 EQU   *                        BEGIN TEST FOR ERROR     Y02083
         TM    DSABFLG4,DSABCKDS        CHKPT DS IND ON IN DSAB  Y02083
         BNO   ETI24100                 IF NOT, CONTINUE         Y02083
         LA    R0,EABD240               LOAD INTERNAL ABEND CODE Y02038
         DMABCOND (R0),ID3D0P           ISSUE 937-10 ABEND       Y02083
*****************************************************************Y02083
* DATA SET WAS IDENTIFIED AS A CHECKPOINT DATA SET               Y02083
*****************************************************************Y02083
ETI24040 EQU   *                        BEGIN TEST FOR ERROR     Y02083
         L     RTIOT,DXTIOTAD           RELOAD TIOT PTR        @ZA03660
         TM    DSABFLG4,DSABCKDS        CHKPT DS IND ON IN DSAB  Y02083
         BO    ETI24045                 IF YES, CONTINUE         Y02083
         LA    R0,EABD241               LOAD INTERNAL ABEND CODE Y02083
         DMABCOND (R0),ID3D0P           ISSUE 937-14 ABEND       Y02083
*****************************************************************Y02083
* SET SECURE CHECKPOINT VOLUME INDICATOR IN DSAB                 Y02083
*****************************************************************Y02083
ETI24045 EQU   *                        SET DSAB VOL IND         Y02083
         MODESET EXTKEY=SCHED           SHIFT TO DSAB KEY        Y02083
         OI    DSABFLG4,DSABCKVL        SET DSAB CHKPT VOL IND   Y02083
         MODESET EXTKEY=DATAMGT         RETURN TO D/M KEY        Y02083
         B     ETI24100                 GO CHECK USER LABELS      99223
ETI24050 EQU   *                        BACKSPACE RECORD          99223
         MVI   DXCCW1,CCWBSR            SET 'BSR' OP CODE         99223
         LA    RD,EABD196               LOAD INT ERROR CODE       99223
         MVC   DXCCW1+K1(K15),BSFNOP1+K1  COMPLETE CCW FOR BSR    99223
*                                       --AND INSERT 'NOP'        99223
         BAL   RC,ETI26400              GO BACKSPACE RECORD       99223
         BNO   ETI26500                 BR IF I/O ERROR           99223
*
***********************************************************************
*              USER HEADER LABEL PROCESSING                           *
***********************************************************************
*
****           DETERMINE IF USER LABELS ARE TO BE PROCESSED
*
ETI24100 EQU   *                        CHECK FOR USER LABELS
         L     RDEB,DCBDEBAD            RESTORE THE DEB ADDRESS
         TM    JFCBLTYP,JFCBUL          WERE USER LABELS SPECIFIED-
         BNO   ETI26100                 ..BR IF NOT- BYPASS USER LBLS
         TM    DCBMACRF,DCBMEXCP        IS THE ACCESS METHOD EXCP-
         BZ    ETI24200                 ..BR IF NOT- TEST FOR EXIT LIST
         TM    DCBMACRF,DCBMFOUN        IS THERE A TAPE DEPEND SECTION-
         BZ    ETI26100                 ..BR IF NOT- BYPASS USER LBLS
ETI24200 EQU   *                        TEST FOR EXIT LIST
         L     RC,DCBEXLST              LOAD EXIT LIST ADDR FROM DCB
         LA    RC,K0(,RC)               ZERO HIGH ORDER BYTE
         LTR   RC,RC                    IS THERE A DCB EXIT LIST-
         BE    ETI26100                 ..BR IF NOT- BYPASS USER LBLS
ETI24300 EQU   *                        USER LABEL PROCESSING
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         CLI   K0(RC),XLIUHL            IS THERE AN INPUT HDR LBL EXIT-
         BE    ETI24500                 ..BR IF YES- CHECK FOR ADDR
         CLI   K0(RC),LASTNTRY+XLIUHL   IS 'LAST ENTRY' IND ALSO ON-
         BE    ETI24500                 ..BR IF YES- CHECK FOR ADDR
ETI24400 EQU   *                        CHECK FOR LAST ENTRY
         TM    K0(RC),LASTNTRY          IS THIS THE LAST LIST ENTRY-
         LA    RC,K4(,RC)               POINT TO NEXT ENTRY
         BNO   ETI24300                 ..BR IF NOT- CHECK NEXT ENTRY
         B     ETI26100                 ..ELSE BYPASS USER LABELS
ETI24500 EQU   *                        CHECK FOR VALID EXIT ADDRESS
         L     RC,K0(,RC)               LOAD EXIT LIST ADDRESS
         LA    RC,K0(,RC)               ZERO THE HIGH ORDER BYTE
         LTR   RC,RC                    IS THERE A VALID ADDRESS-
         BZ    ETI26100                 ..BR IF NOT- BYPASS USER LABELS
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
*****          PROCESS USER HEADER LABELS
*
ETI24600 EQU   *                        PROCESS USER HEADER LABELS
* OBTAIN MAIN STORAGE FOR USER LABEL WORK AREA                   Y02080
         IECRES GET,LV=USERLDM,PREFIX=YES,SP=K229,               Y02082*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
         USING ULDMWK,R1                                         Y02082
         STM   RES,RC,ULREGSAV          SAVE REGS 5 - 12         Y02082
         DROP  R1
*
*****          RUCB IS NOW USED AS THE USER LABEL WORK AREA BASE REG
*
         LR    RUCB,R1                  PT TO GOTTEN CORE        Y02082
         USING ULDMWK,RA                ESTAB ADDRESSABILITY     Y02082
*    GET USER'S USER LABEL WORK AREA                             Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,KEY=USER,SP=K229,        Y02082*
               STM=(2,14,WTGPREFX)                               Y02082
         USING ULUWK,R9                 ESTAB ADDRESSABILITY     Y02082
         LR    R9,R1                    PT TO GOTTEN CORE        Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    R1,CHAR0                 INITIALIZE LABEL COUNT
         STH   R1,ULCNT                 ..AND SAVE FOR LATER USE
ETI24700 EQU   *                        SET UP READ CCW
         LA    R1,ULDMBUFR              ADDR OF LABEL BUFFER     Y02082
         ST    R1,DXCCW1                ..AND STORE IN READ CCW
         MVI   DXCCW1,CCWRDTAP          INITLZ CCW FOR READ COMMAND
*                                       INDICATOR ON LNG STILL IN CCW)
         MVI   DXCCW1+K4,CCWSILI        SET 'SILI' FLAG ON
ETI24800 EQU   *                        READ LABEL
         BAL   RC,ETI26400              BR AND LINK TO READ A LABEL
         BO    ETI24900                 BR IF NO I/O ERROR
         TM    IOBSTAT0,CSWUNITX        WAS A TAPE MARK READ-
         BO    ETI25700                 ..BR IF YES
         B     ETI25600                 ..ELSE BR RO PROCESS ERROR
ETI24900 EQU   *                        NO TAPE MARK READ
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI USER LBLS SPECIFIED-
         BNO   ETI25000                 ..BR IF NOT- BYPASS TRANSLATION
         XLATE ULDMBUFR,K80             TRANSLATE ANSI LABEL     Y02082
ETI25000 EQU   *                        CHECK FOR HDR/TRLR
         CLC   ULDMBUFR(K3),AUHL7       USER HRD LABEL READ?     Y02082
         BE    ETI25100                 ..BR IF YES
         CLC   ULDMBUFR(K3),AUTL7       USER TRLR LABEL READ?    Y02082
         BE    ETI25100                 ..BR IF YES
*
*              NOTE - INPUT TRAILER LABEL PROCESSING LEAVES THE TAPE
*              POSITIONED BETWEEN THE FIRST AND SECOND DATA SET
*              TRAILER LABELS. THE FOLLOWING ALLOWS PROCESSING OF USER
*              LABELS EVEN THOUGH THE TAPE MAY CONTAIN MORE DATA SET
*              LABELS THAN CAN CURRENTLY BE CREATED UNDER O/S.
*
         BAL   RC,ETI26420              GO VERIFY LABEL TYPE      99223
         B     ETI25050                 WRONG LABEL TYPE          99223
         B     ETI24800                 GO READ NEXT LABEL        99223
ETI25050 EQU   *                        BACKSPACE RECORD          99223
         MVI   DXCCW1,CCWBSR            INITLZ CCW FOR 'BSR' COMMAND
         B     ETI25900                 BR- AN 'UNKNOWN' LABEL WAS READ
ETI25100 EQU   *                        HEADER/TRAILER READ
         MVC   ULCNT+K1(K1),ULDMBUFR+K3 SAVE LABEL NUMBER        Y02082
*                                                                Y02082
*    COPY LABEL TO USER'S BUFFER                                 Y02082
*                                                                Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
*    OBTAIN LOCAL LOCK                                           Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*    VERIFY USER STILL HOLDS USER LABEL WORK AREA                Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULBUFR,ULDMBUFR          COPY LABEL TO USER       Y02082
         L     RF,WTGPREFX              PT TO PREFIX             Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
*    RELEASE LOCAL LOCK                                          Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR IND
*
*****          PASS CONTROL TO USER FOR USER PROCESSING
*
ETI25200 EQU   *                        GIVE CONTROL TO CALLER
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  IND USER EXIT TAKEN      Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULBUFR                POINT TO LABEL BUFFER
         LA    RD,ETI25500              LOAD ADDR FOR RETURN FROM SYNCH
ETI25300 EQU   *                        SYNCH TO CALLER
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         XC    ULTOTPTR(K4),ULTOTPTR    ZERO THE USER TOTALING ENTRY
         MVI   ULDCBPTR,K0              CLEAR FLAG BYTE
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         IECRES UEXIT,EXITAD=ULREQ,STM=(2,13,WTGPREFX)           Y02082
         L     RDCB,DXUDCBAD            PT TO CALLER'S DCB       YM3005
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME CALLER'S KEY    YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3005
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM3005
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE OFLGS FIELD       YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  YM5981
         BR    RD                       RETURN TO CALLER
ETI25500 EQU   *                        RETURN FROM SYNCH
         CH    RF,RDAGAIN1              SHOULD ADD'L LABELS BE READ-
         BNE   ETI26000                 ..BR IF NOT- ALL DONE
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI USER LBLS SPECIFIED-
         BO    ETI24800                 ..BR IF YES- READ ANOTHER LABEL
         CLI   ULCNT+K1,MAXNOLAB        HAS MAX NO. OF LABELS BEEN READ
         BNL   ETI26000                 ..BR IF YES- ALL DONE
         B     ETI24800                 ..BR IF NOT TO READ NEXT LABEL
*
*****          ERROR ENCOUNTERED DURING READ
*
ETI25600 EQU   *                        READ ERROR
         LH    R1,ULCNT                 LOAD THE CURRENT LABEL NUMBER,
         LA    R1,K1(,R1)               ..INCREMENT IT BY 1, AND
         STH   R1,ULCNT                 ..SAVE IT IN THE WORK AREA
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         STC   R1,ULBUFR+K3             SAVE NO. OF LABEL WHICH COULD
*                                       ..NOT BE READ
         LA    R1,DXIOB                 PTR TO STATUS INFO       Y02082
         ST    R1,ULPARM+K8             PUT IN PARM LIST         Y02082
         OI    ULPARM+K8,ERROR          INDICATE ERROR           Y02082
         B     ETI25200                 BR TO SYNCH TO USER
*
*              A TAPE MARK HAS BEEN READ. IF USER HAS PREVIOUSLY
*              PROCESSED ANY LABELS,  REPOSITION TAPE, FREEMAIN,
*              AND RETURN TO CALLER. IF USER HAS NOT PREVIOUSLY
*              PROCESSED ANY LABELS, SYNCH TO USER WITH LABEL
*              BUFFER POINTER SET TO ZERO, THEN REPOSITION
*              TAPE, FREEMAIN, AND RETURN TO CALLER.
*
ETI25700 EQU   *                        TAPE MARK READ
         CLI   ULCNT+K1,CHAR0           HAVE ANY LABELS BEEN PROCESSED-
         BH    ETI25800                 ..BR IF YES- ALL DONE
         TM    JFCBLTYP,JFCBAL+JFCBUL   WERE ANSI USER LBLS SPECIFIED-
         BO    ETI25800                 ..BR IF YES- ALL DONE
         MODESET EXTKEY=SUPR            SUPERVISOR KEY           Y02082
         XC    ULPARM+K8(K4),ULPARM+K8  ZERO ERROR PARAMETER
         SR    R1,R1                    ZERO BUFFER POINTER
         BAL   RD,ETI25300              BR AND LINK TO SYNCH TO USER
ETI25800 EQU   *                        BSF
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR 'BSF' CMD M0961
ETI25900 EQU   *                        BSF
         LA    RD,EABD196               LOAD INTERNAL ERROR CODE
         MVC   DXCCW1+K1(K15),BSFNOP1+K1 COMPLETE BACKSPACE CCW  M0961
*                                       ..AND INSERT 'NOP' CCW   M0961
         BAL   RC,ETI26400              BR AND LINK TO BACKSPACE
         BNO   ETI26500                 BR IF I/O ERROR
ETI26000 EQU   *                        NO I/O ERROR
*                                                                Y02082
*    FREEMAIN USER LABEL WORK AREAS                              Y02082
*                                                                Y02082
         IECRES FREE,A=(9),LV=USERLU,PREFIX=NO,SP=K229,          Y02082*
               KEY=USER,STM=(2,14,WTGPREFX)                      Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         DROP  R9                                                Y02082
         LR    R1,RUCB                  CORE ADDR TO BE FREED    Y02082
         LM    RES,RC,ULREGSAV          RESTORE REGS 5 - 12      Y02082
         IECRES FREE,A=(1),PREFIX=YES,STM=(2,14,WTGPREFX)        Y02082
         USING UCB,RUCB                 RE-ESTABLISH UCB ADDRESSABILITY
*
***********************************************************************
*              POSITION NEW VOLUME TO FIRST DATA RECORD               *
***********************************************************************
*
ETI26100 EQU   *                        POSITION TO DATA RECORD
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
         LA    RD,EABD191               LOAD INTERNAL ERROR CODE
         MVC   DXCCW1,AFSFCCW           INITLZ CCW FOR FSF COMMAND
         TM    DCBOFLGS,DCBORDBK        IS THE DCB OPENED FOR 'RDBACK'-
         BNO   ETI26200                 ..BR IF NOT TO ISSUE FSF
         MVI   DXCCW1,CCWBSF            INITLZ CCW FOR BSF COMMAND
ETI26200 EQU   *                        POSITION TAPE
         BAL   RC,ETI26400              BR AND LINK TO POSITION TAPE
         BNO   ETI26500                 BR IF I/O ERROR
         MVI   DXCCW1,CCWNOP            INITLZ CCW FOR 'NOP' COMMAND
         BAL   RC,ETI26400              BR TO WAIT FOR DEVICE END
         BO    ETI26300                 BR IF NO I/O ERROR
         TM    IOBSENS1,UCBLDPT         IS THE TAPE AT 'LOAD POINT'-
         BNO   ETI26500                 ..BR IF NOT TO ERR RTN
*                                       ..ELSE DROP THROUGH TO EXIT
         SPACE 2
***********************************************************************
*              EXIT                                                   *
***********************************************************************
*
ETI26300 EQU   *                        EXIT
         L     RTIOT,DXTIOTAD           RELOAD TIOT PTR        @ZA03660
         IECRES LOAD,MODID=MOD3F3H,BRCODE=K0,BRANCH=QUEUED       Y02080
*                                    INVOKE IECRES MACRO TO XCTL Y02080
         EJECT
***********************************************************************
*              SUBROUTINES                                            *
***********************************************************************
*
*****          CLOSED SUBROUTINE TO PERFORM I/O OPERATIONS
*****          ENTRY TO THE SUBROUTINE IS VIA A 'BAL  RC,ETI26400'
*
ETI26400 EQU   *                        I/O SUBROUTINE
         EXCP  DXIOB                    INITIATE I/O OPERATION
         IECRES WAIT                    INVOKE IECRES MACRO TO 'WAIT'
         TM    DXECB,ECBNOERR           TEST FOR AN I/O ERROR-
         BR    RC                       RETURN TO CALLER WITH
*                                       ..CONDITION CODE SET
         SPACE 2
*  CLOSED SUBROUTINE USED TO VERIFY THAT LABEL IS HDR,EOF,OR EOV. 99223
*  RETURN TO CALLER VIA REGISTER RC.RETURN IS RC+4 IF PROPER TYPE.99223
ETI26420 EQU   *                        VERIFY HDR,EOF,EOV        99223
         CLC   FL1LABI,AHDR7            HEADER LABEL              99223
         BE    ETI26430                 YES,RETURN PLUS FOUR      99223
         CLC   FL1LABI,AEOF7            E-O-F LABEL               99223
         BE    ETI26430                 YES,RETURN PLUS FOUR      99223
         CLC   FL1LABI,EOV7             E-O-V LABEL               99223
         BNE   ETI26440                 YES,TAKE NORMAL RETURN    99223
ETI26430 EQU   *                        RETURN PLUS FOUR          99223
         LA    RC,K4(RC)                ADD 4 TO RETURN ADDR      99223
ETI26440 EQU   *                        NORMAL RETURN             99223
         BR    RC                       RETURN TO CALLER          99223
         SPACE 2
***********************************************************************
*              ERROR PROCESSING                                       *
***********************************************************************
*
ETI26450 EQU   *                        ERROR PROCESSING
         LA    RD,EABD165               LOAD INTERNAL ERROR CODE
ETI26500 EQU   *                        ABEND
         DMABCOND (RD),ABEND3F          EXIT TO PROB DETERMINATION RTN
         SPACE 2
***********************************************************************
*                                                                     *
*           CLOSED SUBROUTINE TO BYPASS LEADING TAPE MARK.            *
*      READ ONE RECORD. TEST TO SEE IF A TAPE MARK WAS READ. IF SO,   *
*      THE TAPE IS PROPERLY POSITIONED. IF A TAPE MARK WAS NOT READ   *
*      BACKSPACE ONE RECORD.                                          *
*                                                                     *
***********************************************************************
ETI26600 MVC   DXCCW1,BSFNOP1+K8        MOVE IN CCW            @ZA28943
         LA    RF,DXLBL                 GET READ ADDRESS       @ZA28943
         ST    RF,DXCCW1                STORE ADDR IN CCW      @ZA28943
         MVI   DXCCW1,CCWRDTAP          INSERT READ OP         @ZA28943
         MVI   DXCCW1+K7,K12            SET READ LENGTH TO 12  @ZA28943
         BAL   RC,ETI26400              GO READ A RECORD       @ZA28943
         BO    ETI26650                 ECB=3F GO BSR          @ZA28943
         TM    IOBSTAT0,CSWUNITX        WAS A TAPE MARK READ ? @ZA28943
         BCR   1,RB                     YES RETURN             @ZA28943
         B     ETI26500                 NO ! BR I/O ERROR      @ZA28943
ETI26650 MVC   DXCCW1,BSFNOP1+K8        MOVE IN NEW CCW        @ZA28943
         MVI   DXCCW1,CCWBSR            INSERT BSR OP          @ZA28943
         BAL   RC,ETI26400              BACKSPACE THE RECORD   @ZA28943
         BNO   ETI26500                 I/O ERROR              @ZA28943
         BR    RB                       RETURN                 @ZA28943
         SPACE 2
***********************************************************************
*              CONSTANTS                                              *
***********************************************************************
*
REWND    CCW   X'07',0,X'20',1          REWIND CCW
ARDCCW0C DC    X'00000050'              CCW FOR READ OP - NO FLAGS,80 C
AFSFCCW  CCW   X'3F',0,X'20',1          FORWARD SPACE FILE
BSFNOP1  DC    X'2F00000060000001'      BSF COMMAND, CMD CHAIN,  M0961
*                                       ..SILI, AND LNG EQUAL 1  M0961
         DC    X'0300000020000001'      NOP CMD, SILI, LNG EQ 1  M0961
ARDCCW7  DC    X'00000050'              LENGTH EQ 50 FOR RD DATA M0961
RDAGAIN1 DC    H'4'                     'READ LABEL AGAIN' CODE  M0961
CONSTONE DC    X'0001'                  CONSTANT ONE             Y02134
CONTHREE DC    X'0003'                  HALFWORD CONSTANT OF 3   Y02134
AVOL0C   DC    C'VOL'                   VOLUME LABEL IDENTIFIER  Y02134
AHDR     DC    C'HDR'                   HEADER LABEL IDENTIFIER  Y02134
UVOL3D   DC    C'UVOL'                  USER VOLUME LABEL ID     Y02134
AVOL7    DC    C'VOL'                   VOLUME IDENTIFIER
AHDR7    DC    C'HDR'                   HEADER LABEL IDENTIFIER
EOV7     DC    C'EOV'                   END OF VOLUME IDENTIFIER
AEOF7    DC    C'EOF'                   END OF FILE IDENTIFIER
AUHL7    DC    C'UHL'                   USER HEADER LABEL IDENTIFIER
AUTL7    DC    C'UTL'                   USER TRAILER LABEL IDENTIFIER
UVOL0C   DC    C'UVL'                   USER VOLUME LABEL
BLANKS   DC    C'   '                   3 BLANK CHARACTERS       Y02083
KYES     DC    C'YES'                   'YES' REPLY MASK         Y02083
KNO      DC    C'NO '                   'NO ' REPLY MASK         Y02083
         EJECT
***********************************************************************
*              XCTL TABLE                                             *
***********************************************************************
*
XCTLTB3F XCTLTABL ID=(ABEND3F,0P,MOD3F3H,3H,,NSLEHDRI,           Y02134X
               ID3F4A,4A,                                        YM5950X
               ID3D0P,0P,ID553F,3F,ID554J,4J,ID3F5T,5T),         YM5950X
               SVC=055,BRT=YES,LENGTH=                           Y02134
         SPACE 2
         IECDSECS CVT,                                                 C
               TCB,                                                    C
               TIOT,                                             Y02134X
               RB,                                                     C
               DCB,                                                    C
               DEB,                                                    C
               UCB,                                                    C
               PSA,                                              Y02082X
               MAIN,                                                   C
               USERLAB,                                                C
               WTG,                                              Y02080*
               PREFX,                                            Y02080*
               RRPL,                                             Y02144*
               DSAB,                                             Y02083*
               EXPAND=YES
         IECEQU ,                       INVOKE OPEN/CLOSE/EOV EQUATES
         SPACE 2
         END
