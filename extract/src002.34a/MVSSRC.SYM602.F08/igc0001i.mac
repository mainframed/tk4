         TITLE 'IGC0001I                      OPEN - SVC 19 INITIAL MODU
               ULE'
IGC0001I CSECT
         ENTRY IGC0101I                 ENTRY FROM CLOSE DURING  Y02082
*                                       UNLIKE CONCAT PROCESSING Y02082
***********************************************************************
*                                                                     *
*        VS2 RELEASE 03 DELETIONS/CHANGES
*0000371488,509556,509576,510280-510420                         ZA00705
*
*               VS2-037 CHANGES/DELETIONS/ADDITIONS                   *
*A800100-801100,A808100-808200                                 @ZA29752
*                                                                     *
* MODULE NAME = IGC0001I (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = OPEN INITAL MODULE                               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        1. DETERMINE IF THIS REQUEST IS FOR A VSAM RESOURCE   @Y30DSDT
*        POOL (VRP). IF IT IS, GET A WORK AREA AND BRANCH TO   @Y30DSDT
*        IFG0192Y. IF THIS IS AN OPEN REQUEST, SAVE REGISTERS  @Y30DSDT
*        2-12 IN SVRB EXTENDED SAVE AREA AND GET MAIN STORAGE  @Y30DSDT
*        (VIA RESIDENT ROUTINE) FOR:                           @Y30DSDT
*           A. WHERE-TO-GO TABLE;                                     *
*           B. A WORK AREA FOR EACH DCB IN THE PARAMETER LIST. (IF    *
*           THE DDNAME FOR THE DCB IS NOT IN THE TIOT, THE WORK AREA  *
*           IS FREED);                                                *
*           C. A PROTECTED COPY OF THE DCB.                           *
*                                                                     *
*        2. INITIALIZE EACH WHERE-TO-GO TABLE ENTRY.                  *
*                                                                     *
*        3. CONSTRUCT IN EACH O/C/EOV WORK AREA THE CONTROL BLOCKS    *
*        NEEDED TO EXCP:                                              *
*           A. DEB                                                    *
*           B. ECB                                                    *
*           C. DCB                                                    *
*           D. IOB                                                    *
*           E. CHANNEL PROGRAMS                                       *
*                                                                     *
*        4. OBTAIN THE JFCB THROUGH THE TIOT ENTRY FOR EACH DCB.      *
*        CHECK TO SEE IF THE TRACE ROUTINE HAS BEEN REQUESTED. IF IT  *
*        HAS, THEN TURN ON THE TRACE ROUTINE INDICATOR AT WTGPATHS+K1.*
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE NEXT TO LAST LABEL BEFORE ORG STATEMENT AT END *
*                  OF LISTING.                                        *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT = IGC0001I  FROM OPEN MACRO OR SVC 19 IN KEY ZERO       *
*               IGC0101I  FROM CLOSE - UNLIKE ATTRIBUTE CONCATENATION *
*                         AND IN DATA MANAGEMENT KEY                  *
*                                                                     *
*    PURPOSE = INITIALIZE WORK AREAS FOR OPEN PROCESSING              *
*                                                                     *
*    LINKAGE = STANDARD LINKAGE FOR TYPE 4 SVC                        *
*                                                                     *
* INPUT = REGISTER 1 POINTING TO VARIABLE PARAMETER LIST.             *
*                                                                     *
* OUTPUT = OPEN WTG TABLE AND WORK AREAS INITIALIZED FOR OPEN         *
*          PROCESSING.                                                *
*                                                                     *
* EXIT-NORMAL =                                                       *
*          IFG0193A - NORMAL OPEN PROCESSING                          *
*          IFG0191X - VSAM CATALOG                                    *
*                                                                     *
* EXIT-ERROR = CALLER - NO DCB'S TO OPEN                              *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = IFG0193A,IFG0191X,IFG019RA.                           *
*                                                                     *
*    DATA AREAS = SEE PARAMETERS ON IECDSECS MACRO.                   *
*                                                                     *
*    CONTROL BLOCK = SEE PARAMETERS ON IECDSECS MACRO.                *
*                                                                     *
* TABLES = SEE XCTLTABL MACRO.                                        *
*                                                                     *
* MACROS = IECDSECS,IECEQU,IECRES,MODESET,WTO,XCTLTABL.               *
*                                                                     *
* CHANGE ACTIVITY = NEW RELEASE (LEVEL 0)                             *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TCB,RB,TIOT,UCB,DCB,ACB,MAIN,WTG,PREFX,    Y02080*
               RRPL,IEZDEB                                      YA03003
*
TIOTSPOL EQU   X'06'                    JES SPOOL D.S.  INDICATORS
ACBMJEP  EQU   X'40'                    ACB JEPS INDICATOR
VRPREGSV EQU   92                       SAVEAREA SIZE FOR VRP   Z30SSRL
         IECEQU AOS=YES,IEZDEB=YES                              YA03003
*
         USING IHADCB,RDCB              DEFINE BASE TO USER'S DCB
         USING FORCORE,RCORE            DEFINE BASE TO MAIN WORK AREA
         USING TIOENTRY,RTIOT           DEFINE BASE TO TIOT DD ENTRY
         USING RRPLIST,RC               DEFINE BASE TO RRPLIST   Y02144
         USING WTG,RWTG                 DEF BASE TO WTG TABLE  @Y30DSDT
*
         BALR  RBASE,R0                 ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
OIN00000 EQU   *                        TOP OF MODULE            Y02082
*                                                              @Y30DSDT
************************************************************** @Y30DSDT
*                                                              @Y30DSDT
*  TEST FOR VSAM BLDVRP OR DLVRP REQUEST                       @Y30DSDT
*                                                              @Y30DSDT
************************************************************** @Y30DSDT
*                                                              @Y30DSDT
         L     RDCB,PLISTDCB(R1)        POINT TO FIRST DCB/ACB @Y30DSDT
         TM    DCBMACR,DCBMEXCP         EXCP                   @Y30DSDT
         BO    OIN10000                 BRANCH IF YES          @Y30DSDT
         TM    DCBDSRG2,ACBDORGA        ACB                    @Y30DSDT
         BZ    OIN10000                 BRANCH IF NO           @Y30DSDT
         CLI   ACBSTYP-IFGACB(RDCB),ACBSVRP  VRP REQUEST       @Y30DSDT
         BNE   OIN10000                 BRANCH IF NO           @Y30DSDT
         TM    PLISTOPT(R1),X80         CHECK FOR ONE PARM     @Y30DSDT
         BZ    OIN10000                 BRANCH IF MORE         @Y30DSDT
         LR    RPARC,R1                 SAVE PT TO PARM LIST   @Y30DSDT
         SR    R1,R1                    NO PREVIOUS PREFIX     @Y30DSDT
         USING RBBASIC,R5               RB ADDRESSIBILITY      @Y30DSDT
         IECRES GET,LV=DXXEND+VRPREGSV,STM=(2,12,RBEXSAVE),    @Y30DSDT*
               PREFIX=YES,A=(1),SP=252,KEY=K0,ID=VRP   VRP WA  @Y30DSDT
         DROP  R5                       DROP RB ADDRESSING     @Y30DSDT
         LR    RCORE,R1                 EST WORK AREA BASE     @Y30DSDT
         LA    R0,IECSTART-IECPREFX     GET LENGTH OF PREFIX   @Y30DSDT
         SR    R1,R0                    POINT R1 AT PREFIX     @Y30DSDT
         ST    R1,DXXPREFX              PT TO PREFIX FROM WTG  @Y30DSDT
         MVI   DXXWTOPR+1,K12           LGTH IN WTG WTO PREFIX @Y30DSDT
         IECRES LOAD,MODNM=VSAMVRP,PREFIX=DXXPREFX,            @Y30DSDT*
               BRANCH=DIRECT            GO PROCESS VRP REQUEST @Y30DSDT
OIN10000 EQU   *                        CONTINUE OPEN PROCESS  @Y30DSDT
*
***********************************************************************
*
*  GETMAIN THE WHERE-TO-GO TABLE
*
*                                                                Y02080
* SAVE REGISTERS 2-12 IN SVRB EXTENDED SAVE AREA                 Y02080
*                                                                Y02080
         L     RF,CVTPTR                GET POINTER TO CVT       Y02080
         L     RF,CVTTCBP-CVT(,RF)      GET TCB WORDS            Y02080
         L     RF,K4(,RF)               TCB ADDRESS              Y02080
         L     RF,K0(,RF)               POINTER TO SVRB          Y02080
         USING RBBASIC,RF               ADDRESS RB               Y02080
         IECRES GET,PREFIX=WTG,         GETMAIN FOR WTG TABLE    Y02080*
               STM=(2,12,RBEXSAVE),A=(R1)                        Y02080
*        CONTROL RETURNED IN DATA MANAGEMENT KEY                 Y02082
*        REGISTER 0 CONTAINS RESULT OF SYSZTIOT ENQ              YM2869
         DROP  RF                       DROP ADDRESSING TO RB    Y02080
*
         LR    RWTG,R1                  WTG ADDR TO RWTG REG     Y02080
         IECRES LOAD,MODNM=OPEN,PREFIX=WTGPREFX,BRANCH=NO        Y02080*
                                        GIVE OPT TRACE A SHOT    Y02080
         L     RPAR,WTGPREFX            GET PTR TO WTG PREFIX    Y02144
         L     RC,IECRRPRM-IECPREFX(,RPAR) GET RRPLIST ADDRESS   Y02144
         MVI   RRFUNCTN,RRFOPEN         INDICATE OPEN FUNCTION   Y02144
*
***********************************************************************
*
*  INITIALIZE EACH WHERE-TO-GO TABLE ENTRY
*
         SR    RD,RD                    SET GO SWITCH OFF        A39979
         L     RPAR,IECUPRML-IECPREFX(,RPAR) ADDR OF USER'S PARAM LIST *
                                        IN WTG AREA              Y02134
         LR    RPARC,RPAR               ADDR FIRST ENT PARM LIST A39979
         LA    RWTGC,WTGENTRY           ADDR FIRST ENT WTG TABLE A39979
         USING WTGENTRY,RWTGC           BASE TO CURRENT WTG ENT  A39979
*
*        TEST RESULT OF SYSZTIOT ENQ                             YM2869
*              REGISTER 0 NONZERO INDICATES CALLER OF OPEN       YM2869
*              OBTAINED SYSZTIOT RESOURCE EXCLUSIVELY.           YM2869
*        THIS WILL BE ALLOWED ONLY IF THE CALLER IS IN A SYSTEM  YM2869
*              PROTECT KEY AND IS OPENING AN ACB TO A VSAM       YM2869
*              CATALOG INDICATED BY THE ACBCAT BIT BEING SET     YM2869
*
         LTR   R0,R0                    IS RETURN CODE ZERO      YM2869
         BZ    OIN10200                 BRANCH IF YES            YM2869
         L     RDCB,PLISTDCB(,RPARC)    GET DCB/ACB              YM2869
         L     RA,CVTPTR                CVT                      YM2869
         L     RA,CVTTCBP-CVT(,RA)      TCB WORDS                YM2869
         L     RA,K4(,RA)               CURRENT TCB              YM2869
         USING TCB,RA                                            YM2869
         MODESET EXTKEY=RBT234,WORKREG=1 USER KEY                YM2869
         TM    DCBMACR,DCBMEXCP         EXCP                     YM2869
         BO    OIN13250                 BR IF YES                YM2869
         TM    DCBDSRG2,ACBDORGA        ACB                      YM2869
         BZ    OIN13250                 BR IF NO                 YM2869
         TM    ACBINFLG-IFGACB(RDCB),(ACBCAT+ACBSCRA)           Z30SSRL
*                                       IS IT CATALOG OR SCRA   Z30SSRL
         BZ    OIN13250                 BR IF NO                 YM2869
         MODESET EXTKEY=DATAMGT         KEY OF DATA MANAGEMENT   YM2869
         TESTAUTH KEY=YES               CALLER IN SYSTEM KEY     YM2869
         LTR   RF,RF                    RETURN CODE              YM2869
         BNZ   OIN13250                 BR IF NOT IN SYSTEM KEY  YM2869
         DROP  RA                                                YM2869
OIN10200 EQU   *                        LOOP FOR EACH DCB
         XC    WTGENTRY,WTGENTRY        CLEAR WTG TABLE ENTRY    A39979
         L     RDCB,PLISTDCB(,RPARC)    LOAD CURRENT DCB ADDR
*                                                                Y02082
*        MAKE SURE THIS DCB IS NOT PREVIOUSLY DUPLICATED IN THE  Y02082
*        PARAMETER LIST                                          Y02082
*                                                                Y02082
         DROP  RWTGC                    DROP WTGC TEMPORARILY    Y02082
         LA    R1,WTGENTRY              FIRST DCB'S WTG ENTRY    Y02082
         USING WTGENTRY,R1              TEMPORARY USING FOR R1   Y02082
OIN10220 EQU   *                        PROCESS EACH DCB         Y02082
         CR    R1,RWTGC                 AT CURRENT ENTRY YET     Y02082
         BE    OIN10225                 BR IF YES-NO DUPLICATE   Y02082
         L     RCORE,WTGCORE-K1         GET WORKAREA IF PRESENT  Y02082
         LA    RCORE,K0(,RCORE)         CLEAR HIGH BYTE          Y02082
         LTR   RCORE,RCORE              IS THERE A WORKAREA      Y02082
         BZ    OIN10222                 BRANCH IF NO             Y02082
         CLM   RDCB,B'0111',DXUDCBAD+K1 IS CURRENT DCB BEING     Y02082
*                                       PROCESSED ALREADY        Y02082
         BE    OIN10400                 BR IF YES-DON'T DO IT    Y02082
*                                       AGAIN                    Y02082
OIN10222 EQU   *                        GET NEXT ENTRY           Y02082
         LA    R1,L'WTGENTRY(,R1)       GO TO NEXT ENTRY         Y02082
         B     OIN10220                 CHECK NEXT ENTRY         Y02082
         DROP  R1                       R1 NO LONGER NEEDED      Y02082
         USING WTGENTRY,RWTGC           REESTABLISH RWTGC USING  Y02082
OIN10225 EQU   *                        GET WORK AREA            Y02082
         L     RA,CVTPTR                GET CVT ADDRESS          Y02082
         L     RA,CVTTCBP-CVT(,RA)      ADDR OF TCB POINTERS     Y02082
         L     RA,K4(,RA)               GET CURRENT TCB ADDR     Y02082
         USING TCB,RA                   PROVIDE ADDRESSABILITY   Y02082
         MODESET EXTKEY=RBT234,WORKREG=15 USER KEY               Y02082
         DROP  RA                                                Y02082
         TM    DCBOFLGS,DCBOFOPN+DCBOFIOF OPEN OR BUSY BITS ON?  Y02134
         BNZ   OIN10400                 BR IF YES-GET NEXT DCB   Y02134
*        DETERMINE SIZE OF DCB/ACB FOR COPYING IT INTO WORKAREA  Y02134
         MODESET EXTKEY=DATAMGT         ASSUME KEY 5             Y02082
         IECRES GET,LV=OPENSIZE,PREFIX=YES,STM=(2,14,WTGPREFX),  Y02134*
               ID=OPWA                                           Y02144
         LR    RCORE,R1                 ESTABLISH WORKAREA BASE  Y02134
         ST    RCORE,WTGCORE-K1         SAVE IN WTG TABLE ENTRY  Y02134
         ST    RC,DXATCOM3              SAVE RRPLIST PTR IN W/A  Y02144
*        INITIALIZE WORKAREA WITH CONTROL BLOCK POINTERS AND     Y02134
*        COPY DCB INTO WORKAREA                                  Y02134
         IECRES INIT,DCBCOPY=TOWKAR,DEB=NO,STM=(3,14,WTGPREFX),  Y02134*
               PREFIX=WTGPREFX                                   Y02082
         CLI   DXWCOPYE,K0              WAS COPY/INIT OK         Y02082
         BE    OIN10228                 BRANCH IF YES            Y02082
         CLI   DXWCOPYE,K2              WAS DDNAME MISSING       Y02082
         BNE   OIN10350                 BRANCH IF NO-SOME OTHER  Y02082
*                                       REASON                   Y02082
*
***********************************************************************
*
*  WRITE  'IEC130I DDNAMEXX DD STATEMENT MISSING'  ERROR MESSAGE
*
*                                                                X02989
*  SET ERROR FLAG FOR ACB                                        X02989
*                                                                X02989
         TM    DCBMACR,DCBMEXCP         IS ACCESS METHOD EXCP    X02989
         BO    OIN10227                 BRANCH IF YES            X02989
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  X02989
         BNO   OIN10227                 BRANCH IF NO             X02989
         USING IFGACB,RACB              DEFINE BASE TO ACB       X02989
         MVI   ACBERFLG,VSONODDN        SET ACB ERROR FLAG       X02989
*                                       TO DD NAME NOT IN TIOT   X02989
         USING IHADCB,RDCB              DEFINE BASE TO DCB       X02989
OIN10227 EQU   *                        ISSUE MESSAGE            X02989
         LR    R1,RCORE                 MSG ADDR FOR WTO         Y02134
         MVC   0(OIN1500L,R1),OIN1500K  MOVE MSG TO WORKAREA     Y02134
         MVC   K12(L'DCBDDNAM,R1),DCBDDNAM MOVE DDNAME TO MSG    Y02134
*
         WTO   MF=(E,(1))               WRITE MESSAGE TO PROGRAMMER
*
         B     OIN10350                 BR TO PROCESS NEXT DCB   Y02134
         EJECT
OIN10228 EQU   *                        CONTINUE                 Y02028
         TM    DCBMACR,DCBMEXCP         IS ACCESS METHOD EXCP    X02989
         BO    OIN10240                 BR IF YES                X02989
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  X02989
         BNO   OIN10240                 BR IF NO                 X02989
         USING IFGACB,RDCB              DEFINE BASE TO ACB       X02989
         TM    ACBOFLGS,ACBOPEN         IS ACB ALREADY OPEN      X02989
         BNO   OIN10230                 BR IF NO                 X02989
         MVI   ACBERFLG,VSOACBOP        SET ACB ALREADY OPEN     X02989
*                                       ERROR FLAG               X02989
         B     OIN10350                 BR TO PROC NEXT ACB/DCB  Y02134
OIN10230 EQU   *                        CLEAR ERROR              X02989
         XC    ACBERFLG,ACBERFLG        ZERO ACB ERROR FLAG      X02989
         B     OIN10300                 BR TO CONTINUE           X02989
         USING IHADCB,RDCB              REDEFINE BASE TO DCB     X02989
OIN10240 EQU   *                        TEST IF ALREADY OPEN     X02989
         TM    DCBOFLGS,DCBOPEN         IS DCB ALREADY OPEN      X02989
         BO    OIN10350                 BR IF YES                Y02134
OIN10300 EQU   *                        ERROR ENCOUNTERED        X02989
         TM    DCBOFLGS,DCBOCON         CONCATENATION BIT = 1    Y02082
         BO    OIN10350                 YES, GO FREE WORK AREA   Y02082
         TM    DCBOFLGS,DCBOLOCK        IS DCB NOT-LOCKED BIT ON
         BO    OIN10600                 BR IF YES                Y02134
*
OIN10350 EQU   *                         FREE WORKAREA           Y02134
         NI    DCBOFLGS,X'FF'-DCBOBUSY  RESET BUSY BIT           Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(2,14,WTGPREFX)          Y02082
         XC    WTGENTRY,WTGENTRY        NO PROCESSING THIS DCB   Y02134
OIN10400 EQU   *                        GET NEXT DCB
         MODESET EXTKEY=DATAMGT         ASSUME KEY 5             Y02082
         TM    PLISTOPT(RPARC),LASTNTRY  CHECK FOR LAST ENTRY
         LA    RPARC,K4(,RPARC)         INCR TO NEXT DCB IN PARM LIST
         LA    RWTGC,L'WTGENTRY(,RWTGC) ADVANCE WTG ENTRY        A39979
         BZ    OIN10200                 BR IF NOT LAST ENTRY     A39979
         B     OIN13000                 BR TO EXIT OR XCTL       A39979
*
***********************************************************************
*
*  DCB NEEDS TO BE OPENED.
*  SEARCH TIOT FOR MATCHING DDNAME.
*
OIN10600 EQU   *                        INITIALIZE FOR NEXT LOAD
         MVC   WTGIDTTR-WTGENTRY(L'WTGIDTTR,RWTGC),OPENNEXT 3A   Y02080
         XC    DXREGE,DXREGE            IND INIT ENTRY 193A      Y02080
         XC    DXREG0,DXREG0            IND NO ERROR             Y02080
*                                                                X02989
*  IF OPEN IS FOR VSAM CATALOG, BYPASS TIOT SEARCH               X02989
*                                                                X02989
         TM    DCBMACR,DCBMEXCP         IS ACCESS MEHOD EXCP     X02989
         BO    OIN10650                 BR IF YES, NOT AN ACB    X02989
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  X02989
         BNO   OIN10650                 BR IF NO                 X02989
*  IS ACB FOR VSAM CATALOG                                     @Y30DSDT
         TM    ACBINFLG-IFGACB(RDCB),ACBCAT+ACBSCRA CATLG/SCRA  Z30SSRL
         BZ    OIN10640                 BR IF NO               @Y30DSDT
OIN10620 EQU   *                        PREPARE TO XCTL         Z30SSRL
         OI    DCBOFLGS,DCBOBUSY        SET BUSY BIT ON          X02989
         MVC   WTGIDTTR-WTGENTRY(L'WTGIDTTR,RWTGC),VSAMCATL VSAM Y02080
         MVC   DXRETMOD,OPENNEXT        SET RETURN TO 193A       Y02080
         XC    DXRETCOD,DXRETCOD        SET 193A INIT INDR       Y02080
         B     OIN11500                 BR TO GET WORK AREA      X02989
OIN10640 EQU   *                        TEST FOR SPECIAL DDNAME
         CLC   ACBDDNM-IFGACB(L'ACBDDNM,RDCB),=X'FF00000000000000'
*                                       TEST FOR SPECIAL DDNAME  Y02004
         BNE   OIN10650                 BRANCH IF NOT VTAM      ZA00705
         USING IFGACB,RACB              ADDRESS THE ACB         ZA00705
         MVI   ACBAMETH,ACBVTAM         FLAG VTAM ACCESS METHOD ZA00705
         USING IHADCB,RDCB              RESTORE DCB ADDRESSING  ZA00705
         B     OIN11600                 BRANCH TO COPY VTAM ACB ZA00705
*
OIN10650 EQU   *                        CONTINUE                 X02989
         L     RTIOT,DXTIOTAD           GET TIOT ENTRY ADDR      Y02134
*
OIN11300 EQU   *                        EXCP NOT ALLOWED FOR SUBSYSTEM
         TM    TIOELINK,TIOTSPOL        IS THIS A SPOOLED DATA SET
         BNM   OIN11400                 NO, BR TO CONTINUE NORMALLY
         TM    DCBMACR,DCBMEXCP         IS ACCESS METHOD EXCP
         BZ    OIN11400                 NO,BR TO CONTINUE
*
***********************************************************************
*
*   WRITE  'IEC132I DDNAMEXX, MACRF=E WAS SPECIFIED FOR A SYSIN OR
*   SYSOUT DATA SET' ERROR MESSAGE
*
         LR    R1,RCORE                 MSG ADDR FOR WTO         Y02134
         MVC   0(OIN1500N,R1),OIN1500M  MOVE MSG TO WORKAREA     Y02134
         MVC   K12(L'DCBDDNAM,R1),DCBDDNAM MOVE DDNAME TO MSG    Y02134
         WTO   MF=(E,(1))               WRITE MSG TO PROGRAMMER
         B     OIN10350                 BR TO PROCESS NEXT DCB   Y02134
*
*  THIS DCB IS OPENABLE.                                         Y02134
*  INITIALIZE CONTROL BLOCKS IN MAIN WORK AREA.
*
OIN11400 EQU   *                        CALCULATE TIOT OFFSET
         LR    RF,RTIOT                 CALC TIOT DD ENTRY OFFSET
         L     RET,DXTCBADR             GET TCB ADDRESS          Y02134
         L     RET,TCBTIO-TCB(RET)      GET TIOT ADDRESS         Y02134
         SR    RF,RET                   FROM START OF TIOT
         STH   RF,DCBTIOT               STORE TIOT OFFSET IN DCB
         TM    DCBMACR,DCBMEXCP         IS ACCESS MEHOD EXCP    Z30SSRL
         BO    OIN11500                 BR IF YES, NOT AN ACB   Z30SSRL
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB Z30SSRL
         BNO   OIN11500                 BR IF NO                Z30SSRL
         TM    ACBINFLG-IFGACB(RDCB),ACBUCRA IF IT IS UCRA      Z30SSRL
         BO    OIN10620                 BRANCH TO XCTL          Z30SSRL
OIN11500 EQU   *                        MOVE MACRF, TURN ON OPEN GO SW
         MVC   DCBMACRF,DCBMACR         MOVE MACRF
*
OIN11600 EQU   *                        INDICATE OPEN IN PROGRESS
         OI    DCBOFLGS,DCBOBUSY        SET DCB BUSY BIT ON
         LR    RD,RCORE                 SET OPEN GO SWITCH ON    Y02080
*
OIN11650 EQU   *                        PROCESS                  Y02134
         ST    RCORE,DCBDEBAD           SAVE CORE ADDR IN DCB DEB SLOT
         MVC   DCBIFLGS,DCBIFLG         MOVE IN DCB IOS FLAGS
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,WTGPREFX) UPDATE   YM5702*
                                        THE USER'S DCB           YM5702
         TM    DCBMACR,DCBMEXCP         IS ACCESS METHOD EXCP    XM1037
         BO    OIN11670                 BR IF YES, NOT ACB       X02989
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  X02989
         BNO   OIN11670                 BR IF NO                 X02989
         USING IFGACB,RACB              ADDRESS THE ACB          Y02004
         CLI   ACBAMETH,ACBVTAM         IS ACB FOR VTAM?        ZA00705
         BE    OIN10400                 BRANCH IF YES           ZA00705
         TM    ACBINFLG,(ACBCAT+ACBSCRA+ACBUCRA)                Z30SSRL
*                                       IF CATALOG/SCRA/UCRA    Z30SSRL
         BZ    OIN11670                 BR IF NO                Z30SSRL
         MVC   DXWORK1,ACBINFLG         SET FLAG                Z30SSRL
         B     OIN10400                 BR TO NEXT DCB/ACB       X02989
         EJECT
         USING IHADCB,RDCB              RESTORE DCB ADDRESSING   Y02004
*                                                                Y02004
**************************************************************** Y02082
*                                                                Y02082
**  1. THE FOLLOWING LABEL (IGC0101I) IS THE ENTRY POINT TO      Y02082
**     OPEN FROM CLOSE FOR UNLIKE CONCATENATION PROCESSING.      Y02082
**  2. REGISTER R1 CONTAINS A POINTER TO A SINGLE-MEMBER         Y02082
**     OPEN PARAMETER LIST.                                      Y02082
**  3. THE EOV WORK AREA AND WTG TABLE WHICH WERE PASSED TO      Y02082
**     CLOSE ARE NOW PASSED TO OPEN, WITH REGISTERS RCORE AND    Y02082
**     RWTG ALREADY INITIALIZED WITH THE WORK AREA ADDRESS AND   Y02082
**     THE WTG TABLE ADDRESS, RESPECTIVELY.                      Y02082
*                                                                Y02082
IGC0101I EQU   *                        SECONDARY ENTRY POINT    Y02082
         BALR  RBASE,R0                 ESTABLISH BASE AT TOP    Y02082
OIN11665 EQU   *                        CALCULATE TOP            Y02082
         LA    RBASE,0(RBASE)           INSURE HI-ORDER BYTE = 0 Y02082
         LA    RF,OIN11665-OIN00000     SET RF FOR BASE REG CALC Y02082
         SR    RBASE,RF                 SET RBASE AS BASE REG    Y02082
*                                                                Y02082
         LR    RPAR,R1                  LOAD PARM LIST ADDRESS   Y02082
         LR    RPARC,RPAR               INIT CURR PARM LIST ADDR Y02082
         L     RDCB,PLISTDCB(,RPARC)    GET DCB ADDRESS          Y02082
         LA    RWTGC,WTGENTRY-WTG(,RWTG) INIT CURR WTG ADDRESS   Y02082
         MVC   WTGIDTTR-WTGENTRY(L'WTGIDTTR,RWTGC),OPENNEXT 3A   Y02080
         L     RC,DXATCOM3              GET RRPLIST PTR          Y02144
         MVI   RRFUNCTN,RRFOPEN         INDICATE OPEN FUNCTION   Y02144
         LR    RD,RCORE                 SET GO SWITCH ON         Y02082
         L     RB,CVTPTR                GET CVT ADDRESS          Y02082
         L     RTIOT,DXTIOTAD           GET NEXT TIOT ENTRY ADDR Y02082
*                                       AS SET UP BY IFG0202L    Y02082
*
*        A NEW COPY OF THE DCB MUST BE CREATED - THE DEVICE      YM7983
*        TYPE AND, HENCE, THE SIZE OF THE DCB MAY HAVE CHANGED   YM7983
*
         L     RB,DXUDCBAD              SAVE USER DCB ADDRESS    YM7983
         ICM   RB,B'1000',DXUKEY        SAVE USER KEY            YM7983
         MVC   DXUDCBAD,DXPDCBAD        USER DCB = COPY DCB SO   YM7983
*                                       INIT BUILDS NEW COPY     YM7983
         MVI   DXUKEY,K5                SET KEY TO THAT OF COPY  YM7983
         IECRES INIT,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX) NEW COPY YM7983
*        REG 2 RETURNED POINTING TO NEW COPY OF OLD COPY         YM7983
         STCM  RB,B'0111',DXUDCBAD+K1   REESTABLISH USER DCB ADD YM7983
         STCM  RB,B'1000',DXUKEY        REESTABLISH USER KEY     YM7983
*        MERGE REAL USER DCB INTO NEW COPY                       YM7983
         IECRES INIT,DCBCOPY=TOWKAR,STM=(2,14,WTGPREFX) UPD.COPY YM7983
*        COPY CREATE CLOBBERS DXREG9-DXREGE, DXREG0-DXREG1       YM8542
         XC    DXREGE,DXREGE            IND INIT ENTRY 193A      YM8542
         XC    DXREG0,DXREG0            IND NO ERROR             YM8542
*
OIN11670 EQU   *                        CONTINUE                 X02989
         ST    RCORE,DCBDEBAD           SAVE CORE ADDR IN DCB    X02989
*
*        CONSTRUCT CONTROL BLOCKS TO READ JFCB
*
*        DEB, FIRST 36-BYTE
*
*              LOAD CVT POINTER TO AVOID DEPENDENCY ON RB STILL  Y02134
*              CONTAINING IT SINCE LAST TIME IT WAS LOADED       Y02134
         L     RB,CVTPTR                LOAD CVT ADDRESS         Y02134
         L     R1,CVTSVDCB-CVT(,RB)     ADDRESS OF SVCLIB DCB    Y02080
         L     R1,DCBDEBAD-IHADCB(,R1)  ADDR OF TASK SCHEDULER DEB
         MVC   DXDEB(K48),0(R1)         COPY TASK SCHEDULER DEB
         MVI   DXDEB+(DEBNMEXT-DEBBASIC),K1 SET NO. EXTS TO 1   YA03003
         MVC   DXDEBAPP,CVTXAPG-CVT(RB) SET DUMMY APP V T        Y02080
         MVI   DXDEBMOD,K0              SET FILE MASK TO ZERO    YM6841
         XC    DXDEBECB+K1(K3),DXDEBECB+K1  ZERO PURGE ECB ADDR  M0032
         LA    RF,DXDCB                 STORE ADDR OF WORK DCB IN WORK
         ST    RF,DXDCBAD               DEB FOR EXCP VALIDITY CHECK
         ST    RF,IOBWGHT               STORE WORK DCB ADDR IN IOB
         MVI   DXDEBID,DEBIDENT         DEB ID
*
*        ECB, NEXT 4-BYTE
*
*
*        DCB, NEXT 8-BYTE
*
         LA    RF,DXDEB                 STORE ADDR OF WORK DEB IN WORK
         ST    RF,DXDCBDEB              DCB FOR EXCP VALIDITY CHECK
*
*        IOB, NEXT 32-BYTE
*
         MVI   IOBFLAG1,IOBUNREL        MAKE I/O REQUESTS UNRELATED
         LA    RF,DXECB                 STORE ADDR OF WORK ECB IN
         ST    RF,IOBECBPT              WORK IOB
         LA    RF,DXCCW1                STORE START CCW ADDR IN
         ST    RF,IOBSTART-K1           WORK IOB
*
         LA    RET,TIOEJFCB             JFCB PREFIX POINTER      Y02134
         IECRES LOCJFCB,(RET)           LOCATE JFCB              Y02134
*                                                                Y02134
         MVC   DXJBF,0(RET)             MOVE JFCB TO WORK AREA   Y02134
*
         ST    RTIOT,DXREG9             SAVE RTIOT ACROSS XCTL   A39979
*
         MVI   DXECB,K32                INDICATE SUCCESSFUL READ
         TM    JFCBMASK+K6,JFCTRACE     IS TRACE ROUTINE DESIRED Y02080
         BZ    OIN10400                 NO, GO TO NEXT PARM      Y02080
         OI    WTGPATHS+K1,WTGTRACE     YES, SET TRACE INDR ON   Y02080
         B     OIN10400                 PROCESS NEXT PARM.
*
***********************************************************************
*
*  IF NO DCB CAN BE OPENED, FREEMAIN WHERE-TO-GO TABLE
*  AND EXIT TO CALLER OF OPEN
*
OIN13000 EQU   *                        CHECK FOR ERROR
         LTR   RD,RD                    CHECK THE GO SWITCH
         BNZ   OIN13200                 BR IF ON
*
         IECRES FREE,PREFIX=WTG,A=(RWTG) FREMAIN WTG TABLE       Y02080
*
         LA    RF,K8                    SET RETURN CODE TO 8     X02989
*
*                                                                Y02080
*        RETURN TO CALLER                                        Y02080
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
*                                                                Y02080
*
***********************************************************************
*
*  INITIALIZE WHERE-TO-GO TABLE BASE FOR XCTL
*
OIN13200 EQU   *                        SET UP FOR NEXT LOAD     A39979
         MVC   WTGMODNM,OIN1500A        SET LOWEST OPEN NAME     Y02080
*
*  XCTL TO NEXT LOAD OF OPEN
*
         OI    RRFLAGS2,RRFFIN1         SET 1ST LOAD COMPLETED   Y02144
         LR    RCORE,RD                 GET LAST VALID WORK AREA Y02080
         LM    RTIOT,RET,DXREG9         REST REGS FOR THIS DCB   Y02080
         LM    R0,R1,DXREG0             FOR BRANCH QUEUED        Y02080
         L     R5,CVTPTR                PTR CVT                  Y02080
         L     R5,CVTDMSR-CVT(,R5)      ADDRESS OF RESIDENT RTN  Y02080
         IECRES XCTL                    BRANCH QUEUED            Y02080
*
         DROP  RWTG
*
OIN13250 EQU   *                        SYSZTIOT ENQ ERROR       YM2869
*     THE CALLER OF OPEN HOLDS THE TIOT RESOURSE EXCLUSIVELY.  @ZA29752
*     THIS SHOULD NEVER VALIDLY HAPPEN AND CANNOT BE ALLOWED.  @ZA29752
         SR    RF,RF                    ZERO REG               @ZA29752
         SR    RC,RC                    ZERO REG               @ZA29752
         LA    RF,K0                    RETURN CODE            @ZA29752
         L     RC,ABND50D               ABEND CODE             @ZA29752
         ABEND (RC),DUMP                                       @ZA29752
***********************************************************************
*
*        CONSTANTS
*
ABND50D  DS    0F                                              @ZA29752
         DC    XL4'0000050D'                                   @ZA29752
OIN1500A DC    CL8'IFG0190 '            LOWEST OPEN NAME         Y02080
OIN1500K WTO   'IEC130I DDNAMEXX DD STATEMENT MISSING',MF=L,           X
               DESC=6,                  JOB STATUS                     X
               ROUTCDE=(11)             PROGRAMMER INFORMATION
OIN1500L EQU   *-OIN1500K               LENGTH OF ERROR MESSAGE
         DS    0F
ONEK     DC    X'00000400'              1024 BYTES FOR LENGTH CALC
OIN1500M WTO   'IEC132I DDNAMEXX, MACRF=E SPECIFIED FOR A SYSIN OR SYSOX
               UT DATA SET',MF=L,                                      X
               DESC=6,                  JOB STATUS                     X
               ROUTCDE=(11)             PROGRAMMER INFORMATION
OIN1500N EQU   *-OIN1500M               LENGTH OF MESSAGE
*
         XCTLTABL ID=(OPEN,IGC0001I,OPENNEXT,3A,VSAMCATL,1X,   @Y30DSDT*
               VSAMVRP,IFG0192Y),SVC=019,BRT=YES,LENGTH=       @Y30DSDT
*
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
*
         END
