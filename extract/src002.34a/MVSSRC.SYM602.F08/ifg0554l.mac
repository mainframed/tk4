         TITLE 'IFG0554L, ALIAS IFG0195F/EOV, OPEN - DA INPUT USER HEADX
               ER/TRAILER LABELS'
         COPY  LCGASMSW
IFG0554L CSECT
         ENTRY IFG0195F                                          Y02080
IFG0195F EQU   IFG0554L                 ALLIAS ENTRY POINT       Y02080
***********************************************************************
*                                                                     *
*                                                                     *
*          VS2 RELEASE 037 DELETIONS/CHANGES                          *
*                                                                     *
*0000                                                          @ZA13594
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0554L (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME = EOV/OPEN DA INPUT USER HEADER LABELS             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        THIS MODULE READS USER HEADER/TRAILER LABELS FOR OPEN-       *
*        EOV UNDER CONTROL OF THE CALLER'S INPUT USER HEADER/TRAILER  *
*        LABEL ROUTINE.                                               *
*        1) A 152 BYTE USER LABEL WORK AREA IS OBTAINED FOR EOV FROM  *
*        FETCH PROTECTED SUBPOOL 229 IN DATA MANAGEMENT KEY, AND      *
*        A 96 BYTE USER LABEL WORK AREA IS OBTAINED FOR THE CALLER    *
*        FROM FETCH PROTECTED SUBPOOL 229 IN THE CALLER'S KEY.        *
*        2) USER LABELS ARE READ AND PRESENTED TO THE CALLER UNTIL    *
*        AN EOF IS ENCOUNTERED, THE CALLER INDICATES TERMINATION OF   *
*        PROCESSING VIA A RETURN CODE, OR THE MAXIMUM NUMBER OF 8     *
*        USER LABELS HAVE BEEN PROCESSED.                             *
*        3) THE CALLER RETURNS TO THIS MODULE (AFTER PROCESSING EACH  *
*        USER LABEL) WITH A RETURN CODE IN REGISTER 15:               *
*        0 - TERMINATE USER LABEL PROCESSING.                         *
*        4 - CONTINUE USER LABEL PROCESSING                           *
*        8 - WRITE UPDATED USER LABEL AND TERMINATE                   *
*            USER LABEL PROCESSING.                                   *
*        12 - WRITE UPDATED USER LABEL AND CONTINUE                   *
*             USER LABEL PROCESSING.                                  *
*        RETURN CODES 8 AND 12 MAY ONLY BE USED IF THE DATA SET IS    *
*        PHYSICAL SEQUENTIAL AND OPENED FOR UPDATE, OR PHYSICAL       *
*        SEQUENTIAL OPENED FOR OUTPUT/OUTIN WITH DISP = MOD, OR       *
*        DSORG = DA OPENED FOR UPDATE OR OUTPUT.                      *
*        4) IF NO USER LABEL TRACK WAS ALLOCATED, THE CALLER'S EXIT   *
*        ROUTINE IS ENTERED WITH THE BUFFER POINTER SET TO ZERO. IF   *
*        NO LABELS CAN BE READ, EXIT TO CALLER'S EXIT ROUTINE         *
*        WITH THE LABEL BUFFER POINTER = ZERO.                        *
*        5) IF AN I/O ERROR OCCURS WHEN READING USER LABEL, THE       *
*        CALLER'S ROUTINE IS ENTERED AGAIN WITH BIT 0 OF THE          *
*        FLAG BYTE SET TO 1, AND A POINTER TO THE STATUS INFORMATION  *
*        IN THE WORK AREA IOB. ON RETURN, THE RETURN CODE IS IG-      *
*        NORED AND NORMAL PROCESSING RESUMES FOR EOV.                 *
*        8) IF AN I/O ERROR OCCURS WHILE WRITING THE UPDATED USER     *
*        LABEL, THE CALLER'S EXIT ROUTINE IS ENTERED WITH BITS 0      *
*        AND 1 OF THE FLAG BYTE IN THE PARAMETER LIST SET TO 1, AND   *
*        A POINTER TO THE STATUS INFORMATION IN THE WORK AREA IOB.    *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0554L                                                     *
*        IFG0195F - ALIAS                                             *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
*                                                                     *
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        DEBDCBAD POINTING TO THE COPIED DCB,                         *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        EXIT TO MODULE WHOSE ID/EPA IS IN DXRETMOD. THIS IS          *
*        NORMALLY THE CALLER OF THIS MODULE OR THE MODULE THAT THE    *
*        CALLER OF THIS MODULE WOULD HAVE GONE TO HAD THERE NOT BEEN  *
*        USER LABEL PROCESSING.                                       *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        CVT                                                          *
*        DEB                                                          *
*        JFCB                                                         *
*        PSA                                                          *
*        TCB                                                          *
*        RB                                                           *
*                                                                     *
* TABLES =                                                            *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES LOAD                                                  *
*        IECRES GET                                                   *
*        IECRES INIT                                                  *
*        IECRES FREE                                                  *
*        IECRES UEXIT                                                 *
*        EXCP                                                         *
*        WAIT                                                         *
*        SETLOCK                                                      *
*        ENQ                                                          *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
         IECDSECS CVT,TCB,RB,DCB,PSA,   DEFINE DSECTS TO BE      Y02082*
               MAIN,DEB,USERLAB,WTG,    EXPANDED AT THE END      Y02144*
               PREFX,RRPL                                        Y02144
*
         IECEQU ,                       DEFINE EQUATES
*
         USING IHADCB,RDCB              DEFINE BASE TO DCB
         USING FORCORE,RCORE            DEFINE BASE TO DCB WORK AREA
         USING WTG,RWTG                 DEFINE BASE TO XCTL/WTG TABLE
         USING DEB,RDEB                 DEFINE BASE FOR DEB
*
         BALR  RBASE,0                  ESTABLISH BASE REGISTER
         USING *,RBASE                  DEFINE BASE REGISTER
*
***********************************************************************
*
*                                                                Y02082
*     OBTAIN CORE FOR USER LABEL WORK AREAS                      Y02082
*                                                                Y02082
         IECRES GET,LV=USERLDM,PREFIX=YES,SP=K229,               Y02082*
               STM=(2,14,WTGPREFX),ID=ULWA                       Y02144
         LR    RUCB,R1                  ADDR OF GOTTEN CORE      Y02082
         USING ULDMWK,RUCB                                       Y02082
*                                                                Y02082
         IECRES GET,LV=USERLU,PREFIX=NO,KEY=USER,SP=K229,        Y02082*
               STM=(2,14,WTGPREFX)                               Y02082
         LR    R9,R1                    ADDR OF GOTTEN CORE      Y02082
         USING ULUWK,R9                                          Y02082
         MODESET EXTKEY=DATAMGT         DATA MANGEMENT KEY       Y02082
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0195F)
         BNE   ULI01A                   BR IF NO
         MVC   DXVOLMT2(K5),DXCCW7      SAVE DSCB CCHHR FOR OPEN
*
ULI01A   EQU   *                        NOT OPEN
         CLI   DSCEXTYP,ULEXT           IS FIRST EXTENT FOR USER LABELS
         BNE   ULT300                   BR IF NO TO INFORM TO USER
*
***********************************************************************
*
*  SET UP CHANNEL PROGRAM AND WORK AREA TO READ FIRST HEADER / TRAILER
*  LABEL
*
*        READ COUNT        INTO ULWK8
*        SEARCH KEY EQ     KEY IN ULWK6 = 'UHL1'/'UTL0'
*        TIC *-16
*        READ DATA (LABEL) INTO BUFFER
*
         XC    DXCCW1(K32),DXCCW1       CLEAR CCW AREA
         LA    R1,ULWK8                 POINT TO AREA INTO WHICH
         ST    R1,DXCCW1                COUNT IS READ
         LA    R1,ULWK6                 POINT TO AREA CONTAINING
*                                       SEARCH ARGUMENT
         ST    R1,DXCCW2                FOR SEARCH KEY EQUAL
         LA    R1,DXCCW1                POINT TO READ COUNT CCW
         ST    R1,DXCCW3                IN TIC
         LA    R1,ULDMBUFR              POINT TO LABEL BUFFER    Y02082
         ST    R1,DXCCW4                IN READ DATA
         OC    DXCCW1(K32),ULCP1        OR IN CMND, FLAGS, LENGTH
*
*        INITIALIZE IOBDADAD WITH R=0
*
*                                       MBB SET BEFORE ENTRY
         MVC   DXDAADDR+K3(K4),DSCLOWLM  CCHH FROM START OF 1ST EXTENT
         MVI   DXDAADDR+K7,K0           START SEARCH AT R0
*
         TM    DCBDSORG,DCBORGDA        IS THIS DIRECT ORGANIZATION
         BZ    ULT040                   BR IF NO
*
         MVC   DXDEBUCB+1(K3),DXUCBADR+1 GET FIRST UCB ADDRESS @ZA13594
*                                                              @ZA13594
         MVC   ULDMBUFR(ULT6000L),ULT6000K MOVE PARM LIST        YM5789
         STH   RUCB,ULDMBUFR+ULT6000L   MOVE UCBADDR AND CCHH    YM5789
         MVC   ULDMBUFR+K2+ULT6000L(K6),DXDAADDR+K1 TO MINOR NAM YM5789
         ENQ   (,ULDMBUFR+ULT6000L),MF=(E,ULDMBUFR) ENQ ON ULTRK YM5789
         L     RC,DXATCOM3              GET RRPLIST PTR          Y02144
         USING RRPLIST,RC                                        Y02144
         OI    RRFLAGS1,RRFENQUL        SHOW ENQ'D ON UL TRACK   Y02144
*
ULT040   EQU   *                        NO ENQ NEEDED
         MVC   ULWK6,UHLCONST           SET UP SEARCH ARG = UHL1
         NI    DXREGC,ALLBITS-LASTNTRY  TURN OFF HIGH ORDER BIT SA55619
         CLI   DXREGC,XLIUHL            IS THIS INPUT UHL EXIT  SA55619
         BE    ULT040B                  BR IF YES               SA66619
         MVC   ULWK6,UTLCONST           SET UP SEARCH ARG = UTL0
ULT040B  EQU   *                        INPUT UHL EXIT
         MVC   ULWK10,ULWK6             NECESSARY SINCE FIRST CHANNEL
*                                       PROGRAM DOES NOT READ KEY
         OI    ULWK2,X01                SET FIRST READ SWITCH
*
*        READ FIRST HEADER / TRAILER LABEL
*
         BAL   RC,ULEXCP                GO READ USER LABEL
*
***********************************************************************
*
*  ESTABLISH CHANNEL PROGRAM FOR SUBSEQUENT USE, THEN TEST
*  FOR I/O ERROR.
*
*  SET UP CHANNEL PROGRAM TO WRITE BACK LABEL AND READ NEXT LABEL
*
*        SEARCH KEY EQ       KEY = UHL(N) / UTL(N)
*        TIC *-8
*        WRITE DATA          WRITE UPDATED LABEL
*        SEARCH ID EQ        ID OF RECORD PRIOR TO UHL(N)  / UTL(N)
*        TIC *-8             CHECK
*        RD CKD    (SKIP)    LABEL JUST WRITTEN
*        RD CKD              READ NEXT LABEL
*
*  WHEN ONLY UPDATING IS PERFORMED, CC FLAG IN RD CKD IS TURNED OFF.
*
*  WHEN NO UPDATING IS PERFORMED,CHANNEL PROGRAM TO READ NEXT LABEL IS
*
*        SEARCH KEY EQ       KEY OF PREVIOUS LABEL
*        TIC *-8
*        RD CKD              READ NEXT LABEL
*
*  PROCEDURE USED BELOW IS TO USE KEY IN ULWK10 (KEY OF LABEL
*  PROCESSED) AS SEARCH ARGUMENT FOR SUBSEQUENT I/O OPERATIONS.
*
         MVC   DXCCW1(K16),DXCCW2       SEARCH KEY CCW TO DXCCW1
*                                       AND TIC *-8 TO DXCCW2
         XC    DXCCW3(K40),DXCCW3       CLEAR REMAINING CCW AREA
*
*  DXCCW3 IS ESTABLISHED AFTER USER RETURNS CODE
         LA    R1,DXDAADDR+K3           ADDR OF IOBADDR+3 (CCHHR) FOR
         ST    R1,DXCCW4                SEARCH ID
         LA    R1,DXCCW4                TIC TO
         ST    R1,DXCCW5                DXCCW4
         LA    R1,ULWK8                 RD CKD INTO
         ST    R1,DXCCW7                ULWK8
         OC    DXCCW4(K32),ULCP3        OR IN CMND, FLAGS, LENGTH
*
***********************************************************************
*
ULT050   EQU   *                        TEST FOR I/O ERROR
         TM    DXECB,ECBCOD7F           TEST IF I/O ERROR
         BNO   ULT200                   BR IF YES
*
         NI    ULWK2,X'FF'-X01          SET 1ST-READ-SW OFF IF ON
         IC    R1,ULWK9                 'R' OF COUNT READ IN
         BCTR  R1,R0                    DECR BY 1 - USED IN ORIENTATION
         STC   R1,DXDAADDR+K7           FOR WRITE VERIFICATION
*
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         MODESET EXTKEY=ZERO            SUPERVISOR KEY           Y02082
*     OBTAIN LOCAL LOCK                                          Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*     VERIFY USER STILL HOLDS USER LABEL WORK AREA               Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULBUFR,ULDMBUFR          COPY LABEL TO USER BUFF  Y02082
*     RELEASE LOCAL LOCK                                         Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         BAL   RD,ULSYNCH               GO TO SYNCH TO USER EXIT RTN
* RETURN IN DATAMGT KEY                                          Y02082
         LTR   RF,RF                    DID USER RETURN A CODE = 0
         BZ    ULT500                   BR IF YES (NO MORE PROCESSING)
*
ULT130   EQU   *                        RETURN CODE NOT ZERO
*  SOME TYPE OF I/O WILL BE INITIATED.  SEARCH WILL BE BASED UPON KEY
*  OF LABEL 'JUST PROCESSED'.
         MVC   ULWK6,ULWK10             SET UP SEARCH ARGUMENT
         XC    DXCCW3,DXCCW3            ENSURE THAT PRVIUS CCW DOES NOT
*        CONFLICT WITH CHANNEL PROGRAM TO BE COMPLETED BELOW.
         CLI   ULRETCOD,READNEXT        DIS USER RETURN A CODE = 4
         BE    ULT150                   BR IF YES TO READ NEXT LABEL
*
*  CHECK IF 8 OR 12 IS A VALID RETURN CODE
         L     RDEB,DCBDEBAD            POINTER TO USER'S DEB
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0195F)
         BNE   ULT135                   BR IF NO, USER'S DEB EXISTS
         LA    RDEB,DXDEB               DURING OPEN USE WORK DEB
ULT135   EQU   *                        NOT OPEN
         TM    DEBOPATB,DEBOPOUT-DEBOPUPD  TEST IF OPENED FOR OUTPUT
         BO    ULT140                   BR IF YES
         BM    ULT500                   BR IF NOT UPDAT OR INPUT
         TM    DEBOPATB,DEBOPUPD        TEST IF OPENED FOR UPDAT
         BO    ULT145                   BR IF YES
         B     ULT500                   BR OPENED FOR INPUT
*
ULT140   EQU   *                        OPENED FOR OUTPUT
         TM    DCBDSORG,DCBORGDA        IF NOT UPDATE, DIRECT DATA SET
         BZ    ULT500                   FOR OUTPUT IS ALSO VALID.
*
*  SET UP THIRD CCW TO WRITE UPDATED LABEL
*
ULT145   EQU   *                        WRITE UPDATED LABEL
         LA    R1,ULDMBUFR              ESTAB WRITE DATA CCW3 TO Y02082
         ST    R1,DXCCW3                WRITE FROM LABEL BUFFER
         OC    DXCCW3,ULCP2             OR IN CMND, FLAGS, LENGTH
*                                                                Y02082
*     COPY UPDATED LABEL TO EOV'S BUFFER                         Y02082
*                                                                Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         MODESET EXTKEY=ZERO            SUPERVISOR KEY           Y02082
*     OBTAIN LOCAL LOCK                                          Y02082
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02082*
               RELATED=('PREVENT FREE USER CORE-RELEASED BELOW') Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
*     VERIFY USER STILL HOLDS USER LABEL WORK AREA               Y02082
         OC    ULUWK(USERLU),ULUWK      PGM CHECK IF NOT         Y02082
         MODESET EXTKEY=ZERO            ASSUME KEY ZERO          Y02082
         MVC   ULDMBUFR,ULBUFR          COPY LABEL FROM USER BUFFY02082
*     RELEASE LOCAL LOCK                                         Y02082
         L     RF,WTGPREFX              POINT TO PREFIX          Y02082
         STM   R0,RET,IECREGSV-IECPREFX(RF) SAVE REGS THRU LOCK  Y02082
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('SEE ABOVE')        Y02082
         LM    R0,RET,IECREGSV-IECPREFX(RF) RESTORE REGS         Y02082
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*
         MVC   ULDMBUFR(K4),ULWK10      MOVE UHLX/UTLX TO BUFFER YM1175
         CLI   ULRETCOD,WRITNEXT        IS LABEL TO BE WRITTEN ONLY
         BE    ULT170                   BR IF YES
         CLI   ULRETCOD,WRITNEXT+READNEXT  IS LABEL TO BE WRITTEN AND
         BE    ULT160                   NEXT LABEL READ, BR IF YES
         B     ULT500                   INVALID CODE RETURNED, END
*                                       PROCESSING IN THIS MODULE
*
*        READ NEXT LABEL
*
ULT150   EQU   *                        READ NEXT LABEL
         CLI   DXREGC,XLIUHL            IS THIS INPUT UHL EXIT  SA55619
         BE    ULT151                   BR IF YES               SA55619
         CLI   ULWK10+K3,C'7'           HAS MAX NO. OF UTL ALREADY
         BNL   ULT500                   BEEN READ, BR IF YES
         B     ULT152                   BR NO TO CONTINUE
ULT151   CLI   ULWK10+K3,C'8'           HAS MAX NO. OF UHL ALREADY
         BNL   ULT500                   BEEN READ, BR IF YES
*        ESTABLISH THIRD CCW TO READ NEXT LABEL
ULT152   LA    R1,ULWK8                 SET RD CKD CCW TO READ INTO
         ST    R1,DXCCW3                AREA STARTING AT ULWK8
         OC    DXCCW3,RDCKD             OR IN CMND, FLAGS, LENGTH
*
ULT155   EQU   *                        GO READ NEXT LABEL (OR WRITE
         BAL   RC,ULEXCP                UPDATED LABEL AND READ NEXT
*                                       LABEL)
         B     ULT050                   GO CHECK FOR ERROR
*
*        WRITE UPDATED LABEL AND READ NEXT LABEL
*
ULT160   EQU   *                        WRITE THEN READ LABEL
         CLI   DXREGC,XLIUHL            IS THIS INPUT UHL EXIT  SA55619
         BE    ULT161                   BR IF YES               SA55619
         CLI   ULWK10+K3,C'7'           HAS MAX NO. OF UTL ALREADY
         BNL   ULT165                   BEEN READ, BR IF YES
         B     ULT162                   BR NO TO CONTINUE
ULT161   CLI   ULWK10+K3,C'8'           HAS MAX NO. OF UHL ALREADY
         BNL   ULT165                   BEEN READ, BR IF YES
ULT162   OI    DXCCW6+K4,CCWCMDCH       ENSURE COMMAND CHAIN FLAG IN
*                                       VERIFICATION RD CKD IS ON
         B     ULT155                   GO PERFORM I/O
*
*        MAXIMUM NUMBER OF LABELS HAVE ALREADY BEEN READ,
*        RETURN CODE CHANGED TO WRITE LABEL ONLY.
*
ULT165   EQU   *                        MAX NO. LABELS READ
         MVI   ULRETCOD,WRITNEXT        CHANGE RETURN CODE TO UPDATE
*
*        WRITE UPDATED LABEL
ULT170   EQU   *                        WRITE UPDATED LABEL
         NI    DXCCW6+K4,X'FF'-CCWCMDCH  TURN OFF CMND CHAIN FLAG IN RD
*                                  CCW THAT PERFORMS WRITE VERIFICATION
*
         BAL   RC,ULEXCP                GO WRITE UPDATED LABEL
*
         TM    DXECB,ECBCOD7F           TEST IF I/O ERROR
         BO    ULT500                   BR IF NO, NO MORE PROCESSING
*
***********************************************************************
*
*  I/O ERROR HAS OCCURRED
*
ULT200   EQU   *                        I/O ERROR PROCESSING
         LA    R1,DXIOB                 PUT PTR TO STATUS INFO IN
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         ST    R1,ULERRPTR              PARAMETER LIST
         MVI   ULERRPTR,ERROR           FLAG ERROR CONDITION(ALSO RESET
*                                       OTHER ERROR FLAGS TO ZERO).
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      Y02082
*  DETERMINE TYPE OF CHANNEL PROGRAM BEING USED WHEN ERROR OCCURRED.
*
         CLI   ULRETCOD,WRITNEXT        IS ERROR ON READ ONLY
         BL    ULT210                   BR IF YES
*                                       (IF ERROR ON FIRST READ,
*                                       ULRETCOD=0, BR TAKEN)
*        EITHER WRITING OR WRITING THEN READING
         MVC   ULWK3+K1(K3),IOBCOMAD+K1  OBTAIN CSW POINTER
         L     R1,ULWK3                 FROM IOB
         LA    R0,DXCCW7+K8             POINT 8 BYTES PAST READ CCW,
         CR    R1,R0                    THEN COMPARE WITH CSW POINTER
         BNE   ULT230                   BR IF ERROR DURING WRITE
*
*  READ ERROR
*
ULT210   EQU   *                        READ ERROR OCCURRED
         SR    R1,R1                    CLEAR REG
         IC    R1,ULWK6+K3              OBTAIN LAST CHAR OF KEY
         TM    ULWK2,X01                TEST IF ERROR ON FIRST READ
         BO    ULT220                   BR IF YES
*                                       RECONSTRUCT KEY AREA
         MVC   ULWK10(K3),UHLCONST      'UHL' TO KEY AREA
         TM    DXREGC,XLIUTL            IS THIS INPUT UTL EXIT
         BNO   ULT040C                  BR IF NO
         MVC   ULWK10(K3),UTLCONST      'UTL' TO KEY AREA
ULT040C  EQU   *                        NOT INPUT UTL EXIT
         LA    R1,K1(R1)                INCREMENT 'N' OF KEY
         STC   R1,ULWK10+K3             AND PLACE IN KEY AREA
*        SET UP BUFFER TO TELL USER WHAT LABEL WE WERE UNABLE TO READ
ULT220   EQU   *                        SET UP BUFFER
         NI    ULWK2,X'FF'-X01          SET 1ST READ SW OFF IF ON
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         MVC   ULBUFR(K3),UHLCONST      'UHL' TO BUFFER
         CLI   DXREGC,XLIUHL            IS THIS INPUT UHL EXIT  SA55619
         BE    ULT040D                  BR IF YES               SA55619
         MVC   ULBUFR(K3),UTLCONST      'UTL' TO BUFFER
         LA    R1,K1(R1)                INCR N BY 1 SINCE START AT UTL0
ULT040D  EQU   *                        INPUT UHL EXIT
         STC   R1,ULBUFR+K3             LABEL NUMBER TO BUFFER
         B     ULT240                   GO TO SYNCH TO USER EXIT RTN
*
*  WRITE ERROR
*
ULT230   EQU   *                        WRITE ERROR
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         OI    ULERRPTR,ERROROUT        FLAG WRITE ERROR CONDITION
ULT240   EQU   *                        SYNCH TO CALLER
         BAL   RD,ULSYNCH1              GO TO SYNCH TO USER
* RETURN IN DATAMGT KEY                                          Y02082
         LTR   RF,RF                    DID USER RETURN A CODE = 0
         BZ    ULT500                   BR IF YES, (NO MORE PROCESSING)
         ST    RF,ULWK1                 SAVE RETURN CODE
         CLI   ULRETCOD,READNEXT        DID USER RETURN A CODE = 4
         BE    ULT130                   BR IF YES, TO READ NEXT LABEL
         B     ULT500                   BR, INVALID CODE RETURNED
*
***********************************************************************
*
*  NO USER LABEL TRACK WAS ALLOCATED FOR THIS DATA SET.
*
ULT300   EQU   *                        NO UL TRACK ALLOCATED
         SR    R1,R1                    ZERO USER LABEL BUFFER PTR
         MODESET KEYADDR=DXUKEY,WORKREG=15 ASSUME USER KEY       Y02082
         XC    ULERRPTR,ULERRPTR        ZERO ERROR INDICATORS
         BAL   RD,ULSYNCH2              GO TO SYNCH TO USER EXIT RTN
* RETURN IN DATAMGT KEY                                          Y02082
         B     ULT510                   BR TO RETURN TO CALLER
*
*
***********************************************************************
*
*        CLOSED SUBROUTINE TO TAKE USER EXIT                     Y02082
*        REGISTER CONTENTS AT ENTRY TO EXIT ARE AS FOLLOWS-      Y02082
*                        R0 - CONTAINS NO MEANINGFUL INFORMATION
*                        R1 - PTR TO PARAMETER LIST
*                    R2-R13 - USER'S CONTENTS BEFORE I/O SUPPORT
*                       R14 - RETURN ADDRESS (SET BY SYNCH)
*                       R15 - USER'S EXIT ROUTINE ADDRESS
*
ULSYNCH  EQU   *                        SYNCH ENTRY 1
         XC    ULERRPTR,ULERRPTR        ZERO ERROR INDICATOR
ULSYNCH1 EQU   *                        SYNCH ENTRY 2
         LA    R1,ULBUFR                PTR TO LABEL BUFFER
ULSYNCH2 EQU   *                        SYNCH ENTRY 3
         ST    R1,ULPARM                PTR TO LABEL BUFFER      Y02082
         L     R1,DXUDCBAD              GET USER'S DCB ADDR      Y02082
         ST    R1,ULPARM+K4             PUT IN PARM LIST         Y02082
         NI    ULDCBPTR,X'FF'-LASTNTRY  INSURE HI-ORDER BIT OF SECOND
*                              PARAMETER IS OFF (WOULD BE ON IF FEOV)
         CLI   DXREGC,XLIUHL            IS THIS INPUT UHL EXIT  SA55619
         BE    UL450                    BR IF YES               SA55619
         L     RDEB,DCBDEBAD            USER'S DEB ADDRESS
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0195F)
         BE    UL450                    BR IF YES
         TM    DCBDSORG,DCBORGDA        IS DSORG DIRECT
         BO    UL425                    BR IF YES, INDICATE EOF SA55619
         CLC   JFCBNVOL,DXVOLSEQ+K1     IS THIS LAST VOLSER      YM5340
         BE    UL425                    BR IF YES TO SET EOV     YM5340
         TM    DSCDSIND,LASTNTRY        LAST VOLUME WITH DATA    YM5340
         BNO   UL450                    BR IF NO                 YM5340
UL425    EQU   *                                                SA55619
         OI    ULDCBPTR,EOFFLG          INDICATE EOF            SA55619
*
UL450    EQU   *                        EOV - NOT EOF
         MODESET EXTKEY=DATAMGT         DCB COPY KEY             Y02082
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT = 0         Y02082
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX)          Y02082
*                                                                Y02082
         LA    R1,ULPARM                POINT TO PARAMETER LIST
         IECRES UEXIT,EXITAD=DXREGC,STM=(2,13,WTGPREFX)          Y02082
         L     RDCB,DXUDCBAD            PT TO CALLER'S DCB       YM3005
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME CALLER'S KEY    YM3005
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  Y02082
         LA    R0,ALLBITS-DCBOBUSY      ISOLATE BUSY BIT MASK    YM3005
         IC    R1,DCBOFLGS              GET CALLER'S OFLGS       YM3005
         MODESET EXTKEY=DATAMGT         DATA MANAGEMENT KEY      YM3005
         L     RDCB,DXPDCBAD            PT TO COPIED DCB         YM3005
         OR    R0,R1                    ISOLATE CALLER BUSY BIT  YM3005
         IC    R1,DCBOFLGS              GET COPIED DCBOFLGS      YM3005
         NR    R1,R0                    UPDTE BUSY BIT TO CALLER YM3005
         STC   R1,DCBOFLGS              UPDATE OFLGS FIELD       YM3005
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT = 1
         ST    RF,ULWK1                 SAVE RETURN CODE
         BR    RD                       RETURN FROM SYNCH EXIT SUBR
         EJECT
***********************************************************************
*
*                   CLOSED SUBROUTINE TO ISSUE I/O OPERATIONS
*
*        IT IS ASSUMED THAT ALL CONTROL BLOCKS HAVE ALREADY BEEN SET UP
*
ULEXCP   EQU   *                        I/O ROUTINE
         EXCP  DXIOB                    UPDATE / READ USER LABEL
*
         WAIT  ECB=DXECB                WAIT FOR I/O TO COMPLETE
*
         TM    IOBSTAT0,CSWUNITX        TEST IF UNIT EXCEPTION (EOF)
         BCR   14,RC                    BR RETURN IF NO
*
         CLI   DXREGC,XLIUHL            IS THIS INPUT UHL EXIT  SA55619
         BE    ULEXC1                   BR IF YES               SA55619
         CLI   ULWK10+K3,C'0'           HAVE ANY UTL BEEN READ
         BH    ULT500                   PREVIOUSLY, BR IF YES
         B     ULEXC2                   BR NO TO CONTINUE
ULEXC1   CLI   ULWK10+K3,C'1'           HAVE ANY UHL BEEN READ
         BH    ULT500                   PREVIOUSLY, BR IF YES
*
*        NO HEADERS EXIST ON USER LABEL TRACK.
ULEXC2   EQU   *                        NO HEADERS EXIST         Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 USER BUFFER KEY        Y02082
         SR    R1,R1                    ZERO USER LBL BUFFER PTR Y02082
         XC    ULERRPTR,ULERRPTR        ZERO ERROR INDICATORS
         BAL   RD,ULSYNCH2              GO TO SYNCH TO USER EXIT RTN
* RETURN IN DATAMGT KEY                                          Y02082
*
***********************************************************************
*
*        NO FURTHER UL PROCESSING IS PERFORMED.  FREE CORE AND RETURN
*        TO CALLER.
*
ULT500   EQU   *                        ISSUE DEQ, RETURN
         TM    DCBDSORG,DCBORGDA        IS DS DIRECT ORGANIZATION
         BZ    ULT510                   BR IF NO
         MVC   ULDMBUFR(ULT6000L),ULT6000K MOVE PARM LIST        YM5789
         STH   RUCB,ULDMBUFR+ULT6000L   MOVE UCBADDR AND CCHH    YM5789
         MVC   ULDMBUFR+K2+ULT6000L(K6),DXDAADDR+K1 TO MINOR NAM YM5789
         DEQ   (,ULDMBUFR+ULT6000L),MF=(E,ULDMBUFR) DEQ ULTRK    YM5789
*
ULT510   EQU   *                        FREE UL WORK AREAS
* FREE UL AREA, LABEL BUFFER AND PARAMETER LIST                  Y02080
         IECRES FREE,A=(R9),LV=USERLU,SP=229,KEY=USER,PREFIX=NO, Y02082*
               STM=(0,14,WTGPREFX)      FREE USER WORK AREA      Y02082
         IECRES FREE,A=(RUCB),PREFIX=YES,STM=(0,14,WTGPREFX)     Y02080*
                                        FREE EOV WORK AREA       Y02080
*
*  RETURN TO CALLER
*
         CLI   WTGMODNM+K5,C'9'         IS THIS OPEN (IFG0195F)
         BNE   ULT530                   BR IF NO
         MVC   DXCCW7(K5),DXVOLMT2      RESTORE DSCB CCHHR ADDR
*
ULT530   EQU   *                        RETURN TO DXRETMOD
         LM    RTIOT,RET,DXREG9         RESTORE REGISTERS 9-14
         LM    R0,R1,DXREG0             RESTORE REGISTERS 0-1
*
*                                       XCTL TO NEXT MODULE      Y02080
         IECRES LOAD,MODID=DXRETMOD,BRCODE=(RET),BRANCH=QUEUED   Y02080
*
         DROP  RUCB,RWTG
*
***********************************************************************
*
*        CONSTANTS
*
*  CHANNEL PROGRAM TO READ FIRST HEADER/TRAILER LABEL
ULCP1    DC    X'1200000040000008'      READ COUNT
         DC    X'2900000040000004'      SEARCH KEY EQ
         DC    X'0800000000000000'      TIC *-16
         DC    X'0600000000000050'      READ DATA
*
*  CCW 3 OF CHANNEL PROGRAM TO UPDATE LABEL
ULCP2    DC    X'0500000040000050'      WRITE DATA
*
*  PART OF CHANNEL PROG TO READ NEXT LABEL AFTER UPDATE PREVIOUS LABEL
ULCP3    DC    X'3100000040000005'      SEARCH ID EQ
         DC    X'0800000000000000'      TIC *-8
         DC    X'1E0000005000005C'      READ COUNT,KEY,DATA (SKIP)
RDCKD    DC    X'1E0000000000005C'      READ COUNT,KEY,DATA
*
UHLCONST DC    C'UHL1'                  KEY OF FIRST HEADER LABEL
UTLCONST DC    C'UTL0'                  KEY OF FIRST TRAILER LABEL
ULT6000K ENQ   (ULT6001K,,E,8,SYSTEM),MF=L ENQ LIST FORM         YM5789
ULT6000L EQU   *-ULT6000K               LENGTH OF ENQ/DEQ LIST   YM5789
ULT6001K DC    CL8'SYSZUSRL'            MAJOR NAME               YM5789
*
         XCTLTABL SVC=055,BRT=YES,LENGTH=                        Y02080
*
         IECDSECS EXPAND=YES            EXPAND DESIRED DSECTS HERE
*
         END
