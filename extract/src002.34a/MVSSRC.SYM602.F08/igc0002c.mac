         TITLE 'IGC0002C - TCLOSE INITIAL FUNCTION'
IGC0002C CSECT
*
***********************************************************************
*                                                                     *
*           VS2-037 ADD/DE/CH
*A519020-519041,A549500-550000                                 @ZA29752
*                                                                     *
*          VS1 RELEASE 02 DELETIONS                                   *
*0000199432,530940,530960,530999,531000,531532,531666            XM1037
*0000199200-199300,563920                                        X02989
*0000                                                            XM0630
*          VS2 RELEASE 01 DELETIONS                                   *
*0000182719                                                      YM0897
*0000                                                            YM0955
*0000                                                            YM8269
*0000                                                            YM0898
*0000                                                            YM0850
*0000                                                            YM2069
*0000                                                            YM0992
*                                                                     *
*          VS2 RELEASE 02 DELETIONS/CHANGES                           *
*0000180000-184500,195429,205000,208000-225000,261667-261700,    YM1272
*0000338504-338940,517904,526000-540000,553000-555000            YM1272
*0000426000-450000                                               YM1493
*0000198850                                                      YM3011
*0000433500                                                      YM5310
*0000420500-420900,424500                                       ZA01326
*          VS2 RELEASE 03 DELETIONS/CHANGES                           *
*0000435500-436000                                             @ZA02878
*          VS2 RELEASE 04 DELETIONS/CHANGES                           *
*0000457000-458000,517500-517920                               @ZA04905
*          RELEASE 21.7 DELETIONS/CHANGES                             *
*          RELEASE 21 DELETIONS/CHANGES                               *
*                                                                S21042
*                                                                M0039
*D076000-077000,079000-080000,211000-212000,218000              SA53260
*0000120000-123000,176000-179000,480000-488000,503000-504000,   SA53293
*0000514000-517000,563000                                       SA53293
*0000395000-399000,551000-552000                                 S21940
*                                                                     *
* MODULE NAME - IGC0002C                                              *
*                                                                     *
* DESCRIPTIVE NAME - TCLOSE INITIAL FUNCTION                          *
*                                                                     *
* COPYRIGHT - NONE                                                    *
*                                                                     *
* CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING THE CSECT CARD    *
*                                                                     *
* STATUS CHANGE LEVEL 000                                             *
*                                                                     *
* FUNCTION -                                                          *
*    THIS MODULE CONTAINS THE 'TCLOSE INITIAL FUNCTION'.              *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG' FOR DETAILS.            *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IGC0002C - ENTERED BY THE SUPERVISOR FROM THE SECOND-LEVEL  *
*                    INTERRUPT HANDLER (SLIH) WHEN SVC 23 (CLOSE,     *
*                    TYPE=T) IS ISSUED.                               *
*                                                                     *
* INPUT -                                                             *
*    ENTERED IN SUPERVISOR KEY ZERO                              Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* OUTPUT -                                                            *
*    EXIT IN DATA MANAGEMENT KEY                                 Y02082
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         IECPCNVT - CONVERTS A RELATIVE TRACK ADDRESS 'TTRN' TO AN   *
*            ABSOLUTE TRACK ADDRESS 'MBBCCHHR' UTILIZING THE          *
*            FOLLOWING REGISTER CONVENTUONS -                         *
*            REG    CONTENTS AT ENTRY      CONTENTS AT EXIT           *
*             0     TTRN TO BE CONVERTED   DESTROYED                  *
*             1     DEB ADDRESS            TRANSPARENT                *
*             2     ADDR OF 8-BYTE AREA    RESULTANT MBBCCHHR         *
*                   FOR MBBCCHHR                                      *
*            3-8    IGNORED                TRANSPARENT                *
*            9-13   IGNORED                DESTROYED                  *
*             14    RETURN ADDRESS         TRANSPARENT                *
*             15    ENTRY POINT ADDRESS    ERROR CODE                 *
*         THE ERROR CODE WILL BE '0' IF THE CONVERSION IS SUCCESSFUL  *
*         AND '1' IF THE 'TT' EXCEEDS THE TOTAL EXTENTS ASSIGNED.     *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* EXITS, ERROR -                                                      *
*         NONE                                                        *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REENTRANT, REFRESHABLE, READ-ONLY, ENABLED, PRIVILEGED           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    CLASS ONE CHARACTER CODE DEPENDENCY - THE EBCDIC CHARACTER CODE  *
*    WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED IF A      *
*    DIFFERENT CHARACTER SET IS USED FOR EXECUTION.                   *
*                                                                     *
* NOTES -                                                             *
*    REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                        *
*                                                                     *
***********************************************************************
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE
         USING FORCORE,RCORE
         USING IHADCB,RDCB
         USING WTG,RWTG
         USING TIOT,RTIOT
         USING UCB,RUCB                 UCB ADDRESSABILITY       YM1272
         USING CVT,RET
         USING TCB,RD
         USING DEBBASIC,RDEB                                     Y02134
         EJECT
***********************************************************************
*                                                                     *
*                          FUNCTION PROLOG                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FUNCTION NAME -                                                     *
*    'TCLOSE INITIAL FUNCTION'                                        *
*                                                                     *
* (STATUS) -                                                          *
*    NOT APPLICABLE                                                   *
*                                                                     *
* FUNCTION -                                                          *
*     1) VERIFIES THAT THE DCB(S) IS TO BE PROCESSED;                 *
*     2) OBTAINS MAIN STORAGE FOR THE 'WHERE-TO-GO' (WTG) TABLE;      *
*        THE IECRES MACRO IS USED, WHICH ALSO ENQS THE TIOT;     Y02134
*     3) OBTAINS MAIN STORAGE FOR A WORK AREA FOR EACH DCB TO BE      *
*        PROCESSED;                                                   *
*     4) INITIALIZES EACH WORK AREA WITH I/O CONTROL BLOCKS AND       *
*        CHANNEL PROGRAMS;                                            *
*     5) VALIDITY CHECKS THE DEB USING THE DEBCHK MACRO AND      Y02082
*        POINTS THE DEB'S DCB ADDRESS TO THE PROTECTED COPY OF   Y02082
*        THE DCB EXCEPT FOR VSAM.                                Y02082
*     6) PURGES (QUIESCES) OUTSTANDING I/O REQUESTS FOR EACH DCB;     *
*     7) MOVES THE 'JOB FILE CONTROL BLOCK' (JFCB) INTO THE WORK AREA *
*        FOR EACH DCB;                                                *
*     8) MOVES THE ID/EPA OF THE NEXT REQUIRED MODULE INTO THE WTG    *
*        TABLE ENTRY FOR EACH DCB;                                    *
*     9) BRANCHES TO THE RESIDENT ROUTINE TO CONTINUE TCLOSE          *
*        PROCESSING, OR                                               *
*    10) EXITS TO THE SUPERVISOR IF THERE ARE NO VALID DCBS TO        *
*        PROCESS AFTER FREEING THE WTG TABLE USING               Y02134
*        THE IECRES MACRO WHICH DEQS THE TIOT.                   Y02134
*                                                                     *
* ENTRY POINTS -                                                      *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* INPUT -                                                             *
*    REGISTER CONTENTS AT ENTRY ARE AS FOLLOWS-                       *
*       1 - CONTAINS THE ADDRESS OF THE TCLOSE PARAMETER LIST.        *
*           EACH ENTRY IS A FULLWORD WHICH CONTAINS THE ADDRESS OF    *
*           A DCB IN THE 3 LOW ORDER BYTES AND THE TCLOSE POSITIONING *
*           OPTION IN THE HIGH ORDER BYTE. THE POSITIONING OPTIONS    *
*           ARE AS FOLLOWS-                                           *
*              X'00' - LEAVE;                                         *
*              X'10' - REREAD;                                        *
*              X'30' - LEAVE;                                         *
*           THE LAST ENTRY IN THE PARAMETER LIST HAS THE HIGH ORDER   *
*           BIT OF ITS FIRST BYTE TURNED ON (I.E., X'80').            *
*       3 - ADDRESS OF THE CVT - INITIALIZED BY THE SLIH.             *
*       4 - ADDRESS OF THE TCB - INITIALIZED BY THE SLIH.             *
*       5 - ADDRESS OF THE TCLOSE SVRB - INITIALIZED BY THE SLIH.     *
*                                                                     *
* OUTPUT -                                                            *
*    1) REGISTER CONTENTS FOR A NORMAL EXIT ARE AS FOLLOWS -          *
*          'RES'   - ADDRESS OF THE RESIDENT ROUTINE;                 *
*          'RWTG'  - ADDRESS OF THE WTG TABLE;                        *
*       IF EXIT IS TO MODULE IFG0230P BECAUSE OF AN ERROR READING THE *
*       JFCB, THE FOLLOWING ADDITIONAL REGISTER CONTENTS APPLY -      *
*          'R0'    - TCLOSE INTERNAL ERROR CODE 121;                  *
*          'RDCB'  - ADDRESS OF THE DCB CURRENTLY BEING PROCESSED;    *
*          'RCORE' - ADDRESS OF THE CURRENT DCB'S WORK AREA;          *
*          'RWTGC' - ADDRESS OF THE CURRENT DCB'S WTG ENTRY;          *
*          'RTIOT' - ADDRESS OF THE CURRENT DCB'S CURRENT TIOT ENTRY; *
*          'RUCB'  - ADDRESS OF THE CURRENT DCB'S CURRENT UCB;        *
*          'RDEB'  - ADDRESS OF THE CURRENT DCB'S DEB.                *
*    2) INTERNAL INDICATORS -                                         *
*          'WTGPATHS' - X'20' - NSL PROCESSING IS REQUIRED;           *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*         REFER TO THE FOLLOWING 'FUNCTION PROLOG'.                   *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    MODULE IFG0232D WITH 'RET' EQUAL 0 FOR DIRECT ACCESS PROCESSING; *
*    MODULE IFG0232G WITH 'RET' EQUAL 0 FOR SL TAPE OUTPUT PROCESSING;*
*    MODULE IFG0232M WITH 'RET' EQUAL 4 FOR SL TAPE INPUT PROCESSING; *
*    MODULE IFG0232S WITH 'RET' EQUAL 0 FOR NL TAPE POSITIONING;      *
*    MODULE IFG0232Y WITH 'RET' EQUAL 0 FOR NSL TAPE PROCESSING -     *
*       THIS MODULE IS AN ALIAS FOR IFG0202B, WHICH INTERFACES WITH   *
*       MODULES NSLETRLI (DEFERRED NSL PROCESSING) AND NSLCTRLO;      *
*    MODULE IFG0232Z WITH 'RET' EQUAL 4 FOR UNIT RECORD, GRAPHICS, OR *
*       COMMUNICATIONS DEVICE TYPES;                                  *
*                                                                     *
* EXITS, ERROR -                                                      *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE TCLOSE WORK AREA AND THE WHERE-TO-GO (WTG) TABLE ARE         *
*    DESCRIBED BY THE DSECTS AT THE END OF THE LISTING.               *
*                                                                     *
* ATTRIBUTES -                                                        *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    REFER TO THE PRECEDING MODULE PROLOG.                            *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
***********************************************************************
*
***********************************************************************
*
*  THIS SECTION OBTAINS CORE FOR THE WHERE-TO-GO TABLE AND SAVES
*  REGISTERS 2-12 IN THE SVRB EXTENDED SAVE AREA.
*
         USING RBBASIC,R5                                        YM1272
         IECRES GET,PREFIX=WTG,         GETMAIN FOR WTG TABLE    Y02080*
               STM=(2,12,RBEXSAVE),A=(R1)                        YM1272
         DROP  R5                                                YM1272
*
         LTR   R0,R0                    CALLER ENQED EXCLUSIVELY YM3185
         BNZ   TCM15050                 BRANCH IF YES            YM3185
         LR    RWTG,R1                  LOAD WTG ADDRESS         YM1272
         L     RPAR,WTGPREFX            GET EXT PREFX ADDRSBLTY  Y02134
         L     RC,IECRRPRM-IECPREFX(,RPAR) GET RRPLIST PTR       Y02144
         MVI   RRFUNCTN-RRPLIST(RC),RRFTCLOS  INDICATE TCLOSE    Y02144
         IECRES LOAD,BRANCH=NO,MODNM=TCLOSE,PREFIX=WTGPREFX      Y02080X
                                        GIVE OPT TRACE A SHOT    Y02080
         XC    WTGMODEP,WTGMODEP        CLEAR NEXT MOD ADDR      Y02080
*
         L     RPAR,IECUPRML-IECPREFX(,RPAR) PT PROT PARAM LIST  Y02134
*
***********************************************************************
*              DETERMINE IF ENTRY IS TO BE PROCESSED                  *
***********************************************************************
*
         LR    RPARC,RPAR               SET UP PARM PTR          YM0898
         LA    RWTGC,WTGENTRY           INIT CURRENT WTG ENTRY   Y02134
TCM00500 EQU   *
         L     RD,CVTPTR                CVT ADDRESS              Y02082
         L     RD,CVTTCBP-CVT(,RD)      NEXT/CURRENT TCB ADDR    Y02082
         L     RD,K4(,RD)               CURRENT TCB              Y02082
         MODESET EXTKEY=RBT234,WORKREG=2 ASSUME USER KEY         Y02082
         L     RDCB,PLISTDCB(,RPARC)    ESTABLISH ADDRESS OF USER'S DCB
*
*        MAKE SURE THIS DCB IS NOT PREVIOUSLY DUPLICATED IN      YM2869
*        THE PARAMETER LIST                                      YM2869
*
         LA    RF,WTGENTRY              FIRST DCB'S WTG ENTRY    YM2869
         USING WTGENTRY,RF                                       YM2869
TCM00502 EQU   *                        PROCESS EACH DCB         YM2869
         CR    RF,RWTGC                 AT CURRENT YET           YM2869
         BE    TCM00506                 BR IF YES-NO DUPLICATES  YM2869
         L     RCORE,WTGCORE-K1         GET WORKAREA             YM2869
         LA    RCORE,K0(,RCORE)         CLEAR HIGH BYTE FOR LTR  YM2869
         LTR   RCORE,RCORE              IS THERE A WORKAREA      YM2869
         BZ    TCM00504                 BR IF NO-TRY NEXT DCB    YM2869
         CLM   RDCB,B'0111',DXUDCBAD+K1 IS CURRENT DCB BEING     YM2869
*                                       PROCESSED ALREADY        YM2869
         BE    TCM03000                 BR IF YES-DON'T PROCESS  YM2869
TCM00504 EQU   *                        GET NEXT DCB'S WTG ENTRY YM2869
         LA    RF,WTGENTRY+L'WTGENTRY   INCREMENT TO NEXT WTG    YM2869
         B     TCM00502                 CHECK NEXT DCB           YM2869
         DROP  RD                                                YM2869
         DROP  RF                                                YM2869
TCM00506 EQU   *                        NO DUPLICATES            YM2869
         TM    DCBOFLGS,DCBOBUSY        IS BUSY BIT ON?          Y02134
         BO    TCM03000                 BR IF YES-DON'T PROCESS  Y02134
         L     RDEB,DCBDEBAD            GET DEB ADDRESS          Y02134
         TM    DCBOFLGS,DCBOLOCK+DCBOPEN  IS DCB OPEN & UNLOCKED Y02134
         BNO   TCM03000                 BRANCH IF NO             Y02134
         TM    DCBMACRF,DCBMEXCP        TEST IF EXCP             YM4688
         BO    TCM00510                 BRANCH IF EXCP           YM4688
         TM    DCBDSRG2,DCBACBM         TEST FOR ACB/AMB         YM4688
         BNO   TCM00510                 BRANCH IF NOT ACB/AMB    YM4688
         CLI   AMBID-IDAAMB(RDCB),AMBIDENT  TEST FOR AMB         YM4688
         BE    TCM03000                 BRANCH IF YES - DO NOT   YM4688X
                                        PROCESS AN AMB           YM4688
TCM00510 EQU   *                        TEST TASK CLOSE BIT      YM2869
*
*        DON'T PROCESS IF DEB HUNG OFF ANOTHER TCB'S DEB CHAIN   YM2869
*        AND TASK CLOSE IS PROCESSING                            YM2869
*
         CLM   RD,B'0111',DEBTCBAD+K1   IS DEB ON THIS TCB       YM2869
         BE    TCM00515                 BR IF YES TO CONTINUE    YM2869
         LA    RF,DEBBASIC              CLEAR HIGH BYTE          YM2869
         LA    R0,DEBBASIC-DEBXTNP      OFFSET TO DEBX ADDR      YM2869
         SR    RF,R0                    RF POINTS TO DEBX ADDR   YM2869
         USING DEBXTNP,RF                                        YM2869
         L     RF,DEBXTNP               RF POINTS TO DEBX        YM2869
         USING DEBXTN,RF                                         YM2869
         TM    DEBXFLG1,DEBXTSK         IS TASK CLOSE PROCESSING YM2869
         BO    TCM03000                 DON'T PROCESS IF YES     YM2869
         DROP  RF                                                YM2869
DEBXTSK  EQU   X'40'                    TASK CLOSE PROCESSING    YM2869
TCM00515 EQU   *                        GET CORE FOR TCLOSE      YM2869
*
*****          GET MAIN STORAGE FOR WORKAREA FOR THIS DCB        YM2869
*
         LA    R0,CLOSSIZE              LOAD SIZE OF TCLOSE WK   Y02134
*                                                                Y02134
         TM    DEBOFLGS,DEBOFEOF+DEBOFNSL  TEST FOR NSL AND EOF  Y02134
         BNO   TCM00575                 ..BRANCH IF NOT          Y02134
         TM    DEBOPATB,DEBOPOUT        IS DCB OPENED FOR INPUT  Y02134
         BNZ   TCM00575                 ..BRANCH IF NOT          Y02134
         L     RD,DCBEXLST              LD ADDR OF DCB EXIT LIST Y02134
         LA    RD,K0(,RD)               ..CLEAR HIGH-ORDER BYTE  Y02134
         LTR   RD,RD                    IS THERE A DCB EXIT LIST Y02134
         BZ    TCM00575                 ..BR IF NOT TO GET WKA   Y02134
*                                                                Y02134
TCM00525 EQU   *                        TEST IF MORE CORE NEEDED Y02134
         CLI   K0(RD),XLDEFNSL          WAS LABEL PROC DEFERRED  Y02134
         BE    TCM00550                 ..BRANCH IF YES TO GET   Y02134
*                                       EXTRA CORE               Y02134
         CLI   K0(RD),XLDEFNSL+LASTNTRY  IS 'LAST ENTRY' BIT ON  Y02134
         BE    TCM00550                 ..YES - GET EXTRA CORE   Y02134
         TM    K0(RD),LASTNTRY          IS THIS THE LAST ENTRY   Y02134
         LA    RD,K4(,RD)               POINT TO NEXT LIST ENTRY Y02134
         BNO   TCM00525                 ..BR IF NOT TO CHK NEXT  Y02134
         B     TCM00575                 ..BR IF YES TO GET WKA   Y02134
*                                                                Y02134
TCM00550 EQU   *                        LOAD SIZE OF EOV WKAREA  Y02134
         LA    R0,EOVSIZE               LOAD SIZE OF WORK AREA   Y02134
*                                       ..DEFERRED NSL INPUT     Y02134
*                                       PROCESSING               Y02134
*                                                                Y02134
TCM00575 EQU   *                        ISSUE IECRES GET         Y02134
         MODESET EXTKEY=DATAMGT         ASSUME DM KEY            Y02082
         IECRES GET,PREFIX=YES,STM=(2,14,WTGPREFX),LV=(0),       Y02134*
               ID=TCWA                  GET CORE FOR TCLOSE WKA  Y02144
         LR    RCORE,R1                 SAVE ITS ADDRESS IN:     Y02134
         ST    R1,K4(,RWTGC)            ..WORK AREA BASE REG AND Y02134
*                                       ..IN CURRENT WTG ENTRY   Y02134
         ST    RC,DXATCOM3              SAVE RRPLIST PTR IN W/A  Y02144
*
         IECRES INIT,DEB=YES,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX)  Y02134X
                                        COPY THE DCB AND         Y02134X
                                        INITIALIZE THE WORK AREA Y02134
         CLI   DXWCOPYE,K0              WAS INIT/COPY PROSPEROUS Y02082
         BNE   TCM00600                 BRANCH IF NO             Y02082
*
*        IF A CHECKPOINT DATA SET SECURITY INTERFACE EXISTS,     Y02083
*        FREE THE COPY OF THE USER'S DCB AND COPY THE            Y02083
*        PROTECTED DCB.                                          Y02083
*
TCB00580 EQU   *                        TEST FOR CHKPT SI        Y02083
         L     RF,DXDSAB                FETCH DSAB ADDRESS       Y02083
         USING DSAB,RF                  DSAB ADDRESSABILITY      Y02083
         TM    DSABFLG4,DSABCKSI        Q - CHKPT SI PRESENT     Y02083
         BZ    TCM00590                 IF NOT, BRANCH           Y02083
         DROP  RF                       DSAB ADDRESSABILITY      Y02083
         L     RDEB,DCBDEBAD            FETCH DEB ADDRESS        Y02083
         L     RDCB,DEBDCBAD            FETCH PROTECTED DCB ADDR Y02083
         ST    RDCB,DXUDCBAD            UPDATE WA USER DCB ADDR  Y02083
         MVI   DXUKEY,K0                SET USER KEY TO ZERO     Y02083
         L     R1,DXPDCBAD              GET ADDR OF COPIED DCB   Y02083
*                                       TO BE FREED              Y02083
         IECRES FREE,A=(R1),PREFIX=YES,STM=(2,14,WTGPREFX)       Y02083
         MVC   DXPDCBAD,DXUDCBAD        TELL INIT TO COPY        Y02083
         IECRES INIT,DCBCOPY=TOWKAR,STM=(3,14,WTGPREFX)          Y02083
         CLI   DXWCOPYE,K0              WAS COPY SUCCESSFUL      Y02083
         BNE   TCM00600                 IF NOT, BRANCH           Y02083
         OI    DCBOFLGS,DCBOBUSY        TURN ON BUSY BIT         YM5932
*                                       IN COPIED DCB            YM5932
         L     RF,DXUDCBAD              GET PTR TO USER DCB      YM5932
         MODESET  KEYADDR=DXUKEY,WORKREG=1  GET USER KEY         YM5932
         OI    DCBOFLGS-IHADCB(RF),DCBOBUSY  TURN ON BUSY BIT    YM5932
*                                       IN USER DCB              YM5932
         MODESET  EXTKEY=DATAMGT        RESUME DM KEY            YM5932
TCM00590 EQU   *                        TEST FOR VSAM ACB        Y02083
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    Y02134
         BO    TCM00700                 BR IF YES, NOT ACB       Y02134
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  Y02134
         BNO   TCM00700                 BRANCH IF NO             Y02134
         CLI   ACBAMETH-IFGACB(RDCB),ACBVTAM  IS ACB FOR VTAM    YM3011
         BE    TCM00650                 BRANCH IF YES            Y02004
         CLI   ACBAMETH-IFGACB(RDCB),ACBVSAM  IS ACB FOR VSAM    Y02134
         BNE   TCM00650                 BRANCH IF NO             Y02134
         B     TCM03000                 GET NEXT ENTRY           Y02134
TCM00600 EQU   *                        SET ACB ERROR FLAGS      Y02134
         TM    DCBMACR,DCBMEXCP         IS ACCESS METHOD EXCP    X02989
         BO    TCM00650                 BR IF YES                Y02134
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  X02989
         BNO   TCM00650                 BR IF NO                 Y02134
         MVI   ACBERFLG-IFGACB(RDCB),VSCACBCL  SET ACB ERROR FLG Y02134
TCM00650 EQU   *                        REFRESH USER'S DCB       Y02134
         NI    DCBOFLGS,X'FF'-DCBOBUSY  ZERO OUT BUSY BIT        Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(2,14,WTGPREFX) REFRESH  Y02082*
                                        USER'S DCB               Y02082
         LR    R1,RCORE                 PREPARE FOR FREEMAIN     Y02134
         IECRES FREE,A=(R1),PREFIX=YES,STM=(2,14,WTGPREFX)       Y02134
         XC    K0(K8,RWTGC),K0(RWTGC)   INDICATE NO WORK AREA    Y02004
         B     TCM03000                 GET NEXT ENTRY           Y02134
TCM00700 EQU   *                                                 X02989
         L     RTIOT,DXTIOTAD           GET TIOT ENTRY ADDR      Y02134
         TM    TIOELINK-TIOENTRY(RTIOT),TIOSPOOL TEST IF SPOOLED Y02134
         BM    TCM00650                 YES BYPASS THIS PARM     Y02134
         TM    DCBMACRF,DCBMREAD        IS THIS A BSAM READ DCB-
         BO    TCM01000                 ..BR IF YES TO PROCESS ENTRY
         TM    DCBMACRF+K1,DCBMWRIT     IS THIS A BSAM WRITE DCB-
         BNO   TCM00650                 ..BRANCH IF NOT          Y02134
*
*****    THIS SECTION TESTS FOR A TSO DATA SET.
*
TCM01000 EQU   *
         L     RUCB,DXUCBADR            LOAD UCB ADDRESS         YM1272
         LTR   RUCB,RUCB                TEST FOR DUMMY DATA SET OR TSO-
         BNZ    TCM03000                BR IF NEITHER            Y02134
TCM02500 EQU   *
         CLI   DCBDEVT,DCBDEVTM         IS THIS TSO-
         BNE   TCM00650                 ..BRANCH IF NOT          Y02134
         NI    DCBCIND1,X'FF'-DCBC1EOB  TURN OFF EOF BIT IN DCB ( THIS
*                                       ..IS THE ONLY TCLOSE
*                                       ..PROCESSING FOR TSO )
         B     TCM00650                 GO GET NEXT ENTRY        Y02134
TCM03000 EQU   *
         MODESET EXTKEY=DATAMGT         RETURN TO DM KEY         Y02082
         TM    PLISTDCB(RPARC),LASTNTRY IS THIS THE LAST TCLOSE ENTRY-
         LA    RPARC,K4(,RPARC)         POINT TO THE NEXT TCLOSE ENTRY
         LA    RWTGC,L'WTGENTRY(,RWTGC) PT TO NEXT WTG ENTRY     Y02134
         BNO   TCM00500                 ..BR IF NOT TO GET NEXT ENTRY
         LR    RPARC,RPAR               PT FIRST DCB             Y02082
         LA    RWTGC,WTGENTRY           PT TO FIRST WTG ENTRY    Y02082
         USING WTGENTRY,RWTGC           ADDR CURRENT WTG ENTRY   Y02082
TCM03500 EQU   *                        CHECK FOR VALID ENTRY    Y02082
         L     RCORE,WTGCORE-K1         GET WORK AREA ADDRESS    Y02082
         LTR   RCORE,RCORE              CHECK IF TCLOSING        Y02082
         BNZ   TCM03600                 BRANCH IF VALID TCLOSE   Y02082
         TM    PLISTDCB(RPARC),LASTNTRY  CHECK IF LAST ENTRY     Y02082
         LA    RWTGC,WTGEND-WTGENTRY(,RWTGC)  ADDR NEXT ENTRY    Y02082
         LA    RPARC,K4(,RPARC)         ADDR NEXT PARAM LIST     Y02082
         BNO   TCM03500                 NO - TRY NEXT            Y02082
         B     TCM15500                 NO VALID TCLOSE ENTRIES  Y02082
         EJECT                                                   Y02082
TCM03600 EQU   *                        PROCESS THE DCB'S        Y02082
*
***********************************************************************
*              PREPARE TO PROCESS THE DCBS                            *
***********************************************************************
*
TCM04000 EQU   *
         L     RDCB,PLISTDCB(,RPARC)    POINT TO DCB FOR THIS ENTRY
         L     RCORE,WTGCORE-K1         LOAD WORKAREA ADDRESS    Y02134
         LTR   RCORE,RCORE              IS THIS DCB PROCESSABLE  Y02134
         BZ    TCM13000                 BRANCH IF NO             Y02134
         L     RDEB,DCBDEBAD            LOAD DEB ADDRESS FROM DCB
         L     RUCB,DEBSUCBA            LOAD UCB ADDRESS         Y02134
         L     RTIOT,DXTIOTAD           GET CURRENT TIOT ENTRY   Y02134
         DROP  RWTGC                                             Y02082
*
***********************************************************************
*              INITIALIZE THE 'TCLOSE' WORK AREA                      *
***********************************************************************
*
*****          INITIALIZE CONTROL BLOCKS IN WORK AREA
*
TCM06500 EQU   *
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    X02989
         BO    TCM06600                 BR IF YES, NOT ACB       X02989
         TM    DCBDSORG+K1,ACBDORGA     IS CONTROL BLOCK AN ACB  X02989
         BNO   TCM06600                 BR IF NO                 X02989
         TM    ACBAMETH-IFGACB(RDCB),ACBVSAM  IS ACB FOR VSAM    X02989
         BO    TCM07600                 BR IF YES, READ JFCB     X02989
TCM06600 EQU   *                                                 X02989
         LA    RD,DXDCB                 PLACE ADDRESS OF WORK AREA DCB
         ST    RD,DXDEBDCB              ..INTO WORK AREA DEB
         ST    RD,IOBDCBPT-K1           ..AND INTO WORK AREA IOB
         MVI   DXDEBID,DEBIDENT         MOVE DEB ID INTO WORK AREA DEB
         MVC   DXDEBUCB,DEBSUCBA        MOVE DEVICE MODIFIER,UCB Y02134
*                                       ..ADDRESS INTO WORK AREA DEB
         LA    RD,DXDEB                 PLACE ADDRESS OF WORK AREA DEB
         ST    RD,DXDCBDEB              ..INTO WORK AREA DCB
         LA    RD,DXECB                 PLACE ADDRESS OF WORK AREA ECB
         ST    RD,IOBECBPT              ..INTO WORK AREA IOB
         LA    RD,DXCCW1                PLACE ADDRESS OF WORK AREA CCW
         ST    RD,IOBSTART-K1           ..INTO WORK AREA IOB
         OI    IOBFLAG1,IOBUNREL        SET UNRELATED BIT IN IOB
         L     RET,CVTPTR               LOAD CVT ADDRESS         Y02134
         MVC   DXDEBAPP,CVTXAPG         MOVE IOS' APPENDAGE VECTOR TBL
*                                       ..ADDRESS INTO WORK AREA DEB
         TM    DCBMACRF,DCBMEXCP        IS ACCESS METHOD EXCP    Y02082
         BO    TCM06700                 YES-DO DEBCHK            Y02082
         TM    DCBDSRG2,ACBDORGA        TEST FOR ACB             Y02082
         BO    TCM07500                 YES, DO NOT DELETE DEB   Y02082
*                                                                Y02082
TCM06700 EQU   *                        CHECK THE DEB            Y02082
         L     R1,DXUDCBAD              POINT TO USER'S DCB      Y02082
         DEBCHK (1)                     CHECK DEB                Y02082
         LR    RDEB,R1                  LOAD VERIFIED DEB ADDR   Y01021
         STCM  RDEB,B'0111',DCBDEBAD+K1  REFRESH DCBCOPY'S DEBAD Y02082
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXPDCBAD+K1  POINT DEB Y02082*
                                        TO PROTECTED DCB COPY    Y02082
         LA    RF,DEBBASIC-DEBXTNP      NEGATIVE OFFSET TO DEB   YM1272
*                                       EXTENSION ADDRESS        YM1272
         SR    R1,RF                    POINT R1 TO DEB PREFIX   YM1272
         L     RF,DEBXTNP-DEBXTNP(,R1)  LOAD DEB EXTENSION ADDR  YM1272
         OI    DEBXFLG1-DEBXTN(RF),DEBXCDCB  INDICATE DEBDCBAD   YM1272
*                                       POINTS TO THE COPIED DCB YM1272
*
*****          PURGE I/O TO HALT ANY OUTSTANDING I/O FOR THIS DCB
*
TCM07000 EQU   *
         ST    RDEB,DXCCW5              INITLZ PURGE PARAMETER LIST
         MVI   DXCCW5,PURGEFLG          INITLZ FLAGS- DO NOT POST COMP
         LA    R0,DEBUSRPG              LOAD ADDRESS OF IOB PURGE CHAIN
         ST    R0,DXCCW6                ..AND STORE IN PARAMETER LIST
         LA    R1,DXCCW5                POINT TO PURGE PARAMETER LIST
         PURGE (1)                      SVC PURGE
         WAIT  ,ECB=DXCCW5+K4           WAIT FOR PURGE COMPLETION
         TM    DCBCIND2,DCBC2CHN        IS THIS A CHAINED SCHED DCB-
         BZ    TCM07500                 ..BRANCH IF NOT
         L     R1,DCBIOBAD              LOAD ADDR OF IOB PREFIX
         MODESET KEYADDR=DXUKEY,WORKREG=15 IOB KEY               Y02082
         L     R1,IOBECBPT-DXIOB+K16(R1)   GET ECB ADDR
         MVI   DXECB-DXECB(R1),ECBCOD7F SET ECB COMPLETE
         MODESET EXTKEY=DATAMGT         RET TCLOSE KEY           Y02082
TCM07500 EQU   *
         LA    RF,MOD232Z               POINT TO ID/TTR OF FINAL MOD
         LA    RET,K4                   BR TABLE OFFSET FOR THAT MOD
         TM    UCBTBYT3,UCB3TAPE+UCB3DACC IS THIS A TAPE OR DA DEVICE-
         BZ    TCM12500                 ..BR IF NOT- PROCESSING DONE
*
*
*        LOCATE JFCB AND MOVE INTO WORKAREA                      Y02082
*
TCM07600 EQU   *                        MOVE JFCB INTO WORK AREA X02989
         L     RTIOT,DXTIOTAD           GET TIOT ENTRY ADDRESS   Y02082
         LA    RET,TIOEJFCB-TIOENTRY(,RTIOT) GET TIOT ENTRY ADDR Y02082
         IECRES LOCJFCB,(RET)           LOCATE JFCB              Y02082
         MVC   DXJBF(JFCBLGTH),INFMJFCB-INFMJFCB(RET) GET JFCB   Y02082
*                                       INTO WORKAREA            Y02082
*
         TM    JFCBMASK+K6,JFCTRACE     IS THE TRACE FACILITY SPEC'D-
         BNO   TCM09500                 ..BRANCH IF NOT
         OI    WTGPATHS+K1,WTGTRACE     IND THAT TRACE FACILITY REQ'D
TCM09500 EQU   *
         LA    RF,MOD231T               PT TO IDTTR OF VSAM MOD  X02989
         TM    JFCDSRG2,JFCORGAM        IS DATA SET VSAM         X02989
         BNO   TCM09570                 NO, GO CHK FOR DA DEVICE Y02144
         OI    DXATGENS,DXATVSMG        VSAM STRING TO GET CNTRL Y02144
         B     TCM12500                 BR TO PROCESS VSAM       Y02144
TCM09570 EQU   *                        INIT FOR DA PROCESSING   Y02144
         LA    RF,MOD232D               PT TO ID/TTR OF DA MODULE
         SR    RET,RET                  BR TABLE OFFSET FOR THAT MOD
         MVC   DXDEBUCB,DEBSUCBA        RESTORE USER'S UCB ADDR  Y02134
         TM    UCBTBYT3,UCB3DACC        IS THIS A DIRECT ACCESS DEVICE
         BO    TCM12500                 ..BR IF YES TO PROCESS DA
*
***********************************************************************
*              TAPE PROCESSING                                        *
***********************************************************************
*
TCM10000 EQU   *
         TM    UCBTBYT2,UCB3TAPE        IS IT 7 TRK TAPE        ZA01326
         BO    TCM10100                 BRANCH IF YES           ZA01326
         MVC   DXDEBMOD(K1),DEBSDVM     SET MODE CODE-9 TRK     ZA01326
         B     TCM10200                 BRANCH TO CONTINUE      ZA01326
TCM10100 EQU   *                        SET MODE CODE-7 TRK     ZA01326
         MVI   DXDEBMOD,DCBTRTET        SET MOD TO EVEN PARITY WITH
*                                       ..TRANSLATION
         OC    DXDEBMOD,JFCDEN          SET DENSITY TO TO THAT WHICH
*                                       ..WAS USED TO CREATE TAPE
TCM10200 EQU   *                        CONTINUE TAPE PROCESS   ZA01326
         SR    RET,RET                  BR TABLE OFFSET FOR NSL/SL OUT
*                                                                YM1493
*****    NON-STANDARD LABEL (NSL) TAPE EXIT DETERMINATION        YM1493
*                                                                YM1493
TCM10500 EQU   *                        TEST FOR NSL TAPE        YM1493
         TM    DEBOFLGS,DEBOFNSL        TEST FOR NSL TAPE        YM1493
         BNO   TCM11000                 BRANCH IF NOT NSL        YM1493
         OI    WTGPATHS,WTGTCLOS        INDICATE THAT TCLOSE     YM1493X
                                        IS PERFORMING NSL        YM1493X
                                        TAPE PROCESSING          YM1493
         LA    RF,MOD232Y               POINT TO ID/EPA OF THE   YM1493X
                                        CLOSE MODULE WHICH DOES  YM1493X
                                        NSL TAPE PROCESSING      YM1493
         B     TCM12500                 BR TO FINISH THIS DCB    YM1493
*                                                                YM1493
*****    NO-LABEL (NL) TAPE EXIT DETERMINATION                   YM1493
*                                                                YM1493
TCM11000 EQU   *                        TEST IF A WRITE OCCURRED YM5310
         TM    DCBOFLGS,DCBOWRIT        TEST IF A WRITE OCCURRED YM5310
         BNO   TCM11100                 BRANCH IF NOT            YM5310
         OI    DEBOFLGS,DEBOFEOF        SET EOF BIT IN DEBOFLGS  YM5310
TCM11100 EQU   *                        TEST FOR NL TAPE         YM5310
         LA    RF,MOD232S               POINT TO ID/EPA OF THE   YM1493X
                                        POSITIONING MODULE (FOR  YM1493X
                                        SL/AL INPUT AND ALL NL)  YM1493
         TM    JFCBLTYP,JFCNL+JFCBLP    TEST FOR NL OR BLP TAPE@ZA02878
         BM    TCM12500                 BR IF YES TO FINISH DCB@ZA02878
*                                                                YM1493
*****    STANDARD LABEL (AL, AUL, SL, OR SUL) OUTPUT TAPE        YM1493
*        EXIT DETERMINATION                                      YM1493
*                                                                YM1493
TCM11500 EQU   *                        TEST FOR OUTPUT          YM1493
         TM    DCBOFLGS,DCBOWRIT        HAS A WRITE OCCURRED     YM1493
         BNO   TCM12000                 BRANCH IF NOT            YM1493
         LA    RF,MOD232G               POINT TO ID/EPA OF THE   YM1493X
                                        AL/AUL/SL/SUL OUTPUT MOD YM1493
         B     TCM12500                 BR TO FINISH THIS DCB    YM1493
*                                                                YM1493
*****    STANDARD LABEL (AL, AUL, SL, OR SUL) INPUT TAPE         YM1493
*        EXIT DETERMINATION                                      YM1493
*                                                                YM1493
TCM12000 EQU   *                        TEST FOR USER LABELS     YM1493
         TM    JFCBLTYP,JFCBUL          TEST FOR USER LABELS     YM1493
         BNO   TCM12500                 BRANCH IF NOT TO THE     YM1493X
                                        TAPE POSITIONING MODULE  YM1493X
                                        (FOR AL AND SL INPUT)    YM1493
         LA    RF,MOD232M               POINT TO ID/EPA OF       YM1493X
                                        THE USER LABEL MODULE    YM1493X
                                        (FOR AUL AND SUL INPUT)  YM1493
         LA    RET,K4                   BRANCH TABLE OFFSET FOR  YM1493X
                                        AUL AND SUL INPUT -      YM1493X
                                        FALL THRU TO FINISH DCB  YM1493
*
*****    INITIALIZE WORK AREAS FOR RESIDENT ROUTINE
*
TCM12500 EQU   *
         MVC   K0(K5,RWTGC),K0(RF)      MOVE ID/TTR OF NEXT MODULE
*                                       ..INTO WTG TABLE ENTRY
         STM   RTIOT,RET,DXREG9          STORE REGS 9-14       @ZA04905
         STM   R0,R1,DXREG0              STORE REGS 0,1        @ZA04905
TCM13000 EQU   *
         TM    PLISTDCB(RPARC),LASTNTRY IS THIS THE LAST TCLOSE ENTRY-
         LA    RPARC,K4(,RPARC)         POINT TO NEXT TCLOSE ENTRY
         LA    RWTGC,WTGEND-WTGENTRY(,RWTGC) PT TO NEXT WTG TABLE ENTRY
         BNO   TCM04000                 BR TO GET NEXT ENTRY
         L     RF,WTGPREFX              GET BASE PREFIX PTR      YM7099
         L     RPARC,IECUPRML-IECPREFX(,RF) PT FIRST DCB       @ZA04905
         L     RF,IECRRPRM-IECPREFX(,RF) GET RRPLIST PTR         YM7099
         OI    RRFLAGS2-RRPLIST(RF),RRFFIN1 INDIC 1ST LOAD DONE  YM7099
         L     RES,CVTPTR               LOAD ADDRESS OF CVT    @ZA04905
         L     RES,CVTDMSR-CVT(RES)     LD ADDR OF RESIDENT RTN@ZA04905
         ST    RES,K4(RWTGC)            SAVE RES RTN ADDRESS IN@ZA04905
*                                       ..LAST WTG TABLE ENTRY @ZA04905
         LA    RWTGC,WTGENTRY           PT TO FIRST WTG ENTRY  @ZA04905
         USING WTGENTRY,RWTGC           ADDR CURRENT WTG ENTRY @ZA04905
TCM14000 EQU   *                        CHECK FOR VALID ENTRY  @ZA04905
         L     RCORE,WTGCORE-K1         GET WORK AREA ADDRESS  @ZA04905
         LTR   RCORE,RCORE              CHECK IF TCLOSING      @ZA04905
         BNZ   TCM15000                 BRANCH IF VALID TCLOSE @ZA04905
         TM    PLISTDCB(RPARC),LASTNTRY  CHECK IF LAST ENTRY   @ZA04905
         LA    RWTGC,WTGEND-WTGENTRY(,RWTGC)  ADDR NEXT ENTRY  @ZA04905
         LA    RPARC,K4(,RPARC)         ADDR NEXT PARAM LIST   @ZA04905
         BNO   TCM14000                 NO - TRY NEXT          @ZA04905
         B     TCM15500                 NO VALID TCLOSE ENTRIES@ZA04905
*
***********************************************************************
*              EXITS                                                  *
***********************************************************************
*                                                               SA53293
*****          OBTAIN THE ADDRESS OF THE OPEN/CLOSE/EOV         SA53293
*****          RESIDENT ROUTINE                                 SA53293
*                                                               SA53293
TCM15000 EQU   *                                                SA53293
         LM    RTIOT,RET,DXREG9         LOAD REGS 9-14         @ZA04905
         LM    R0,R1,DXREG0             LOAD REGS 0,1          @ZA04905
         MVC   WTGMODNM,INITNAME        MOVE BASIC NAME TO WTG   YM1272
*                                                               SA53293
*****          EXIT TO RESIDENT ROUTINE TO BEGIN SERIAL PROCESSING
*                                                               SA53293
         IECRES XCTL                    BR TO RES RTN TO XCTL    S21940
         SPACE 2
*
*  THE CALLER OF T-CLOSE HOLDS THE TIOT RESOURSE EXCLUSIVELY.  @ZA29752
*  THIS SHOULD NEVER VALIDLY HAPPEN AND CANNOT BE ALLOWED.     @ZA29752
*
TCM15050 SR    RF,RF                    ZERO REG               @ZA29752
         SR    RC,RC                    ZERO REG               @ZA29752
         LA    RF,K12                   RETURN CODE            @ZA29752
         L     RC,ABND50D               ABEND CODE             @ZA29752
         ABEND (RC),DUMP                                       @ZA29752
         SPACE 2
*
*****          RETURN TO CALLER- THERE ARE NO VALID DCBS TO PROCESS
*
TCM15500 EQU   *
         IECRES FREE,PREFIX=WTG,A=(RWTG) FREE WTG CORE           Y02080
         LA    RF,K4                    SET RETURN CODE          X02989
*                                                                Y02080
         IECRES EXIT                    RETURN                   Y02080
         SPACE 2
***********************************************************************
*              CONSTANTS                                              *
***********************************************************************
*
ABND50D  DS    0F                                              @ZA29752
         DC    XL4'0000050D'            ABEND CODE             @ZA29752
INITNAME DC    CL8'IFG023'              CHARACTERS 'IFG023  '    YM1272
         EJECT
***********************************************************************
*        TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
***********************************************************************
*
XCTLTB23 XCTLTABL ID=(MOD232D,2D,MOD232G,2G,MOD232M,2M,          YM1272X
               MOD232S,2S,MOD232Y,2Y,MOD232Z,2Z,MOD231T,1T,      YM1272X
               TCLOSE,IGC0002C),SVC=023,BRT=YES,LENGTH=          YM1272
         SPACE 2
         IECDSECS CVT,                                                 C
               RB,                                                     C
               TCB,                                                    C
               TIOT,                                                   C
               DCB,                                                    C
               DSAB,                                             Y02083C
               ACB,                                              Y02080C
               IEZDEB,                                           Y02134C
               UCB,                                                    C
               MAIN,                                                   C
               PREFX,                                            Y02080C
               WTG,                                                    C
               IDAPDPRM,                                               C
               RRPL,                                             Y02144*
               EXPAND=YES                                        XM0630
         IDAAMB                                                  YM4688
         EJECT                                                   YM4688
*
TIOSPOOL EQU   X'06'                    TEST FOR SPOOLED         Y02134
         IECEQU AOS=YES,IEZDEB=YES                               Y02134
         END
