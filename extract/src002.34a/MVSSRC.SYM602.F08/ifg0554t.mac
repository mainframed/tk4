         TITLE 'IFG0554T- END OF VOLUME ABEND B37 HANDLING LOAD'
IFG0554T CSECT
***********************************************************************
*                                                                     *
*          VS2 RELEASE 037 DELETIONS/CHANGES                          *
*                                                                     *
*A606010,606020                                                @ZA18533
*A603300,C602800,D606000                                       @ZA26360
*                                                                     *
*          VS2 RELEASE 030 DELETIONS/CHANGES                          *
*0000009000,013300,014500,018500,023500,033000,144900          @ZA02218
*304000-306000                                                 @ZA02218
*0000                                                          @ZA05438
*000352500                                                     @ZA08028
*0000                                                          @ZA12209
*A000350500,351000,353000                                      @ZA10234
*          VS2 RELEASE 03 DELETIONS                                   *
*0000180925,181150,182875,183100                                ZA00019
*          VS2 RELEASE 02 DELETIONS                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* MODULE NAME = IFG0554T (OS/VS2)                                     *
*                                                                     *
* DESCRIPTIVE NAME =                                                  *
*        END OF VOLUME ABEND B37/D37/E37 HANDLING LOAD                *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 2, LEVEL 0                                         *
*                                                                     *
* FUNCTION =                                                          *
*        ENTERED FROM IFG0554A WHEN NO VOLUME COULD BE DISMOUNTED     *
*        TO MOUNT ANOTHER VOLUME.                                     *
*                                                                     *
*        THE OLD VOLUME'S UNIT HAS ALREADY HAD ITS DATA               *
*        MANAGEMENT USE COUNT DECREMENTED, AND THE VOLUME MAY         *
*        NO LONGER BE MOUNTED.                                        *
*        DXVOLSEQ IS THE VOLUME SEQUENCE OF THE NEXT VOLUME           *
*        WHICH COULD NOT BE MOUNTED. THE COUNT WILL BE                *
*        DECREMENTED BY ONE AND USED TO LOCATE THE PREVIOUS           *
*        VOLUME'S VOLSERNO.                                           *
*        IF THIS VOLUME IS STILL MOUNTED ON THE UNIT WHICH THE        *
*        DEB IS OPEN TO, ITS DATA MANAGEMENT COUNT WILL BE            *
*        INCREMENTED SO THAT IT MAY BE ACCESSED.                      *
*        OTHERWISE AN IMMEDIATE B37/D37/E37 ABEND WILL BE ISSUED, AS  *
*        THE DSCB ON THE OLD VOLUME CAN NOT BE UPDATED.               *
         EJECT
*        PROBLEM DETERMINATION IS GIVEN CONTROL WITH INTERNAL ABEND   *
*        CODE 184 TO ISSUE A E37-4 ABEND, 185 TO ISSUE A B37-4 ABEND  *
*        OR 186 TO ISSUE A D37-4 ABEND IF ANY OF THE                  *
*        FOLLOWING CONDITIONS OCCUR -                                 *
*        1) EXCP DCB.                                                 *
*        2) DSORG IS NOT PS.                                          *
*        3) THE WRITE (BSAM) OR PUT (QSAM) BITS ARE NOT ON IN         *
*        DCBMACRF.                                                    *
*        4) NO 08 EXIT LIST ADDRESS IS PRESENT IN THE DCB EXIT LIST,  *
*        OR THERE IS NO EXIT LIST ADDRESS.                            *
*        5) THE OLD VOLUME IS NO LONGER MOUNTED ON THE DEB'S          *
*        UNIT, OR ITS DATA MANAGEMENT COUNT COULD NOT BE              *
*        INCREMENTED.                                                 *
*                                                                     *
*        IF NONE OF THE ABOVE CONDITIONS EXIST AND                    *
*        IF THE DEB HAS LESS THAN 16 EXTENTS THE X37 ABEND EXIT IS    *
*        TAKEN AND THE VALUE RETURNED IN REGISTER 15 IS USED TO       *
*        DETERMINE THE ACTION TO BE TAKEN. THE RETURN CODE  AND THE   *
*        ACTION IS BELOW. IF THE DEB HAS 16 EXTENTS OR VIO IS USED,   *
*        THE EXIT IS NOT TAKEN BUT ACTION IS TAKEN AS IF IT WERE      *
*        AND A RETURN CODE OF 1 WERE RETURNED.                        *
*                                                                     *
*        0 - MODULE IFG0554P IS GIVEN CONTROL WITH 16 IN REGISTER     *
*        14 AND 1 IN REGISTER 13. THIS WILL CAUSE IFG0554P TO CALL    *
*        DADSM EXTEND FOR THE CURRENT VOLUME AND ONCE AGAIN TRY TO    *
*        OBTAIN SPACE ON THE VOLUME. HOWEVER, IF D37 ABEND PROCESSING *
*        IS BEING PERFORMED, THE X37 ABEND EXIT WILL BE TAKEN AGAIN.  *
*        IF A RETURN CODE OF 0 IS AGAIN RETURNED, THIS RETURN CODE    *
*        WILL BE IGNORED AND A RETURN CODE OF 2 WILL BE ASSUMED.      *
*                                                                     *
*        1 - THE FORMAT 1 DSCB FOR THE DATA SET IS READ AND IT IS     *
*        UPDATED. THE TTR OF THE LAST RECORD ON THE VOLUME IS         *
*        OBTAINED FROM DCBFDAD, THE TRACK BALANCE IS OBTAINED FROM    *
*        DCBTRBAL. THESE ARE PLACED IN THE DSCB AND IT IS REWRITTEN.  *
*        ALL THE BSAM/QSAM IOBS WILL GET THE UNIT EXCEPTION BIT IN    *
*        THE CSW TURNED OFF. THE FEOV BIT IN THE DCB IS TURNED OFF.   *
*        IF A SYNAD ADDRESS IS NOT PRESENT OR IF CLOSE CALLED EOV,    *
*        AN 001 ABEND IS ISSUED. OTHERWISE THE EOV WORKAREAS ARE      *
*        FREED, THE USER'S DCB IS REFRESHED FROM THE COPY, AND THE    *
*        ACCESS METHOD CALLER OF EOV IS RETURNED CONTROL TO PASS      *
*        CONTROL TO THE USER'S SYNAD ROUTINE. REGISTERS 0 AND 1 ARE   *
*        PASSED TO THE ACCESS METHOD CALLER OF EOV, AND, IN TURN, TO  *
*        THE SYNAD ROUTINE INDICATING AN OUTPUT ERROR, NO SPACE       *
*        AVAILABLE.                                                   *
*                                                                     *
*        2 -THE DSCB IS UPDATED AS FOR RETURN CODE 1, ABOVE, AND      *
*        PROBLEM DETERMINATION IS GIVEN CONTROL TO ISSUE A            *
*        B37-4, D37-4 OR E37-4 ABEND.                                 *
         EJECT
* NOTES =                                                             *
*        WHEN THIS MODULE EXITS TO THE ACCESS METHOD CALLER OF EOV    *
*        IN ORDER TO PASS CONTROL TO THE USER'S SYNAD ROUTINE, THE    *
*        REGISTERS WHICH WILL BE PASSED TO THE ACCESS METHOD AND TO   *
*        THE SYNAD ROUTINE ARE THE USER'S REGISTERS AS A REGISTER     *
*        SWAP HAS BEEN PERFORMED IN THE FIRST LOAD OF EOV, IGC0005E.  *
*                                                                     *
*        THIS MODULE HAS AN ALIAS NAME OF IFG0554T.                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*            R2 POINTS TO DCB                                         *
*            R4 POINTS TO OPEN WORK AREA                              *
*            R5 POINTS TO THE RESIDENT ROUTINE                        *
*            R6 POINTS TO THE WTG TABLE                               *
*            R7 POINTS TO THE CURRENT PARAMETER LIST ENTRY            *
*            R8 POINTS TO THE CURRENT WTG TABLE ENTRY                 *
*            R9 POINTS TO THE DD ENTRY IN THE TIOT                    *
*            R10 POINTS TO THE UCB                                    *
*                                                                     *
*    PATCH LABEL = SEE THIRD FROM LAST LABEL BEFORE ORG STATEMENT AT  *
*                  END OF LISTING.                                    *
*                                                                     *
* MODULE TYPE = CONTROL (OPEN, CLOSE, EOV DATA MANAGEMENT)            *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY OR LOC FIELD ON     *
*                  ORG STATEMENT AT END OF LISTING                    *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE,READ-ONLY, ENABLED,          *
*                 PRIVILEGED, SUPERVISOR STATE, DATA MANAGEMENT KEY,  *
*                 LINK PACK AREA RESIDENT/PAGEABLE                    *
*                                                                     *
* ENTRY POINT =                                                       *
*        IFG0554T                                                     *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE =                                                        *
*        THIS MODULE IS TRANSFERRED CONTROL THROUGH THE IECRES-LOAD   *
*        MACRO INSTRUCTION.                                           *
         EJECT
* INPUT =                                                             *
*        GIVEN CONTROL IN PROTECT KEY 5.                              *
*        REGISTER 2 POINTS TO THE COPIED DCB.                         *
*        DEBDCBAD POINTS TO THE COPIED DCB.                           *
*        REGISTER 4 POINTS TO THE EOV WORKAREA                        *
*        REGISTER 12 CONTAINS THE INTERNAL ABEND CODE                 *
*        FOR EITHER A B37-4, D37-4 OR E37-4 ABEND.                    *
*                                                                     *
* OUTPUT =                                                            *
*        THE NEXT MODULE IS GIVEN CONTROL IN PROTECT KEY 5 WITH       *
*        REGISTER 2 POINTING TO THE COPIED DCB,                       *
*        THE DEBDCBAD POINTING TO THE COPIED DCB,                     *
*        AND REGISTER 4 POINTING TO THE EOV WORKAREA,                 *
*                                                                     *
*        IFG0554P -                                                   *
*        REGISTER 14 CONTAINS ENTRY CODE 16                           *
*        REGISTER 13 CONTAINS DADSM EXTEND INPUT 1.                   *
*                                                                     *
*        IFG0550P GIVEN CONTROL THROUGH DMABCOND MACRO -              *
*        REGISTER 0 CONTAINS INTERNAL ABEND CODE                      *
*                                                                     *
*        EXIT TO THE ACCESS METHOD CALLER OF EOV FOR HIM TO PASS      *
*        CONTROL TO THE USER'S SYNAD ROUTINE -                        *
*        REGISTER 15 CONTAINS SYNAD ROUTINE ADDRESS.                  *
*        REGISTER 1 CONTAINS THE DCB ADDRESS WITH SYNAD ERROR         *
*        INFORMATION (X'42) IN THE HIGH ORDER BYTE.                   *
*        REGISTER 0 CONTAINS THE DECB ADDRESS FROM THE IOB IN ERROR   *
*        FOR BSAM AND THE ADDRESS OF THE IOB IN ERROR WITH THE OFFSET *
*        INTO THAT IOB OF THE WRITE CCW IN THE HIGH ORDER BYTE FOR    *
*        QSAM.                                                        *
*                                                                     *
*        IFG0RR0B IS GIVEN CONTROL TO CONTINUE RECOVERY PROCESSING.   *
*        REGISTERS OF THE IFG0RR0B SUBROUTINE PASSING CONTROL TO      *
*        IFG0554T WILL BE RESTORED BEFORE RETURNING TO IFG0RR0B.      *
*                                                                     *
* EXIT-NORMAL =                                                       *
*        IFG0554P TO MAKE STILL ANOTHER ATTEMPT TO GET SPACE ON       *
*        THE CURRENT VOLUME.                                          *
*                                                                     *
*        IFG0RR0B TO CONTINUE RECOVERY PROCESSING.                    *
*                                                                     *
* EXIT-ERROR =                                                        *
*        IFG0550P GIVEN CONTROL THROUGH DMABCOND MACRO WITH AN        *
*        INTERNAL ABEND CODE IN REGISTER 0 -                          *
*        190 - 737-4 - I/O ERROR READING OR WRITING DSCB              *
*        186 - D37-4 - NO SECONDARY SPACE SUPPLIED.                   *
*        185 - B37-4 - NO VOLUME COULD BE DISMOUNTED ON WHICH TO      *
*        MOUNT ANOTHER VOLUME TO CONTINUE OUTPUT PROCESSING.          *
*        184 - E37-4 - NO MORE VOLUMES SPECIFIED IN JFCB (VOLUME      *
*        COUNT OR NUMBER OF VOLUMES REACHED).                         *
*                                                                     *
*        SYSTEM 001 ABEND ISSUED.                                     *
         EJECT
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES =                                                       *
*        IFG019RA THROUGH THE IECRES MACRO.                           *
*                                                                     *
*        IECPRLTV - MBBCCHHR TO TTR CONVERT ROUTINE.                  *
*                                                                     *
*        B37/D37/E37 ABEND EXIT.                                      *
*                                                                     *
*    DATA AREAS =                                                     *
*        EOV WORKAREA.                                                *
*                                                                     *
*    CONTROL BLOCK =                                                  *
*        DCB                                                          *
*        CVT                                                          *
*        DEB                                                          *
*                                                                     *
* TABLES =                                                            *
*        DCB EXIT LIST.                                               *
*                                                                     *
* MACROS =                                                            *
*        MODESET                                                      *
*        IECRES-LOAD                                                  *
*        IECRES-FREE                                                  *
*        IECRES-EXIT                                                  *
*        IECRES-INIT                                                  *
*        IECRES-UEXIT                                                 *
*        ABEND                                                        *
*        EXCP                                                         *
*        WAIT                                                         *
*        DMABCOND                                                     *
*        XCTLTABL                                                     *
*        IECDSECS                                                     *
*        IECEQU                                                       *
*                                                                     *
* CHANGE ACTIVITY =                                                   *
*        SEE CHANGES/DELETIONS SECTION JUST AFTER CSECT CARD.         *
*                                                                     *
***********************************************************************
         EJECT
EABD185  EQU   185                      B37-4 INTERNAL ABEND CODE
EABD186  EQU   186                      D37-4 INTERNAL CODE    @ZA02218
EABD190  EQU   190                      737-4 INTERNAL ABEND CODE
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY
         USING *,RBASE                                           YM3903
         USING FORCORE,RCORE
         USING WTG,RWTG                 BASE FOR WTG TABLE       Y02080
         USING TIOENTRY,RTIOT
         USING UCB,RUCB
         USING DEBBASIC,RDEB                                     YM1272
         USING DCBRELAD,RDCB
         L     RDEB,DCBDEBAD            GET DEB                  YM6520
         L     RUCB,DEBSUCBA            GET OLD UNIT             YM6520
         LA    RUCB,K0(,RUCB)           CLEAR HIGH BYTE          YM6520
         ST    RUCB,DXUCBADR            PLACE IN WORKAREA        YM6520
         LA    R1,EABD186               GET D37 ABEND CODE     @ZA02218
         CR    RC,R1                    D37 ABEND PROCESSING?  @ZA02218
         BE    EDO08400                 YES, BR TO CHECK FOR   @ZA02218
*                                       EXIT. BYPASS VOLUME    @ZA02218
*                                       MOUNT ROUTINE BECAUSE  @ZA02218
*                                       THE VOLUME IS STILL    @ZA02218
*                                       MOUNTED.               @ZA02218
*
*        LOCATE PREVIOUS VOLUME'S VOLSERNO USING DXVOLSEQ WHICH  YM6520
*        HAS BEEN INCREMENTED BY ONE IN ATTEMPTING TO MOUNT THE  YM6520
*        NEXT VOLUME.                                            YM6520
*
         LH    R1,DXVOLSEQ              NEW SEQUENCE             YM6520
         BCT   R1,EDO08310              BRANCH IF VOLSEQ NOT ONE YM6520
         B     EDO08875                 ABEND IF COUNT WAS ONE   YM6520
EDO08310 EQU   *                        R1 HAS OLD VOLUME SEQ    YM6520
         CH    R1,HWD5                  IS VOLSER IN JFCB        YM6520
         LA    RET,JFCBVOLS-K4          INITIALIZE IF IN JFCB    YM6520
         BNH   EDO08325                 BRANCH IF IN JFCB        YM6520
         LA    RET,JFCBEXAD             JFCB EXTENTION ADDR      YM6520
         SH    R1,HWD5                  REDUCE BY 5              YM6520
EDO08320 EQU   *                        CHECK NEXT EXTENTION     YM6520
         CLC   ADCON0,K0(RET)           IS THERE AN EXTENTION    YM6520
         BZ    EDO08875                 ABEND IF NOT             YM6520
         IECRES LOCJFCB,(RET)           LOCATE JFCB EXTENTION    YM6520
         CH    R1,HWD15                 IS VOLSER IN THIS EXT.   YM6520
         BNH   EDO08325                 BRANCH IF YES            YM6520
         SH    R1,HWD15                 REDUCE BY 15             YM6520
         B     EDO08320                 TRY NEXT ONE             YM6520
EDO08325 EQU   *                        GET VOLSER               YM6520
         BCTR  R1,0                     REDUCE BY 1              YM6520
         MH    R1,HWD6                  GET OFFSET               YM6520
         LA    RET,K4(R1,RET)           RET POINTS TO VOLSER     YM6520
         MVC   DXVOLSR1,K0(RET)         PUT VOLSER IN DXVOLSR1   YM6520
         EJECT
*
*        ENSURE VOLUME IS STILL MOUNTED                          YM6520
*
         LA    RET,EDO08875             ABEND IF SUBSEQUENT ERR  YM6520
         L     RF,DXXPREFX              PREFIX ADDR              YM6520
         USING IECPREFX,RF              PREFIX ADDRESSABILITY    YM6520
         STM   R0,RET,IECREGSV          SAVE SETLOCK REGS       ZA00019
         MODESET EXTKEY=SUPR            SETLOCK KEY              YM6520
EDO08330 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(LOCAL,IFG0554T(EDO08345)) GET LOCK       YM6520
         MODESET EXTKEY=DATAMGT         RETURN TO D. M. KEY      YM6520
         LM    R0,RET,IECREGSV          RESTORE SETLOCK REGS    ZA00019
         CLC   UCBVOLI,DXVOLSR1         IS VOLUME MOUNTED STILL  YM6520
         BNE   EDO08340                 BRANCH IF NO-ABEND       YM6520
         L     R0,UCB+(((UCBDMCT-UCB)/K4)*K4) ALIGN & LOAD WORD  YM6520
EDO08335 EQU   *                        INCREMENT D M COUNT      YM6520
         LR    RF,R0                    SAVE IN RF               YM6520
         SLL   RF,K25                   COUNT IN HIGH 7 BITS     YM6520
         SRL   RF,K25                   COUNT IN LOW 7 BITS      YM6520
         CLM   RF,B'0001',BYTE127       IS THERE 127 USERS       YM6520
         BNL   EDO08340                 BRANCH IF YES            YM6520
         LA    R1,K1                    INCREMENT VALUE          YM6520
         AR    R1,R0                    R1 HAS UPDATED WORD      YM6520
         EJECT
         MODESET EXTKEY=SUPR            UCB KEY                  YM6520
         CS    R0,R1,UCB+(((UCBDMCT-UCB)/K4)*K4) UPDATE COUNT    YM6520
         MODESET EXTKEY=DATAMGT         RETURN TO DM KEY         YM6520
         BNE   EDO08335                 TRY AGAIN-R0 IS RESET    YM6520
         NI    DXATEOV,X'FF'-DXATNVOL   INDICATE TO RECOVERY OLD YM6520
*                                       UNIT IS STILL ACTIVE     YM6520
         LA    RET,EDO08400             NORMAL RETURN            YM6520
EDO08340 EQU   *                        RLSE LOCK-RETURN ON RET  YM6520
         L     RF,DXXPREFX              PREFIX ADDRESS           YM6520
         STM   R0,RET,IECREGSV          SAVE SETLOCK REGS       ZA00019
         MODESET EXTKEY=SUPR            SETLOCK KEY              YM6520
EDO08345 SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,IFG0554T(EDO08330)) RELEASE LOCK   YM6520
         MODESET EXTKEY=DATAMGT         RETURN TO D. M. KEY      YM6520
         LM    R0,RET,IECREGSV          RESTORE REGS            ZA00019
         BR    RET                      RETURN                   YM6520
*                                                                YM7099
*        RETURN TO IFG0RR0B                                      YM7099
*                                                                YM7099
EDO08360 EQU   *                                                 YM7099
         MVC   WTGMODNM,RECMOD          MOVE RECOVERY MOD NAME   YM7099
         L     RF,DXATCOM3              GET RRPLIST PTR          YM7099
         USING RRPLIST,RF                                        YM7099
         L     RF,RRFWORK               RECOVERY SUBRTN SAVEAREA YM7099
         L     RET,IECREGSV-IECEXTPR+K4*RET(,RF) GET RETURN ADDR YM7099
         ST    RET,WTGMODEP             SET EPA TO RETURN ADDR   YM7099
         LM    R0,RD,0(RF)              GET RECOVERY SUBRTN REGS YM7099
         IECRES LOAD,EXTPR=(RF),BRANCH=DIRECT RETURN TO IFG0RR0B YM7099
         EJECT
         DROP  RF                                                YM6520
*
*        CHECK FOR DCB EXIT, IF NONE ISSUE B37 ABEND
*
EDO08400 EQU   *                        ONLY LOOK IF BSAM/QSAM
         L     R1,WTGPREFX              GET BASE PREFIX ADDR     YM7099
         CLC   IECCORID-IECPREFX(K4,R1),RECCORID  RECOVERY ENTRY YM7099
         BE    EDO08360                 BRANCH IF RECOVERY ENTRY YM7099
         TM    DCBMACRF,DCBMEXCP        CHECK FOR EXCP
         BO    EDO08875                 IF EXCP, IMMEDIATE ABEND YM6520
         TM    DCBDSORG,DCBORGPS        IS THIS PHYSICAL SEQ.
         BZ    EDO08875                 NO, IMMEDIATE ABEND      YM6520
         TM    DCBMACRF+K1,DCBMPUT+DCBMWRIT  QSAM (PUT) OR
*                                            BSAM (WRITE) DCB
         BZ    EDO08875                 NO, IMMEDIATE ABEND      YM6520
*
*                        CHECK FOR DCB EXIT
*
         L     R1,DCBEXLST              EXIT LIST = 0 OR 1
         LA    R1,K0(,R1)
         LA    R0,K1
         CR    R1,R0
         BNH   EDO08875                 NO EXIT LIST SPECIFIED
         SR    RD,RD                    SET FIRST PASS SW FOR  @ZA02218
*                                       D37 ABEND PROCESSING   @ZA02218
EDO08600 EQU   *                        SEE IF 08 EXIT
         MODESET KEYADDR=DXUKEY,WORKREG=15 USER EXIT LIST        Y02082
         CLI   0(R1),X08                CK FOR ACTIVE DCB EXIT
         BE    EDO08700                 YES SET UP EXIT
         CLI   0(R1),X08+X80
         BE    EDO08700                 YES SET UP EXIT
         TM    K0(R1),LASTNTRY          IS THIS END OF LIST
         BO    EDO08875                 YES, IMMEDIATE ABEND     YM6520
         LA    R1,K4(,R1)               INCREMENT TO NEXT ENTRY  YM1344
         B     EDO08600                 LOOP TO CHECK NEXT ENTRY YM1344
         EJECT
EDO08700 EQU   *                        SEE IF ADDRESS ZERO
         L     RET,K0(,R1)              GET EXIT ADDRESS         Y02082
         MODESET EXTKEY=DATAMGT         EOV KEY                  Y02082
         LA    R1,K0(,RET)              CLEAR HIGH BYTE          Y02082
         CR    R1,R0                    IS ADDRESS SPECIFIED     Y02082
         BNH   EDO08875                 BRANCH IF NO             Y02082
         CLI   DEBNMEXT,K16             CHECK FOR 16 EXTENTS
         BNL   EDO08900                 BR HI OR EQ TO 16
         L     RUCB,DXUCBADR            GET UCB ADDRESS          YM5385
         TM    UCBJBNR,UCBVRDEV         IS IT VIO UNIT           YM5385
         BO    EDO08900                 BR IF YES-NO RECOVERY,   YM5385
*                                       LIKE 16 EXTENT DEB       YM5385
         NI    DCBOFLGS,X'FF'-DCBOLOCK  SET LOCK BIT OFF
*                                                                Y02082
* COPY THE DCB FROM THE WORK AREA TO USER'S STORAGE              Y02082
*                                                                Y02082
         IECRES INIT,DCBCOPY=FRWKAR,STM=(3,14,WTGPREFX) COPY DCB Y02082
         IECRES UEXIT,EXITAD=(RET),REG1=DXUDCBAD, TAKE EXIT      Y02082*
               STM=(2,13,DXXPREFX)      TAKE EXIT                Y02082
         LR    RET,RF                   SAVE REGISTER 15         YM0854
         EJECT
         L     RDCB,DXUDCBAD            GET PTR TO USER'S DCB    Y02082
         MODESET KEYADDR=DXUKEY,WORKREG=1 ASSUME USER'S KEY      Y02082
         OI    DCBOFLGS,DCBOLOCK        INDICATE RETURN FR USER  Y02082
         MODESET EXTKEY=DATAMGT         RESUME DATA MGT KEY      Y02082
         L     RDCB,DXPDCBAD            POINT TO COPIED DCB      Y02082
         OI    DCBOFLGS,DCBOLOCK        SET LOCK BIT ON          YM0854
*
*        INSPECT RETURN CODE
*
         LA    RET,K0(,RET)             CLEAR HI-ORDER BYTE      Y02082
         LA    R8,K2                    HIGHEST PERMISSIBLE RET  Y02082
         CLR   RET,R8                   CHK IF EXCEED MAX        YM1344
         BNH   EDO08840                 VALID - THEN USE IT      Y02082
         LA    RET,K2                   IF INVALID DEFLT B37     Y02082
EDO08840 EQU   *                        GET TO FULLWORDS         Y02082
         SLL   RET,K2                   RET * 4                  YM0854
         B     EDO08850(RET)            VECTOR BRANCH            YM0854
         SPACE 2
EDO08850 EQU   *                        BRANCH TABLE
         B     EDO09400                 RF=0 - TRY TO EXTEND
         SPACE 2
         B     EDO08900                 RF=1 - UPDATE DSCB, SYNAD
         SPACE 2
EDO08870 EQU   *                                               @ZA02218
         BAL   R8,EDO09700              RF=2 - UPDATE DSCB, ABEND
EDO08875 EQU   *                        ABEND
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02082
         L     R1,WTGPREFX              GET BASE PREFIX ADDR     YM7099
         CLC   IECCORID-IECPREFX(K4,R1),RECCORID  RECOVERY ENTRY YM7099
         BE    EDO08360                 BRANCH IF RECOVERY ENTRY YM7099
         LR    R0,RC                    LOAD ABEND CODE        @ZA02218
         B     EDO10050                 BRANCH TO PROB DET     @ZA02218
         EJECT
* 1) UPDATE DSCB
* 2) LINK THROUGH ALL QSAM IOB/ICB(S) TURNING OFF THE UNIT EXCEPTION
* STATUS INDICATOR IN THE CSW'S.
* 3) EXIT TO SYNAD ROUTINE
EDO08900 EQU   *                        UPDATE DSCB FIRST
         BAL   R8,EDO09700              GO TO UPDATE LAST TRK IN DSCB
         L     RF,DCBIOBA               POINTER TO AN IOB IN CHAIN
         LA    RF,K0(,RF)
         MODESET KEYADDR=DXUKEY,WORKREG=1 IOB KEY                Y02082
         L     R1,K0(RF)                ADDRESS OF NEXT IOB IN CHAIN
EDO09000 EQU   *                        TURN OFF UNIT EXCEPTION
         LA    R1,K0(R1)                CLEAR HIGH ORDER BYTE
         NI    K20(R1),ALLBITS-CSWUNITX SET OFF UNIT EXCEPTION IN CSW
         CR    R1,RF                    IS THIS END OF CHAIN
         L     R1,K0(R1)                GET NEXT IOB IN CHAIN
         BNE   EDO09000                 NOT END OF CHAIN,CONTINUE LOOP
         LA    R1,X40+X02               INDICATE PUT ERROR NO SPACE ON
         SLL   R1,K24                   VOLUME JUSTIFY LEFT  THE CODE
         ICM   R1,B'0111',DXUDCBAD+K1   PUT USER DCBAD IN R1    YA02662
         TM    DCBMACRF+K1,DCBMWRIT     IS THIS BSAM           @ZA10234
         BO    EDO09050                 YES, BYPASS MOVE       @ZA10234
         MODESET EXTKEY=DATAMGT         DCB COPY KEY             Y02082
         MVC   DCBRECAD(K4),DCBEOBAD
         MODESET KEYADDR=DXUKEY,WORKREG=8 IOB KEY              @ZA08028
EDO09050 EQU   *                                               @ZA10234
         MVI   K4(RF),ECBCOD7F          RESET IOB COMPLETE
         L     RF,K4(,RF)               ADDRESS OF IOB IN ERROR
         LA    R0,K8(RF)                INDEX PAST IOB HDR
         SR    RF,RF
         IC    RF,DCBOFFSW              INSERT IOB OFFSET
         SH    RF,CNST8                 ADJUST FOR EIGHT BYTE HDR
         SLL   RF,K24                   JUSTIFY LEFT THE OFFSET
         OR    R0,RF                    REG 0 WITH OFFSET & IOB ADDRESS
         TM    DCBMACRF+K1,DCBMREAD     IS CALLER BSAM
         BZ    EDO09200                 NO,QSAM
         LR    RF,R0                    MOVE IOB PTR TO ADDRESSABLE REG
         L     RF,K4(RF)                GET DECB PTR
         LA    R0,K0(RF)                CLEAR HI BYTE + SET R0 FOR BSAM
         EJECT
EDO09200 EQU   *                        SEE IF SYNAD CAN BE TAKEN
         MODESET EXTKEY=DATAMGT         EOV KEY                  Y02082
         NI    DCBCIND2,ALLBITS-DCBC2FEO CLEAR FEOV FLAGS
         TM    DCBCIND2,DCBC1EOB        IS CLOSE IN CONTROL
         BO    EDO10100                 YES, ABEND WITHOUT SYNAD
         TM    DCBSYNAD+K3,X01          TEST FOR SYNAD
         BO    EDO10100                 IF NONE, ABEND
         OI    DCBCIND2,DCBC2PIO        SET PERM ERR SO SYNAD CAN CLOSE
         NI    DCBOFLGS,ALLBITS-DCBOBUSY TURN OFF BUSY BIT
*                                                                Y02080
* POINT DEB TO USER DCB                                          Y02082
*                                                                Y02080
         TM    TIOELINK,TIOTSPOL        TEST FOR SPOOLED         YM1272
         BM    EDO09250                 BR IF SPOOLED            YM1272
         MVC   DEBDCBAD+K1(L'DEBDCBAD-K1),DXUDCBAD+K1 POINT DEB  YM1272*
                                        TO USER DCB              YM1272
         L     RF,DXDEBXAD              GET PTR TO DEB EXTENSION YM1272
         NI    DEBXFLG1-DEBXTN(RF),ALLBITS-DEBXCDCB DEB PT USER  YM1272
EDO09250 EQU   *                        EXIT TO SYNAD ROUTINE    YM1272
         NI    DCBCIND1,X'FF'-DCBC1EOB  CLEAR QSAM VOLUME FULL INDICATR
*
*        REFRESH THE USER'S DCB FROM THE COPY
*
         IECRES INIT,DCBCOPY=FRWKAR,STM=(0,14,DXXPREFX)          Y02082
         EJECT
         L     R8,DCBSYNAD              SYNAD ADDRESS FROM DCB   Y02080
         LR    R9,R0                    SAVE REG 0 IN REG 9    @ZA05438
         LR    RA,R1                    SAVE REG 1 IN REG A    @ZA05438
*
*        FREE THE EOV WORKAREA(S)
*
         IECRES FREE,A=(RCORE),PREFIX=EOV                        Y02080
*                                                                Y02080
*        RETURN TO CALLER (QSAM)                                 Y02080
*                                                                Y02080
         LR    RF,R8                    SYNAD ADDRESS IN 15      Y02080
         LR    R0,R9                    RESTORE REG 0          @ZA05438
         LR    R1,RA                    RESTORE REG 1          @ZA05438
         IECRES EXIT                    RETURN                   Y02080
*
*        RETURN TO IFG0554P TO EXTEND ON SAME VOLUME
*
EDO09400 EQU   *                        RETURN CODE 0 FROM EXIT
         LA    R1,EABD186               GET D37 ABEND CODE     @ZA02218
         CR    RC,R1                    D37 ABEND PROCESSING?  @ZA02218
         BNE   EDO09405                 NO, BR                 @ZA02218
         LTR   RD,RD                    FIRST PASS?            @ZA02218
         BNZ   EDO08870                 NO, BR TO ASSUME RC=2  @ZA02218
         LA    RD,4                     SET SECOND PASS SW     @ZA02218
         L     R1,DCBEXLST              GET EXLST ADDR IN REG 1@ZA02218
         B     EDO08600                 BR TO TAKE EXIT AGAIN  @ZA02218
EDO09405 EQU   *                                               @ZA02218
         LA    RD,K1                    GET SPACE ON SAME VOLUME
         LA    RWTG,DXXAREA             POINTER TO WTG TABLE     Y02134
         LA    RWTGC,DXXENTRY           POINTER TO WTG ENTRY     Y02134
         IECRES LOAD,MODID=ID4T4P,BRCODE=K16,BRANCH=QUEUED       Y02134
         EJECT
*
*          ENTER VIA BAL RH,UPDATTRK
*          ROUTINE TO UPDATE LAST TRK
*
EDO09700 EQU   *                        WRITTEN AND PUT IN DSCB
         MVC   DXDEBUCB+K1(K3),DXUCBADR+K1 UCB TO WA DEB         Y02134
         MVC   DXDEBSCC(K10),UPDDUMXT   MOVE DUMMY EXTENT TO DEB
         L     RUCB,DXUCBADR            GET UCB ADDRESS          YM5385
         TM    UCBJBNR,UCBVRDEV         IS IT VIO UNIT           YM5385
         BZ    EDO09750                 BRANCH IF NO             YM5385
         DROP  RUCB                                              YM5385
         USING VDSCB,RUCB                                        YM5385
*                                       MOVE VDSDSCB TO WORKAREA YM5385
         MVC   DXDSCB(DSCEXT2-DSCFMTID),VDSDSCB+L'JFCBDSNM       YM5385
         OC    DXDSCB(DSCEXT2-DSCFMTID),DXDSCB IS DSCB SCRATCHED YM5385
         BZ    EDO10025                 BRANCH IF YES            YM5385
         XC    DSCEXT2(DSCBEND-DSCEXT2),DSCEXT2 ZERO 3RD EXTENT  YM5385
*                                       AND CHAIN POINTER        YM5385
         B     EDO09800                 UPDATE DSCB              YM5385
         DROP  RUCB                                              YM5385
         USING UCB,RUCB                                          YM5385
EDO09750 EQU   *                        USE REAL I/O             YM5385
         LR    R7,RDEB                  PICK UP DEB ADDRESS
         SH    R7,UPD016                POSITION AT (-16)
         MVC   DXDAADDR+K1(K7),DEB+K1-DEB(R7)  BBCCHHR OF
*                                                DSCB TO SEEK WRD
         MVI   DXDAADDR,K0              SET -M- TO ZERO
*
*        GENERATE CHANNEL PROGRAM TO READ FRMT 1 DSCB
*
         XC    DXCCW1(K24),DXCCW1       CLEAR CCW'S
         LA    R1,DXDAADDR+K3           ADDRESS OF CCHHR
         ST    R1,DXCCW1                SEARCH ID TO CCW1
         LA    R1,DXCCW1                ADDR OF SEARCH CMD TO TIC
         ST    R1,DXCCW2                STORE IN CCW2
         LA    R1,DXDSCB                READ INTO AREA ADDRESS
         ST    R1,DXCCW3                TO READ M/T COMMAND
         OC    DXCCW1(K24),UPDCCWS      OR IN SKELETON CCW'S
         BAL   R7,EDO10000              BRANCH TO I/O ROUTINE
*
*        END OF DSCB READ ROUTINE
         EJECT
EDO09800 EQU   *                        UPDATE DSCB              YM5385
*              UPDATE LAST TRACK WRITTEN IN DSCB
*                       MBBCCHHR TO TTR CONVERT ROUTINE
*                       (IECPRLTV) WILL BE USED
*
         STM   RDCB,RD,DXCCW5           SAVE REGS
         LR    R1,RDEB                  ADDR USER'S DEB TO PARM REG
         LA    RDCB,DCBFDAD             ADDR MBBCCHHR TO PARAM REG
         L     RF,CVTPTR                ADDRESS OF CONVERT ROUTINE
         USING CVT,RF                                            YM6520
         L     RF,CVTPRLTV              FROM COMM VECTOR TABLE
         BALR  RET,RF                   GO TO CONVERT ROUTINE
         DROP  RF                                                YM6520
         LM    RDCB,RD,DXCCW5           RESTORE REGS
         ST    R0,DXCCW5                PUT TTR OF LAST TRK USED
         MVC   DSCLSTAR(K3),DXCCW5      INTO THE DSCB
         MVC   DSCLSTAR+K3(K2),DCBTRBAL  NUM OF BYTES LEFT ON TRACK
         OI    DSCDSIND,LASTNTRY        LAST VOLUME BIT         YA03178
         OI    DXATDACC,DXATTRAK        LAST TRK USED AND TRK    Y02144
*                                       BALANCE FIELDS UPDATED   Y02144
         EJECT
*
*        WRITE FORMAT 1 DSCB BACK
*
         TM    UCBJBNR,UCBVRDEV         IS IT VIO UNIT           YM5385
         BZ    EDO09850                 BRANCH IF NO             YM5385
         DROP  RUCB                                              YM5385
         USING VDSCB,RUCB                                        YM5385
         MODESET EXTKEY=SCHED           VDSCB KEY                YM5385
*                                       MOVE DSCB TO SWA         YM5385
         MVC   VDSDSCB+L'JFCBDSNM(DSCEXT2-DSCFMTID),DXDSCB       YM5385
         MODESET EXTKEY=DATAMGT         RETURN TO D.M. KEY       YM5385
         B     EDO09900                 UPDATE COMPLETE          YM5385
         DROP  RUCB                                              YM5385
         USING UCB,RUCB                                          YM5385
EDO09850 EQU   *                        USE REAL I/O             YM5385
         XC    DXCCW3(K48),DXCCW3       CLEAR CCWS
         LA    R1,DXDAADDR+K3           SEARCH ADDRESS
         ST    R1,DXCCW6
         LA    R1,DXCCW1                TIC ADDRESS
         ST    R1,DXCCW4
         LA    R1,DXDSCB                BUFFER ADDRESS
         ST    R1,DXCCW5
         ST    R1,DXCCW8
         LA    R1,JFCBDSNM              DSNAME FOR SEARCH KEY
         ST    R1,DXCCW3
         LA    R1,DXCCW6                TIC ADDRESS
         ST    R1,DXCCW7
         OC    DXCCW3(K48),WRTCCWS      FINISH CHANNEL PROGRAM
         BAL   R7,EDO10000              BRANCH TO I/O ROUTINE
EDO09900 EQU   *                        SET AUDIT TRAIL BIT      YM5385
         OI    DXATDACC,DXATUPDB        UPDATED DSCB WRITTEN     Y02144
         BR    R8                       RETURN
         EJECT
*
*        I/O ROUTINE- READS/WRITES FORMAT 1 DSCB
*
EDO10000 EQU   *                        EXCP/WAIT/TEST FOR ERROR
         EXCP  DXIOB                    EXECUTE CHANNEL PROGRAM
         WAIT  ,ECB=DXECB               WAIT FOR COMPLETION
         TM    DXECB,ECBCOD7F           TEST COMPLETION CODE
         BCR   1,R7                     OK, RETURN
EDO10025 EQU   *                        VIO ERROR ENTRY          YM5385
         LA    R0,EABD190               I/O ERROR WR DSCB 737 ABEND
EDO10050 EQU   *                        TEST IF CLOSE IN CONTROL
         TM    DCBMACRF,DCBMEXCP        IS THIS EXCP DCB?      @ZA18533
         BO    EDO10075                 YES, BRANCH            @ZA26360
         OI    DCBCIND2,DCBC2PIO        SET PERM ERR IN DCB    @ZA26360
         TM    DCBCIND2,DCBC2PUT        IS CLOSE IN CONTROL
         BO    EDO10075                 LEAVE BUSY BIT ON
         NI    DCBOFLGS,X'FF'-DCBOBUSY  TURN OFF BUSY BIT
EDO10075 EQU   *                        GO TO PROBLEM DETERMINATION
         LA    RWTGC,DXXENTRY           SET R8 FOR RES RTN
         LA    RWTG,DXXAREA             POINT TO EOV WTG
         DMABCOND (0),MODPD4T           LOAD ABEND ERROR CODE
         SPACE 2
EDO10100 EQU   *                        ISSUE 001 ABEND DIRECTLY
         L     RDCB,DXUDCBAD            GET USER'S DCB ADDRESS   YM5924
         LA    R1,K1                    001 ABEND                Y02082
         ABEND (1),DUMP,,SYSTEM         SYSTEM ABEND WITH A DUMP Y02080
         EJECT
*
*              CONSTANTS
*
UPDDUMXT DC    X'00000000FFFFFFFF7FFF'  MAX FOR DISK
UPD016   DC    H'16'                    HALF WORD 16
CNST8    DC    H'8'                     HALF WORKD 8             Y02082
HWD5     DC    H'5'                     HALF WORD 5              YM6520
HWD15    DC    H'15'                    HALF WORD 15             YM6520
HWD6     DC    H'6'                     HALF WORD 6              YM6520
         DS    0F
BYTE127  DC    AL1(127)                 BYTE 127                 YM6520
ADCON0   DC    AL3(0)                   ADCON OF ZERO            YM6520
UPDCCWS  DC    X'3100000060000005'      SEARCH EQUAL ID
         DC    X'0800000000000000'      TIC
         DC    X'8600000000000060'      READ DATA M/T
WRTCCWS  DC    X'290000004000002C'      SEARCH KEY (DSNAME)
         DC    X'0800000040000000'      TIC
         DC    X'0500000060000060'      WRITE DSCB
         DC    X'3100000060000005'      SEARCH ID
         DC    X'0800000040000000'      TIC
         DC    X'0600000010000060'      READ,NO DATA TRANSFER
RECCORID DC    C'RR0A'                  RECOVERY CORE ID         YM7099
         DS    0F
MKB370S  DC    X'00000B37'              B37 COMPARE
TIOTSPOL EQU   X'06'                    TIOT SPOOLED DS INDIC    YM1272
         EJECT
*
*          XCTL TABLE FOR IFG0554T
*
XCTLTA4T XCTLTABL ID=(MODPD4T,0P,ID4T4P,4P,RECMOD,IFG0RR0B),     YM7099*
               SVC=055,BRT=YES,LENGTH=                           Y02080
         IECDSECS CVT,TCB,TIOT,DCB,IEZDEB,UCB,MAIN,WTG,RB,PREFX, YM1272X
               RRPL,PSA,EXPAND=YES                               Y02144
         IDDVDSCB ,                                              YM5385
         IECEQU IEZDEB=YES                                       YM1272
         END
