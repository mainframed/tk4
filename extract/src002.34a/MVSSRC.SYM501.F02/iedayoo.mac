         TITLE 'IEDAYOO - TSOUTPUT QTIP ROUTINES'
IEDAYOO  CSECT
*
*        VS2  3.0  SU
*0000003600,491510,491520,516988                     UZ04353   @ZA10219
*0000003600,628523                                   UZ04353   @ZA10218
*0000072500,087000,268200-269110,270910-270950       UZ03998   @ZA08015
*0000280810-281700,509410-509460,519310                        @ZA08015
*0000627800-627800,628501-628527  QTIP 10 FIX                  @ZA07610
*0000193280                                                    @ZA05465
*0000054000,104002-104083                                      @ZA02242
*0000464100-464200                                             @ZA02256
*
*         RELEASE 3, VS/2, ACTIVITY
*   FOR APAR ZA00968, SEE ALSO SA70323.                         ZA00968
*A091500-092532                                                 ZA00968
*C003600                                                        ZA01350
*A612402,612406                                                 ZA01350
*D001600                                                        ZA01350
*         RELEASE 2, VS/2, ACTIVITY
*                                       02/19/73                VS00022
*                                       05/08/73                SJ00088
*                                       05/14/73                VS01090
*
*         RELEASE 1, VS/2, DELETIONS                            *
*D090200-090600,091100-091500,094500                             YM2814
*          RELEASE 21.8 CHANGES
*A002837-002845,079500-080000,698520-698540                     SA70323
*C028500-028550,084000-096920,104000-104030,439000-444500       SA70323
*C461000-464996,465000-496000,513000-516997                     SA70323
*D002342-002345,002634-002652,002837,013500-014500,104035-104080SA70323
*                                                                S22028
*                                                                S22029
*        STATUS  VS2  3.0   SU
*
* FUNCTION -- THIS CSECT IS A COLLECTION OF ROUTINES USED BY TSOUTPUT
*    (IEDAYO), OR SYSTEM-INITIATED CANCEL
*    TO PERFORM FUNCTIONS WHICH MUST BE PERFORMED
*    WHILE LOCKED.
*
* ENTRY POINTS --
*         QTIP0110 - MOVES A TSO MESSAGE FROM THE OUTPUT HEADER
*    QUEUE TO THE OUTPUT TRAILER QUEUE.
*         QTIP0120 - REMOVES FROM THE OUTPUT TRAILER QUEUE TS
*    BUFFERS FROM WHICH ALL DATA HAS BEEN SUCCESSFULLY SENT TO
*    THE TERMINAL.  IF THE NUMBER OF BUFFERS FREED PERMITS ANY
*    WAIT CONDITIONS TO BE REMOVED, THEY ARE REMOVED.
*    QCBTPUT/QCBWRBRK ARE RESET UNLESS THERE ARE MORE MESSAGES TO BE
*    SENT.
*         QTIP0130 - REFORMATS A TS MESSAGE TO ITS ORIGINAL FORMAT,
*    SO A MESSAGE IN ERROR MAY BE RESENT.
*         QTIP0140 - CLEANS UP TSO CONTROL BLOCKS FOR LOGOFF AND
*    HANGUP SITUATIONS.
*         QTIP0150 - MAKES A DISPLAY TERMINAL FLASHBACK MESSAGE OR
*    AN INPUT MESSAGE INTERRUPTED BY A BREAK-IN TPUT, RESIDING ON
*    THE INPUT QUEUE, RESIDE ALSO ON THE OUTPUT TRAILER QUEUE.
*         QTIP0160 - RESETS QCBTPUT/QCBWRBRK, DETECTS START AUTO
*    PROMPT REQUEST, AND TPOSTS LCB TO ITSELF.
*         QTIP0240 - ENTERED FROM SYSTEM-INITIATED CANCEL ROUTINE
*    TO CHECK FOR AND REMOVE ASID OWAIT.
*
*    THE CALLING SEQUENCE IS THE SAME FOR ALL ENTRY POINTS.
*    FOR ANY ENTRY POINT, QTIP0XX0, WHERE XX REPRESENTS THE DECIMAL
*    ENTRY NUMBER, THE CALLING SEQUENCE IS AS FOLLOWS:
*        LA    0,XX          LOAD QTIP ENTRY NUMBER
*        LA    1,SAVEAREA    POINT REG. 1 TO 12 WORD PARAMETER AREA
*        STM   2,13,0(1)     STORE REGISTERS IN PARAMETER AREA
*        SVC   101           ISSUE QTIP SVC
*
* INPUT --
*         QTIP0110 -
*    REG. 7 - ADDRESS OF DESTINATION QCB                        ZA00968
*    REG. 8 - TSB ADDRESS
*    REG. 13 - ADDRESS OF AVTSAVE2
*         QTIP0120 -
*    REG.  8 - ADDRESS OF TSB
*    REG. 10 - ADDRESS OF TIOCRPT
*    REG. 13 - ADDRESS OF AVTSAVE2
*    REG. 15 - ZERO MEANS QUEUE FLUSH ALLOWED
*         QTIP0130 -
*    REG. 7 - ADDRESS OF DESTINATION QCB                        ZA00968
*    REG. 8 - ADDRESS OF TSB
*    REG. 13 - ADDRESS OF AVTSAVE2
*         QTIP0140 -
*    REG.  7 - ADDRESS OF DESTINATION QCB
*    REG.  8 - ADDRESS OF TSB
*         QTIP0150 -
*    REG. 8 - ADDRESS OF TSB
*         QTIP0160 -
*    REG.  4 - ADDRESS OF LCB
*    REG.  7 - ADDRESS OF DESTINATION QCB
*    REG.  8 - ADDRESS OF TSB
*    REG. 13 - ADDRESS OF AVTSAVE2
*         QTIP0170 -
*    REG. 2 - ADDR OF TS BUFFER
*    REG. 15 - AMOUNT OF DATA MOVED FROM THIS BUFFER
*         QTIP0240 -
*    REG.  5 - ASID
*
*    FOR ALL ENTRY POINTS REGISTER 12 IS THE BASE REGISTER AND
*    CONTAINS THE ADDRESS OF QTIP0110.
*
* OUTPUT --
*         QTIP0110 - RETURN CODE IN REGISTER 15 -               SA70323
*    X'00' - NOTHING TO SEND                                    SA70323
*    X'04' - SOMETHING TO SEND                                  SA70323
*         QTIP0120 - NONE
*         QTIP0130 - NONE
*         QTIP0140 - NONE
*         QTIP0150 - NONE
*         QTIP0160 - RETURN CODE IN REGISTER 15 -
*    X'00' - AUTO PROMPT STARTING NOT REQUESTED
*    X'04' - START OF AUTO PROMPTING REQUESTED
*         QTIP0170 - NONE.
*         QTIP0240 - NONE
*
* EXTERNAL REFERENCES -
*         QTIP0030 - THIS IS A QTIP ROUTINE IN CSECT IEDAYAA
*    USED TO CLEAR ALL TS BUFFER QUEUES.
*         QTIP0280 - THIS IS A QTIP ROUTINE IN CSECT IEDAYII
*    USED TO CLEAN UP LWAIT CONDITIONS.
*
* EXITS, NORMAL --
*         QTIP0140 - EXITS TO QTIP0030 IN CSECT IEDAYAA
*
*    ALL OTHER ENTRIES RETURN TO THE CALLER BY BRANCHING TO THE
*    ADDRESS IN REGISTER 14.
*
* EXITS,ERROR -- NONE
*
* TABLES/WORK AREAS -- SEE REMARKS ACCOMPANYING DATA DEFINITION
*    STATEMENTS.
*
* ATTRIBUTES -- REENTRANT, REUSABLE, PRIVILEGED, LOCKED, REFRESHABLE
*
* CHARACTER CODE DEPENDENCY -- NONE
*
* NOTES -- NONE
*
         DC    C'IEDAYOO'               MODULE I.D.
         DC    X'6125'                  DATE -  05/04/76       @ZA10219
         DC    C'5752SC1T3'             COMP ID
         DS    0H
*
***********************************************************************
*
*   QTIP ENTRIES FOR TSOUTPUT (IEDAYO)
*
***********************************************************************
*
         ENTRY QTIP0110
         ENTRY QTIP0120
         ENTRY QTIP0130
         ENTRY QTIP0140
         ENTRY QTIP0150
         ENTRY QTIP0160
*
***********************************************************************
*
*   QTIP ENTRY FOR CANCEL
*
**********************************************************************
*
         ENTRY QTIP0240
*
**********************************************************************
*
*   COMMON ROUTINE ENTRIES
*
**********************************************************************
*
         ENTRY IEDAYQIO                 IWAIT/OWAIT REMOVAL     YS02019
         ENTRY IEDAYQSO                 SYSTEM OWAIT REMOVAL    YS02019
*
**********************************************************************
*
*   EXTRN'S FOR EXTERNAL REFERENCES
*
**********************************************************************
*
         EXTRN QTIP0000                 BASE FOR ATTENTION      YS02019
         EXTRN QTIP0030                 ATTENTION ENTRY         YS02019
         EXTRN QTIP0050                 TSINPUT BASE            YS02019
         EXTRN QTIP0280                 TSINPUT ENTRY           YS02019
         EXTRN IEDAYTPQ                 TPOSTING ROUTINE        YS02019
         EXTRN IEDAYQBR                 BUFFER RETURN ROUTINE   YS02019
*
**********************************************************************
*
*   REGISTER EQUATES
*
**********************************************************************
*
R0       EQU   0                        REGISTER 0
R1       EQU   1                        REGISTER 1
R2       EQU   2                        TSO BUFFER REGISTER
R3       EQU   3                        WORK REGISTER
RSCB     EQU   3                        SCB REGISTER
R4       EQU   4                        WORK REGISTER
R5       EQU   5                        WORK REGISTER
RASCB    EQU   5                        ASCB REGISTER           YS02019
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
RTSB     EQU   8                        TSB REGISTER
R8       EQU   8                        WORK REGISTER
R9       EQU   9                        WORK REGISTER
RTIOC    EQU   10                       TIOCRPT REGISTER
R10      EQU   10                       WORK REGISTER
R11      EQU   11                       WORK REGISTER
RBASE    EQU   12                       BASE REGISTER
R12      EQU   12                       WORK REGISTER
RAVT     EQU   13                       ADDR OF AVT
R13      EQU   13                       WORK REGISTER
R14      EQU   14                       REGISTER 14
R15      EQU   15                       REGISTER 15
*                                                                    *
**********************************************************************
*
NULL     EQU   0                        CONSTANT '0'
NOT      EQU   X'FF'                    NOT
SBA      EQU   X'11'                    SBA CHAR                 S22028
E1       EQU   1                        DECIMAL ONE             YS02019
E2       EQU   2                        DECIMAL TWO             YS02019
E16      EQU   16                       DECIMAL 16
E32      EQU   X'32'                    DECIMAL 32             @ZA02242
RTNCD04  EQU   4                        RETURN CODE = X'04'
ONE      EQU   1                        DECIMAL ONE
THREE    EQU   3                        DECIMAL THREE            S22028
SIX      EQU   6                        DECIMAL SIX              S22028
E31      EQU   31                       DECIMAL THIRTY-ONE
REGLEN   EQU   4                        REGISTER LENGTH IN BYTES A42911
TIMES4   EQU   2                        SHIFT VALUE FOR TIMES 4 YS02019
*
**********************************************************************
*
         USING *,RBASE                  ESTABLISH BASE
         USING IEDQSCB,RSCB             ESTABLISH SCB
         USING TSB,RTSB                 ESTABLISH TSB
         USING TIOCRPT,RTIOC            ESTABLISH TIOC
         USING TIOCBUF,R2               ESTABLISH BUFFER
         USING IEDQDISP,R11             MAKE DISPATCHER ADDRESSABLE
         USING AVTSAVE2,RAVT
         USING IEDQQCB,R7               ESTABLISH DEST QCB      ZA00968
*
***********************************************************************
*
QTIP0110 EQU   *
*
***********************************************************************
*
*        IF TRAILER QUEUE IS EMPTY MOVE A MESSAGE FROM THE HEADER
*        QUEUE TO THE TRAILER QUEUE.
*
***********************************************************************
         SR    R15,R15                  SET RETURN CODE TO ZERO SA70323
         SR    R9,R9                    ZERO PT TO TRLR Q       SA70323
*
*   SCAN THE TRAILER QUEUE FOR ANY UNMOVED DATA                 SA70323
*
         L     R2,TSBOTBFP-1            GET ANCHOR FOR TRAILER  SA70323
         LA    R2,NULL(,R2)             CLEAR HIGH ORDER BITS   SA70323
         LTR   R2,R2                    TRAILER QUEUE EMPTY?    SA70323
         BZ    CKHEADER                 YES, GO CHECK HEADER    SA70323
         SPACE 2
CKLENGTH EQU   *                                                SA70323
         LR    R9,R2                    SAVE PTR TO CURRENT BFR SA70323
         CLI   BUFFLNTH,NULL            ANY DATA IN THIS BFR    SA70323
         BNE   RET10                    YES, GO HANDLE IT       SA70323
         L     R2,BUFFTRLR-1            POINT TO NEXT BUFFER    SA70323
         LA    R2,NULL(,R2)             CLEAR HIGH BYTE         SA70323
         LTR   R2,R2                    IS THIS END OF CHAIN    SA70323
         BNZ   CKLENGTH                 NO, CHECK NEXT BUFFER   SA70323
*
*   AT THIS POINT, WE KNOW THERE IS NO UNMOVED DATA ON THE      SA70323
*   TRAILER QUEUE.  REGISTER 9 POINTS TO THE LAST               SA70323
*   BUFFER ON THE QUEUE.                                        SA70323
         SPACE 3                                                SA70323
CKHEADER EQU   *                                                SA70323
         NC    TSBOBFP,TSBOBFP          TEST IF ANY BFFR IN HEADER Q
         BCR   8,R14                    RETURN TO CALLER IF NOT SA70323
*
*   IF A REPROMPT MESSAGE IS ON THE TRAILER QUEUE, DON'T CHAIN
*   ANYTHING TO IT, BECAUSE BUFFERS ON THE TRAILER QUEUE ARE
*   NOT FREED IF THEY WERE PUT THERE DURING A REPROMPT.
         TM    TSBFLG2,TSBBIPI          REPROMPT IN PROGRESS?   ZA00968
         BZ    NOREPRMT                 NO PROCESS Q'S NORMALLY ZA00968
         TM    TSBFLG2,TSBBRKIN         DOES BIPI REALLY MEAN   ZA00968
*                                       A PROMPT IS OUTSTANDING ZA00968
*                                       (RATHER THAN 'IN PROGRESS')?
         BZR   R14                      BIPI REALLY MEANS IT -  ZA00968
*                                       SO, RETURN              ZA00968
NOREPRMT EQU   *                                                ZA00968
*
*   DELINK A TSO BFFR FROM HEADER Q AND LINK IT TO TRAILER Q
*
         L     R2,TSBOBFP-1             LOAD 1ST BFFR ADDR
         LTR   R9,R9                    WAS THERE A TRLR QUEUE  SA70323
         BZ    NOTRAILR                 NO                      SA70323
         MVC   BUFFTRLR-TIOCBUF(3,R9),TSBOBFP                   SA70323
*                                       ADD NEW MESSAGE TO TRLR SA70323
         B     GOTITIN                  DONE ADDING             SA70323
NOTRAILR EQU   *                                                SA70323
         MVC   TSBOTBFP,TSBOBFP         MAKE NEW MESSAGE FIRST  SA70323
GOTITIN  EQU   *                                                SA70323
         MVC   TSBOBFP,BUFFHEAD         MOVE NEXT HEADER TO THE TOP
*
         NI    TSBFLG3,NOT-TSBTJMSG     ASSUME MSG NOT TJID TPUT
         TM    BUFFFL2,BUFFTJID         IS THIS A TJID MESSAGE
         BNO   RET10                    NO,GOTO SET UP TO RETURN
         OI    TSBFLG3,TSBTJMSG         SHOW MSG IS TJID TPUT
*
RET10    EQU   *
*
*  DON'T PERMIT THE DUMMY TPUT'S ISSUSED BY                    @ZA02242
*  TCLEAR Q AND STBREAK (FOR SYNCHRONIZATION                   @ZA02242
*  PURPOSES) TO APPEAR ON A DISPLAY SCREEN                     @ZA02242
*
         TM    TSBFLG3,TSBSPIT          TEST TCLEARQ OR        @ZA02242
*                                       STBREAK                @ZA02242
         BNO   NOTDUM                   NO,NOTDUM TPUT         @ZA02242
         TM    TSBSTAT,TSBDSPLY         IS TERM DISPLAY TYPE   @ZA02242
         BNO   NOTDUM                   NO,DON'T INTERC TPUT   @ZA02242
         TM    BUFFFL1,BUFFCNTL          DUM ARE CTRL TPUT'S   @ZA02242
         BNO   NOTDUM                   BR IF NOT DUM          @ZA02242
         CLI   BUFFLNTH,ONE             IS TPUT 1 BYTE         @ZA02242
         BNE   NOTDUM                   BR IF NOT 1 BYTE       @ZA02242
         CLI   BUFFHDAT,E32             IS TPUT IDLE           @ZA02242
         BNE   NOTDUM                   BR IF NOT IDLE         @ZA02242
         L     R15,CVTPTR               GET CVT ADDR           @ZA02242
         L     R15,CVTAQAVT-CVT(R15)    GET TCX ADDR           @ZA02242
         L     RTIOC,TCXRPT-TCXAVT(R15) GET TIOC ADDR          @ZA02242
         MVI   BUFFLNTH,NULL            MAKE BUFFER 'FREEABLE' @ZA02242
         B     QTIP0120                 GO FREE TS BUFFER      @ZA02242
NOTDUM   EQU   *                                               @ZA02242
*
*   MUST SAVE QCBSATCT AND CARCT IN CASE MSG MUST BE REBUILT.
*
         IC    R15,QCBSATCT
         SLL   R15,8                    ONE BYTE
         IC    R15,QCBCARCT
         STH   R15,BUFFWORK             SAVE IN BUFFER
         DROP  R7                                               SA70323
         LA    R15,RTNCD04              INDICATE SOMETHING TO   SA70323
*                                       SEND                    SA70323
*
*   CHECK FOR AN OUTSTANDING REPROMPT.  IF FOUND, SET INDICATORS
*   TO REPROMPT AGAIN AFTER THIS NEW OUTPUT.
*
         TM    TSBFLG2,TSBBIPI+TSBBRKIN IS A REPROMPT OUTSTANDING
         BNO   SETUPRET                 NO, GO SET UP TO RETURN
         NI    TSBFLG2,NOT-TSBBIPI      CLEAR INDICATOR
*
SETUPRET EQU   *
         NI    TSBFLG2,NOT-TSBSTAUT     AUTO PROMPT REQUEST WILL BE
*                                       HANDLED ALONG WITH OUTPUT
         BR    R14                      RETURN TO CALLER
*
***********************************************************************
*
QTIP0120 EQU   *
*
***********************************************************************
*
*   THIS ENTRY FREES TS BUFFERS AND REMOVES WAITS IF APPROPRIATE
*
***********************************************************************
*
         LR    R11,R15                  SAVE Q FLUSH SWITCH
         SR    R15,R15                  SET SW - NO BFR FREED
         LA    RTSB,0(,RTSB)            CLEAR FOR WAIT REMOVAL SUBR
         SR    R1,R1                                            YS02019
         IC    R1,TSBNOBF               INSERT NO. OF OUTPUT    YS02019
*                                       BFFR                    YS02019
*
LOOP03   EQU   *
*
         L     R2,TSBOTBFP-1            LOAD ADDR OF 1ST OUTPUT BFFR
*
BRKINLOP EQU   *
*
         LA    R2,NULL(R2)              CLEAR HI-ORDER BYTES
         LTR   R2,R2                    TEST IF ANY MORE BFFR
         BZ    UPDATE1                  NO,GOTO UPDATE COUNTS
*
         SR    R4,R4                    CLEAR R4
         IC    R4,BUFFLNTH              INSERT DATA LENGTH
         LTR   R4,R4                    IS BUFFER EMPTY?
         BNZ   PUTNULL                  NO, GO CHK FOR QUEUE FLUSH
*
*        ARRIVAL AT THIS POINT MEANS ALL DATA IN BFR HAS BEEN SENT
*
         NI    BUFFFL1,NOT-BUFFIHOT     TURN OFF FLAG          @ZA08015
         MVC   TSBOTBFP,BUFFTRLR        POINT TO NEXT BFR
         TM    TSBFLG2,TSBBIPI          IS THIS BFR PART OF A PARTIAL
*                                       INPUT MSG CAUSED BY BREAK-IN
         BNO   BFRFREED                 NO, GO INDICATE BFR FREED
*
         TM    BUFFFL1,BUFFHDR          IS THIS A HEADER BFR
         BZ    NOTHDRBF                 NO, GO GET PROPER OFFSET
         LA    R3,BUFFHDLN              GET OFFSET FOR HDR BFR
         B     STOREOFF                 GO RESTORE ORIGINAL OFFSET
*
NOTHDRBF EQU   *
         LA    R3,BUFFTRLN              GET OFFSET FOR TRAILER BFR
*
STOREOFF EQU   *
         IC    R4,BUFFOFST              GET CURRENT OFFSET
         STC   R3,BUFFOFST              RESTORE ORIGINAL OFFSET
         SR    R4,R3                    GET ORIGINAL LENGTH
         STC   R4,BUFFLNTH              RESTORE ORIGINAL LENGTH
*
         NC    BUFFTRLR,BUFFTRLR        MORE BFRS IN THIS MSG
         BZ    PROMPTED                 NO, GO REMOVE FROM TRAILER Q
         L     R2,BUFFTRLR-1            YES, POINT TO NEXT BFR
         B     BRKINLOP                 GO CHECK NEXT BFR EMPTY
*
PROMPTED EQU   *
*
         TM    TSBSTAT,TSBDSPLY         WAS IT REALLY A FLASHBACK MSG?
         BNO   PROMOUT                  NO, SKIP 2260 CODE
*
         NI    BUFFFL2,NOT-BUFFFRAG     TURN OFF BUFFFRAG      @ZA05465
         TM    TSBFLG4,TSBIWAIT         IS USER IN IWAIT        YS02019
         BZ    RSTBIPI                  NO, SKIP WAIT REMOVAL
         BAL   R4,RSTOWAIT              GO REMOVE IWAIT
*
RSTBIPI  EQU   *
         NI    TSBFLG2,NOT-TSBBIPI      RESET BREAK-IN/FLASHBACK SW
         B     SETTPUT                  GO SET TPUT BIT
*
PROMOUT  EQU   *
         OI    TSBFLG2,TSBBRKIN         INDICATE REPROMPT OUTSTANDING
         B     SETTPUT2                 GO CHK FOR MORE MSGS
*
BFRFREED EQU   *
*
         L     R15,QBRADDR              ADDR OF BFR RETURN RTN  YS02019
         BALR  R0,R15                   GO RETURN BUFFER        YS02019
         BCTR  R1,NULL                  DECREMENT OUTPUT BFFR   YS02019
*                                       COUNT                   YS02019
         B     LOOP03                   GOTO CHECK NEXT BUFFER
*
PUTNULL  EQU   *
*
         TM    TSBFLG2,TSBBIPI          IS THIS BFR ON INPUT Q ALSO?
         BO    UPDATE1                  YES, SKIP FLUSH CHECK
         TM    TSBFLG3,TSBTJMSG         IS THIS MESSAGE NON-FLUSHABLE?
         BO    UPDATE1                  YES, SKIP FLUSH CHECK
         TM    TSBFLG1,TSBOFLSH         SHOULD OUTPUT TRAILER QUEUE
*                                       BE CLEARED?
         BNO   UPDATE1                  NO, GO UPDATE COUNT
         LTR   R11,R11                  IS Q FLUSHHING OK
         BNZ   UPDATE2                  NO, FLUSH LATER WHEN
*                                       CARRIAGE CAN BE RETURNED
         MVC   TSBOTBFP,BUFFTRLR        POINT TO NEXT BUFFER
         B     BFRFREED                 GO FREE BUFFER
*
UPDATE1  EQU   *
*
         NI    TSBFLG1,NOT-TSBOFLSH     INDICATE QUEUE FLUSH CHECKED
*                                       AND HANDLED IF NECESSARY
UPDATE2  EQU   *
         STC   R1,TSBNOBF               UPDATE NO. OF OUTPUT    YS02019
*                                       BFFR                    YS02019
         LTR   R15,R15                  HAVE ANY BUFFERS BEEN FREED?
         BZ    SETTPUT                  NO, GO SET QCBTPUT
*
*   THIS SECTION CHECKS FOR AN OWAIT CONDITION CAUSED BY A TPUT WITH
*   HOLD OPTION OR TPUT RUNNING OUT OF BUFFERS WHILE PUTTING A
*   MESSAGE ON THE OUTPUT QUEUE.  THIS CONDITION WILL BE REMOVED IF
*   CONDITIONS ALLOW.
*
         TM    TSBFLG4,TSBOWAIT         TEST IF USER IN OWAIT   YS02019
         BNO   CHKTSBS                  NO, GO CHECK FOR WAITING TSB'S
*
         TM    TSBFLG4,TSBHOLD          TEST IF TASK IS IN      YS02019
*                                       HOLD-OWAIT              YS02019
         BNO   CHKBFFNO                 NO,GOTO CHECK BFFR NO.
*
*   WHEN HOLD-OWAIT,CHECK IF HOLD OPTION MSG HAS BEEN SENT
*        YES - REMOVE OWAIT
*        NO  - KEEP OWAIT CONDITION
*
         CLI   TSBNOBF,NULL             IS ALL OF MSG SENT
         BNE   CHKTSBS                  NO, GO CHK FOR WAITING TSB'S
*
         NI    TSBFLG4,NOT-TSBHOLD      RESET HOLD OWAIT BIT    YS02019
         BAL   R4,RSTOWAIT              GO REMOVE OWAIT
         B     CHKTSBS                  GO CHK FOR WAITING TSB'S
*
CHKBFFNO EQU   *
*
*   SEE IF NUMBER OF BUFFERS FREED ALLOWS REMOVAL FROM OWAIT
*
         CH    R1,TIOCOWTH              USER STILL HOGGING BFRS YS02019
         BH    CHKTSBS                  YES, DON'T REMOVE OWAIT
         LA    R4,CHKTSBS               OPEN CLOSED SUBROUTINE  YS02019
*
**********************************************************************
*
RSTOWAIT EQU   *
*
**********************************************************************
*
*   THIS ROUTINE REMOVES A USER FROM IWAIT OR OWAIT
*        --TSBBIPI ON - REMOVE FROM IWAIT
*        --TSBBIPI OFF - REMOVE FROM OWAIT
*   REGISTER USAGE (OTHERS NOT ALTERED)
*        15-2  WORK REGISTERS
*        4     RETURN ADDR
*        8     TSB ADDR
*        12    BASE ADDR
*   ENTERED AND EXITED IN TCAM'S KEY
*
**********************************************************************
*
IEDAYQIO EQU   *                                                YS02019
         LR    R2,R13                   SAVE REG. CONTENTS      YS02019
         TM    TSBFLG2,TSBBIPI          SHOULD IWAIT BE REMOVED
         BZ    RESETO1                  NO, REMOVE OWAIT
         TM    TSBFLG4,TSBIWAIT         IS USER IN IWAIT        YS02019
         BZR   R4                       NO, RETURN TO CALLER    YS02019
         L     R13,MSKIWAIT             SET TO REMOVE IWAIT     YS02019
         NI    TSBFLG4,NOT-TSBIWAIT     RESET INDICATOR         YS02019
         B     CHKINCOR                 GO SET UP FOR STATUS    YS02019
*
RESETO1  EQU   *
         TM    TSBFLG4,TSBOWAIT         IS USER IN OWAIT?       YS02019
         BCR   14,R4                    NO, RETURN TO SUBRTN CALLER
         NI    TSBFLG4,NOT-TSBOWAIT     RESET OWAIT BIT OFF     YS02019
         L     R13,MSKOWAIT             SET TO REMOVE OWAIT     YS02019
*
*   INTERFACE TO STATUS
*        REG. 00 - BYTES 0-1 - ASID
*                  BYTES 2-3 - STATUS ENTRY CODE (8)
*        REG. 01 - X'80000000' (REQUESTS RESETTING)
*        REG. 13 - TCB NONDISPATCHABILITY BIT MASK
*        REG. 14 - RETURN ADDR
*        REG. 15 - ENTRY POINT ADDR
*
*        CMS AND LOCAL LOCKS HELD ON ENTRY AND UPON RETURN.
*        REGISTERS 2-12 AND 14 SHOULD REMAIN UNCHANGED BY STATUS.
*
CHKINCOR EQU   *
         LM    R0,R1,STATREGS           LOAD PARM.S FOR STATUS  YS02019
         L     R15,TSBASCBA             GET ASCB ADDR           YS02019
         ICM   R0,B'1100',ASCBASID-ASCB(R15)  GET ASID          YS02019
         L     R15,CVTPTR               GET CVT ADDR            YS02019
         L     R15,CVTABEND-CVT(,R15)   GET SCVT ADDR           YS02019
         USING SCVTSECT,R15             SCVT ADDRESSABLE        YS02019
         L     R15,SCVTSTAT             GET EPA OF STATUS       YS02019
         LR    RBASE,R14                SAVE RETURN ADDR        YS02019
         MODESET EXTKEY=SUPR            GET SUPR KEY FOR STATUS YS02019
         BALR  R14,R15                  GO TO STATUS            YS02019
         USING *,R14                    USE R14 AS BASE         YS02019
         MODESET EXTKEY=TCAM            GET TCAM'S KEY          YS02019
         L     R15,AYOOBASE             GET ORIGINAL BASE       YS02019
         LR    R14,RBASE                RESTORE RETURN ADDR     YS02019
         DROP  R14                      R14 NO LONGER IS BASE   YS02019
         LR    RBASE,R15                RESTORE ORIGINAL BASE   YS02019
         LR    R13,R2                   RESTORE REG. CONTENTS   YS02019
         BR    R4                       RETURN TO CALLER        YS02019
*
***********************************************************************
*
CHKTSBS  EQU   *
*
*   THIS ROUTINE REMOVES WAIT CONDITIONS OF TSB'S
*        (1)   OWAIT CAUSED BY NO BUFFERS TO HOLD ANY OF TPUT MESSAGE
*        (2)   OS WAIT CAUSED BY TPUT/TJID FOR WHICH THERE WERE
*              NOT ENOUGH BUFFERS.
*
         LA    R1,CHKLWAIT              OPEN CLOSED SUBROUTINE   S21008
*
*   REGISTER USAGE IN CLOSED SUBROUTINE (OTHERS NOT ALTERED)
*        1     RETURN ADDR
*        2-7   WORK REGISTERS
*        8     TSB ADDR
*        10    TIOCRPT ADDR
*        12    BASE ADDR
*        13    ADDR OF 5 WORD SAVE AREA
*        15    WORK REGISTER
*
*   ENTERED AND EXITED IN TCAM'S KEY.
*
IEDAYQSO EQU   *                                                YS02019
         TM    TSBFLG1,TSBTJOW          DOES TJID TPUT NEED BFR'S
         BNO   OTHTSBS                  NO, GO CHK OTHER TSB'S
*
         CLC   TSBNOBF,TIOCOWTH+1       IS OWAIT REMOVABLE
         BH    OTHTSBS                  NO, DON'T REMOVE
         BAL   R4,POSTECB               GO REMOVE
         NI    TSBFLG1,NOT-TSBTJOW
*
OTHTSBS  EQU   *
         TM    TIOCFLG,TIOCTJBF+TIOCNOBF  ARE ANY TSB'S WAITING?
         BCR   8,R1                     NO, RETURN               S21008
         LR    R5,RTSB                  SAVE ORIGINAL TSB ADDR  YS02019
*
*   SET POINTERS FOR A SCAN OF TSB'S
*
         SR    R6,R6                    CLEAR                   YS02019
         IC    R6,TIOCTSBS              GET TSB SIZE            YS02019
         LR    R7,R6                    COPY TSB SIZE           YS02019
         L     R8,TIOCTSB-E1            START OF TSB TABLE      YS02019
         MH    R7,TIOCNTSB              LENGTH OF TSB TABLE     YS02019
         LA    R8,NULL(,R8)             CLEAR BYTE 0            YS02019
         AR    R7,R8                    ONE BEYOND LAST TSB     YS02019
         SR    R7,R6                    GET ADDR OF LAST TSB    YS02019
*
SCANLOOP EQU   *
         TM    TSBSTAT,TSBINUSE         IS THIS TSB IN USE      YS02019
         BZ    SCANTEST                 NO, GO CK LOOP LIMITS   YS02019
*
         TM    TSBFLG1,TSBTJBF          IS THIS TSB IN OS WAIT?
         BZ    CHKNOBUF                 NO, GO CHK FOR OWAIT
         NI    TSBFLG1,NOT-TSBTJBF      SHOW WAIT REMOVED
         BAL   R4,POSTECB               GO POST ECB TO REMOVE WAIT
         B     SCANTEST                 GO TO SCAN LOOP TEST
*
CHKNOBUF EQU   *
         TM    TSBSTAT,TSBNOBUF         COULD USER BE IN OWAIT?
         BZ    SCANTEST                 NO, GO TO SCAN LOOP TEST
         TM    TSBFLG4,TSBOWAIT         IS OWAIT ALREADY        YS02019
*                                       REMOVED?                YS02019
         BZ    SCANTEST                 YES, GO TO SCAN LOOP TEST
         STM   R14,R1,0(R13)            SAVE REG.S ACROSS SUBRTN S21008
         BAL   R4,RSTOWAIT              GO REMOVE OWAIT
         LM    R14,R1,0(R13)            RESTORE REGISTERS        S21008
         NI    TSBSTAT,NOT-TSBNOBUF     SHOW OWAIT REMOVED
*
SCANTEST EQU   *
         BXLE  R8,R6,SCANLOOP           SCAN LOOP TEST          YS02019
         NI    TIOCFLG,NOT-(TIOCTJBF+TIOCNOBF) RESET NO BFRS BITS
         LR    RTSB,R5                  ESTABLISH ORIGINAL ADDR YS02019
         BR    R1                       RETURN TO CALLER         M0104
*
**********************************************************************
*
CHKLWAIT EQU   *
*
*   THIS ROUTINE CHECKS FOR SYSTEM LWAIT CONDITION AND IF PRESENT
*   WHETHER IT CAN BE REMOVED.  IF SO, TSINPUT IS TPOSTED TO REMOVE
*   THE CONDITION.
*
         TM    TIOCFLG,TIOCSYLW         SYSTEM-WIDE LWAIT?
         BZ    SETTPUT                  NO, GO SET QCBTPUT
*
         L     R1,AVTTSOPT              LOAD ADDR OF TSINPUT QCB
         USING IEDQTSI,R1
*
         NC    TSIBUFQ,TSIBUFQ          IS TSINPUT HOLDING TCAM BFR'S?
         BNZ   POSTTSI                  YES, GO TPOST TSINPUT
         CLC   TIOCUSLW,TIOCNFBF        SHOULD SYSTEM LWAIT BE REMOVED
         BH    SETTPUT                  NO, DON'T POST TSINPUT
*
POSTTSI  EQU   *
         TM    TSIFLAG,TSIPOST          HAS TSINPUT ALREADY BEEN POSTED
         BO    SETTPUT                  YES, GO SET QCBTPUT
*
*   TPOST TSINPUT TO ITSELF
*
         ST    R1,TSIELCHN-1            PUT QCB ADDR IN RECB
         MVI   TSIFLAG,TSIPOST          SHOW TSINPUT POSTED
         MVI   TSIPRI,PRIBFRTB          SET TPOST PRIORITY
         L     R11,AVTEA                LOAD ADDR OF TCAM DISPATCHER
         LR    R6,R14                   SAVE RETURN ADDRESS
         BAL   R14,DSPPOSTR             GO TPOST AND RETURN
         LR    R14,R6                   RESTORE RETURN ADDRESS
         DROP  R1                       ADDRESSABILITY ENDS     YS02019
*
**********************************************************************
*
SETTPUT  EQU   *
*
*   IF THERE ARE MORE MESSAGES TO SEND, THIS ROUTINE LEAVES THE QCBTPUT
*   BIT ON INDICATING TO THE TCAM SEND SCHEDULER THAT TSOUTPUT SHOULD
*   BE TPOSTED AGAIN.
*
         LR    R2,R14                   SAVE REGISTER CONTENTS  YS02019
         L     R15,AVTRNMPT             EPA OF TRM LOOKUP RTN   YS02019
         LH    R1,TSBASRCE              GET TERMINAL INDEX      YS02019
         BALR  R14,R15                  GO GET TRM ADDR         YS02019
         L     R7,TRMDESTQ-E1-IEDQTRM(,R1)  GET QCB ADDR        YS02019
         LR    R14,R2                   RESTORE REG. CONTENTS   YS02019
*
         TM    QCBTSOF1-IEDQQCB(R7),QCBPARTO  OUTPUT SPLIT BY   YS02019
*                                       OWAIT                   YS02019
         BNO   CHKBRKIN                 NO, GO CHK FOR BREAK-IN YS02019
*
         CLI   TSBNOBF,NULL             IS PARTIAL OUTPUT ALL   YS02019
*                                       SENT                    YS02019
         BE    GIVUPCTL                 YES, GIVE UP CONTROL    YS02019
*
CHKBRKIN EQU   *                                                YS02019
         TM    TSBFLG2,TSBBRKIN         DOES A PARTIAL INPUT    YS02019
*                                       LINE DUE                YS02019
*                                       TO BREAK-IN NEED TO BE PUT OUT
         BO    GOBACK11                 YES, LEAVE QCBTPUT ON   YS02019
*
SETTPUT2 EQU   *                                                YS02019
         NC    TSBOBFP,TSBOBFP          IS OUTPUT HEADER QUEUE EMPTY?
         BNZ   GOBACK11                 NO, GO RETURN
         NC    TSBOTBFP,TSBOTBFP        IS OUTPUT TRAILER QUEUE EMPTY?
         BNZ   GOBACK11                 NO, GO RETURN
*
         TM    TSBFLG1,TSBIFLSH         IS INPUT FLUSH IN        A45625
*                                       PROGRESS                 A45625
         BZ    CHKABEND                 NO, CHECK ABEND          A45625
         NI    TSBFLG1,NOT-TSBIFLSH     TURN OFF INPUT FLUSH     A45625
*                                       FLAG                     A45625
         NI    TSBFLG3,NOT-TSBSPIT      ALLOW PROMPTING          YM2814
         NI    TSBFLG2,NOT-(TSBBIPI+TSBBRKIN) TURN OFF BREAKIN-  A45625
*                                       FLASHBACK FLAGS
CHKABEND EQU   *                                                 A45625
         TM    AVTBIT3,AVTTSAB          DOES ABEND MSG NEED SENDING?
         BO    GOBACK11                 YES, LEAVE QCBTPUT ON
*
         TM    TSBSTAT,TSBDISC          DOES LOGOFF MSG NEED SENDING?
         BO    GOBACK11                 YES, LEAVE QCBTPUT ON
*
         TM    TSBFLG2,TSBSTAUT         AUTO PROMPT MSG REQUESTED?
         BO    GOBACK11                 YES, LEAVE QCBTPUT ON
*
         LR    R2,R14                   SAVE REGISTER CONTENTS  YS02019
         L     R15,AVTRNMPT             EPA OF TRM LOOKUP RTN   YS02019
         LH    R1,TSBASRCE              GET TERMINAL INDEX      YS02019
         BALR  R14,R15                  GO GET TRM ADDR         YS02019
         L     R7,TRMDESTQ-E1-IEDQTRM(,R1)  GET QCB ADDR        YS02019
         LR    R14,R2                   RESTORE REG. CONTENTS   YS02019
*
GIVUPCTL EQU   *
         NI    TSBFLG3,NOT-TSBTPUT      SHOW TSOUTPUT IS DONE   YS02019
         TM    QCBFLAG-IEDQQCB(R7),QCBTSSES  TSO SESSION
         BCR   14,R14                   NO, RETURN TO CALLER
         NI    QCBTSOF1-IEDQQCB(R7),NOT-QCBTPUT-QCBWRBRK
*
GOBACK11 EQU   *
         BR    R14                      RETURN TO CALLER
*
***********************************************************************
*
POSTECB  EQU   *
*
***********************************************************************
*
*   POST THE TSBECB
*
*   ENTRY TO POST
*        R10 - COMPLETION CODE
*        R11 - ECB ADDRESS AND HIGH ORDER BIT 'ON' - INDICATES
*              INTERPARTITION POST
*        R13 - ASCB ADDR
*        R14 - RETURN ADDR
*        R15 - CVT0PT01
*
***********************************************************************
*
         L     R3,CVTPTR                LOAD CVT ADDR
         USING CVT,R3
         L     R15,CVT0PT01             GET ADDR OF POST ROUTINE
         LR    R2,R13                   LOAD SAVE AREA ADDRESS
         STM   R10,R14,0(R13)           SAVE REGISTERS
         SR    R10,R10                  ZERO COMPLETION CODE    YS02019
         LA    R11,TSBECB               LOAD ECB ADDR
         O     R11,HIGHON               TURN ON HIGH-ORDER BIT   S21A12
         LA    R12,CVTBRET              NO ERROR RETURN RTN     YS02019
         LH    R13,TSBWTJID             LOAD TJID OF ORIGINATING TPUT
         L     R14,CVTASVT              ADDR OF ASVT            YS02019
         SLL   R13,E2                   MULTIPLY BY 4           YS02019
         L     R13,ASVTENTY-L'ASVTENTY-ASVT(R13,R14)  GET ASCB  YS02019
         MODESET EXTKEY=SUPR            GET SUPR KEY FOR POST   YS02019
         BALR  R14,R15                  GOTO POST ROUTINE
*
         MODESET EXTKEY=TCAM            GET TCAM'S KEY          YS02019
         LM    R10,R14,0(R2)            RESTORE REGISTERS
         BR    R4                       RETURN TO SUBROUTINE CALLER
         DROP  R3                       DROP AS CVT BASE        YS02019
         SPACE 3                                                SA70323
QTIP0130 EQU   *
*
***********************************************************************
*
*        THIS QTIP IS ENTERED WHEN THERE WAS AN OUTPUT I/O ERROR AND
*        THE TSO MSG HAS TO BE RE-BUILT AND RE-SENT
*
*        MAKE ALL THE BUFFERS AS POSTED TO TSOUTPUT INITIALLY
*
***********************************************************************
*
         USING TIOCBUF,R2
         USING IEDQQCB,R7               DESTINATION QCB         ZA00968
*
         SR    R4,R4                    CLEAR FOR IC USE
         SR    R1,R1                    CLEAR FOR FIRST HDR PTR SA70323
         SR    R5,R5                    PREVIOUS HDR PTR        SA70323
         SR    R6,R6                    PREVIOUS TRLR PTR       SA70323
         L     R2,TSBOTBFP-1            PT TO 1ST BFR ON QUEUE
         NC    TSBOTBFP,TSBOTBFP        IS TRAILER Q EMPTY     @ZA02256
         BZ    GOBACK11                 YES, GO BACK TO CALLER @ZA02256
*
*   RESTORE QCBCARCT AND SATCT TO PREVIOUS VALUES, SINCE MESSAGE
*   WASN'T SENT.
*
         LH    R9,BUFFWORK              GET SAVED VALUE         SA70323
         STC   R9,QCBCARCT              RESTORE CARCT           SA70323
         SRL   R9,8                     ONE BYTE                SA70323
         STC   R9,QCBSATCT              RESTORE LINE COUNT      SA70323
         DROP  R7                                               SA70323
         SPACE 3                                                SA70323
*
*   START CHECKING THE BUFFERS ON THE OUTPUT TRAILER QUEUE      SA70323
*
NEXTBUFR EQU   *                                                SA70323
         TM    BUFFFL1,BUFFHDR          IS THIS A HDR BFR       SA70323
         BNO   NOTHDRB                  NO, UPDATE COUNT, ETC.  SA70323
         SPACE 3
*
*   THIS IS A HEADER BUFFER.  RECHAIN THE QUEUE SO THE LAST
*   HEADER POINTS TO THIS ONE, AND THE LAST TRAILER POINTS TO
*   ZERO.
*
         LTR   R5,R5                    ANY PREVIOUS HEADER     SA70323
         BZ    FIRSTHDR                 NO, THIS IS FIRST HDR   SA70323
         IC    R4,BUFFFL2-TIOCBUF(,R5) SAVE OLD FLAG            SA70323
         ST    R2,BUFFHEAD-1-TIOCBUF(,R5) ST NEW HDR PT         SA70323
         STC   R4,BUFFFL2-TIOCBUF(,R5)  RESTORE FLAG            SA70323
         B     MAKEPREV                 GO MAKE CURR BFR LAST   SA70323
         SPACE 2                                                SA70323
FIRSTHDR EQU   *
         LR    R1,R2                    MAKE THIS FIRST HDR     SA70323
MAKEPREV EQU   *
         LR    R5,R2                    SHOW THIS IS MOST       SA70323
*                                       RECENT HEADER BUFFER    SA70323
         LTR   R6,R6                    WAS THERE A PREV TRLR   SA70323
         BZ    DONTCLR                  NO, NO PTR TO RESET     SA70323
         MVC   BUFFTRLR-TIOCBUF(3,R6),ZEROS ZERO TRLR PT        SA70323
*                                       IN PREVIOUS BUFFER      SA70323
DONTCLR  EQU   *
         LA    R3,BUFFHDLN              GET HDR PREFIX SIZE     SA70323
RESETLEN EQU   *
         IC    R4,BUFFOFST              GET CURRENT OFFSET      SA70323
         CR    R3,R4                    THIS BFR BEEN TOUCHED?  SA70323
         BE    VIRGIN                   NO, NOTHING TO UPDATE   SA70323
         STC   R3,BUFFOFST              RESTORE ORIG OFFSET     SA70323
         SR    R4,R3                    GET LENGTH MOVED        SA70323
         IC    R3,BUFFLNTH              GET OLD LENGTH          SA70323
         AR    R3,R4                    ADD PREV MOVED TO IT    SA70323
         STC   R3,BUFFLNTH              STORE NEW LENGTH        SA70323
         B     VIRGIN                   BUFFER LIKE NEW AGAIN   SA70323
         SPACE 3
*
*   THIS IS NOT A HEADER BUFFER.  ONLY OFFSET AND LENGTH NEED BE
*   ADJUSTED.
*
NOTHDRB  EQU   *
         LA    R3,BUFFTRLN              GET TRAILER PREF SIZE   SA70323
         B     RESETLEN                 GO RESET OFFSET AND LEN SA70323
VIRGIN   EQU   *
*
*   THE BUFFER HAS BEEN RESTORED TO ITS ORIGINAL CONDITION.
*   NOW WE BUMP THE POINTERS TO THE NEXT BUFFER
*
         LR    R6,R2                    CURR BFR NOW PREVIOUS   SA70323
         L     R2,BUFFTRLR-1            POINT TO NEXT BFR       SA70323
         LA    R2,0(,R2)                CLEAR HI ORDER BITS     SA70323
         LTR   R2,R2                    IS THERE ANOTHER BFR    SA70323
         BNZ   NEXTBUFR                 YES, GO FIX IT UP       SA70323
         TM    TSBFLG2,TSBBIPI          ERROR ON REPROMPT MSG? @ZA10219
         BO    NOTHDR                   YES, DONT MAKE IT HDR  @ZA10219
         SPACE 3
*
*  WE HAVE REACHED THE END OF THE TRAILER QUEUE.  R5 POINTS TO THE
*   LAST HEADER BUFFER, R1 POINTS TO THE FIRST HEADER BUFFER.
*  NOW ANY HEADER BUFFERS WILL BE PUT AT THE HEAD OF THE HEADER
*   QUEUE, AND ANY LEFT-OVER TRAILERS WILL REMAIN ON
*   THE TRAILER QUEUE.
         LTR   R5,R5                    ANY HEADERS FOUND       SA70323
         BZR   R14                      NO, ALL DONE            SA70323
         MVC   BUFFHEAD-TIOCBUF(3,R5),TSBOBFP POINT LAST HEADER SA70323
*                                       IN NEW CHAIN TO FIRST   SA70323
*                                       HEADER IN OLD CHAIN     SA70323
         IC    R4,TSBOBFP-1             SAVE FLAGS              SA70323
         ST    R1,TSBOBFP-1             MAKE FIRST HDR IN       SA70323
*                                       NEW CHAIN HEAD OF       SA70323
*                                       HEADER QUEUE            SA70323
         STC   R4,TSBOBFP-1             RESTORE FLAG            SA70323
*   IF FIRST BFR ON TRLR Q WAS HDR, TRLR QUEUE IS EMPTY
         LA    R1,0(,R1)                CLEAR HIGH ORDER BYTE   SA70323
         L     R2,TSBOTBFP-1            POINT TO TRLR Q         SA70323
         LA    R2,0(,R2)                CLEAR HIGH ORDER BYTE   SA70323
         CR    R1,R2                    SAME?                   SA70323
         BNER  R14                      NO, DONE                SA70323
         MVC   TSBOTBFP,ZEROS           CLEAR POINTER           SA70323
         SPACE 1
NOTHDR   EQU   *                                               @ZA10219
         BR    R14                      RETURN                  SA70323
         SPACE 3                                                SA70323
QTIP0140 EQU   *
*
***********************************************************************
*
*   THIS QTIP ENTRY CLEANS UP TSO CONTROL BLOCKS FOR LOGOFF
*   AND HANGUP SITUATIONS
*
***********************************************************************
*
*   REGISTERS AT ENTRY--
*
*        R8 -  ADDRESS OF TSB
*
         TM    TSBFLG4,TSBHUNG          IS THIS A HANG-UP       YS02019
*                                       SITUATION               YS02019
         BO    PASTCALL                 YES, DON'T CALL QTIP 28
*
*   SET UP AND GO TO QTIP 28 IN IEDAYII TO CLEAN UP LWAIT
*
         LR    R9,RTSB                  LOAD TSB ADDRESS
         LR    R2,R12                   SAVE BASE ADDRESS
         L     R15,QT28ADDR             GET ENTRY ADDR OF RTN
         L     R12,QT28BASE             GET BASE ADDR OF RTN    YS02019
         LR    R6,R14                   SAVE RETURN ADDR
         BALR  R14,R15                  GO CLEAN UP LWAIT
         LR    R12,R2                   RESTORE BASE ADDRESS
*
*   POST LOGOFF/TERMINATION
*
         LA    R11,TSBLECB              GET ECB ADDR            YS02019
         LR    R2,R12                   SAVE BASE ADDR
         SR    R10,R10                  ZERO COMPLETION CODE
         O     R11,HIGHON               CROSS-MEMORY REQUEST    YS02019
         L     R15,CVTPTR               GET CVT ADDR            YS02019
         USING CVT,R15                  CVT ADDRESSABLE         YS02019
         L     R13,CVTMSER              ADDR OF BASEA           YS02019
         L     R13,BAASCB-BASE(R13)     ASCB OF MASTR SCHED     YS02019
         LA    R12,CVTBRET              NO ERROR RETURN ROUTINE YS02019
         L     R15,CVT0PT01             ENTRY POINT TO POST     YS02019
         DROP  R15                      AS CVT BASE             YS02019
         MODESET EXTKEY=SUPR            GET SUPR KEY FOR POST   YS02019
         BALR  R14,R15                  GO POST LOGOFF          YS02019
         MODESET EXTKEY=TCAM            GET TCAM'S KEY          YS02019
         LR    R12,R2                   RESTORE BASE ADDR       YS02019
         USING QTIP0110,R12             MODULE ADDRESSABLE      YS02019
         LR    R14,R6                   RESTORE RETURN ADDR     YS02019
*
PASTCALL EQU   *
         L     RTIOC,CVTPTR             GET CVT ADDR            YS02019
         L     RTIOC,CVTAQAVT-CVT(,RTIOC)  GET ADDR OF TCX      YS02019
         L     RTIOC,TCXRPT-IEDQTCX(,RTIOC) GET TIOCRPT ADDR    YS02019
         TM    TSBECB,AVTE80            IS ECB WAITED ON
         BNO   CLEANTSB                 NO, NO NEED TO POST
         LA    R13,TIOCSAVE             GET SAVE AREA ADDR
         BAL   R4,POSTECB               GO POST WAITING ECB
*
CLEANTSB EQU   *
         L     RASCB,TSBASCBA           GET ASCB ADDR           YS02019
         USING ASCB,RASCB               ASCB ADDRESSABLE        YS02019
*
*   CLEAN UP TSB
*
         SR    R0,R0                    ZERO REGISTER
         STC   R0,TSBSTAT               CLEAR STATUS BYTE       YS02019
*                                       (IEDAY8 WILL CLR TSBASCB)
         STC   R0,TSBFLG3               CLEAR FLAG              YS02019
         STH   R0,TSBASRCE              CLEAR TERMINAL INDEX
         STC   R0,TSBFLG1               CLEAR 1ST FLAG BYTE
         STC   R0,TSBLNSZ               CLEAR LINE SIZE
         STC   R0,TSBFLG2               CLEAR 2ND FLAG BYTE
*
*   CLEAN UP ASCB
*
         MODESET EXTKEY=SUPR            GET KEY OF ASCB         YS02019
         ST    R0,ASCBTSB               CLEAR TSB POINTER       YS02019
         MODESET EXTKEY=TCAM            GET TCAM'S KEY          YS02019
*
*   INITIALIZE REGISTERS FOR QUEUE CLEARING ROUTINE
*
         LH    R2,ASCBASID              LOAD ASID VALUE         YS02019
         LR    R6,RTSB                  LOAD TSB ADDR
*
*   GO TO QTIP 3 IN IEDAYAA TO CLEAR ALL TSO BUFFER QUEUES
*
         L     R15,CLRQADDR             GET ADDR OF Q CLEARING RTN
         L     R12,CLRQBASE             GET BASE ADDR OF RTN
         BR    R15                      GO TO Q CLEARING RTN
         DROP  RASCB                    AS ASCB BASE            YS02019
*
*
***********************************************************************
*
QTIP0150 EQU   *
*
***********************************************************************
*
*   THIS QTIP ENTRY MAKES A PARTIAL INPUT MESSAGE OR 2260 FLASHBACK
*   MESSAGE, RESIDING ON THE INPUT QUEUE, RESIDE ALSO ON THE OUTPUT
*   TRAILER QUEUE.  AFTER THE MESSAGE HAS BEEN SENT TO THE TERMINAL
*   QTIP0120 WILL GET CONTROL AND REMOVE THE MESSAGE FROM THE TRAILER
*   QUEUE.
*
***********************************************************************
*
         DROP  R2
         USING TIOCBUF,R2               ESTABLISH BASE FOR BUFFER
*
         NI    TSBFLG2,NOT-TSBBRKIN     RESET BREAK-IN OCCURED MSG
*
         NC    TSBIBFP,TSBIBFP          TEST IF ANY INPUT MSG IN Q
         BCR   8,R14                    RETURN IF EMPTY
*
         L     R2,TSBIBFP-1             LOAD ADDR OF TS INPUT BUFFER
*
REPEAT2  EQU   *
*
         NC    BUFFHEAD,BUFFHEAD        TEST IF ANY BUFFER IN CHAIN
         BZ    CHKPART                  NO,GOTO CHECK PARTIAL LINE
*
         L     R2,BUFFHEAD-1            LOAD NEXT BUFFER ADDR
         B     REPEAT2                  GOTO CHECK NEXT BUFFER
*
CHKPART  EQU   *
*
         TM    TSBSTAT,TSBDSPLY         IS THIS A FLASHBACK MSG?
         BO    PROCPART                 YES, SKIP TEST
         TM    BUFFFL2,BUFFPART         TEST IF PARTIAL MSG IN BUFFER
         BCR   14,R14                   RETURN IF NOT
*
PROCPART EQU   *
*
         STCM  R2,7,TSBOTBFP            PUT BFR ADDR IN TRAILER Q
         LR    R6,R2                    SAVE BUFFER ADDRESS    @ZA08015
         SPACE 1                                               @ZA08015
SETIHOT  EQU   *                                               @ZA08015
         OI    BUFFFL1,BUFFIHOT         TURN ON FLAG           @ZA08015
         L     R2,BUFFTRLR-1            GET NEXT TRAILER       @ZA08015
         LA    R2,0(,R2)                CLEAR HIGH BYTE        @ZA08015
         LTR   R2,R2                    ANY MORE TRAILERS?     @ZA08015
         BNZ   SETIHOT                  FLAG THEM TOO          @ZA08015
         LR    R2,R6                    RESTORE BUFFER ADDRESS @ZA08015
         TM    TSBSTAT,TSBDSPLY         2260 FLASHBACK REQUEST?
         BZ    SETBIPI                  NO, GO SET TSBBIPI
*
         SR    R6,R6                    CLEAR REGISTER
         SR    R7,R7                    CLEAR REGISTER
*
*   GET LENGTH OF INPUT MESSAGE
*
GETLEN   EQU   *
         IC    R6,BUFFLNTH              LOAD DATA LENGTH
         TM    BUFFFL1,BUFFHDR          IS THIS A HEADER BFR     S22028
         BZ    ADDMSGLN                 BRANCH IF NO             S22028
         TM    BUFFFL2,BUFF3270         DOES IT HAVE 3270        S22028
*                                       CONTROL CHARACTERS       S22028
         BZ    ADDMSGLN                 BRANCH IF NO             S22028
         LA    R0,THREE                 ASSUME 3 CONTROL CHARS   S22028
         CR    R6,R0                    IS DATA LENGTH IN THIS   S22028
*                                       BFR LESS THAN 3          S22028
         BNL   CHKSBA                   NO, CHECK SBA CHAR       S22028
         LA    R0,ONE                   THERE IS 1 CONTROL CHAR  S22028
         B     ADJUST                   GO TO ADJUST MSG LENGTH  S22028
CHKSBA   EQU   *                                                 S22028
         CLI   BUFFHDLN+THREE(R2),SBA   IS THE 4TH CHAR SBA      S22028
         BNE   ADJUST                   BRANCH IF NOT            S22028
         LA    R0,SIX                   THERE ARE 6 CNTRL CHARS  S22028
ADJUST   EQU   *                                                 S22028
         SR    R6,R0                    SUBTRACT LENGTH OF 3270  S22028
*                                       CONTROL CHARACTERS       S22028
         STC   R6,BUFFLNTH              ADJUST DATA LENGTH       S22028
         SR    R3,R3                    CLEAR REGISTER           S22028
         IC    R3,BUFFOFST              GET OFFSET TO DATA       S22028
         AR    R3,R0                    SKIP OVER CONTROL CHARS  S22028
         STC   R3,BUFFOFST              ADJUST OFFSET TO DATA    S22028
ADDMSGLN EQU   *                                                 S22028
         AR    R7,R6                    ADD TO MESSAGE LENGTH
         OI    BUFFFL1,BUFFEDIT         FLASHBACK IN EDIT MODE
         NC    BUFFTRLR,BUFFTRLR        ANY MORE BUFFERS
         BZ    GOTLEN                   NO, MESSAGE LENGTH GOTTEN
         L     R2,BUFFTRLR-1            POINT TO NEXT BFR
         B     GETLEN                   GO ADD TO MSG LENGTH
GOTLEN   EQU   *
         OI    BUFFFL1,BUFFNLCR         LET EDIT RTN ALLOW NL
*
*   IF MESSAGE IS LESS THAN TWO LINES FLASHBACK WHOLE MESSAGE
*
         IC    R6,TSBLNSZ               GET LINE SIZE
         LA    R5,0(R6,R6)              GET TWICE LINE SIZE
         CR    R7,R5                    IS MESSAGE LT 2 LINES?
         BL    SETBIPI                  YES, WHOLE MSG WILL BE FLASHED
*
*   PARE LINES OFF THE FRONT OF THE MESSAGE UNTIL THE
*   MESSAGE IS LESS THAN TWO LINES LONG
*
         SR    R3,R3                    CLEAR REGISTER
         SR    R4,R4                    CLEAR REGISTER
         LR    R9,R6                    LOAD LINE SIZE
*
NEXTBUFF EQU   *
         L     R2,TSBOTBFP-1            POINT TO 1ST ON TRAILER QUEUE
         LA    R2,0(,R2)                ISOLATE BFR ADDRESS
         LTR   R2,R2                    ANY MORE BFRS ON TRAILER Q?
         BZ    SETBIPI                  NO, GO SET TSBBIPI
*
         IC    R3,BUFFOFST              LOAD OFFSET TO DATA
         IC    R4,BUFFLNTH              LOAD LENGTH OF DATA
*
COMPARE  EQU   *
         CR    R4,R9                    IS BFR LNG GT LINE SIZE
         BH    BFRHIGH                  YES, GO UPDATE OFFSET
         SR    R9,R4                    DECR LINE SIZE BY BFR LNG
         SR    R7,R4                    DECR MSG LNG BY BFR LNG
         NI    BUFFFL1,NOT-BUFFIHOT     TURN OFF FLAG,BOTH Q'S @ZA08015
         MVC   TSBOTBFP,BUFFTRLR        DROP THIS BFR OFF OF TRAILER Q
*
*   IF THIS IS A 3270 HEADER BUFFER, RESTORE BUFFOFST AND BUFFLNTH
*   TO INCLUDE THE CONTROL CHARACTERS
*
         TM    BUFFFL1,BUFFHDR          IS THIS A HEADER BFR     S22028
         BNO   NEXTBUFF                 BRANCH IF NO             S22028
         TM    BUFFFL2,BUFF3270         CHECK FOR 3270           S22028
         BNO   NEXTBUFF                 NO, GET NEXT BFR         S22028
         SR    R3,R3                    CLEAR REGISTER          ZA01350
         IC    R3,BUFFOFST              LOAD OFFSET TO DATA     ZA01350
         LA    R4,BUFFHDLN              GET HEADER OFFSET        S22028
         STC   R4,BUFFOFST              RESTORE ORIGINAL OFFSET  S22028
         SR    R3,R4                    GET THE DIFFERENCE       S22028
         IC    R4,BUFFLNTH              GET CURRENT DATA LENGTH  S22028
         AR    R3,R4                    GET ORIGINAL DATA LENGTH S22028
         STC   R3,BUFFLNTH              RESTORE ORIGINAL LENGTH  S22028
         B     NEXTBUFF                 GO GET NEXT BUFFER
*
BFRHIGH  EQU   *
         AR    R3,R9                    BUMP OFFSET BY LINE SIZE
         SR    R4,R9                    DECR BFR LNG BY LINE SIZE
         SR    R7,R9                    DECR MSG LNG BY LINE SIZE
*
         CR    R7,R5                    IS MSG LNG NOW LT 2 LINES?
         BL    REPBFR                   YES, GO STORE LNG & OFFSET
         LR    R9,R6                    LOAD UNADJUSTED LINE SIZE
         B     COMPARE                  GO COMPARE AGAINST BFR LNG
*
REPBFR   EQU   *
         STC   R3,BUFFOFST              STORE UPDATED OFFSET
         STC   R4,BUFFLNTH              STORE UPDATED DATA LENGTH
*
SETBIPI  EQU   *
         OI    TSBFLG2,TSBBIPI          SET PARTIAL LINE IN PROCESS
         BR    R14                      RETURN TO CALLER
*
***********************************************************************
*
QTIP0160 EQU   *
*
***********************************************************************
*
*
*   THIS ENTRY RESETS QCBTPUT/QCBWRBRK AND TPOSTS THE LCB TO ITSELF
*
*   REGISTERS AT ENTRY --
*        REG. 4 - LCB ADDR
*        REG. 7 - QCB ADDR
*        REG. 8 - TSB ADDR
*        REG.13 - ADDR OF AVTSAVE2
*
*   RETURN CODE IN REG. 15 --
*        0 - NO AUTO PROMPT REQUESTED
*        4 - AUTO PROMPT REQUESTED
*
         SR    R15,R15                  ASSUME NO AUTO PROMPT
         CLI   TSBNOBF,NULL             ARE THERE ANY MORE MSGS
         BNZ   TESTQS                   YES, CK REALLY ANY DATA@ZA07610
TCQISS   EQU   *                                               @ZA07610
         TM    TSBFLG1,TSBIFLSH         WAS TCLEARQ INPUT ISSUED YM2814
         BNO   PASTCI                   NO, DON'T RESET FLAGS    YM2814
         NI    TSBFLG1,NOT-TSBIFLSH     NO MORE FLUSHING         YM2814
         NI    TSBFLG2,NOT-TSBBIPI-TSBBRKIN  NOTHING TO REPROMPT YM2814
         NI    TSBFLG3,NOT-TSBSPIT      PERMIT FUTURE REPROMPTS  YM2814
*
PASTCI   EQU   *
         NI    TSBFLG3,NOT-TSBTPUT      SHOW TSOUTPUT IS DONE   YS02019
         TM    QCBFLAG-IEDQQCB(R7),QCBTSSES  TSO SESSION
         BNO   POSTLCB                  NO, GO TPOST LCB
         NI    QCBTSOF1-IEDQQCB(R7),NOT-QCBTPUT-QCBWRBRK
*
RET15    EQU   *
         TM    TSBSTAT,TSBDISC          DISCONNECT REQUESTED    YM2814
         BO    POSTLCB                  YES, DON'T CHECK PROMPT YM2814
         TM    TSBFLG2,TSBSTAUT         AUTO PROMPTING REQUESTED?
         BNO   POSTLCB                  NO, GO POST LCB TO ITSELF
         NI    TSBFLG2,NOT-TSBSTAUT     RESET PROMPT REQUEST BIT
         LA    R15,RTNCD04              INDICATE AUTO PROMPT REQUESTED
         BR    R14                      RETURN TO CALLER
*
TESTQS   EQU   *                                               @ZA07610
         NC    TSBOBFP,TSBOBFP          OUTPUT HEADER QUEUE    @ZA07610
*                                       EMPTY                  @ZA07610
         BNZ   COHQBKI                  NO, CHECK IF BREAKIN   @ZA07610
         NC    TSBOTBFP,TSBOTBFP        TRAILER BUFFER QUEUE   @ZA07610
*                                       EMPTY                  @ZA07610
         BZ    MNULICT                  YES, SHOULDN'T HAPPEN  @ZA07610
*                                       CLEAR CT FIELD         @ZA07610
         L     R2,TSBOTBFP-1            GET FIRST TR BFR       @ZA07610
ANYDINB  EQU   *                                               @ZA07610
         CLI   BUFFLNTH,NULL            ANY DATA IN THIS BFR   @ZA07610
         BNE   RET15                    YES, LEAVE QCBTPUT ON  @ZA07610
         L     R2,BUFFTRLR-1            POINT TO NEXT BFR      @ZA07610
         LA    R2,NULL(,R2)             CLEAR HIGH BYTE        @ZA07610
         LTR   R2,R2                    IS THIS END OF CHAIN   @ZA07610
         BNZ   ANYDINB                  NO, SEE IF ANY DATA    @ZA07610
*                                       IN BUFFER              @ZA07610
         B     TCQISS                   YES, TURN QCBTPUT OFF  @ZA07610
COHQBKI  TM    TSBFLG2,TSBBIPI          REPROMPT IN PROGRESS ? @ZA07610
         BZ    RET15                    NO, LEAVE QCBTPUT ON   @ZA07610
         TM    TSBFLG2,TSBBRKIN         DOES BIPI REALLY MEAN  @ZA07610
*                                       A PROMPT IS OUTSTANDING@ZA07610
         BNZ   RET15                    NO, LEAVE QCBTPUT ON   @ZA10218
         B     TCQISS                   YES, TURN QCBTPUT OFF  @ZA07610
*                                                              @ZA07610
MNULICT  MVI   TSBNOBF,NULL             MOVE ZERO INTO CT FIELD@ZA07610
         B     TCQISS                   TURN OFF QCBTPUT       @ZA07610
POSTLCB  EQU   *
         LR    R1,R4                    LCB IS ELEMENT
         LR    R2,R4                    LCB IS QCB TOO
         ICM   R1,8,TPPRILCB            INSERT TPOST PRIORITY
         LA    R13,0(,R13)              REQUEST NO TIME DELAY CHK
         L     R15,TPQADDR              ADDR OF IKJGGTPQ
         BALR  R0,R15                   GO TPOST LCB TO SELF
         SR    R15,R15                  SET RETURN CODE
         BR    R14                      RETURN TO CALLER
*
***********************************************************************
*
QTIP0240 EQU   *
*
***********************************************************************
*
*   THIS QTIP ENTRY REMOVES ASID OWAIT.
*   IT IS USED BY THE CANCEL FUNCTION
*
*   THE ASID IS EXPECTED IN REG. 5.  REGS. 2-14 WILL BE PRESERVED.
*
**********************************************************************
*
         L     R15,CVTPTR               GET CVT ADDR            YS02019
         USING CVT,R15                  MAKE CVT ADDRESSABLE    YS02019
         L     R1,CVTAQAVT              GET TCX ADDR            YS02019
         DROP  RTIOC                                             A42911
         L     R1,TCXRPT-IEDQTCX(,R1)   ADDRESS OF TIOCRPT      YS02019
         USING TIOCRPT,R1                                        A42911
         LR    R0,R12                   SAVE BASE REGISTER      YS02019
         L     R12,TIOCSAVE             RESTORE CALLER'S REG 12 VS01090
         STM   R2,R14,TIOCSAVE+R5*REGLEN SAVE REGISTER CONTENTS YS02019
         LR    R12,R0                   RESTORE BASE REGISTER   YS02019
         L     R9,CVTASVT               GET ADDR OF ASVT        YS02019
         USING ASVT,R9                  ASVT NOW ADDRESSABLE    YS02019
         LA    R13,TIOCSAVE             5-WORD SAVE AREA FOR    YS02019
         DROP  R15,R1                    POSTECB SUBROUTINE     YS02019
*
         SLL   RASCB,E2                 GET OFFSET IN ASVT      YS02019
         L     RASCB,ASVTENTY-L'ASVTENTY(RASCB)  GET ASCB ADDR  YS02019
         USING ASCB,RASCB               ASCB NOW ADDRESSABLE    YS02019
         L     RTSB,ASCBTSB             GET TSB ADDR            YS02019
*
         OI    TSBFLG4,TSBCANC          INDICATE TSB CANCELED   YS02019
         TM    TSBFLG1,TSBTJOW          IS ASID TPUT WAITING    YS02019
         BNO   RETURN24                 NO, GO SET UP TO RETURN  A42911
         BAL   R4,POSTECB               GO POST THE TJID TPUT    A42911
*                                       WAITING FOR BUFFERS
RETURN24 EQU   *                                                 A42911
         LM    R2,R14,R5*REGLEN(R13)    RESTORE REGISTER        YS02019
         DROP  R9,RASCB                 ADDRESSABILITY ENDS     YS02019
         LR    R15,R12                  SAVE SIC'S REG 12 SO    VS01090
*                                       QTIP EPILOG WON'T       VS01090
         BR    R14                      RETURN                   A42911
*
***********************************************************************
*
*   CONSTANTS
*
***********************************************************************
*
CLRQADDR DC    A(QTIP0030)              ADDR OF QUEUE CLEARING QTIP
CLRQBASE DC    A(QTIP0000)              BASE ADDR OF Q CLEARING QTIP
*
QT28ADDR DC    A(QTIP0280)              ADDRESS OF QTIP 28 ROUTINE
QT28BASE DC    A(QTIP0050)              BASE ADDR OF QTIP 28 RTN
*
STATREGS DC    A(8)                     .REGISTERS 0 AND 1      YS02019
STATREG1 DC    X'80000000'              .FOR STATUS             YS02019
HIGHON   EQU   STATREG1                 FOR INTERREGION POST REQYS02019
         ORG   HIGHON+1                 LOW-ORDER USED AS ZEROS SA70323
ZEROS    DS    CL3                      HERE THEY ARE           SA70323
MSKIWAIT DC    AL1(0,0,TCBIWAIT,0)      MASK FOR STATUS         YS02019
MSKOWAIT DC    AL1(0,0,TCBOWAIT,0)      MASK FOR STATUS         YS02019
*
QBRADDR  DC    A(IEDAYQBR)              ADDR OF BFR RETURN RTN  YS02019
AYOOBASE DC    A(QTIP0110)              BASE ADDR OF IEDAYOO    YS02019
TPQADDR  DC    A(IEDAYTPQ)              TPOSTING ROUTINE        YS02019
PATCHREA DC    20F'0'                   PATCH AREA               Y01018
TSIPRIOR DC    AL1(PRIBFRTB)            TPOST PRIORITY FOR TSI   Y01018
TPPRILCB DC    AL1(PRILNFRE)            TPOST PRIORITY FOR LCB   Y01018
         EJECT
         IHAASCB
         EJECT
         IHAASVT
         EJECT
         TAVTD
         EJECT
         IKJTIOCB
         EJECT
CVT      DSECT
         CVT
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TPRIOR
         EJECT
         TQCBD
         EJECT
         TSCBD
         EJECT
         IHASCVT
         EJECT
         IKJTCB
         EJECT
         TTCXD
         EJECT
         IKJTIOCP
         EJECT
         TTRMD
         EJECT
         IKJTSB
         EJECT
         TTSID
         EJECT
         IEEBASEA
         END
