         TITLE 'IGCM510D - MODIFY INTENSE'
IGCM510D CSECT
*A000000-999999                                                  S99240
*A404000                                                       @OZ29947
***********************************************************************
*                                                                     *
*                                                                     *
* STATUS -                                                            *
*    CHANGE LEVEL 5                                              S22024
*                                                                     *
* FUNCTION - THIS MODULE PROCESSES OPERATOR CONTROL COMMANDS WHICH    *
*   REQUEST MODIFICATION OF THE SENSE INFORMATION FOR INTENSIVE MODE  *
*   RECORDING. IGCM510D RECEIVES CONTROL FROM THE MODIFY SCAN/MAP     *
*   MODULE IGCMA10D.                                                  *
*                                                                     *
*   THE MODIFY INTENSE ROUTINE TESTS THE ELEMENT (OPCE) TO DETERMINE  *
*   IF MODIFICATION IS FOR A TERMINAL OR A LINE. IF FOR A TERMINAL,   *
*   THE TERMINAL IS LOCATED AND ITS ADDRESS OBTAINED.                 *
*                                                                     *
*   IF MODIFICATION IS FOR A LINE, DDNAME/RLN OR LINE ADDRESS FORMAT, *
*   THE PROPER DCB IS FOUND AND THE LCB ADDRESS FOR THE LINE IS       *
*   DETERMINED.                                                       *
*                                                                     *
*   NOW THAT THE CONTROL BLOCK TO BE MODIFIED HAS BEEN LOCATED, THE   *
*   SENSE FIELD IS CONVERTED TO ITS HEXDECIMAL EQUIVALENT AND SAVED.  *
*   THE SENSE COUNT IS OBTAINED AND CONVERTED TO HEXADECIMAL. THE     *
*   CONVERTED SENSE AND COUNT ARE MERGED INTO A SINGLE BYTE AND STORED*
*   IN THE SENSE FIELD OF THE PROPER CONTROL BLOCK (TRMSENSE IF A     *
*   TERMINAL, LCBERMSK IF A LINE).                                    *
*                                                                     *
*   MESSAGES INITIATED BY THIS MODULE ARE:                            *
*     ERROR INDICATIONS.                                              *
*        IED016I STATION XXXXXXXX NOT FOUND                           *
*        IED017I LINE XXXXXXXX NOT OPEN                               *
*        IED090I XXXXXXXX IS NOT A SINGLE ENTRY                       *
*     SUCCESSFUL INDICATION.                                          *
*        IED058I XXXXXXXX SENSE COUNT=XX SETTING=XX                   *
*                                                                     *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IGCM510D IS THE ONLY ENTRY POINT FOR THIS MODULE            *
*                                                                     *
* INPUT - REG 1 CONTAINES A POINTER TO THE OPERATOR CONTROL AVT.      *
*                                                                     *
* OUTPUT - PASSES OP CTL AVT ADDRESS IN REG 1.                        *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         SVC 7(XCTL)                                                 *
*   IEDQCA'S SUBROUTINES                                              *
*        TRMOFLOC--VALIDITY CHECKS TERMINAL NAME PASSED TO IT. RETURNS*
*                  ADDRESS OF TERMINAL ENTRY IF VALID. IF NOT VALID   *
*                  RETURNS PLUS 4 OF RETURN ADDRESS IN REGISTER 14.   *
*                                                                     *
*        DCBLOCAT--VALIDITY CHECKS HARDWARE LINE ADDRESSES, GROUPNAMES*
*                  AND RELATIVE LINE NUMBERS. ALSO INSURES LINE DCBS  *
*                  ARE OPEN, RLN IS NOT MORE THAN NUMBER OF EXTENTS,  *
*                  AND LINE WAS NOT OPENED DUMMY. FOR ANY OF THESE    *
*                  ERRORS RETURNS PLUS 4 OF RETURN ADDRESS IN R14.    *
*                             GOOD RETURN- R0= UCB ADDRESS            *
*                                          R1= DCB ADDRESS            *
*                                                                     *
* EXITS,NORMAL - THE OPERATION SUCCESSFUL MESSAGE NUMBER IS PLACED IN *
*   THE ELEMENTS OCPARM FIELD, THE ELEMENTS OCWTG FIELD IS SET TO M1  *
*   AND AN XCTL (SVC 7) IS MADE TO THE OP CTL INCIDENT CHECKPOINT     *
*   ROUTINE (IGC0610D), REG 1 = @ OP CTL AVT.                         *
*                                                                     *
* EXITS,ERROR - THE ERROR MESSAGE NUMBER IS PLACED IN REGISTER 0,     *
*   THE OP CTL AVT ADDRESS IN REG 1 AND XCTL IS TO THE OP CTL ERROR   *
*   MESSAGE MODULE (IGC0310D).                                        *
*                                                                     *
* TABLES/WORKAREAS - LCB,TNT,TERM ENTRY,DCB,OP CTL AVT,AVT,OPCE       *
*                                                                     *
* ATTRIBUTES - SUPERVISOR MODE, DISABLED, TRANSIENT(TYPE 4 SVC), NON- *
*             REENTRANT, SERIALLY REUSABLE, REFRESHABLE.              *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THAT USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED SO  *
*    THAT REDEFINITION OF CHARACTER CONSTANTS, BY REASSEMBLY, WILL    *
*    RESULT IN A CORRECT MODULE FOR THE NEW DEFINITION.               *
*                                                                     *
* NOTES -                                                             *
*    COMMUNICATIONS BETWEEN THE VARIOUS MODULES/TRANSIENTS IS         *
*    PRIMARILY THROUGH THE OPERATOR CONTROL ADDRESS VECTOR TABLE (AVT)*
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IEDQCX AS OF OS/TCAM LEVEL II   *
***********************************************************************
         EJECT
         SPACE
*                                 E Q U A T E S
         SPACE
RZERO    EQU   0                        PARAMETER REGISTER
RPARM    EQU   1                        PARAMETER REGISTER
ROPCAVT  EQU   2                        POINTER TO OP CONTROL AVT
ROPCE    EQU   3                        POINTER TO CURRENT OPCE
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORKA   EQU   5                        POINTER TO RESIDENT WORKAREA
RWORK5   EQU   5                        WORK REGISTER
RWORK6   EQU   6                        WORK REGISTER
RMSGPT   EQU   6                        POINTER TO CURRENT ERROR MSG
RTERM    EQU   6                        TERM ENTRY BASE
RTNT     EQU   6                        TERM NAME TABLE ADDR
RDCB     EQU   7                        DCB BASE
RMSGLEN  EQU   7                        LENGTH OF ERROR MESSAGE
ROFF     EQU   7                        OFFSET TO DDNAME, ADDR, RLN
RWORK    EQU   8                        WORK REGISTER
RWORK8   EQU   8                        WORK REGISTER
RLCB     EQU   9                        LCB BASE REG
RMSGNO   EQU   9                        NUMBER OF ERROR MESSAGE
RWORK1   EQU   9                        WORK REGISTER
RPREFIX  EQU   9                        BUFFER ADDRESS
RHOLD    EQU   10                       SAVE VALUE REGISTER
RWORK10  EQU   10                      WORK REGISTER
RBASE    EQU   12                       BASE FOR MODULE
RSAVE    EQU   13                       SAVE AREA POINTER
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
         SPACE 2
****    MISCELLANEOUS EQUATES    *****
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
TEN      EQU   10                       VALUE TEN
TWELVE   EQU   12                       VALUE TWELVE
ELEVEN   EQU   11                       VALUE ELEVEN
SIXTEEN  EQU   16                       VALUE SIXTEEN
SEVNTEEN EQU   17                       VALUE SEVENTEEN
EIGHTEEN EQU   18                       VALUE EIGHTEEN
TWENTY4  EQU   24                       VALUE TWENTY FOUR
FIFTY8   EQU   58                       VALUE FIFTY EIGHT
NINTY    EQU   90                       VALUE NINTY
ONE99    EQU   199                      VALUE ONE NINTY NINE
TWO50    EQU   250                      VALUE TWO HUNDRED FIFTY
BLANK    EQU   C' '                     BLANK CHARACTER
PROC     EQU   X'20'                    PROCESS FLAG
TERM     EQU   X'0C'                    TERMINAL SWITCH
LINE     EQU   X'0D'                    LINE SWITCH
CZERO    EQU   C'0'                     CHARACTER ZERO
CNINE    EQU   C'9'                     CHARACTER NINE
ADDROFF  EQU   2                        OFFSET IN TABLE TO MESSAGE ADDR
COMMA    EQU   X'6B'                    COMMA FOR DATA OUTPUT
DATAOFF  EQU   1                        OFFSET TO OFFSET
DDOFF    EQU   0                        OFFSET TO DDNAME OR LINE NO.
DDSIZE   EQU   8                        MAXIMUM DDNAME SIZE
ENTLEN   EQU   4                        LENGTH OF ERROR TABLE ENTRY
LASTCHAR EQU   7                        OFFSET TO LAST CONVERTED CHAR
LENOFF   EQU   0                        OFFSET TO LENGTH OF MESSAGE
MESSAGE  EQU   4                        OFFSET TO MESSAGE PAST OFFSETS
MSGLOC   EQU   4                        OFFSET TO MESSAGE IN WORKAREA
NAMELEN  EQU   2                        NO. OF NAME CHANGE CHARACTERS
NULL     EQU   0                        ZERO VALUE FOR EXECUTES
NUMOFF   EQU   0                        OFFSET IN TABLE TO MESSAGE NO.
PICKUP   EQU   5                        LOCATION OF DATA AFTER CONVERT
RLNOFF   EQU   9                        OFFSET TO RELATIVE LINE NO.
RLNSIZE  EQU   3                        SIZE OF MAX RLN
SETCOMMA EQU   8                        LOCATION FOR COMMA
TERMOFF  EQU   0                        OFFSET TOE TERM NAME
VARINAME EQU   3                        OFFSET TO CHANGE LOAD NAME
ZONE     EQU   X'F0'                    CHARACTER TO COVER CONVERT SIGN
         EJECT
         USING IEDQLCB,RLCB             ADDRESSABILITY FOR LCB
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IHADCB,RDCB              DCB ADDRESSABILITY
         USING IEDQTNTD,RTNT            TNT ADDRESSABILITY
         USING IEDQTRM,RTERM            TERM ENTRY ADDRESSABILITY
         SPACE
         BALR  RBASE,0                  SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
IGCM510D IEDHJN SKIPID
         LR    ROPCAVT,RPARM            SET UP AVT ADDRESSING
         L     RAVT,OPCAVTPT            TCAM AVT ADDRESSING
         L     ROPCE,OPCCOPCE           GET CURRENT ELEMENT POINTER
         L     RWORKA,OPCWORK           GET WORKAREA ADDRESS
         CLI   OCSWITCH,LINE            TERMINAL OR LINE INPUT
         BE    LINEPROC                 LINE - BR TO PROCESS
****    TERMINAL PROCESSING    ****
         SPACE
         L     RTNT,AVTRNMPT            SET TNT BASE
         LH    RWORK,OCTRMTBL           GET TNT OFFSET FROM ELEMENT
         SLL   RWORK,SIXTEEN            CLEAR HI-ORDER
         SRL   RWORK,SIXTEEN              SIXTEEN BITS
         SR    ROFF,ROFF                CLEAR REG
         IC    ROFF,TNTENLEN-IEDQTNTD(RTNT) PICK UP ENTRY LENGTH
         LA    RWORK1,THREE(ROFF)       ALLOW FOR ADDRESS
         BCTR  RWORK,RZERO              REDUCE TNT OFFSET BY ONE
         MR    RWORK,RWORK              CALCULATE OFFSER
         LA    RWORK,TNTFIRST-IEDQTNTD(RTNT) GET ADDR OF FIRST ENTRY
         AR    RWORK,RWORK1             ADD OFFSET TO FIRST ENRTY
         LR    RWORK1,RWORK             SAVE NAME POINTER
         BCTR  ROFF,RZERO               DECREMENT FOR ESECUTE
         MVI   OCBACKUP,BLANK           CLEAR OCBACKUP BEFORE  @OZ29947
         MVC   OCBACKUP+1(SEVEN),OCBACKUP MOVING IN NAME       @OZ29947
         EX    ROFF,MVSTAT              MOVE STATNAME TO ELEMENT
         LA    ROFF,ONE(ROFF)           RESTORE COUNT
         AR    RWORK,ROFF               BUMP PAST NAME
         MVC   OCMODNME+FIVE(THREE),ZERO(RWORK) MVE ADDR TO BOUNDRY
         L     RTERM,OCMODNME+FOUR      LOAD TERM ENTRY ADDR
         LA    RTERM,ZERO(RTERM)        CLEAR HI-ORDER BYTE
         TM    TRMSTATE,PROC            PROCESS ENTRY
         BZ    PROCESS                  NO - CONTINUE
         LA    RZERO,NINTY              SET NOT SINGLE ENTRY
         B     XCTLERR                  BR TO ERROR MSG EXIT
         SPACE
****    LINE PROCESSING    ****
LINEPROC EQU   *
         MVI   OPCDOUBL,BLANK          BLANK OUT OPC FIELD
         MVC   OPCDOUBL+ONE(SEVEN),OPCDOUBL FOR SUBROUTINE USE
         TM    OCFLAG,OCLINE            CHECK FOR LINE NUMBER
         BNO   DDTIOT                   NOT LINE NUMBER - BYPASS CONVER
         LA    RDCB,OPCDOUBL           SET UP
         LA    RWORK8,OCLINENO          TO CONVERT HEX
         LA    RLCB,TWO                  LINE ADDRESS
         BAL   RWORK10,HEXTOBCD            TO EBCDIC
         MVC   OPCDOUBL(FOUR),OPCDOUBL+ONE MAKE LINE NUMBER THREE BYTES
         MVC   OCBACKUP(EIGHT),OPCDOUBL MVE LINE NUM TO ELEMENT
         SR    RPARM,RPARM             SET UP FOR
         B     LINENO                   GO GET DCB ADDR FROM LINE NO
         SPACE
DDTIOT   EQU   *
         LA    RWORK6,OCBACKUP-FOUR     SET UP FOR RESTART
         TM    OPCSPEC,OPCRSTRT         RESTERT IN PROGRESS
         BO    RSTRT                    YES,BYPASS DDTIOT SETTING
         L     RWORK5,AVTTCB           GET TCAM TCB ADDRESS
         L     RWORK6,TWELVE(RWORK5)   GET TIOT ADDRESS
         AH    RWORK6,OCTIOT           ADD DD TIOT OFFSET FROM ELEMENT
RSTRT    EQU   *
         MVC   OPCDOUBL(EIGHT),FOUR(RWORK6) DDNAME FOR DCB LOOKUP RTN
         MVC   OCBACKUP(EIGHT),OPCDOUBL MVE DDNAME TO ELEMENT
         SR    RPARM,RPARM              CLEAR REG
         IC    RPARM,OCRLN              GET RLN NO FOR DCB LOOKUP RTN
         SPACE
LINENO   EQU   *
         LA    RSAVE,OPCSAVE             DCB LOOKUP ROUTINE
         L     RBRNCH,OPCDCBLK         GET DCB RTN ADDRESS
         BALR  RRET,RBRNCH             BR TO DCB LOOKUP RTN
         B     GOODRTN                  GOOD RETURN
         LA    RZERO,SEVNTEEN           SET ERROR MESSAGE
         B     XCTLERR                  BR TO OUTPUT ERROR MSG
         SPACE
****    GOOD DCB LOOKUP RETURN    ****
GOODRTN  EQU   *
         LR    RDCB,RPARM               GET DCB ADDRESS
         L     RLCB,DCBIOBAD            GET IOB
         LA    RLCB,ZERO(RLCB)          CLEAR HI-ORDER BYTE
         SR    RZERO,RZERO              CLEAR REG
         IC    RZERO,OCRLN              INSERT RLN
         SR    RPARM,RPARM              ZERO REG
         IC    RPARM,DCBEIOBX           GET IOB LENGTH
         MR    RZERO,RZERO              MULTIPLY IOB BY RLN
         AR    RLCB,RPARM               ADD RESULTS TO IOB ADDRESS
         LA    RWORK8,LCBFLAG1-IEDQLCB  GET LENGTH OF IOB
         SR    RLCB,RWORK8              BACK UP TO LCB
         SPACE
PROCESS  EQU   *
         LA    ROFF,TWOBIT              GET TABLE ADDRESS
         LA    RWORK8,THREE             BUMP FACTOR
         LA    RWORK10,ELEVEN           NUMBER OF ENTRIES
         SPACE
SLOOP    EQU   *
         CLC   ZERO(TWO,ROFF),OCMODNME  CHECK SENSE VALUE
         BE    SETSENSE                 EQUAL - BR TO INSRT SNSE VALUE
         AR    ROFF,RWORK8              NOT EQUAL- BUMP TO NXT ENTRY
         BCT   RWORK10,SLOOP            TEST NXT ENTRY
         B     COMINV                   NOT VALID SENSE
         SPACE
SETSENSE EQU   *
         BCTR  RWORK8,RZERO             DECREMENT BACK TO SENSE
         AR    ROFF,RWORK8              POINT TO SENSE
         SR    RWORK10,RWORK10          CLEAR REG
         IC    RWORK10,ZERO(ROFF)       PICK UP SENSE
         CLI   OCMODNME+TWO,CZERO       LESS THAN ZERO
         BL    COMINV                   YES-NOT NUMERIC - ERROR
         CLI   OCMODNME+TWO,CNINE       GREATER THAN NINE
         BH    COMINV                   YES-NOT NUMERIC - ERROR
         CLI   OCMODNME+THREE,CZERO     LESS THAN ZERO
         BL    COMINV                   YES-NOT NUMERIC - ERROR
         CLI   OCMODNME+THREE,CNINE     GREATER THAN NINE
         BH    COMINV                   YES-NOT NUMERIC - ERROR
         SPACE
         PACK  OPCDOUBL+SIX(TWO),OCMODNME+TWO(TWO) PACK
         XC    OPCDOUBL(SIX),OPCDOUBL   CLEAR FOR CONVERT
         CVB   ROFF,OPCDOUBL            CONVERT TO BINARY
         LTR   ROFF,ROFF                COUNT=0 ?                S22024
         BZ    COMINV                   YES-REJECT COMMAND       S22024
         CH    ROFF,CTMAX               GREATER THAN 15
         BH    COMINV                   YES-REJECT COMMAND
         AR    RWORK10,ROFF             COMBIND SNSE + CNT TO ONE BYTE
         CLI   OCSWITCH,LINE            LINE OR TERM
         BE    LINEEQU                  LINE - USE LCB
         STC   RWORK10,TRMSENSE-IEDQTRM(RTERM) PUT SENSE IN ENTRY
         B     XCTLMOD                  EXIT
         SPACE
****    FOR LINE - USE LCB    ****
LINEEQU  EQU   *
         STC   RWORK10,LCBERMSK-IEDQLCB(RLCB) PUT SNSE IN LCB
         SPACE
XCTLMOD  EQU   *
         LA    RZERO,FIFTY8             SET REPLY MSG NUMBER
         STH   RZERO,OCPARM               FOR MG MOD
         MVC   OCWTG(TWO),WRTMOD        SET RETURN TO WRT MSG MOD
         MVC   OPCLDNME+VARINAME(TWO),CHECKPT SET XCTL TO CKPT MOD
         B     XCTL                     EXIT
         SPACE
COMINV   EQU   *
         LA    RZERO,EIGHTEEN           SET CMD INVALID
         SPACE
XCTLERR  EQU   *
         MVC   OPCLDNME+VARINAME(NAMELEN),XCTL03 SET ERR MSG MOD NAME
         SPACE
XCTL     EQU   *
         NI    OPCFLAG1,AVTEZERO        CLEAR ALL FLAGS
         LR    RPARM,ROPCAVT            POINT TO AVT
         SPACE
         XCTL  SF=(E,OPCXCTL)           CALL NEXT MODULE
         SPACE 2
         EJECT
**********************************************************************
* HEXTOBCD -   PARAMETERS PASSED IN REGS 7-10                        *
* HEX TO EBCDIC - SINK-R7 SOURCE-R8 COUNT-R9 RETURN-RA               *
*        SINK   - LOCATION FOR CONVERTED DATA - MUST BE AT LEAST     *
*                 TWICE THE SIZE OF COUNT.                           *
*        SOURCE - LOCATION WHERE HEX DATA IS STORED                  *
*        COUNT  - SIZE OF SOURCE AREA - IN BYTES                     *
*        RETURN - RETURN IS MADE TO THIS LOCATION                    *
**********************************************************************
         SPACE
R1       EQU   13                       REGISTER 13
R2       EQU   14                       REGISTER 14
R3       EQU   15                       REGISTER 15
R4       EQU   4                        REGISTER 4
R5       EQU   5                        REGISTER 5
R6       EQU   6                        REGISTER 6
R7       EQU   7                        REGISTER 7
R8       EQU   8                        REGISTER 8
R9       EQU   9                        REGISTER 9
RA       EQU   10                       REGISTER 10
         SPACE
         SPACE
HEXTOBCD EQU   *
         STM   R1,R3,OPCSAVE            SAVE CALLERS
         STM   R4,R6,OPCSAVE+TWELVE        REGISTERS
         LA    R1,TEN                  SET UP REGISTERS
         LA    R4,TWO50                  FOR CONVERSION
         LA    R5,ONE99                     CALCULATION
         SPACE
XX       IC    R3,ZERO(R8)             PICK UP HEX CHARS
         SLL   R3,TWENTY4              SET UP TO PICK
         LA    R6,TWO                  SET TWO PASSES TO CONVERT BYTE
         SPACE
YY       SR    R2,R2                     FIRST FOUR
         SLDL  R2,FOUR                     BITS TO BE CONVERTED
         SR    R2,R1                   IS HEX CHAR 0-9
         BM    ZZ                      YES, CONVERT TO FX
         AR    R2,R5                   NO, SET UP TO CONVERT TO CX
         SPACE
ZZ       AR    R2,R4                   CONVERT
         STC   R2,ZERO(R7)             STORE CONVERTED CHAR IN SINK
         LA    R7,ONE(R7)              BUMP SINK POINTER
         BCT   R6,YY                   BR TO PROCESS NEXT 4 BITS
         LA    R8,ONE(R8)              BUMP SOURCE POINTER
         BCT   R9,XX                   BR IF MORE DATA TO CONVERT
         LM    R1,R3,OPCSAVE            RESTORE CALLERS
         LM    R4,R6,OPCSAVE+TWELVE        REGISTERS
         BR    RA                      RETURN TO CALLER
         SPACE
**********************************************************************
         SPACE
MVSTAT   MVC   OCBACKUP(NULL),ZERO(RWORK1) MOVE                  S22024
CTMAX    DC    H'15'                    MAXIMUM COUNT
TWOBIT   DC    C'TO',X'10',C'LD',X'20',C'OR',X'30',C'DC',X'40' SENSE
         DC    C'EC',X'50',C'BO',X'60',C'IR',X'70',C'CR',X'80' SETTING
         DC    C'UE',X'90',C'IM',X'F0',C'M2',X'A0' FOR MODIFY INTENSE
         SPACE 2
XCTL03   DC    C'03'                    ERROR MODULE NAME
CHECKPT  DC    C'06'                    CHECKPOINT MODULE NAME
WRTMOD   DC    C'M1'                    MODIFY WRIGHT MODULE
         EJECT
         TAVTD
         EJECT
         DCBD DSORG=TX
         EJECT
         TLCBD
         EJECT
         TOPCED
         EJECT
         TOPCAVTD
         EJECT
         TTNTD
         EJECT
         TTRMD
         END
