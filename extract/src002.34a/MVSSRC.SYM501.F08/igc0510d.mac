         TITLE 'IGC0510D - ERROR MESSAGE GENERATOR (DDANME, RLN)'
IGC0510D CSECT
*A000000-999999                                                @Y16XAR0
*C000000-999999                                                  S99240
*A489000,558000,702000,714000                                    S22024
*A304000-305000,451000-452000,504700-506100                      Y06328
*D500000                                                         Y06328
*C654000,703400-703500                                           Y06328
*A225000,303000,493000,714000                                  @YA10666
*C483000,703100                                                @YA10666
*A012000,015000,114000                                         @Y17XARR
*C723000                                                       @Y17XARR
*C493080,493240                                                @ZM46642
*D493160                                                       @ZM46642
***********************************************************************
*                                                                     *
*MODULE NAME= IGC0510D(TCAM,OPERATOR CONTROL)                 @Y17XARR*
*                                                             @Y17XARR*
*DESCRIPTIVE NAME= ERROR MESSAGE GENERATOR                    @Y17XARR*
*                                                             @Y17XARR*
*COPYRIGHT= NONE                                              @Y17XARR*
*                                                                     *
*STATUS =                                                     @Y17XARR*
*        VERSION 10.0                                         @Y17XARR*
*                                                                     *
*FUNCTION -                                                           *
*        THIS MODULE TAKES THE ERROR MESSAGE NUMBER PASSED IN         *
*        REGISTER ZERO AND DETERMINES IF THAT ERROR MESSAGE IS CONTAIN*
*        -ED IN THIS MODULE.  IF NOT, AN XCTL TO IGC0610D IS EXECUTED *
*        FOR MESSAGE LOCATION.  IF THE MESSAGE IS CONTAINED HERE,  THE*
*        MESSAGE IS MOVED TO THE RESIDENT WORKAREA AT OFFSET 4.  THE  *
*        LENGTH OF THE MESSAGE IS PLACED IN THE WORKAREA AT OFFSET 0. *
*        ANY INFORMATION NEEDED IN THE MESSAGE IS PLACED DIRECTLY IN  *
*        THE WORKAREA.  CONTROL IS THEN PASSED TO IGC0710D FOR OUTPUT.*
*                                                                     *
*ENTRY POINTS -                                                       *
*        IGC0510D IS THE ONLY ENTRY POINT OF THIS MODULE.             *
*                                                                     *
*INPUT -                                                              *
*        POINTER TO THE OPERATOR CONTROL AVT IN REGISTER 1 AND        *
*        AN ERROR MESSAGE NUMBER IN REGISTER 0.                       *
*                                                                     *
*OUTPUT -                                                             *
*        A COMPLETE ERROR MESSAGE IN THE OPERATOR CONTROL WORKAREA.   *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*        SVC 7 (XCTL)                                                 *
*                                                                     *
*EXITS,NORMAL --                                                      *
*        TO IGC0710D OR IGC0810D                                Y07690*
*EXITS,ERROR --  NONE.                                                *
*                                                                     *
*TABLES/WORKAREAS -                                                   *
*        TCAM AVT, OP CONTROL AVT, ERRORTAB, TCAM TCB AND TIOT        *
*                                                                     *
*PROCESSOR = ASSEMBLER                                        @Y17XARR*
*                                                             @Y17XARR*
*MODULE TYPE = PROCEDURE                                      @Y17XARR*
*                                                             @Y17XARR*
*MODULE SIZE=                                                 @Y17XARR*
*                                                             @Y17XARR*
*PATCH LABEL= NONE                                            @Y17XARR*
*                                                             @Y17XARR*
*ATTRIBUTES -                                                         *
*        REFRESHABLE,DISABLED,TRANSIENT(TYPE 4),SUPERVISOR MODE,      *
*        REUSABLE                                                     *
*                                                                     *
*CHARACTER CODE DEPENDENCY --                                         *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
*NOTES -                                                              *
*        COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS      *
*        PRIMARILY THROUGH THE OPERATOR CONTROL AVT.                  *
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IGC0510D AS OF OS/TCAM LEVEL II *
***********************************************************************
         EJECT
         SPACE
*                              E Q U A T E S
         SPACE
RZERO    EQU   0                        PARAMETER REGISTER
RPARM    EQU   1                        PARAMETER REGISTER
ROPCAVT  EQU   2                        OP CONTROL AVT POINTER
ROPCE    EQU   3                        CURRENT ELEMENT ADDRESS
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORKA   EQU   5                        WORKAREA ADDRESS
RMSGPT   EQU   6                        POINTER TO ERROR MESSAGE
RMSGLEN  EQU   7                        LENGTH OF CURRENT ERROR MESSAGE
ROFF     EQU   8                        STATNAME OFFSET
RTNT     EQU   9                        BASE FOR TERM NAME TABLE
RWORK    EQU   10                       WORK REGISTER
RWORK1   EQU   11                       WORK REGISTER
RMSGNO   EQU   11                       NUMBER OF ERROR MESSAGE
RBASE    EQU   12                       MODULE BASE REGISTER
         SPACE 2
ADDROFF  EQU   2                        OFFSET IN TABLE TO MESSAGE ADDR
IPLOFF   EQU   X'FB'                                           @YA10666
COMMA    EQU   X'6B'                    COMMA
COMMAOFF EQU   8                        OFFSET TO COMMA IN MSG
DDOFF    EQU   0                        OFFSET TO DDNAME IN MSG
DDSIZE   EQU   8                        MAX LENGTH OF DDNAME
EIGHT    EQU   8                        LENGTH OF 8
ENDTABLE EQU   255                      END OF ERROR TABLE INDICATOR
ENTLEN   EQU   4                        LENGTH OF ERROR TABLE ENTRY
FOUR     EQU   4                        SHIFT ONE DIGIT
LASTCHAR EQU   7                        COVER SIGN OFFSET
LENOFF   EQU   0                        OFFSET TO MESSAGE LENGTH
LOOP     EQU   3                        NUMBER OF LOOPS TO CONVERT NO.
LNOFF    EQU   0                        NULL OFFSET
MESSAGE  EQU   2                        OFFSET TO MESSAGE PAST LENGTH
MSGLOC   EQU   4                        OFFSET TO MESSAGE IN WORKAREA
NAMELEN  EQU   2                        LENGTH OF NAME CHANGE
NULL     EQU   0                        ZERO VALUE FOR EXECUTES
NUMOFF   EQU   0                        OFFSET IN TABLE TO MESSAGE NO.
NUMBER   EQU   X'F0'                    MASK TO MAKE LAST DIGIT PRINT
OFFOFF   EQU   1                        OFFSET TO STATNAME OFFSET
PICKUP   EQU   5                        OFFSET TO RLN AFTER CONVERT
RLNOFF   EQU   9                        OFFSET IN MSG TO RLN
RLNSIZE  EQU   3                        MAX RLN LENGTH
TIOT     EQU   12                       OFFSET IN TCB TO TIOT ADDR
TIOTEOFF EQU   4                        OFFSET TO DDNAME IN TIOT ENTRY
TWOEIGHT EQU   28                       SHIFT TO LOW BYTE
VARINAME EQU   3                        OFFSET TO CHANGE XCTL NAME
TWO      EQU   2                        NUMERIC OFFSET         @YA10666
DUMPOFF  EQU   9                        NUMERIC OFFSET         @YA10666
THREE    EQU   3                        CONSTANT                 S05331
SLASH    EQU   C'/'                     SLASH                    S05331
         EJECT
*   BASE REGISTERS FOR TCAM CONTROL BLOCKS
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IEDQTNTD,RTNT            TERM NAME ADDRESSABILITY
         SPACE
         BALR  RBASE,RZERO              SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
BASE     EQU   *
IGC0510D IEDHJN  SKIPID
         LR    ROPCAVT,RPARM            SET UP AVT ADDRESSING
         L     RAVT,OPCAVTPT            TCAM AVT ADDRESS
         L     ROPCE,OPCCOPCE           GET CURRENT ELEMENT POINTER
         L     RWORKA,OPCWORK           GET WORKAREA POINTER FROM AVT
         MVC   OPCLDNME+VARINAME(NAMELEN),LOADID NEXT LOAD MODULE
         LR    RMSGNO,RZERO             PICK UP PASSED MESSAGE NUMBER
         LA    RMSGPT,ERRORTAB          PICK UP ERROR MESSAGE TABLE ADR
LOCATMSG EQU   *
         CLI   NUMOFF(RMSGPT),ENDTABLE  CHECK FOR END OF TABLE
         BE    XCTL                     YES, CALL NEXT LOAD OF ERRORS
         SPACE
         CH    RMSGNO,NUMOFF(RMSGPT)    CORRECT ERROR MESSAGE?
         BE    PROCMSG                  EQUAL, PROCESS MESSAGE
         SPACE
         LA    RMSGPT,ENTLEN(RMSGPT)    POINT TO NEXT TABLE POSITION
         B     LOCATMSG                 CHECK NEXT POSITION
         SPACE
PROCMSG  EQU   *
         LH    RMSGPT,ADDROFF(RMSGPT)   GET ADDRESS OF ERROR MESSAGE
         AR    RMSGPT,RBASE             ADD BASE TO OFFSET
         SR    RMSGLEN,RMSGLEN          CLEAR FOR LENGTH INSERT
         IC    RMSGLEN,LENOFF(RMSGPT)   PICK UP MESSAGE LENGTH
         STH   RMSGLEN,LENOFF(RWORKA)   PLACE ERROR MESSAGE LENG IN WA
         BCTR  RMSGLEN,RZERO            DECREMENT FOR MOVE
         EX    RMSGLEN,MOVEMSG          MESSAGE TO WORKAREA
         SPACE
         SR    ROFF,ROFF                CLEAR TO PICK UP OFFSET
         IC    ROFF,OFFOFF(RMSGPT)      PICK UP OFFSET
         LTR   ROFF,ROFF                ZERO OFFSET?
         BE    WRTXCTL                  YES, NO DATA REQUIRED
         SPACE
         LA    RWORKA,MSGLOC(ROFF,RWORKA) SET DATA POINTER
         CLI   OCSWITCH,OCSUBT          SUBT = COMMAND         @YM04657
         BE    DDMOVE                   YES                    @YM04657
         CLI   OCSWITCH,OCIOTR          IOTR = COMMAND         @YM04657
         BE    DDMOVE                   YES                    @YM04657
         TM    OCFLAG,OCLINE            LINE PROCESSED IN DATA
         BNO   DDPLACE                  NO, PLACE DD IN MESSAGE
         CLI   OCBACKUP+THREE,SLASH     PEP LINE TRACE?          S05331
         BE    DDMOVE                   BRANCH IF YES            S05331
         SPACE
         BCTR  RWORKA,RZERO             BACK UP DATA POINTER
         LA    ROFF,LOOP                SET LOOP COUNTER
         LH    RWORK,OCLINENO           PICK UP LINE NUMBER
CONVLOOP EQU   *
         SRDL  RWORK,FOUR               SHIFT OUT FOUR BITS
         SRL   RWORK1,TWOEIGHT          SHIFT BITS TO LOW BYTE
         IC    RWORK1,CONVERT(RWORK1)   GET CONVERT BYTE
         STC   RWORK1,LNOFF(RWORKA,ROFF) PLACE DIGIT IN DATA
         BCT   ROFF,CONVLOOP            CONTINUE FOR THREE DIGITS
         LA    RWORKA,OFFOFF(RWORKA)    INCREMENT WORKAREA PTR @YA10666
         LR    RMSGNO,RZERO             SET NUMBER FOR COMPARE @YA10666
         CH    RMSGNO,MSGNO168          3705 IPL OR DUMP CMD   @YA10666
         BNE   WRTXCTL                  NO                     @YA10666
         SPACE
DDPLACE  EQU   *
         CH    RMSGNO,MSGNO167          3705 IPL CMD ?           S22024
         BE    IPLCMD                   YES                      S22024
         CH    RMSGNO,MSGNO168          3705 IPL CMD ?           S22024
         BNE   TEST163                  NO, BRANCH             @YA10666
         CLI   OCSWITCH,OCDMPC          DUMP ERROR?            @ZM46642
         BE    IPLCMD                   YES, IT WAS A DUMP ERR @ZM46642
         SPACE 1
         MVC   DUMPOFF(FOUR,RWORKA),MSGTXT  AN IPL ERROR WAS   @YA10666
*                                           DETECTED, CHANGE   @YA10666
*                                           PART OF ERROR MSG  @YA10666
         NI    OCSWITCH,IPLOFF          TURN OFF IPL SWITCH    @YA10666
         TM    OCFLAG,OCLINE            LINE PROCESSED IN DATA @YA10666
         BO    WRTXCTL                  CALL WRITE MODULE      @YA10666
         B     IPLCMD                   PUT IN DDNAME          @YA10666
TEST163  EQU   *                                               @YA10666
         CH    RMSGNO,MSGNO163          IPL CMD                  S22024
         BE    IPLCMD                   YES                      S22024
         CH    RMSGNO,MSGNO173          3705 INVALID             S22024
         BE    IPLCMD                   YES                      S22024
         CH    RMSGNO,MSGNO175          INVALID BACKUP FOR 3705  S22024
         BE    CMD3705                  YES                      S22024
         MVC   RLNOFF(RLNSIZE,RWORKA),ALL SET RLN TO ALL
         SPACE 1                                                 S05331
DDMOVE   EQU   *                                                 S05331
         MVC   DDOFF(DDSIZE,RWORKA),OCBACKUP  MOVE DDNAME TO MSG S05331
         SR    RWORK,RWORK              CLEAR FOR INSERT
         IC    RWORK,OCRLN              PICK UP RELATIVE LINE NO
         LTR   RWORK,RWORK              RLN SPECIFIED?
         BZ    WRTXCTL                  PUT OUT MESSAGE
         SPACE
         MVI   COMMAOFF(RWORKA),COMMA   SET COMMA IN DATA
         CVD   RWORK,OPCDOUBL           CONVERT RLN
         UNPK  OPCDOUBL(EIGHT),OPCDOUBL(EIGHT) UNPACK RLN
         OI    OPCDOUBL+LASTCHAR,NUMBER COVER SIGN
         MVC   RLNOFF(RLNSIZE,RWORKA),OPCDOUBL+PICKUP PLACE RLN
WRTXCTL  EQU   *
         MVC   OPCLDNME+VARINAME(NAMELEN),WRITE SET UP WRITE MOD NAME
XCTL     EQU   *
         LR    RPARM,ROPCAVT            POINT TO AVT
         XCTL  SF=(E,OPCXCTL)           CALL NEXT MODULE
         SPACE 2
         SPACE
MOVEMSG  MVC   MSGLOC(NULL,RWORKA),MESSAGE(RMSGPT) MOVING MESSAGE TO WA
         SPACE
CMD3705  MVC   DDOFF(DDSIZE,RWORKA),OPCDOUBL         PLACE DDNAMES22024
*                                       OR HARDWARE ADDR IN MSG  S22024
         B     WRTXCTL                  CALL MESSAGE WRITER      S22024
IPLCMD   MVC   DDOFF(DDSIZE,RWORKA),OCBACKUP  MOVE DDNAME OR     S22024
*                                       HARDWARE ADDR IN MSG     S22024
         B     WRTXCTL                  CALL MESSAGE WRITER      S22024
***********************************************************************
*                                                                     *
         EJECT
*   THE FOLLOWING TABLE CONTAINS THE MESSAGE IDENTIFIERS AND THE
*     OFFSET FROM THE BEGINNING OF THIS MODULE TO THE APPROPRIATE
*     ERROR MESSAGES.
*                                                                     *
***********************************************************************
ERRORTAB DS    0F
         DC    AL2(22),AL2(MSG22-BASE)
         DC    AL2(24),AL2(MSG24-BASE)
         DC    AL2(28),AL2(MSG28-BASE)
         DC    AL2(30),AL2(MSG30-BASE)
         DC    AL2(49),AL2(MSG49-BASE)
         DC    AL2(57),AL2(MSG57-BASE)
         DC    AL2(92),AL2(MSG92-BASE)
         DC    AL2(163),AL2(MSG163-BASE) NO LOAD NAME            S22024
         DC    AL2(167),AL2(MSG167-BASE) RECORD TOO LARGE        S22024
         DC    AL2(168),AL2(MSG168-BASE) I/O ERROR IPLING        S22024
         DC    AL2(173),AL2(MSG173-BASE)      3705 INVALID       S22024
         DC    AL2(175),AL2(MSG175-BASE)       INVALID AS BACKUP S22024
         DC    X'FF'                    END OF TABLE
***********************************************************************
*                                                                     *
*  THE FOLLOWING ARE DC'S FOR THE MESSAGES                       S22024
*                                                                     *
***********************************************************************
         SPACE 2
MSG22    DC    AL1(END22-*-2),AL1(37)
         DC    C'IED022I AUTOPOLL ALREADY STARTED FOR             '
END22    EQU   *
         SPACE
MSG24    DC    AL1(END24-*-2),AL1(34)
         DC    C'IED024I TRACE ALREADY STARTED FOR             '
END24    EQU   *
         SPACE
MSG28    DC    AL1(END28-*-2),AL1(37)
         DC    C'IED028I AUTOPOLL ALREADY STOPPED FOR             '
END28    EQU   *
         SPACE
MSG30    DC    AL1(END30-*-2),AL1(34)
         DC    C'IED030I TRACE ALREADY STOPPED FOR             '
END30    EQU   *
         SPACE
MSG49    DC    AL1(END49-*-2),AL1(30)                            Y06328
         DC    C'IED049I OLT CONTROLS RESOURCE              COMMAND REJX
               ECTED'                                            S22024
END49    EQU   *
         SPACE
MSG57    DC    AL1(END57-*-2),AL1(8)
         DC    C'IED057I              NOT CAPABLE OF AUTOPOLL'
END57    EQU   *
         SPACE
         SPACE
MSG92    DC    AL1(END92-*-2),AL1(26)
         DC    C'IED092I BISYNC ERROR-LINE              CANNOT BE STARTX
               ED'
END92    EQU   *
MSG163   DC    AL1(END163-*-2),AL1(13)                           S22024
         DC    C'IED163I 3705          IPL TERMINATED LOAD MODULE'
         DC    C' NAME NOT IN 3705 TTE'                        @Y17XARR
END163   EQU   *
MSG167   DC    AL1(END167-*-2),AL1(13)  RECORD TOO LARGE         S22024
         DC    C'IED167E 3705          IPL TERMINATED RECORD TOO LARGE'
END167   EQU   *                                                 S22024
         SPACE
MSG168   DC    AL1(END168-*-2),AL1(13)  I/O ERROR LOADING INITIALS22024
*                                       TEST ROUTINE             S22024
         DC    C'IED168E 3705          DUMP TERMINATED I/O '   @YA10666
         DC    C'ERROR'                                        @YA10666
END168   EQU   *                                                 S22024
         SPACE
MSG173   DC    AL1(END173-*-2),AL1(8)                            Y06328
         DC    C'IED173I          IS NOT A 3705 CONTROL UNIT'    Y06328
         DC    C' OR RESOURCE'          MESSAGE TEXT             S22024
END173   EQU   *                                                 S22024
MSG175   DC    AL1(END175-*-2),AL1(13)                           S22024
         DC    C'IED175I 3705          IS INVALID AS A BACKUP'   S22024
END175   EQU   *                                                 S22024
***********************************************************************
         SPACE 2
ALL      DC    C'ALL'                   ALL FOR OUTPUT MESSAGE
WRITE    DC    C'07'                    WRITE MODULE
LOADID   DC    C'08'                    NEXT ERROR MODULE
MSGTXT   DC    C'IPL '                  MESSAGE TEXT           @YA10666
MSGNO163 DC    H'163'                   MESSAGE NUMBER 163       S22024
MSGNO167 DC    H'167'                   RECORD TOO LARGE         S22024
MSGNO168 DC    H'168'                   I/O ERROR LOADING LOAD   S22024
*                                       MODULE                   S22024
MSGNO173 DC    H'173'                   INVALID BACKUP           S22024
MSGNO175 DC    H'175'                   INVALID 3705             S22024
         SPACE 2
CONVERT   DC   C'0123456789ABCDEF'      LINE NO. CONVERSION TABLE
         TITLE 'IGC0510D - DSECTS REFERENCED BY THIS MODULE'
         TAVTD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TTNTD
         END
