         TITLE 'IGCVI10D,  3705 STARTLINE                              *
                        '
IGCVI10D CSECT ,                                                   0001
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0390
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*   ROPCAVT=RPARM;                  /* OPCAVT ADDR                   */
         LR    ROPCAVT,RPARM                                       0390
*   RAVT=OPCAVTPT;                  /* TCAM AVT ADDR                 */
         L     RAVT,OPCAVTPT(,ROPCAVT)                             0391
*   ROPCE=OPCCOPCE;                 /* OPCE ADDR                     */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0392
*   OPCFLAG1=0;                     /* CLEAR FLAG                    */
         MVI   OPCFLAG1(ROPCAVT),X'00'                             0393
*   GEN NOREFS NOSETS NOEXIT SEQFLOW;                              0394
IGCVI10D IEDHJN SKIPID,HJN
*                                                                  0395
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN PROGRAM LOGIC                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0395
*   IF OPREPRI=PRIMEDFG&OPREFLG1=OPRVI THEN                        0395
         CLI   OPREPRI(ROPCE),X'DF'                                0395
         BNE   @RF00395                                            0395
         CLI   OPREFLG1(ROPCE),X'04'                               0395
         BNE   @RF00395                                            0395
*     CALL STRTRET;                 /* SPECIAL PRIORITY AND FLAG   0396
*                                      INDICATING STARTLINE RETURNED
*                                      FROM IEDNSL                   */
         BAL   @14,STRTRET                                         0396
*   ELSE                                                           0397
*     IF OCRESP=ON THEN             /* IF RESPONSE TO STARTLINE FROM
*                                      IGCA010D PROC         @ZM47662*/
         B     @RC00395                                            0397
@RF00395 TM    OCRESP(ROPCE),B'00000001'                           0397
         BNO   @RF00397                                            0397
*       DO;                         /*                       @ZM47662*/
*         OCRESP=OFF;               /*                       @ZM47662*/
         NI    OCRESP(ROPCE),B'11111110'                           0399
*         CALL PROCRESP;            /*                       @ZM47662*/
         BAL   @14,PROCRESP                                        0400
*       END;                        /*                       @ZM47662*/
*     ELSE                                                         0402
*       IF OCPARM^=0 THEN                                          0402
         B     @RC00397                                            0402
@RF00397 ICM   @15,3,OCPARM(ROPCE)                                 0402
         BZ    @RF00402                                            0402
*         CALL SNASTRT;             /* NON-ZERO RET CODE MEANS SNA 0403
*                                      STARTLINE FROM IGCFA10D,    0403
*                                      PROCESS IT                    */
         BAL   @14,SNASTRT                                         0403
*       ELSE                                                       0404
*         FIRSTREQ=ON;              /* GET FIRST LINE FLAG           */
         B     @RC00402                                            0404
@RF00402 OI    FIRSTREQ(ROPCAVT),B'10000000'                       0404
*   DO WHILE(FIRSTREQ=ON×MORELINE=ON);/* LOOP FOR GRP,ALL AND FIRST
*                                      TIME THROUGH                  */
@RC00402 DS    0H                                                  0405
@RC00397 DS    0H                                                  0405
@RC00395 B     @DE00405                                            0405
@DL00405 DS    0H                                                  0406
*     EXITFLAG=OFF;                 /* RESET SO THAT WE DO NOT XCTL
*                                      TO OURSELF WHEN PROCESSING A
*                                      GROUP FOR MULTIPLE NCPS, ONLY
*                                      SOME OF WHICH ARE ACTIVE    0406
*                                                            @OZ27693*/
         NI    EXITFLAG(ROPCAVT),B'11011111'                       0406
*     CALL STRTREQ;                 /* PROC STARTLINE REQ            */
         BAL   @14,STRTREQ                                         0407
*   END;                                                           0408
@DE00405 TM    FIRSTREQ(ROPCAVT),B'11000000'                       0408
         BNZ   @DL00405                                            0408
*   RPARM=ROPCAVT;                  /* SET R1 TO OPC AVT             */
         LR    RPARM,ROPCAVT                                       0409
*   IF OPCMODID=VI THEN             /* IF GOING TO RETURN TO VI    0410
*                                      INSURE THAT STRTREQ GETS    0410
*                                      EXECUTED              @ZM47662*/
         CLC   OPCMODID(2,ROPCAVT),@CC02182                        0410
         BNE   @RF00410                                            0410
*     OCPARM=0;                     /*                       @ZM47662*/
         SLR   @15,@15                                             0411
         STH   @15,OCPARM(,ROPCE)                                  0411
*   IF OPCMODID=XCTL00 THEN         /* CLEAR REG 0 PRIOR     @YM03724*/
@RF00410 CLC   OPCMODID(2,ROPCAVT),@CC02184                        0412
         BNE   @RF00412                                            0412
*     RZERO=0;                      /* TO TRANSFER OF CONTROL        */
         SLR   RZERO,RZERO                                         0413
*   ELSE                                                           0414
*     ;                             /* TO MODULE IGC0010D.           */
@RF00412 DS    0H                                                  0415
*   GEN EXIT REFS(OPCXCTL);                                        0415
          XCTL  SF=(E,OPCXCTL(ROPCAVT))
*                                                                  0416
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS STARTLINE RETURN THIS ROUTINE IS CALLED FROM THE MAIN */
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*STRTRET:                                                          0416
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0416
@EL00001 DS    0H                                                  0416
@EF00001 DS    0H                                                  0416
@ER00001 BR    @14                                                 0416
STRTRET  DS    0H                                                  0417
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0417
*   RPARM=ADDR(NSLGRPNM);           /* GET GROUP NAME AS RETURNED  0418
*                                      FROM NSL                      */
         LA    RPARM,NSLGRPNM(,RNSL)                               0418
*   CALL WAITLSRH;                  /* FIND OPCE WITH SAME GRPNAME ON
*                                      OPCWAITV                      */
         BAL   @14,WAITLSRH                                        0419
*   RESPECIFY                                                      0420
*     RWORK6 RSTD;                  /* RWORK6 IS USED AS A TEMP SAVE
*                                      AREA FOR THE OPCE FOUND BY  0420
*                                      WAITLSRCH                     */
*   RWORK6=RPARM;                   /* SAVE OPCE ADDR                */
         LR    RWORK6,RPARM                                        0421
*   RZERO->OCLINK=RPARM->OCLINK;    /* UNLINK OPCE FROM CHAIN        */
         LR    @15,RZERO                                           0422
         MVC   OCLINK(4,@15),OCLINK(RPARM)                         0422
*   RPARM=RNSL;                     /* GET ADDR OF BUFFER RETURNED 0423
*                                      FROM NSL                      */
         LR    RPARM,RNSL                                          0423
*   RPARM->OCUNIT=BADTIC;           /* 1 BUFFER TO FREE       @YM3737*/
         MVC   OCUNIT(4,RPARM),@CF02125                            0424
*   RESPECIFY                                                      0425
*     RSAVE RSTD;                   /* REG 13 =SAVE AREA ADDR        */
*   RSAVE=ADDR(OPCSAVE);            /* SAVE AREA ADDR                */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0426
*   CALL FREEBUF;                   /* FREE BUFFER UNIT              */
         L     @15,OPCFREBF(,ROPCAVT)                              0427
         BALR  @14,@15                                             0427
*   RESPECIFY                                                      0428
*     RSAVE UNRSTD;                                                0428
*   ROPCE=RWORK6;                   /* SET UP OPCE ADDR              */
         LR    ROPCE,RWORK6                                        0429
*   RESPECIFY                                                      0430
*     RWORK6 UNRSTD;                                               0430
*   OPCCOPCE=ROPCE;                 /* MAKE ORIGINAL OPCE THE CURRENT
*                                      ONE                   @OZ27693*/
         ST    ROPCE,OPCCOPCE(,ROPCAVT)                            0431
*   RPARM=OCTRMTBL;                 /* GET TTCIN OF LINE             */
         SLR   RPARM,RPARM                                         0432
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0432
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0433
         BALR  @14,@15                                             0433
*   RTERM=RPARM;                    /* SET UP TTE BASE FOR LINE WE 0434
*                                      ARE WORKING WITH              */
         LR    RTERM,RPARM                                         0434
*   OPCWRKSP(1)=MSGNO20;            /* SET UP MSG NUMB 20            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF00608                        0435
*   OPCWRKSP(2)=PARM0;              /* SET UP PARM OF 0              */
         SLR   @15,@15                                             0436
         ST    @15,OPCWRKSP+4(,ROPCAVT)                            0436
*   CALL NORMEXIT;                  /* DO NORMAL EXIT PROCESSING     */
         BAL   @14,NORMEXIT                                        0437
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
         L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0438
*   RETURN;                                                        0439
@EL00002 DS    0H                                                  0439
@EF00002 DS    0H                                                  0439
@ER00002 BR    @14                                                 0439
*   END;                            /* END OF STRTRET                */
*                                                                  0441
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS RESPONSE THIS ROUTINE IS CALLED BY MAIN PROGRAM LOGIC */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0441
*PROCRESP:                                                         0441
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0441
PROCRESP DS    0H                                                  0442
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0442
*   RPARM=ADDR(OCBACKUP);           /* SET PTR TO GRPNAME            */
         LA    RPARM,OCBACKUP(,ROPCE)                              0443
*   CALL WAITLSRH;                  /* SEARCH WAITL CHAIN FOR OPCE 0444
*                                      WITH SAME GRPNAME             */
         BAL   @14,WAITLSRH                                        0444
*   RESPECIFY                                                      0445
*     RWORK8 RSTD;                  /* TEMP SAVE AREA FOR OPCE AD    */
*   RWORK8=RPARM;                   /* SAVE ADDR OF REAL OPCE        */
         LR    RWORK8,RPARM                                        0446
*   RZERO->OCLINK=RPARM->OCLINK;    /* UNLINK OPCE FROM CHAIN        */
         LR    @15,RZERO                                           0447
         MVC   OCLINK(4,@15),OCLINK(RPARM)                         0447
*   RPARM=OCUNIT;                   /* FREE RESPONSE BUFFER          */
         L     RPARM,OCUNIT(,ROPCE)                                0448
*   RPARM->OCUNIT=BADTIC;           /* 1 BUFFER TO FREE       @YM3737*/
         MVC   OCUNIT(4,RPARM),@CF02125                            0449
*   RESPECIFY                                                      0450
*     RSAVE RSTD;                   /* REG13=SAVE AREA ADDR          */
*   RSAVE=ADDR(OPCSAVE);            /* SAVE AREA ADDR                */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0451
*   IF OCPARM=1 THEN                /* ON GOOD RESP,CAUSE TERMINAL 0452
*                                      PRIMING FOR LINE              */
         CLC   OCPARM(2,ROPCE),@CH00062                            0452
         BNE   @RF00452                                            0452
*     DO;                           /*                       @YM08579*/
*       CALL FREEBUF;               /* FREE BUF RTN IN QCA   @YM08579*/
         L     @15,OPCFREBF(,ROPCAVT)                              0454
         BALR  @14,@15                                             0454
*       RESPECIFY                                                  0455
*         RSAVE UNRSTD;                                            0455
*       CALL STRTLINE;              /*                       @YM08579*/
         BAL   @14,STRTLINE                                        0456
*     END;                          /*                       @YM08579*/
*   ELSE                                                           0458
*     CALL ERRRESP;                 /* OTHERWISE DO ERROR PROCES   0458
*                                      BUFFER MAY BE NEEDED FOR MSG
*                                      199                   @YM08579*/
         B     @RC00452                                            0458
@RF00452 BAL   @14,ERRRESP                                         0458
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00452 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0459
*   RETURN;                                                        0460
@EL00003 DS    0H                                                  0460
@EF00003 DS    0H                                                  0460
@ER00003 BR    @14                                                 0460
*   RESPECIFY                                                      0461
*     RWORK8 UNRSTD;                                               0461
*   END;                            /* END OF PROCRESP               */
*                                                                  0463
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS SNA STARTLINE REQUEST THIS ROUTINE IS CALLED FROM MAIN*/
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0463
*SNASTRT:                                                          0463
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0463
SNASTRT  DS    0H                                                  0464
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0464
*   OCWTG=OCWTGB;                   /* RESTORE OCWTG TO ORIG         */
         MVC   OCWTG(2,ROPCE),OCWTGB(ROPCE)                        0465
*   OPCWRKSP(1)=OCPARM;             /* SAVE RESP MSG NUMB            */
         LH    @15,OCPARM(,ROPCE)                                  0466
         ST    @15,OPCWRKSP(,ROPCAVT)                              0466
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
         SLR   RPARM,RPARM                                         0467
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0467
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0468
         BALR  @14,@15                                             0468
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0469
*   IF OCPARM=GOODSTRT×OCPARM=PARTGOOD/* GOOD RESPONSE PROCESSING    */
*       ×OCPARM=LOGICGD THEN                                       0470
         LH    @15,OCPARM(,ROPCE)                                  0470
         CH    @15,@CH02156                                        0470
         BE    @RT00470                                            0470
         CH    @15,@CH02158                                        0470
         BE    @RT00470                                            0470
         CH    @15,@CH02160                                        0470
         BNE   @RF00470                                            0470
@RT00470 DS    0H                                                  0471
*     DO;                                                          0471
*       OPCWRKSP(2)=PARM0;          /* SET PARM TO ZERO              */
         SLR   @15,@15                                             0472
         ST    @15,OPCWRKSP+4(,ROPCAVT)                            0472
*       CALL NORMEXIT;              /* SET UP EXIT                   */
         BAL   @14,NORMEXIT                                        0473
*     END;                                                         0474
*   ELSE                                                           0475
*     DO;                           /* ERROR RESPONSE PROC           */
         B     @RC00470                                            0475
@RF00470 DS    0H                                                  0476
*       OPCWRKSP(2)=PARM4;          /* SET UP ERROR PARM             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0476
*       CALL ERREXIT;               /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0477
*     END;                                                         0478
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00470 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0479
*   RETURN;                                                        0480
@EL00004 DS    0H                                                  0480
@EF00004 DS    0H                                                  0480
@ER00004 BR    @14                                                 0480
*   END;                            /* END OF SNASTRT                */
*                                                                  0482
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS STARTLINE REQUEST THIS ROUTINE IS CALLED FROM MAIN    */
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0482
*STRTREQ:                                                          0482
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0482
STRTREQ  DS    0H                                                  0483
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0483
*   IF FIRSTREQ=ON THEN                                            0484
         TM    FIRSTREQ(ROPCAVT),B'10000000'                       0484
         BNO   @RF00484                                            0484
*     DO;                           /* IF FIRST REQUEST FIND FIRST 0485
*                                      LINE TO PROC                  */
*       FIRSTREQ=OFF;               /* RESET FLAG                    */
         NI    FIRSTREQ(ROPCAVT),B'01111111'                       0486
*       CALL GETFIRST;              /* FIND THE FIRST LINE           */
         BAL   @14,GETFIRST                                        0487
*     END;                                                         0488
*   ELSE                                                           0489
*     IF MORELINE=ON THEN                                          0489
         B     @RC00484                                            0489
@RF00484 TM    MORELINE(ROPCAVT),B'01000000'                       0489
         BNO   @RF00489                                            0489
*       MORELINE=OFF;               /* RESET LOOP BIT        @YM06057*/
         NI    MORELINE(ROPCAVT),B'10111111'                       0490
*     ELSE                                                         0491
*       ;                           /*                       @YM06057*/
@RF00489 DS    0H                                                  0492
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
@RC00484 SLR   RPARM,RPARM                                         0492
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0492
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0493
         BALR  @14,@15                                             0493
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0494
*   IF EXITFLAG=OFF THEN                                           0495
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0495
         BNZ   @RF00495                                            0495
*     DO;                           /* NO ERROR FOUND YET            */
*       CALL SNACHK;                /* CHECK FOR SNA LINE            */
         BAL   @14,SNACHK                                          0497
*       IF EXITFLAG=OFF THEN                                       0498
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0498
         BNZ   @RF00498                                            0498
*         DO;                       /* NO PREVIOUS ERROR             */
*           CALL ACT3705;           /* VERIFY 3705 ACTIVE            */
         BAL   @14,ACT3705                                         0500
*           IF EXITFLAG=OFF THEN                                   0501
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0501
         BNZ   @RF00501                                            0501
*             DO;                   /* NO ERROR FOUND YET            */
*               CALL LINESTAT;      /* VERFIY STATUS OF LINE         */
         BAL   @14,LINESTAT                                        0503
*               IF EXITFLAG=OFF THEN                               0504
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0504
         BNZ   @RF00504                                            0504
*                 DO;               /* NO ERRORS,CONT PROC           */
*                   CALL ACTLINK;   /* BUILD ACT LINK REQ            */
         BAL   @14,ACTLINK                                         0506
*                   OPCMODID=SSCPA0;/* CALL SSCP ROUTER              */
         MVC   OPCMODID(2,ROPCAVT),@CC02180                        0507
*                 END;                                             0508
*             END;                                                 0509
*         END;                                                     0510
*     END;                                                         0511
*   ELSE                                                           0512
*     ;                                                            0512
@RF00495 DS    0H                                                  0513
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00495 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0513
*   RETURN;                                                        0514
@EL00005 DS    0H                                                  0514
@EF00005 DS    0H                                                  0514
@ER00005 BR    @14                                                 0514
*   END;                            /* END OF STRTREQ                */
*                                                                  0516
*   /*****************************************************************/
*   /*                                                               */
*   /* GET FIRST LINE TO PROCESS THIS ROUTINE IS CALLED BY STRTREQ.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0516
*GETFIRST:                                                         0516
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0516
GETFIRST DS    0H                                                  0517
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0517
*   IF OCRENTRD=ON THEN                                            0518
         TM    OCRENTRD(ROPCE),B'10000000'                         0518
         BNO   @RF00518                                            0518
*     DO;                           /* 2ND ENTRY TO VI               */
*       OCRENTRD=OFF;               /* RESET INDICATOR               */
         NI    OCRENTRD(ROPCE),B'01111111'                         0520
*       OCWTG=OCWTGB;               /* RESTORE OCWTG                 */
         MVC   OCWTG(2,ROPCE),OCWTGB(ROPCE)                        0521
*     END;                                                         0522
*   ELSE                                                           0523
*     ;                                                            0523
@RF00518 DS    0H                                                  0524
*   RPARM=OCTRMTBL;                 /* GET TTCIN OF GRP OR LINE      */
         SLR   RPARM,RPARM                                         0524
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0524
*   CALL IEDQTNT;                   /* CONVERT TTCIN TO TTE          */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0525
         BALR  @14,@15                                             0525
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0526
*   IF TRMTYPE=TRMGRP THEN                                         0527
         LR    @15,RTERM                                           0527
         SH    @15,@CH01234                                        0527
         CLI   TRMTYPE(@15),X'00'                                  0527
         BNE   @RF00527                                            0527
*     DO;                           /* IF GROUP TTE THEN DO          */
*       IF TRMSUBST^=0 THEN         /* IF VALID SUBST PTR            */
         ICM   @11,3,TRMSUBST(@15)                                 0529
         BZ    @RF00529                                            0529
*         OCTRMTBL=TRMSUBST;        /* SAVE LINE TTCIN IN OPCE       */
         MVC   OCTRMTBL(2,ROPCE),TRMSUBST(@15)                     0530
*       ELSE                                                       0531
*         DO;                       /* NO LINES IN GROUP             */
         B     @RC00529                                            0531
@RF00529 DS    0H                                                  0532
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0532
*           OPCMODID=MOD03;         /* ERROR EXIT MODULE             */
         MVC   OPCMODID(2,ROPCAVT),@CC02178                        0533
*           OPCWRKSP(1)=MSG102;     /* ERROR MSG NUMBER              */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02162                        0534
*           OPCWRKSP(2)=PARM4;      /* PARM VALUE                    */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0535
*         END;                                                     0536
*     END;                                                         0537
*   ELSE                                                           0538
*     ;                                                            0538
@RF00527 DS    0H                                                  0539
*   IF EXITFLAG=OFF THEN                                           0539
@RC00527 TM    EXITFLAG(ROPCAVT),B'00100000'                       0539
         BNZ   @RF00539                                            0539
*     DO;                           /* NO ERROR COND FOUND           */
*       RPARM=ADDR(OCBACKUP);       /* GET ADDR OF GRPNAME           */
         LA    RPARM,OCBACKUP(,ROPCE)                              0541
*       CALL WAITLSRH;              /* FIND OPCE WITH SAME GRPNAME   */
         BAL   @14,WAITLSRH                                        0542
*       IF RPARM=0 THEN                                            0543
         LTR   RPARM,RPARM                                         0543
         BNZ   @RF00543                                            0543
*         DO;                       /* IF OPCE NOT FOUND WITH SAME 0544
*                                      GRPNAME THEN DO               */
*           IF OCALLFLG=ON THEN                                    0545
         TM    OCALLFLG(ROPCE),B'00000100'                         0545
         BNO   @RF00545                                            0545
*             DO;                   /* GRP,ALL LOOP                  */
*               OCSOME=OFF;         /* CLEAR STATUS BITS             */
*               OCNONE=OFF;                                        0548
         NI    OCSOME(ROPCE),B'11111100'                           0548
*             END;                                                 0549
*           ELSE                                                   0550
*             ;                                                    0550
@RF00545 DS    0H                                                  0551
*         END;                                                     0551
*       ELSE                                                       0552
*         DO;                       /* OPCE WITH SAME GRP NAME FOUND */
         B     @RC00543                                            0552
@RF00543 DS    0H                                                  0553
*           OCWTGB=OCWTG;           /* SAVE OCWTG                    */
         MVC   OCWTGB(2,ROPCE),OCWTG(ROPCE)                        0553
*           OCRENTRD=ON;            /* INDICATE 2ND ENTRY            */
         OI    OCRENTRD(ROPCE),B'10000000'                         0554
*           OCWTG=VI;               /* SET TO RETURN HERE            */
         MVC   OCWTG(2,ROPCE),@CC02182                             0555
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0556
*           OPCMODID=XCTL00;        /* MODULE TO GET CONTROL         */
         MVC   OPCMODID(2,ROPCAVT),@CC02184                        0557
*           CALL WAITLATT;          /* ATTACH OPCE TO WAITL          */
         BAL   @14,WAITLATT                                        0558
*         END;                                                     0559
*     END;                                                         0560
*   ELSE                                                           0561
*     ;                                                            0561
@RF00539 DS    0H                                                  0562
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00539 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0562
*   RETURN;                                                        0563
@EL00006 DS    0H                                                  0563
@EF00006 DS    0H                                                  0563
@ER00006 BR    @14                                                 0563
*   END;                            /* END OF GETFIRST               */
*                                                                  0565
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITL ATTACH SUBROUTINE. REG 1 MUST POINT TO OPCE ON WAITL    */
*   /* CHAIN AND REG 3 (ROPCE) TO THE OPCE TO BE ATTACHED THIS       */
*   /* ROUTINE IS CALLED BY GETFIRST                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0565
*WAITLATT:                                                         0565
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0565
WAITLATT DS    0H                                                  0566
*   DO WHILE(RPARM->OCATTACH=ON);   /* IF OPCES ALREADY ATTACHED     */
         B     @DE00566                                            0566
@DL00566 DS    0H                                                  0567
*     RPARM=RPARM->OCELMPTR;        /* NEXT OPCE                     */
         SLR   @15,@15                                             0567
         ICM   @15,7,OCELMPTR(RPARM)                               0567
         LR    RPARM,@15                                           0567
*   END;                                                           0568
@DE00566 TM    OCATTACH(RPARM),B'00000010'                         0568
         BO    @DL00566                                            0568
*   RPARM->OCELMPTR=ROPCE;          /* OPCE TO ATTACH                */
         STCM  ROPCE,7,OCELMPTR(RPARM)                             0569
*   RPARM->OCATTACH=ON;             /* IND ATTACHED OPCE             */
         OI    OCATTACH(RPARM),B'00000010'                         0570
*   RETURN;                                                        0571
@EL00007 DS    0H                                                  0571
@EF00007 DS    0H                                                  0571
@ER00007 BR    @14                                                 0571
*   END;                            /* END OF WAITLATT               */
*                                                                  0573
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS FOR SNA LINES THIS ROUTINE IS CALLED BY*/
*   /* STRTREQ.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0573
*SNACHK:                                                           0573
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0573
SNACHK   DS    0H                                                  0574
*   IF TRMTYPE=TRMSDLC THEN                                        0574
         LR    @15,RTERM                                           0574
         AL    @15,@CF01503                                        0574
         CLI   TRMTYPE-11(@15),X'21'                               0574
         BNE   @RF00574                                            0574
*     DO;                           /* IF SNA LINE                   */
*       OCIPLWA=0;                  /* CLEAR FOR USE BY ACT-DE       */
         SLR   @15,@15                                             0576
         ST    @15,OCIPLWA(,ROPCE)                                 0576
*       OCPTRSAV=0;                 /* CLEARED FOR ACTIVATE USE      */
         ST    @15,OCPTRSAV(,ROPCE)                                0577
*       OCWTGB=OCWTG;               /* SAVE CALLER                   */
         MVC   OCWTGB(2,ROPCE),OCWTG(ROPCE)                        0578
*       OCWTG=VI;                   /* INDICATE RETURN HERE          */
         MVC   OCWTG(2,ROPCE),@CC02182                             0579
*       OCSWITCH=OCTOFA;            /* IND ACT LINK REQ              */
         MVI   OCSWITCH(ROPCE),X'22'                               0580
*       OPCMODID=FA;                /* ACT MOD TO GET CONTROL        */
         MVC   OPCMODID(2,ROPCAVT),@CC02186                        0581
*       EXITFLAG=ON;                /* IND EXIT                      */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0582
*       OPCCOPCE=ROPCE;             /* ATTACH OPCE TO OP AVT         */
         ST    ROPCE,OPCCOPCE(,ROPCAVT)                            0583
*     END;                                                         0584
*   ELSE                                                           0585
*     ;                                                            0585
@RF00574 DS    0H                                                  0586
*   RETURN;                                                        0586
@EL00008 DS    0H                                                  0586
@EF00008 DS    0H                                                  0586
@ER00008 BR    @14                                                 0586
*   END;                            /* END OF SNACHK                 */
*                                                                  0588
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS THE ACTIVE STATUS OF THE LINE THIS     */
*   /* ROUTINE IS CALLED BY STRTREQ                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0588
*LINESTAT:                                                         0588
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0588
LINESTAT DS    0H                                                  0589
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0589
*   IF TRMEPMOD=ON THEN                                            0590
         LR    @15,RTERM                                           0590
         AL    @15,@CF02290                                        0590
         TM    TRMEPMOD-1(@15),B'10000000'                         0590
         BNO   @RF00590                                            0590
*     DO;                           /* IF LINE IS IN EP MODE         */
*       OPCWRKSP(1)=MSG443;         /* SET UP ERROR MSG              */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02139                        0592
*       OPCWRKSP(2)=PARM4;          /* SET UP PARM VALUE             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0593
*       EXITFLAG=ON;                /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0594
*       CALL ERREXIT;               /* EXECUTE ERROR PROCESS         */
         BAL   @14,ERREXIT                                         0595
*     END;                                                         0596
*   ELSE                                                           0597
*     DO;                           /* LINE NOT IN EP MODE           */
         B     @RC00590                                            0597
@RF00590 DS    0H                                                  0598
*       IF OCTOTE=ON THEN                                          0598
         TM    OCTOTE(ROPCE),B'01000000'                           0598
         BNO   @RF00598                                            0598
*         TRMSTOTE=OFF;             /* IF TOTE REQUEST, INDICATE LINE
*                                      NOT IN TOTE MODE              */
         LR    @15,RTERM                                           0599
         AL    @15,@CF02291                                        0599
         NI    TRMSTOTE-3(@15),B'11111110'                         0599
*       ELSE                                                       0600
*         ;                                                        0600
@RF00598 DS    0H                                                  0601
*       IF TRMSTOTE=ON THEN                                        0601
         LR    @15,RTERM                                           0601
         AL    @15,@CF02291                                        0601
         TM    TRMSTOTE-3(@15),B'00000001'                         0601
         BNO   @RF00601                                            0601
*         DO;                       /* IF TOTE OWNS LINE             */
*           OPCWRKSP(1)=MSG49;      /* SET ERROR MSG NUMBER          */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02141                        0603
*           OPCWRKSP(2)=PARM4;      /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0604
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0605
*           CALL ERREXIT;           /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0606
*         END;                                                     0607
*       ELSE                                                       0608
*         DO;                       /* TOTE DOESNT CONTROL LINE      */
         B     @RC00601                                            0608
@RF00601 DS    0H                                                  0609
*           IF TRMRSACT=ON THEN                                    0609
         LR    @15,RTERM                                           0609
         AL    @15,@CF02292                                        0609
         TM    TRMRSACT-2(@15),B'10000000'                         0609
         BNO   @RF00609                                            0609
*             DO;                   /* IF LINE ALREADY ACTIVE        */
*               OPCWRKSP(1)=MSG19;  /* SET ERROR MSG NUMBER          */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02143                        0611
*               OPCWRKSP(2)=PARM8;  /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00046                      0612
*               EXITFLAG=ON;        /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0613
*               CALL ERREXIT;       /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0614
*             END;                                                 0615
*           ELSE                                                   0616
*             ;                                                    0616
@RF00609 DS    0H                                                  0617
*         END;                                                     0617
*     END;                                                         0618
@RC00601 DS    0H                                                  0619
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN REG            */
@RC00590 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0619
*   RETURN;                                                        0620
@EL00009 DS    0H                                                  0620
@EF00009 DS    0H                                                  0620
@ER00009 BR    @14                                                 0620
*   END;                            /* END OF LINESTAT               */
*                                                                  0622
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS FOR NCP ACTIVE THIS ROUTINE IS CALLED  */
*   /* BY STRTREQ.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*ACT3705:                                                          0622
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0622
ACT3705  DS    0H                                                  0623
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN REG               */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0623
*   IF TRMCOHRT=0 THEN                                             0624
         LR    @15,RTERM                                           0624
         AL    @15,@CF02293                                        0624
         ICM   @11,3,TRMCOHRT-4(@15)                               0624
         BNZ   @RF00624                                            0624
*     DO;                           /* IF NO COHORT PTR              */
*       OPCWRKSP(1)=NCPACT;         /* NCP NOT ACTIVE MSG            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02145                        0626
*       OPCWRKSP(2)=PARM4;          /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0627
*       EXITFLAG=ON;                /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0628
*       CALL ERREXIT;               /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0629
*     END;                                                         0630
*   ELSE                                                           0631
*     DO;                           /* HIERARCHY IN PLACE            */
         B     @RC00624                                            0631
@RF00624 DS    0H                                                  0632
*       RESPECIFY                                                  0632
*         RSAVE RSTD;               /* R13=SAVE AREA ADDR            */
*       RSAVE=ADDR(OPCSAVE);        /* SET UP SAVE AREA              */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0633
*       RPARM=RTERM;                /* PASS TTE                      */
         LR    RPARM,RTERM                                         0634
*       CALL COHORTLK;              /* COHORT LOOK UP RTN            */
         L     @15,OPCHORT(,ROPCAVT)                               0635
         BALR  @14,@15                                             0635
*       RESPECIFY                                                  0636
*         RSAVE UNRSTD;                                            0636
*       RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE PREFIX    */
         SH    RPARM,@CH01234                                      0637
*       IF RPARM->TRMRSACT=OFF THEN                                0638
         TM    TRMRSACT(RPARM),B'10000000'                         0638
         BNZ   @RF00638                                            0638
*         DO;                       /* ACTIVE FLAG OFF               */
*           OPCWRKSP(1)=NCPACT;     /* NCP NOT ACTIVE MSG            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02145                        0640
*           OPCWRKSP(2)=PARM4;      /* PARM VALUE                    */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0641
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0642
*           CALL ERREXIT;           /* ERROR PROCESS                 */
         BAL   @14,ERREXIT                                         0643
*         END;                                                     0644
*       ELSE                                                       0645
*         DO;                       /* ACTIVE FLAG ON                */
         B     @RC00638                                            0645
@RF00638 DS    0H                                                  0646
*           IF OCACTREQ=OFF&RPARM->TRMINPG=ON THEN                 0646
         TM    OCACTREQ(ROPCE),B'00001000'                         0646
         BNZ   @RF00646                                            0646
         TM    TRMINPG(RPARM),B'00100000'                          0646
         BNO   @RF00646                                            0646
*             DO;                   /* IF REQUEST IS NOT FROM      0647
*                                      ACTIVATE AND ACT-DEACT-     0647
*                                      IPL-DUMP IN PROGRESS,ERROR    */
*               RPARM=(RPARM+LENGTH(IEDNTRM))->TRMDESTQ->QCBDCBAD;/*
*                                      GET DEB ADDRESS       @YM09041*/
         ICM   @15,7,TRMDESTQ+14(RPARM)                            0648
         SLR   @11,@11                                             0648
         ICM   @11,7,QCBDCBAD(@15)                                 0648
         LR    RPARM,@11                                           0648
*               RFY                                                0649
*                 IHADCB BASED(RPARM);/*                     @XM05659*/
*               RPARM=DCBDEBAD;     /* GET DEB ADDRESS       @XM05659*/
         L     @15,DCBDEBAD+40(,RPARM)                             0650
         LR    RPARM,@15                                           0650
*               RFY                                                0651
*                 IEDQDEB BASED(RPARM);                            0651
*               RPARM=RPARM-(ADDR(DEBNMSUB)-ADDR(IEDQDEB));/* BACKUP */
         SH    RPARM,@CH00776                                      0652
*               OCBACKUP=''B;       /* CLEAR TO INSERT THE UCB ADDR  */
         XC    OCBACKUP(8,ROPCE),OCBACKUP(ROPCE)                   0653
*               OCBACKUP(1:3)=DEBUCBAD->UCBNAME;/* INSERT THE UCB  0654
*                                      ADDR                          */
         ICM   @15,7,DEBUCBAD(RPARM)                               0654
         MVC   OCBACKUP(3,ROPCE),UCBNAME(@15)                      0654
*               OPCWRKSP(1)=NCPACT2;/* ERROR MSG                     */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02147                        0655
*               OPCWRKSP(2)=PARM4;  /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0656
*               EXITFLAG=ON;        /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0657
*               CALL ERREXIT;       /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0658
*             END;                                                 0659
*           ELSE                                                   0660
*             ;                                                    0660
@RF00646 DS    0H                                                  0661
*         END;                                                     0661
*     END;                                                         0662
@RC00638 DS    0H                                                  0663
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00624 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0663
*   RETURN;                                                        0664
@EL00010 DS    0H                                                  0664
@EF00010 DS    0H                                                  0664
@ER00010 BR    @14                                                 0664
*   END;                            /* END OF ACT3705                */
*                                                                  0666
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITL CHAIN SEARCH ROUTINE THIS ROUTINE IS CALLED BY          */
*   /* STRTRET,PROCRESP,GETFIRST                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0666
*WAITLSRH:                                                         0666
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0666
WAITLSRH DS    0H                                                  0667
*   RESPECIFY                                                      0667
*    (RWORK6,                                                      0667
*     RWORK7) RSTD;                 /* THIS RTN USES RWORK6 TO     0667
*                                      CONTAIN THE ADDR OF THE PREVI
*                                      OPCE ON THE CHAIN. RWORK7 HAS
*                                      THIS ADDRESS OF THE OPCE WE 0667
*                                      ARE LOOKING AT                */
*   RWORK6=ADDR(OPCWAITV);          /* ADDR OF WAITL CHAIN           */
         LA    RWORK6,OPCWAITV(,ROPCAVT)                           0668
*   RWORK7=OPCWAITV;                /* GET 1ST ELEM ON CHAIN         */
         L     RWORK7,OPCWAITV(,ROPCAVT)                           0669
*   RWORK7=RWORK7&MASKBYTE;         /* CLEAR HIGH ORDER BY   @YM06021*/
         N     RWORK7,@CF02136                                     0670
*   DO WHILE(RWORK7^=0&RWORK7->OCBACKUP^=RPARM->GRPNAME);/* SEARCH 0671
*                                      WAITL CHAIN UNTIL END OF CHAIN
*                                      FOUND OR MATCHING GRPNAMES  0671
*                                      FOUND                         */
         B     @DE00671                                            0671
@DL00671 DS    0H                                                  0672
*     RWORK6=RWORK7;                /* SAVE THIS AS PREVIOUS         */
         LR    RWORK6,RWORK7                                       0672
*     RWORK7=RWORK7->OCLINK;        /* NEXT OPCE                     */
         L     RWORK7,OCLINK(,RWORK7)                              0673
*   END;                                                           0674
@DE00671 LTR   RWORK7,RWORK7                                       0674
         BZ    @DC00671                                            0674
         CLC   OCBACKUP(8,RWORK7),GRPNAME(RPARM)                   0674
         BNE   @DL00671                                            0674
@DC00671 DS    0H                                                  0675
*   IF RWORK7=0 THEN                                               0675
         LTR   RWORK7,RWORK7                                       0675
         BNZ   @RF00675                                            0675
*     RPARM=0;                      /* NO OPCE FOUND                 */
         SLR   RPARM,RPARM                                         0676
*   ELSE                                                           0677
*     DO;                                                          0677
         B     @RC00675                                            0677
@RF00675 DS    0H                                                  0678
*       RPARM=RWORK7;               /* R1=OPCE                       */
         LR    RPARM,RWORK7                                        0678
*       RZERO=RWORK6;               /* R0=PREVIOUS OPCE              */
         LR    RZERO,RWORK6                                        0679
*     END;                                                         0680
*   RESPECIFY                                                      0681
*    (RWORK6,                                                      0681
*     RWORK7) UNRSTD;                                              0681
*   RETURN;                                                        0682
@EL00011 DS    0H                                                  0682
@EF00011 DS    0H                                                  0682
@ER00011 BR    @14                                                 0682
*   END;                            /* END OF WAITLSRH               */
         B     @EL00011                                            0683
*                                                                  0684
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBR BUILDS THE ACT LINK REQUEST THIS ROUTINE IS CALLED  */
*   /* BY STRTREQ                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0684
*ACTLINK:                                                          0684
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0684
ACTLINK  DS    0H                                                  0685
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0685
*   RPARM=1;                        /* GET ONE BUFFER                */
         LA    RPARM,1                                             0686
*   RESPECIFY                                                      0687
*     RSAVE RSTD;                   /* R13=SAVE AREA ADDR            */
*   RSAVE=ADDR(OPCSAVE);            /* ADDR OF SAVE AREA             */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0688
*   CALL ALLOCBUF;                  /* GET BUFF SUBR IN QCA          */
         L     @15,OPCGETBF(,ROPCAVT)                              0689
         BALR  @14,@15                                             0689
*   RESPECIFY                                                      0690
*     RSAVE UNRSTD;                                                0690
*   RPARM->OPREPRI=PRIHIFLG;        /* SET PRIORITY                  */
         MVI   OPREPRI(RPARM),X'E9'                                0691
*   RPARM->OPREFLG1=OPRA0;          /* SET FLAG FOR A0               */
         MVI   OPREFLG1(RPARM),X'01'                               0692
*   RPARM->OCSWITCH=OCACTLK;        /* SET ACTLINK REQ FLAG          */
         MVI   OCSWITCH(RPARM),X'50'                               0693
*   RPARM->OCWTG=VI;                /* INDICATE RETURN HERE          */
         MVC   OCWTG(2,RPARM),@CC02182                             0694
*   RPARM->OCACTREQ=ON;             /* INDICATE ACTIVATE IN PROG     */
         OI    OCACTREQ(RPARM),B'00001000'                         0695
*   RPARM->OCTRMTBL=OCTRMTBL;       /* GET TTCIN FROM OPCE MOVE TO 0696
*                                      DUMMY OPCE                    */
         MVC   OCTRMTBL(2,RPARM),OCTRMTBL(ROPCE)                   0696
*   RPARM->OCBACKUP=OCBACKUP;       /* MOVE GRPNAME FROM OPCE TO   0697
*                                      DUMMY OPCE                    */
         MVC   OCBACKUP(8,RPARM),OCBACKUP(ROPCE)                   0697
*   OPCCOPCE=RPARM;                 /* ATTACH DUMMY OPCE TO OAVT     */
         ST    RPARM,OPCCOPCE(,ROPCAVT)                            0698
*   CALL WAITLADD;                  /* PUT ORIGINALOPCE ON WAITL     */
         BAL   @14,WAITLADD                                        0699
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0700
*   RETURN;                                                        0701
@EL00012 DS    0H                                                  0701
@EF00012 DS    0H                                                  0701
@ER00012 BR    @14                                                 0701
*   END;                            /* END OF ACTLINK                */
*                                                                  0703
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE BUILDS THE REQUEST TO IEDNSL TO PRIME THE     */
*   /* TERMINALS ON A SPECIFIC LINE THIS ROUTINE IS CALLED BY        */
*   /* PROCRESP                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0703
*STRTLINE:                                                         0703
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0703
STRTLINE DS    0H                                                  0704
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0704
*   RESPECIFY                                                      0705
*     RWORK8 RSTD;                  /* PROCRESP HAS LOADED RWORK8  0705
*                                      WITH THE REAL OPCE ADDR       */
*   NSLPLCB=''B;                    /* CLEAR FIELD                   */
         MVI   NSLPLCB(RNSL),X'00'                                 0706
*   NSLSAVE=''B;                    /* CLEAR FIELD           @YM05736*/
         SLR   @15,@15                                             0707
         STCM  @15,7,NSLSAVE(RNSL)                                 0707
*   NSLGPCUS=''B;                   /* CLEAR FIELD                   */
         MVI   NSLGPCUS(RNSL),X'00'                                0708
*   NSLREQTY=NSLSTRTL;              /* INDICATE STARTLINE REQ        */
         MVI   NSLREQTY(RNSL),X'01'                                0709
*   NSLPRIBK=PRIMEDFG;              /* SET RETURN PRIORITY           */
         MVI   NSLPRIBK(RNSL),X'DF'                                0710
*   NSLFLGBK=OPRVI;                 /* RETURN FLAG TO VI             */
         MVI   NSLFLGBK(RNSL),X'04'                                0711
*   RPARM=RWORK8->OCTRMTBL;         /* TTCIN OF LINE                 */
         SLR   RPARM,RPARM                                         0712
         ICM   RPARM,3,OCTRMTBL(RWORK8)                            0712
*   CALL IEDQTNT;                   /* GET TTE ADDR                  */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0713
         BALR  @14,@15                                             0713
*   NSLTTEPT=RPARM;                 /* PASS IN PARM LIST             */
         ST    RPARM,NSLTTEPT(,RNSL)                               0714
*   NSLGRPNM=RWORK8->OCBACKUP;      /* PASS GROUP NAME               */
         MVC   NSLGRPNM(8,RNSL),OCBACKUP(RWORK8)                   0715
*   OPREQCB=SAVTSPLN;               /* QCB FOR NSL                   */
         L     @15,AVTSAVTP(,IEDQAPTR)                             0716
         MVC   OPREQCB(3,ROPCE),SAVTSPLN+1(@15)                    0716
*   OPREPRI=PRIOPCTL;               /* PRIORITY FOR NSL              */
         MVI   OPREPRI(ROPCE),X'DC'                                0717
*   QCTLWRD1=RNSL;                  /* NSL BUFFER ADDR               */
         LA    @15,180                                             0718
         ALR   @15,ROPCAVT                                         0718
         ST    RNSL,QCTLWRD1(,@15)                                 0718
*   QCTLWRD2=RNSL;                  /* NSL BUFFER ADDR               */
         ST    RNSL,QCTLWRD2(,@15)                                 0719
*   QCTLREQ=TPOST;                  /* INDICATE POST REQUEST         */
         MVI   QCTLREQ(@15),X'0C'                                  0720
*   QCTLEND=ENDLIST;                /* END OF PARM LIST              */
         MVI   QCTLEND(@15),X'80'                                  0721
*   RTERM=RPARM;                    /* SET TTE BASE FOR LINE         */
         LR    RTERM,RPARM                                         0722
*   RPARM=ADDR(OPCAQCTL);           /* ADDR OF PARM LIST             */
         LA    RPARM,OPCAQCTL(,ROPCAVT)                            0723
*   SVC(102);                       /* ISSUE SVC 102                 */
         SVC   102                                                 0724
*   ROPCE=RWORK8;                   /* ESTAB ADDR TO OPCE            */
         LR    ROPCE,RWORK8                                        0725
*   CALL WAITLADD;                  /* PUT OPCE ON WAITCHAIN         */
         BAL   @14,WAITLADD                                        0726
*   OPCMODID=XCTL00;                /* EXIT TO IGC0010D              */
         MVC   OPCMODID(2,ROPCAVT),@CC02184                        0727
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0728
*   RETURN;                                                        0729
@EL00013 DS    0H                                                  0729
@EF00013 DS    0H                                                  0729
@ER00013 BR    @14                                                 0729
*   RESPECIFY                                                      0730
*     RWORK8 UNRSTD;                                               0730
*   END;                            /* END OF STRT TERM              */
*                                                                  0732
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE PUTS AN ELEMENT ON THE WAITL CHAIN THIS       */
*   /* ROUTINE IS CALLED BY ACTLINK,STRTLINE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0732
*WAITLADD:                                                         0732
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0732
WAITLADD DS    0H                                                  0733
*   RESPECIFY                                                      0733
*     RWORK7 RSTD;                  /* RWORK7 IS USED TO CONTAIN ADDR
*                                      OF AN ELEMENT OF WAITL        */
*   RWORK7=OPCWAITV;                /* GET 1ST ELEM ON WAITL         */
         L     RWORK7,OPCWAITV(,ROPCAVT)                           0734
*   OCLINK=RWORK7;                  /* SET NEXT ELEM PTR             */
         ST    RWORK7,OCLINK(,ROPCE)                               0735
*   ROPCE=ROPCE&MASKBYTE;           /* CLEAR THE HIGH ORDER BYTE   0736
*                                                            @YM04620*/
         N     ROPCE,@CF02136                                      0736
*   OPCWAITV=ROPCE;                 /* CHAIN ELEM IN                 */
         ST    ROPCE,OPCWAITV(,ROPCAVT)                            0737
*   RETURN;                                                        0738
@EL00014 DS    0H                                                  0738
@EF00014 DS    0H                                                  0738
@ER00014 BR    @14                                                 0738
*   RESPECIFY                                                      0739
*     RWORK7 UNRSTD;                                               0739
*   END;                            /* END OF WAITLADD               */
*                                                                  0741
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR RESPONSE PROCESSING THIS ROUTINE IS CALLED BY PROCRESP  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0741
*ERRRESP:                                                          0741
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0741
ERRRESP  DS    0H                                                  0742
*   RESPECIFY                                                      0742
*     RWORK8 RSTD;                  /* PROCRESP HAS LOADED OPCE ADDR
*                                      IN RWORK8                     */
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0743
*   IF OCPARM=PARM2 THEN            /* LINE ALREADY STARTED? @YM08579*/
         CLC   OCPARM(2,ROPCE),@CH00066                            0744
         BNE   @RF00744                                            0744
*     DO;                           /*                       @YM08579*/
*       RESPECIFY                                                  0746
*         RSAVE RSTD;                                              0746
*       RSAVE=ADDR(OPCSAVE);        /* ADDR OF SAVE AREA             */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0747
*       CALL FREEBUF;               /* FREE RSP BUFFER       @YM08579*/
         L     @15,OPCFREBF(,ROPCAVT)                              0748
         BALR  @14,@15                                             0748
*     END;                          /*                       @YM08579*/
*   ELSE                            /*                       @YM08579*/
*     RWORK8->OCUNIT=ROPCE->OCUNIT; /* SAVE BUF FOR MG199    @YM08579*/
         B     @RC00744                                            0750
@RF00744 MVC   OCUNIT(4,RWORK8),OCUNIT(ROPCE)                      0750
*   RPARM=ROPCE;                    /* FREE OPCE                     */
@RC00744 LR    RPARM,ROPCE                                         0751
*   RPARM->OCUNIT=BADTIC;           /* 1 BUFFER TO FREE       @YM3737*/
         MVC   OCUNIT(4,RPARM),@CF02125                            0752
*   IF OCPARM=PARM2 THEN            /* LINE ALREADY STARTED? @YM04637*/
         CLC   OCPARM(2,ROPCE),@CH00066                            0753
         BNE   @RF00753                                            0753
*     OPCWRKSP(1)=MSG19;            /* SETUP ALREADY STARTED MESSAGE
*                                                            @YM04637*/
         MVC   OPCWRKSP(4,ROPCAVT),@CF02143                        0754
*   ELSE                            /* NCP REJECTION         @YM04637*/
*     OPCWRKSP(1)=MSG199;           /* MSG NUMBER 199                */
         B     @RC00753                                            0755
@RF00753 MVC   OPCWRKSP(4,ROPCAVT),@CF02149                        0755
*   CALL FREEBUF;                   /* QCA FREE BUFFER RTN           */
@RC00753 L     @15,OPCFREBF(,ROPCAVT)                              0756
         BALR  @14,@15                                             0756
*   RESPECIFY                                                      0757
*     RSAVE UNRSTD;                                                0757
*   OPCWRKSP(2)=PARM4;              /* SET UP PARM VALUE             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0758
*   ROPCE=RWORK8;                   /* GET OPCE                      */
         LR    ROPCE,RWORK8                                        0759
*   RESPECIFY                                                      0760
*     RWORK8 UNRSTD;                                               0760
*   OPCCOPCE=ROPCE;                 /* MAKE ORIGINAL OPCE THE CURRENT
*                                      ONE                   @OZ27693*/
         ST    ROPCE,OPCCOPCE(,ROPCAVT)                            0761
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
         SLR   RPARM,RPARM                                         0762
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0762
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0763
         BALR  @14,@15                                             0763
*   RTERM=RPARM;                    /* SET TTE BASE                  */
         LR    RTERM,RPARM                                         0764
*   CALL ERREXIT;                   /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0765
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0766
*   RETURN;                                                        0767
@EL00015 DS    0H                                                  0767
@EF00015 DS    0H                                                  0767
@ER00015 BR    @14                                                 0767
*   END;                            /* END OF ERRRESP                */
*                                                                  0769
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR PROCESSING THIS ROUTINE IS CALLED BY SNASTRT,           */
*   /* LINESTAT,ACT3705,ERRRESP                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0769
*ERREXIT:                                                          0769
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0769
ERREXIT  DS    0H                                                  0770
*   OPCWRKSP(5)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+16(,ROPCAVT)                       0770
*   CALL ERRSTAT;                   /* UPDATE ERROR STATUS           */
         BAL   @14,ERRSTAT                                         0771
*   IF MORELINE=OFF THEN                                           0772
         TM    MORELINE(ROPCAVT),B'01000000'                       0772
         BNZ   @RF00772                                            0772
*     DO;                           /* IF NO MORE LINES TO PROCESS,
*                                      THEN SETUP EXIT               */
*       IF OCWTG=0 THEN                                            0774
         ICM   @15,3,OCWTG(ROPCE)                                  0774
         BNZ   @RF00774                                            0774
*         DO;                       /* NOT INTERNAL CALL             */
*           RZERO=OPCWRKSP(1);      /* SET UPMSG NUMB                */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0776
*           RPARM=OPCWRKSP(2);      /* PARM VALUE                    */
         L     RPARM,OPCWRKSP+4(,ROPCAVT)                          0777
*           IF RZERO=MSG511 THEN                                   0778
         CH    RZERO,@CH02153                                      0778
         BNE   @RF00778                                            0778
*             DO;                   /* IF SOME LINES STARTED @OZ28007*/
*               OPCMODID=CHKPT;     /* SET TO XCTL TO IGC0610D     0780
*                                                            @OZ28007*/
         MVC   OPCMODID(2,ROPCAVT),@CC02172                        0780
