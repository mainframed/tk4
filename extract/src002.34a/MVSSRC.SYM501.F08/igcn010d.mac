         TITLE 'IGCN010D, 3705-SWITCH LINE MODE                        *
                        '
IGCN010D CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGCN010D  77.215'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0200
*/********************************************************************/
*/* INITIALIZE CONTROL BLOCK REGISTERS.                              */
*/********************************************************************/
*                                                                  0200
*   ROPCAVT=RPARM;                  /* SET BASE FOR OP CTL AVT       */
         LR    ROPCAVT,RPARM                                       0200
*   IEDQAPTR=OPCAVTPT;              /* SET BASE FOR TCAM AVT         */
         L     IEDQAPTR,OPCAVTPT(,ROPCAVT)                         0201
*   ROPCE=OPCCOPCE;                 /* PICK UP ELEMENT POINTER       */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0202
*   RSAVE=ADDR(OPCSAVE);            /* GET SAVE AREA ADDRESS         */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0203
*   IF OPCRSTRT='1'B THEN           /* RESTART IN PROGRESS           */
         TM    OPCRSTRT(ROPCAVT),B'00100000'                       0204
         BNO   @RF00204                                            0204
*     DO;                           /* YES                           */
*       OPCDOUBL=OCBACKUP;          /* RESET GRPNAME                 */
         MVC   OPCDOUBL(8,ROPCAVT),OCBACKUP(ROPCE)                 0206
*       RPARM=OCRLN;                /* RESET RLN                     */
         SLR   RPARM,RPARM                                         0207
         IC    RPARM,OCRLN(,ROPCE)                                 0207
*       GOTO RESTART;               /* GET LINE ENTRY ADDRESS        */
         B     RESTART                                             0208
*     END;                                                         0209
*                                                                  0209
*/********************************************************************/
*/* CHECK FOR RESPONSE BTU:                                          */
*/*                OCRESP=OFF - ELEMENT IS ASSOCIATED WITH           */
*/*                             INITIAL SWITCH LINE MODE             */
*/*                             COMMAND WHICH NEEDS OPERAND          */
*/*                             CHECKING AND A BTU SENT.             */
*/*                OCRESP=ON  - ELEMENT IS ASSOCIATED WITH A         */
*/*                             RESPONSE BTU SENT ON A PREVIOUS      */
*/*                             ENTRY INTO THIS MODULE.              */
*/********************************************************************/
*                                                                  0210
*   IF OCRESP='1'B THEN             /* DOES ELEMENT POINT TO A     0210
*                                      RESPONSE BTU ?                */
@RF00204 TM    OCRESP(ROPCE),B'00000001'                           0210
         BO    @RT00210                                            0210
*     GOTO PROCBTU;                 /* YES, PROCESS THE BTU          */
*   OCMODNME=BLANKS;                /* CLEAR OCMODNME TO BLANKS      */
         MVC   OCMODNME(8,ROPCE),BLANKS                            0212
*                                                                  0213
*/********************************************************************/
*/* SCAN THE FIRST OPERAND FOR VALID NUMERIC OF ONE TO THREE DIGITS. */
*/* IF THE OPERAND IS A VALID NUMERIC, PUT THE RLN INTO RPARM AND    */
*/* CALL THE 'GRPNAME,RLN' CODE TO FIND THE LINE ENTRY. 'GRPNAME'    */
*/* IS IN OPCDOUBL AT ENTRY.                                         */
*/********************************************************************/
*                                                                  0213
*   IF RLEN=0 THEN                  /* ANOTHER OPERAND ?             */
         LTR   RLEN,RLEN                                           0213
         BZ    @RT00213                                            0213
*     GOTO CMDINV;                  /* NO, COMMAND INVALID           */
*   OCBACKUP=OPCDOUBL;              /* SAVE GROUP NAME               */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0215
*   CALL SCAN1;                     /* SCAN THE OPERAND              */
         BAL   @14,SCAN1                                           0216
*   IF RBYSCN=0×                    /* WAS OPERAND SKIPPED OR        */
*       RBYSCN>AVTHA3×              /* OPERAND LENGTH > 3 OR         */
*       RLEN=0 THEN                 /* LAST OPERAND ?                */
         SLR   @15,@15                                             0217
         CR    RBYSCN,@15                                          0217
         BE    @RT00217                                            0217
         CH    RBYSCN,AVTHA3(,IEDQAPTR)                            0217
         BH    @RT00217                                            0217
         CR    RLEN,@15                                            0217
         BE    @RT00217                                            0217
*     GOTO CMDINV;                  /* YES TO ANY OF ABOVE - COMMAND
*                                      INVALID                       */
*   RBYSCN=RBYSCN-1;                /* GET NUMBER OF DIGITS LESS 1 0219
*                                      FOR EXECUTE INSTRUCTION       */
         BCTR  RBYSCN,0                                            0219
*/********************************************************************/
*/* CONVERT RLN FROM EBCDIC TO BINARY AND TEST FOR VALID RLN --      */
*/*               0 < RLN =< 255                                     */
*/********************************************************************/
*                                                                  0220
*   GEN;                                                           0220
         EX    RBYSCN,MOVERLN           PUT RLN IN WORK AREA
         EX    RBYSCN,PACK              PACK RLN IN WORK AREA
         XC    OPCSAVE(EQU6,ROPCAVT),OPCSAVE(ROPCAVT)
         CVB   RPARM,OPCSAVE(ROPCAVT)   CONVERT RLN TO BINARY
*   IF RPARM=0×                     /* RLN = 0 OR                    */
*       RPARM>255 THEN              /* RLN GREATER THAN MAXIMUM ?    */
         LTR   RPARM,RPARM                                         0221
         BZ    @RT00221                                            0221
         C     RPARM,@CF01239                                      0221
         BH    @RT00221                                            0221
*     GOTO CMDINV;                  /* YES, COMMAND INVALID          */
*                                                                  0223
*/********************************************************************/
*/* CALL IEDQCA AT ENTRY POINT FOR 'GRPNAME,RLN' LOOKUP. RETURN WILL */
*/* BE THE FOLLOWING:                                                */
*/*                     RRET+0 -- SUCCESSFUL                         */
*/*                     RRET+4 -- UNSUCCESSFUL                       */
*/* IF UNSUCCESSFUL, ONE OF THE FOLLOWING RETURN CODES WILL BE IN    */
*/* RZERO:                                                           */
*/*                  X'01' - LGB NOT OPEN (NOTOPEN)                  */
*/*                  X'04' - NAME NOT FOUND (NONAME)                 */
*/*                  X'08' - INVALID RLN (INVRLN)                    */
*/*                  X'20' - NOT A 3705 LINE (NOT3705L)              */
*/********************************************************************/
*                                                                  0223
*RESTART:                                                          0223
*   CALL DCBLOCAT;                  /* FIND TERM ENTRY       @Y17XARX*/
RESTART  L     @15,OPCDCBLK(,ROPCAVT)                              0223
         BALR  @14,@15                                             0223
*   GOTO SAVELINE;                  /* GOOD RETURN - SAVE LINE ENTRY
*                                      ADDRESS                       */
         B     SAVELINE                                            0224
*DLABEL:                            /*                       @Y17XARX*/
*   IF RZERO=1×                     /* LGB NOT OPEN OR               */
*       RZERO=8 THEN                /* RLN IS INVALID ?              */
DLABEL   C     RZERO,@CF00062                                      0225
         BE    @RT00225                                            0225
         C     RZERO,@CF00053                                      0225
         BNE   @RF00225                                            0225
@RT00225 DS    0H                                                  0226
*     RMSGNUM=17;                   /* YES, SET 'LINE NOT OPEN'    0226
*                                      MESSAGE                       */
         LA    RMSGNUM,17                                          0226
*   ELSE                                                           0227
*     RMSGNUM=173;                  /* SET 'NOT A 3705 RESOURCE'   0227
*                                      MESSAGE                       */
         B     @RC00225                                            0227
@RF00225 LA    RMSGNUM,173                                         0227
*   GOTO ERREXIT;                   /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0228
*SAVELINE:                                                         0229
*   OCELEM=RZERO;                   /* SAVE LINE ENTRY ADDRESS       */
SAVELINE ST    RZERO,OCELEM(,ROPCE)                                0229
*   IF OPCRSTRT='1'B THEN           /* RESTART IN PROGRESS           */
         TM    OPCRSTRT(ROPCAVT),B'00100000'                       0230
         BNO   @RF00230                                            0230
*     DO;                           /* YES                           */
*       IEDQTPTR=OCELEM;            /* SET LINE ENTRY BASE           */
         L     @15,OCELEM(,ROPCE)                                  0232
         LR    IEDQTPTR,@15                                        0232
*       GOTO RESTART1;              /* GO SET EP MODE BIT            */
         B     RESTART1                                            0233
*     END;                                                         0234
*                                                                  0235
*/********************************************************************/
*/* SCAN COMMAND FOR EP OR NCP OPERAND                               */
*/*          'EP'  - INDICATES SWITCH TO EP MODE                     */
*/*          'NCP' - INDICATES SWITCH TO NCP MODE                    */
*/********************************************************************/
*                                                                  0235
*   IF RLEN=0 THEN                  /* ANOTHER OPERAND               */
@RF00230 LTR   RLEN,RLEN                                           0235
         BZ    @RT00235                                            0235
*     GOTO CMDINV;                  /* NO, COMMAND INVALID           */
*   CALL SCAN;                      /* SCAN THE OPERAND              */
         BAL   @14,SCAN                                            0237
*   IF RBYSCN>AVTHA3×               /* OPERAND LENGTH > 3 OR         */
*       RBYSCN<AVTHA2×              /* OPERAND LENGTH . 2 OR         */
*       LASTCHAR=','×               /* LAST CHAR A COMMA OR          */
*       RLEN^=0 THEN                /* ANOTHER OPERAND               */
         CH    RBYSCN,AVTHA3(,IEDQAPTR)                            0238
         BH    @RT00238                                            0238
         LH    @15,AVTHA2(,IEDQAPTR)                               0238
         CR    RBYSCN,@15                                          0238
         BL    @RT00238                                            0238
         LR    @01,RAPTR                                           0238
         BCTR  @01,0                                               0238
         CLI   LASTCHAR+1(@01),C','                                0238
         BE    @RT00238                                            0238
         LTR   RLEN,RLEN                                           0238
         BNZ   @RT00238                                            0238
*     GOTO CMDINV;                  /* YES TO ANY OF ABOVE - COMMAND
*                                      INVALID                       */
*   IF RBYSCN=AVTHA2 THEN           /* OPERAND LENGTH OF 2           */
         CR    RBYSCN,@15                                          0240
         BNE   @RF00240                                            0240
*     DO;                           /* YES, DO                       */
*       IF OPEREP='EP' THEN         /* OPERAND = EP                  */
         CLC   OPEREP(2,RRPTR),@CC01249                            0242
         BNE   @RF00242                                            0242
*         OCMODNME=EPMODE;          /* INDICATE EP MODE              */
         MVC   OCMODNME(8,ROPCE),EPMODE                            0243
*       ELSE                        /*                               */
*         GOTO CMDINV;              /* NO, COMMAND INVALID           */
*     END;                          /*                               */
*   ELSE                            /* OPERAND LENGTH OF 3           */
*     IF OPERNCP='NCP' THEN         /* OPERAND = NCP                 */
         B     @RC00240                                            0246
@RF00240 CLC   OPERNCP(3,RRPTR),@CC01250                           0246
         BNE   @RF00246                                            0246
*       DO;                         /* YES, DO                       */
*         OCSWITCH='28'X;           /* INDICATE NCP SWITCH           */
         MVI   OCSWITCH(ROPCE),X'28'                               0248
*         OCMODNME=NCPMODE;         /* INDICATE NCP MODE             */
         MVC   OCMODNME(8,ROPCE),NCPMODE                           0249
*       END;                                                       0250
*     ELSE                                                         0251
*       GOTO CMDINV;                /* NO, COMMAND INVALID           */
*                                                                  0252
*/********************************************************************/
*/* CHECK LINE ENTRY TO DETERMINE THAT IT IS VALID LINE ENTRY        */
*/* ATTACHED TO A 3705.                                              */
*/********************************************************************/
*                                                                  0252
*   IEDQTPTR=OCELEM;                /* SET LINE ENTRY BASE           */
@RC00240 L     IEDQTPTR,OCELEM(,ROPCE)                             0252
*   IF TRMSTOTE='1'B THEN           /* TOTE CONTROLLING RESOURCE     */
         LR    @01,IEDQTPTR                                        0253
         AL    @01,@CF01288                                        0253
         TM    TRMSTOTE-3(@01),B'00000001'                         0253
         BNO   @RF00253                                            0253
*     DO;                           /* YES                           */
*       RMSGNUM=49;                 /* SET 'TOTE CONTROLLING' MSG    */
         LA    RMSGNUM,49                                          0255
*       GOTO ERREXIT;               /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0256
*     END;                                                         0257
*   IF TRMPREF='0'B×TRMTYPE^=TRMNSDLC THEN/* ENTRY NOT A 3705 NON-SNA
*                                      LINE                  @Y17XARX*/
@RF00253 TM    TRMPREF(IEDQTPTR),B'00010000'                       0258
         BZ    @RT00258                                            0258
         LR    @01,IEDQTPTR                                        0258
         AL    @01,@CF00992                                        0258
         CLI   TRMTYPE-11(@01),X'20'                               0258
         BE    @RF00258                                            0258
@RT00258 DS    0H                                                  0259
*     DO;                           /* YES, INVALID ENTRY            */
*       RMSGNUM=443;                /* SET 'NOT A 3705 LINE' MSG     */
         LA    RMSGNUM,443                                         0260
*       GOTO ERREXIT;               /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0261
*     END;                                                         0262
*                                                                  0262
*/********************************************************************/
*/* DETERMINE THAT LINE IS INACTIVE                                  */
*/********************************************************************/
*                                                                  0263
*   IF TRMRSACT='1'B THEN           /* IS LINE ACTIVE        @Y17XARX*/
@RF00258 LR    @01,IEDQTPTR                                        0263
         AL    @01,@CF01289                                        0263
         TM    TRMRSACT-2(@01),B'10000000'                         0263
         BNO   @RF00263                                            0263
*     DO;                           /* YES, DO                       */
*       RMSGNUM=446;                /* SET 'LINE ACTIVE' MSG         */
         LA    RMSGNUM,446                                         0265
*       GOTO ERREXIT;               /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0266
*     END;                                                         0267
*   RESPECIFY                                                      0268
*     RZERO RSTD;                   /*                       @Y17XARX*/
@RF00263 DS    0H                                                  0269
*   RESPECIFY                                                      0269
*     RPARM RSTD;                   /*                       @Y17XARX*/
*   ERRFLAG='0'B;                   /* RESET ERROR FLAG      @Y17XARX*/
         NI    ERRFLAG(ROPCAVT),B'01111111'                        0270
*   RZERO=TRMSUBST;                 /* GET TTCIN OF FIRST TERM     0271
*                                                            @Y17XARX*/
         LR    @15,IEDQTPTR                                        0271
         BCTR  @15,0                                               0271
         BCTR  @15,0                                               0271
         LH    @15,TRMSUBST-12(,@15)                               0271
         N     @15,@CF01291                                        0271
         LR    RZERO,@15                                           0271
*   IF TRMSUBST^=0 THEN             /* HEIRAIRCHY PRESENT?   @Y17XARR*/
         LTR   @15,@15                                             0272
         BZ    @RF00272                                            0272
*     DO;                           /* YES                   @Y17XARR*/
*       DO UNTIL(RZERO=OCTRMTBL×ERRFLAG='1'B);/* FOR ALL TERMS OR  0274
*                                      UNTIL ERROR           @Y17XARX*/
@DL00274 DS    0H                                                  0275
*         RWORKB=RZERO;             /* SAVE TTCIN OF TERM    @Y17XARX*/
         LR    RWORKB,RZERO                                        0275
*         RPARM=RZERO;              /* GET TTE FOR TTCIN     @Y17XARX*/
         LR    RPARM,RZERO                                         0276
*         CALL TNTCODE;             /*                       @Y17XARX*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0277
         BALR  @14,@15                                             0277
*         RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE PREFIX
*                                                            @YM06484*/
         SL    RPARM,@CF01287                                      0278
*         IF RPARM->TRMSTOTE='1'B THEN/* IF IN TOTE MODE     @Y17XARX*/
         TM    TRMSTOTE(RPARM),B'00000001'                         0279
         BNO   @RF00279                                            0279
*           ERRFLAG='1'B;           /* SET ERROR             @Y17XARX*/
         OI    ERRFLAG(ROPCAVT),B'10000000'                        0280
*         IF RPARM->TRMSUBST^=0&ERRFLAG='0'B THEN/* IF SUBSTRUCT   0281
*                                      EXISTS AND NO ERROR   @Y17XARX*/
@RF00279 LH    @15,TRMSUBST(,RPARM)                                0281
         N     @15,@CF01291                                        0281
         LTR   @15,@15                                             0281
         BZ    @RF00281                                            0281
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0281
         BNZ   @RF00281                                            0281
*           DO;                     /*                       @Y17XARX*/
*             RWORKA=RPARM;         /* SAVE GPCU TTE PTR     @Y17XARX*/
         LR    RWORKA,RPARM                                        0283
*             RZERO=RWORKA->TRMSUBST;/* GET FIRST TTCIN      @Y17XARX*/
         LH    RZERO,TRMSUBST(,RWORKA)                             0284
         N     RZERO,@CF01291                                      0284
*             DO UNTIL(RZERO=RWORKB×ERRFLAG='1'B);/* FOR ALL TERM OR
*                                      UNTIL ERROR           @Y17XARX*/
@DL00285 DS    0H                                                  0286
*               RPARM=RZERO;        /* GET TTE FOR TTCIN     @Y17XARX*/
         LR    RPARM,RZERO                                         0286
*               CALL TNTCODE;       /*                       @Y17XARX*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0287
         BALR  @14,@15                                             0287
*               RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE 0288
*                                      PREFIX                @YM06484*/
         SL    RPARM,@CF01287                                      0288
*               IF RPARM->TRMSTOTE='1'B THEN/* IF TOTE MODE  @Y17XARX*/
         TM    TRMSTOTE(RPARM),B'00000001'                         0289
         BNO   @RF00289                                            0289
*                 ERRFLAG='1'B;     /* YES - GIVE ERROR      @Y17XARX*/
         OI    ERRFLAG(ROPCAVT),B'10000000'                        0290
*               RZERO=RPARM->TRMCOHRT;/* GET NEXT TTCIN      @Y17XARX*/
@RF00289 LH    RZERO,TRMCOHRT(,RPARM)                              0291
         N     RZERO,@CF01291                                      0291
*             END;                  /*                       @Y17XARX*/
@DE00285 CR    RZERO,RWORKB                                        0292
         BE    @DC00285                                            0292
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0292
         BNO   @DL00285                                            0292
@DC00285 DS    0H                                                  0293
*             RPARM=RWORKA;         /* RESTORE GPCU TTE PTR  @Y17XARX*/
         LR    RPARM,RWORKA                                        0293
*           END;                    /*                       @Y17XARX*/
*         RZERO=RPARM->TRMCOHRT;    /* GET NEXT TTCIN        @Y17XARX*/
@RF00281 LH    RZERO,TRMCOHRT(,RPARM)                              0295
         N     RZERO,@CF01291                                      0295
*       END;                        /*                       @Y17XARX*/
@DE00274 LH    @15,OCTRMTBL(,ROPCE)                                0296
         N     @15,@CF01291                                        0296
         CR    RZERO,@15                                           0296
         BE    @DC00274                                            0296
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0296
         BNO   @DL00274                                            0296
@DC00274 DS    0H                                                  0297
*       RESPECIFY                                                  0297
*         RZERO UNRSTD;             /*                       @Y17XARX*/
*       RESPECIFY                                                  0298
*         RPARM UNRSTD;             /*                       @Y17XARX*/
*       IF ERRFLAG='1'B THEN        /* IF TOTE MODE ERROR    @Y17XARX*/
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0299
         BNO   @RF00299                                            0299
*         DO;                       /* YES                           */
*           RMSGNUM=49;             /* SET 'TOTE CONTROLLING' MSG    */
         LA    RMSGNUM,49                                          0301
*           ERRFLAG='0'B;           /* RESET ERROR FLAG      @Y17XARX*/
         NI    ERRFLAG(ROPCAVT),B'01111111'                        0302
*           GOTO ERREXIT;           /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0303
*         END;                                                     0304
*     END;                                                         0305
*   ELSE                                                           0306
*     ;                             /* NO SUBST              @Y17XARR*/
@RF00272 DS    0H                                                  0307
*                                                                  0307
*/********************************************************************/
*/* GET A BUFFER UNIT INTO WHICH A BTU WILL BE BUILT                 */
*/********************************************************************/
*                                                                  0307
*   RPARM=1;                        /* GET ONE BUFFER UNIT           */
@RC00272 LA    RPARM,1                                             0307
*   RBRANCH=OPCGETBF;               /* ADDR OF BUFFER ALLOCATION     */
         L     RBRANCH,OPCGETBF(,ROPCAVT)                          0308
*   GEN( BALR RRETURN,RBRANCH );    /* CALL ALLOCATION ROUTINE       */
          BALR RRETURN,RBRANCH
*   OCUNIT=RPARM;                   /* SAVE ADDR OF UNIT             */
         ST    RPARM,OCUNIT(,ROPCE)                                0310
*/********************************************************************/
*/* BUILD THE PRU                                            @Y17XARX*/
*/********************************************************************/
*                                                                  0311
*   PRURHTH=FID1PRUH;               /* SET UP FID1 RH/TH     @Y17XARX*/
         L     @15,OCUNIT(,ROPCE)                                  0311
         LR    @14,@15                                             0311
         AL    @14,@CF01293                                        0311
         MVC   PRURHTH(4,@14),FID1PRUH                             0311
*   PRUTIC=INVALTIC;                /* SET INVALID TIC       @Y17XARX*/
         MVC   PRUTIC(4,@15),INVALTIC                              0312
*   PRUDATCT=LENRU;                 /* SET RU LENGTH         @Y17XARX*/
         MVC   PRUDATCT(2,@15),@CH00066                            0313
*   RPARM=IEDQTPTR;                 /* SET TTE PTR           @Y17XARX*/
         LR    RPARM,IEDQTPTR                                      0314
*   CALL COHORTLK;                  /* GET NEXT TTE          @Y17XARX*/
         L     @15,OPCHORT(,ROPCAVT)                               0315
         BALR  @14,@15                                             0315
*   PRUTTCIN=RZERO;                 /* SAVE TTCIN AS DEST    @Y17XARX*/
         L     @01,OCUNIT(,ROPCE)                                  0316
         STH   RZERO,PRUTTCIN(,@01)                                0316
*   IF OCSWITCH='27'X THEN          /* REQUEST FOR EP MODE           */
         CLI   OCSWITCH(ROPCE),X'27'                               0317
         BNE   @RF00317                                            0317
*     PRUDATA(1)='52'X;             /* SET EP REQUEST        @Y17XARX*/
         MVI   PRUDATA(@01),X'52'                                  0318
*   ELSE                            /* NO - PRIMARY REQUEST          */
*     PRUDATA(1)='51'X;             /* SET NCP REQUEST       @Y17XARX*/
         B     @RC00317                                            0319
@RF00317 L     @01,OCUNIT(,ROPCE)                                  0319
         MVI   PRUDATA(@01),X'51'                                  0319
*   OCCKDAT1=PRUDATA(1);            /* SAVE FOR CHKPT        @Y17XARX*/
@RC00317 L     @15,OCUNIT(,ROPCE)                                  0320
         MVC   OCCKDAT1(1,ROPCE),PRUDATA(@15)                      0320
*   PRUDATA(2:3)=OCRSID;            /* SET DESTINATION RSID  @Y17XARX*/
         MVC   PRUDATA+1(2,@15),OCRSID(ROPCE)                      0321
*/********************************************************************/
*/* SET UP TO CALL BTU DISPATCHER                                    */
*/********************************************************************/
*                                                                  0322
*   OCWTG='N0';                     /* INDICATE THIS MODULE TO     0322
*                                      PROCESS RETURN BTU            */
         MVC   OCWTG(2,ROPCE),@CC01257                             0322
*   OCACTREQ='0'B;                  /* RQST NCP CHECKS       @Y17XARX*/
         NI    OCACTREQ(ROPCE),B'11110111'                         0323
*   OPCLDNME(4:5)='02';             /* SET TO XCTL TO BTU DISPATCHER */
         MVC   OPCLDNME+3(2,ROPCAVT),@CC01258                      0324
*   GOTO XCTL;                      /* LINK TO NEXT MODULE           */
         B     XCTL                                                0325
*                                                                  0326
*/********************************************************************/
*/* SCAN ROUTINES                                                    */
*/********************************************************************/
*                                                                  0326
*SCAN:                                                             0326
*   RRPTR=RAPTR;                    /* SAVE POINTER TO 1ST CHAR      */
SCAN     LR    RRPTR,RAPTR                                         0326
*   RBYSCN=0;                       /* INITIALIZE BYTES SCANNED      */
         SLR   RBYSCN,RBYSCN                                       0327
*SCANLOOP:                                                         0328
*   IF RLEN^=0 THEN                 /* END OF SCAN ?                 */
SCANLOOP LTR   RLEN,RLEN                                           0328
         BZ    @RF00328                                            0328
*     DO;                           /* NO, CONTINUE TO SCAN          */
*       IF SCANBYTE=',' THEN        /* SCAN BYTE A COMMA ?           */
         CLI   SCANBYTE(RAPTR),C','                                0330
         BNE   @RF00330                                            0330
*         DO;                       /* YES                           */
*           RLEN=RLEN-1;            /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0332
*           RAPTR=RAPTR+1;          /* INCREMENT PAST COMMA          */
         AL    RAPTR,@CF00062                                      0333
*         END;                                                     0334
*       ELSE                        /* NO                            */
*         IF SCANBYTE>='A' THEN     /* VALID CHARACTER ?             */
         B     @RC00330                                            0335
@RF00330 CLI   SCANBYTE(RAPTR),C'A'                                0335
         BL    @RF00335                                            0335
*           DO;                     /* YES                           */
*             RBYSCN=RBYSCN+1;      /* INCREMENT BYTES SCANNED       */
         LA    @15,1                                               0337
         ALR   RBYSCN,@15                                          0337
*             RAPTR=RAPTR+1;        /* INCREMENT TO NEXT BYTE        */
         ALR   RAPTR,@15                                           0338
*             RLEN=RLEN-1;          /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0339
*             GOTO SCANLOOP;        /* CONTINUE SCAN                 */
         B     SCANLOOP                                            0340
*           END;                                                   0341
*         ELSE                      /* NO                            */
*           GOTO CMDINV;            /* COMMAND INVALID               */
*     END;                                                         0343
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 DS    0H                                                  0344
@EF00001 DS    0H                                                  0344
@ER00001 BR    @14                                                 0344
*SCAN1:                                                            0345
*   RRPTR=RAPTR;                    /* SAVE POINTER TO 1ST CHAR      */
SCAN1    LR    RRPTR,RAPTR                                         0345
*   RBYSCN=0;                       /* INITIALIZE BYTES SCANNED      */
         SLR   RBYSCN,RBYSCN                                       0346
*NUMERIC:                                                          0347
*   IF RLEN^=0 THEN                 /* ANY DIGITS LEFT ?             */
NUMERIC  LTR   RLEN,RLEN                                           0347
         BZ    @RF00347                                            0347
*     DO;                           /* YES, CONTINUE TO SCAN         */
*       IF SCANBYTE=',' THEN        /* SCAN BYTE A COMMA ?           */
         CLI   SCANBYTE(RAPTR),C','                                0349
         BNE   @RF00349                                            0349
*         DO;                       /* YES                           */
*           RLEN=RLEN-1;            /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0351
*           RAPTR=RAPTR+1;          /* INCREMENT PAST COMMA          */
         AL    RAPTR,@CF00062                                      0352
*         END;                                                     0353
*       ELSE                        /* NO                            */
*         IF SCANBYTE>='0' THEN     /* DIGIT A VALID NUMERIC ?       */
         B     @RC00349                                            0354
@RF00349 CLI   SCANBYTE(RAPTR),C'0'                                0354
         BL    @RF00354                                            0354
*           DO;                     /* YES                           */
*             RBYSCN=RBYSCN+1;      /* INCREMENT BYTES SCANNED       */
         LA    @15,1                                               0356
         ALR   RBYSCN,@15                                          0356
*             RAPTR=RAPTR+1;        /* INCREMENT TO NEXT DIGIT       */
         ALR   RAPTR,@15                                           0357
*             RLEN=RLEN-1;          /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0358
*             GOTO NUMERIC;         /* CHECK NEXT DIGIT              */
         B     NUMERIC                                             0359
*           END;                                                   0360
*         ELSE                      /* NO                            */
*           GOTO CMDINV;            /* COMMAND INVALID               */
*     END;                                                         0362
*   RETURN;                         /* RETURN TO CALLER              */
         B     @EL00001                                            0363
*                                                                  0364
*/********************************************************************/
*/* PROCESS THE RESPONSE BTU. THE FOLLOWING RESPONSES ARE POSSIBLE:  */
*/*                                                                  */
*/*                                                                  */
*/*      ERROR :    X'0815' - LINE ALREADY IN REQUESTED MODE @Y17XARX*/
*/*                                                                  */
*/*                 X'080C' - UNABLE TO PERFORM LINE SWITCH  @Y17XARX*/
*/*                 X'0809' - COMMAND ACTIVE ON LINE         @Y17XARX*/
*/********************************************************************/
*                                                                  0364
*PROCBTU:                                                          0364
*   IEDQTPTR=OCELEM;                /* GET TERM ENTRY ADDR FROM THE
*                                      OPCE                  @Y17XARX*/
PROCBTU  L     IEDQTPTR,OCELEM(,ROPCE)                             0364
*   IF PRURHSDI='1'B THEN           /* NORMAL RESPONSE?      @Y17XARX*/
         L     @01,OCUNIT(,ROPCE)                                  0365
         AL    @01,@CF01293                                        0365
         TM    PRURHSDI(@01),B'00000100'                           0365
         BO    @RT00365                                            0365
*     GOTO NOTNORM;                 /* NO - CHECK OTHER RESPONSES    */
*RESTART1:                                                         0367
*   RMSGNUM=449;                    /* SET GOOD MSG NUMBER           */
RESTART1 LA    RMSGNUM,449                                         0367
*   IF OCSWITCH='27'X THEN          /* REQUEST FOR EP                */
         CLI   OCSWITCH(ROPCE),X'27'                               0368
         BNE   @RF00368                                            0368
*     TRMEPMOD='1'B;                /* YES, INDICATE EP MODE         */
         LR    @01,IEDQTPTR                                        0369
         AL    @01,@CF01295                                        0369
         OI    TRMEPMOD-1(@01),B'10000000'                         0369
*   ELSE                            /* NO                            */
*     TRMEPMOD='0'B;                /* INDICATE NCP MODE             */
         B     @RC00368                                            0370
@RF00368 LR    @01,IEDQTPTR                                        0370
         AL    @01,@CF01295                                        0370
         NI    TRMEPMOD-1(@01),B'01111111'                         0370
*   OCWTG='M3';                     /* ID OF MSG MODULE              */
@RC00368 MVC   OCWTG(2,ROPCE),@CC01272                             0371
*   OCPARM=RMSGNUM;                 /* SAVE MSG NUMBER               */
         STH   RMSGNUM,OCPARM(,ROPCE)                              0372
*   OPCLDNME(4:5)='06';             /* CHECK POINT MODULE ID         */
         MVC   OPCLDNME+3(2,ROPCAVT),@CC01273                      0373
*   GOTO XCTL1;                     /* EXIT                          */
         B     XCTL1                                               0374
*NOTNORM:                                                          0375
*   IF SENSE='0809'X×SENSE='080C'X THEN/* LN SWTCH NOT PERF  @OY18001*/
NOTNORM  L     @15,OCUNIT(,ROPCE)                                  0375
         CLC   SENSE(2,@15),@CH01275                               0375
         BE    @RT00375                                            0375
         CLC   SENSE(2,@15),@CH01276                               0375
         BNE   @RF00375                                            0375
@RT00375 DS    0H                                                  0376
*     RMSGNUM=447;                  /* YES, SET ERROR MSG            */
         LA    RMSGNUM,447                                         0376
*   ELSE                                                           0377
*     IF SENSE='0815'X THEN         /* LINE ALREADY IN MODE  @Y17XARX*/
         B     @RC00375                                            0377
@RF00375 L     @01,OCUNIT(,ROPCE)                                  0377
         CLC   SENSE(2,@01),@CH01279                               0377
         BNE   @RF00377                                            0377
*       DO;                         /* YES, DO                       */
*         RMSGNUM=450;              /* SET ERROR MSG                 */
         LA    RMSGNUM,450                                         0379
*         IF OCSWITCH='27'X THEN    /* REQUEST FOR EP                */
         CLI   OCSWITCH(ROPCE),X'27'                               0380
         BNE   @RF00380                                            0380
*           TRMEPMOD='1'B;          /* YES, INDICATE EP MODE         */
         LR    @01,IEDQTPTR                                        0381
         AL    @01,@CF01295                                        0381
         OI    TRMEPMOD-1(@01),B'10000000'                         0381
*         ELSE                      /* NO                            */
*           TRMEPMOD='0'B;          /* INDICATE NCP MODE             */
         B     @RC00380                                            0382
@RF00380 LR    @01,IEDQTPTR                                        0382
         AL    @01,@CF01295                                        0382
         NI    TRMEPMOD-1(@01),B'01111111'                         0382
*       END;                                                       0383
*     ELSE                                                         0384
*       RMSGNUM=199;                /* SET ERROR MSG                 */
         B     @RC00377                                            0384
@RF00377 LA    RMSGNUM,199                                         0384
*   GOTO ERREXIT;                   /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0385
*                                                                  0386
*/********************************************************************/
*/* ERROR EXITS                                                      */
*/********************************************************************/
*                                                                  0386
*CMDINV:                                                           0386
*   RMSGNUM=18;                     /* SET COMMAND INVALID           */
CMDINV   LA    RMSGNUM,18                                          0386
*/********************************************************************/
*/* EXIT CODE                                                        */
*/********************************************************************/
*                                                                  0387
*ERREXIT:                                                          0387
*   OPCLDNME(4:5)='03';             /* SET ERROR MODULE NAME         */
ERREXIT  MVC   OPCLDNME+3(2,ROPCAVT),@CC01283                      0387
*XCTL1:                                                            0388
*XCTL:                                                             0388
*   RPARM=ROPCAVT;                  /* SET POINTER TO OP CTL AVT     */
XCTL1    DS    0H                                                  0388
XCTL     LR    RPARM,ROPCAVT                                       0388
*   GEN REFS(OPCXCTL)(XCTL SF=(E,OPCXCTL(ROPCAVT)));/* CALL NEXT   0389
*                                      MODULE                @Y17XARX*/
         XCTL SF=(E,OPCXCTL(ROPCAVT))
*   GEN;                                                           0390
MOVERLN  MVC   OPCSAVE(EQU0,ROPCAVT),EQU0(RRPTR) MOVE RLN
PACK     PACK  OPCSAVE+EQU6(EQU2,ROPCAVT),OPCSAVE(EQU0,ROPCAVT)
*                                       PACK RLN
EQU0     EQU   0                        EQUATE 0
EQU2     EQU   2                        EQUATE 2
EQU6     EQU   6                        EQUATE 6
*   END IGCN010D                                                   0391
*                                                                  0391
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0391
*       ;                                                          0391
         B     @EL00001                                            0391
@DATA    DS    0H
@CH00066 DC    H'3'
@CH01275 DC    XL2'0809'
@CH01276 DC    XL2'080C'
@CH01279 DC    XL2'0815'
         DS    0F
         DS    0F
@CF00062 DC    F'1'
@CF00053 DC    F'8'
@CF01287 DC    F'14'
@CF01239 DC    F'255'
@CF01295 DC    F'-13'
@CF01289 DC    F'-12'
@CF01288 DC    F'-11'
@CF01293 DC    F'-8'
@CF00992 DC    F'-3'
@CF01291 DC    XL4'0000FFFF'
         DS    0D
IEDPRUQP DS    A
FID1PRUH DC    XL4'2B80001D'
INVALTIC DC    XL4'08000002'
@CC01250 DC    C'NCP'
@CC01249 DC    C'EP'
@CC01257 DC    C'N0'
@CC01258 DC    C'02'
@CC01272 DC    C'M3'
@CC01273 DC    C'06'
@CC01283 DC    C'03'
BLANKS   DC    CL8'        '
EPMODE   DC    CL8'EP MODE'
NCPMODE  DC    CL8'NCP MODE'
ZAPAREA  DC    50X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
RZERO    EQU   @00
RMSGNUM  EQU   @00
RPARM    EQU   @01
ROPCAVT  EQU   @02
ROPCE    EQU   @03
IEDQAPTR EQU   @04
RWORKA   EQU   @05
RLEN     EQU   @06
RAPTR    EQU   @07
IEDQTPTR EQU   @07
RWORKB   EQU   @08
RRPTR    EQU   @08
RBYSCN   EQU   @09
RSAVE    EQU   @13
RBRANCH  EQU   @15
RRETURN  EQU   @14
SCANBYTE EQU   0
OPEREP   EQU   0
OPERNCP  EQU   0
LASTCHAR EQU   -1
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTHA2   EQU   IEDQAVTD+1022
AVTHA3   EQU   IEDQAVTD+1024
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00085 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCDCBLK EQU   IEDQOPCD+16
OPCSAVE  EQU   IEDQOPCD+56
OPCFLAG1 EQU   IEDQOPCD+146
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCHORT  EQU   IEDQOPCD+256
OPCGETBF EQU   IEDQOPCD+276
OPCSPEC  EQU   IEDQOPCD+300
OPCRSTRT EQU   OPCSPEC
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
@NM00122 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00122
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCACTREQ EQU   OCALSTAT
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OCCKDAT1 EQU   OCRSTGTM
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMSTOTE EQU   TRMBYTE1
TRMCOHRT EQU   IEDNTRM+4
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
TRMSUBST EQU   IEDNTRM+12
COHORTLK EQU   0
TNTCODE  EQU   0
DCBLOCAT EQU   0
IEDQNPTR EQU   0
TNTOFF1  EQU   0
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TRMEPMOD EQU   TRMLINK
@NM00147 EQU   OPCFLAG1
ERRFLAG  EQU   @NM00147
SENSE    EQU   PRUDATA
OCCIB    EQU   OCREQVAL
TRMOPT   EQU   IEDQTRM+20
*                                      START UNREFERENCED COMPONENTS
@NM00146 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00145 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00144 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OCICINAC EQU   OCICSW
@NM00128 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00127 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00143 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00142 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00141 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
@NM00140 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00139 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00138 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00137 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00136 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00135 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00134 EQU   PRUTIC
@NM00133 EQU   IEDPRUQD+4
@NM00132 EQU   OCLDNME+4
@NM00131 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00130 EQU   OCREQFLG
@NM00129 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00126 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00125 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00124 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00123 EQU   @NM00122+2
OCCONID  EQU   OCDEST
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00121 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00120 EQU   OCRUDEST+1
@NM00119 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
OPCBOTTM EQU   IEDQOPCD+1184
@NM00118 EQU   IEDQOPCD+1100
@NM00117 EQU   IEDQOPCD+948
@NM00116 EQU   IEDQOPCD+940
@NM00115 EQU   IEDQOPCD+380
@NM00114 EQU   OPCPWCOB+9
@NM00113 EQU   OPCPWCOB+8
@NM00112 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00111 EQU   OPCSPEC
@NM00110 EQU   OPCSPEC
@NM00109 EQU   OPCSPEC
@NM00108 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00107 EQU   OPCLDNME+5
OPCMODID EQU   OPCLDNME+3
@NM00106 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00105 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
SAVTBITN EQU   IEDNSVTD+312
@NM00104 EQU   SAVTCKQB+8
@NM00103 EQU   SAVTCKEC+1
@NM00102 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00101 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00100 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00099 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00098 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00097 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00096 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00095 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00094 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00093 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00092 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00091 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00090 EQU   IEDQAVTD+1242
@NM00089 EQU   IEDQAVTD+1241
@NM00088 EQU   IEDQAVTD+1240
@NM00087 EQU   IEDQAVTD+1237
@NM00086 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00084 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00083 EQU   IEDQAVTD+1140
@NM00082 EQU   IEDQAVTD+1137
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00073 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00072 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00071 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTGETMS EQU   IEDQAVTD+1021
@NM00068 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00067 EQU   IEDQAVTD+950
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00052 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00051 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00050 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00049 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00048 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00047 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00039 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00038 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00037 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00022 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00020 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00014 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
*                                      END UNREFERENCED COMPONENTS
@RT00210 EQU   PROCBTU
@RT00213 EQU   CMDINV
@RT00217 EQU   CMDINV
@RT00221 EQU   CMDINV
@RC00225 EQU   ERREXIT
@RT00235 EQU   CMDINV
@RT00238 EQU   CMDINV
@RF00242 EQU   CMDINV
@RF00246 EQU   CMDINV
@RF00299 EQU   @RC00272
@RF00335 EQU   CMDINV
@RF00328 EQU   @EL00001
@RC00330 EQU   @EL00001
@RF00354 EQU   CMDINV
@RF00347 EQU   @EL00001
@RC00349 EQU   @EL00001
@RT00365 EQU   NOTNORM
@RC00377 EQU   ERREXIT
@RC00375 EQU   ERREXIT
@RC00380 EQU   @RC00377
@EL01    EQU   @EL00001
@ENDDATA EQU   *
@DATEND  EQU   *
         END   IGCN010D,(C'PLS1357',0701,77215)
