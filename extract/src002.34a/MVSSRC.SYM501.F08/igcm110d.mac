         TITLE 'IGCM110D-MODIFY MESSAGE MODULE'
***********************************************************************
*                                                                     *
* MODULE NAME = IGCM110D (TCAM, OPERATOR CONTROL).             @Y17XART
*                                                              @Y17XART
* DESCRIPTIVE NAME = MODIFY FUNCTION MESSAGE MODULE.           @Y17XART
*                                                              @Y17XART
* COPYRIGHT = NONE                                             @Y17XART
*                                                                     *
* STATUS = VERSION 10.0                                        @Y17XART
*                                                                     *
* FUNCTION--THIS MODULE RECEIVES CONTROL WHENEVER A MODIFY FUNCTION   *
*   HAS SUCCESSFULLY COMPLETED TO NOTIFY THE REQUESTOR OF A SUCCESSFUL*
*   MODIFY. THIS ROUTINE RECEIVES CONTROL FROM THE OP CONTROL INCIDENT*
*   CHECKPOINT INTERFACE ROUTINE (IGC0610D) WHEN CHECKPOINT IS        *
*   REQUIRED OR FROM THE MODIFY FUNCTIONAL ROUTINE WHEN CHECKPOINT    *
*   IS NOT REQUIRED. THE MESSAGE NUMBER REQUESTED IS IN REGISTER ZERO *
*   AND THE OP CTL AVT ADDRESS IN REGISTER ONE ON ENTRY TO THIS RTN.  *
*                                                                     *
*   THE MESSAGE INDICATED BY REGISTER ZERO IS PLACED IN THE RESIDENT  *
*   OP CTL WORK AREA+4 & THE LENGTH OF THE MESSAGE IS PLACED IN LOC.  *
*   ZERO & ONE OF THE WORK AREA.                                      *
*                                                                     *
*   INFORMATION REQUIRED FOR THE MESSAGE SUCH AS LINE ADDRESSES,      *
*   STATION NAMES, PROGRAM NAMES, DATA & COUNTS ARE PLACED INTO       *
*   THE MESSAGE DIRECTLY OR INDIRECTLY FROM THE ELEMENT (OPCE).       *
*   DIRECTLY BEING DATA ALREADY IN PRINTABLE FORM. INDIRECTLY BEING   *
*   DATA THAT MUST BE CONVERTED AND DATA POINTED TO BY OFFSETS CARRIED*
*   IN THE ELEMENT.                                                   *
*                                                                     *
*   WHEN THE MESSAGE IS READY FOR OUTPUT, XCTL IS TO THE OUTPUT       *
*   WRITER (IGC0710D)                                                 *
*                                                                     *
*   MESSAGES PREPARED FOR OUTPUT BY THIS ROUTINE ARE:                 *
*        IED021I AUTO POLL STARTED FOR XXXXXXXX                       *
*        IED023I TRACE STARTED FOR LINE XXXXXXXX                      *
*        IED027I AUTO POLL STOPPED FOR XXXXXXXX                       *
*        IED029I TRACE STOPPED FOR LINE XXXXXXXX                      *
*        IED041I PRIMARY=XXXXXXXX                                     *
*        IED047I SYS INTERVAL IS XXXXX                                *
*        IED048I POLLING DELAY FOR XXXXXXXX IS XXXX                   *
*        IED050I XXXXXXXX OPTION XXXXXXXX MODIFIED                    *
*        IED058I XXXXXXXXXXXX SENSE COUNT=XX SETTING=XX               *
*        IED093I SET SYSTEM INTERVAL COMMAND ACCEPTED                 *
*        IED099I ROUTINE LOADED                                       *
*        IED100I ROUTINE DEACTIVATED                                  *
*                                                              @Y17XART
*    RESTRICTIONS = NONE                                       @Y17XART
*                                                              @Y17XART
*    REGISTER CONVENTIONS = STANDARD OPERATOR CONTROL          @Y17XART
*                                                              @Y17XART
*    PATCH LABEL = ZAPAREA                                     @Y17XART
*                                                              @Y17XART
* MODULE TYPE = PROCEDURE                                      @Y17XART
*                                                              @Y17XART
*    PROCESSOR = ASSEMBLER                                     @Y17XART
*                                                              @Y17XART
*    MODULE SIZE = THE MAXIMUM SIZE ALLOWED FOR THIS MODULE    @Y17XART
*    IS 2048 (DECIMAL) BYTES.                                  @Y17XART
*                                                                     *
* ENTRY POINTS -                                                      *
*         IGCM110D IS THE ONLY ENTRY POINT FOR THIS MODULE            *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                    @Y17XART
*                                                              @Y17XART
*    LINKAGE = VIA XCTL                                        @Y17XART
*                                                              @Y17XART
* INPUT -                                                             *
*    REGISTER 1 CONTAINS A POINTER TO THE OPERATOR CONTROL AVT AND    *
*    REGISTER 0 CONTAINS THE MESSAGE NUMBER                           *
*                                                                     *
* OUTPUT--MESSAGE IN OPERATOR CONTROL RESIDENT WORK AREA.             *
*        OPERATOR CONTROL AVT ADDRESS IN REGISTER 1.                  *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         SVC 7(XCTL)                                                 *
*   IEDQCA'S SUBROUTINES                                              *
*        TRMOFLOC--VALIDITY CHECKS TERMINAL NAME PASSED TO IT. RETURNS*
*                  ADDRESS OF TERMINAL ENTRY IF VALID. IF NOT VALID   *
*                  RETURNS PLUS 4 OF RETURN ADDRESS IN REGISTER 14.   *
*                                                                     *
*        DCBLOCAT--VALIDITY CHECKS HARDWARE LINE ADDRESSES, GROUPNAMES*
*                  AND RELATIVE LINE NUMBERS. ALSO INSURES LINE DCBS  *
*                  ARE OPEN, RLN IS NOT MORE THAN NUMBER OF EXTENTS,  *
*                  AND LINE WAS NOT OPENED DUMMY. FOR ANY OF THESE    *
*                  ERRORS RETURNS PLUS 4 OF RETURN ADDRESS IN R14.    *
*                             GOOD RETURN- R0= UCB ADDRESS            *
*                                          R1= DCB ADDRESS            *
*                                                                     *
* EXITS,NORMAL--XCTL (SVC 7) TO OUTPUT MESSAGE WRITER (IGC0710D)      *
*                    IF MESSAGE FOUND IN THIS MODULE         @YM06498 *
*             --XCTL (SVC 7) TO NEXT MESSAGE MODULE   (IGC0910D)      *
*                    IF MESSAGE NOT FOUND IN THIS MODULE     @YM06498 *
*                                                                     *
* EXITS,ERROR-- NONE                                                  *
*                                                                     *
* TABLES/WORK AREAS - OPERATOR CONTROL AVT, TCAM AVT, OPCE, OPERATOR  *
*                    CONTROL RESIDENT WORK AREA.                      *
*                                                                     *
* ATTRIBUTES - SUPERVISOR MODE, DISABLED, TRANSIENT(TYPE 4 SVC), NON- *
*             REENTRANT, SERIALLY REUSABLE, REFRESHABLE.              *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THAT USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED SO  *
*    THAT REDEFINITION OF CHARACTER CONSTANTS, BY REASSEMBLY, WILL    *
*    RESULT IN A CORRECT MODULE FOR THE NEW DEFINITION.               *
*                                                                     *
* NOTES -                                                             *
*    COMMUNICATIONS BETWEEN THE VARIOUS MODULES/TRANSIENTS IS         *
*    PRIMARILY THROUGH THE OPERATOR CONTROL ADDRESS VECTOR TABLE (AVT)*
*                                                              @Y17XART
* CHANGE ACTIVITY =                                            @Y17XART
* A000000-999999                                                 S99240
* A274000,324000,406000,522000,576000,674000,678000            @OY12649
* A474000,679000,410000,474800                                 @Y17XACT
* C412000,438000,386000,388000,390000                          @Y17XACT
* D002000,012000,003000,003500                                 @Y17XACT
*                                                                     *
***********************************************************************
         EJECT
IGCM110D CSECT
         SPACE
RZERO    EQU   0                        PARM REG 0
RPARM    EQU   1                        PARM REG 1
ROPCAVT  EQU   2                        OP CONTROL AVT POINTER
ROPCE    EQU   3                        CURRENT ELEMENT ADDRESS
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORKA   EQU   5                        WORKAREA ADDRESS
RMSGPT   EQU   6                        POINTER TO ERROR MESSAGE
RMSGLEN  EQU   7                        LENGTH OF CURRENT ERROR MESSAG)
RWORK1   EQU   8                        WORK REGISTER
RTNT     EQU   9                        TERM NAME TABLE BASE
RWORK    EQU   10                       WORK REG
RMSGNO   EQU   11                       NUMBER OF ERROR MESSAGE
RBASE    EQU   12                       MODULE BASE
RSAVE    EQU   13                       SAVE AREA POINTER      @Y17XACT
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
         SPACE
         SPACE
ZERO     EQU   0                        ZERO VALUE
LENOFF   EQU   1                        OFFSET IN TABLE TO MSG LENGTH
NAMELEN  EQU   2                        LENGTH OF NAME CHANGE
ADDROFF  EQU   2                        OFFSET IN TABLE TO MSG ADDR.
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
VARINAME EQU   3                        OFFSET TO CHANGE XCTL NAME
MSGLOC   EQU   4                        OFFSET OF MSG IN WORK AREA
ENTLEN   EQU   4                        LENGTH OF MSG TABLE ENTRY
FIVE     EQU   5                        VALUE FIVE
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
TWELVE   EQU   12                       VALUE TWELVE
TWENTY   EQU   20                       VALUE TWENTY
TWENTY1  EQU   21                       VALUE TWENTY ONE
TWENTY8  EQU   28                       VALUE TWENTY EIGHT
THIRTY   EQU   30                       VALUE THIRTY
THIRTY5  EQU   35                       VALUE THIRTY FIVE
THIRTY7  EQU   37                       VALUE THIRTY SEVEN
FORTY2   EQU   42                       VALUE FORTY TWO
FORTY3   EQU   43                       VALUE FORTY THREE
FORTY4   EQU   44                       VALUE FORTY FOUR
FORTY8   EQU   48                       VALUE FORTY EIGHT
COMMA    EQU   C','                     COMMA DELIMETER
LINE     EQU   X'0D'                    LINE OPERAND
XFO      EQU   X'F0'                    HEX 'F0'
OFFSET41 EQU   20                       MESSAGE OFFSET OF 20
ENDTABLE EQU   X'FF'                    END OF TBL INDICATOR
DISPLAY  EQU   X'68'                    DISPLAY OPERATION CODE @OY12649
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IEDQTNTD,RTNT            TERM NAME ADDRESSABILITY
         SPACE
         BALR  RBASE,0                  SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
A        EQU   *
IGCM110D IEDHJN SKIPID
         LR    ROPCAVT,RPARM            SET UP AVT ADDRESSING
         LR    RMSGNO,RZERO             PICK UP PASSED MESSAGE NUMBER
         L     RAVT,OPCAVTPT            TCAM AVT ADDRESS
         L     ROPCE,OPCCOPCE           GET CURRENT ELEMENT POINTER
         CLI   OCWTG,ZERO               CALLED FROM CHECKPOINT
         BE    NOTCKPT                  NO, BYAESS PARM PICKUP
         SR    RMSGNO,RMSGNO            CLEAR REGISTER
         LH    RMSGNO,OCPARM            INSERT MESSAGE CODE
NOTCKPT  EQU   *
         CH    RMSGNO,TWO56             GREATER THAN 256       @OY12649
         BNH   NOCONVER                 NO                     @OY12649
         SH    RMSGNO,TWO56             CONVERT TO BE COMPARED @OY12649
NOCONVER EQU   *                                               @OY12649
         L     RWORKA,OPCWORK           GET WORKAREA POINTER FROM AVT
         LA    RMSGPT,MSGTAB            PICK UP MESSAGE TABLE ADDRESS
         LA    RWORK1,PRBRTBL           PICK UP BR TBL ADDR.
         SPACE
LOCATMSG EQU   *
         CLI   ZERO(RMSGPT),ENDTABLE    CHECK FOR END OF TABLE
         BE    NOMSG                    NO MESSAGE
         EX    RMSGNO,COMPMSG           CHECK FOR CORRECT MESSAGE FOUND
         BE    PROMSG                   EQUAL, PROCESS MESSAGE
         LA    RWORK1,ENTLEN(RWORK1)    BUMP TO NEXT ENTRY
         LA    RMSGPT,ENTLEN(RMSGPT)    POINT TO NEXT TABLE POSITION
         B     LOCATMSG                 CHECK NEXT POSITION
         SPACE
COMPMSG  CLI   ZERO(RMSGPT),ZERO        EXECUTED COMPARE FOR NUMBERS
         SPACE
PROMSG   EQU   *
         SR    RMSGLEN,RMSGLEN          CLEAR FOR MSG LENGTH INSERT
         IC    RMSGLEN,LENOFF(RMSGPT)   GET MESSAGE LENGTH
         LH    RMSGPT,ADDROFF(RMSGPT)   GET OFFSET OF MESSAGE
         AR    RMSGPT,RBASE             ADD BASE
         STH   RMSGLEN,ZERO(RWORKA)     MESSAGE LENGTH TO WORK AREA
         BCTR  RMSGLEN,RZERO            DECREMENT FOR MOVE
         EX    RMSGLEN,MOVEMSG          MESSAGE TO WORK AREA
         BR    RWORK1                   BRANCH TO BRANCH TABLE
         SPACE
MOVEMSG  MVC   MSGLOC(ZERO,RWORKA),ZERO(RMSGPT) MOVE MSG TO WORK AREA
         SPACE
* SUCCESSFUL MESSAGE BRANCH TABLE
PRBRTBL  EQU   *
         B     PR21                     BRANCH TO PROCESS IED021I
         B     PR23                     BRCH T PROCESS IED023I @Y17XACT
         B     PR27                     BRCH T PROCESS IED027I @Y17XACT
         B     PR29                     BRCH T PROCESS IED029I @Y17XACT
         B     PR41                     BRANCH TO PROCESS IED041I
         B     PR47                     BRANCH TO PROCESS IED047I
         B     PR48                     BRANCH TO PROCESS IED048I
         B     PR50                     BRANCH TO PROCESS IED050I
         B     PR58                     BRANCH TO PROCESS IED058I
         B     PR100                    BRANCH TO PROCESS IED093I
         B     PR100                    BRANCH TO PROCESS IED099I
         B     WRTMSG                   BRANCH TO WRITE MESSAGE
         B     PR508                    BRANCH TO DO IED508I   @OY12649
         SPACE
PR21     EQU   *
PR23     EQU   *                                               @Y17XACT
PR27     EQU   *                                               @Y17XACT
PR29     EQU   *                                               @Y17XACT
         MVC   THIRTY5(EIGHT,RWORKA),OCBACKUP MVE LINE NUM OR  @Y17XACT
*                                       DDNAME                 @Y17XACT
         TM    OCFLAG,OCLINE            LINE NUMBER SPECIFIED?
         BO    WRTMSG                   YES,OUTPUT MESSAGE
         MVI   FORTY3(RWORKA),COMMA     SET COMMA
         SR    RWORK,RWORK              CLEAR REG
         IC    RWORK,OCRLN              PICK UP RLN
         CVD   RWORK,OPCDOUBL           CONVERT RLN
         UNPK  OPCDOUBL(EIGHT),OPCDOUBL(EIGHT) UNPACK RLN
         OI    OPCDOUBL+SEVEN,XFO       CLEAR SIGN
         MVC   FORTY4(THREE,RWORKA),OPCDOUBL+FIVE MVE TO MSG
         B     WRTMSG                   OUTPUT MESSAGE
         SPACE
PR41     EQU   *
         MVC   OFFSET41(EIGHT,RWORKA),OCBACKUP MOVE STATNME OR @Y17XACT
*                                              SYSCON          @Y17XACT
         B     WRTMSG                   BRANCH TO WRITE MESSAGE
         SPACE
PR47     EQU   *
         LA    RWORK1,THIRTY(RWORKA)    LOAD MESSAGE OFFSET
MINT     EQU   *
         LH    RWORK,OCBACKUP           GET LENGTH OF INTERVAL
         BCTR  RWORK,RZERO              DECREMENT FOR EXECUTE
         EX    RWORK,MVEINTVL           MOVE INTERVAL TO MESSAGE
         B     WRTMSG                   BR TO WRT MESSAGE
         SPACE
MVEINTVL MVC   ZERO(ZERO,RWORK1),OCBACKUP+TWO
         SPACE
PR48     EQU   *
         MVC   THIRTY(EIGHT,RWORKA),OCMODNME MOVE STATNME TO MSG
         LA    RWORK1,FORTY2(RWORKA)    SET PTR FOR MOVE INTERVAL TO M
         CLI   OCOPTCDE,DISPLAY         DISPLAY                @OY12649
         BNE   MINT                     BR TO MOVE INTERVAL    @OY12649
         MVC   THIRTY(EIGHT,RWORKA),OCBACKUP MOVE STATNAME     @OY12649
         MVC   ZERO(THREE,RWORK1),OCMODNME+FIVE MOVE INTERVAL  @OY12649
         B     WRTMSG                   WRITE MESSAGE OUT      @OY12649
         SPACE
PR50     EQU   *
         LH    RPARM,OCTRMTBL           GET TTCIN              @Y17XACT
         LA    RSAVE,OPCSAVE            GET SAVE AREA ADDR     @Y17XACT
         L     RBRNCH,OPCTNTEA          GET CONV RLN ADDR      @Y17XACT
         BALR  RRET,RBRNCH              CONV TTCIN TO TNT ADDR @Y17XACT
         SR    RSAVE,RSAVE              CLEAR SAVE AREA ADDR   @Y17XACT
         L     RTNT,AVTRNMPT                                   @Y17XACT
         IC    RSAVE,TNTENLEN-IEDQTNTD(RTNT)  GET LENTH OF     @Y17XACT
*                                       TNT NAME               @Y17XACT
         XC    OPCDOUBL,OPCDOUBL        CLEAR FIELD            @Y17XACT
         BCTR  RSAVE,0                  DECREMENT FOR EXECUT   @Y17XACT
         EX    RSAVE,MVSTATNM           MVE NME TO OPCDOUBL    @Y17XACT
         MVC   TWELVE(EIGHT,RWORKA),OPCDOUBL MOVE STNAME TO MESSAGE
         MVC   TWENTY8(EIGHT,RWORKA),OCBACKUP MVE OPFLDNME
         B     WRTMSG                   OUTPUT MESSAGE
         SPACE
PR58     EQU   *
         MVC   THIRTY7(TWO,RWORKA),OCMODNME+TWO MOVE COUNT INTO MSG
         MVC   FORTY8(TWO,RWORKA),OCMODNME MOVE SENSE SETTING
         CLI   OCSWITCH,OCX0D           WAS LINE SPECIFIED
         BE    LINEPROC                 YES,GO GET LINE NUM
         MVC   TWELVE(EIGHT,RWORKA),OCBACKUP NO,MOVE STATNME TO MSG
         B     WRTMSG                   GO OUTPUT MESSAGE
LINEPROC EQU   *
         MVC   TWELVE(EIGHT,RWORKA),OCBACKUP MVE LINE # OR DDNAME
         TM    OCFLAG,OCLINE            LINE NUMBER SPECIFIED
         BO    WRTMSG                   YES-GO OUTPUT MSG
         MVI   TWENTY(RWORKA),COMMA     NO,SET UP FOR DDNAME RLN
         SR    RWORK,RWORK              CLEAR REG
         IC    RWORK,OCRLN              PICK UP RLN
         CVD   RWORK,OPCDOUBL           CONVERT RLN
         UNPK  OPCDOUBL(EIGHT),OPCDOUBL(EIGHT) UNPACK RLN
         OI    OPCDOUBL+SEVEN,XFO       REMOVE SIGN
         MVC   TWENTY1(THREE,RWORKA),OPCDOUBL+FIVE EBCDIC RLN TO MSG
         B     WRTMSG                   GO OUTPUT MESSAGE
         SPACE
PR508    EQU   *                                               @OY12649
         MVC   THIRTY(EIGHT,RWORKA),OCBACKUP MOVE TERMNAME     @OY12649
         B     WRTMSG                   GO OUTPUT MESSAGE      @OY12649
PR100    EQU   *                        PROCESS IED100I
         B     WRTMSG                   GO OUTPUT MSG          @YM06947
NOMSG    EQU   *
         LH    RZERO,OCPARM             INSERT MESSAGE NUMBER  @YM06498
         MVC   OPCLDNME+VARINAME(NAMELEN),NMSG   SET TO XCTL   @YM06498
         B     NEXTMOD                           TO IGCM910D   @YM06498
WRTMSG   EQU   *
         MVC   OPCLDNME+VARINAME(NAMELEN),WRITE  SET UP WRITE MODULE
NEXTMOD  EQU   *                                               @YM06498
         LR    RPARM,ROPCAVT            POINT TO AVT
         XCTL  SF=(E,OPCXCTL)           CALL NEXT MODULE       @YM06498
         EJECT
* THE FOLLOWING IS A TABLE FOR MESSAGES PROCESSED BY THIS MODULE
* EACH ENTRY CONSISTS OF;
* MESSAGE NUMBER
* LENGTH OF MESSAGE
* MESSAGE OFFSET
MSGTAB   DS    0F
         DC    AL1(21),AL1(END21-MSG21),AL2(MSG21-A)     MESSAGE *21
         DC    AL1(23),AL1(END23-MSG23),AL2(MSG23-A)     MESSAGE *23
         DC    AL1(27),AL1(END27-MSG27),AL2(MSG27-A)     MESSAGE *27
         DC    AL1(29),AL1(END29-MSG29),AL2(MSG29-A)     MESSAGE *29
         DC    AL1(41),AL1(END41-MSG41),AL2(MSG41-A)     MESSAGE *41
         DC    AL1(47),AL1(END47-MSG47),AL2(MSG47-A)     MESSAGE *47
         DC    AL1(48),AL1(END48-MSG48),AL2(MSG48-A)     MESSAGE *48
         DC    AL1(50),AL1(END50-MSG50),AL2(MSG50-A)     MESSAGE *50
         DC    AL1(58),AL1(END58-MSG58),AL2(MSG58-A)     MESSAGE *58
         DC    AL1(93),AL1(END93-MSG93),AL2(MSG93-A)     MESSAGE *93
         DC    AL1(99),AL1(END99-MSG99),AL2(MSG99-A)     MESSAGE *99
         DC    AL1(100),AL1(END100-MSG100),AL2(MSG100-A) MESSAGE *100
         DC    AL1(508),AL1(END508-MSG508),AL2(MSG508-A) NO=508@OY12649
         DC    X'FF'                    END OF TABLE
         EJECT
MSG21    EQU   *                        START MESSAGE 21
         DC    C'IED021I AUTO POLL STARTED FOR              '    MSG.21
END21    EQU   *                        END MESSAGE 21
         SPACE
MSG23    EQU   *                        START MESSAGE 23
         DC    C'IED023I TRACE STARTED FOR LINE             '    MSG.23
END23    EQU   *                        END MESSAGE 23
         SPACE
MSG27    EQU   *                        START MESSAGE 27
         DC    C'IED027I AUTO POLL STOPPED FOR              '    MSG.27
END27    EQU   *                        END MESSAGE 27
         SPACE
MSG29    EQU   *                        START MESSAGE 29
         DC    C'IED029I TRACE STOPPED FOR LINE             '    MSG.29
END29    EQU   *                        END MESSAGE 29
         SPACE
MSG41    EQU   *                        START MESSAGE 41
         DC    C'IED041I PRIMARY= SYSCON '                       MSG.41
END41    EQU   *                        END MESSAGE 41
         SPACE
MSG47    EQU   *                        START MESSAGE 47
         DC    C'IED047I SYS INTERVAL IS           '             MSG.47
END47    EQU   *                        END MESSAGE 47
         SPACE
MSG48    EQU   *                        START MESSAGE 48
         DC    C'IED048I POLLING DELAY FOR          IS       '   MSG.48
END48    EQU   *                        END MESSAGE 48
         SPACE
MSG50    EQU   *                        START MESSAGE 50
         DC    C'IED050I          OPTION          MODIFIED'      MSG.50
END50    EQU   *                        END MESSAGE 50
         SPACE
MSG58    EQU   *                        START MESSAGE 58
         DC    C'IED058I              SENSE COUNT=   SETTING=  ' MSG.58
END58    EQU   *                        END MESSAGE 58
         SPACE
MSG93    EQU   *                        START MESSAGE 93
         DC    C'IED093I SET SYSTEM INTERVAL COMMAND ACCEPTED'   MSG.93
END93    EQU   *                        END MESSAGE 93
         SPACE
MSG99    EQU   *                        START MESSAGE 99
         DC    C'IED099I ROUTINE LOADED'                         MSG.99
END99    EQU   *                        END MESSAGE 99
         SPACE
MSG100   EQU   *                        START MESSAGE 100
         DC    C'IED100I ROUTINE DEACTIVATED'                   MSG 100
END100   EQU   *                        END MESSAGE 100
MSG508   EQU   *                        START MESSAGE 508      @OY12649
         DC    C'IED508I POLLING DELAY FOR          CANNOT BE '
         DC    C'DISPLAYED'                                    @OY12649
END508   EQU   *                                               @OY12649
         SPACE
WRITE    DC    C'07'                    WRITE MODULE
NMSG     DC    C'09'                    IGCM910D               @YM06498
TWO56    DC    H'256'                   TO COMPARE FOR CONVERT @OY12649
MVSTATNM MVC   OPCDOUBL(0),0(RPARM)                            @Y17XACT
ZAPAREA  DC    100X'00'                 PATCH AREA             @Y17XACT
         EJECT
         TAVTD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TTNTD
         END
