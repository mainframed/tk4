 TITLE ' IGC0I10D - TCAM APP NETWORK CONTROL INTERFACE'
IGC0I10D CSECT
***********************************************************************
*                                                                     *
*****     THIS IS THE SIXTH LOAD OF SVC 104 - (TOPCTL)   **************
* MODULE NAME = IGC0I10D(TCAM,OPERATOR CONTROL)               @Y17XARZ*
*                                                             @Y17XARZ*
* DESCRIPTIVE NAME = TCAM APP NETWORK CONTROL INTERFACE       @Y17XARZ*
*                                                             @Y17XARZ*
* STATUS = VERSION 10.0                                       @Y17XARZ*
*                                                             @Y17XARZ*
* COPYRIGHT = NONE                                            @Y17XARZ*
*                                                             @Y17XARZ*
* FUNCTION  THIS MODULE CONTAINS ROUTINES THAT PROCESS A SUBSET OF    *
*        TCAM OPERATOR CONTROL FUNCTIONS FROM THE APPLICATION PROGRAM.*
*        THESE FUNCTION ARE AS FOLLOWS:                               *
*                                                                     *
*   TCOPY - WHEN TCOPY MACRO IS ISSUED IN THE APPLICATION PROGRAM THIS*
*        MODULE GETS CONTROL VIA SVC 104. IT COPIES A TERMINAL ENTRY  *
*        INTO USER WORK AREA. THE ADDRESS OF THE BINARY SEARCH ROUTINE*
*        IS OBTAINED FROM TCAM DISPATCH WORK AREA AND IS USED TO FIND *
*        DESIRED TERMNAME TABLE ENTRY. USING THIS ENTRY, IT FIND THE  *
*        TERMINAL TABLE AND DETERMINES TYPE AND SIZE AND MOVE IT ALONG*
*        WITH ANY OPTIONS INTO USER WORK AREA. IF NON-SNA TERMINAL    *
*        IS ATTACHED TO A 3705, A REQUEST IS POSTED TO OPERATOR  Y05330
*        CONTROL TO OBTAIN THE DEVICE DEPENDENT FIELDS FROM NCP. Y05330
*                                                                     *
*                                                                     *
*   TCHNG - A MASK IS USED TO UPDATE THE TTE FOR EACH OF THE NINE     *
*        (NCP,SSCP,PU,LU,PROCESS,LIST,3705 BISYNC S/S TERMINAL,270X   *
*        TERMINAL,3705 LINE), THE OPTION AND DEVICE DEPENDENT         *
*        INFORMATION.  THE DEFAULT OF THE MASK FOR LU, PROCESS, LIST  *
*        3705 BISYNC S/S TERMINAL, 270X TERMINAL, 3705 LINE ALLOWS    *
*        THE USER TO UPDATE ALL OF THE TTE EXCEPT THE FIRST 4 BYTES   *
*        OPTION AND DEVICE DEPENDENT INFORMATION.  THE MASK PRESERVES *
*        THE PEWA ADDRESS FOR THE PROCESS ENTRY ONLY.  THE DEFAULT    *
*        MASK FOR THE NCP, SSCP AND PU ALLOWS ONLY THE OPTION DATA    *
*        TO BE MODIFIED.  IF THE DEVICE DEPENDENT MASK IS ALLOWED     *
*        FOR 3705 BISYNC S/S TERMINAL, THEN A REQUEST IS POSTED TO    *
*        THE OPERATOR CONTROL TO UPDATE THE DEVICE DEPENDENT FIELDS   *
*        IN THE NCP DEVICE RECORD OF THAT RESOURCE.                   *
*        THE BINARY SEARCH ROUTINE IS USED TO LOCATE THE TERMNAME     *
*        TABLE ENTRY AND TERMINAL TABLE ENTRY.  IF PASSWORD IS        *
*        REQUIRED AND SPECIFIED, IT IS CHECKED FOR VALIDITY.          *
*                                                             @Y17XARZ*
*                                                                     *
*                                                             @Y17XARZ*
*                                                                     *
* INPUT   REGISTER  2 CONTAINS ADDRESS OF USER PARAMETER LIST         *
*         REGISTER  3 CONTAINS ADDRESS OF CVT                         *
*         REGISTER  6 CONTAINS ADDRESS OF TCB OF CALLING TASK         *
*         REGISTER  7 CONTAINS ADDRESS OF TCAM DISPATCH WORK AREA     *
*         REGISTER 13 CONTAINS ADDRESS OF USER REGISTER SAVE AREA     *
*         REGISTER 14 CONTAINS RETURN ADDRESS                         *
*         REGISTER 15 CONTAINS ENTRY ADDRESS                          *
*                                                                     *
* OUTPUT  REGISTER 15 CONTAINS RETURN CODE                            *
*                                                                     *
* EXTERNAL ROUTINES                                                   *
*         IGC102-AQCTL SVC                                            *
*         IGC001-WAIT  SVC                                            *
*         IGC006-LINK  SVC                                            *
*         IEDQNB02-CHECKPOINT                                         *
*         IEDQE8-BINARY SEARCH ROUTINE                                *
*         IEDQTNT-TERMINAL TABLE LOGIC                                *
*                                                                     *
* EXITS - CALLING ROUTINES                                            *
*         NORMAL - REGISTER 15 - ZERO                                 *
*         ERROR - REGISTER 15 RETURN CODE                     @Y17XARZ*
*                                                                     *
* TABLES/WORK AREAS                                                   *
*         AVT                                                         *
*         CVT                                                         *
*         TCB                                                         *
*         DEB                                                         *
*         CIB                                                         *
*         ACCESS METHOD WORK AREA                                     *
*         MSK                                                 @Y17XARZ*
*    PATCH LABEL= ZAPAREA                                     @Y17XARZ*
*    MODULE SIZE=
*                                                                     *
* ATTRIBUTES SERIALLY REUSABLE,REFRESHABLE,ENABLED,ATTACHED,TRANSIENT *
*                                                                     *
* NOTES  THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. THE CODING HAS  *
*        BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER CONSTANTS,   *
*        BY REASSEMBLY,WILL RESULT IN A CORRECT MODULE FOR THE NEW    *
*        DEFINITIONS.                                                 *
*                                                                     *
*CHANGE ACTIVITY                                               @Y17XARX
*A000000-999999                                                @Y17XARZ
*A090000                                                       @Y17XARX
*C543000,544000                                                @Y17XARX
*C465000                                                       @Y17XARW
***********************************************************************
         EJECT
         SPACE 3
RZERO    EQU   0                        REGISTER ZERO
RONE     EQU   1                        REGISTER ONE
RPARM    EQU   2                        PARAMETER REGISTER
RCVT     EQU   3                        ADDRESS OF CVT
R3       EQU   3                        REGISTER THREE
RTNT     EQU   4                        TERMNAME TABLE
RANDREG  EQU   4                        WORK REG FOR TCHNG     @Y17XARZ
RTE      EQU   4                        TIOT EXTENT ADDRESS
RTERM    EQU   5                        TERMINAL TABLE
RECB     EQU   5                        EVENT CONTROL BLOCK
RTCB     EQU   6                        TASK CONTROL BLOCK
RSRCHARG EQU   7                        SEARCH ARG REG -TCHNG  @Y17XARZ
RDEB     EQU   7                        DATA EXTENT BLOCK
RAVT1    EQU   7                        DISPATCH WORK AREA
RWORK    EQU   8                        USER WORK AREA
RAVT     EQU   9                        ADDRESS VECTOR TABLE
RTEMP    EQU   10                       WORK REG
RPCB     EQU   10                       PROCESS CONTROL BLOCK
RCOUNT   EQU   11                       WORK REG
RCIB     EQU   11                       COMMAND INPUT BUFFER
RBASE    EQU   12                       BASE REG
RSAVE    EQU   13                       SAVE AREA ADDRESS
RETURN   EQU   14                       RETURN ADDRESS
RETWORK  EQU   14                       WORK REG               @Y17XARZ
RETWRK   EQU   14                       WORK REGISTER          @Y17XARZ
RENTRY   EQU   15                       ENTRY POINT/ COMPLETION CODE
         SPACE 3
         USING IEDQAVTD,RAVT            TCAM ADDRESS VECTOR TBL
         USING IEDQTCB,RTCB             TASK CONTROL BLOCK
         USING IEDQDEB,RDEB             DATA EXTENT BLOCK
         USING APLCOPYD,RPARM           USER PARAMETER
         USING IEDQTRM,RTERM            TERMINAL TABLE
         SPACE 2
         BALR  RBASE,RZERO              ESTABLISH
         USING *,RBASE                  ADDRESSABILITY
IGC0I10D IEDHJN ENTER
         ST     RETURN,TWELVE(,RSAVE)     SAVE RETURN          @YM07742
         L      RTEMP,APLSAVE2            GET SAVEAREA         @YM07742
         ST     RSAVE,FOUR(,RTEMP)        ESTABLISH SAVE       @YM07742
         ST     RTEMP,EIGHT(,RSAVE)       AREA LINKAGE         @YM07742
         LR     RSAVE,RTEMP
         L     RAVT,ZERO(,RAVT1)        ADDRESS OF AVT
         L     RWORK,APLUSEWK           ADDRESS OF USER WORKAREA
TCAM2    EQU   *                                                 Y05330
         SR    RDEB,RDEB                CLEAR DEB REGISTER
         ICM   RDEB,AD,TCBDEB+1         ADDRESS OF FIRST DEB
LOOP     EQU   *
         BNZ   OK                       DEB CHAIN EXHAUSTED
*                                       BEFORE TCAM DEB FOUND
         SPACE
         LA    RENTRY,NOPEN             ERROR COMPLETION CODE
         B     EXIT2                    RETURN TO USER
*
OK       EQU   *
         TM    DEBTAMID,ID              TCAM DEB
         BO    TCAMDEB                  YES BRANCH
         ICM   RDEB,AD,DEBDEBAD         ADDRESS OF NEXT DEB
         B     LOOP                     CHECK NEXT DEB
TCAMDEB  EQU   *
         L     RTNT,AVTRNMPT            ADDRESS OF TERMNAME TABLE
         L     RZERO,0(RPARM)           ADDRESS OF USER TERMNAME
         L     RENTRY,AVTCVTPT(,RCVT)   GET ADDRESS OF DISPATCH
*                                       WORK AREA
         L     RENTRY,QE8DISP(,RENTRY)  GET ADDRESS OF
         BALR  RETURN,RENTRY            SEARCH ROUTINE
*                                       GO TO SEARCH ROUTINE
BACK     EQU   *
         LTR   RENTRY,RENTRY            TERMNAME VALID
         BNZ   NAMEOK                   BRANCH IF YES
I3705ERR EQU   *                                                 Y05330
         LA    RENTRY,TTERR             ERROR CODE
         B     EXIT                     RETURN TO USER
         EJECT
NAMEOK   EQU   *
         LR    RONE,RENTRY              TERMNAME TABLE OFFSET
         L     RENTRY,APLRNLST          GET 3705 PARM LIST       Y05330
         STH   RONE,CIBTNTX-IEDQCIB(,RENTRY) SAVE TNT OFFSET     Y05330
         TM    APLCODE,TCHNGCD          ENTRY FROM TCHNG
         BZ    NOTTCHNG                 NO BRANCH
         ST    RWORK,CIBFROM-IEDQCIB(,RENTRY) SAVE USER WORK AREAY05330
NOTTCHNG EQU   *
         L     RENTRY,AVTRNMPT          ADDR OF CONVERSION LOGIC
         BALR  RETURN,RENTRY            GO TO CONVERSION ROUTINE
         LR    RTERM,RONE               ADDRESS OF TERMINAL ENTRY
*
         TM    APLCODE,TCHNGCD          ENTRY FROM TCHNG
         BO    TCHNGGO                  YES BRANCH
         SPACE 3
TCOPYGO  EQU   *
         TM    TRMSTATE,TRMLIST         DIST LIST OR CASCADE     Y05330
         BNO   SINGLE                   BRANCH IF NO TO COMPUTE
*                                       SIZE OF TERMINAL OR
*                                       PROCESS ENTRY
         LA    RCOUNT,TLISTEN-IEDQTRM   MINIMUM SIZE OF LIST ENTRY
         SR    RTEMP,RTEMP              CLEAR WORK REG
         LH    RTEMP,TLISTCNT           NUMBER OF 2 BYTE ENTRIES
         SLL   RTEMP,1                  MULTIPLY BY SIZE OF ONE
*                                       ENTRY
         AR    RCOUNT,RTEMP             SIZE OF TLIST
         LR    RTEMP,RTERM              ADDRESS OF TERMINAL ENTRY
         B     MLOOP                    COPY LIST ENTRY
         SPACE 2
SINGLE   EQU   *
         TM    TRMSTATE,TRMLINE+TRMLIST+TRMPROC COULD IT BE LGB  Y05330
         BNZ   NOLGB                    NO, BRANCH               Y05330
         LA    RENTRY,TTERR             SET FOR TRMNME ERROR     Y05330
         TM    TRMDSORG,TRMLGB          IS IT AN LGB             Y05330
         BO    EXIT                     YES, ERROR               Y05330
NOLGB    EQU   *                                                 Y05330
*
         MVC   0(TRMOPNO-IEDQTRM,RWORK),TRMSTATE COPY BASIC
*                                       PART OF TERM ENTRY
         LA    RETURN,TRMOPNO           ADDR..OF DD FIELDS
         LA    RTEMP,TRMOPNO-IEDQTRM(,RWORK) ADDR OF NEXT
*                                       EMPTY BYTE
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED
         BNO   DEVDEP                   BRANCH IF NO
         MVC   0(TRMOPT-TRMOPNO,RTEMP),TRMOPNO MOVE OPT CONTROL
         LA    RTEMP,TRMOPT-TRMOPNO(,RTEMP)
         SR    RONE,RONE                CLEAR REGISTER           Y05330
         IC    RONE,TRMOPNO             NUMBER OF OPTION OFFSETS Y05330
         BCTR  RONE,RZERO               DECREMENT FOR EXECUTE    Y05330
         EX    RONE,MOVEM               MOVE OPTION OFFSETS      Y05330
         LA    RONE,ONE(,RONE)          RESTORE LENGTH           Y05330
         LA    RTEMP,TRMOPT-IEDQTRM(RONE,RWORK) ADDRESS OF NEXT  Y05330
*                                       EMPTY BYTE               Y05330
         LA    RETURN,TRMOPT-IEDQTRM(RONE,RTERM) ADDR OF DD FIELDY05330
         SPACE 2
DEVDEP   EQU   *
         STM   RETURN,RBASE,TWELVE(RSAVE) SAVE REGS            @YM07776
         BAL   RETURN,TESTTYPE     CHECK TO SEE IF TRIP TO     @Y17XARZ
*                                  NCP IS REQURIED             @Y17XARZ
         B     DEVDEP0X            RETURN HERE IF NOT          @Y17XARZ
*        RETURN HERE IF YES                                    @Y17XARZ
         L     RPARM,APLRNLST           GET 3705 PARMLIST        Y05330
         ST    RTERM,CIBFROM-IEDQCIB(,RPARM) SAVE TERM ADDRESS   Y05330
         ST    RWORK,CIBTO-IEDQCIB(,RPARM)  SAVE WORK AREA ADDR  Y05330
         MVI   CIBSIZE+FOUR(RPARM),ZERO CLEAR ECB                Y05330
         BAL   RETURN,QETGO1            POST OPERATOR CONTROL    Y05330
         LTR   RENTRY,RENTRY            ERROR ON POST            Y05330
         BNZ   EXIT                     YES, RETURN TO USER      Y05330
DEVDEP0X EQU   *
         LM    RETURN,RBASE,TWELVE(RSAVE) RESTORE TCOPY REGISTERSY05330
         SR    RCOUNT,RCOUNT            CLEAR REGISTER
         SR    R3,R3                    CLEAR REGISTER
         SR    RZERO,RZERO              CLEAR REG
         SR    RONE,RONE                CLEAR REG
         ICM   RZERO,HALFWORD,TRMDEVFL-IEDQTRM(RWORK) DEV DEP FLGY05330
*                                       DD FIELDS PRESENT
         BZ    OPTST                    BRANCH IF NO
         SPACE 2
SHIFT    EQU   *
         SRDL  RZERO,1                  MOVE IN ONE BIT
         SRL   RONE,31                  MAKE REG ONE OR ZERO
         AR    RCOUNT,RONE              BUMP DD COUNTER
         LTR   RZERO,RZERO              ALL BITS TESTED
         BNZ   SHIFT                    CONTINUE COUNTING
         ST    RETURN,TWELVE(RSAVE)     SAVE ADDR OF DD FIELDS @YM07812
         BAL   RETURN,TESTTYPE          CHECK TO SEE IF DD     @YM07812
*                                       FIELDS HAVE BEEN       @YM07812
*                                       MOVED                  @YM07812
         B     DDLOOP1                  NO, BRANCH             @YM08003
         L     RETURN,TWELVE(RSAVE)     RESTORE ADDR OF DD FLDS@YM07812
         LR    RTEMP,RETURN             ADDR OF DD FIELDS        Y05330
         LA    RTERM,ZERO(,RTERM)       CLEAR HIGH ORDER BYTE    Y05330
         SR    RTEMP,RTERM              OFFSET TO DD FIELD       Y05330
         AR    RTEMP,RWORK              IN USER WORK AREA        Y05330
DDLOOP2  EQU   *                                                 Y05330
         IC    R3,ZERO(,RTEMP)          DD FIELD LENGTH          Y05330
         LA    RTEMP,ONE(R3,RTEMP)      BUMP TO NEXT             Y05330
         BCT   RCOUNT,DDLOOP2           BRANCH IF MORE TO SKIP   Y05330
         B     OPTST                    GO TEST OPTION FIELDS    Y05330
DDLOOP1  EQU   *                                               @YM08003
         L     RETURN,TWELVE(RSAVE)     RESTORE ADDR OF DD FLDS@YM07812
DDLOOP   EQU   *                                               @YM08003
         IC    R3,0(RETURN)             LENGTH OF DD FIELD
         EX    R3,MOVEDD                MOVE DEV DEP FIELDS
         LA    RTEMP,ONE(R3,RTEMP)      NEXT EMPTY BYTE
         LA    RETURN,ONE(R3,RETURN)    ADDR OF NEXT DD FIELD
         BCT   RCOUNT,DDLOOP            MOVE NEXT DD FIELD
OPTST    EQU   *
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS TO BE MOVED
         BO    MOVOPT                   BRANCH IF YESS
         SR    RENTRY,RENTRY            GOOD COMPLETION CODE
         B     EXIT                     RETURN TO USER
MOVOPT   EQU   *
         LR    RONE,RTEMP               SAVE EMPTY BYTE PTR      Y05330
         SR    RONE,RWORK               COMPUTE OFFSET FROM STARTY05330
*                                       OF DESTINATION AREA TO
*                                       BYTE TO CONTAIN OPTION
*                                       TBL
         STH   RONE,TRMOPTBL-IEDQTRM(,RWORK) STORE OFFSET IN     Y05330
*                                       COPY OF TERM TABLE ENTRY
         LR    RWORK,RTEMP              EFFECTIVE DESTINATION
*                                       ADDRESS
         LH    RONE,TRMOPTBL            GET ENTRY OFFSET       @YA05454
         N     RONE,AVTCLRHI            CLEAR HI HALF          @YA05454
         L     R3,AVTOPTPT              GET OPT TBL ADDR       @YA05454
         AR    RONE,R3                  ADD OPT TBL ADDR       @YA05454
         L     R3,FOUR(,R3)             GET OPT CSECT TBL ADDR @YA05454
*                                       ENTRY FOR THIS TERMINAL
         SR    RDEB,RDEB                CLEAR WORK REG
         IC    RDEB,TRMOPNO             NUMBER OF OPTION ENTRIES
*                                       INTO BCT REG
         LA    RTCB,TRMOPT              START OF OPTION OFFSETS
         LR    RTEMP,RTCB               ADDRESS OF FIRST OFFSET
         SR    RCOUNT,RCOUNT            CLEAR INSERT REG
OLOOP    EQU   *
         CLI   0(RTCB),AVTEFF           IS THIS OFFSET UNUSED
         BNE   HIT                      NO,BRANCH
BUMPER   EQU   *
         LA    RTCB,ONE(,RTCB)          BUMP TO NEXT OFFSET
         LA    R3,CHARLNTH(,R3)         BUMP TO NEXT CHAR ENTRY
         BCT   RDEB,OLOOP               SUBTRACT ONE FROM OFFSET
*                                       INDICATOR TO LOOK AT ANOT
*                                       HER ENTRY IN LIST
         SR    RTCB,RTCB                CLEAR WORK REG
         IC    RTCB,0(RTEMP)            LAST USED OFFSET
         LA    RCOUNT,ONE(RCOUNT,RTCB)  TOTAL OPTION FIELD LENGTH
         LR    RTEMP,RONE               OPTION FIELD ADDRESS     Y05330
         B     MLOOP                    GO COPY OPTION FIELDS
         SPACE 2
HIT      EQU   *
         LR    RTEMP,RTCB               ADDRESS OF LAST USED
*                                       OFFSET
         IC    RCOUNT,0(R3)             LENGTH-1 OF OPTION
         B     BUMPER                   CHECK NEXT OFFSET
         SPACE 2
TCHNGGO  EQU   *
         SR    R3,R3                    CLEAR REGISTER
         ICM   R3,AD,APLPASS+1          GET PASS WORD POINTER
         BAL   RETURN,PASSWORD          GO TO PASSWORD CHECKER
*                                       RETURN IS TO HERE ONLY IF
*                                       PASSWORD IS VALID, OTHERWISE
*                                       RETURN IS TO USER
         SPACE 2
         LR    R3,RTEMP                 ESTABLISH ADDRESSABILITY
*                                       FOR ACCESS METHOD WORK AREA
         SR    RSRCHARG,RSRCHARG      CLEAR TO GET ARGUMENT    @Y17XARZ
         IC   RSRCHARG,TRMSTATE  PUT TTE TYPE IN THE ARG       @Y17XARZ
         SR    RANDREG,RANDREG          CLEAR TO GET RID OF    @Y17XARZ
*                                       UNWANTED BITS          @Y17XARZ
         LA   RANDREG,SRCHMSK      GET MASK TO GET RID         @Y17XARZ
*                                       OF UNWANTED BITS       @Y17XARZ
         NR    RSRCHARG,RANDREG       REMOVE UNWANTED BITS     @Y17XARZ
         SLL   RSRCHARG,BY0             MAKE ROOM              @Y17XARZ
         TM    TRMSTATE,TRMPREF       IS TTE AN NCP RESRCE     @Y17XARZ
         BZ    NOPREFIX               NO                       @Y17XARZ
         LR    RETWRK,RTERM           PRESERVE TTE REG         @Y17XARZ
         S     RTERM,PREFIXL          BACK UP TO PREFIX        @Y17XARZ
         USING IEDNTRM,RTERM          POINT DSECT AT PREFIX    @Y17XARZ
         ICM   RSRCHARG,BY3,TRMTYPE     PUT QUALIFYING TYPE    @Y17XARZ
*                                       IN THE ARGUMENT        @Y17XARZ
         LR    RTERM,RETWRK           RESET TTE POINTER        @Y17XARZ
         USING IEDQTRM,RTERM          RESET DSECT              @Y17XARZ
NOPREFIX LA    RETWRK,SRCHLIM         SET UP LOOP COUNT        @Y17XARZ
         LA    RWORK,SRCHTBLE         POINT AT SRCHTABLE       @Y17XARZ
SRCHCLC  CLM   RSRCHARG,BY2+BY3,SRCHSTAT(RWORK) TTE TYPE=?     @Y17XARZ
         BE    SRCHFND                 YES                     @Y17XARZ
         LA    RWORK,SRCHTBEL(RWORK)   POINT AT NEXT ENTRY     @Y17XARZ
         BCT   RETWRK,SRCHCLC          LOOP TILL END OF TABLE  @Y17XARZ
         B     I3705ERR                INVALID ENTRY TYPE      @Y17XARZ
SRCHFND  SR    RETWRK,RETWRK           CLEAR WORK REG          @Y17XARZ
         IC    RETWRK,SRCHMASK(RWORK)  GET OFFSET TO MASK      @Y17XARZ
         A     RETWORK,AVTOPMSK        POINT TO MASK TABLE     @Y17XARZ
         L     RWORK,APLUSEWK           ADDRESS OF USER WRKAREA@Y17XARZ
         CLM   RSRCHARG,BY2+BY3,SRLSTNTY        LIST ENTRY?    @Y17XARZ
         BNE   TNOLGB              NO                          @Y17XARZ
         SR    RTEMP,RTEMP              CLEAR FOR IC           @YM07822
         ICM   RTEMP,HALFWORD,FOUR(RWORK) NO OF 2- BYTE        @Y17XARZ
*                                       ENTERIES IN U. LIST    @Y17XARZ
         TM    MSK1-MSKMASK(RETWRK),MSKCNT  MODIFY COUNT?      @Y17XARZ
         BZ    NOCOUNTM     NO                                 @Y17XARZ
         STH   RTEMP,TLISTCNT  UPDATE COUNT                    @Y17XARZ
NOCOUNTM TM    MSK1-MSKMASK(RETWRK),MSKLIST MODIFY TLIST?      @Y17XARZ
         BZ    TCHNGOUT               NO GET OUT               @Y17XARZ
         SLL   RTEMP,1                  MULTIPLY BY SIZE OF ONE
*                                       ENTRY
         LR    RCOUNT,RTEMP
*                                       TERMINAL TABLE ENTRY
         LA    RTEMP,TLISTEN       ADDR OF LIST ENTERIES       @Y17XARZ
         LA    RWORK,SIX(,RWORK)   ADDR OF USER DATA+6         @Y17XARZ
         LA    RETURN,TCHNGOUT          SET RETURN TO EXIT
         B     TMLOOP                   GO MOVE THE DATA
TNOLGB   EQU   *                                                 Y05330
         L     RENTRY,APLRNLST          GET 3705 PARM LIST       Y05330
         NI    CIBLRN-IEDQCIB(RENTRY),AVTEFF-DIGITS-CHARS        Y05330
*                                       ASSUME NO DIAL DIGITS    Y05330
*                                       NOR ADDRESSING CHARACTERSY05330
         TM    TRMDEVFL,DIALDIG         DIAL DIGITS PRESENT      Y05330
         BNO   TCKADDR                  NO, BRANCH               Y05330
         OI    CIBLRN-IEDQCIB(RENTRY),DIGITS INDICATE DIAL DIGITSY05330
TCKADDR  EQU   *                                                 Y05330
         TM    TRMDEVFL,ADDRCHR         ADDRESS CHARS PRESENT    Y05330
         BNO   TNOADDR                  NO, BRANCH               Y05330
         OI    CIBLRN-IEDQCIB(RENTRY),CHARS INDICATE ADDR CHARS  Y05330
TNOADDR  EQU   *                                                 Y05330
         CLM   RSRCHARG,BY2+BY3,SPRCNTY IS IT A PROCESS ENTRY? @Y17XARZ
         BNE   NOTPROC             BRANCH IF NOT               @Y17XARZ
         MVC   TRMSTAT-IEDQTRM(FOUR,RWORK),TRMSTAT             @YA10247
*                                       SAVE PEWA ADDRESS      @YA10247
NOTPROC  EQU   *                                               @YA10247
         ST    R3,R3OFFSET(RSAVE)  SAVE REGISTER USED          @Y17XARZ
         ST    RTERM,R5OFFSET(RSAVE) SAVE REG USED             @Y17XARZ
         ST    RWORK,R8OFFSET(RSAVE) SAVE REG USED             @Y17XARZ
         LA    RTEMP,LOOPCT        INIT LOOP COUNTER           @Y17XARZ
         L     R3,ANDMASK          INITIALIZE TEST MASK        @Y17XARZ
         LA    RTERM,TRMINSEQ      POINT TO RCVING AREA        @Y17XARZ
         LA    RWORK,FOUR(RWORK)   POINT TO SENDING AREA       @Y17XARZ
TSTMVE  ICM    RENTRY,HALFWORD,ZERO(RETWRK)  GET MASK          @Y17XARZ
         NR    RENTRY,R3            CAN 1 MODIFY THIS BYTE     @Y17XARZ
         BZ    NOMOVE               NO                         @Y17XARZ
         MVC   ZERO(ONE,RTERM),ZERO(RWORK) YES MOVE IT         @Y17XARZ
NOMOVE   SRL   R3,ONE               SHIFT TO NEXT MASK BIT     @Y17XARZ
         LA    RTERM,ONE(RTERM)     INCR RCVING FIELD          @Y17XARZ
         LA    RWORK,ONE(RWORK)     INCR SENDING FIELD         @Y17XARZ
         BCT   RTEMP,TSTMVE         REPEAT -LOOPCT- TIMES      @Y17XARZ
         ICM   RWORK,FULLWORD,R8OFFSET(RSAVE) RESTORE USER     @Y17XARZ
*                                       AREA POINTER           @Y17XARZ
         LR    RONE,RWORK           RESTORE WORKAREA PTR       @YM08025
         ICM   RTERM,FULLWORD,R5OFFSET(RSAVE) RESTORE TTE PTR  @Y17XARZ
         ST    RETWRK,R14INDEX(RSAVE) SAVE                     @Y17XARZ
*                                       TCHNG MASK POINTER     @Y17XARZ
         ICM   R3,FULLWORD,R3OFFSET(RSAVE) RESTORE REGISTER    @Y17XARZ
*        MODIFY OPTION FIELDS                                  @Y17XARZ
         TM    MSK2-MSKMASK(RETWRK),MSKOPT  MODIFY OPTION FLDS?@Y17XARZ
         BZ    TDEVDEP             NO                          @Y17XARZ
         LA    RWORK,TRMOPNO-IEDQTRM(,RWORK) NEXT BYTE IN USER
*                                       WORK AREA
         LA    RENTRY,TRMOPNO           NEXT BYTE TO UPDATE
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS PRESENT
         BNO   TDEVDEP                  NO, BRANCH
         SPACE 1
         LH    RWORK,TRMOPTBL-IEDQTRM(,RONE)                   @YA05454
         N     RWORK,AVTCLRHI           CLEAR HI HALF          @YA05454
         AR    RONE,RWORK               ADD OPT TBL ADDR       @YA05454
         LR    RWORK,RONE               OFFSETS IN USER WORK AREAY05330
TMOVOPT  EQU   *
         SR    RCOUNT,RCOUNT            CLEAR WORK REG
         LH    RTNT,TRMOPTBL            GET ENTRY OFFSET       @YA05454
         N     RTNT,AVTCLRHI            CLEAR HI HALF          @YA05454
         L     RONE,AVTOPTPT            GET OPT TBL ADDR       @YA05454
         AR    RTNT,RONE                ADD OPT TBL ADDR       @YA05454
         L     RONE,FOUR(,RONE)         GET OPT CSECT TBL ADDR @YA05454
*                                       FOR THIS ENTRY
         SR    RDEB,RDEB                *
         IC    RDEB,TRMOPNO             NUMBER OF OPTION FIELDS
         LA    RTCB,TRMOPT              START OF OPTION OFFSETS
         LR    RTEMP,RTCB
         SPACE 3
TOLOOP   CLI   0(RTCB),AVTEFF           IS THIS OFFSET UNUSED
         BNE   THIT                     NO, BRANCH
TBUMPER  EQU   *
         SPACE 1
         LA    RTCB,ONE(,RTCB)          BUMP TO NEXT OFFSET
         LA    RONE,CHARLNTH(,RONE)     BUMP TO NEXT CHAR ENTRY
         BCT   RDEB,TOLOOP              LOOK AT NEXT OFFSET BYTE
         SPACE 3
         SR    RETURN,RETURN            CLEAR WORK REGISTER
         IC    RETURN,0(RTEMP)          LAST USED OFFSET
         LA    RCOUNT,ONE(RCOUNT,RETURN) OPTION FIELD LENGTH
         LR    RTEMP,RTNT
         BAL   RETURN,TMLOOP            CHANGE OPTION FIELDS
         L     RWORK,APLUSEWK           RESTORE USER WORK AREA   Y05330
         LA    RWORK,TRMOPT-IEDQTRM(,RWORK) OPTION OFFSET ADDR
         SR    RCOUNT,RCOUNT            CLEAS REGISTER          SA63026
         IC    RCOUNT,TRMOPNO           NUMBER OF OPTION OFFSETS
         LA    RTEMP,TRMOPT             ADDR OF FIELDS TO CHANGE
         BAL   RETURN,TMLOOP            MOVE OFFSETS
         IC    RCOUNT,TRMOPNO
         AR    RWORK,RCOUNT             ADDR OF DD FIELD IN WORKA
         LR    RENTRY,RTCB              ADDR OF DD FIELD IN TRMTBL
         B     TDEVDEP                  GO MOVE DD ENTRIES
THIT     EQU   *
         LR    RTEMP,RTCB
         IC    RCOUNT,0(RONE)           LENGTH-1 OF OPTION FIELD
*                                       WORK AREA
         B     TBUMPER                  GO CHECK NEXT OPTION BYTE
TDEVDEP  EQU   *
         ICM   RETWRK,FULLWORD,R14INDEX(RSAVE) RESTORE TCHNG POINTER
*                                                              @Y17XARW
         TM    MSK2-MSKMASK(RETWRK),MSKDVDP MODIFY DEVDEP?     @Y17XARZ
         BZ    TCHNGOUT             NO                         @Y17XARZ
         BAL   RETURN,TESTTYPE     GO TEST TTE                 @Y17XARZ
         B     TDEVDEPX            RETURN HERE IF              @Y17XARZ
*                                  NON-NCP RESOURCE OR         @Y17XARZ
*                                  NCP LINE OR SNA RESOURCE    @Y17XARZ
         STM   RETURN,RBASE,TWELVE(RSAVE) SAVE TCHNG REGISTERS   Y05330
         L     RPARM,APLRNLST           GET 3705 PARMLIST        Y05330
         ST    RTERM,CIBTO-IEDQCIB(,RPARM) SAVE TERM ADDRESS     Y05330
         MVI   CIBSIZE+FOUR(RPARM),ZERO CLEAR ECB                Y05330
         BAL   RETURN,QETGO1            POST OPERATOR CONTROL    Y05330
         LTR   RENTRY,RENTRY            ERROR ON POST            Y05330
         BNZ   EXIT                     YES, RETURN TO USER      Y05330
         LM    RETURN,RBASE,TWELVE(RSAVE) RESTORE TCHNG REGISTERSY05330
         B     TCHNGOUT                 TAKE A CHECKPOINT        Y05330
TDEVDEPX EQU   *                                                 Y05330
         SR    RCOUNT,RCOUNT            CLEAR WORK REGS
         SR    RTCB,RTCB                *
         SR    RZERO,RZERO              *
         SR    RONE,RONE                *
         LR    RDEB,RWORK               ADDR OF DD IN WORK AREA
         ICM   RZERO,HALFWORD,TRMDEVFL  DEV DEP FIELDS           Y05330
         BZ    TCHNGOUT                 ANY PRESENT,NO BRANCH
         SPACE 1
TSHIFT   SRDL  RZERO,1                  MOVE IN ONE BIT
         SRL   RONE,31                  MAKE IT ONE OR ZERO
         AR    RCOUNT,RONE
         LTR   RZERO,RZERO              ALL BITS TESTED
         BNZ   TSHIFT                   NO CONTINUE COUNTING
         SR    RONE,RONE                CLEAR WORK REG
TDDLOOP  EQU   *
         IC    RONE,0(RDEB)             SIZE OF ONE ENTRY
         LA    RTCB,ONE(RONE,RTCB)      BUMP DD FIELD LENGTH CTRS
         LA    RDEB,ONE(RONE,RDEB)      BUMP TO NEXT DD FIELD
         BCT   RCOUNT,TDDLOOP           DECREMENT NO OF DD FIELDS
*
         LR    RTEMP,RENTRY             ADDRESS OF DD FIELD
*                                       IN TERM TABLE
         LR    RCOUNT,RTCB              TOTAL LENGTH OF DD FIELDS
         LA    RETURN,TCHNGOUT          SET RETURN TO EXIT
TMLOOP   EQU   *
         C     RCOUNT,MAX               IS MOVE LOOP NEEDED
         BNH   TLAST                    NO BRANCH
         SH    RCOUNT,MAXIM             SUBTRACT LENGTH
         MVC   0(MAXI,RTEMP),0(RWORK)   MOVE 256 BYTES
         LA    RWORK,MAXI(,RWORK)       BUMP TO NEXT BYTE TO MOVE
         LA    RTEMP,MAXI(,RTEMP)       *
         B     TMLOOP                   GO MOVE MORE DATA
         SPACE 2
TLAST    EQU   *
         LTR   RCOUNT,RCOUNT            ALL DATA MOVED
         BZ    RETRN                    RETURN
         BCTR  RCOUNT,RZERO             DECREMENT COUNT FOR EXEC
         EX    RCOUNT,MOVEOPT           MOVE LAST OF DATA
RETRN    EQU   *
         BR    RETURN                   RETURN
MLOOP    EQU   *
         SPACE 1
         C     RCOUNT,MAX               IS MOVE LOOP NEEDED
         BNH   LASTMVE                  BRANCH IF NO
         SH    RCOUNT,MAXIM             SUBTRACT MAXIMUM LENGTH
*                                       FOR ONE MVC INST
         MVC   0(MAXI,RWORK),0(RTEMP)   MOVE 256 BYTES
         LA    RWORK,MAXI(,RWORK)       BUMP TO NEXT EMPTY BYTE
*                                       IN DESTINATION AREA
         LA    RTEMP,MAXI(,RTEMP)       BUMP TO NEXT BYTE TO BE
*                                       MOVED
         B     MLOOP                    GO MOVE MORE DATA
*
LASTMVE  EQU   *
         LTR   RCOUNT,RCOUNT            ALL DATA MOVED
         BZ    GOODOUT                  BRANCH IF YES
         BCTR  RCOUNT,RZERO             DECREMENT COUNT FOR EXEC
         EX    RCOUNT,MOVER             MOVE LAST OF DATA
         B     GOODOUT                  PREPARE TO RETURN
TCHNGOUT EQU   *
         TM    AVTCKFLG,AVTCKTAC        CHECKPOINT OPTION      @Y17XARX
         BZ    NOCKPT                   NO BRANCH              @Y17XARX
         L     RONE,APLRNLST            GET TNT OFFSET SAVED IN SA61775
         LH    RONE,CIBTNTX-IEDQCIB(,RONE) USER PARAMETER LIST  SA61775
         L     RWORK,CVT                GET CVT ADDRESS
         USING ETCVT,RWORK              CVT ADDRESS
         L     RWORK,CVTLINK            ADDRESS OF LINKLIB DCB
         DROP  RWORK
         LINK  EP=IEDQNB02,DCB=(RWORK)  TAKE A CHECKPOINT
NOCKPT   EQU   *
         SR    RENTRY,RENTRY            NORMAL COMPLETION CODE
         B     EXIT                     RETURN TO USER           Y05330
         SPACE 3
QETGO1   EQU   *
         USING IEDQPCB,RPCB
         USING IEDQCIB,RCIB
         USING ETCVT,RCVT
*                                                                     *
*        FIND PCB ASSOCIATED WITH THIS APPLICATION PROG TCB           *
*                                                                     *
         LR    RCIB,RPARM               ADDRESS OF CIB
         L     RPCB,AVTPCBPT            ADDRESS OF FIRST PCB IN
*                                       TCAM MCP PCB CHAIN
         L     RCVT,CVT                 SETUP CVT ADDRESS      @YM07826
         L     RTCB,ZERO(,RCVT)         GET NEW-OLD POINTER      Y05330
         L     RTCB,FOUR(,RTCB)         CURRENT TCB POINTER      Y05330
PCBLOOP  EQU   *                                                 Y05330
         CLM   RTCB,AD,PCBTCBAD+ONE     MATCHING PCB FOR TCB     Y05330
         BE    PCBGO                    YES, BRANCH
         ICM   RPCB,AD,PCBLINK          NEXT PCB ON CHAIN
         BNZ   PCBLOOP                  CHECK NEXT PCB
         LA    RENTRY,NOTCAM            ERROR COMPLETION CODE
         BR    RETURN                   RETURN TO CALLER OR USER Y05330
         SPACE 1
PCBGO    EQU   *
         LA    RWORK,AVTOPCOB           OPERATOR CONTROL QCB
         STCM  RWORK,AD,CIBQCBA+1      STORE IN CIB
         MVI   CIBSIZE(RCIB),CODE       AQCTL ACTION CODE
         LA    RWORK,PCBWRKA            TARGET CIB IN PCB
         ST    RWORK,CIBSIZE+FOUR(,RCIB) STORE IN PARM LIST
         LA    RWORK,ELEMLEN            ADDR, OF CIB LENGTH
         ST    RWORK,CIBSIZE+EIGHT(,RCIB) STORE IN PARM LIST
         MVI   CIBSIZE+EIGHT(RCIB),EOL  SET END OF LIST INDICATOR
         LA    RONE,CIBSIZE(,RCIB)      ADDR OF AQCTL PARM LIST
         TM    CIBVERB,CLOSE            CLOSE REQUEST          @YA10424
         BO    CONT1                    YES CONTINUE           @YA10424
         TM    PCBOFLG,PCBTSON          TSO SWAPPABLE APPL     @YA10424
         BZ    CONT1                    NO CONTINUE            @YA10424
         OI    CIBEND,NOSWAP            MAKE NON-SWAPPABLE     @YA10424
CONT1    EQU   *                                               @YA10424
         LA    RECB,CIBSIZE+FOUR(,RCIB) ECB ADDRESS
         MVI   CIBPRI,PRIOPCTL          SET OPCTL PRIORITY
         OI    CIBVERB,OPCFLAG          SET APPL PROG FLAG
         AQCTL
         NI    CIBVERB,AVTEFF-OPCFLAG   TURN OF APPL PROG FLAG
         TM    CIBVERB,CLOSE            MCPCLOSE OR CLOSEMC
         BO    NOWAIT                   YES, BYPASS WAIT
         WAIT  ECB=(RECB)               WAIT
NOWAIT   EQU   *
         SR    RENTRY,RENTRY
         STCM  RENTRY,ALL,0(RECB)       CLEAR ECB
         LA    RCIB,PCBWRKA             OP CONTROL CIB ADDRESS
         IC    RENTRY,CIBRC             COMPLETION CODE
         BR    RETURN                   RETURN TO CALLER OR USER Y05330
         EJECT
         SPACE 2
GOODOUT  EQU   *
         SR    RENTRY,RENTRY            GOOD COMPLETION CODE
EXIT     EQU   *
EXIT2    EQU   *
         L     RSAVE,SAVEREGD(,RSAVE)   RESTORE USER SAVE ADDRESS
         RETURN (14),RC=(15)
         EJECT
*                                                                     *
*        PASS WORD  CHECK ROUTINE                                     *
*                                                                     *
PASSWORD EQU   *
         CLC   AVTPASWD,BLANKS          PASS WORD REQUIRED
         BE    NOPASS                   NO, BRANCH
         LTR   R3,R3                    PASSWORD SPECIFIED
         BZ    PASSERR                  NO BRANCH TO ERROR
         SPACE 1
         ICM   RZERO,BY0+BY1,TWO(R3)    SCRAMBLE PASSWORD INTO
         ICM   RZERO,BY2,ONE(R3)        RZERO & RONE
         ICM   RZERO,BY3,SIX(R3)        *
         ICM   RONE,BY0,SEVN(R3)        *
         ICM   RONE,BY1,ZERO(R3)        *
         ICM   RONE,BY2+BY3,FOUR(R3)    *
         N     RZERO,NR                 *
         N     RONE,NR                  *
         X     RZERO,XR                 *
         X     RONE,XR                  *
         SPACE 1
         C     RZERO,AVTPASWD           FIRST HALF VALID
         BNE   PASSERR                  NO,BRANCH
         C     RONE,AVTPASWD+4          SECOND HALF VALID
         BNE   PASSERR                  NO BRANCH
NOPASS   EQU   *
         BR    RETURN                   RETURN,PASSWORK OK
PASSERR  EQU   *
         LA    RENTRY,INVPASS           ERROR COMPLETION CODE
         TM    APLCODE,TCHNGCD          ENTRY FROM TCHNG
         BO    EXIT                     YES, BRANCH
         B     EXIT2                    RETURN TO USER
         DROP  RPARM
         EJECT
*THIS SUBROUTINE DIFFERENTIATES BETWEEN TTE TYPES THAT         @Y17XARZ
*REQUIRE ACCESS THRU NCP TO DEV DEP FIELDS AND THOSE           @Y17XARZ
*TTES THAT DO NOT                                              @Y17XARZ
*THOSE THAT DO ARE  NCP ATTACHED BSC/SS TERMINALS              @Y17XARZ
*                                CTERM                         @Y17XARZ
*                                CLUSTER BSC/SS                @Y17XARZ
*FOR THOSE THAT DO REQUIRE NCP ACCESS EXIT IS TO RETURN+4      @Y17XARZ
*OTHERWISE EXIT IS TO ADDRESS IN RETURN REG.                   @Y17XARZ
         SPACE 3
TESTTYPE EQU   *                                               @Y17XARZ
         TM    TRMSTATE,TRMPREF    NCP RESOURCE                @Y17XARZ
         BZ    ZERO(RETURN)        NO EXIT TO RETURN+0         @Y17XARZ
         TM    TRMSTATE,TRMLINE    IS IT A LINE TTE            @Y17XARZ
         BO    ZERO(RETURN)        YES EXIT TO RETURN+0        @Y17XARZ
*BACK UP TO TTE PREFIX                                         @Y17XARZ
         S     RTERM,PREFIXL       BACK UP REG                 @Y17XARZ
         USING IEDNTRM,RTERM       BACK UP DSECT               @Y17XARZ
         CLI   TRMTYPE,TRMPSNA     BSC/SS TERM                 @Y17XARZ
         BE    TESTTINC            YES                         @Y17XARZ
         CLI   TRMTYPE,TRMCTERM    CTERM                       @Y17XARZ
         BE    TESTTINC            YES                         @Y17XARZ
         CLI   TRMTYPE,TRMCLUST    BSC/SS CLUSTER              @Y17XARZ
         BNE   TSTBTOP             NO                          @Y17XARZ
TESTTINC LA    RETURN,FOUR(RETURN) SET RETURN POINT AT +4      @Y17XARZ
TSTBTOP  A     RTERM,PREFIXL       POINT TO TTE POS PORTION    @Y17XARZ
         USING IEDQTRM,RTERM       RESET DSECT                 @Y17XARZ
         BR    RETURN              EXIT                        @Y17XARZ
         EJECT
*                                                                     *
*          CONSTANTS  AND  EQUATES                                    *
*                                                                     *
NOSWAP   EQU   X'10'                    FLAG TO REQUEST THAT   @YA10424
*                                       APPL BE NON-SWAPPABLE  @YA10424
CVT      EQU   16                       CVT ADDRESS
TWELVE   EQU   12                                                Y05330
DIALDIG  EQU   X'40'                    DIAL DIGITS              Y05330
ADDRCHR  EQU   X'20'                    ADDRESS CHARACTERS       Y05330
DIGITS   EQU   X'01'                                             Y05330
CHARS    EQU   X'02'                                             Y05330
NOPEN    EQU   12                       DCB NOT OPEN
ID       EQU   X'C0'                    TCAM DEB ID
PROCFLG  EQU   X'20'                    PROCESS ENTRY ID
INVTN    EQU   X'20'                    INVALID TERMINAL
TTERR    EQU   X'20'                    INVALID TERMINAL TYPE
MAXI     EQU   256
TCOPYCD  EQU   X'80'                    ENTRY FROM TCOPY
TCHNGCD  EQU   X'20'                    ENTRY FROM TCHNG
APLQETCD EQU   X'08'                    ENTRY FROM QET
PRIRTBFR EQU   X'D4'
HALFWORD EQU   3
AD       EQU   7                        ADDRESS MASK
BY0      EQU   8                        BYTE
BY1      EQU   4                            MASKS
BY2      EQU   2                                  FOR
BY3      EQU   1                                      OFFSET
ZERO     EQU   0
ONE      EQU   1                                            LENGTH
TWO      EQU   2                        FOR
FOUR     EQU   4                            PASSWORD
SIX      EQU   6                                    SCRAMBLER
SEVN     EQU   7
EIGHT    EQU   8
QE8DISP  EQU   48                       IEDQE8 DISPLACEMENT
CHARLNTH EQU   10                       DEVICE CHAR ENTRY LENGTH
SAVEREG2 EQU   28                       REG 2 DISPLACEMENT IN
*                                       SAVE AREA
SAVEREGD EQU   4                        REG 13 DISP IN SAVE AREA
PCBLCADD EQU   12                       MCP PCB/LCB/SCB ADDRESS
INVPASS  EQU   X'14'                    INVALID PASSWORD
BLANKS   DC    CL8' '                   NO PASSWORD
CLOSE    EQU   X'10'
TSO      EQU   4
NOTCAM   EQU   X'0C'
CODE     EQU   X'0C'                    AQCTL CODE FOR MOVE
*                                       AND POST
EOL      EQU   X'80'                    END OF LIST INDICATOR
OPCFLAG  EQU   X'20'
ALL      EQU   15
ELEMLEN  DC    H'28'                    CIB LENGTH
         DS    0F
NR       DC    4X'BF'                   NON BLANK MASK
XR       DC    4X'0F'                   BIT FLIPPER
MAX      DC    F'255'                   MASK FOR MOVE COMPARE
MAXIM    DC    H'256'                   MAX VALUE TO SUBTRACT
*                                       FOR MOVE LOOP
PREFIXL  DC    A(TRMPRFSZ)              LENGTH OF PREFIX TTE   @Y17XARZ
ANDMASK  DC    X'00008000'              BIT MASK FOR TCHNG     @Y17XARZ
R3OFFSET EQU   12                       OFFSET INTO SAVEAREA   @Y17XARZ
R5OFFSET EQU   16                       OFFSET INTO SAVEAREA   @Y17XARZ
R8OFFSET EQU   20                       OFFSET INTO SAVEAREA   @Y17XARZ
R14INDEX EQU   20                       OFFSET INTO SAVEAREA   @Y17XARZ
FULLWORD EQU   15                       NUMBER OF BYTES WANTED @Y17XARZ
LOOPCT   EQU   12                       PASS CTR FOR TCHNG     @Y17XARZ
SRCHSTAT EQU   0              BYTE 0 OF SRCHTBLE IS TRMSTATE   @Y17XARZ
*                             VALUE WITH LOW ORDER BITS OFF    @Y17XARZ
SRCHTYPE EQU   1              BYTE 1 OF SRCHTBLE IS TRMTYPE    @Y17XARZ
SRCHMASK EQU   2              BYTE 2 OF SRCHTBLE IS OFFSET     @Y17XARZ
*                             FROM START OF TCHNG MASK TABLE   @Y17XARZ
*                             ANCHORED AT AVTOPMSK TO MASK     @Y17XARZ
*                             FOR THAT TTE TYPE                @Y17XARZ
SRCHTBLE EQU   *              TABLE TO DETERMINE TCHNG MASK    @Y17XARZ
SPRCNTY  EQU   *                        TPROCESS EQUATE        @Y17XARZ
         DC    X'200012'      TPROCESS                         @Y17XARZ
SRCHTBEL EQU   *-SRCHTBLE               EST. ENTRY LENGTH      @Y17XARZ
SRLSTNTY EQU   *                        LIST ENTRY EQUATE      @Y17XARZ
         DC    X'400010'      TLIST                            @Y17XARZ
         DC    X'600002'      LOG                              @Y17XARZ
         DC    X'800002'      270X/EP DIAL                     @Y17XARZ
         DC    X'90000E'      NCP LINE                         @Y17XARZ
         DC    X'90200E'      NCP BSC/SS LINE                  @Y17XARZ
         DC    X'90210E'      NCP SNA LINE                     @Y17XARZ
         DC    X'100F0C'      NCP                              @Y17XARZ
         DC    X'101806'      PU                               @Y17XARZ
         DC    X'103008'      LU                               @Y17XARZ
         DC    X'104004'      BSC/SS CLUSTER                   @Y17XARZ
         DC    X'104804'      CTERM                            @Y17XARZ
         DC    X'104F04'      PRE SNA                          @Y17XARZ
         DC    X'10FF0A'      SSCP                             @Y17XARZ
SRCHEND  EQU   *                                               @Y17XARZ
SRCHMSK  EQU   X'F0'          RESETS LO BITS OF TRMSTATE       @Y17XARZ
SRCHLIM  EQU   (SRCHEND-SRCHTBLE)/SRCHTBEL NO. OF ENTERIES IN  @Y17XARZ
*                                       TABLE                  @Y17XARZ
MOVER    DS    0H
         MVC   ZERO(ONE,RWORK),ZERO(RTEMP) MOVE DATA
MOVEDD   DS    0H
         MVC   ZERO(ONE,RTEMP),ZERO(RETURN) MOVE DD FIELDS
MOVEM    DS    0H
         MVC   ZERO(ONE,RTEMP),TRMOPT       MOVE OPTIONS
MOVEOPT  DS    0H
         MVC   ZERO(ONE,RTEMP),ZERO(RWORK)  TCHNG MOVE OPTION
         EJECT
***                 DSECTS                             ***
         TAVTD
         TTRMD
         TTNTD
         TTCBD
         TDEBAPD
ETCVT    DSECT
         CVT
         TPCBD
         TPRIOR
         TPRFD
         TACSMD                                                @YA10702
IEDQCIB  DSECT                          COMMAND INPUT BUFFER(CIB)
CIBQCBA  DS    F                        OPERATOR CONTROL QCB
CIBPRI   DS    FL1                      CIB PRIORITY
CIBLINK  DS    XL3                      LINK FIELD
CIBVERB  DS    FL1                      COMMAND VERB CODE
CIBLEN   DS    XL1                      LENGTH OF CIB
CIBLRN   DS    XL1                      REL LINE NO
CIBRC    DS    XL1                      COMPLETION CODE
CIBECBA  DS    F                        ECB
CIBTNAME DS    0XL8                     TERMINAL LENGTH          Y05330
CIBTO    DS    F                        TARGET ADDRESS           Y05330
CIBFROM  DS    F                        SOURCE ADDRESS           Y05330
CIBICHNG DS    0F                       ICHNG WORK AREA          Y05330
CIBTNTX  DS    H                        TERMNAME INDEX           Y05330
CIBRQTG  DS    H                        REQUEST SEQ NUMBER       Y05330
CIBEND   DS    0XL1                     END OF CIB
CIBSIZE  EQU   CIBEND-IEDQCIB           LENGTH OF CIB
IEDQTIOT DSECT                          TIOT DD ENTRY
TIOELNGH DS    XL1                      LENGTH OF DD ENTRY
TIOESTTA DS    XL1                      STATUS BYTE A
TIOERLOC DS    XL2                      ERROR LOCATION
TIOEDDNM DS    XL8                      DDNAME
APLCOPYD DSECT                          USER PARAMETER LIST
APLCODE  DS    FL1                      ENTRY CODE
APLTERM  DS    3X                       ADDRESS OF TERMNAME
APLUSEWK DS    F                        ADDRESS OF USER WORK AREA
APLPASS  DS    F                        ADDRESS OF PASSWORD
APLRNLST DS    F                        3705 PARAMETER LIST PTR  Y05330
APLSAVE2 DS    F                        SECONDARY SAVE POINTER  SA61775
         SPACE 1
APLDDNME EQU   APLTERM                  DDNAME ADDRESS
APLRELNO EQU   APLUSEWK                 REL LINE NO
APLQPASS EQU   APLTERM
APLRCODE EQU   APLUSEWK
APLTYPE  EQU   APLUSEWK                 RETRIEVAL TYPE
         TMSKD
APLRNUMB EQU   APLPASS
         END
