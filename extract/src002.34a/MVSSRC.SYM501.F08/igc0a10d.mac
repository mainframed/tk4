 TITLE ' IGC0A10D - TCAM APP NETWORK CONTROL INTERFACE'
IGC0A10D CSECT
*A-000000-999999                                               @X31X8R0
*C THIS MODULE HAS BEEN COMPLETELY REWRITTEN FOR TCAM LEVEL 6    Y02027
*D             QCOPY FUNCTION HAS BEEN DELETED FROM THIS MODULE  X02004
*D             AND PLACED INTO IGC0010D                          X02004
*C017000,234700,238200,253200,257400,272500-273200             @Z30X8RB
*C276000,305400,308200,348500,390100,559500                    @Z30X8RB
*C577000,595900,609900,696700                                  @Z30X8RB
*C134100                                                         X02004
*A626400-636300,638100-650700,774900-777600                     SA52502
*A637200                                                         X02004
*C360900-361800                                                 SA57674
*D             RETRIEVE (CQTAM) FUNCTION HAS BEEN DELETED FROM   Y05330
*D             THIS MODULE AND PLACED INTO IGCR010D              Y05330
*C020700,031500,201600,223200-229500,235800,255600-256500,260100,Y05330
*C263700-263710,283500,306000,307800,356400,376200,382500,407700,Y05330
*C427500,486900,512100,524700,529200,551700,787500,798300-799200,Y05330
*C875700,876600,                                                 Y05330
*A021000-021300,026200-026700,031800-032100,133500-133800,148900,Y05330
*A183100,189300-189600,191200,195600-195900,213400-213900,231350-Y05330
*A232050,243970-244670,372640-373320,306600-307200,344720-345460,Y05330
*A383500,407700,422160-422940,492600-492900,497200,500800,524900-Y05330
*A525300,591300-747300,787600-788000,798600-798900,799500,867100,Y05330
*A876000-876300,876900-877200,910300                             Y05330
*D045900-057600,138600-147600,153900-154800,171900-175500,187200-Y05330
*D188100,284400-285300,306900,383400-385200,408600-409500,479700,Y05330
*D487800,591300-774000,778500-782100,849600-851400,883800-905400 Y05330
*A165700-167700,479200,910200                                   SA61775
*C164700,478800                                                 SA61775
*D165600,168300-169200                                          SA61775
*A410800                                                        SA63026
*C136000                                                       @ZA00200
*A136050-136250,841566-841572                                  @ZA00200
*C286500,378900,389700                                         @YA05454
*D677100,677800                                                @SA71116
*A682000                                                       @SA71116
*A354400                                                       @YA10247
*A357200                                                       @YA11131
*C351600,358600-359300,362800,364200                           @YA11131
*D353700-354400                                                @YA11131
*C354700                                                       @OZ09302
*C548300,635800,639300                                         @OZ09941
*A192000,746400,841600                                         @OZ09941
*A755500                                                       @OZ11203
*C176600                                                       @OZ11203
*C039900,035700,039900,056000,088900                           @G36XRRU
*A096600,098700,100100,104300,109900,174300,224700,272300      @G36XRRU
*A303800,306600,358400,365400,392700,394800,406700,450800      @G36XRRU
*A642600,819700,861000,893200,903000,967400                    @G36XRRU
*C413000                                                       @OY16438
*A884800                                                       @OY16438
*C767900-768600                                                @OZ19771
*A100100,102200                                                @OZ19771
*A698600                                                       @OZ26929
*A202300,207500                                                @OZ29214
*D202760-202820                                                @OZ29214
*A705600                                                       @OZ30765
***********************************************************************
*                                                                     *
*TITLE -- IGC0A10D - TCAM APP NETWORK CONTROL INTERFACE               *
*                                                                     *
*  MODULE NAME = IGC0A10D  (TCAM,OPERATOR CONTROL)             @G36XRRU
*                                                                     *
*  DESCRIPTIVE NAME = TCAM APP NETWORK CONTROL INTERFACE              *
*                                                                     *
*  COPYRIGHT = NONE                                                   *
*                                                                     *
*  STATUS = CHANGE LEVEL 10                                    @G36XRRU
*                                                                     *
*FUNCTION -- THIS MODULE CONTAINS ROUTINES THAT PROCESS TCAM OPERATOR *
*  CONTROL FUNCTIONS ISSUED FROM AN APPLICATION PROGRAM.  TPDATE AND  *
*  MCOUNT PROCESSING ARE ALSO HANDLED. IN ALL CASES, IGC0A10D GAINS   *
*  CONTROL AS A RESULT OF AN AIB BEING TPOSTED BY SVC 102 TO THE      *
*  OPERATOR CONTROL QCB.  FUNCTIONS HANDLED BY THIS MODULE ARE:       *
*             TCOPY      QCOPY                                        *
*             TCHNG      MRELEASE                                     *
*             ICOPY      MCOUNT                                       *
*             ICHNG      TPDATE                                       *
*             MCPCLOSE                                                *
*  FOR MRELEASE, MCPCLOSE, AND ICHNG, THIS ROUTINE XCTL'S TO THE      *
*  APPROPRIATE OP CONTROL MODULE FOR PROCESSING.                      *
*                                                                     *
*NOTES -- SEE BELOW                                                   *
*                                                                     *
*  DEPENDENCIES = AN INTERNAL REPRESENTATION OF THE EXTERNAL CHARAC-  *
*             TER SET WHICH IS EQUIVALENT TO THE ONE USED AT ASSEMBLY *
*             TIME.  THE CODING HAS BEEN ARRANGED SO THAT REDEFINI-   *
*             TION OF CHARACTER CONSTANTS, BY REASSEMBLY, WILL RESULT *
*             IN A CORRECT MODULE FOR THE NEW DEFINITIONS.            *
*                                                                     *
*  PATCH LABEL = PATCH                                         @G36XRRU
*                                                                     *
*  RESTRICTIONS = NONE                                                *
*                                                                     *
*  REGISTER CONVENTIONS --                                            *
*             ROPCAVT - OP CONTROL AVT BASE REG                       *
*             RAIB    - AIB BASE REG                                  *
*             RTERM   - TERMINAL ENTRY BASE REG                       *
*             RAVT    - TCAM AVT BASE REG                             *
*             RBASE   - MODULE BASE REG                               *
*             RSAVE   - OP CONTROL SAVE AREA PTR                      *
*                                                                     *
*ATTRIBUTES -- REENTRANT, SUPERVISOR MODE                             *
*                                                                     *
*ENTRY POINT -- IGC0A10D                                              *
*                                                                     *
*  PURPOSE = SEE FUNCTION                                             *
*                                                                     *
*  LINKAGE = XCTL FROM IGC0010D, IGCT010D & IGCT110D                  *
*                                                                     *
*INPUT -- AIB POINTED TO BY OPCCOPCE (CURRENT ELEMENT PTR) IN THE     *
*  OPERATOR CONTROL AVT.  REG 1 CONTAINS PTR TO THE OP CONTROL AVT.   *
*                                                                     *
*OUTPUT -- AIB CONTAINING FUNCTIONAL DEPENDENT DATA.                  *
*                                                                     *
*EXIT -- NORMAL = RETURN TO IGC0010D WITH THE FOLLOWING EXCEPTIONS:   *
*             MRELEASE - XCTL TO IGCR010D                             *
*             MCPCLOSE - XCTL TO IGCZ010D                             *
*             ICHNG    - XCTL TO IGCI010D                             *
*             TCHNG-IF STATION ATTACHED TO A 3705- XCTL TO IGCT010D   *
*                                                                     *
*EXIT -- ERROR = IGC0710D                                             *
*                                                                     *
*EXTERNAL REFERENCES -- SEE BELOW                                     *
*                                                                     *
*  ROUTINES = IEDQCA                                                  *
*             IGCT010D                                                *
*             XMPOST                                                  *
*                                                                     *
*  DATA AREAS = AIB                                                   *
*               PEWA                                                  *
*               TERM ENTRY                                            *
*                                                                     *
*  CONTROL BLOCKS = AVT       DCB                                     *
*                   CVT       DEB                                     *
*                   QCB       TIOT                                    *
*                   PCB       MSK                              @G36XRRU
*                                                                     *
*TABLES -- NONE                                                       *
*                                                                     *
*MACROS -- NONE                                                       *
*                                                                     *
*CHANGE ACTIVITY -- SEE ABOVE                                         *
*                                                                     *
*************************END OF SPECIFICATIONS*************************
         EJECT
         SPACE 3
RZERO    EQU   0                        REGISTER ZERO
RPARM    EQU   1                        INPUT PARM REG           Y02027
RONE     EQU   1                        WORK REG               @G36XRRU
ROPCAVT  EQU   2                        OP CTL AVT BASE REG      Y02027
RAIB     EQU   3                        AIB BASE REG             Y02027
R3       EQU   3                        WORK REG               @G36XRRU
RTO      EQU   4                        'TO' AREA PTR FOR MOVES  Y02027
RDEB     EQU   4                        DEB POINTER            @OZ19771
RANDREG  EQU   4                        WORK REG FOR TCHNG     @G36XRRU
RTERM    EQU   5                        TERMINAL TABLE
RILIST   EQU   5                        INVITE LIST POINTER    @Z30X8RB
RPRF     EQU   5                        BUFFER REGISTER        @OZ19771
RDCB     EQU   6                        DCB/LGB POINTER        @Z30X8RB
RWORK    EQU   6                        WORK REGISTER            Y02027
RWORK7   EQU   7                        WORK REG                 Y02027
RSRCHARG EQU   7                        SEARCH ARG REG - TCHNG @G36XRRU
RFROM    EQU   8                        'FROM' AREA PTR FOR MOVE Y02027
RAVT     EQU   9                        ADDRESS VECTOR TABLE
RTEMP    EQU   10                       WORK REG
RCOUNT   EQU   11                       WORK REG
RBASE    EQU   12                       BASE REG
RSAVE    EQU   13                       SAVE AREA ADDRESS
RETURN   EQU   14                       RETURN ADDRESS
RETWORK  EQU   14                       WORK REG               @G36XRRU
RETWRK   EQU   14                       WORK REG               @G36XRRU
RENTRY   EQU   15                       ENTRY POINT/ COMPLETION CODE
         SPACE 3
         USING IEDQAVTD,RAVT            TCAM ADDRESS VECTOR TBL
         USING IEDQAIB,RAIB             AIB ADDRESSABILITY       Y02027
         USING IEDQOPCD,ROPCAVT
         USING IEDQTRM,RTERM            TERMINAL TABLE
         SPACE 2
         BALR  RBASE,RZERO              ESTABLISH
         USING *,RBASE                  ADDRESSABILITY
IGC0A10D IEDHJN ENTER
         LR    ROPCAVT,RPARM            GET OP CONTROL AVT PTR   Y02027
         L     RAVT,OPCAVTPT            GET TCAM AVT PTR         Y02027
         LA    RSAVE,OPCSAVE            RESTORE SAVE AREA PTR    Y02027
         L     RAIB,OPCCOPCE            OP CTL ELEMENT PTR       Y02027
         LA    RWORK,VERBTBL            COMMAND VERB TABLE     @ZA00200
         SH    RAIB,HTWELVE             ADJUST TO PT TO VERB   @ZA00200
         TM    OPCSPEC,OPCRSTRT         CK FOR RESTART         @ZA00200
         BO    CHKVERB                  BR YES TO PROCESS ICHNG@ZA00200
*                                       OR MRELEASE INCIDENT RECOZ00200
         L     RAIB,OCCIB-IEDQOPCE+TWELVE(,RAIB)  PT TO AIB    @ZA00200
         LA    RWORK,AIBKEY-IEDQAIB     BACKUP TO THE BEGINNING  Y02027
         SR    RAIB,RWORK               OF THE AIB PROPER        Y02027
         L     RETURN,AIBRNRET          GET POSS RET ADDRESS     Y02027
         TM    AIBCOMCD,RNRETCD         IS THIS RETURN FROM 3705 Y02027
         BCR   ONE,RETURN               YES, BRANCH TO FUNCTION  Y02027
         SPACE 1
         L     RTEMP,CVTPTR             CVT PTR                  Y02027
         L     RTEMP,CVTAQAVT-CVTMAP(RTEMP)  GET TCX PTR         Y02027
         LH    RTEMP,TCXSZAIB-IEDQTCX(RTEMP) GET AIB SIZE        Y02027
         LA    RCOUNT,AIBDATA-IEDQAIB   SUBTRACT PREFIX TO GET   Y02027
         SR    RTEMP,RCOUNT             MAX LEN FOR DATA AREA    Y02027
         ST    RTEMP,AIBXMLST           STORE FOR REFERENCE      Y02027
         SPACE 1
         LA    RWORK,VERBTBL            GET PTR TO COMM CD TABLE Y02027
CHKVERB  EQU   *                                                 Y02027
         CLC   ZERO(ONE,RWORK),AIBCOMCD CHECK VERB FOR MATCH     Y02027
         BE    GOODVERB                 YES, CONTINUE PROCESSING Y02027
         LA    RWORK,TABLEN(,RWORK)     POINT TO NEXT VERB       Y02027
         CLI   ZERO(RWORK),TABEND       END OF TABLE             Y02027
         BNE   CHKVERB                  NO, GO CHECK NEXT        Y02027
         SPACE 1
VERBERR  EQU   *                                                 Y02027
         LA    RZERO,CODEFF             SET CODE FOR ERR MSG     Y02027
         MVC   OPCLDNME+3(TWO),WRXCTL   MOD ID = MSG ROUTER      Y02027
         B     XCTL                     GO TO ERROR WRITER       Y02027
         SPACE 1
GOODVERB EQU   *                                                 Y02027
         MVC   OPCLDNME+3(TWO),ONE(RWORK)    SET XCTL MOD ID     Y02027
MODTEST  EQU   *                                                 Y02027
         CLI   ONE(RWORK),ZERO          IS FUNCTION HANDLED      Y02027
*                                       BY A10D                  Y02027
         BNE   XCTL                     NO, BRANCH               Y02027
         SPACE 1
*                                                              * Y02027
*  FOR TCOPY, QCOPY, AND FIRST PASS FOR TCHNG...               * Y02027
*        CHECK VALIDITY OF SPECIFIED TERMINAL NAME AND,        * Y02027
*        IF VALID, GET TERMINAL ENTRY ADDRESS.                 * Y02027
*                                                              * Y02027
         SPACE 1
TRMOFST  EQU   *                                                 Y02027
         TM    AIBFLAG1,AIBTNT          ENTRY FROM FUNCTION REQ  Y02027
*                                       TERMNAME LOOKUP          Y02027
         BZ    TCHNGMVE                 BRANCH IF NO             Y02027
         CLI   AIBCOMCD,AIBQCOPY        QCOPY FUNCTION           Y02027
         BNE   TRMOFST2                 NO, BRANCH               Y02027
         CLC   AIBLIMIT(2),AVTFZERO     LIMIT FUNCTION           Y02027
         BNE   QLIMIT                   YES, BRANCH              Y02027
TRMOFST2 EQU   *                                                 Y02027
*                                                              * Y02027
*  GO TO SUBROUTINE IN IEDQCA TO GET NAME OFFSET AND TERM      * Y02027
*  ENTRY ADDRESS.                                              * Y02027
*                                                              * Y02027
         LR    RTO,RAVT                 SET TCAM AVT PTR         Y02027
         MVI   OPCDOUBL,BLANK           BLANK WORK             @OZ11203
         MVC   OPCDOUBL+1(SEVN),OPCDOUBL  FIELD IN OPC AVT     @OZ11203
         L     RILIST,AVTRNMPT          GET TERMNAME TBL ADDR  @OZ11203
         SR    RENTRY,RENTRY            CLEAR REGISTER         @OZ11203
         IC    RENTRY,TNTENLEN-IEDQTNTD(,RILIST) GET ENTRY LEN @OZ11203
         BCTR  RENTRY,ZERO              DECREMENT BY ONE FOR EX@OZ11203
         EX    RENTRY,TERMMOVE          MOVE TERM NAME         @OZ11203
*                                       SUBROUTINE               Y02027
         LR    RTERM,RAIB               SAVE AIB PTR             Y02027
         L     RAIB,OPCCOPCE            SET PTR TO OPCE          Y02027
         L     RENTRY,OPCTOFLK          GET SUBROUTINE ENTRY ADD Y02027
         BALR  RETURN,RENTRY            GO GET OFFSET            Y02027
         SPACE 2
GOODNAME EQU   *                                                 Y02027
         B     GOTTRMAD                 BR IF TERM NAME VALID    Y02027
BADNAME  EQU   *                                                 Y02027
         LR    RAIB,RTERM               RESTORE AIB PTR          Y02027
BADNAME1 EQU   *                                               @G36XRRU
         LA    RENTRY,INVALTRM          SET ERROR CODE           Y02027
         B     POSTAPP                  PREPARE TO EXIT          Y02027
GOTTRMAD EQU   *                                                 Y02027
         LR    RAIB,RTERM               RESTORE AIB PTR          Y02027
         L     RTO,OPCCOPCE             CURRENT ELEMENT PTR      Y02027
         MVC   AIBTNDX(TWO),OCTRMTBL-IEDQOPCE(RTO)   GET TERMINALY02027
*                                       OFFSET                   Y02027
         LR    RTERM,RPARM              GET TERM ENTRY ADDRESS   Y02027
         CLI   AIBCOMCD,AIBQCOPY        FOR QCOPY                Y02027
         BE    QCOPY                    YES, BRANCH              Y02027
         CLI   AIBCOMCD,AIBICOPY        ICOPY FUNCTION           Y02027
         BE    ICOPYRN                  YES, BRANCH              Y02027
         CLI   AIBCOMCD,AIBICPYX        EXTENDED ICOPY         @OZ09941
         BE    ICOPYRN                  YES, BRANCH            @OZ09941
         ST    RTERM,AIBNAME            SAVE  TERM ENTRY ADD     Y02027
         SPACE 1
*                                                              * Y02027
*                   COMPUTE TERMINAL ENTRY SIZE                * Y02027
*                                                              * Y02027
         SPACE 1
         TM    TRMSTATE,TRMLIST         DIST OR CASCADE LIST     Y02027
         BNO   SINGLE                   BRANCH IF NO             Y02027
LISTENT  EQU   *                                                 Y02027
         TM    AIBCOMCD,AIBTCHNG        TCOPY OR TCHNG           Y02027
         BO    TCHNGMVE                 BRANCH IF TCHNG          Y02027
         LA    RCOUNT,TLISTEN-IEDQTRM   BASIC SEGMENT LENGTH     Y02027
         SR    RWORK,RWORK              CLEAR REGISTER           Y02027
         LH    RWORK,TLISTCNT           NUMBER OF ENTRIES        Y02027
         SLL   RWORK,ONE                MULTIPLY BY 2 FOR LENGTH Y02027
         AR    RCOUNT,RWORK             TOTAL LIST ENTRY LENGTH  Y02027
         STH   RCOUNT,AIBCOUNT          SAVE BYTE COUNT          Y02027
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB   Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         LA    RTO,AIBDATA              SET REGISTERS FOR MOVE   Y02027
         LR    RFROM,RTERM              SUBROUTINE               Y02027
         BAL   RETURN,TMLOOP            GO COPY TLIST ENTRY INTO Y02027
*                                       AIB                      Y02027
         B     GOODEXIT                 PREPARE TO RETURN        Y02027
         SPACE 2                                                 Y02027
SINGLE   EQU   *                                                 Y02027
         TM    TRMSTATE,TRMPREF         3705 RESOURCE          @OZ29214
         BZ    NOT3705                  NO, BRANCH             @OZ29214
         LA    RENTRY,TRMPRFSZ          TTE PREFIX SIZE        @ZM46776
         SLR   RTERM,RENTRY             POINT TO PREFIX        @ZM46776
         CLI   TRMTYPE-IEDNTRM(RTERM),TRMGRP LGB ENTRY         @ZM46776
         BNE   NOLGB                    NO                     @ZM46776
         LA    RENTRY,INVALTRM          SET POSS ERROR RETURN CD Y02027
         B     POSTAPP                  TERMINATE REQUEST      @ZM46776
         SPACE 1
NOLGB    EQU   *                                                 Y02027
         AR    RTERM,RENTRY             RESTORE TTE POINTER    @ZM46776
NOT3705  EQU   *                                               @OZ29214
         TM    AIBCOMCD,AIBTCHNG        TCHNG FUNCTION           Y02027
         BO    TCHANGE                  YES, BRANCH              Y02027
         LA    RTO,AIBDATA              PTR TO RECIPIENT AREA    Y02027
         MVC   AIBDATA(TRMOPNO-IEDQTRM),TRMSTATE    COPY BASIC   Y02027
*                                       SEGMENT OF TERM ENTRY    Y02027
         LA    RCOUNT,TRMOPNO-IEDQTRM   SET COUNTER REG          Y02027
         AR    RTO,RCOUNT               BUMP RECIPIENT AREA PTR  Y02027
         TM    TRMSTATE,TRMOPTFN        ARE OPTION FIELDS USED   Y02027
         BNO   DEVDEP                   BRANCH IF NO             Y02027
         LA    RCOUNT,TRMOPT-TRMOPNO(,RCOUNT)    ADD OPTION      Y02027
*                                       CONTROL INFO BYTE COUNT  Y02027
         MVC   ZERO(TRMOPT-TRMOPNO,RTO),TRMOPNO  MOVE OPT INFO   Y02027
         LA    RTO,TRMOPT-TRMOPNO(,RTO) BUMP 'TO' AREA PTR       Y02027
         LA    RFROM,TRMOPT             START OF OPTION OFFSETS  Y02027
         SR    RPARM,RPARM              CLEAR REGISTER           Y02027
         IC    RPARM,TRMOPNO            NUMBER OF OPTION OFFSETS Y02027
         AR    RCOUNT,RPARM             BUMP BYTE COUNTER        Y02027
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB   Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         BCTR  RPARM,RZERO              DECREMENT FOR EXECUTE    Y02027
         EX    RPARM,MOVEM              MOVE OPTION OFFSETS      Y02027
         LA    RTO,ONE(RPARM,RTO)       BUMP 'TO' AREA PTR       Y02027
*                                       TO NEXT EMPTY BYTE       Y02027
DEVDEP   EQU   *                                                 Y02027
         STH   RCOUNT,AIBCOUNT          SAVE BYTE COUNT          Y02027
         BAL   RETURN,TESTTYPE          CHECK TO SEE IF TRIP   @G36XRRU
*                                       TO NCP IS REQUIRED     @G36XRRU
         B     DEVDEP0X                 RETURN HERE IF NOT     @G36XRRU
*        RETURN HERE IF TRIP TO NCP IS REQUIRED                @G36XRRU
*                                                              * Y02027
*SET UP TO GO TO 3705-TCOPY SERVICE ROUTINE TO GET DEVICE      @Z30X8RB
* DEPENDENT FIELDS COPIED INTO THE AIB                         * Y02027
*                                                              * Y02027
         LA    RTO,AIBDATA              GET 'TO' AREA PTR AND    Y02027
         STM   RTO,RTERM,AIBRNTO        SAVE TO & FROM AREA PTRS Y02027
         XC    AIBCOMCD(THREE),AIBCOMCD SET ZEROES IN COMMAND    Y02027
*                                       VERB & ENTRY CODE FIELDS Y02027
         BAL   RETURN,EXITT0            EXIT TO IGCT010D         Y02027
         SPACE 1
RNTCOPY  EQU   *                                                 Y02027
         MVI   AIBCOMCD,AIBTCOPY        RESET COMMAND CODE       Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         ICM   RENTRY,BY3,AIBOPRC       GET RETURN CODE          Y02027
         BNZ   POSTAPP                  BRANCH IF ERROR          Y02027
         L     RTERM,AIBRNFRO           RESTORE TERM ENTRY PTR   Y02027
         LA    RTO,AIBDATA              ADJUST AIB               Y02027
         SR    RZERO,RZERO              CLEAR REGISTER           Y02027
         ICM   RZERO,HALFWORD,TRMDEVFL-IEDQTRM(RTO)  GET DEV DEP Y02027
*                                       DEPENDENT FIELDS FROM    Y02027
*                                       AIB DATA AREA            Y02027
         LA    RTO,TRMOPNO-IEDQTRM(,RTO)     DATA AREA POINTER   Y02027
         TM    TRMSTATE,TRMOPTFN        TO POINT TO              Y02027
         BNO   RNDDCHK                  THE BEGINNING OF         Y02027
         SR    RPARM,RPARM              THE                      Y02027
         IC    RPARM,TRMOPNO            DEVICE DEPENDENT         Y02027
         LA    RTO,TRMOPT-TRMOPNO(RPARM,RTO) FIELDS              Y02027
         SPACE 1
*****************************************************************Y02027
*ON RETURN FROM TCOPY ROUTINE, LOCATE NEXT EMPTY FIELD IN AIB  @Z30X8RB
* AND MOVE IN OPTION ENTRY FIELDS (IF ANY EXIST )                Y02027
*****************************************************************Y02027
         SPACE 1
RNDDCHK  EQU   *                                                 Y02027
         LR    RWORK7,RTO               SET REG FOR DDCOUNT RTN  Y02027
         LTR   RZERO,RZERO              ARE THERE DEV DEP FLDS   Y02027
         BZ    OPTST                    NO, BRANCH               Y02027
         B     DDGORN                   PREPARE TO PROCESS DD'S  Y02027
         SPACE 1
*****************************************************************Y02027
* MOVE IN DEVICE DEPENDENT FIELDS AND THEN                     @Z30X8RB
* PROCESS OPTION ENTRY FIELDS.                                   Y02027
*****************************************************************Y02027
         SPACE 1
DEVDEP0X EQU   *                                                 Y02027
         LA    RWORK7,TRMOPNO-IEDQTRM(RTERM) GET POINTER TO      Y02027
         TM    TRMSTATE,TRMOPTFN        BEGINNING OF             Y02027
         BNO   DDGO                     DEVICE                   Y02027
         SR    RPARM,RPARM              DEPENDENT                Y02027
         IC    RPARM,TRMOPNO            FIELDS IN THE            Y02027
         LA    RWORK7,TRMOPT-TRMOPNO(RPARM,RWORK7)  TERM ENTRY   Y02027
DDGO     EQU   *                                                 Y02027
         LR    RFROM,RWORK7             SAVE PTR FOR MOVE        Y02027
         SR    RZERO,RZERO              CLEAR REGISTER           Y02027
         ICM   RZERO,HALFWORD,TRMDEVFL  ARE THERE DD FIELDS      Y02027
         BZ    OPTST                    NO, BRANCH               Y02027
         SPACE 1
DDGORN   EQU   *                                                 Y02027
         BAL   RETURN,DDCOUNT           GO GET LEN OF DD FIELDS  Y02027
         LR    RWORK7,RCOUNT            SAVE COUNT               Y02027
         AH    RWORK7,AIBCOUNT          ADD LEN TO TOTAL BYTE    Y02027
         STH   RWORK7,AIBCOUNT          COUNT AND SAVE IN AIB    Y02027
         C     RWORK7,AIBXMLST          CHECK FOR END OF AIB     Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         BAL   RETURN,TESTTYPE          CHECK TO SEE IF DD FLD @G36XRRU
*                                       HAVE BEEN MOVED        @G36XRRU
         B     MVDD0X                   NO, BRANCH             @G36XRRU
         B     OPTST                    YES, CHECK OPTION FLD  @G36XRRU
MVDD0X   EQU   *                                                 Y02027
         BAL   RETURN,TMLOOP            GO MOVE DD FIELDS        Y02027
         SPACE 1
OPTST    EQU   *                                                 Y02027
         LH    RWORK7,AIBCOUNT          PICK UP TOTAL BYTE COUNT Y02027
         LA    RTEMP,AIBDATA            SET UP PTR TO            Y02027
         LA    RTO,ZERO(RWORK7,RTEMP)   NEXT EMPTY BYTE IN AIB   Y02027
         TM    TRMSTATE,TRMOPTFN        ARE OPTION FIELDS USED   Y02027
         BNO   GOODEXIT                 NO, BRANCH               Y02027
         STH   RWORK7,TRMOPTBL-IEDQTRM(RTEMP)   SET PTR TO OPTIONY02027
*                                       ENTRIES IN AIB           Y02027
         BAL   RETURN,CHECKOFF          GO FIND TOTAL LEN OF     Y02027
*                                       OPTION ENTRIES - RETURN  Y02027
*                                       WITH LEN IN RCOUNT       Y02027
         LH    RFROM,TRMOPTBL           GET ENTRY OFFSET       @YA05454
         N     RFROM,AVTCLRHI           CLEAR HI HALF          @YA05454
         A     RFROM,AVTOPTPT           ADD OPT TBL ADDR       @YA05454
         LR    RTEMP,RCOUNT             SAVE COUNT               Y02027
         AH    RTEMP,AIBCOUNT           UPDATE TOTAL COUNT       Y02027
         STH   RTEMP,AIBCOUNT           SAVE BACK IN AIB         Y02027
         C     RTEMP,AIBXMLST           CHECK FOR END OF AIB     Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         BAL   RETURN,TMLOOP            GO MOVE OPTION ENTRIES   Y02027
         B     GOODEXIT                 EXIT                     Y02027
         SPACE 2
***************************************************************  Y02027
* THIS CODE PROCESSES THE 1ST PASS FOR TCHNG (SINGLE ENTRIES)  * Y02027
* IT OBTAINS THE TOTAL LENGTH OF DATA TO BE MOVED FROM THE     * Y02027
* USER'S WORKAREA.                                               Y02027
***************************************************************  Y02027
TCHANGE  EQU   *                                                 Y02027
         LA    RCOUNT,TRMOPNO-IEDQTRM   GET LEN OF BASIC SEGMENT Y02027
         TM    TRMSTATE,TRMOPTFN        ARE OPTION FIELDS USED   Y02027
         BNO   TSIZE2                   NO, BRANCH               Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
         IC    RTEMP,TRMOPNO            GET NO. OF OPT OFFSETS   Y02027
         LA    RCOUNT,TRMOPT-TRMOPNO(RTEMP,RCOUNT)  UPDATE COUNT Y02027
TSIZE2   EQU   *                                                 Y02027
         STH   RCOUNT,AIBCOUNT          SAVE COUNT               Y02027
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB   Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         BAL   RETURN,TESTTYPE          CHECK TO SEE IF TRIP   @G36XRRU
*                                       TO 3705 RTN NEEDED     @G36XRRU
         B     DDSIZE0X                 RETURN HERE IF NO      @G36XRRU
*        RETURN HERE IF YES
         LA    RTO,AIBDATA              SET TO ADD FOR 3705    @G36XRRU
*                                       SERVICE ROUTINE          Y02027
         STM   RTO,RTERM,AIBRNTO        SET 'TO' AND 'FROM' ADDS Y02027
*                                       IN AIB                   Y02027
         XC    AIBCOMCD(THREE),AIBCOMCD SET FIELDS TO LOOK LIKE  Y02027
*                                       TCOPY REQUEST            Y02027
         BAL   RETURN,EXITT0            EXIT TO IGCT010D         Y02027
         SPACE 1
*****************************************************************Y02027
* GO TO IGCT010D TO GET DEVICE DEPENDENT FIELDS MOVED TO AIB     Y02027
* SO THAT DD FIELD LENGTH CAN BE CALCULATED.                     Y02027
*****************************************************************Y02027
         SPACE 1
RNTSIZE  EQU   *                                                 Y02027
         MVI   AIBCOMCD,AIBTCHNG        RESTORE TCHNG COMM CD    Y02027
         MVI   AIBFLAG1,AIBGETSZ        AND SIZE FUNCTION CODE   Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER         @Z30X8RG
         ICM   RENTRY,BY3,AIBOPRC       GET RETURN CODE        @Z30X8RG
         BNZ   POSTAPP                  BRANCH IF ERROR        @Z30X8RG
         L     RTERM,AIBRNFRO           RESTORE TERM ENTRY PTR   Y02027
         LA    RTO,AIBDATA              AND AIB DATA AREA PTR    Y02027
         SR    RZERO,RZERO             CLEAR REGISTER            Y02027
         ICM   RZERO,HALFWORD,TRMDEVFL-IEDQTRM(RTO)  GET DEV DEP Y02027
*                                       DEPENDENT FIELDS FROM    Y02027
*                                       AIB DATA AREA            Y02027
         LA    RTO,TRMOPNO-IEDQTRM(,RTO)     DATA AREA POINTER   Y02027
         TM    TRMSTATE,TRMOPTFN        TO POINT TO              Y02027
         BNO   RNDDCHK1                 THE BEGINNING OF         Y02027
         SR    RPARM,RPARM              THE                      Y02027
         IC    RPARM,TRMOPNO            DEVICE DEPENDENT         Y02027
         LA    RTO,TRMOPT-TRMOPNO(RPARM,RTO) FIELDS              Y02027
RNDDCHK1 EQU   *                                                 Y02027
         LR    RWORK7,RTO               SET REGISTER FOR DDCOUNT Y02027
         SR    RPARM,RPARM              CLEAR REGISTER           Y02027
         ICM   RPARM,HALFWORD,TRMDEVFL  GET DEV DEP FIELDS       Y02027
*                                       TERMINAL ENTRY           Y02027
         OR    RZERO,RPARM              COMBINE FLAGS SET BY RN  Y02027
*                                       FUNCTIONAL ROUTINE       Y02027
         LTR   RZERO,RZERO              DD FIELDS PRESENT        Y02027
         BZ    TCHNOPT1                 NO, BRANCH               Y02027
         B     DDRN                                              Y02027
DDSIZE0X EQU   *                                                 Y02027
         LA    RWORK7,TRMOPNO-IEDQTRM(RTERM) GET POINTER TO      Y02027
         TM    TRMSTATE,TRMOPTFN        BEGINNING OF             Y02027
         BNO   DD0X                     DEVICE                   Y02027
         SR    RPARM,RPARM              DEPENDENT                Y02027
         IC    RPARM,TRMOPNO            FIELDS IN THE            Y02027
         LA    RWORK7,TRMOPT-TRMOPNO(RPARM,RWORK7)  TERM ENTRY   Y02027
DD0X     EQU   *                                                 Y02027
         LR    RFROM,RWORK7             SAVE PTR FOR MOVE
         SR    RZERO,RZERO              CLEAR REGISTER           Y02027
         ICM   RZERO,HALFWORD,TRMDEVFL  ARE THERE DD FIELDS      Y02027
         BZ    TCHNOPT1                 NO, BRANCH               Y02027
DDRN     EQU   *                                                 Y02027
         BAL   RETURN,DDCOUNT           GO GET LEN OF DD FIELDS  Y02027
         AH    RCOUNT,AIBCOUNT          ADD LEN TO TOTAL BYTE    Y02027
         STH   RCOUNT,AIBCOUNT          COUNT AND SAVE IN AIB    Y02027
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB   Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         SPACE 1
TCHNOPT1 EQU   *                                                 Y02027
         TM    TRMSTATE,TRMOPTFN        ARE OPTION FIELDS USED   Y02027
         BNO   GOODEXIT                 BRANCH IF NO OPTIONS     Y02027
*                                       ALL FIELDS HAVE BEEN     Y02027
*                                       CALCULATED               Y02027
         BAL   RETURN,CHECKOFF          GET LEN OF OPT ENTRIES   Y02027
         AH    RCOUNT,AIBCOUNT          UPDATE TOTAL             Y02027
         STH   RCOUNT,AIBCOUNT          BYTE COUNT               Y02027
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB   Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         B     GOODEXIT                 EXIT                     Y02027
*****************************************************************Y02027
* THIS CODE IS EXECUTED FOR LIST ENTRIES OR 2ND PASS FOR SINGLE  Y02027
* ONES.  THE CHANGED TERMINAL ENTRY & OPTION FIELD ENTRIES ARE   Y02027
* MOVED FROM THE AIB. IF THE STATION IS ASSOCIATED WITH A 3705 @G36XRRU
* EXIT (WITH NO RETURN) TO IGCT010D FOR REPLACEMENT OF DD FIELDS Y02027
*****************************************************************Y02027
         SPACE 2
TCHNGMVE EQU   *                                                 Y02027
         CLI   AIBCOMCD,AIBTCHNG        TCHANGE FUNCTION         Y02027
         BNE   CHKICOPY                 NO, BRANCH               Y02027
         LA    RFROM,AIBDATA            USER DATA  =FROM
         L     RTERM,AIBNAME            GET ADDR OF TERM ENTRY   Y02027
         LA    RTERM,ZERO(,RTERM)       CLEAR HIGH ORDER BYTE    Y02027
         SR    RSRCHARG,RSRCHARG      CLEAR TO GET ARGUMENT    @G36XRRU
         IC   RSRCHARG,TRMSTATE  PUT TTE TYPE IN THE ARG       @G36XRRU
         LA   RANDREG,SRCHMSK      GET MASK TO GET RID         @G36XRRU
*                                       OF UNWANTED BITS       @G36XRRU
         NR    RSRCHARG,RANDREG       REMOVE UNWANTED BITS     @G36XRRU
         SLL   RSRCHARG,BY0             MAKE ROOM              @G36XRRU
         TM    TRMSTATE,TRMPREF       IS TTE AN NCP RESRCE     @G36XRRU
         BZ    NOPREFIX               NO                       @G36XRRU
         LR    RETWRK,RTERM           PRESERVE TTE REG         @G36XRRU
         S     RTERM,PREFIXL          BACK UP TO PREFIX        @G36XRRU
         USING IEDNTRM,RTERM          POINT DSECT AT PREFIX    @G36XRRU
         ICM   RSRCHARG,BY3,TRMTYPE     PUT QUALIFYING TYPE    @G36XRRU
*                                       IN THE ARGUMENT        @G36XRRU
         LR    RTERM,RETWRK           RESET TTE POINTER        @G36XRRU
         USING IEDQTRM,RTERM          RESET DSECT              @G36XRRU
NOPREFIX LA    RETWRK,SRCHLIM         SET UP LOOP COUNT        @G36XRRU
         LA    RWORK,SRCHTBLE         POINT AT SRCHTABLE       @G36XRRU
SRCHCLC  CLM   RSRCHARG,BY2+BY3,SRCHSTAT(RWORK) TTE TYPE=?     @G36XRRU
         BE    SRCHFND                 YES                     @G36XRRU
         LA    RWORK,SRCHTBEL(RWORK)   POINT AT NEXT ENTRY     @G36XRRU
         BCT   RETWRK,SRCHCLC          LOOP TILL END OF TABLE  @G36XRRU
         B     BADNAME1                INVALID ENTRY TYPE      @G36XRRU
SRCHFND  SR    RETWRK,RETWRK           CLEAR WORK REG          @G36XRRU
         IC    RETWRK,SRCHMASK(RWORK)  GET OFFSET TO MASK      @G36XRRU
         A     RETWORK,AVTOPMSK        POINT TO MASK TABLE     @G36XRRU
         LR    RWORK,RFROM             USER DATA               @G36XRRU
         CLM   RSRCHARG,BY2+BY3,SRLSTNTY        LIST ENTRY?    @G36XRRU
         BNE   TNOLGB              NO                          @G36XRRU
         SR    RTEMP,RTEMP              CLEAR FOR IC           @G36XRRU
         ICM   RTEMP,HALFWORD,FOUR(RWORK) NO OF 2- BYTE        @G36XRRU
*                                       ENTERIES IN U. LIST    @G36XRRU
         TM    MSK1-MSKMASK(RETWRK),MSKCNT  MODIFY COUNT?      @G36XRRU
         BZ    NOCOUNTM     NO                                 @G36XRRU
         STH   RTEMP,TLISTCNT  UPDATE COUNT                    @G36XRRU
NOCOUNTM TM    MSK1-MSKMASK(RETWRK),MSKLIST MODIFY TLIST?      @G36XRRU
         BZ    TCHNGOUT               NO GET OUT               @ZM46809
         SLL   RCOUNT,1           MULT BY SIZE OF ONE ENTRY
         LR    RWORK7,RCOUNT            SET RECEIVING AREA CT  @G36XRRU
         LR    RWORK,RTERM        COPY TO ADDRESS
         LR    RTEMP,RFROM              FROM ADDRESS           @YA11131
         MVCL  RWORK,RTEMP              MOVE LIST ENTRY        @G36XRRU
         B     TCHNGOUT                 EXIT                   @ZM46809
TNOLGB   EQU   *                                               @G36XRRU
         SLR   RTEMP,RTEMP         CLEAR REGISTER              @G36XRRU
         STCM  RTEMP,THREE,AIBFLAG1 CLEAR FLAG1 & FLAG2        @G36XRRU
         TM    TRMDEVFL,DIALDIG    DIAL DIGITS IN TERM ENTRY   @G36XRRU
         BZ    TCKADDR             NO, BRANCH                  @G36XRRU
         OI    AIBFLAG2,DIGITS     INDICATE DIAL DIGITS        @G36XRRU
TCKADDR  EQU   *                                               @G36XRRU
         TM    TRMDEVFL,ADDCHAR   ADDR CHARS IN TERM ENTRY     @G36XRRU
         BZ    TNOADDR             NO, BRANCH                  @G36XRRU
         OI    AIBFLAG2,CHARS      INDICATE ADDR CHARACTERS    @G36XRRU
TNOADDR  EQU   *                                               @G36XRRU
         CLM   RSRCHARG,BY2+BY3,SPRCNTY IS IT A PROCESS ENTRY? @G36XRRU
         BNE   NOTPROC             BRANCH IF NOT               @G36XRRU
         MVC   TRMSTAT-IEDQTRM(FOUR,RWORK),TRMSTAT             @YA10247
*                                       SAVE PEWA ADDRESS      @YA10247
NOTPROC  EQU   *                                               @YA10247
         ST    R3,R3OFFSET(RSAVE)  SAVE REGISTER USED          @G36XRRU
         ST    RTERM,R5OFFSET(RSAVE) SAVE REG USED             @G36XRRU
         ST    RWORK,R8OFFSET(RSAVE) SAVE REG USED             @G36XRRU
         LA    RTEMP,LOOPCT        INIT LOOP COUNTER           @G36XRRU
         L     R3,ANDMASK          INITIALIZE TEST MASK        @G36XRRU
         LA    RTERM,TRMINSEQ      POINT TO RCVING AREA        @G36XRRU
         LA    RWORK,FOUR(RWORK)   POINT TO SENDING AREA       @G36XRRU
TSTMVE   EQU   *                                               @OY16438
         SR    RENTRY,RENTRY        CLEAR FOR IC               @OY16438
         ICM   RENTRY,HALFWORD,ZERO(RETWRK) GET MASK           @OY16438
         NR    RENTRY,R3            CAN 1 MODIFY THIS BYTE     @G36XRRU
         BZ    NOMOVE               NO                         @G36XRRU
         MVC   ZERO(ONE,RTERM),ZERO(RWORK) YES MOVE IT         @G36XRRU
NOMOVE   SRL   R3,ONE               SHIFT TO NEXT MASK BIT     @G36XRRU
         LA    RTERM,ONE(RTERM)     INCR RCVING FIELD          @G36XRRU
         LA    RWORK,ONE(RWORK)     INCR SENDING FIELD         @G36XRRU
         BCT   RTEMP,TSTMVE         REPEAT -LOOPCT- TIMES      @G36XRRU
         ICM   RWORK,FULLWORD,R8OFFSET(RSAVE) RESTORE USER     @G36XRRU
*                                       AREA POINTER           @G36XRRU
         LR    RONE,RWORK           RESTORE WORKAREA PTR       @G36XRRU
         ICM   RTERM,FULLWORD,R5OFFSET(RSAVE) RESTORE TTE PTR  @G36XRRU
         ST    RETWRK,R14INDEX(RSAVE) SAVE                     @G36XRRU
*                                       TCHNG MASK POINTER     @G36XRRU
         ICM   R3,FULLWORD,R3OFFSET(RSAVE) RESTORE REGISTER    @G36XRRU
*        MODIFY OPTION FIELDS                                  @G36XRRU
         TM    MSK2-MSKMASK(RETWRK),MSKOPT  MODIFY OPTION FLDS?@G36XRRU
         BZ    CHNGDD              NO                          @G36XRRU
         LA    RFROM,TRMOPNO-IEDQTRM(RFROM) ADJUST FROM ADDR   @ZM46777
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS PRESENT    Y02027
         BNO   CHNGDD                   CHECK DEV DEP FIELDS     Y02027
         SPACE 1
**************************************************************** Y02027
*           MOVE  OPTION  ENTRIES  AND  OPTION  OFFSETS         *Y02027
**************************************************************** Y02027
         SPACE 1
         SR    RCOUNT,RCOUNT            CLEAR REGISTER           Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
         IC    RTEMP,TRMOPNO            NUMBER OF OPTION ENTRIES Y02027
         LA    RTO,TRMOPT               POINT TO OPT OFFSETS IN  Y02027
*                                       TERM ENTRY               Y02027
         LA    RFROM,TRMOPT-TRMOPNO(,RFROM)  BUMP TO OPT OFFSETS Y02027
         LR    RZERO,RFROM              GET AND SAVE POINTER TO  Y02027
         AR    RZERO,RTEMP              BEGINNING OF DD FIELDS   Y02027
         BCTR  RTEMP,RZERO              DECREMENT COUNT FOR EXEC Y02027
         EX    RTEMP,MOVER              MOVE OPTION OFFSETS      Y02027
         SPACE 1
         BAL   RETURN,CHECKOFF          GO GET LENGTH OF OPTION  Y02027
*                                       ENTRIES                  Y02027
         LH    RFROM,AIBDATA+(TRMOPTBL-IEDQTRM) OPT TAB OFSET  @YA05454
         N     RFROM,AVTCLRHI           CLEAR HI HALF          @YA05454
         LA    RFROM,AIBDATA(RFROM)     BUMP TO START OF       @YA05454
*                                       OPTION ENTRIES         @YA05454
         LH    RTO,TRMOPTBL             GET ENTRY OFFSET       @YA05454
         N     RTO,AVTCLRHI             CLEAR HI HALF          @YA05454
         A     RTO,AVTOPTPT             ADD OPT TAB ADDR       @YA05454
         BAL   RETURN,TMLOOP            GO MOVE OPTION ENTRIES   Y02027
         LR    RFROM,RZERO              RESTORE RFROM TO POINT   Y02027
*                                       TO BEGINNING OF DEVICE   Y02027
*                                       DEPENDENT FIELDS IN AIB  Y02027
*                                                              * Y02027
         SPACE 1
CHNGDD   EQU   *                                                 Y02027
         ICM   RETWRK,FULLWORD,R14INDEX(RSAVE) RESTORE TCHNG   @G36XRRU
*                                       POINTER                @G36XRRU
         TM    MSK2-MSKMASK(RETWRK),MSKDVDP MODIFY DEVDEP FLD  @G36XRRU
         BZ    TCHNGOUT                 NO                     @ZM46809
         BAL   RETURN,TESTTYPE          CHECK TO SEE IF TRIP   @G36XRRU
*                                       TP 3705 RTN NEEDED     @G36XRRU
         B     TCHNG0X                  NO, BRANCH             @G36XRRU
*        RETURN HERE IF YES                                    @G36XRRU
         LR    RTO,RTERM                'TO' AREA = TERM ENTRY   Y02027
         LA    RTERM,AIBDATA            'FROM' AREA = USER DATA  Y02027
         STM   RTO,RTERM,AIBRNTO        SAVE IN LIST FOR SERVICE Y02027
*                                       ROUTINE                  Y02027
         OI    AIBFLAG1,AIBENT01        SET ENTRY AND RESPONSE   Y02027
         OI    AIBFLAG2,AIBRES08        CODES FOR SERVICE RTN    Y02027
         B     EXITT0                   GO TO IGCT010D           Y02027
         SPACE 1
TCHNG0X  EQU   *                                                 Y02027
         SR    RZERO,RZERO              CLEAR REGISTER           Y02027
         ICM   RZERO,THREE,TRMDEVFL     ANY DEV DEPENDENT FIELDS Y02027
         BZ    TCHNGOUT                 BRANCH IF NO           @ZM46809
         SPACE 1
CHNGDD2  EQU   *                                                 Y02027
         LR    RWORK7,RFROM             SET PTR TO USER DD FIELD Y02027
         BAL   RETURN,DDCOUNT           GO CHECK DEV DEP FIELDS  Y02027
*                                                              * Y02027
*            RETURN WITH SIZE OF DD FIELDS IN RCOUNT           * Y02027
*                                                              * Y02027
         LA    RWORK,TRMOPNO            NEXT BYTE IN TERM ENTRY  Y02027
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED       Y02027
         BNO   NOOPTS                   NO - BRANCH              Y02027
         SR    RWORK7,RWORK7            CLEAR REGISTER           Y02027
         IC    RWORK7,TRMOPNO           PICK UP NO.OF OPT OFFSET Y02027
         LA    RWORK,TRMOPT             FIND DD FIELDS FROM      Y02027
         AR    RWORK,RWORK7             TRMOPT + NO. OF OPTION   Y02027
*                                       OFFSETS                  Y02027
NOOPTS   EQU   *                                                 Y02027
         LR    RTEMP,RFROM              SET FROM REGISTER        Y02027
         LR    RWORK7,RCOUNT            SET RECEIVING AREA COUNT Y02027
         MVCL  RWORK,RTEMP              MOVE DATA                Y02027
         SPACE 1
TCHNGOUT EQU   *                                               @ZM46777
         TM    AVTCKFLG,AVTCKTAC        TCAM CHECKPT ACTIVE    @ZM46777
         BZ    GOODEXIT                 NO BRANCH              @ZM46777
         L     RAIB,OPCCOPCE            OPCE ADDRESS           @ZM46777
         L     RAIB,OCCIB-IEDQOPCE(RAIB) GET CIB ADDRESS       @ZM46777
         LA    RWORK,AIBKEY-IEDQAIB     OFFSET TO AIB          @ZM46777
         SLR   RAIB,RWORK               POINT TO AIB           @ZM46777
         LH    RPARM,AIBTNDX-IEDQAIB(RAIB) PASS TTCIN AS PARM  @ZM46777
         LINK  EP=IEDQNB02              CHECKPT RESOURCE       @ZM46777
         B     GOODEXIT                 EXIT                   @ZM46777
*****************************************************************Y02027
*                  THIS CODE HANDLES DATA MOVES OF             * Y02027
*                  TERMINAL AND OPTION INFORMATION             * Y02027
*****************************************************************Y02027
TMLOOP   EQU   *                                                 Y02027
         C     RCOUNT,MAX               IS MOVE LOOP NEEDED      Y02027
         BNH   TLAST                    BRANCH IF NO             Y02027
         S     RCOUNT,MAX               SUBTRACT LENGTH          Y02027
         MVC   ZERO(MAXI,RTO),ZERO(RFROM)      MOVE 256 BYTES    Y02027
         LA    RFROM,MAXI(RFROM)        BUMP FOR NEXT MOVE       Y02027
         LA    RTO,MAXI(RTO)            BUMP FOR NEXT MOVE       Y02027
         B     TMLOOP                   GO MOVE MORE DATA        Y02027
         SPACE 1
TLAST    EQU   *                                                 Y02027
         LTR   RCOUNT,RCOUNT            MORE DATA TO BE MOVED    Y02027
         BZR   RETURN                   BRANCH IF NO MORE DATA   Y02027
         BCTR  RCOUNT,RZERO             DECREMENT FOR EXECUTE    Y02027
         EX    RCOUNT,MOVER             MOVE LAST OF DATA        Y02027
         BR    RETURN                   RETURN                   Y02027
         SPACE 2
CHECKOFF EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
         SR    RCOUNT,RCOUNT            CLEAR REGISTER           Y02027
         SR    RWORK7,RWORK7            CLEAR REGISTER           Y02027
         IC    RWORK7,TRMOPNO           PICK UP NUMBER OF OFFSETSY02027
         L     RWORK,AVTOPTPT           ADDRESS OF OPTION TABLE  Y02027
         L     RWORK,FOUR(,RWORK)       OPT CHARACTERISTICS TBL  Y02027
         LA    RPARM,TRMOPT             START OF OPTION OFFSETS  Y02027
LOOPOFF  EQU   *                                                 Y02027
         CLI   ZERO(RPARM),AVTEFF       IS THIS OFFSET USED      Y02027
         BE    BUMPOFF                  BRANCH IF NO             Y02027
         IC    RTEMP,ZERO(RWORK)        PICK UP LENGTH-1 FOR     Y02027
*                                       THIS OFFSET              Y02027
         IC    RENTRY,ZERO(RPARM)       SAVE LAST USED OFFSET    Y02027
BUMPOFF  EQU   *                                                 Y02027
         LA    RPARM,ONE(RPARM)         BUMP OFFSET POINTER      Y02027
         LA    RWORK,CHARLNTH(,RWORK)   BUMP TO NEXT OPTION      Y02027
*                                       CHARACTERISTICS FIELD    Y02027
         BCT   RWORK7,LOOPOFF           CONTINUE CHECKING OR IF  Y02027
*                                       FINISHED FALL THROUGH    Y02027
         SPACE 1
* TOTAL OPTION FIELD LENGTH CAN BE DERIVED FROM VALUE OF THE   * Y02027
* LAST USED OFFSET + ADJUSTED LENGTH OF THE ENTRY PTD'D TO BY  * Y02027
* THAT OFFSET.                                                 * Y02027
         SPACE 1
         LA    RCOUNT,ONE(RTEMP,RENTRY) GET OPT FIELD LENGTH     Y02027
         BR    RETURN                   RETURN TO CALLER         Y02027
         SPACE 2                                                 Y02027
*****************************************************************Y02027
* THIS CODE GETS THE TOTAL NUMBER OF DEVICE DEPENDENT FIELDS    *Y02027
* USED INTO RWORK.  AT ENTRY, RWORK7 POINTS TO THE BEGINNING OF *Y02027
* THE DEVICE DEPENDENT FIELDS.  AT EXIT, RCOUNT = LENGTH OF DD  *Y02027
* FIELDS.                                                       *Y02027
*****************************************************************Y02027
         SPACE 1
DDCOUNT  EQU   *                                                 Y02027
         SR    RWORK,RWORK              CLEAR WORK REGISTER      Y02027
         SR    RPARM,RPARM              CLEAR WORK REGISTER      Y02027
         SR    RCOUNT,RCOUNT            CLEAR WORK REGISTER      Y02027
SHIFT    EQU   *                                                 Y02027
         SRDL  RZERO,ONE                MOVE 1 BIT FOR CHECK     Y02027
         SRL   RPARM,BITS31             MAKE REG = ONE OR ZERO   Y02027
         AR    RWORK,RPARM              BUMP DD COUNTER          Y02027
         LTR   RZERO,RZERO              ALL BITS CHECKED         Y02027
         BNZ   SHIFT                    BRANCH IF NO             Y02027
         SR    RPARM,RPARM              CLEAR REGISTER           Y02027
         SR    RTEMP,RTEMP              CLEAR REGISTER           Y02027
DDLOOP   EQU   *                                                 Y02027
         IC    RPARM,ZERO(RWORK7)       PICK UP DD FIELD LENGTH  Y02027
         LA    RCOUNT,ONE(RPARM,RCOUNT) UPDATE DD FIELD LENGTH   Y02027
         LA    RWORK7,ONE(RPARM,RWORK7) BUMP TO NEXT DD FIELD    Y02027
         BCT   RWORK,DDLOOP             CHECK NEXT FIELD OR      Y02027
         BR    RETURN                   RETURN TO CALLER         Y02027
         SPACE 2                                                 Y02027
**************************************************************** Y02027
*            THIS CODE HANDLES THE QCOPY FUNCTION              * Y02027
**************************************************************** Y02027
RQCB     EQU   RWORK                    QCB BASE REGISTER        Y02027
         USING IEDQQCB,RQCB             QCB ADDRESSABILITY       Y02027
         USING IEDQTNTD,RFROM           TNT ADDRESSABILITY       Y02027
         SPACE 1
QLIMIT   EQU   *                                                 Y02027
         L     RFROM,AVTRNMPT           GET TNT ADDRESS          Y02027
         CLI   AIBNAME,BLANK            WAS NAME FIELD BLANK     Y02027
         BNE   TRMOFST2                 NO, BRANCH TO GET TERM   Y02027
*                                       INDEX & ENTRY ADDRESS    Y02027
         SR    RPARM,RPARM              CLEAR REGISTER           Y02027
         B     NAMEOK3                  CONTINUE PROCESSING      Y02027
QCOPY    EQU   *                                                 Y02027
         CLC   AIBLIMIT(2),AVTFZERO     LIMIT FUNCTION           Y02027
         BE    REGQCOPY                 NO, BRANCH               Y02027
         LH    RPARM,AIBTNDX            PICK UP TERM OFFSET      Y02027
NAMEOK3  EQU   *                                                 Y02027
         LA    RPARM,ONE(,RPARM)        INCREMENT TERM INDEX     Y02027
         LA    RENTRY,LAST              SET POSS COMP CODE       Y02027
         CH    RPARM,TNTLEN             HAVE WE FINISHED ITERA-  Y02027
*                                       TIVE PROCESSING          Y02027
         BH    POSTAPP                  YES, BRANCH              Y02027
         SPACE 1
         LR    RWORK7,RPARM             SAVE TERMINAL INDEX      Y02027
         L     RENTRY,AVTRNMPT          ADR OF CONVERSION LOGIC  Y02027
         BALR  RETURN,RENTRY            GO GET TERM ENTRY ADR    Y02027
         LR    RTERM,RPARM              SET TERM ENTRY BASE      Y02027
         LR    RPARM,RWORK7             RESTORE TERM INDEX       Y02027
         SPACE 1
         TM    TRMSTATE,TRMLIST         LIST ENTRY               Y02027
         BO    NAMEOK3                  BRANCH IF YES TO CHECK   Y02027
*                                       NEXT ENTRY               Y02027
         TM    TRMDSORG,TRMLGB          LINE GRP ENTRY           Y02027
         BO    NAMEOK3                  YES - SKIP               Y02027
         CLC   TRMDESTQ(THREE),AVTFZERO DOES TERM HAVE DEST QCB  Y02027
         BE    NAMEOK3                  BRANCH IF NO             Y02027
         SR    RQCB,RQCB                CLEAR REGISTER           Y02027
         ICM   RQCB,AD,TRMDESTQ         GET QCB ADDRESS          Y02027
         TM    QCBDSFLG,QCBDRQQ         CONC DATA READY Q        Y02027
         BO    NAMEOK3                  BRANCH IF YES            Y02027
         CLC   AIBLIMIT,QCBMSGCT        DOES THIS QUEUE HAVE AT  Y02027
*                                       LEAST THE NUMBER OF      Y02027
*                                       MSGS SPECIFIED BY LIMIT  Y02027
         BH    NAMEOK3                  BRANCH IF NO             Y02027
         SPACE 1
NAMEOK5  EQU   *                                                 Y02027
         SR    RCOUNT,RCOUNT            CLEAR COUNT REGISTER     Y02027
         IC    RCOUNT,TNTENLEN          GET MAX ENTRY LENGTH     Y02027
         LA    RCOUNT,THREE(,RCOUNT)    INCREMENT FOR ADDRESS    Y02027
         LR    RTEMP,RPARM              GET OFFSET               Y02027
         BCTR  RTEMP,RZERO              DECREMENT                Y02027
         MR    RTEMP,RTEMP              OFFSET TIMES LENGTH      Y02027
         LA    RTEMP,TNTFIRST           GET 1ST ENTRY ADDRESS    Y02027
         LA    RTEMP,ZERO(RCOUNT,RTEMP) BUMP TO THIS ENTRY       Y02027
         SR    RCOUNT,RCOUNT            CLEAR LENGTH REGISTER    Y02027
         IC    RCOUNT,TNTENLEN          GET MAXIMUM LENGTH       Y02027
         STC   RCOUNT,AIBQLMNA          SAVE LENGTH IN AIB       Y02027
         BCTR  RCOUNT,RZERO             DECREMENT FOR EXECUTE    Y02027
         LA    RTO,AIBNAME              RECEIVING AREA IN AIB    Y02027
         EX    RCOUNT,MOVE              MOVE TERM NAME TO AIB    Y02027
         B     COMP1                    PROCESS REST OF QCB      Y02027
         SPACE 2                                                 Y02027
REGQCOPY EQU   *                                                 Y02027
         TM    TRMSTATE,TRMLIST         LIST TERM ENTRY          Y02027
         LA    RENTRY,FOUR              SET POSS ERROR CODE      Y02027
         BO    POSTAPP                  BRANCH IF  YES           Y02027
         SPACE 1
         CLC   TRMDESTQ(THREE),AVTFZERO DOES TERM HAVE DEST QCB  Y02027
         BZ    POSTAPP                  NO, BRANCH
         SR    RQCB,RQCB                CLEAR REGISTER           Y02027
         ICM   RQCB,AD,TRMDESTQ         SET QCB POINTER          Y02027
COMP1    EQU   *                                                 Y02027
         LA    RWORK7,QCBMSIZE          INIT COUNT TO SIZE OF    Y02027
*                                       MASTER QCB               Y02027
         LA    RTEMP,QCBMEND            ADDR OF 1ST PRIORITY QCB Y02027
LOOPX    EQU   *                                                 Y02027
         LA    RWORK7,QCBPSIZE(,RWORK7) ADD 1 PRIORITY LEVEL QCB Y02027
         CLI   QCBPRIPQ-IEDQPQCB(RTEMP),ZERO  ANOTHER PRIORITY   Y02027
         BE    MVCL                     BRANCH IF NO             Y02027
         LA    RTEMP,QCBPSIZE(,RTEMP)   NEXT PRIORITY QCB        Y02027
         B     LOOPX                    GET NEXT QCB             Y02027
MVCL     EQU   *                                                 Y02027
         LA    RTO,AIBDATA              RECEIVING AREA PTR       Y02027
         LR    RTERM,RWORK7             SET OPERAND 1 COUNT      Y02027
         STH   RWORK7,AIBCOUNT          SAVE BYTE COUNT IN AIB   Y02027
         C     RWORK7,AIBXMLST          CHECK FOR END OF AIB     Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         MVCL  RTO,RQCB                 MOVE QCB TO AIB          Y02027
         B     GOODEXIT                 PREPARE TO EXIT          Y02027
         SPACE 1
MOVE     MVC   ZERO(ONE,RTO),ZERO(RTEMP)    MOVE TERM NAME       Y02027
         DROP  RFROM                    FREE REGISTER            Y02027
         SPACE 2
*****************************************************************Y02027
*                  THIS CODE HANDLES THE ICOPY FUNCTION          Y02027
*****************************************************************Y02027
         SPACE 1
CHKICOPY EQU   *                                                 Y02027
         SPACE 1
         USING IEDQTCB,RTEMP            TCB ADDRESSABILITY       Y02027
         USING IEDQTIOT,RENTRY          TIOT ADDRESSABILITY      Y02027
         USING IHADCB,RWORK7            DCB ADDRESSABILITY       Y02027
         USING DEBNMSUB,RFROM           DEB ADDRESSABILITY       Y02027
         SPACE 1
         CLI   AIBCOMCD,AIBICOPY        ICOPY FUNCTION           Y02027
         BE    ICPYCONT                 YES, CONTINUE ICOPY    @OZ09941
         CLI   AIBCOMCD,AIBICPYX        EXTENDED ICOPY         @OZ09941
         BNE   TPDATE                   NO, BRANCH             @OZ09941
ICPYCONT EQU   *                                               @OZ09941
         L     RTEMP,AVTTCB             ADDRESS OF MCP'S TCB     Y02027
         L     RENTRY,TCBTIO            ADDRESS OF MCP'S TIOT    Y02027
         SR    RWORK7,RWORK7            CLEAR REGISTER           Y02027
         SR    RFROM,RFROM              CLEAR REGISTER           Y02027
         ICM   RFROM,AD,TCBDEB+ONE      ADDRESS OF FIRST DEB     Y02027
         BZ    TRMOFST2                 GO CHECK TERMINAL      @Z30X8RB
*                                       NAME TABLE FOR VTAM    @Z30X8RB
*                                       LINE GROUP BLOCK       @Z30X8RB
         SPACE 1
ILOOP    EQU   *                                                 Y02027
         ICM   RWORK7,AD,DEBDCBAD+ONE   ADDR OF DATA CONTROL BLK Y02027
         CLI   DCBDSORG+ONE,TCAMLG      TCAM LINE GROUP DCB      Y02027
         BE    LGDCB                    BRANCH IF YES            Y02027
NEXTDEB  EQU   *                                                 Y02027
         ICM   RFROM,AD,DEBDEBAD+ONE    ADDRESS OF NEXT DEB      Y02027
         BNZ   ILOOP                    BRANCH TO CHECK NEXT OR  Y02027
         B     TRMOFST2                 CHECK FOR VTAM LGB     @Z30X8RB
         SPACE 1
LGDCB    EQU   *                                                 Y02027
         LR    RCOUNT,RENTRY            SAVE TIOT PTR            Y02027
         AH    RCOUNT,DCBTIOT           DD ENTRY FOR THIS DCB    Y02027
         CLC   TIOEDDNM-IEDQTIOT(8,RCOUNT),AIBNAME  COMPARE FOR  Y02027
*                                       MATCHING DDNAMES         Y02027
         BNE   NEXTDEB                  GO CHECK NEXT DEB        Y02027
         SPACE 1
         CLI   AIBFLAG2,ZERO            SPECIFIED RLN = 0        Y02027
         BE    INVALRLN                 BRANCH IF YES            Y02027
         CLC   AIBFLAG2(ONE),DEBNMEXT   SPECIFIED RLN EXCEED TOT Y02027
*                                       LINES IN THIS LINE GROUP Y02027
         BNH   ILIST                    BRANCH IF NO             Y02027
INVALRLN EQU   *                                                 Y02027
         LA    RENTRY,INVRLN            SET ERROR RETURN CODE    Y02027
         B     POSTAPP                  PREPARE TO EXIT          Y02027
         SPACE 1
INVALDD  EQU   *                                                 Y02027
         LA    RENTRY,INVDDN            SET ERROR RETURN CODE    Y02027
         B     POSTAPP                  PREPARE TO EXIT          Y02027
         DROP  RTEMP                    FREE                     Y02027
         DROP  RENTRY                   REGISTERS                Y02027
*                                                              * Y02027
*        IF DDNAME NOT FOUND, TRMOFST SETS RETURN CODE         * Y02027
*        AND EXITS. ELSE, RETURN WITH ENTRY ADDR IN RTERM      * Y02027
*                                                              * Y02027
ICOPYRN  EQU   *                                                 Y02027
         LR    RTERM,RONE               SET TTE PTR            @G36XRRU
         S     RTERM,PREFIXL            BACK UP TO NEG PREFIX  @G36XRRU
         USING IEDNTRM,RTERM          BACK UP DSECT            @G36XRRU
         CLI   TRMTYPE,TRMGRP      IS TTE AN LGB               @G36XRRU
         BNE   INVALDD             BRANCH ERR IF NOT           @G36XRRU
         SR    RONE,RONE                CLEAR TO GET SUBST PTR @G36XRRU
         ICM   RONE,HALFWORD,TRMSUBST PICK UP SUBSTR POINTER   @G36XRRU
         LR    RCOUNT,RONE              GET TTCIN FOR CONVERT  @G36XRRU
         BNZ   ISUBSOK             BRANCH ON NONZERO           @G36XRRU
         LA    RENTRY,INVSUBST     INDICATE SUBSTR ERROR       @G36XRRU
         B     EXIT                AND GET OUT                 @G36XRRU
ISUBSOK  L     RENTRY,AVTRNMPT     GET CONVERT RTNE            @G36XRRU
         BALR  RETURN,RENTRY       GET TTE ADDRESS             @G36XRRU
         LR    RTERM,RONE          SET TTE DSECT REG           @G36XRRU
         S     RTERM,PREFIXL       BACK UP TO TTE DSECT        @G36XRRU
         CLI   TRMTYPE,TRMGRP      IS THIS AN LGB              @G36XRRU
         BNE   IOKTOGO             LGB AT THIS POINT IS AN     @G36XRRU
*                                  ERROR IN RLN                @G36XRRU
         LA    RENTRY,INVRLN       SET INV RLN                 @G36XRRU
         B     EXIT                     GET OUT                @G36XRRU
IOKTOGO  ICM   RONE,AD,TRMDESTQ    GET QCB ADDRESS             @G36XRRU
         CLC   QCBRELLN-IEDQQCB(ONE,RONE),AIBFLAG2  IS THIS THE@G36XRRU
*                                  RLN USER WANTED             @G36XRRU
         BE    IRLNFND        YES BRANCH                       @G36XRRU
         ICM   RONE,HALFWORD,TRMCOHTG  NO GET NEXT LINE        @G36XRRU
         LR    RCOUNT,RONE    SAVE TNT OFFSET                  @G36XRRU
         B     ISUBSOK        GO CHECK IT OUT                  @G36XRRU
IRLNFND  EQU   *              RLN  FOUND SET UP CIB            @G36XRRU
         CLI   TRMTYPE,TRMSDLC IS THIS A SNA LINE              @G36XRRU
         BNE   NOTSNA         NO, BRANCH                       @G36XRRU
         LA    RENTRY,SNAERR  SET ERROR FOR 'ICOPY INVALID     @G36XRRU
*                             FOR SNA'                         @G36XRRU
EXIT     EQU   *                                               @G36XRRU
         L     RAIB,OPCCOPCE            OPCE ADDRESS           @G36XRRU
         L     RAIB,OCCIB-IEDQOPCE(RAIB) GET CIB ADDRESS       @G36XRRU
         LA    RWORK,AIBKEY-IEDQAIB     OFFSET TO AIB          @G36XRRU
         SLR   RAIB,RWORK               POINT TO AIB           @G36XRRU
         B     POSTAPP                  EXIT                   @G36XRRU
NOTSNA   EQU   *                                               @G36XRRU
*                                                              @ZM46776
*  GO TO 3705 SERVICE RTN TO COPY ILIST INFORMATION INTO AIB   @ZM46776
*                                                              @ZM46776
         MVC   AIBLIMIT(ONE),AIBFLAG2   SAVE RLN               @ZM46776
         MVC   AIBLIMIT+ONE(ONE),AIBCOMCD   AND COMMAND CODE   @ZM46776
         LA    RTO,AIBDATA              GET RECIPIENT AREA PTR @ZM46776
         ST    RTO,AIBRNTO              SAVE FOR SERVICE RTN   @ZM46776
         STH   RCOUNT,AIBTNDX           SAVE LINE TTCIN        @ZM46776
         XC    AIBCOMCD,AIBCOMCD        CLEAR FIELD            @ZM46776
         MVI   AIBFLAG1,AIBENT02        SET SERVICE RTN ENTRY &@ZM46776
         MVI   AIBFLAG2,AIBRES04        RESPONSE CODES         @ZM46776
         BAL   RETURN,EXITT0            GO TO 3705 SERVICE RTN @ZM46776
         SPACE 1                                               @ZM46776
ICOPYRN2 EQU   *                                               @ZM46776
         MVC   AIBCOMCD(ONE),AIBLIMIT+ONE RESTORE COMMAND CODE @ZM46776
         MVC   AIBFLAG2(ONE),AIBLIMIT   AND RLN                @ZM46776
         SR    RENTRY,RENTRY            CLEAR REGISTER         @ZM46776
         ICM   RENTRY,BY3,AIBOPRC       GET RETURN CODE        @ZM46776
         BNZ   POSTAPP                  BRANCH IF ERROR        @ZM46776
         L     RCOUNT,AIBRNFRO          PICK UP LIST END ADDR  @ZM46776
*                                       DATA MOVED BY IGCT210D @ZM46776
         LA    RCOUNT,ONE(,RCOUNT)      BUMP BY ONE            @ZM46776
         LA    RTO,AIBDATA              BEGINNING OF ILIST     @ZM46776
         SR    RCOUNT,RTO               GET BYTE COUNT AND     @ZM46776
         STH   RCOUNT,AIBCOUNT          SAVE FOR MOVE TO USER  @ZM46776
*                                       WORKAREA               @ZM46776
         B     GOODEXIT                 PREPARE TO EXIT        @ZM46776
         SPACE
ILIST    EQU   *                                                 Y02027
         SR    RPARM,RPARM              WORK                     Y02027
         IC    RPARM,AIBFLAG2           PICK UP RLN              Y02027
         BCTR  RPARM,RZERO              DECREMENT RLN            Y02027
         SLL   RPARM,TWO                MULTIPLY RLN BY 4        Y02027
         L     RTO,DCBINVLI(RPARM)      GET INVITATION LIST ADDR Y02027
ILIST2   EQU   *                                               @Z30X8RB
         SR    RTEMP,RTEMP              CLEAR WORK REG         @Z30X8RB
         SR    RCOUNT,RCOUNT            CLEAR WORK REG         @Z30X8RB
         LA    RENTRY,NOLIST            SET CODE FOR NO LIST     X03039
         LTR   RTO,RTO                  LIST ADDRESS ZERO        X03039
         BZ    POSTAPP                  YES, MUST BE VTAM        X03039
         IC    RTEMP,ZERO(,RTO)         NO. ENTRIES IN LIST      Y02027
         IC    RCOUNT,TWO(,RTO)         SIZE OF ONE ENTRY        Y02027
         MR    RTEMP,RTEMP              NO. OF ENTRIES TIMES     Y02027
*                                       SIZE = SIZE OF LIST      Y02027
         LA    RCOUNT,ILSTCTWD(,RCOUNT) ADD SIZE OF CONTROL WORD Y02027
         LA    RTEMP,AIBDATA            RECIPIENT AREA PTR       Y02027
         TM    ILISTFLG(RTO),BSC        IS IT BYSYNCH            Y02027
         BNO   ICOPYMV                  NO, BRANCH               Y02027
         LA    RCOUNT,ONE(,RCOUNT)      BUMP TO REAL END OF LIST Y02027
         SPACE 1
ICOPYMV  EQU   *                                                 Y02027
         STH   RCOUNT,AIBCOUNT          SAVE BYTE COUNT          Y02027
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB   Y02027
         BH    SIZERR                   BR IF AIB EXCEEDED       Y02027
         LR    RZERO,RTO                SAVE INVITATION        @OZ09941
*                                       LIST ADDRESS           @OZ09941
         LH    RILIST,AIBCOUNT          KEEP MOVE COUNTS SAME  @OZ26929
         MVCL  RTEMP,RTO                MOVE INVITATION LIST     Y02027
*                                       INTO AIB                 Y02027
         CLI   AIBCOMCD,AIBICPYX        EXTENDED ICOPY         @OZ09941
         BNE   GOODEXIT                 NO, PREPARE TO EXIT    @OZ09941
         LR    RTO,RZERO                RESTORE INVITATION     @OZ09941
*                                       LIST ADDRESS           @OZ09941
         AR    RTEMP,RCOUNT             UPDATE AIB POINTER     @OZ09941
         SR    RCOUNT,RCOUNT            CLEAR REGISTER         @OZ09941
         IC    RCOUNT,ZERO(,RTO)        NO. ENTRIES IN LIST    @OZ09941
         LR    RTERM,RCOUNT             LOAD REG FOR LOOP COUNT@OZ09941
         LTR   RTERM,RTERM              ARE THERE ANY ENTRIES  @OZ30765
         BZ    GOODEXIT                 NO, BRANCH             @OZ30765
         SLL   RCOUNT,ONE               MULTIPLY BY TWO FOR TNT@OZ09941
*                                       OFFSET ENTRIES         @OZ09941
         AH    RCOUNT,AIBCOUNT          ADD NUMBER OF BYTES    @OZ09941
*                                       PREVIOUSLY MOVED       @OZ09941
         LA    RENTRY,AIBSZER2          SET POSS ERROR CODE    @OZ09941
         C     RCOUNT,AIBXMLST          COMPARE FOR END OF AIB @OZ09941
         BH    POSTAPP                  BRANCH IF AIB EXCEEDED @OZ09941
         STH   RCOUNT,AIBCOUNT          SAVE BYTE COUNT        @OZ09941
CLOOP    EQU   *                                               @OZ09941
         SH    RTO,AVTHA2               BACKUP INVITATION LIST @OZ09941
*                                       POINTER TO NEXT TNT    @OZ09941
*                                       INDEX                  @OZ09941
         MVC   ZERO(TWO,RTEMP),ZERO(RTO) STORE TNT INDEX       @OZ09941
         LA    RTEMP,TWO(,RTEMP)        UPDATE AIB POINTER     @OZ09941
         BCT   RTERM,CLOOP              LOOP UNTIL ALL TNT     @OZ09941
*                                       INDEX HAVE BEEN MOVED  @OZ09941
         B     GOODEXIT                 PREPARE TO EXIT        @OZ09941
         DROP  RWORK7                   FREE                     Y02027
         DROP  RFROM                    REGISTERS                Y02027
         SPACE 1
TPDATE   EQU   *                                                 Y02027
**************************************************************** Y02027
*        THIS SUBROUTINE PROCESSES THE TPDATE MACRO FUNCTION   * Y02027
*****************************************************************Y02027
         SPACE 1
         TM    AIBCOMCD,AIBTPDAT        TPDATE FUNCTION          Y02027
         BNO   MCOUNT                   NO, BRANCH               Y02027
         SPACE 1
         USING IEDQPEWA,RFROM           PEWA ADDRESSABILITY      Y02027
         LM    RWORK7,RFROM,AIBNAME     GET DTS AREA ADDRESS AND Y02027
*                                       PEWA PTR                 Y02027
         TM    AIBFLAG2,AIBDTS          DTSAREA SPECFIED         Y02027
         BZ    CHKDELET                 NO, BRANCH               Y02027
         STCM  RWORK7,AD,PEWADTSA       STORE PTR IN THE PEWA    Y02027
         SPACE 1
CHKDELET EQU   *                                                 Y02027
         NI    PEWAOPT2,AVTEFF-AIBDEL   RESET DELETE BIT         Y02027
         TM    AIBFLAG2,AIBDEL          DELETE = YES SPECIFIED   Y02027
         BZ    RECDELM                  NO BRANCH                Y02027
         OI    PEWAOPT2,AIBDEL          SET DELETE BIT           Y02027
         SPACE 1
RECDELM  EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            CLEAR REGISTER           Y02027
         TM    AIBFLAG2,AIBRECDL        RECORD DELIMITER         Y02027
*                                       SPECIFIED                Y02027
         BO    GETRCDLM                 YES, BRANCH              Y02027
         STC   RENTRY,AIBFLAG2          ZERO DELIMITER INDICATOR Y02027
         B     GOODEXIT                 FOR RETURN AND EXIT      Y02027
GETRCDLM EQU   *                                                 Y02027
         L     RWORK7,PEWAPROC          GET PTR TO PROCESS ENTRY Y02027
         IC    RENTRY,TRMCHCIN-IEDQTRM(,RWORK7)  GET REC DEL &   Y02027
         STC   RENTRY,AIBFLAG2          PUT IT IN AIB            Y02027
         B     GOODEXIT                 PREPARE TO EXIT          Y02027
         SPACE 2
**************************************************************** Y02027
*        THIS CODE HANDLES THE MCOUNT FUNCTION                 * Y02027
**************************************************************** Y02027
         SPACE 1
MCOUNT   EQU   *                                                 Y02027
         L     RFROM,AIBNAME            GET PTR TO PEWA          Y02027
         L     RWORK7,PEWAPROC          AND PTR TO PROCESS ENT   Y02027
         ICM   RWORK7,AD,TRMDESTQ-IEDQTRM(RWORK7)  AND DEST QCB  Y02027
         USING IEDQQCB,RWORK7           QCB ADDRESSABILITY       Y02027
         SPACE 1
         SR    RCOUNT,RCOUNT            CLEAR REGISTER           Y02027
         CLC   EOMSAVE+ONE(THREE),AVTFZERO   MSG PROCESSED BUT   Y02027
*                                       SERVICED                 Y02027
         BE    NOEOM                    NO, BRANCH               Y02027
         LA    RCOUNT,ONE               ADD 1 TO COUNT           Y02027
NOEOM    EQU   *                                                 Y02027
         CLC   PERAQCB+ONE(3),AVTDELAD+ONE  IS READ AHEAD QUEUE  Y02027
*                                       EMPTY                    Y02027
         BE    NONREAD                  BR IF YES                Y02027
         SR    RWORK,RWORK              CLEAR REGISTER           Y02027
         ICM   RWORK,AD,PERAQCB+ONE     GET PTR TO BUFFER        Y02027
         USING IEDQPRF,RWORK            BUF PREFIX ADDRESSABLTY  Y02027
         TM    PRFSTAT1,PRFDUPLN        RETRIEVE BUFFER        @SA71116
         BO    NONREAD                  YES, IGNORE RETRIEVE   @SA71116
         TM    PRFSTAT1,PRFNHDRN        IS IT A HEADER           Y02027
         BNO   NONREAD                  YES, BRANCH              Y02027
         DROP  RWORK                    FREE REG                 Y02027
         SPACE 1
NOTALL   EQU   *                                                 Y02027
         LA    RCOUNT,ONE(,RCOUNT)      BUMP COUNTER BY ONE      Y02027
NONREAD  EQU   *                                                 Y02027
         SR    RWORK,RWORK              CLEAR REGISTER           Y02027
         ICM   RWORK,HALFWORD,QCBMSGCT  PICK UP QCB MSG COUNT    Y02027
         SR    RWORK,RCOUNT             ADJUST TOTAL             Y02027
         DROP  RTERM
         USING IEDQPRF,RPRF             BUF PREFIX ADDR        @OZ19771
         BZ    MEXIT                    IF MCOUNT ZERO, STORE  @OZ19771
*                                        AND RETURN            @OZ19771
         L     RTEMP,AVTDELAD           DUMMY ELEMENT ADDRESS  @OZ19771
         LA    RDEB,AVTDSIOB            DISK I/O QCB ADDRESS   @OZ19771
         LA    RPRF,AVTNCPBQ-FOUR       PREPARE TO SCAN        @OZ19771
*                                       NCPB QUEUE             @OZ19771
         TM    QCBDSFLG-IEDQQCB(RQCB),QCBDISK DISK QUEUING     @OZ19771
         BZ    TESTRQ                   EXIT NOW IF NO         @OZ19771
QLOOP    EQU   *                                               @OZ19771
         ICM   RPRF,AD,PRFLINK          GET ELEM ON NCPB QUEUE @OZ19771
         BZ    TESTRQ                   EXIT IF END OF QUEUE   @OZ19771
         CR    RPRF,RTEMP               END OF READY QUEUE     @OZ19771
         BE    MEXIT                    BRANCH IF YES          @OZ19771
         TM    PRFTIC,EIGHT             IS ELEMENT A BUFFER?   @OZ19771
         BNO   QLOOP                    BRANCH IF NO           @OZ19771
         CLM   RQCB,AD,PRFQCBA          BUF ON READY QUEUE     @OZ19771
*                                        GOING TO DEST QUEUE   @OZ19771
         BNE   CKLCB                    NO, GO CHECK LCB       @OZ19771
         TM    PRFSTAT1,PRFCNCLN        CANCEL BUFFER          @OZ19771
         BO    DECR                     BRANCH IF YES          @OZ19771
         B     QLOOP                    BRANCH IF NO           @OZ19771
CKLCB    EQU   *                                               @OZ19771
         CLC   PRFLCB,PEWALCBA+ONE      BUFFER WAITING FOR A   @OZ19771
*                                       CPB FOR THIS DEST QUEUE@OZ19771
         BNE   QLOOP                    BRANCH IF NO           @OZ19771
         CLM   RDEB,AD,PRFQCBA          BUFF POSTED TO DSK I/O @OZ19771
         BNE   QLOOP                    BRANCH IF NO           @OZ19771
DECR     EQU   *                                               @OZ19771
         BCTR  RWORK,RZERO              DECREMENT MCOUNT       @OZ19771
*                                       BY ONE TO TAKE         @OZ19771
*                                       UNSERVICED MESSAGE     @OZ19771
MEXIT    EQU   *                                               @OZ19771
         STH   RWORK,AIBCOUNT           SAVE MESSAGE COUNT     @OZ19771
         B     GOODEXIT                 PREPARE TO LEAVE       @OZ19771
TESTRQ   EQU   *                                               @OZ19771
         LA    RPRF,AVTREADY-FOUR       PREPARE TO SCAN READY  @OZ19771
*                                       QUEUE FOR CANCELLED    @OZ19771
*                                       BUFFER POSTED TO DISK  @OZ19771
         B     QLOOP                    START SCAN             @OZ19771
         DROP  RFROM
         DROP  RPRF
         USING IEDQTRM,RTERM            TERMINAL TABLE
         EJECT
SIZERR   EQU   *                                                 Y02027
         LA    RENTRY,AIBSZERR          SET ERROR CODE           Y02027
         B     POSTAPP                  PREPARE TO EXIT          Y02027
         SPACE 1
EXITT0   EQU   *                                                 Y02027
         LA    RTEMP,AIBDATA            SET UP PTR TO END OF     Y02027
         A     RTEMP,AIBXMLST           AIB FOR COMPARISON IN    Y02027
         ST    RTEMP,AIBQLMNA           VTAM SERVICE ROUTINE   @Z30X8RB
         ST    RETURN,AIBRNRET          SAVE RETURN ADD IN AIB   Y02027
         MVC   OPCLDNME+THREE(TWO),XCTLT0    XCTL MOD ID         Y02027
         B     XCTL                     EXIT TO IGCT010D         Y02027
GOODEXIT EQU   *                                                 Y02027
         SR    RENTRY,RENTRY            CLEAR RETURN CD REG      Y02027
POSTAPP  EQU   *                                                 Y02027
         STC   RENTRY,AIBOPRC           SET RETURN CODE          Y02027
         SPACE 1
*                                                              * Y02027
*        GO TO IEDQCA TO RETURN UNIT(S) GOTTEN FOR OPCE        * Y02027
*                                                              * Y02027
         L     RPARM,OPCCOPCE           PTR TO OP CONTROL ELEMNT Y02027
         LR    RTO,RAVT                 TCAM AVT PTR IN REG 4    Y02027
         L     RENTRY,OPCFREBF          ADDR OF FREE UNIT RTN    Y02027
         BALR  RETURN,RENTRY            GO TO ROUTINE            Y02027
         SPACE 1
*****************************************************************Y02027
* CHECK THE PCB AND ASCB FOR THE WAITING APPLICATION PROGRAM TO *Y02027
* BE SURE THAT THE APPL PROGRAM IS STILL ACTIVE.  IF NOT ACTIVE,*Y02027
* BYPASS POSTING THE REQUESTOR'S ECB.                           *Y02027
*****************************************************************Y02027
         SPACE 1
         L     RWORK7,AIBPCBAD          GET APPL PROG PCB        Y02027
         TM    AIBPCBAD,USEASCB         DO WE HAVE ASCB ADDR     Y02027
         BO    GOTASCB                  YES, BRANCH              Y02027
         L     RFROM,PCBPEBAD-IEDQPCB(RWORK7)  AND PEB ADDRESSES Y02027
         LTR   RFROM,RFROM              HAS APPL PROG CLOSED     Y02027
         BZ    FREEAIB                  BRANCH IF YES            Y02027
         USING IEDQPEB,RFROM            PEB ADDRESSABILITY       Y02027
         L     RWORK7,PEBASCB           GET ASCB PTR             Y02027
         DROP  RFROM                    HI ORDER BIT IS ON, ASCB Y02027
         LTR   RWORK7,RWORK7            HAS BEEN INVALIDATED     Y02027
         BP    GOTASCB                  BR IF REG IS POSITIVE -  Y02027
*                                       MPP IS STILL ACTIVE      Y02027
FREEAIB  EQU   *                        MPP HAS CLOSED OR IS IN  Y02027
*                                       PROCESS OF CLOSING       Y02027
         MVI   AIBSTATE,AIBFREE         MARK AIB AS FREE         Y02027
         B     XCTLBK                   EXIT                     Y02027
         SPACE 1
GOTASCB  EQU   *                                                 Y02027
         LA    RWORK,ZERO(RWORK)        CLEAR HI ORDER BYTE      Y02027
         L     RWORK,AIBECBA            GET ECB TO BE POSTED     Y02027
         L     RFROM,CVTPTR             GET CVT PTR              Y02027
         LA    RFROM,CVTBRET-CVTMAP(RFROM)   GET CVT LOCATION    Y02027
*                                       OF BR 14 INSTRUCTION     Y02027
         ICM   RFROM,EIGHT,HEX80        FLAG TELLING XMPOST NOT  Y02027
*                                       TO RESTORE REGISTERS     Y02027
         STM   RWORK,RFROM,AIBXMLST     SET PARMS IN LIST        Y02027
         LA    RPARM,AIBXMLST           SET PARM REGISTER        Y02027
         SR    RZERO,RZERO              CLEAR COMP CODE REG      Y02027
         POST  ,(0),MF=(E,(1))          POST APPL PROGRAM ECB
         SPACE 2
*****************************************************************Y02027
*                       RETURN TO IGC0010D                      *Y02027
*****************************************************************Y02027
         SPACE 1
XCTLBK   EQU   *
         NI    OPCSPEC,AVTEFF-OPCFRMCA  BE SURE THAT 'FROM CA'   Y02027
*                                       FLAG IS OFF              Y02027
         MVC   OPCLDNME+THREE(TWO),XCTL01    SET MODULE NAME     Y02027
XCTL     EQU   *                                                 Y02027
         LR    RPARM,ROPCAVT            PASS OP CONTROL AVT PTR  Y02027
         XCTL  SF=(E,OPCXCTL)           CALL IGC0010D
         EJECT
*THIS SUBROUTINE DIFFERENTIATES BETWEEN TTE TYPES THAT         @G36XRRU
*REQUIRE ACCESS THRU NCP TO DEV DEP FIELDS AND THOSE           @G36XRRU
*TTES THAT DO NOT                                              @G36XRRU
*THOSE THAT DO ARE  NCP ATTACHED BSC/SS TERMINALS              @G36XRRU
*                                CTERM                         @G36XRRU
*                                CLUSTER BSC/SS                @G36XRRU
*FOR THOSE THAT DO REQUIRE NCP ACCESS EXIT IS TO RETURN+4      @G36XRRU
*OTHERWISE EXIT IS TO ADDRESS IN RETURN REG.                   @G36XRRU
         SPACE 3
TESTTYPE EQU   *                                               @G36XRRU
         USING IEDQTRM,RTERM       SET TTE ADDRESSABILITY      @G36XRRU
         TM    TRMSTATE,TRMPREF    NCP RESOURCE                @G36XRRU
         BZ    ZERO(RETURN)        NO EXIT TO RETURN+0         @G36XRRU
         TM    TRMSTATE,TRMLINE    IS IT A LINE TTE            @G36XRRU
         BO    ZERO(RETURN)        YES EXIT TO RETURN+0        @G36XRRU
*BACK UP TO TTE PREFIX                                         @G36XRRU
         S     RTERM,PREFIXL       BACK UP REG                 @G36XRRU
         USING IEDNTRM,RTERM       BACK UP DSECT               @G36XRRU
         CLI   TRMTYPE,TRMPSNA     BSC/SS TERM                 @G36XRRU
         BE    TESTTINC            YES                         @G36XRRU
         CLI   TRMTYPE,TRMCTERM    CTERM                       @G36XRRU
         BE    TESTTINC            YES                         @G36XRRU
         CLI   TRMTYPE,TRMCLUST    BSC/SS CLUSTER              @G36XRRU
         BNE   TSTBTOP             NO                          @G36XRRU
TESTTINC LA    RETURN,FOUR(RETURN) SET RETURN POINT AT +4      @G36XRRU
TSTBTOP  A     RTERM,PREFIXL       POINT TO TTE POS PORTION    @G36XRRU
         USING IEDQTRM,RTERM       RESET DSECT                 @G36XRRU
         BR    RETURN              EXIT                        @G36XRRU
         EJECT
VERBTBL  EQU   *                                                 Y02027
         DC    X'06',XL2'0'             MCOUNT                   Y02027
         DC    X'07',XL2'0'             TPDATE                   Y02027
         DC    X'10',C'Z0'              MCPCLOSE                 Y02027
         DC    X'11',C'Z0'              MCPCLOSE                 Y02027
         DC    X'20',XL2'0'             TCHNG                    Y02027
         DC    X'40',XL2'0'             QCOPY                    Y02027
         DC    X'49',C'I0'              ICHNG                    Y02027
         DC    X'50',XL2'0'             ICOPY                    Y02027
         DC    X'D0',XL2'0'             ICOPY EXTENDED         @OZ09941
         DC    X'80',XL2'0'             TCOPY                    Y02027
         DC    X'87',C'R0'              MRELEASE                 Y02027
         DC    X'FF'                    END OF TABLE             Y02027
         SPACE 2
**************************************************************** Y02027
*                    EXECUTED  INSTRUCTIONS                    * Y02027
**************************************************************** Y02027
         SPACE 1
MOVER    DS    0H                                                Y02027
         MVC   ZERO(ONE,RTO),ZERO(RFROM)     MOVE DATA           Y02027
MOVEM    DS    0H                                                Y02027
         MVC   ZERO(ONE,RTO),TRMOPT     MOVE OPTION OFFSETS      Y02027
TERMMOVE DS    0H                                              @OZ11203
         MVC   OPCDOUBL(ZERO),AIBNAME   MOVE TERMNAME          @OZ11203
         EJECT
*                                                                     *
*          CONSTANTS  AND  EQUATES                                    *
*                                                                     *
PATCH    DC    8D'0'                    PATCH AREA             @Z30X8RB
         SPACE 2
PREFIXL  DC    A(TRMPRFSZ)              LENGTH OF PREFIX TTE   @G36XRRU
ANDMASK  DC    X'00008000'              BIT MASK FOR TCHNG     @G36XRRU
R3OFFSET EQU   12                       OFFSET INTO SAVEAREA   @G36XRRU
R5OFFSET EQU   16                       OFFSET INTO SAVEAREA   @G36XRRU
R8OFFSET EQU   20                       OFFSET INTO SAVEAREA   @G36XRRU
R14INDEX EQU   20                       OFFSET INTO SAVEAREA   @G36XRRU
FULLWORD EQU   15                       NUMBER OF BYTES WANTED @G36XRRU
LOOPCT   EQU   12                       PASS CTR FOR TCHNG     @G36XRRU
SRCHSTAT EQU   0              BYTE 0 OF SRCHTBLE IS TRMSTATE   @G36XRRU
*                             VALUE WITH LOW ORDER BITS OFF    @G36XRRU
SRCHTYPE EQU   1              BYTE 1 OF SRCHTBLE IS TRMTYPE    @G36XRRU
SRCHMASK EQU   2              BYTE 2 OF SRCHTBLE IS OFFSET     @G36XRRU
*                             FROM START OF TCHNG MASK TABLE   @G36XRRU
*                             ANCHORED AT AVTOPMSK TO MASK     @G36XRRU
*                             FOR THAT TTE TYPE                @G36XRRU
SRCHTBLE EQU   *              TABLE TO DETERMINE TCHNG MASK    @G36XRRU
SPRCNTY  EQU   *                        TPROCESS EQUATE        @G36XRRU
         DC    X'200012'      TPROCESS                         @G36XRRU
SRCHTBEL EQU   *-SRCHTBLE               EST. ENTRY LENGTH      @G36XRRU
SRLSTNTY EQU   *                        LIST ENTRY EQUATE      @G36XRRU
         DC    X'400010'      TLIST                            @G36XRRU
         DC    X'600002'      LOG                              @G36XRRU
         DC    X'800002'      270X/EP DIAL                     @G36XRRU
         DC    X'90000E'      NCP LINE                         @G36XRRU
         DC    X'90200E'      NCP BSC/SS LINE                  @G36XRRU
         DC    X'90210E'      NCP SNA LINE                     @G36XRRU
         DC    X'100F0C'      NCP                              @G36XRRU
         DC    X'101806'      PU                               @G36XRRU
         DC    X'103008'      LU                               @G36XRRU
         DC    X'104004'      BSC/SS CLUSTER                   @G36XRRU
         DC    X'104804'      CTERM                            @G36XRRU
         DC    X'104F04'      PRE SNA                          @G36XRRU
         DC    X'10FF0A'      SSCP                             @G36XRRU
         DC    X'000002'       270X DEVICE                     @OY16438
SRCHEND  EQU   *                                               @G36XRRU
SRCHMSK  EQU   X'F0'          RESETS LO BITS OF TRMSTATE       @G36XRRU
SRCHLIM  EQU   (SRCHEND-SRCHTBLE)/SRCHTBEL NO. OF ENTERIES IN  @G36XRRU
*                                       TABLE                  @G36XRRU
INVDDN   EQU   X'20'                    INVALID DDNAME
BSC      EQU   X'80'                    BSC I-LIST
INVRLN   EQU   4                        INVALID REL LINE NUMBER
NOLIST   EQU   X'24'                    CODE FOR NO LIST         X03039
MAXI     EQU   256
FREE     EQU   X'20'                    SVC FREE CODE            Y05330
HALFWORD EQU   3
AD       EQU   7                        ADDRESS MASK
BY0      EQU   8                                               @G36XRRU
BY2      EQU   2                                               @G36XRRU
BY3      EQU   1                                      OFFSET
ZERO     EQU   0
ONE      EQU   1                                            LENGTH
TWO      EQU   2                        FOR
FOUR     EQU   4                            PASSWORD
SIX      EQU   6                                    SCRAMBLER
SEVN     EQU   7
EIGHT    EQU   8
CHARLNTH EQU   10                       DEVICE CHAR ENTRY LENGTH
ILSTCTWD EQU   9                        SIZE OF ILIST CONTROL WORD
ILISTFLG EQU   3                        DISP IN ILIST TO FLAG
ADRLNGTH EQU   3                        LENGTH OF ADDRESS
INVSUBST EQU   X'28'                    INVALID SUBST ERROR    @G36XRRU
SNAERR   EQU   X'24'                    SNA ERROR - ICOPY      @G36XRRU
*                                       INVALID FOR SNA LINE   @G36XRRU
         DS    0F                       BOUNDARY ALLIGNMENT    @G36XRRU
MAX      DC    H'255'                   MASK FOR MOVE COMPARE    X03039
*                                       FOR MOVE LOOP
*
XCTL01   DC    C'00'                    MOD ID FOR IGC0010D      Y02027
WRXCTL   DC    C'07'                    MSG WRITER MOD ID        Y02027
XCTLT0   DC    C'T0'                    ID FOR MOD IGCT010D      Y02027
HTWELVE  DC    H'12'                    HW CONSTANT            @ZA00200
TWELVE   EQU   12                       EQUATE OF 12           @ZA00200
AIBSZERR EQU   X'18'                    RC = AIB DATA AREA < DATAY02027
*                                       TO BE COPIED INTO IT     Y02027
AIBSZER2 EQU   X'28'                    RC = AIB DATA AREA <   @OZ09941
*                                       DATA TO BE COPIED INTO @OZ09941
*                                       IT FOR EXTENDED ICOPY  @OZ09941
BITS31   EQU   31                       MASK FOR SHIFTING        Y02027
BLANK    EQU   X'40'                                             Y02027
CCZERO   EQU   8                        MASK FOR BRANCH IF ZEROESY02027
CNTFLD   EQU   X'2C'                    OFFSET TO COUNT OF BYTES Y02027
*                                       TO BE MOVED FROM USER'S  Y02027
*                                       WORK AREA                Y02027
CODEFF   EQU   X'FF'                    CODE FOR ERROR MSG       Y02027
INVALTRM EQU   X'20'                    CODE FOR INVALID TERM NA Y02027
LAST     EQU   X'80'                    CODE INCDICATING END OF  Y02027
*                                       QCOPY ITERATIVE PROCESS  Y02027
NOTCA    EQU   2                        CODE USED BY IGC0010D    Y02027
RECDLM   EQU   X'80'                    FLAG = 'RECDELM=YES'     Y02027
TCAMLG   EQU   X'40'                    TCAM LINE GRP IDENTIFIER Y02027
TABEND   EQU   X'FF'                    END OF TABLE MARKER      Y02027
TABLEN   EQU   3                        SIZE OF ENTRY IN COMMAND Y02027
*                                       CODE LOOKUP TABLE        Y02027
THREE    EQU   3                        DISPLACEMENT VALUE       Y02027
HEX80    DC    X'80'                    FLAG FOR XMPOST          Y02027
TWENTY   EQU   20                       OFFSET VALUE             Y02027
RNRETCD  EQU   X'FF'                    FLAG = ENTRY FROM AN     Y02027
*                                       RN SERVICE ROUTINE       Y02027
DIALDIG  EQU   X'40'                    MASK FOR DIAL DIGITS     Y02027
DIGITS   EQU   X'01'                    FLAG = DIAL DIGITS       Y02027
ADDCHAR  EQU   X'20'                    MASK FOR ADDR CHARACTERS Y02027
CHARS    EQU   X'02'                    FLAG = ADDRESSING CHARS  Y02027
USEASCB  EQU   X'80'                    FLAG INDICATING ASCB ADR Y02027
*                                       IS AVAILABLE - SET BY    Y02027
*                                       IEDQEB                   Y02027
         SPACE 3
         EJECT
***                 DSECTS                             ***
         TAVTD
         EJECT
         TTRMD
         EJECT
         TTNTD
         TAIBD EXT=(NETWKCTL)
         EJECT
         SPACE 2
         TOPCED
         SPACE 1
         TPEBD                                                   Y02027
         SPACE 1
         TOPCAVTD                                                Y02027
         EJECT
         TQCBD
         EJECT
         DCBD  DSORG=TX
         EJECT
         CVT
         EJECT
         TPRIOR
         EJECT
         TPCBD
         TPRFD
IEDQTIOT DSECT                          TIOT DD ENTRY
TIOELNGH DS    XL1                      LENGTH OF DD ENTRY
TIOESTTA DS    XL1                      STATUS BYTE A
TIOERLOC DS    XL2                      ERROR LOCATION
TIOEDDNM DS    XL8                      DDNAME
         EJECT
DCT      DSECT                          DEVICE CHARACTERISTICS   X03039
*                                       TABLE DSECT              X03039
         DS    CL1                      RESERVED BYTE            X03039
DCTSTAT1 DS    XL1                      FIRST STATUS BYTE        X03039
C3270    EQU   X'04'                    3270 DEVICE FLAG         X03039
DCTSTAT2 DS    XL1                      SECOND STATUS BYTE       X03039
CLOCAL   EQU   X'02'                    LOCAL DEVICE FLAG        X03039
DCTSTAT3 DS    XL1                      THIRD STATUS BYTE        X03039
         EJECT
         TTCBD                                                   Y02027
         TDEBD                                                   Y02027
         EJECT
         TLGBD
         EJECT
         TMSKD                                                 @G36XRRU
         EJECT
         TPEWAD                                                  Y02027
         SPACE 1
         TTCXD                                                   Y02027
         END
