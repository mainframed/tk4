         TITLE 'IGCOE10D, 3705 ERROR MSG MOD                           *
                        '
IGC0E10D CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         EJECT
         EJECT
         EJECT
         USING *,RBASE                 ESTABLISH ADDRESS.
         LR    RBASE,R15                SETUP THE BASE
IGC0E10D IEDHJN AFTERHJN,HJN
*BASE:                                                             0167
*   RMSGNO=RZERO;                   /* PICK UP PASSED MSG NO.        */
BASE     LR    RMSGNO,RZERO                                        0167
*   ROPCAVT=RPARM;                  /* BASE FOR OP CONTROL AVT       */
         LR    ROPCAVT,RPARM                                       0168
*   RESPECIFY                                                      0169
*    (RPARM,                                                       0169
*     RZERO) UNRSTD;                /*                               */
*   IEDQAPTR=OPCAVTPT;              /* BASE FOR TCAM AVT             */
         L     IEDQAPTR,OPCAVTPT(,ROPCAVT)                         0170
*   ROPCE=OPCCOPCE;                 /* GET ELEMENT POINTER           */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0171
*   RWORKA=OPCWORK;                 /* ADDRESS OF WORK AREA          */
         L     RWORKA,OPCWORK(,ROPCAVT)                            0172
*   OPCLDNME(4:5)='0C';             /* SET UP WRITE MOD NAME         */
         MVC   OPCLDNME+3(2,ROPCAVT),@CC01238                      0173
*   RMSGPT=ADDR(ERRORTAB);          /* LOAD ADDR MSG TABLE           */
         LA    RMSGPT,ERRORTAB                                     0174
*LOCATMSG:                                                         0175
*   IF TABEND=ERREND                /* IS THIS THE END OF TABLE      */
*     THEN                                                         0175
LOCATMSG CLC   TABEND(1,RMSGPT),ERREND                             0175
         BNE   @RF00175                                            0175
*     DO;                                                          0176
*     END;                                                         0177
*   ELSE                                                           0178
*     DO;                                                          0178
         B     @RC00175                                            0178
@RF00175 DS    0H                                                  0179
*       IF TABMSGNO^=RMSGNO         /* IS THIS THE PROPER MSG        */
*         THEN                                                     0179
         CH    RMSGNO,TABMSGNO(,RMSGPT)                            0179
         BE    @RF00179                                            0179
*         DO;                                                      0180
*           RMSGPT=RMSGPT+4;        /* IF NOT PROPER MSG ADV         */
         AL    RMSGPT,@CF00092                                     0181
*           GOTO LOCATMSG;          /* KEEP LOOKING                  */
         B     LOCATMSG                                            0182
*         END;                                                     0183
*       ELSE                                                       0184
*         ;                                                        0184
@RF00179 DS    0H                                                  0185
*       RMSGPT=TABMSGAD;            /* PICK UP MSG OFFSET            */
         LH    RMSGPT,TABMSGAD(,RMSGPT)                            0185
*       RMSGPT=RMSGPT+ADDR(BASE);   /* ADD BASE TO OFFST             */
         LA    @14,BASE                                            0186
         ALR   RMSGPT,@14                                          0186
*       WORLEN=MSGLEN;              /* MOVE MSG LEN TO WORKAREA      */
         SLR   @14,@14                                             0187
         IC    @14,MSGLEN(,RMSGPT)                                 0187
         STH   @14,WORLEN(,RWORKA)                                 0187
*       WORMSGAR=MSGSTART(1:MSGLEN);/* MSG TO WORKAREA               */
         MVI   WORMSGAR+1(RWORKA),C' '                             0188
         MVC   WORMSGAR+2(118,RWORKA),WORMSGAR+1(RWORKA)           0188
         BCTR  @14,0                                               0188
         EX    @14,@SM01258                                        0188
*       IF MSGOFFST>'00'X           /* IS AN INSERT NEEDED?          */
*         THEN                      /* IF YES,                       */
         CLI   MSGOFFST(RMSGPT),0                                  0189
         BNH   @RF00189                                            0189
*         DO;                                                      0190
*           IF RMSGNO=199 THEN      /* MESSAGE 199?                  */
         C     RMSGNO,@CF00234                                     0191
         BNE   @RF00191                                            0191
*             DO;                   /* YES                           */
*               RFY                                                0193
*                (IEDPRUQP,                                        0193
*                 RPRU) RSTD;                                      0193
*               RPRU=OCUNIT;        /* ADDR OF PRU           @YM08414*/
         L     RPRU,OCUNIT(,ROPCE)                                 0194
*               RWORK2=RWORKA+BEGMSG;                              0195
         LA    RWORK2,4                                            0195
         ALR   RWORK2,RWORKA                                       0195
*               COMMAND=' ';        /* BLANK COMMAND         @YM08414*/
         MVI   COMMAND+1(RWORK2),C' '                              0196
         MVC   COMMAND+2(4,RWORK2),COMMAND+1(RWORK2)               0196
         MVI   COMMAND(RWORK2),C' '                                0196
*               SENSEMAP=' ';       /* BLANK SENSE           @YM08414*/
         MVI   SENSEMAP+1(RWORK2),C' '                             0197
         MVC   SENSEMAP+2(6,RWORK2),SENSEMAP+1(RWORK2)             0197
         MVI   SENSEMAP(RWORK2),C' '                               0197
*               IF PRUTHTYE=PRUTHFD1 THEN/* FID1?                    */
         LR    @14,IEDPRUQP                                        0198
         SL    @14,@CF00054                                        0198
         TM    PRUTHTYE(@14),B'00010000'                           0198
         BNO   @RF00198                                            0198
         TM    PRUTHTYE(@14),B'11100000'                           0198
         BNZ   @RF00198                                            0198
*                 DO;               /* YES                           */
*                   DIGITPTR=ADDR(CMMND);/* CMD ADDR         @YM08414*/
         LA    @01,CMMND(,IEDPRUQP)                                0200
         ST    @01,DIGITPTR(,RWORK2)                               0200
*                   WKPTR1=ADDR(COMMAND);/* WKAREA ADDRESS   @YM08414*/
         LA    @01,COMMAND(,RWORK2)                                0201
         ST    @01,WKPTR1(,RWORK2)                                 0201
*                   IF PRURHFI='1'B&PRURUCAT=PRURHFMD THEN         0202
         TM    PRURHFI(@14),B'00001000'                            0202
         BNO   @RF00202                                            0202
         TM    PRURUCAT(@14),B'01100000'                           0202
         BNZ   @RF00202                                            0202
*                     NUMBER=LENGTH(CMMND);/* SET NUMBERS OF CHARS IN
*                                      COMMAND               @YM08414*/
         MVI   NUMBER(RWORK2),X'03'                                0203
*                   ELSE                                           0204
*                     NUMBER=LENGTH(CMMND1);/*               @YM08414*/
         B     @RC00202                                            0204
@RF00202 MVI   NUMBER(RWORK2),X'01'                                0204
*                   CALL SPLTBYTE;  /* SPLIT THE BYTES FOR TRANSLATE
*                                                            @YM08414*/
@RC00202 BAL   @14,SPLTBYTE                                        0205
*                   IF PRURHFI='1'B&PRURUCAT=PRURHFMD THEN         0206
         LR    @14,IEDPRUQP                                        0206
         SL    @14,@CF00054                                        0206
         TM    PRURHFI(@14),B'00001000'                            0206
         BNO   @RF00206                                            0206
         TM    PRURUCAT(@14),B'01100000'                           0206
         BNZ   @RF00206                                            0206
*                     TR(COMMAND,EBCDIC);/* TRANSL TO PRINTABLE HEX
*                                                            @XM05689*/
         TR    COMMAND(6,RWORK2),EBCDIC                            0207
*                   ELSE                                           0208
*                     TR(CMDFID11,EBCDIC);/* TRANS TO PRINTABLE HEX
*                                                            @XM05689*/
         B     @RC00206                                            0208
@RF00206 TR    CMDFID11(2,RWORK2),EBCDIC                           0208
*                   DIGITPTR=ADDR(FID1SNS);/* SENSE ADDRESS  @YM08414*/
@RC00206 LA    @14,FID1SNS(,IEDPRUQP)                              0209
         ST    @14,DIGITPTR(,RWORK2)                               0209
*                   WKPTR1=ADDR(SENSEMAP);/* WKAREA ADDRESS  @YM08414*/
         LA    @14,SENSEMAP(,RWORK2)                               0210
         ST    @14,WKPTR1(,RWORK2)                                 0210
*                   NUMBER=LENGTH(FID1SNS);/* LENGTH OF SENSE      0211
*                                                            @YM08414*/
         MVI   NUMBER(RWORK2),X'04'                                0211
*                   CALL SPLTBYTE;  /* SPLIT THE BYTES FOR TRANSLATE
*                                                            @YM08414*/
         BAL   @14,SPLTBYTE                                        0212
*                   TR(SENSEMAP,EBCDIC);/* TRANSL TO PRINTABLE HEX 0213
*                                                            @XM05689*/
         TR    SENSEMAP(8,RWORK2),EBCDIC                           0213
*                 END;              /* MOVE FID1 REQUEST             */
*               ELSE                                               0215
*                 DO;               /*                       @YM08414*/
         B     @RC00198                                            0215
@RF00198 DS    0H                                                  0216
*                   DIGITPTR=ADDR(CMDMOD);/* FID0 CMD        @YM08414*/
         LA    @14,CMDMOD(,IEDPRUQP)                               0216
         ST    @14,DIGITPTR(,RWORK2)                               0216
*                   WKPTR1=ADDR(COMMAND);/* WKAREA ADDRESS   @YM08414*/
         LA    @14,COMMAND(,RWORK2)                                0217
         ST    @14,WKPTR1(,RWORK2)                                 0217
*                   NUMBER=LENGTH(CMDMOD);/* FID0 LENGTH     @YM08414*/
         MVI   NUMBER(RWORK2),X'02'                                0218
*                   CALL SPLTBYTE;  /* SPLIT BYTES FOR TRANSLATE   0219
*                                                            @YM08414*/
         BAL   @14,SPLTBYTE                                        0219
*                   TR(CMDFID0,EBCDIC);/* TRANSLATE TO PRINTABLE HEX
*                                                            @YM08414*/
         TR    CMDFID0(4,RWORK2),EBCDIC                            0220
*                   DIGITPTR=ADDR(FID0SENS);/* FID0 SENSE ADDRESS  0221
*                                                            @YM08414*/
         LA    @14,FID0SENS(,IEDPRUQP)                             0221
         ST    @14,DIGITPTR(,RWORK2)                               0221
*                   WKPTR1=ADDR(SENSEMAP);/* WKAREA ADDRESS  @YM08414*/
         LA    @14,SENSEMAP(,RWORK2)                               0222
         ST    @14,WKPTR1(,RWORK2)                                 0222
*                   NUMBER=LENGTH(FID0SENS);/* LENGTH OF SENSE     0223
*                                                            @YM08414*/
         MVI   NUMBER(RWORK2),X'02'                                0223
*                   CALL SPLTBYTE;  /* SPLIT BYTES FOR TRANSLATE   0224
*                                                            @YM08414*/
         BAL   @14,SPLTBYTE                                        0224
*                   TR(SNSMAPF0,EBCDIC);/* TRANS TO PRINTABLE HEX  0225
*                                                            @XM05689*/
         TR    SNSMAPF0(4,RWORK2),EBCDIC                           0225
*                 END;              /*                       @YM08414*/
*               MSG199WA=' ';       /* CLEAR WORKAREA USED IN MSG 199
*                                                            @YM08414*/
@RC00198 MVI   MSG199WA+1(RWORK2),C' '                             0227
         MVC   MSG199WA+2(10,RWORK2),MSG199WA+1(RWORK2)            0227
         MVI   MSG199WA(RWORK2),C' '                               0227
*               NAME=OCBACKUP;      /* MOVE RESOURCE NAME            */
         MVC   NAME(8,RWORK2),OCBACKUP(ROPCE)                      0228
*               RFY                                                0229
*                (IEDPRUQP,                                        0229
*                 RPRU) UNRSTD;                                    0229
*             END;                  /* FINISHED WITH MSG 199         */
*           ELSE                                                   0231
*             DO;                                                  0231
         B     @RC00191                                            0231
@RF00191 DS    0H                                                  0232
*               RWORK2=RWORKA+MSGOFFST+3;/* INSERT BS                */
         LR    RWORK2,RWORKA                                       0232
         SLR   @14,@14                                             0232
         IC    @14,MSGOFFST(,RMSGPT)                               0232
         ALR   RWORK2,@14                                          0232
         AL    RWORK2,@CF00074                                     0232
*               IF MSGOFFST>128     /* DOES MSG HAVE AN RLN?         */
*                 THEN              /* IF YES,                       */
         CLI   MSGOFFST(RMSGPT),128                                0233
         BNH   @RF00233                                            0233
*                 DO;                                              0234
*                   RWORK2=RWORK2-128;/* CORRECT INSERT              */
         SL    RWORK2,@CF01245                                     0235
*                   RLNSWTH='1'B;   /* SET SWITCH                    */
         OI    RLNSWTH(ROPCAVT),B'10000000'                        0236
*                 END;                                             0237
*               ELSE                                               0238
*                 RLNSWTH='0'B;     /* SET SWITCH                    */
         B     @RC00233                                            0238
@RF00233 NI    RLNSWTH(ROPCAVT),B'01111111'                        0238
*               NAMFILD=OCBACKUP;   /* MOVE NAME TO MESSAGE          */
@RC00233 MVC   NAMFILD(8,RWORK2),OCBACKUP(ROPCE)                   0239
*               IF RLNSWTH='1'B     /* IR RLN THEN CONVERT RLN       */
*                 THEN                                             0240
         TM    RLNSWTH(ROPCAVT),B'10000000'                        0240
         BNO   @RF00240                                            0240
*                 DO;                                              0241
*CONVERT:                                                          0242
*                   RCONVERT=OCRLN; /* PICK UP RLN                   */
CONVERT  SLR   RCONVERT,RCONVERT                                   0242
         IC    RCONVERT,OCRLN(,ROPCE)                              0242
*                   IF OCRLN>'00'X  /* IF THERE A RLN                */
*                     THEN          /* THEN                          */
         CLI   OCRLN(ROPCE),0                                      0243
         BNH   @RF00243                                            0243
*                     DO;                                          0244
*NUM:                                                              0245
*                       GEN REFS(OPCDOUBL);                        0245
NUM      DS    0H                                                  0245
         CVD   RCONVERT,OPCDOUBL(ROPCAVT) /* CONVERT THE RELATIVE    */
         UNPK  NAMRLN(3,RWORK2),OPCDOUBL+6(2,ROPCAVT)
         OI    NAMRLN+2(RWORK2),X'F0'   /* AND PLACE IN MESSAGE      */
*                     END;                                         0246
*                   ELSE                                           0247
*                     NAMRLN='ALL'; /* ELSE PLACE ALL                */
         B     @RC00243                                            0247
@RF00243 MVC   NAMRLN(3,RWORK2),@CC01251                           0247
*                 END;                                             0248
*               ELSE                                               0249
*                 ;                                                0249
@RF00240 DS    0H                                                  0250
*             END;                  /* FINISHED WITH THE OTHER MSGS  */
*         END;                                                     0251
*       ELSE                                                       0252
*         ;                                                        0252
@RF00189 DS    0H                                                  0253
*       OPCLDNME(4:5)='07';         /* SET UP WRITE MOD NAME         */
@RC00189 MVC   OPCLDNME+3(2,ROPCAVT),@CC01252                      0253
*     END;                                                         0254
*   RESPECIFY                                                      0255
*     RPARM RSTD;                   /*                               */
@RC00175 DS    0H                                                  0256
*   RPARM=ROPCAVT;                  /* SET UP PARM                   */
         LR    RPARM,ROPCAVT                                       0256
*   GEN REFS(OPCXCTL,ROPCAVT) EXIT;                                0257
*                                         /* CALL NEXT MODULE        */
         XCTL  SF=(E,OPCXCTL(ROPCAVT))
*   RESPECIFY                                                      0258
*     RPARM UNRSTD;                 /*                               */
*SPLTBYTE:                                                         0259
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0259
@EL00001 DS    0H                                                  0259
@EF00001 DS    0H                                                  0259
@ER00001 BR    @14                                                 0259
SPLTBYTE DS    0H                                                  0260
*   RFY                                                            0260
*    (IEDPRUQP,                                                    0260
*     RBASE,                                                       0260
*     ROPCAVT,                                                     0260
*     ROPCE,                                                       0260
*     IEDQAPTR,                                                    0260
*     RWORKA,                                                      0260
*     RPRU,                                                        0260
*     REG14,                                                       0260
*     RWORK2) RSTD;                                                0260
*                                                                  0260
*/*                                                          @YM08414*/
*                                                                  0261
*   DO WHILE NUMBER^=0;             /* ANY BYTES LEFT SPLIT  @YM08414*/
         B     @DE00261                                            0261
@DL00261 DS    0H                                                  0262
*     RCONVERT=CHAR1;               /* PUT DIGIT IN TWO BYTES      0262
*                                                            @XM05803*/
         L     @15,DIGITPTR(,RWORK2)                               0262
         SLR   RCONVERT,RCONVERT                                   0262
         IC    RCONVERT,CHAR1(,@15)                                0262
*     SLL(RCONVERT,4);              /* HI HALF BYTE OVER     @XM05803*/
         SLL   RCONVERT,4                                          0263
*     GEN( L @15,WKPTR1(,RWORK2));  /* POINT TO AREA         @XM05803*/
          L @15,WKPTR1(,RWORK2)
*     GEN( STCM RCONVERT,2,0(@15)); /* PUT HI HALF IN FIRST  @XM05803*/
          STCM RCONVERT,2,0(@15)
*     SRL(RCONVERT,4);              /* BACK TO NORMAL        @XM05803*/
         SRL   RCONVERT,4                                          0266
*     GEN( STCM RCONVERT,1,1(@15)); /* LOW HALF IN SECOND    @XM05803*/
          STCM RCONVERT,1,1(@15)
*     WKBYTE1=WKBYTE1&SIGN0F;       /* TURN OFF HI FOUR BITS @XM05689*/
         L     @15,WKPTR1(,RWORK2)                                 0268
         NC    WKBYTE1(2,@15),@CB00080                             0268
*/*                                                          @YM08414*/
*                                                                  0269
*     WKPTR1=WKPTR1+2;              /* BUMP TO NEXT BYTE IN WKAREA 0269
*                                      FOR NEXT BYTE         @YM08414*/
         AL    @15,@CF00065                                        0269
         ST    @15,WKPTR1(,RWORK2)                                 0269
*     DIGITPTR=DIGITPTR+1;          /* BUMP TO NEXT DIGIT    @YM08414*/
         LA    @15,1                                               0270
         AL    @15,DIGITPTR(,RWORK2)                               0270
         ST    @15,DIGITPTR(,RWORK2)                               0270
*     NUMBER=NUMBER-1;              /* SUBTRACT 1 FROM DIGITS      0271
*                                                            @YM08414*/
         SLR   @15,@15                                             0271
         IC    @15,NUMBER(,RWORK2)                                 0271
         BCTR  @15,0                                               0271
         STC   @15,NUMBER(,RWORK2)                                 0271
*   END;                            /*                       @YM08414*/
@DE00261 CLI   NUMBER(RWORK2),0                                    0272
         BNE   @DL00261                                            0272
*/*                                                          @YM08414*/
*                                                                  0273
*   RFY                                                            0273
*    (IEDPRUQP,                                                    0273
*     RBASE,                                                       0273
*     ROPCAVT,                                                     0273
*     ROPCE,                                                       0273
*     IEDQAPTR,                                                    0273
*     RWORKA,                                                      0273
*     RPRU,                                                        0273
*     REG14,                                                       0273
*     RWORK2) UNRSTD;                                              0273
*   END SPLTBYTE;                   /* RETURN                @YM08414*/
@EL00002 DS    0H                                                  0274
@EF00002 DS    0H                                                  0274
@ER00002 BR    @14                                                 0274
*   END IGC0E10D                                                   0275
*                                                                  0275
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*                                                                  0275
*       ;                                                          0275
@DATA    DS    0H
@SM01258 MVC   WORMSGAR(0,RWORKA),MSGSTART(RMSGPT)
         DS    0F
         DS    0F
@CF00065 DC    F'2'
@CF00074 DC    F'3'
@CF00092 DC    F'4'
@CF00054 DC    F'8'
@CF01245 DC    F'128'
@CF00234 DC    F'199'
         DS    0D
@CC01251 DC    C'ALL'
@CC01238 DC    C'0C'
@CC01252 DC    C'07'
@CB00080 DC    X'0F0F'
EBCDIC   DC    CL16'0123456789ABCDEF'
         DS    CL3
MSG161   DS    CL37
         ORG   MSG161
@NM00007 DC    AL1(34)
@NM00008 DC    AL1(18)
@NM00009 DC    AL1(0)
@NM00010 DC    CL34'IED161I 3705 FOR          NOT OPEN'
         ORG   MSG161+37
         DS    CL3
MSG183   DS    CL66
         ORG   MSG183
@NM00011 DC    AL1(63)
@NM00012 DC    AL1(9)
@NM00013 DC    AL1(0)
@NM00014 DC    CL63'IED183I          DUMP DCB SPECIFICATION ERROR'
         ORG   MSG183+66
         DS    CL2
MSG191   DS    CL40
         ORG   MSG191
@NM00015 DC    AL1(37)
@NM00016 DC    AL1(0)
@NM00017 DC    AL1(0)
@NM00018 DC    CL37'IED191I PIU TRACE CANNOT BE PERFORMED'
         ORG   MSG191+40
MSG199   DS    CL69
         ORG   MSG199
@NM00019 DC    AL1(66)
@NM00020 DC    AL1(25)
@NM00021 DC    AL1(0)
@NM00022 DC    CL66'IED199I SSCP-PU COMMAND        FOR          FAILED,C
                SENSE=        '
         ORG   MSG199+69
         DS    CL3
MSG203   DS    CL47
         ORG   MSG203
@NM00023 DC    AL1(44)
@NM00024 DC    AL1(9)
@NM00025 DC    AL1(0)
@NM00026 DC    CL44'IED203I          ACTIVE - CANNOT BE SWITCHED'
         ORG   MSG203+47
         DS    CL1
MSG204   DS    CL39
         ORG   MSG204
@NM00027 DC    AL1(36)
@NM00028 DC    AL1(9)
@NM00029 DC    AL1(0)
@NM00030 DC    CL36'IED204I          3705 SWITCH ABORTED'
         ORG   MSG204+39
         DS    CL1
MSG206   DS    CL62
         ORG   MSG206
@NM00031 DC    AL1(59)
@NM00032 DC    AL1(9)
@NM00033 DC    AL1(0)
@NM00034 DC    CL59'IED206I          CONTROLLING A TP NETWORK--COMMAND C
               REJECTED'
         ORG   MSG206+62
         DS    CL2
MSG209   DS    CL65
         ORG   MSG209
@NM00035 DC    AL1(62)
@NM00036 DC    AL1(46)
@NM00037 DC    AL1(0)
@NM00038 DC    CL62'IED209I DEACT,ACTIV,IPL,OR DUMP ACTIVE-ACTIV       C
                  REJECTED'
         ORG   MSG209+65
         DS    CL3
MSG376   DS    CL86
         ORG   MSG376
@NM00039 DC    AL1(83)
@NM00040 DC    AL1(164)
@NM00041 DC    AL1(0)
@NM00042 DC    CL83'IED376I LINE TRACE NOT STARTED FOR         ,     ,-C
                COMWRITE STILL USING TRACE AREA'
         ORG   MSG376+86
         DS    CL2
ERRORTAB DS    CL37
         ORG   ERRORTAB
@NM00043 DC    H'161'
@NM00044 DC    AL2(MSG161-BASE)
@NM00045 DC    H'183'
@NM00046 DC    AL2(MSG183-BASE)
@NM00047 DC    H'191'
@NM00048 DC    AL2(MSG191-BASE)
@NM00049 DC    H'199'
@NM00050 DC    AL2(MSG199-BASE)
@NM00051 DC    H'203'
@NM00052 DC    AL2(MSG203-BASE)
@NM00053 DC    H'204'
@NM00054 DC    AL2(MSG204-BASE)
@NM00055 DC    H'206'
@NM00056 DC    AL2(MSG206-BASE)
@NM00057 DC    H'209'
@NM00058 DC    AL2(MSG209-BASE)
@NM00059 DC    H'376'
@NM00060 DC    AL2(MSG376-BASE)
ERREND   DC    X'FF'
         ORG   ERRORTAB+37
ZAPAREA  DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
         DC    XL1'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
RZERO    EQU   @00
RPARM    EQU   @01
ROPCAVT  EQU   @02
ROPCE    EQU   @03
IEDQAPTR EQU   @04
RWORKA   EQU   @05
RMSGNO   EQU   @06
RMSGPT   EQU   @07
RCONVERT EQU   @08
RWORK2   EQU   @09
RPRU     EQU   @10
IEDPRUQP EQU   @10
RRETN    EQU   @11
RBASE    EQU   @12
REG14    EQU   @14
R15      EQU   @15
TABMSG   EQU   0
TABMSGNO EQU   TABMSG
TABEND   EQU   TABMSGNO
TABMSGAD EQU   TABMSG+2
MESSAGE  EQU   0
MSGLEN   EQU   MESSAGE
MSGOFFST EQU   MESSAGE+1
MSGSTART EQU   MESSAGE+3
WORKAREA EQU   0
WORLEN   EQU   WORKAREA
WORMSGAR EQU   WORKAREA+4
NAMEAREA EQU   0
NAMFILD  EQU   NAMEAREA
NAMRLN   EQU   NAMEAREA+9
CHAR1    EQU   0
WKBYTE1  EQU   0
MSGNO199 EQU   0
COMMAND  EQU   MSGNO199+24
CMDFID0  EQU   COMMAND
CMDFID11 EQU   CMDFID0
NAME     EQU   MSGNO199+35
SENSEMAP EQU   MSGNO199+58
SNSMAPF0 EQU   SENSEMAP
MSG199WA EQU   MSGNO199+68
NUMBER   EQU   MSG199WA
DIGITPTR EQU   MSG199WA+4
WKPTR1   EQU   MSG199WA+8
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00063 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00063
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00145 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRLN    EQU   IEDQOPCE+15
@NM00182 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00182
OCREQVAL EQU   OCDEST+1
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCPARM   EQU   IEDQOPCE+28
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDPRUQD EQU   0
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURUCAT EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
PRUTHTYE EQU   PRUFIDN
FID1RESP EQU   PRUDATA
FID1SNS  EQU   FID1RESP
CMMND    EQU   FID1RESP+4
CMMND1   EQU   CMMND
FID0RESP EQU   PRUDATA
CMDMOD   EQU   FID0RESP
FID0SENS EQU   FID0RESP+4
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
@NM00201 EQU   OPCSAVE
@NM00202 EQU   @NM00201
@NM00203 EQU   @NM00201+4
RLNSWTH  EQU   @NM00203
OCCIB    EQU   OCREQVAL
*                                      START UNREFERENCED COMPONENTS
BUFBASE  EQU   @NM00202+1
WORKBYTE EQU   @NM00202
OCICINAC EQU   OCICSW
@NM00188 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00187 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
FLAG     EQU   FID0RESP+2
@NM00006 EQU   CMMND+1
@NM00200 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
@NM00199 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00198 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00197 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00196 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHSDI EQU   PRURHFG0
@NM00195 EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00194 EQU   PRUTIC
@NM00193 EQU   IEDPRUQD+4
PRUDATCT EQU   IEDPRUQD+2
PRUTTCIN EQU   IEDPRUQD
@NM00192 EQU   OCLDNME+4
@NM00191 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00190 EQU   OCREQFLG
@NM00189 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00186 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCWTG    EQU   IEDQOPCE+30
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00185 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00184 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
OCTRMTBL EQU   IEDQOPCE+20
@NM00183 EQU   @NM00182+2
OCCONID  EQU   OCDEST
OCRESP   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00181 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00180 EQU   OCRUDEST+1
@NM00179 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
OPCBOTTM EQU   IEDQOPCD+1184
@NM00178 EQU   IEDQOPCD+1100
@NM00177 EQU   IEDQOPCD+948
@NM00176 EQU   IEDQOPCD+940
@NM00175 EQU   IEDQOPCD+380
@NM00174 EQU   OPCPWCOB+9
@NM00173 EQU   OPCPWCOB+8
@NM00172 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00171 EQU   OPCSPEC
@NM00170 EQU   OPCSPEC
@NM00169 EQU   OPCSPEC
@NM00168 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCGETBF EQU   IEDQOPCD+276
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00167 EQU   OPCLDNME+5
OPCMODID EQU   OPCLDNME+3
@NM00166 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00165 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
SAVTBITN EQU   IEDNSVTD+312
@NM00164 EQU   SAVTCKQB+8
@NM00163 EQU   SAVTCKEC+1
@NM00162 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00161 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00160 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00159 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00158 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00157 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00156 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00155 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00154 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00153 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00152 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00151 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00150 EQU   IEDQAVTD+1242
@NM00149 EQU   IEDQAVTD+1241
@NM00148 EQU   IEDQAVTD+1240
@NM00147 EQU   IEDQAVTD+1237
@NM00146 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00145
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00144 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00143 EQU   IEDQAVTD+1140
@NM00142 EQU   IEDQAVTD+1137
@NM00141 EQU   AVTBIT4
@NM00140 EQU   AVTBIT4
@NM00139 EQU   AVTBIT4
@NM00138 EQU   AVTBIT4
@NM00137 EQU   AVTBIT4
@NM00136 EQU   AVTBIT4
@NM00135 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00134 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00133 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00132 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00131 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00130 EQU   AVTBIT2
@NM00129 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00128 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00127 EQU   IEDQAVTD+950
@NM00126 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00125 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00124 EQU   AVTCWFL2
@NM00123 EQU   AVTCWFL2
@NM00122 EQU   AVTCWFL2
@NM00121 EQU   AVTCWFL2
@NM00120 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00119 EQU   AVTCWFL1
@NM00118 EQU   AVTCWFL1
@NM00117 EQU   AVTCWFL1
@NM00116 EQU   AVTCWFL1
@NM00115 EQU   AVTCWFL1
@NM00114 EQU   AVTCWFL1
@NM00113 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00112 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00111 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00110 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00109 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00108 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00107 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00106 EQU   AVTOPCQB+8
@NM00105 EQU   AVTOPCEC+1
@NM00104 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00103 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00102 EQU   AVTCKPEC+1
@NM00101 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00100 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00099 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00098 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00097 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00096 EQU   AVTSYSER
@NM00095 EQU   AVTSYSER
@NM00094 EQU   AVTSYSER
@NM00093 EQU   AVTSYSER
@NM00092 EQU   AVTSYSER
@NM00091 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00090 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00089 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00088 EQU   AVTCKBYT
@NM00087 EQU   AVTCKBYT
@NM00086 EQU   AVTCKBYT
@NM00085 EQU   AVTCKBYT
@NM00084 EQU   AVTCKBYT
@NM00083 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00082 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00081 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00080 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00079 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00078 EQU   AVTSAVTP+1
@NM00077 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00076 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00075 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00074 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00073 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00072 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTRNMPT EQU   IEDQAVTD+424
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00071 EQU   AVTPKF
@NM00070 EQU   AVTPKF
@NM00069 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00068 EQU   AVTPKF
@NM00067 EQU   AVTPKF
@NM00066 EQU   AVTPKF
@NM00065 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00063+1
@NM00064 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00062 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00061 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
@NM00005 EQU   SENSEMAP+4
EQUALSGN EQU   MSGNO199+57
FILLER4  EQU   MSGNO199+52
BLANK4   EQU   MSGNO199+51
COMMA1   EQU   MSGNO199+50
FILLER3  EQU   MSGNO199+44
BLANK3A  EQU   MSGNO199+43
BLANK3   EQU   MSGNO199+34
FILLER2  EQU   MSGNO199+31
BLANK2   EQU   MSGNO199+30
@NM00004 EQU   COMMAND+4
@NM00003 EQU   CMDFID0+2
BLANK1   EQU   MSGNO199+23
FILLER1  EQU   MSGNO199
NAMCOMMA EQU   NAMEAREA+8
MSGMOD   EQU   WORMSGAR+24
@NM00002 EQU   WORMSGAR
@NM00001 EQU   WORKAREA+2
MSGOFF2  EQU   MESSAGE+2
*                                      END UNREFERENCED COMPONENTS
@RC00191 EQU   @RC00189
@RC00240 EQU   @RC00189
@PB00002 EQU   @EL00001
@RC00243 EQU   @RC00240
@EL01    EQU   @EL00001
@ENDDATA EQU   *
@DATEND  EQU   *
         END   IGC0E10D,(C'PLS2249',0701,77120)
