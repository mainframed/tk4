         TITLE 'IGCT210D, ICOPY SERVICE ROUTINE                        *
                        '
IGCT210D CSECT ,                                                   0001
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*   AVT=REG1->OPCAVTPT;             /* ADDRESS OF AVT        @SA71947*/
         L     AVT,OPCAVTPT(,REG1)                                 0230
*   GEN NOREFS NOSETS;                                             0231
*                                   /*
IGCT210D IEDHJN AFTERHJN,HJN           MODULE IDENTIFICATION MACRO
*   UNIT=OCUNIT;                    /* GET UNIT ADDRESS      @Y17XAR5*/
         L     @12,AVTOCGET(,AVT)                                  0232
         L     @10,ROPCE(,@12)                                     0232
         L     UNIT,OCUNIT(,@10)                                   0232
*   ELMNT=OCCIB;                    /* GET PARM LIST ADDRESS @Y17XAR5*/
         L     ELMNT,OCCIB-1(,@10)                                 0233
         LA    ELMNT,0(,ELMNT)                                     0233
*   RWRK1=UNIT;                     /* SAVE FIRST UNIT ADDRESS       */
         LR    RWRK1,UNIT                                          0234
*   ENDUNIT=UNIT+AVTKEYLE+12;       /* END OF UNIT ADDRESS           */
         L     @12,OPCWORK(,@12)                                   0235
         LA    @10,12                                              0235
         LR    @00,UNIT                                            0235
         AH    @00,AVTKEYLE(,AVT)                                  0235
         ALR   @00,@10                                             0235
         ST    @00,ENDUNIT(,@12)                                   0235
*   RAREA=ELMNT->WTO;               /* ADDRESS OF USER WORKAREA      */
         L     RAREA,WTO(,ELMNT)                                   0236
*   CONTROL=CONTROL&&CONTROL;       /* CLEAR CONTROL AREA TO ZERO    */
         XC    CONTROL(8,RAREA),CONTROL(RAREA)                     0237
*   CNTFLG=1;                       /* INITIALIZE COUNT TO ONE       */
         MVI   CNTFLG(RAREA),X'01'                                 0238
*   IF PRURHSDI='1'B×BDUSYRSP^='60'X/* WAS RESPONSE GOOD     @Y17XAR5*/
*     THEN                                                         0239
         LR    @12,UNIT                                            0239
         AL    @12,@CF02102                                        0239
         TM    PRURHSDI(@12),B'00000100'                           0239
         BO    @RT00239                                            0239
         ALR   @10,UNIT                                            0239
         CLI   BDUSYRSP(@10),X'60'                                 0239
         BE    @RF00239                                            0239
@RT00239 DS    0H                                                  0240
*     DO;                           /* NO,                           */
*       ELMNT->WRTCD='1C'X;         /* SET RETURN CODE               */
         MVI   WRTCD(ELMNT),X'1C'                                  0241
*       GO TO ALLDONE;              /* TELL APPLICATION PROGRAM      */
         B     ALLDONE                                             0242
*     END;                                                         0243
*   DATA=ADDR(IEDBDU)+LENGTH(IEDBDU);/* ADDR OF RESPONSE DATA      0244
*                                                            @Y17XAR5*/
@RF00239 LA    DATA,18(,UNIT)                                      0244
*   IF DATA->BIT2='1'B              /* NCP 2.0 OR GREATER?   @YA10207*/
*     THEN                                                         0245
         TM    BIT2(DATA),B'00100000'                              0245
         BNO   @RF00245                                            0245
*     DATA=DATA+1;                  /* IF SO, CONTROL FIELD WILL BE
*                                      15 BYTES LONG         @YA10207*/
         LA    DATA,1(,DATA)                                       0246
*   GENERATE;                                                      0247
@RF00245 DS    0H                                                  0247
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF DATA->FIELD=0                /* IS THIS SWITCH ID VERIFICATION*/
*     THEN                                                         0248
         CLI   FIELD(DATA),0                                       0248
         BE    @RT00248                                            0248
*     GO TO SWTCHID;                /* YES, GO PROCESS               */
*   IF DATA->FIELD='02'X            /* IS THIS A MULTIPOINT LINE     */
*     THEN                                                         0250
         CLI   FIELD(DATA),X'02'                                   0250
         BNE   @RF00250                                            0250
*     DO;                           /* YES,                          */
*       DATA=DATA+2;                /* POINT TO NMBR OF DEVICE RCRDS */
         LA    DATA,2(,DATA)                                       0252
*       GENERATE;                                                  0253
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*       TOTENT=DATA->FIELD;         /* COUNT OF DEVICE RECORDS       */
         IC    @12,FIELD(,DATA)                                    0254
         STC   @12,TOTENT(,RAREA)                                  0254
*     END;                                                         0255
*   ELSE                                                           0256
*     TOTENT=1;                     /* SET ONE DEVICE RECORD         */
         B     @RC00250                                            0256
@RF00250 MVI   TOTENT(RAREA),X'01'                                 0256
*   DATA=DATA+1;                    /* POINT TO DEVICE RECORD        */
@RC00250 LA    DATA,1(,DATA)                                       0257
*   GENERATE;                                                      0258
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   RFY                                                            0259
*     RLNGTH RSTD;                  /*                       @Y17XAR5*/
*   RLNGTH=DATA+3;                  /* GRT WIDTH ADDRESS     @ZA01116*/
         LA    RLNGTH,3(,DATA)                                     0260
*   IF RLNGTH>=ENDUNIT              /* CHECK FOR END OF      @Y17XAR5*/
*     THEN                                                         0261
         L     @12,AVTOCGET(,AVT)                                  0261
         L     @12,OPCWORK(,@12)                                   0261
         L     @12,ENDUNIT(,@12)                                   0261
         CR    RLNGTH,@12                                          0261
         BL    @RF00261                                            0261
*     DO;                           /* UNIT EXCEEDED         @ZA01116*/
*       RLNGTH=RWRK1->PRFTIC+12+RLNGTH-ENDUNIT;/*            @Y17XAR5*/
         LA    @10,12                                              0263
         AL    @10,PRFTIC(,RWRK1)                                  0263
         ALR   @10,RLNGTH                                          0263
         SLR   @10,@12                                             0263
         LR    RLNGTH,@10                                          0263
*     END;                          /* SET PTR TO WIDTH      @ZA01116*/
*   WIDTH=RLNGTH->FCOUNT;           /* GET ENTRY WIDTH       @ZA01116*/
@RF00261 SLR   @12,@12                                             0265
         IC    @12,FCOUNT(,RLNGTH)                                 0265
         STC   @12,WIDTH(,RAREA)                                   0265
*   RACT=RAREA+8;                   /* ADDRESS OF FIRST ACTIVE ENTRY */
         LA    RACT,8(,RAREA)                                      0266
*   RINACT=TOTENT-1;                /* ONE LESS THAN TOTAL ENTRIES   */
         SLR   RINACT,RINACT                                       0267
         IC    RINACT,TOTENT(,RAREA)                               0267
         BCTR  RINACT,0                                            0267
*   RLNGTH=WIDTH;                   /* GET ENTRY WIDTH               */
         LR    RLNGTH,@12                                          0268
*   IF RLNGTH=0                     /* IS WIDTH ZERO                 */
*     THEN                                                         0269
         LTR   RLNGTH,RLNGTH                                       0269
         BNZ   @RF00269                                            0269
*     RLNGTH=1;                     /* WIDTH IS ONE FOR DUMMY ENTRY  */
         LA    RLNGTH,1                                            0270
*   RINACT=RACT+RINACT*(RLNGTH+1)+1;/* ADDRESS OF LAST INACTIVE ENTRY*/
@RF00269 LA    @12,1                                               0271
         LR    @15,RLNGTH                                          0271
         ALR   @15,@12                                             0271
         MR    @14,RINACT                                          0271
         ALR   @15,RACT                                            0271
         ALR   @15,@12                                             0271
         LR    RINACT,@15                                          0271
*   ELMNT->WFROM=RINACT+RLNGTH;     /* END OF DATA AREA      @G36XRRU*/
         LR    @12,RINACT                                          0272
         ALR   @12,RLNGTH                                          0272
         ST    @12,WFROM(,ELMNT)                                   0272
*   IF ELMNT->WFROM>ELMNT->WAIBEND  /* IF AIB TOO SMALL      @G36XRRU*/
*     THEN                                                         0273
         C     @12,WAIBEND(,ELMNT)                                 0273
         BH    @RT00273                                            0273
*     GO TO SIZERR;                 /* TAKE ERROR EXIT       @G36XRRU*/
*MOVPOLL:                                                          0275
*   NEXTRCD=DATA+DATA->FCOUNT;      /* ADDRESS NXT DEV RECORD      0275
*                                                            @Y17XAR5*/
MOVPOLL  L     @12,AVTOCGET(,AVT)                                  0275
         L     @12,OPCWORK(,@12)                                   0275
         LR    @10,DATA                                            0275
         SLR   @00,@00                                             0275
         IC    @00,FCOUNT(,DATA)                                   0275
         ALR   @10,@00                                             0275
         ST    @10,NEXTRCD(,@12)                                   0275
*   RESTRICT(REG1);                                                0276
*   DATA=DATA+1;                    /* BUMP TO RSID          @ZA01116*/
         LA    DATA,1(,DATA)                                       0277
*   GENERATE;                                                      0278
*                                       /*                   @ZA01116*/
         BAL   REG12,CHKUNIT            /* CHECK END OF UNIT @ZA01116*/
*   REG1=DATA->FIELD;               /* GET FIRST BYTE        @ZA01116*/
         SLR   REG1,REG1                                           0279
         IC    REG1,FIELD(,DATA)                                   0279
*   DATA=DATA+1;                    /* BUMP TO 2 ND BYTE     @ZA01116*/
         LA    DATA,1(,DATA)                                       0280
*   GENERATE;                                                      0281
*                                       /*                   @ZA01116*/
         BAL   REG12,CHKUNIT            /* CHECK END OF UNIT @ZA01116*/
*   REG1=REG1*256+DATA->FIELD;      /* GET RSID              @ZA01116*/
         LR    @12,REG1                                            0282
         SLA   @12,8                                               0282
         SLR   @10,@10                                             0282
         IC    @10,FIELD(,DATA)                                    0282
         ALR   @12,@10                                             0282
         LR    REG1,@12                                            0282
*   CALL IEDIAP03;                  /* GET TNT OFFSET        @Y17XAR5*/
         L     @12,AVTSAVTP(,AVT)                                  0283
         L     @15,SAVTNAX(,@12)                                   0283
         BALR  @14,@15                                             0283
*   REG1=REG15;                     /* TNT OFFSET FOR THIS DEVICE    */
         LR    REG1,REG15                                          0284
*   IF REG1=0                       /* IS TNT OFFSET ZERO            */
*     THEN                                                         0285
         LTR   REG1,REG1                                           0285
         BZ    @RT00285                                            0285
*     GO TO MOVUPD;                 /* YES, SKIP PROCESSING RECORD   */
*   REG15=AVTRNMPT;                 /* TNT ROUTINE ADDRESS           */
         L     REG15,AVTRNMPT(,AVT)                                0287
*   GENERATE;                                                      0288
         BALR  REG14,REG15         /* LINK TO TERMNAME CODE          */
*   RTRM=REG1-LENGTH(IEDNTRM);      /* SAVE TERM ENTRY PREFIX ADDR 0289
*                                                            @Y17XAR5*/
         L     @12,AVTOCGET(,AVT)                                  0289
         L     @12,OPCWORK(,@12)                                   0289
         LR    @10,REG1                                            0289
         SL    @10,@CF01414                                        0289
         ST    @10,RTRM(,@12)                                      0289
*   DATA=DATA+1;                    /* BUMP TO WIDTH         @ZA01116*/
         LA    DATA,1(,DATA)                                       0290
*   GENERATE;                                                      0291
*                                       /*                   @ZA01116*/
         BAL   REG12,CHKUNIT            /* CHECK END OF UNIT @ZA01116*/
*   IF DATA->FCOUNT^=WIDTH          /* IF ENTRY WIDTH IS     @ZA01116*/
*     THEN                                                         0292
         CLC   FCOUNT(1,DATA),WIDTH(RAREA)                         0292
         BE    @RF00292                                            0292
*     IF DATA->FCOUNT^=0            /* DIFFERENT BUT NOT     @ZA01116*/
*       THEN                                                       0293
         CLI   FCOUNT(DATA),0                                      0293
         BNE   @RT00293                                            0293
*       GOTO ERREXIT;               /* ZERO, THEN ERROR      @ZA01116*/
*   RLNGTH=WIDTH;                   /* AMOUNT OF DATA TO MOVE        */
@RF00292 SLR   RLNGTH,RLNGTH                                       0295
         IC    RLNGTH,WIDTH(,RAREA)                                0295
*   IF TRMBUFRD='1'B                /* IS THIS BUFFERED TERMINAL?  0296
*                                                            @Y17XAR5*/
*     THEN                                                         0296
         L     @12,AVTOCGET(,AVT)                                  0296
         L     @12,OPCWORK(,@12)                                   0296
         L     @12,RTRM(,@12)                                      0296
         TM    TRMBUFRD(@12),B'00000001'                           0296
         BNO   @RF00296                                            0296
*     DO;                           /* YES,                          */
*       TOTSND=TOTENT;              /* SET NUMBER SENDING            */
         IC    @12,TOTENT(,RAREA)                                  0298
         STC   @12,TOTSND(,RAREA)                                  0298
*       TOTTRM=TOTENT;              /* SET TOTAL TERMINALS           */
         IC    @12,TOTENT(,RAREA)                                  0299
         STC   @12,TOTTRM(,RAREA)                                  0299
*     END;                                                         0300
*   IF TRMRSACT='0'B                /* IS TERMINAL INACTIVE  @Y17XAR5*/
*     THEN                                                         0301
@RF00296 L     @12,AVTOCGET(,AVT)                                  0301
         L     @12,OPCWORK(,@12)                                   0301
         L     @12,RTRM(,@12)                                      0301
         TM    TRMRSACT(@12),B'10000000'                           0301
         BZ    @RT00301                                            0301
*     GO TO MOVEI;                  /* YES, GO MOVE ENTRY            */
*   RELEASE(REG1);                                                 0303
*MOVEA:                                                            0304
*   IF DATA->FIELD=0&               /* ARE POLLING CHARS PRESENT AND */
*       RLNGTH^=0                   /* IS WIDTH NOT ZERO             */
*     THEN                                                         0304
MOVEA    CLI   FIELD(DATA),0                                       0304
         BNE   @RF00304                                            0304
         LTR   RLNGTH,RLNGTH                                       0304
         BZ    @RF00304                                            0304
*     DO;                           /* NO, INSERT ZERO FOR CHARS     */
*       RACT->FIELD(1:RLNGTH)=RACT->FIELD(1:RLNGTH)&&RACT->FIELD(1:
*           RLNGTH);                                               0306
         LR    @12,RLNGTH                                          0306
         BCTR  @12,0                                               0306
         EX    @12,@SX02103                                        0306
*       RACT=RACT+RLNGTH;           /* ADD FIELD LENGTH              */
         ALR   RACT,RLNGTH                                         0307
*       GO TO MOVEA1;               /* GO SET INDEX                  */
         B     MOVEA1                                              0308
*     END;                                                         0309
*   DATA=DATA+1;                    /* POINT TO POLLING CHARS        */
@RF00304 LA    DATA,1(,DATA)                                       0310
*   GENERATE;                                                      0311
*                                       /* CHECK END OF UNIT @ZA01116*/
         BAL   REG12,CHKUNIT            /* EXCEEDED          @ZA01116*/
*MOVEA2:                            /*                       @ZA01116*/
*   GEN(BAL REG12,CHKUNIT);         /* END OF UNIT ?         @SA71947*/
MOVEA2   BAL REG12,CHKUNIT
*   IF RLNGTH=0                     /* ARE POLLING CHARS PRESENT     */
*     THEN                                                         0313
         LTR   RLNGTH,RLNGTH                                       0313
         BNZ   @RF00313                                            0313
*     DO;                           /* NO,                           */
*       RACT->FIELD='DF'X;          /* INSERT DUMMY CHARACTER        */
         MVI   FIELD(RACT),X'DF'                                   0315
*       GO TO UPRACT;               /* GO UPDATE POINTER             */
         B     UPRACT                                              0316
*     END;                                                         0317
*   RACT->FIELD=DATA->FIELD;        /* MOVE ONE BYTE OF DATA         */
@RF00313 MVC   FIELD(1,RACT),FIELD(DATA)                           0318
*   RLNGTH=RLNGTH-1;                /* REDUCE AMOUNT TO MOVE         */
         BCTR  RLNGTH,0                                            0319
*   DATA=DATA+1;                    /* UPDATE 'FROM' AREA POINTER    */
         LA    DATA,1(,DATA)                                       0320
*   GENERATE;                                                      0321
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*UPRACT:                                                           0322
*   RACT=RACT+1;                    /* UPDATE 'TO' AREA POINTER      */
UPRACT   LA    RACT,1(,RACT)                                       0322
*   IF RLNGTH^=0                    /* HAS ALL DATA BEEN MOVED       */
*     THEN                                                         0323
         LTR   RLNGTH,RLNGTH                                       0323
         BNZ   @RT00323                                            0323
*     GO TO MOVEA2;                 /* NO, GO MOVE MORE              */
*MOVEA1:                                                           0325
*   RACT->FIELD=CNTFLG;             /* SET ENTRY INDEX               */
MOVEA1   MVC   FIELD(1,RACT),CNTFLG(RAREA)                         0325
*   ACTENT=ACTENT+1;                /* UPDATE NUMBER OF ACTIVE       */
         LA    @12,1                                               0326
         SLR   @10,@10                                             0326
         IC    @10,ACTENT(,RAREA)                                  0326
         ALR   @10,@12                                             0326
         STC   @10,ACTENT(,RAREA)                                  0326
*   RACT=RACT+1;                    /* UPDATE 'TO' AREA POINTER      */
         ALR   RACT,@12                                            0327
*   GO TO MOVUPD;                   /* PREPARE TO CHECK NEXT         */
         B     MOVUPD                                              0328
*MOVEI:                                                            0329
*   IF DATA->FIELD=0&               /* ARE POLLING CHARS PRESENT AND */
*       RLNGTH^=0                   /* IS WIDTH NOT ZERO             */
*     THEN                                                         0329
MOVEI    CLI   FIELD(DATA),0                                       0329
         BNE   @RF00329                                            0329
         LTR   RLNGTH,RLNGTH                                       0329
         BZ    @RF00329                                            0329
*     DO;                           /* NO, INSERT ZERO FOR CHARS     */
*       RINACT->FIELD(1:RLNGTH)=RINACT->FIELD(1:RLNGTH)&&RINACT->FIELD(
*           1:RLNGTH);                                             0331
         LR    @12,RLNGTH                                          0331
         BCTR  @12,0                                               0331
         EX    @12,@SX02105                                        0331
*       RINACT=RINACT+RLNGTH;       /* ADD FIELD LENGTH              */
         ALR   RINACT,RLNGTH                                       0332
*       GO TO MOVEI1;               /* GO SET INDEX                  */
         B     MOVEI1                                              0333
*     END;                                                         0334
*   DATA=DATA+1;                    /* POINT TO POLLING CHARS        */
@RF00329 LA    DATA,1(,DATA)                                       0335
*   GENERATE;                                                      0336
*                                       /* CHECK END OF UNIT @ZA01116*/
         BAL   REG12,CHKUNIT            /*  EXCEEDED         @ZA01116*/
*MOVEI2:                            /*                       @ZA01116*/
*   GEN(BAL REG12,CHKUNIT);         /* END OF UNIT ?         @SA71947*/
MOVEI2   BAL REG12,CHKUNIT
*   IF RLNGTH=0                     /* ARE POLLING CHARS PRESENT     */
*     THEN                                                         0338
         LTR   RLNGTH,RLNGTH                                       0338
         BNZ   @RF00338                                            0338
*     DO;                           /* NO,                           */
*       RINACT->FIELD='DF'X;        /* INSERT DUMMY CHARACTER        */
         MVI   FIELD(RINACT),X'DF'                                 0340
*       GO TO UPRINACT;             /* GO UPDATE POINTER             */
         B     UPRINACT                                            0341
*     END;                                                         0342
*   RINACT->FIELD=DATA->FIELD;      /* MOVE ONE BYTE OF DATA         */
@RF00338 MVC   FIELD(1,RINACT),FIELD(DATA)                         0343
*   RLNGTH=RLNGTH-1;                /* REDUCE AMOUNT TO MOVE         */
         BCTR  RLNGTH,0                                            0344
*   DATA=DATA+1;                    /* UPDATE 'FROM' AREA POINTER    */
         LA    DATA,1(,DATA)                                       0345
*   GENERATE;                                                      0346
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*UPRINACT:                                                         0347
*   RINACT=RINACT+1;                /* UPDATE 'TO' AREA POINTER      */
UPRINACT LA    RINACT,1(,RINACT)                                   0347
*   IF RLNGTH^=0                    /* HAS ALL DATA BEEN MOVED       */
*     THEN                                                         0348
         LTR   RLNGTH,RLNGTH                                       0348
         BNZ   @RT00348                                            0348
*     GO TO MOVEI2;                 /* NO, GO MOVE MORE              */
*MOVEI1:                                                           0350
*   RINACT->FIELD=CNTFLG;           /* SET ENTRY INDEX               */
MOVEI1   MVC   FIELD(1,RINACT),CNTFLG(RAREA)                       0350
*   RINACT=RINACT-(WIDTH*2+1);      /* ADDRESS OF NEXT INACTIVE      */
         SLR   @12,@12                                             0351
         IC    @12,WIDTH(,RAREA)                                   0351
         ALR   @12,@12                                             0351
         AL    @12,@CF00094                                        0351
         SLR   RINACT,@12                                          0351
*MOVUPD:                                                           0352
*   CNTFLG=CNTFLG+1;                /* UPDATE COUNT OF NMBR MOVED    */
MOVUPD   LA    @12,1                                               0352
         SLR   @10,@10                                             0352
         IC    @10,CNTFLG(,RAREA)                                  0352
         ALR   @12,@10                                             0352
         STC   @12,CNTFLG(,RAREA)                                  0352
*   IF CNTFLG>TOTENT                /* HAVE ALL ENTRIES BEEN MOVED   */
*     THEN                                                         0353
         CLC   CNTFLG(1,RAREA),TOTENT(RAREA)                       0353
         BNH   @RF00353                                            0353
*     DO;                           /* YES,                          */
*       CNTFLG=2;                   /* SET FLAGS TO ACTIVE           */
         MVI   CNTFLG(RAREA),X'02'                                 0355
*       IF WIDTH=0                  /* ARE DUMMY CHARS USED          */
*         THEN                                                     0356
         CLI   WIDTH(RAREA),0                                      0356
         BNE   @RF00356                                            0356
*         WIDTH=2;                  /* YES, SET WIDTH TO TWO         */
         MVI   WIDTH(RAREA),X'02'                                  0357
*       ELSE                                                       0358
*         WIDTH=WIDTH+1;            /* NO, INCLUDE INDEX IN WIDTH    */
         B     @RC00356                                            0358
@RF00356 LA    @12,1                                               0358
         SLR   @10,@10                                             0358
         IC    @10,WIDTH(,RAREA)                                   0358
         ALR   @12,@10                                             0358
         STC   @12,WIDTH(,RAREA)                                   0358
*       RACT->FIELD='FE'X;          /* SET END OF ACTIVE ENTRIES     */
@RC00356 MVI   FIELD(RACT),X'FE'                                   0359
*       GO TO ALLDONE;              /* GO POST APPLICATION           */
         B     ALLDONE                                             0360
*     END;                                                         0361
*   DATA=NEXTRCD;                   /* ADDRESS OF NEXT DEVICE RECORD
*                                                            @Y17XAR5*/
@RF00353 L     @12,AVTOCGET(,AVT)                                  0362
         L     @12,OPCWORK(,@12)                                   0362
         L     DATA,NEXTRCD(,@12)                                  0362
*   GENERATE;                                                      0363
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   GO TO MOVPOLL;                  /* GO MOVE NEXT ENTRY            */
         B     MOVPOLL                                             0364
*   RFY                                                            0365
*     REG12 RSTD;                   /*                       @Y17XAR5*/
*CHKUNIT:                                                          0366
*   IF DATA>=ENDUNIT                /* ARE WE PAST END OF UNIT     0366
*                                                            @Y17XAR5*/
*     THEN                                                         0366
CHKUNIT  L     @10,AVTOCGET(,AVT)                                  0366
         L     @10,OPCWORK(,@10)                                   0366
         L     @15,ENDUNIT(,@10)                                   0366
         CR    DATA,@15                                            0366
         BL    @RF00366                                            0366
*     DO;                           /* YES,                          */
*       DATA=RWRK1->PRFTIC+12+DATA-ENDUNIT;/*                @Y17XAR5*/
         LA    @14,12                                              0368
         L     @01,PRFTIC(,RWRK1)                                  0368
         LR    @00,@01                                             0368
         ALR   @00,@14                                             0368
         LR    @01,DATA                                            0368
         ALR   @01,@00                                             0368
         SLR   @01,@15                                             0368
         LR    DATA,@01                                            0368
*       NEXTRCD=RWRK1->PRFTIC+12+NEXTRCD-ENDUNIT;/*          @Y17XAR5
*                                      RESET NEXT DATA       @ZA01116
*                                      RECORD POINTER        @ZA01116*/
         AL    @00,NEXTRCD(,@10)                                   0369
         SLR   @00,@15                                             0369
         ST    @00,NEXTRCD(,@10)                                   0369
*       ENDUNIT=RWRK1->PRFTIC+AVTKEYLE+12;/* ENDOF NEXT UNIT ADDRESS
*                                                            @Y17XAR5*/
         L     @15,PRFTIC(,RWRK1)                                  0370
         LH    @01,AVTKEYLE(,AVT)                                  0370
         ALR   @01,@15                                             0370
         ALR   @01,@14                                             0370
         ST    @01,ENDUNIT(,@10)                                   0370
*       RWRK1=RWRK1->PRFTIC;        /* NEXT UNIT ADDRESS             */
         LR    RWRK1,@15                                           0371
*       GO TO CHKUNIT;                                             0372
         B     CHKUNIT                                             0372
*     END;                                                         0373
*   GENERATE;                                                      0374
@RF00366 DS    0H                                                  0374
         BR    REG12               /* RETURN TO CALLER               */
*   RFY                                                            0375
*     REG12 UNRSTD;                 /*                       @Y17XAR5*/
*SWTCHID:                                                          0376
*   RTO=RAREA+8;                    /* ADDRESS TO MOVE DATA TO     0376
*                                                            @Y17XAR5*/
SWTCHID  LA    RTO,8(,RAREA)                                       0376
*   DATA=DATA+1;                    /* POINT TO DEVICE RECORD        */
         LA    DATA,1(,DATA)                                       0377
*   GENERATE;                                                      0378
*                                       /* CHECK END OF UNIT @ZA01116*/
         BAL   REG12,CHKUNIT            /*  EXCEEDED         @ZA01116*/
*   DATA=DATA+DATA->FIELD(1)+2;     /* SKIP DEVICE RECORD            */
         LR    @12,DATA                                            0379
         SLR   @10,@10                                             0379
         IC    @10,FIELD(,DATA)                                    0379
         ALR   @12,@10                                             0379
         LA    @12,2(,@12)                                         0379
         LR    DATA,@12                                            0379
*   GENERATE;                                                      0380
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   RAREA->FIELD(3)=DATA->FIELD(1); /* ENTRY WIDTH                   */
         MVC   FIELD+2(1,RAREA),FIELD(DATA)                        0381
*MOVSWID:                                                          0382
*   NEXTRCD=DATA+DATA->FCOUNT+2;    /* ADDR OF NEXT ID       @Y17XAR5*/
MOVSWID  L     @12,AVTOCGET(,AVT)                                  0382
         L     @12,OPCWORK(,@12)                                   0382
         LR    @10,DATA                                            0382
         SLR   @15,@15                                             0382
         IC    @15,FCOUNT(,DATA)                                   0382
         ALR   @10,@15                                             0382
         AL    @10,@CF00105                                        0382
         ST    @10,NEXTRCD(,@12)                                   0382
*   DATA=DATA+1;                    /* POINT TO ID FLAGS             */
         LA    DATA,1(,DATA)                                       0383
*   GENERATE;                                                      0384
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   RAREA->FIELD(1)=RAREA->FIELD(1)+1;/* UPDATE ID COUNT             */
         LA    @12,1                                               0385
         SLR   @10,@10                                             0385
         IC    @10,FIELD(,RAREA)                                   0385
         ALR   @12,@10                                             0385
         STC   @12,FIELD(,RAREA)                                   0385
*   IF DATA->LASTID='1'B            /* IS THIS LAST ID               */
*     THEN                                                         0386
         TM    LASTID(DATA),B'01000000'                            0386
         BNO   @RF00386                                            0386
*     RAREA->FIELD(2)=RAREA->FIELD(1);/* INDICATE LAST ID            */
         MVC   FIELD+1(1,RAREA),FIELD(RAREA)                       0387
*   IF DATA->DEVASSO='1'B           /* IS RSID PRESENT IN ID         */
*     THEN                                                         0388
@RF00386 TM    DEVASSO(DATA),B'10000000'                           0388
         BNO   @RF00388                                            0388
*     DO;                           /* YES,                          */
*       DATA=DATA+3;                /* ADJUST FOR RSID AND FLAGS     */
         LA    DATA,3(,DATA)                                       0390
*       NEXTRCD=NEXTRCD+2;          /* ADJUST FOR RSID       @Y17XAR5*/
         L     @12,AVTOCGET(,AVT)                                  0391
         L     @12,OPCWORK(,@12)                                   0391
         LA    @10,2                                               0391
         AL    @10,NEXTRCD(,@12)                                   0391
         ST    @10,NEXTRCD(,@12)                                   0391
*     END;                                                         0392
*   ELSE                                                           0393
*     DATA=DATA+1;                  /* ADJUST FOR FLAGS              */
         B     @RC00388                                            0393
@RF00388 LA    DATA,1(,DATA)                                       0393
*   GENERATE;                                                      0394
@RC00388 DS    0H                                                  0394
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   RLNGTH=RAREA->FIELD(3);         /* COUNT OF DATA TO MOVE         */
         SLR   RLNGTH,RLNGTH                                       0395
         IC    RLNGTH,FIELD+2(,RAREA)                              0395
*MOVID:                                                            0396
*   RTO->FIELD=DATA->FIELD;         /* MOVE ONE BYTE OF DATA         */
MOVID    MVC   FIELD(1,RTO),FIELD(DATA)                            0396
*   RLNGTH=RLNGTH-1;                /* REDUCE COUNT TO MOVE          */
         BCTR  RLNGTH,0                                            0397
*   RTO=RTO+1;                      /* UPDATE 'TO' AREA ADDRESS      */
         LA    @12,1                                               0398
         ALR   RTO,@12                                             0398
*   DATA=DATA+1;                    /* UPDATE 'FROM' AREA ADDRESS    */
         ALR   DATA,@12                                            0399
*   GENERATE;                                                      0400
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF RLNGTH^=0                    /* HAS ALL DATA BEEN MOVED       */
*     THEN                                                         0401
         LTR   RLNGTH,RLNGTH                                       0401
         BNZ   @RT00401                                            0401
*     GO TO MOVID;                  /* NO, GO MOVE MORE              */
*   RTO->FIELD=RAREA->FIELD(1);     /* SET INDEX                     */
         MVC   FIELD(1,RTO),FIELD(RAREA)                           0403
*   RTO=RTO+1;                      /* UPDATE 'TO' AREA POINTER      */
         LA    RTO,1(,RTO)                                         0404
*   DATA=NEXTRCD;                   /* ADDRESS OF NEXT ID    @Y17XAR5*/
         L     @12,AVTOCGET(,AVT)                                  0405
         L     @12,OPCWORK(,@12)                                   0405
         L     DATA,NEXTRCD(,@12)                                  0405
*   GENERATE;                                                      0406
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF RAREA->FIELD(1)^=RAREA->FIELD(2)/* HAVE ALL ENTRIES BEEN MOVED*/
*     THEN                                                         0407
         CLC   FIELD(1,RAREA),FIELD+1(RAREA)                       0407
         BNE   @RT00407                                            0407
*     GO TO MOVSWID;                /* NO, MORE TO MOVE              */
*   RTO->FIELD='FE'X;               /* INDICATE END OF LIST          */
         MVI   FIELD(RTO),X'FE'                                    0409
*   RAREA->FIELD(3)=RAREA->FIELD(3)+1;/* BUMP WIDTH TO INCLUDE INDEX
*                                                            @Y17XAR5*/
         LA    @12,1                                               0410
         SLR   @10,@10                                             0410
         IC    @10,FIELD+2(,RAREA)                                 0410
         ALR   @12,@10                                             0410
         STC   @12,FIELD+2(,RAREA)                                 0410
*   ELMNT->WFROM=RTO;               /* SAVE ADDRESS          @G36XRRU*/
         ST    RTO,WFROM(,ELMNT)                                   0411
*   IF ELMNT->WFROM>ELMNT->WAIBEND  /* AIB SIZE EXCEEDED     @G36XRRU*/
*     THEN                                                         0412
         L     @12,WFROM(,ELMNT)                                   0412
         C     @12,WAIBEND(,ELMNT)                                 0412
         BH    @RT00412                                            0412
*     GO TO SIZERR;                 /* YES, ERROR            @G36XRRU*/
*   RFY                                                            0414
*     RLNGTH UNRSTD;                                               0414
*ALLDONE:                                                          0415
*   OCTIC=UNIT;                     /* CHAIN UNITS OFF OPCE          */
ALLDONE  L     @12,AVTOCGET(,AVT)                                  0415
         L     @12,ROPCE(,@12)                                     0415
         STCM  UNIT,7,OCTIC(@12)                                   0415
*   ELMNT->WTO=RTO;                 /* UPDATE 'TO' AREA POINTER      */
         ST    RTO,WTO(,ELMNT)                                     0416
*EXIT:                                                             0417
*   ELMNT->WVERB='FF'X;             /* INDICATE RETURN FROM 3705   0417
*                                      SERVICE ROUTINE       @G36XRRU*/
EXIT     MVI   WVERB(ELMNT),X'FF'                                  0417
*   OPCMODID=MOD0A;                 /* SET XCTL MOD ID       @G36XRRU*/
         L     @12,AVTOCGET(,AVT)                                  0418
         MVC   OPCMODID(2,@12),MOD0A                               0418
*   OPCFLAG1=0;                     /* CLEAR CTL FLAG        @G36XRRU*/
         MVI   OPCFLAG1(@12),X'00'                                 0419
*   REG1=REG12;                     /* PASS OP CTL AVT ADDR  @ZM46776*/
         LR    REG1,REG12                                          0420
*   GEN EXIT REFS(OPCXCTL,REG12);                                  0421
*                                  /*                        @ZM46776*/
 XCTL SF=(E,OPCXCTL(REG12))        /* EXIT TO IGC0A10D       @ZM46776*/
*SIZERR:                            /* AIB AREA TOO SMALL    @G36XRRU*/
*   ELMNT->WRTCD='18'X;             /* RC=DATA>AIB AREA      @G36XRRU*/
SIZERR   MVI   WRTCD(ELMNT),X'18'                                  0422
*   GO TO ALLDONE;                  /* RETURN TO CALLER      @G36XRRU*/
         B     ALLDONE                                             0423
*ERREXIT:                                                          0424
*   ELMNT->WRTCD=28;                /* SET RETURN CODE       @ZA03052*/
ERREXIT  MVI   WRTCD(ELMNT),X'1C'                                  0424
*   GO TO ALLDONE;                  /* GO RETURN BUFFER              */
         B     ALLDONE                                             0425
*   GENERATE;                                                      0426
XC1      XC    0(0,RTO),0(RFROM)   /* EXECUTED INSTRUCTIONS TO       */
XC2      XC    0(0,RFROM),0(RTO)   /*      SWAP IVLIST ENTRIES       */
*   END IGCT210D                                                   0427
*                                                                  0427
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*                                                                  0427
*       ;                                                          0427
@EL00001 DS    0H                                                  0427
@EF00001 DS    0H                                                  0427
@ER00001 BR    @14                                                 0427
@DATA    DS    0H
@SX02103 XC    FIELD(0,RACT),FIELD(RACT)
@SX02105 XC    FIELD(0,RINACT),FIELD(RINACT)
         DS    0F
         DS    0F
@CF00094 DC    F'1'
@CF00105 DC    F'2'
@CF01414 DC    F'14'
@CF02102 DC    F'-8'
         DS    0D
MOD0A    DC    CL2'0A'
PATCH    DC    XL104'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
ROPCAVT  EQU   @02
REG0     EQU   @00
REG1     EQU   @01
AVT      EQU   @02
TNTNDX   EQU   @03
RWRK1    EQU   @03
ELMNT    EQU   @04
UNIT     EQU   @05
RWORK    EQU   @06
RTO      EQU   @06
RACT     EQU   @06
BTU      EQU   @07
DATA     EQU   @07
LCB      EQU   @08
PARAM    EQU   @08
RINACT   EQU   @08
RAREA    EQU   @09
REG12    EQU   @12
RLNGTH   EQU   @13
REG15    EQU   @15
REG14    EQU   @14
RFROM    EQU   @08
TRMNTRY  EQU   @08
CVTPTR   EQU   16
IEDQAPTR EQU   0
IEDQPPTR EQU   0
IEDPRUQP EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   -256
CVTRELNO EQU   CVTFIX+252
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00005 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00005
AVTOCGET EQU   IEDQAVTD+392
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00087 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTNAX  EQU   IEDNSVTD+248
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCWORK  EQU   IEDQOPCD+140
OPCFLAG1 EQU   IEDQOPCD+146
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMBUFRD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+7
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDBDU   EQU   0
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDPRUQD EQU   0
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
@NM00139 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00139
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCPARM   EQU   IEDQOPCE+28
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
@NM00156 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00156
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDNTNTD EQU   0
WORKAREA EQU   0
WVERB    EQU   WORKAREA+8
WRTCD    EQU   WORKAREA+11
WTO      EQU   WORKAREA+16
WFROM    EQU   WORKAREA+20
WAIBEND  EQU   WORKAREA+36
FIELD    EQU   0
FCOUNT   EQU   FIELD
FLAGS    EQU   FCOUNT
DEVASSO  EQU   FLAGS
LASTID   EQU   FLAGS
BIT2     EQU   FLAGS
CONTROL  EQU   0
TOTENT   EQU   CONTROL
ACTENT   EQU   CONTROL+1
WIDTH    EQU   CONTROL+2
CNTFLG   EQU   CONTROL+3
CPUID    EQU   CONTROL+4
TOTSND   EQU   CPUID
TOTTRM   EQU   CPUID+3
WA       EQU   0
NEXTRCD  EQU   WA
ENDUNIT  EQU   WA+4
RTRM     EQU   WA+8
IEDIAP03 EQU   0
AVTADDR  EQU   0
IEDNBPTR EQU   0
IEDNLPTR EQU   0
IEDQLPTR EQU   0
IEDQQPTR EQU   0
IEDQTPTR EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
AVTECBCC EQU   AVTOSECB
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
ROPCE    EQU   OPCCOPCE
OCCIB    EQU   OCREQVAL
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
OCTIC    EQU   OCUNIT+1
AQLIST   EQU   OCTRMTBL
OCQCTL1  EQU   AQLIST
OCQCTL2  EQU   AQLIST+4
BDUTEXT  EQU   BDUEND
PRFSHDR  EQU   IEDQPRF+42
*                                      START UNREFERENCED COMPONENTS
OCQCTLND EQU   OCQCTL2
OCQCTLCD EQU   OCQCTL1
OCICINAC EQU   OCICSW
@NM00145 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00144 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00127 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00126 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00125 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
AVTECBCP EQU   AVTECBCC
@NM00107 EQU   AVTECBCC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00165 EQU   CPUID+1
@NM00164 EQU   WORKAREA+28
WRQTG    EQU   WORKAREA+26
WTNTNDX  EQU   WORKAREA+24
WECBA    EQU   WORKAREA+12
WANSCD   EQU   WORKAREA+10
WENTCD   EQU   WORKAREA+9
WLINK    EQU   WORKAREA+5
WPRI     EQU   WORKAREA+4
WQCBADR  EQU   WORKAREA
TNTFIRST EQU   IEDNTNTD+82
@NM00163 EQU   IEDNTNTD+41
TNTENLEN EQU   IEDNTNTD+40
@NM00162 EQU   IEDNTNTD
PRF2SEQP EQU   PRF2WD2
@NM00161 EQU   IEDPF2+1
@NM00160 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00159 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00158 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00157 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00156+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFPIUO  EQU   PRFPLQCB
PRFTI0   EQU   PRFTIC+1
@NM00155 EQU   PRFTICC
@NM00154 EQU   PRFTICC
@NM00153 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00152 EQU   PRFTICC
@NM00151 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00150 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
@NM00149 EQU   OCLDNME+4
@NM00148 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00147 EQU   OCREQFLG
@NM00146 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00143 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCWTG    EQU   IEDQOPCE+30
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00142 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00141 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00140 EQU   @NM00139+2
OCCONID  EQU   OCDEST
OCRLN    EQU   IEDQOPCE+15
OCRESP   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00138 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00137 EQU   OCRUDEST+1
@NM00136 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
@NM00135 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00134 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00133 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00132 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00131 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00130 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00129 EQU   PRUTIC
@NM00128 EQU   IEDPRUQD+4
PRUDATCT EQU   IEDPRUQD+2
PRUTTCIN EQU   IEDPRUQD
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
BDUMODIF EQU   IEDBDU+1
BDUCMND  EQU   IEDBDU
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00124 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00123 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00122 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
OPCBOTTM EQU   IEDQOPCD+1184
@NM00121 EQU   IEDQOPCD+1100
@NM00120 EQU   IEDQOPCD+948
@NM00119 EQU   IEDQOPCD+940
@NM00118 EQU   IEDQOPCD+380
@NM00117 EQU   OPCPWCOB+9
@NM00116 EQU   OPCPWCOB+8
@NM00115 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00114 EQU   OPCSPEC
@NM00113 EQU   OPCSPEC
@NM00112 EQU   OPCSPEC
@NM00111 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCGETBF EQU   IEDQOPCD+276
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00110 EQU   OPCLDNME+5
@NM00109 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCSAVE  EQU   IEDQOPCD+56
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00108 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
SAVTBITN EQU   IEDNSVTD+312
@NM00106 EQU   SAVTCKQB+8
@NM00105 EQU   SAVTCKEC+1
@NM00104 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00103 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00102 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00101 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00100 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00099 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00098 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00097 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00096 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00095 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00094 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00093 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00092 EQU   IEDQAVTD+1242
@NM00091 EQU   IEDQAVTD+1241
@NM00090 EQU   IEDQAVTD+1240
@NM00089 EQU   IEDQAVTD+1237
@NM00088 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00087
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00086 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00085 EQU   IEDQAVTD+1140
@NM00084 EQU   IEDQAVTD+1137
@NM00083 EQU   AVTBIT4
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00076 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00075 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00074 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00073 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00072 EQU   AVTBIT2
@NM00071 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00070 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00069 EQU   IEDQAVTD+950
@NM00068 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00067 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00066 EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL1
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00054 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00053 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00052 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00051 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00050 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00049 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00048 EQU   AVTOPCQB+8
@NM00047 EQU   AVTOPCEC+1
@NM00046 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00045 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00044 EQU   AVTCKPEC+1
@NM00043 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00042 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00041 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00040 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00039 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00038 EQU   AVTSYSER
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00032 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00031 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00030 EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00024 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00023 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00022 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00021 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00020 EQU   AVTSAVTP+1
@NM00019 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00018 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00017 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00016 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00015 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00014 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00013 EQU   AVTPKF
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTCKAVT EQU   @NM00005+1
@NM00006 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00004 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00003 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
*                                      END UNREFERENCED COMPONENTS
@RT00248 EQU   SWTCHID
@RT00273 EQU   SIZERR
@RT00285 EQU   MOVUPD
@RT00293 EQU   ERREXIT
@RT00301 EQU   MOVEI
@RT00323 EQU   MOVEA2
@RT00348 EQU   MOVEI2
@RT00401 EQU   MOVID
@RT00407 EQU   MOVSWID
@RT00412 EQU   SIZERR
@EL01    EQU   @EL00001
@ENDDATA EQU   *
@DATEND  EQU   *
         END   IGCT210D,(C'PLS1227',0701,77172)
