         TITLE 'IGC0010D - OPERATOR CONTROL INPUT HANDLER'
IGC0010D CSECT
         SPACE 3
*C000000-999999                                                  S99240
*A112500,128000,396000,402080,402280,427000,431000,456000,535000 S22024
*A555030                                                         S22024
*C006000,402320                                                  S22024
*C008000,015000,020000,023000,027000,029000,030000,049500        X02004
*C527000                                                         X02004
*A008200-008800,015000-015600,020300-020600,023300-023600,       X02004
*A030030-030900,032500,056500,057500,058300-058600,062500,063500 X02004
*A125200,125800,527027-527037,527061,527065,527070-527074        Y05330
*A527401-527402,527480,527497,                                   Y05330
*A125400-125600,527000-527025,527038-527060,527063-527064,       X02004
*A527066-527069,527075-527097,527099-527107-527112-527132,       X02004
*A527134-527176,527178-527363,527365-527368,527371-527400,       X02004
*A527403-527479,527481-527494,527498-527503,568050-568950        X02004
*C527098,527108-527110,527133,527177,527496                     SA60320
*C527364,527369-527370,527495                                   SA58435
*D368000-374000,377400                                          SA60006
*C527218                                                        SA61819
*A259000,261100,375400-376600                                   OY00466
*C375000                                                        OY00466
*A435000                                                        SA67769
*D451000                                                        SA67769
*C527566,527568                                                @SA70211
*D527234-527236                                                @SA71116
*A527244                                                       @SA71116
*C343000-348000                                                @YA04391
*C534200                                                       @YA07487
*C527142,527148                                                @XA06556
*A058300,102000,112500,527134,555270                           @XA06556
* A089200,402080                                               @SA74249
*A527994                                                       @YA10702
*C527118-527132,527138-527140,527160,527298-527310             @YA10702
*D527162-527190,527194-527266,527356                           @YA10702
*A280000,555600                                                @OZ09959
*C530000                                                       @OZ09959
*A186000                                                       @OY14481
*A016000,029000,058400,058600,398000,405000,422000,567000      @Y17XARX
*C006000,006006,388000                                         @Y17XARX
*D035000-037000,046000-048000,385000,399600-402520,550000,     @Y17XARX
*D551000,555260,555030,555150                                  @Y17XARX
*RESULT OF IGC0010D-IGC0J10D SPLIT                             @Y17XART
*A526000                                                       @Y17XART
*C125600                                                       @Y17XART
*D527002-527936  THIS CODE IS IN IGC0J10D                      @Y17XART
*D555277,527000-527998                                         @Y17XART
*A548310,548930,548962                                         @Y17XARW
*D402680-402800,548210                                         @Y17XARW
*A406780,555240                                                @Y17XARW
*A548931                                                       @Y17XARS
*C406240                                                       @Y17XARW
*D402840-406000,548180                                         @Y17XARW
*A184000,188000,376600,555000,568100                           @G36XRRU
*C377600,427500-429000,432000,438000,448000-453000             @G36XRRU
*D125400-125420,126100,259500,261100,448000-453000,525270-527997G36XRRU
*C548300                                                       @OX21052
*C280140,529000                                                @OZ30378
***********************************************************************
*                                                                     *
* MODULE NAME = IGC0010D (TCAM,OPERATOR CONTROL)               @Y17XARX
*                                                                     *
* DESCRIPTIVE-NAME=OPERATOR CONTROL INPUT HANDLER - PART I     @Y17XART
*                                                                     *
* COPYRIGHT='NONE'                                                    *
*                                                                     *
* STATUS = VERSION 10.0                                        @Y17XARX
*                                                                     *
*FUNCTION - THIS MODULE IS CALLED FROM THE MESSAGE CONTROL PROG- X02004
*        RAM FOR PROCESSING OPERATOR CONTROL COMMANDS AND THE    X02004
*        APPLICATION PROGRAM FOR PROCESSING APPLICATION PROGRAM  X02004
*        MACROS. PROCESSING FROM THE MCP IS AS FOLLOWS: CALLING  X02004
*        IS FROM IEDQCA VIA SVC 104 WHEN INPUT IS POSTED TO      X02004
*        OPERATOR CONTROL OR FROM OTHER TRANSIENTS WHEN PROCESSING OF *
*        A PREVIOUS COMMAND IS ENDED.  WHEN CONTROL IS PASSED FROM    *
*        IEDQCA, GENERAL REGISTERS 14 AND 15 ARE SAVED.  WHEN ALL     *
*        COMMANDS HAVE BEEN PROCESSED, THESE REGISTERS ARE RESTORED   *
*        AND A BR 14 RETURNS TO IEDQCA.  PROCESSING OF INPUT IS       *
*        DOCUMENTED BELOW PRIOR TO THE ACTUAL CODE THAT DOES THE      *
*        PROCESSING. PROCESSING FROM MPP IS AS FOLLOWS:          X02004
*        THIS MODULE IS ENTERED FROM APPLICATION PROGRAM MACRO   X02004
*        FUNCTION MODULES VIA SVC 104. SOME MACRO FUNCTION ARE   X02004
*        PROCESSED HERE, THE REMAINDER PROCESSED IN IGC0A10D.    X02004
*        WHEN ENTRY FROM AN APPLICATION IS DETECTED, CONTROL   @Y17XART
*        IS TRANSFERED TO IGC0J10D VIA XCTL. IGC0J10D CONTAINS @Y17XART
*        ALL THE APPLICATION PROCESSING THAT PREVIOUSLY WAS IN @Y17XART
*        THIS MODULE.                                          @Y17XART
*                                                                     *
* NOTES = COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES @Y17XARX
* IS PRIMARILY THROUGH THE OPERATOR CONTROL AVT.               @Y17XARX
*   DEPENDENCIES = NONE                                        @Y17XARX
*   RESTRICTIONS = NONE                                        @Y17XARX
*   REGISTER CONVENTIONS = OPERATOR CONTROL                    @Y17XARX
*   PATCH LABEL = ZAPAREA                                      @Y17XART
*                                                              @Y17XARX
* MODULE TYPE = PROCEDURE                                      @Y17XARX
*   PROCESSOR = ASSEMBLER                                      @Y17XARX
*   MODULE SIZE = 2 K MAXIMUM                                  @Y17XARX
*   ATTRIBUTES = REUSABLE, REFRESHABLE, DISABLED,              @Y17XARX
*   TRANSIENT(TYPE 4), SUPERVISOR MODE                         @Y17XARX
*ENTRY POINTS - IGC0010D IS THE ONLY ENTRY POINT FOR THE MODULE.      *
*                                                                     *
*INPUT - THE ONLY INPUT REQUIRED FOR THIS MODULE IS THE ADDRESS OF    *
*        THE OPERATOR CONTROL AVT IN REGISTER 1 WHEN ENTRY IS    X02004
*        FROM MCP AND APPLICATION PROG PARAMETE LIST WHEN ENTRY  X02004
*        FROM MPP.                                               X02004
*                                                                     *
*OUTPUT - INFORMATION SET UP IN THE RESIDENT WORKAREA OR THE OPCE TO  *
*        BEPROCESSED BY OTHER SVC LOADS WHEN ENTRY FROM MCP.     X02004
*        WHEN ENTRY FROM MPP,FUNCTION IS PERFORMED WHICH RESULTS X02004
*        IN SOME CASES OF DATA BEING PASSED FROM MPP TO MCP.     X02004
*                                                                     *
*EXTERNAL REFERENCES --  SVC 102(AQCTL, SVC 34(QEDIT), SVC 7(XCTL)    *
*                                                                     *
*EXITS,NORMAL --XCTL TO SVC LOADS LISTED OR RETURN TO CALLER.    X02004
*              IGCM010D,IGCZ010D,IGCD010D,IGC0210D,IGC0310D,IGCR010D  *
*            IGC0110D,IGCV010D,IGCI010D,IGCH010D,IGC0A10D        X02004
*            IGCXX10D: 06,A0,N4,FC,FG,VI,VE,VA,VF,V8,0J,FK     @Y17XART
*EXITS,ERROR -- WHEN ENTRY FROM MCP - NONE                       X02004
*               WHEN ENTRY FROM FROM MPP AS FOLLOWS:             X02004
*        COMPLETION CODE - 4-INVALID TERMINAL NAME (QCOPY)       X02004
*                           -MCP NOT ACTIVE ( MCOUNT,TPDATE,CKREQX02004
*                           -CHECK POINT NOT VALID  (CKREQ)      X02004
*                           -QRESET UNABLE TO FIND ONE ONE OR    X02004
*                            MORE OF THE REQUESTED SEQUENCE NO.  X02004
*                            REG 2 WILL CONTAIN COUNT OF MSG PROCX02004
*        COMPLETION CODE - 8-MCP NOT ACTIVE CTCOPY,QCOPY,ICOPY,  X02004
*                              TCHNG)                            X02004
*                           -TCAM DEB NOT FOUND ( MCOUNT,TPDATE) X02004
*                           -REUSABLE DISK REORGANIZATION IN PROGX02004
*                            REG 2 WILL CONTAIN COUNT OF MESSAGESX02004
*                            PROCESS  BEFORE START OF REORGANIZATX02004
*                             ION.                               X02004
*                        -12-MCP NOT ACTIVE (MCPCLOSE,MRELEASE,  X02004
*                             ICHNG)                             X02004
*                           -NO TCAM DEB FOUND (QCOPY)           X02004
*                          -SEQUENCE NUMBER ERROR (QRESET)       X02004
*                        -16-QREST NOT ALLOWED FOR THIS MPP      X02004
*                        -20-INVALID TERMINAL TYPE (QCOPY)       X02004
*                           -MCP NOT ACTIVE (CQTAM RETRIEVE)     X02004
*                           -INVALID TERMINAL NAME OR TERM HELD  X02004
*                        -24-AN ERROR EXISTS REGARDING THE       X02004
*                            TYPE OF QUEUING OR THERE ARE NO     X02004
*                            MESSAGE QUEUED FOR THIS TERM (QRESETX02004
*                        -28-TERMINATE FUNCTION TO AVOID POSSIBLEX02004
*                            LOGICAL READ ERROR. REG 2 WILL CON- X02004
*                            TAIN COUNT OF MESSAGES MARKED UNSERVX02004
*                            ICED. NO MESSAGES ALE SCHEDULED TOBEX02004
*                            RESENT.
*                                                                     *
*TABLES/WORK AREAS - EXTERNAL--TCAM AVT AND OP CONTROL AVT            *
*                       TNT,QCB,DEB,DCB,PEWA                     X02004
*                   INTERNAL--CIBTBL,MPPTBL, AND XCTLTBL              *
*                                                                     *
*CHARACTER CODE DEPENDENCY --                                         *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
*        THIS IS A MODULE REWRITE AS OF OS/VS/TCAM LEVEL 2       X02004
*
*        THIS MODULE WAS SPLIT WITH THE APPLICATION PROCESSING @Y17XART
*        PROCESSING IN IGC0J10D AS OF TCAM 10.                 @Y17XART
***********************************************************************
         EJECT
*                           E Q U A T E S
         SPACE
RZERO    EQU   0                       PARAMETER REGISTER
RPARM    EQU   1                       PARAMETER REGISTER
ROPCAVT  EQU   2                       POINTER TO OPC AVT
RPARMA   EQU   2                        PROCESS PROG PARM LIST   X02004
ROPCE    EQU   3                       POINTER TO OPCE
RCVT     EQU   3                        OS/VS COM VECTOR TABLE   X02004
RAVT     EQU   4                       POINTER TO TCAM AVT
RDEB     EQU   5                        DATA EXTENT BLOCK        X02004
RWORKAD  EQU   5                        XCTL AREA ADDRESS      @XA06556
RPRITABL EQU   5                        TOP OF PRIORITY TABLE  @Y17XARX
RTCB     EQU   6                        TASK CONTROL BLOCK       X02004
RPRITEND EQU   6                        END OF PRIORITY TABLE  @Y17XARX
RWORKA   EQU   7                       POINTER TO RESIDENT WORKAREA
RWORK    EQU   8                       WORK REGISTER
RWORK1   EQU   9                       WORK REGISTER
RPREFIX  EQU   10                      POINTER TO BUFFER
RQCB     EQU   10                       QUEUE CONTROL BLOCK      X02004
RCIB     EQU   11                      POINTER TO INPUT CIB
RCOUNT   EQU   11                       COUNT REGISTER           X02004
RBASE    EQU   12                      BASE REGISTER
R13      EQU   13                       BASE FOR REG SAVEAREA
RRET     EQU   14                      RETURN REGISTER
RBRNCH   EQU   15                      BRANCH REGISTER
         SPACE 2
AL0      EQU   0                       ZERO LENGTH - EXECUTED INSTRUCT
AL1      EQU   1                       MOVE LENGTH OF 1
AL2      EQU   2                       MOVE LENGTH OF TWO
AL3      EQU   3                       LENGTH 3
AL4      EQU   4                       MOVE LENGTH OF FOUR
AL7      EQU   7                   BLANK EIGHT BYTES
AL8      EQU   8                       MOVE, COMPARE LENGTH OF 8
APPLICAT EQU   X'20'                   INDICATES APPLICATION PROG IN
APPBTU   EQU   X'D3'                    BTU FOR APPLICATION      S22024
CVTPTR   EQU   16                       LOW CORE ADDRESS OF CVT
EQUAL    EQU   8                       BRANCH EQUAL
FFBYTE   EQU   255                     BYTE OF ALL ONE'S
FOUR     EQU   4                        VALUE FOUR
LCBS     EQU   1                        INDICATES STOPPED LCB TO 210D
LCBSTOP  EQU   X'E8'                   PRIORITY OF STOPPED LCB
MSG18    EQU   18                       MESSAGE NUMBER 18
OFF00    EQU   0                       LOAD OFFSET OF ZERO
OFF01    EQU   1                       MOVE OFFSET
OFF02    EQU   2                       MOVE OFFSET
OFF03    EQU   3                       MOVE OFFSET
OFF04    EQU   4                       LOAD OFFSET
OFF05    EQU   5                       MOVE OFFSET
OFF08    EQU   8                       LOAD OFFSET
OFF09    EQU   9                       MOVE OFFSET
OFF0A    EQU   10                       OFFSET 10
OFF0B    EQU   11                       MOVE OFFSET            @XA06556
OFF0C    EQU   12                       OFFSET 12              @G36XRRU
OFF10    EQU   16                      LOAD OFFSET
OFF18    EQU   X'18'                   BRANCH OFFSET
ONE      EQU   1                        VALUE ONE
QUOTE    EQU   X'7D'                   QUOTE IN HEX
QUOTSW   EQU   X'20'                   INDICATE QUOTE IN DATA
THRCLOSE EQU   12                      THRESHOLD CLOSEDOWN
THREE    EQU   3                        VALUE THREE
TIC02    EQU   2                       TIC OF LAST UNIT        @YM08147
TOTE     EQU   X'40'                   TOTE INPUT
ZERO     EQU   0                       CLEAR HIGH BYTE
NOTCA2   EQU   2                        TWO                      S22024
THIRTY4  EQU   34                       SVC NUMBER
XFF      EQU   X'FF'                    MASK VALUE               S22024
         EJECT
         USING IEDQAVTD,RAVT           TCAM AVT ADDRESSABILITY
         USING IEDQCIB,RCIB        CIB ADDRESSABILITY
         USING IEDQOPCE,ROPCE          OPCE ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT    ADDRESSABILITY FOR OPC AVT
         BALR  RBASE,ZERO               SET BASE
         USING *,RBASE             ADDRESSABILITY
IGC0010D IEDHJN SKIPID
         LR    ROPCAVT,RPARM       PICK UP OPC AVT ADDRESS
*                                       OR APPLICATION PROG PARM Y05330
OPCENTRY EQU   *                                                 Y05330
         L     RAVT,OPCAVTPT       POINT TO TCAM AVT
         LA    R13,OPCSAVE              GET ADDRESS OF REG SAVEAREA
         L     RWORKA,OPCWORK      GET ADDRESS OF WORKAREA
         TM    OPCSPEC,OPCFRMCA         ENTRY FROM IEDQCA        S22024
         BZ    NOTCA                    BRANCH IF NO             S22024
         NI    OPCSPEC,XFF-OPCFRMCA     TURN OFF ENTRY-FROM-CA   S22024
         STM   RRET,RBRNCH,OPCRSAVE SAVE CA REGISTERS
         XC    OPCNEXT(AL4),OPCNEXT CLEAR NEW POINTER
NOTCA    EQU   *
         TITLE 'IGC0010D - TEST FOR COMMAND FREED FOR RESOURCES'
***********************************************************************
*                                                                     *
*        THE FIRST CHECK PERFORMED HERE IS TO SEE IF THE PREVIOUS     *
*        COMMAND FREED RESOURCES NEEDED BY A WAITING COMMAND.         *
*        THIS IS ACCOMPLISHED BY CHECKING OPCNEXT IN THE AVT TO SEE IF*
*        IT IS ZERO.  THIS FIELD IS SET ONLY BY IGC0710D WHEN A       *
*        COMMAND COMPLETES AND HAS ANOTHER COMMAND (ELEMENT)          *
*        ATTACHED (OCATTACH SET IN OCFLAG).  THE WAITING ELEMENT      *
*        POINTED TO BY OPCNEXT NOW BECOMES THE CURRENT COMMAND        *
*        (ELEMENT).  THE OCWTG FIELDS ARE USED TO RESTART ELEMENT     *
*        PROCESSING WHERE WAS INTERRUPTED BECAUSE OF RESOURCE         *
*        CONFLICT.  IF OPCNEXT IS ZERO, THE NEXT CHECK IS FOR RESTART.*
*                                                                     *
***********************************************************************
         SPACE
         L     ROPCE,OPCNEXT       GET ADDRESS OF NEXT COMMAND
         LA    ROPCE,AVTEZERO(ROPCE) CLEAR HIGH BYTE
         LTR   ROPCE,ROPCE         ANY?
         BZ    CHEKINPT            NO, CHECK OTHER INPUT
         SPACE
         ST    ROPCE,OPCCOPCE      SAVE ELEMENT POINTER
         MVC   OPCLDNME+OFF03(AL2),OCWTG PICK UP WHERE TO GO NAME
         XC    OCWTG(AL2),OCWTG         CLEAR OUT WTG FIELD
         LH    RZERO,OCPARM        SET PARAMETER
         XC    OPCNEXT(AL4),OPCNEXT CLEAR NEW POINTER
         B     XCTLTBL1            CALL INDICATED MODULE
         TITLE 'IGC0010D - CHECKPOINT RESTART CODE'
***********************************************************************
*                                                                     *
*        A CHECK IS MADE FOR RESTART AT THIS POINT.  IF RESTART IS    *
*        IN PROGRESS, THE RESTART ELEMENT IS OBTAINED FROM OPCCOPCE   *
*        WHERE IT WAS SAVED BY IEDQND. THE VERB FIELD IN THE ELEMENT IS
*        USED TO LOCATE THE CORRECT MODULE TO WHICH THE INPUT SHOULD  *
*        BE PASSED.  AN XCTL TO THE CORRECT MODULE STARTS REPROCESSING*
*        OF THE CHECKPOINTED ELEMENT.                                 *
*                                                                     *
***********************************************************************
         SPACE
CHEKINPT EQU   *
         TM    OPCSPEC,OPCRSTRT    RESTART IN PROGRESS?
         BNO   NORMAL                   NO, CHECK FOR CLOSEDOWN
         SPACE
         L     ROPCE,OPCCOPCE           GET RESTART RECORD INSERTED
*                                       HERE BY IEDQND
         LA    RWORK,OCOPTCDE      POINT TO COMMAND CODE
         LA    RWORK1,CIBTBL       POINT TO CONSOLE TABLE
         TM    OCFLAG,TOTE+APPLICAT INPUT FROM TOTE OR MPP?
         BZ    RECHECK             NO, SKIP NEXT LOAD
         SPACE
         LA    RWORK1,MPPTBL       POINT TO OTHER TABLE
         TM    OCFLAG,APPLICAT     INPUT FROM MPP              @G36XRRU
         BZ    RECHECK             NO, BRANCH                  @G36XRRU
         MVC   OPCLDNME+OFF03(AL2),XCTL0A SET FOR XCTL TO 0A   @G36XRRU
         B     RECHECK1            PREPARE TO XCTL             @G36XRRU
RECHECK  EQU   *
         BAL   RRET,CHKVERB        CHECK INPUT VERB
         B     RSTRTOK                  VALID VERB             @OY14481
         B     RETURN                   RETURN IF ERROR FOR    @OY14481
*                                       PERMANENT WAIT-THIS IS @OY14481
*                                       A SHOULD NOT OCCUR     @OY14481
*                                       CONDITION
RSTRTOK  EQU   *
         SPACE
         MVC   OPCLDNME+OFF03(AL2),OFF01(RWORK1) SET UP XCTL NAME
RECHECK1 EQU   *                                               @G36XRRU
         NI    OCFLAG,FFBYTE-OCATTACH CUT OFF ATTACHED FLAG
         SPACE
         B     XCTLTBL1            XCTL TO NEXT LOAD
         TITLE 'IGC0010D - CONSOLE INPUT PROCESSOR'
***********************************************************************
*                                                                     *
*        THIS ROUTINE CHECKS FOR CONSOLE INPUT AND PROCESSES IT.      *
*        IF CLOSEDOWN IS IN PROGRESS, ALL CONSOLE INPUT IS DEQUEUED   *
*        AND A XCTL IS DONE TO PUT OUT AN ERROR MESSAGE INDICATING    *
*        THE INPUT WAS FLUSHED.  OTHERWISE,  THE VERB IN THE INPUT CIB*
*        IS MATCHED WITH ONE IN THE TABLE CIBTBL IN THIS MODULE.  IF  *
*        NO MATCH IS FOUND, THE CIB IS FREED AND A CHECK FOR MORE     *
*        INPUT IS MADE.  FOR VALID VERBS, A BUFFER UNIT IS GOTTEN     *
*        TO BE USED AS THE OPCE (CURRENT ELEMENT).  THE VERB IS THEN  *
*        MOVED TO THE ELEMENT ALONG WITH THE CONSOLE ID.  THE OCCONSOL*
*        FLAG IS SET IN THE OCFLAG FIELD TO INDICATE CONSOLE INPUT.   *
*        A SCAN OF THE INPUT IS NOW DONE TO CHECK FOR QUOTES AND THE  *
*        LENGTH OF THE DATA.  THE DATA IS THEN MOVED TO THE RESIDENT  *
*        WORKAREA ALONG WITH THE INPUT LENGTH FOR LATER MODULE PROCESS*
*        ING.  THE CIB IS THEN FREED AND A XCTL TO THE CORRECT        *
*        SCANNING MODULE IS EFFECTED.                                 *
*                                                                     *
***********************************************************************
         SPACE
NORMAL   EQU   *
         L     RWORK,AVTCOMPT      GET CSCB ADDRESS
         LA    RZERO,FOUR(RWORK)   POINT TO HEAD OF CIB QUEUE
         L     RCIB,OFF04(RWORK)   PICK UP ADDRESS OF FIRST CIB
         TM    AVTBIT1,AVTCLOSN    CLOSEDOWN IN PROGRESS?
         BNO   CONINPUT            NO, CHECK SOURCE OF INPUT
         SPACE
         TM    AVTCKELF,AVTCMCPN        CLOSEDOWN COMPLETE
         BO    RETURN                   RETURN TO IEDQCA
         SR    RPARM,RPARM         CLEAR REG 1 FOR QEDIT
         LCR   RZERO,RZERO         INDICATE FREE ALL
         SPACE
         SVC   THIRTY4                  QEDIT
         SPACE
         SPACE
CONINPUT EQU   *
         LA    RCIB,ZERO(RCIB)     PICK OFF HIGH BITS
         LTR   RCIB,RCIB           CONSOLE INPUT
         BZ    BUFFINPT            NO, INPUT FROM TCAM
         TM    AVTBIT1,AVTCLOSN         CLOSEDOWN IN PROGRESS
         BO    CLOSEMSG                 YES
         SPACE
         SR    RWORK,RWORK         CLEAR FOR VERB INSERT
         LA    RWORK,CIBVERB       POINT TO VERB CODE
         LA    RWORK1,CIBTBL       POINT TO CORRECT VERB TABLE
         BAL   RRET,CHKVERB        VERIFY GOOD VERB
         SPACE
         B     GOODVERB            GOOD RETURN, VERB IS CORRECT
NXTCIB   EQU   *
         SPACE
         LR    RPARM,RCIB          POINT TO CIB TO BE REMOVED
         L     RCIB,CIBNEXT        GET NEXT CIB ADDRESS
         L     RWORK,AVTCOMPT      GET CSCB ADDRESS
         LA    RZERO,FOUR(RWORK)   POINT TO HEAD OF CIB QUEUE
         SPACE 2
****    REMOVE CIB FROM QUEUE    ****
         QEDIT BLOCK=(1),ORIGIN=(0) REMOVE CIB FROM QUEUE
         SPACE
         B     CONINPUT            CHECK FOR ANOTHER COMMAND
CLOSEMSG EQU   *
         LA    RPARM,CLSMSG             ADDRESS OF MSG
         WTO   MF=(E,(1))               WRITE TO OPERATOR
         B     NXTCIB                   GET NEXT CIB
         SPACE
GOODVERB EQU   *
         CLC   CIBVERB(AL1),MODIFY      MODIFY REQUEST         @OZ09959
         BE    CKREADY                  YES, CHECK FOR READY   @OZ30378
         CLC   CIBVERB(AL1),VARY        VARY REQUESTED         @OZ30378
         BNE   NRESTART                 NO, CONTINUE           @OZ30378
CKREADY  EQU   *                                               @OZ30378
         TM    AVTBIT1,AVTREADN         READY EXECUTED         @OZ09959
         BO    NRESTART                 YES,CONTINUE           @OZ09959
         TM    AVTBIT2,AVTSTRTN         RESTARTING TCAM        @OZ09959
         BNO   NRESTART                 NO, CONTINUE           @OZ09959
         LA    RPARM,NREADYM            PREVENT PROCESSING     @OZ09959
         SR    RZERO,RZERO              CLEAR FOR CONSOLE ID   @OZ09959
         IC    RZERO,CIBCONID           GET ID FOR RESPONSE    @OZ09959
         WTO   MF=(E,(1))               INFORM OPERATOR        @OZ09959
         B     NXTCIB                   GET NEXT REQUEST       @OZ09959
NRESTART EQU   *                                               @OZ09959
         BAL   RWORK,GETBUFF            GET OPCE UNIT
         SPACE
         MVC   OCOPTCDE(AL1),CIBVERB    MOVE VERB TO OPCE
         MVI   OCSWITCH,AVTEZERO        INIT FIELD               S22024
         OI    OCFLAG,OCCONSOL          INDICATE SYSCON INPUT
         MVC   OCCONID(AL1),CIBCONID    SAVE CONSOLE ID
         MVC   OPCLDNME+OFF03(AL2),OFF01(RWORK1) SET XCTL MODULE NAME
         LA    RPREFIX,CIBDATA     POINT TO DATA FIELD
         LH    RWORKA,CIBDATLN     GET LENGTH OF DATA
         N     RWORKA,AVTCLRHI     CLEAR LEFT BYTES OF REG
         LR    RWORK,RWORKA        SAVE BEGINNING COUNT
LOCATEND EQU   *
         LA    RPREFIX,ONE(RPREFIX) POINT TO NEXT INPUT BYTE
         BCT   RWORKA,CONTSCAN     BRANCH IF REMAINING LENGTH NOT ZERO
         SPACE
         B     ENDINPUT            BRANCH, END OF COMMAND FOUND
         SPACE
CONTSCAN EQU   *
         TM    OPCFLAG1,QUOTSW     PREVIOUS QUOTE FOUND?
         BO    SKIPBLNK            YES, DO NOT CHECK BLANKS IN DATA
         SPACE
         CLI   OFF00(RPREFIX),AVTEBLNK CHARACTER A BLANK?
         BE    ENDINPUT            YES, END OF INPUT, CALCULATE LENGTH
         SPACE
SKIPBLNK EQU   *
         CLI   OFF00(RPREFIX),QUOTE QUOTE IN DATA
         BNE   LOCATEND            NO, CONTINUE SEARCH FOR END
         SPACE
         TM    OPCFLAG1,QUOTSW     PREVIOUS QUOTE IN THIS DATA
         BO    PREVQUOT            YES, CHECK DOUBLE QUOTES HERE
         SPACE
         OI    OPCFLAG1,QUOTSW     INDICATE QUOTE FOUND DATA
         B     LOCATEND            SCAN REMAINING INPUT
         SPACE
PREVQUOT EQU   *
         BCTR  RWORKA,RZERO        INCLUDE QUOTE IN COMMAND LENGTH
         LTR   RWORKA,RWORKA       END OF DATA?
         BZ    ENDSCAN             YES, CLEAR FLAG FOR QUOTE
         CLI   OFF01(RPREFIX),QUOTE NEXT CHARACTER A QUOTE?
         BNE   ENDDATA             NO, END OF COMMAND FOUND
         SPACE
         LA    RPREFIX,ONE(RPREFIX) POINT TO NEXT BYTE
         SPACE
         B     LOCATEND                 SCAN REMAINING INPUT
         SPACE
ENDDATA  EQU   *
         SPACE
         CLI   OFF01(RPREFIX),AVTEBLNK BLANK AFTER QUOTE?
         BNE   ENDINPUT            NO, PROBABLE ERROR
         SPACE
ENDSCAN  EQU   *
         NI    OPCFLAG1,FFBYTE-QUOTSW CLEAR PREVIOUS QUOTE FLAG
ENDINPUT EQU   *
         SPACE
         SR    RWORK,RWORKA        CALCULATE ACTUAL LENGTH
         L     RWORKA,OPCWORK      PICK UP WORKAREA ADDRESS
         STH   RWORK,OFF02(RWORKA) PLACE LENGTH IN WORKAREA
         MVI   OFF08(RWORKA),AVTEBLNK SET FIRST BLANK
         MVC   OFF09(AL7,RWORKA),OFF08(RWORKA) CLEAR FIELD
         BCTR  RWORK,RZERO         DECREMENT FOR EXECUTE
         EX    RWORK,DATAMOVE      PLACE DATA IN WORKAREA
         SPACE
         L     RBRNCH,OPCCKCIB                     ADDR OF RTN @YA04391
         BALR  RRET,RBRNCH              BRANCH TO SUBROUTINE   @YA04391
         B     CLOSEMSG                 NOT STOP TCAM          @YA04391
         SPACE
         TM    OPCFLAG1,QUOTSW     ONLY ONE QUOTE FOUND?
         BNO   XCTLTBL1            NO, CALL NEXT MODULE
         SPACE
         LA    RZERO,MSG18              GET ERROR NUMBER
         MVC   OPCLDNME+OFF03(AL2),ERRXCTL SET XCTL NAME
         B     XCTLTBL1                 CALL NEXT MODULE
         SPACE
DATAMOVE MVC   OFF08(AL0,RWORKA),CIBDATA MOVE DATA TO WORKAREA
         SPACE
         TITLE 'IGC0010D - TCAM INPUT PROCESSOR'
***********************************************************************
*                                                                     *
*        THIS ROUTINE HANDLES ALL OTHER INPUT TO OPERATOR CONTROL     *
*        AND CALLS THE CORRECT SVC LOAD TO HANDLE IT.  TOTE OR MPP    *
*        INPUT IS HANDLED IN THIS MODULE IN CODE BELOW.  COMMANDS FROM*
*        OPERATOR CONTROL TERMINALS ARE DEQUEUED FROM THE INPUT QUEUE *
*        AND A XCTL TO IGC0110D IS EFFECTED FOR FURTHER PROCESSING.   *
*        STOPPED LCBS, ARE SENT TO IGCZ110D, MCPCLOSE PROCESSING      *
*        ROUTINE IF THE CLOSEDOWN BIT IN THE AVT IS ON, OR TO         *
*        IGCV110D, STOPLINE ROUTINE, IF IT IS NOT ON. RPL RESPONSES ARE
*        DEQUEUED AND SENT TO IGC0210D FOR PROCESSING VIA XCTL.  IF   *
*        THERE IS NO INPUT ON THE QUEUE AT THIS POINT, CONTROL IS     *
*        RETURNED TO IEDQCA.                                          *
*                                                                     *
***********************************************************************
         SPACE
BUFFINPT EQU   *
         L     RWORK,AVTCOMPT           GET CSCB ADDRESS        OY00466
         ICM   RWORK,ADDRESS,ONE(RWORK) CIB'S SPECIFIED         OY00466
         BZ    NOCIBS                   NO, BRANCH              OY00466
         MVI   ZERO(RWORK),AVTEZERO     CIB QUEUE IS EMPTY,     OY00466
NOCIBS   EQU   *                        ENSURE ECB IS NOT POSTEDOY00466
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               *
               RELATED=ATTACHED-TACKS-IGG019RO(SETATSK)        @G36XRRU
         L     RWORK,AVTOPCOB      PICK UP FIRST ELEMENT ON QUEUE
         MVC   AVTOPCOB+OFF01(AL3),OFF05(RWORK) DEQUEUE THIS INPUT
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          *
               RELATED=IGC0010D(SETATSK)                       @G36XRRU
         LA    RWORK,ZERO(RWORK)   CLEAR HIGH BYTE
         C     RWORK,AVTDELAD      DUMMY LAST ELEMENT?
         BE    RETURN              YES, NOTHING TO PROCESS
         SPACE
         ST    RWORK,OPCCOPCE      CURRENT ELEMENT POINTER
         SPACE
         LA    RZERO,LCBS          INDICATE TO 210D A STOPPED LCB
         LA    RWORK1,XCTLTBL1          SET REG FOR BRANCH       S22024
         CLI   OFF04(RWORK),LCBSTOP STOPPED LCB?
         BNE   CKBCH                    IF NOT, CHECK PRIORITY @Y17XARX
         SPACE
         MVC   OPCLDNME+OFF03(AL2),RNSTOPLN STOPLINE FOR 3705    S22024
         LA    RZERO,NOTCA2
PLCBFLG1 EQU   X'20'                    OFFSET INTO PLCB         S22024
         CLI   PLCBFLG1(RWORK),ZERO     3705 PLCB ?              S22024
         BCR   E,RWORK1                 YES, BRANCH              S22024
         SPACE
         MVC   OPCLDNME+OFF03(AL2),XCTLZ1 SET FOR CLOSEDOWN      S22024
         TM    AVTBIT1,AVTCLOSN         CLOSEDOWN IN PROGRESS    S22024
         BCR   NZ,RWORK1                YES, GO TO Z1            S22024
         MVC   OPCLDNME+OFF03(AL2),XCTLV1 GO PROCESS LCB         S22024
         BR    RWORK1                   XCTL TO V1               S22024
         SPACE
         EJECT                                                 @Y17XARX
         TITLE 'IGC0010D- TCAM INPUT PROCESSOR'                @Y17XARX
***************************************************************@Y17XARX
*        AT THIS POINT A SERIES OF CHECKS IS MADE TO ROUTE     @Y17XARX
*        ELEMENTS BASED ON INPUT PRIORITIES.  TWO INTERNAL     @Y17XARX
*        IGC0010D TABLES ARE USED.  'PRINOFLG' IS USED TO      @Y17XARX
*        ESTABLISH ROUTINGS FOR PRIORITIES WITH NO FLAG BYTE   @Y17XARX
*        ENTRIES.  'PRIFLAGS' IS THE TABLE USED TO DETERMINE   @Y17XARX
*        ROUTINGS FOR INPUT WITH FLAG-KEYED ENTRIES.           @Y17XARX
***************************************************************@Y17XARX
CKBCH    EQU   *
         USING IEDOPRED,RWORK           ESTAB ADDR TO OPRE     @Y17XARX
         LA    RPRITABL,PRINOFLG        ESTAB ADDR TABLE TOP   @Y17XARX
         LA    RPRITEND,PRINOEND        ESTAB ADDR TABLE END   @Y17XARX
NOFLAG   EQU   *                                               @Y17XARX
         CR    RPRITABL,RPRITEND        END OF TABLE ?         @Y17XARX
         BE    CKWTHFLG                 YES,GO CHK PRIOR & FLAG@Y17XARX
         CLC   OPREPRI,ZERO(RPRITABL)   INPUT = TABLE ?        @Y17XARX
         BE    CHKCLOSE                 CHECK FOR CLOSEDOWN    @Y17XARW
         LA    RPRITABL,PRINFLG1(RPRITABL)   BUMP BY TABLEWIDTH@Y17XARX
         B     NOFLAG                   START LOOP AGAIN       @Y17XARX
CKWTHFLG EQU   *                                               @Y17XARX
         LA    RPRITABL,PRIFLAGS        ESTAB ADDR TABLE TOP   @Y17XARX
         LA    RPRITEND,PRIWEND         ESTAB ADDR TABLE END   @Y17XARX
CKWTHFL2 EQU   *                                               @Y17XARX
         CR    RPRITABL,RPRITEND        END OF TABLE ?         @Y17XARX
         BE    TOTEMPP                  CONTINE TO TOTE/MPP    @Y17XARX
         CLC   OPREPRI,ZERO(RPRITABL)   INPUT = TABLE ?        @Y17XARX
         BE    CKFLGBYT                 GO MATCH FLAG BYTE     @Y17XARX
         LA    RPRITABL,PRIFLGS1(RPRITABL)  BUMP BY TABLEWIDTH @Y17XARX
         B     CKWTHFL2                 START LOOP AGAIN       @Y17XARX
CKFLGBYT EQU   *                                               @Y17XARX
         LA    RPRITABL,ONE(RPRITABL)   INCREMENT REG BY ONE   @Y17XARX
         CLC   OPREFLG1,ZERO(RPRITABL)  FLAG IN TABLE ?        @Y17XARX
         BE    MOVETOID                 GO PROCESS ROUTING     @Y17XARX
         LA    RPRITABL,PRIFLGS1-ONE(RPRITABL)  BUMP BY WIDTH  @Y17XARX
         B     CKWTHFL2                 LOOP & REFIND PRIOR    @Y17XARX
CHKCLOSE EQU   *                                               @Y17XARW
         CLC   ONE(AL2,RPRITABL),XCTL01 NEW TERMINAL INPUT?    @Y17XARW
         BNE   MOVETOID                 NO, PREPARE TO XCTL    @Y17XARW
         TM    AVTBIT1,AVTCLOSN         CLOSEDOWN IN PROGRESS? @Y17XARW
         BO    FREE                     YES, FREE BUFFER AND   @Y17XARW
*                                       RETURN TO IEDQCA       @Y17XARW
MOVETOID EQU   *                                               @Y17XARX
         MVC   OPCMODID-IEDQOPCD(AL2,ROPCAVT),ONE(RPRITABL)    @Y17XARX
*                        SET UP ROUTE CODE IN XCTL NAME 'MODID'@Y17XARX
         DROP  RWORK                                           @Y17XARX
         B     XCTLTBL1                 XCTL TO CORRECT MODULE @Y17XARX
         TITLE 'IGC0010D - TOTE AND MPP INPUT HANDLER'
***********************************************************************
*                                                                     *
*        AT THIS POINT THE INPUT HAS BEEN DEQUEUED AND A DETERMINATION*
*        MADE THAT IT IS FROM TOTE OR A MESSAGE PROCESSING PROGRAM.   *
*        A BUFFER UNIT IS GOTTEN TO SERVE AS THE OPCE AND AFTER THE   *
*        VERB IS VERIFIED ALL INPUT DATA IS MOVED FROM THE CIB TO THE *
*        OPCE FOR PROCESSING.  AN XCTL IS EXECUTED TO START COMMAND   *
*        PROCESSING.  IF THE CIB WAS FOR THRESHOLD CLOSEDOWN, THE UNIT*
*        IS FREED BY GOING TO IGC0710D AND A CHECK FOR MORE INPUT     *
*        WILL BE DONE.                                                *
*                                                                     *
***********************************************************************
         SPACE
TOTEMPP  EQU   *                                               @Y17XARX
         LR    RCIB,RWORK          SAVE REQUEST ADDRESS
         BAL   RWORK,GETBUFF            GET OPCE UNIT
         SPACE
         MVI   OCFLAG,OCMPP             INDICATE APPL
         MVC   OPCLDNME+OFF03(AL2),XCTL0A SET XCTL MODULE ID   @G36XRRU
         MVC   OCBACKUP(AL8),OFF0C(RCIB) MOVE DD/TERM NAME     @G36XRRU
         TM    ZERO(RCIB),AIBAPKEY APPL PROGRAM INPUT          @G36XRRU
         BO    PROCMPP             YES, BRANCH                 @G36XRRU
         LA    RWORK1,MPPTBL       PICK UP VERB TABLE ADDR     @G36XRRU
         TM    OFF08(RCIB),APPLICAT SPECIAL NON-TOTE INPUT     @G36XRRU
         BO    CHECK               YES, BRANCH                 @G36XRRU
         SPACE
         MVI   OCFLAG,OCTOTE            INDICATE TOTE INPUT
         LA    RWORK1,TOTETBL           PICK UP VERB TBL ADDR    S22024
CHECK    EQU   *                                               @G36XRRU
         NI    OFF08(RCIB),FFBYTE-APPLICAT CLEAR MPP INDICATOR
         LA    RWORK,OFF08(RCIB)        POINT TO VERB
         ST    RCIB,OCCIB               SAVE CIB ADDR FOR POST  SA67769
         BAL   RRET,CHKVERB        VALIDITY CHECK THE VERB
         SPACE
         B     GOODTOTE            GOOD RETURN, CONTINUE       @G36XRRU
         SPACE
         LA    RZERO,FFBYTE             SET RETURN
         MVC   OPCLDNME+OFF03(AL2),WRTXCTL MSG ROUTER
         CLI   OFF09(RCIB),THRCLOSE THRESHOLD CLOSEDOWN?
         BNE   XCTLTBL1            NO, SET BAD RETURN
         SPACE
         NI    OCFLAG,FFBYTE-(OCMPP+OCTOTE) CUT OFF INPUT FLAGS
         B     XCTLTBL1            CALL 710D
         SPACE
GOODTOTE EQU   *                                               @G36XRRU
         MVC   OCBACKUP(AL8),OFF10(RCIB) MOVE DD/TERM NAME     @G36XRRU
         MVC   OPCLDNME+OFF03(AL2),OFF01(RWORK1) SET XCTL MOD  @G36XRRU
PROCMPP  EQU   *                                               @G36XRRU
         MVC   OCOPTCDE(AL1),OFF08(RCIB) SAVE VERB CODE        @G36XRRU
         ST    RCIB,OCCIB          SAVE AIB/CIB ADDRESS        @G36XRRU
         MVC   OCRLN(AL1),OFF0A(RCIB) SAVE RELATIVE LINE NO.   @G36XRRU
         MVC   OCMODNME(AL4),OFF18(RCIB) SAVE ICHNG ACT CODE
XCTLTBL1 EQU   *
         LR    RPARM,ROPCAVT       PASS AVT ADDRESS
XCTLTBL2 EQU   *                                                 S22024
         SPACE
         XCTL  SF=(E,OPCXCTL)          XCTL TO CORRECT MODULE
         TITLE 'IGC0010D - SPECIAL ROUTINES USED MORE THAN ONCE'
***********************************************************************
*                                                                     *
*        RETURN CONTROL TO IEDQCA FOR CLOSEDOWN OR NO INPUT           *
*                                                                     *
***********************************************************************
         SPACE
FREE     EQU   *                                               @Y17XARW
         L     RPARM,OPCCOPCE           PREPARE TO FREE BUFFER @Y17XARW
         USING IEDQPRF,RPARM                                   @YM08147
         SR    RRET,RRET                CLEAR FOR IC           @YM08147
         IC    RRET,PRFNBUNT            GET NUMBER OF UNITS    @YM08147
COUNT    EQU   *                                               @YM08147
         LR    RBRNCH,RPARM             SAVE LAST UNIT         @YM08147
         L     RPARM,PRFTIC             GET NEXT UNIT          @YM08147
         BCT   RRET,COUNT               LOOP TO GET LAST UNIT  @YM08147
         MVI   PRFTIC+THREE-IEDQPRF(RBRNCH),TIC02 SET AS LAST  @YM08147
         L     RPARM,OPCCOPCE           SET TO FREE BUFFER     @YM08147
         LA    R13,OPCSAVE              SETUP SAVE AREA        @Y17XARW
         L     RBRNCH,OPCFREBF          SETUP FREEBUF RTN ADDR @Y17XARW
         BALR  RRET,RBRNCH              CALL FREE BUFF ROUTINE @Y17XARW
RETURN   EQU   *
         LM    RRET,RBRNCH,OPCRSAVE PICK UP RETURN ADDRESS
         BR    RRET                RETURN TO CA
         SPACE 5
***********************************************************************
*                                                                     *
*        THIS CODE VERIFIES ALL INPUT VERBS FROM THE CONSOLE,         *
*        AN MPP, OR TOTE.                                             *
*                                                                     *
***********************************************************************
         SPACE
CHKVERB  EQU   *
         CLI   OFF00(RWORK1),FFBYTE END OF TABLE
         BE    OFF04(RRET)         YES, RETURN ERROR
         SPACE
         CLC   OFF00(AL1,RWORK1),OFF00(RWORK) CHECK VERB FOR MATCH
         BCR   EQUAL,RRET          YES, RETURN GOOD VERB INDICATION
         SPACE
         LA    RWORK1,THREE(RWORK1) POINT TO NEXT VERB CODE
         B     CHKVERB             CONTINUE CHECKING
         SPACE 5
***********************************************************************
         SPACE
*                                                                     *
*        THIS CODE INTERFACES WITH THE IEDQCA SUBROUTINE TO REQUEST   *
*        A BUFFER UNIT TO SERVE AS THE OPCE FOR CONSOLE, TOTE, OR MPP *
*        INPUT.                                                       *
*                                                                     *
***********************************************************************
GETBUFF  EQU   *
         MVC   OPCCOPCE(AL4),AVTFZERO CLEAR CURRENT BUFFER POINTER
         XC    OFF00(AL8,RWORKA),OFF00(RWORKA) CLEAR FIRST EIGHT BYTES
         LA    RPARM,ONE           SET REQUEST COUNT AT ONE
         L     RBRNCH,OPCGETBF     GET ALLOCATION ADDRESS
         BALR  RRET,RBRNCH         REQUEST UNIT
         SPACE
         LR    ROPCE,RPARM              SAVE NEW UNIT POINTER
         ST    ROPCE,OPCCOPCE           PLACE CURRENT UNIT IN OPCE
         BR    RWORK                    RETURN TO ROUTINE
         EJECT                                                   X02004
CIBTBL   EQU   *                                               @OZ30378
VARY     DC    X'28',C'V0'              VARY COMMAND           @OZ30378
MODIFY   DC    X'44',C'M0'         MODIFY                      @OZ09959
         DC    X'68',C'D0'         DISPLAY
         DC    X'6C',C'H0'         HOLD
         DC    X'70',C'R0'         RELEASE
XCTLZ0   DC    X'3C',C'Z0'         HALT                          S22024
         DC    X'40',C'00'              STOPTCAM               @YA07487
RETREVFF EQU   *                        FLAG FOR CQTAM RETRIEVE  Y05330
         DC    X'FF'               END OF TABLE
         SPACE 2
TOTETBL  EQU   *                        START OF TOTE VERB TBL   S22024
         DC    X'50',C'M0'              SWDEVICE TO PRIMARY      S22024
         DC    X'51',C'M0'              SWDEVICE TO BACKUP       S22024
         DC    X'52',C'M0'              3705 IPL                 S22024
         DC    X'53',C'M0'              3705 ACTIVATE            S22024
         DC    X'54',C'M0'              3705 DEACTIVATE          S22024
         DC    X'55',C'V0'              START TERM E (TOTE)      S22024
*                                       IT LEAVES THE TRM ALLOC  S22024
*                                       TO TOTE, 3705 ONLY       S22024
MPPTBL   DC    X'41',C'V0'         STOP LINE
         DC    X'87',C'R0'         RELEASE
         DC    X'88',C'H0'         HOLD (TOTE)
         DC    X'49',C'I0'         ICHNG
         DC    X'40',C'V0'         START LINE
         DC    X'10',C'Z0'         CLOSEDOWN-QUICK
         DC    X'11',C'Z0'         CLOSEDOWN-FLUSH
         DC    X'45',C'V0'         START TERMINAL B
         DC    X'46',C'V0'              START TERMINAL E (TOTE)
         DC    X'48',C'V0'              STOP TERMINAL E (TOTE)
         DC    X'47',C'V0'         STOP TERMINAL B
XCTLT0   DC    X'00',C'T0'              3705 TCOPY,ICOPY,TCHNG   S22024
         DC    X'FF'               END OF TABLE
*                                                              @Y17XARX
*                                                              @Y17XARX
PRINOFLG EQU   *                TABLE: PRIORITIES WITH NO FLAGS@Y17XARX
         DC    X'EC',C'06'                                     @Y17XARX
PRINFLG1 EQU   *-PRINOFLG               TABLEWIDTH             @Y17XARX
         DC    X'E5',C'A0'                                     @Y17XARX
         DC    X'E4',C'01'                                     @Y17XARX
         DC    X'EA',C'02'
         DC    X'E2',C'A0'                                     @YM03742
         DC    X'DE',C'MH'                                     @Y17XARX
         DC    X'46',C'MF'                                     @Y17XARX
PRINOEND EQU   *                        END TABLE PRINOFLG     @Y17XARX
*                                                              @Y17XARX
*                                                              @Y17XARX
PRIFLAGS EQU   *                TABLE: PRIORITIES WITH FLAGS   @Y17XARX
         DC    X'E9',X'01',C'A0'                               @Y17XARX
PRIFLGS1 EQU   *-PRIFLAGS                                      @Y17XARX
         DC    X'E9',X'02',C'N4'                               @Y17XARX
         DC    X'E9',X'07',C'VF'                               @Y17XAR4
         DC    X'E9',X'09',C'FC'                               @Y17XARX
         DC    X'E9',X'12',C'MP'                               @Y17XARX
         DC    X'E9',X'14',C'MF'                               @Y17XARX
         DC    X'DF',X'03',C'FG'                               @Y17XARX
         DC    X'DF',X'04',C'VI'                               @Y17XARX
         DC    X'DF',X'05',C'VE'                               @Y17XARX
         DC    X'DF',X'06',C'VA'                               @Y17XARX
         DC    X'DF',X'07',C'VF'                               @Y17XARX
         DC    X'DF',X'08',C'02'                               @Y17XARX
         DC    X'DF',X'10',C'VI'                               @Y17XARX
         DC    X'DF',X'11',C'V8'                               @Y17XARX
         DC    X'DF',X'13',C'FA'                               @Y17XARX
         DC    X'DF',X'15',C'VA'                               @Y17XART
         DC    X'DF',X'16',C'0N'                               @Y17XARR
         DC    X'D0',X'0A',C'FK'                               @Y17XART
         DC    X'D0',X'0D',C'C1'                               @Y17XARS
         DC    X'D0',X'0E',C'FG'                               @Y17XARS
PRIWEND  EQU   *                                               @Y17XARX
* PRIORITIES USED BUT NOT POSTED TO OPCOB                      @Y17XART
*        X'DD' - VA TO IEDNSL                                  @Y17XART
*        X'DF',X'0B' -V9 TO VA OR VF                           @Y17XART
*        X'DF',X'0C' -VE TO IEDNSL                             @Y17XARW
* PRIORITIES USED AND POSTED TO OPCOB NOT REFRENCED BY TABLE   @Y17XARR
*        X'DC',X'00' _ TCOPY,TCHNG,ICOPY,ICHNG  TO OPCOB       @Y17XARR
         SPACE 2
ERRXCTL  DC    C'03'                    ERROR MODULE
WRTXCTL  DC    C'07'                    OUTPUT
XCTLV1   DC    C'V1'                    TO RETURN STOPPED LCB
XCTLZ1   DC    C'Z1'                    ID OF IGCZ110D
XCTL0A   DC    C'0A'                    IGC0A10D MOD ID        @G36XRRU
ADDRESS  EQU   7                        ADDRESS MASK           @G36XRRU
AIBAPKEY EQU   X'18'                    APPL PROG INPUT FLAG   @G36XRRU
RNSTOPLN DC    C'VE'                    3705 STOPLINE LOAD 2     S22024
GENPOLL  EQU   X'E0'                    3705 GENERAL POLL PRIORTYS22024
XCTLVA   DC    C'VA'                    3705 GENERAL POLL MODULE S22024
XCTL01   DC    C'01'                    NEW TERM INPUT MODULE  @Y17XARW
E        EQU   8                        EQUAL                    S22024
NZ       EQU   7                        NOT ZERO                 S22024
CLSMSG   WTO   'IED063I CLOSEDOWN IN PROGRESS - COMMAND REJECTED',     X
               MF=L,DESC=5,MCSFLAG=(REG0,RESP)
NREADYM  WTO   'IED101I RESTART IN PROGRESS',MF=L,DESC=5,              *
               MCSFLAG=(REG0,RESP)                             @OZ09959
ZAPAREA  DC    50F'0'                   PATCH AREA             @Y17XART
         TITLE 'IGC0010D - DSECTS USED BY THIS MODULE'
         TAVTD
         EJECT
          SPACE 1
         EJECT
IEDQCIB  DSECT
         IEZCIB
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TOPRED                                                @Y17XARX
         TPCBD
         DCBD  DSORG=TX
         TDEBAPD
         EJECT
         IHAPSA                                                @G36XRRU
         EJECT
         TPEWAD
         TQCBD
         TTNTD
         TPRFD
         TCKPD 3330
         TPRIOR
APLCOPYD DSECT                          USER PARM LIST           X02004
APLCODE  DS    FL1                      ENTRY CODE              X02004
APLTERM  DS    AL3                      TERMINAL ADDRESS         X02004
APLUSEWK DS    F                        USER WORK AREA           X02004
APLLIMIT DS    F                        LIMIT OPERAND            X02004
APLTPDTE DSECT                          TPDATE PARM LIST         X02004
APLOPTN  DS    FL1                      OPTIONS BYTE             X02004
APLDCBAD DS    AL3                      DCB ADDR                 X02004
APLDTSAR DS    F                        DTSAREA ADDRES           X02004
         END
