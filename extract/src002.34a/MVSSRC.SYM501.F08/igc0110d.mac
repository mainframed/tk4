         TITLE 'IGC0110D - TCAM TERMINAL INPUT SCANNER'
IGC0110D CSECT
*A000000,999999                                                @Y16XAR0
*C406000                                                         SI2024
*D166000-170000                                                 OY03834
*C246000                                                       @ZA02642
*C165000                                                       @XA09783
*A157600                                                       @OX11950
*D160000                                                       @OX11950
*C168000                                                       @OY11970
*A400000,381000                                                @OZ09297
*D381000-384000                                                @OZ09297
*D386000-387000                                                @OZ09297
*A006000,022000,025000,324000,568500                           @Y17XARX
*C009000,025000,041000                                         @Y17XARX
*D010000,024000,046000-048000,057000-060000                    @Y17XARX
*A086000,566000                                                @OZ29687
*C305000,157700-157800                                         @OZ29687
***********************************************************************
*                                                                     *
* MODULE NAME = IGC0110D (TCAM, OPERATOR CONTROL)              @Y17XARX
*                                                              @Y17XARX
* DESCRIPTIVE NAME = TERMINAL INPUT SCANNER                    @Y17XARX
*                                                              @Y17XARX
* COPYRIGHT = NONE                                             @Y17XARX
*                                                                     *
* STATUS = VERSION 10.0                                        @Y17XARX
*                                                                     *
*FUNCTION -                                                           *
*        THIS MODULE GETS CONTROL ON TERMINAL INPUT TO OPERATOR       *
*        CONTROL.  IT SCANS FOR THE VERB AND VALIDITY CHECKS IT       *
*        AGAINST A VERB TABLE.  AFTER THE VERB IS CHECKED, THE JOBNAME*
*        ID IS CHECKED ON THE MODIFY COMMAND.  THE OPERANDS OF THE    *
*        DATA ARE THEN SCANNED AND THE DATA MOVED FROM BUFFER UNITS   *
*        TO THE RESIDENT WORK AREA.  WHEN THE DATA HAS BEEN MOVED, ALL*
*        UNITS OF THE BUFFER EXCEPT THE FIRST ARE PLACED IN THE OPC   *
*        FREE POOL.  THIS MODULE ALSO CHECKS FOR THE COMMAND CANCEL   *
*        INDICATION BY CHECKING FOR THE OP CONTROL CHARACTERS         *
*        BEING REPEATED AFTER THE MESSAGE.                            *
*        THIS MODULE CHECKS FOR INPUT THAT FLOWS ON SSCP-LU    @Y17XARX
*        SESSION.   IF SO, OCSSCP IS SET FOR IGC0710D TO       @Y17XARX
*        INTERFACE WITH SSCP CORRECTLY AFTER COMPLETION OF     @Y17XARX
*        COMMAND.                                              @Y17XARX
*                                                                     *
* NOTES = COMMUNICATIONS BETWEEN VARIOUS TRANSCIENT MODULES    @Y17XARX
* IS PRIMARILY THROUGH THE OPERATOR CONTROL AVT.               @Y17XARX
*        DEPENDENCIES = NONE                                   @Y17XARX
*        RESTRICTIONS = NONE                                   @Y17XARX
*        REGISTER CONVENTIONS = OPERATOR CONTROL               @Y17XARX
*        PATCH LABEL = ZAPS                                    @Y17XARX
*                                                              @Y17XARX
* MODULE TYPE = PROCEDURE                                      @Y17XARX
*        PROCESSOR = ASSEMBLER                                 @Y17XARX
*        MODULE SIZE = 1300 BYTES                              @Y17XARX
*        ATTRIBUTES = REFRESHABLE,DISABLED,TRANSIENT(TYPE 4),  @Y17XARX
*        SUPERVISOR MODE,REUSABLE                              @Y17XARX
*                                                              @Y17XARX
* ENTRY POINT = IGC0110D                                       @Y17XARX
*        PURPOSE = SEE FUNCTION                                @Y17XARX
*        LINKAGE = XCTL                                        @Y17XARX
*                                                                     *
*INPUT -                                                              *
*        POINTER TO THE OPERATOR CONTROL AVT WITH THE ADDRESS OF THE  *
*        BUFFER IN THE AVT 'OPCCOPCE' FIELD.                          *
*                                                                     *
*OUTPUT -                                                             *
*        THE RESIDENT WORK AREA CONTAINS THE COMMAND CODE, THE DATA   *
*        LENGTH, AND THE OPERATION DATA FOR THE COMMAND.              *
*                                                                     *
*EXTERNAL REFERENCES                                                  *
*        SVC 7(XCTL)                                                  *
*                                                                     *
*EXITS-NORMAL -- IGC0710D,IGCR010D,IGCV010D,IGCD010D,IGCH010D,IGCZ010D*
*        IGCM010D                                                     *
*                                                                     *
* EXIXTS-ERROR = IGC0010D,IGC0310D                             @Y17XARX
*                                                                     *
*TABLES/WORKAREAS -                                                   *
*        TCAM AVT, OP CONTROL AVT, VERBTBL, XCTLTBL                   *
*                                                                     *
*CHARACTER CODE DEPENDENCY                                            *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IGC0110D AS OF OS/TCAM LEVEL II *
***********************************************************************
         EJECT
*                           E Q U A T E S
         SPACE
RZERO    EQU   0                       PARAMETER REGISTER
RPARM    EQU   1                       PARAMETER REGISTER
RUNITNO  EQU   1                        NO. OF UNITS IN BUFFER
ROPCAVT  EQU   2                       POINTERTTO OPC AVT
ROPCE    EQU   3                        POINTER TO ELEMENT
RAVT     EQU   4                       POINTER TO TCAM AVT
RSCAN    EQU   5                       POINTER FOR SCANNING UNITS
RWORKA   EQU   6                       POINTER TO RESIDENT WORKAREA
RPUT     EQU   7                       ADDRESS OF WHERE TO PLACE DATA
RWORK    EQU   8                       WORK REGISTER
RSTART   EQU   9                       BEGINNING OF SEARCH
RPREFIX  EQU   10                      POINTER TO BUFFER
RUNIT    EQU   11                      POINTER TO CURRENT UNIT
RBASE    EQU   12                      BASE REGISTER
RRET     EQU   14                      RETURN REGISTER
RREMAIN  EQU   15                      COUNT OF BYTES IN BUFFER
RBRNCH   EQU   15                      BRANCH TO SUBROUTINES REG
         SPACE 2
AL0      EQU   0                       LENGTH IN EXECUTED INSTRUCTIONS
AL1      EQU   1                       LENGTH OF 1 FOR MOVE
AL2      EQU   2                       LENGTH OF 2
AL4      EQU   4                       LENGTH OF 4             @OZ29687
AL7      EQU   7                       LENGTH OF SEVEN FOR COMAPRE
AL8      EQU   8                       LENGTH OF EIGTH
CANCELSW EQU   8                       CANCEL SEARCH IN PROGRESS
COMMA    EQU   X'6B'                   EBCDIC COMMA
CURRBYTE EQU   0                       BYTE NOW BEING CHECKED
EIGHT    EQU   8                        VALUE 8                  S22024
ENDBLOCK EQU   X'26'                   EOB
ENDCHAIN EQU   2                        END OF TIC FIELDS
ENDTRANS EQU   X'37'                   EOT
ENDTXT   EQU   X'03'                   ETX
EQUAL    EQU   8                       BRANCH ON EQUAL
IDSW     EQU   4                        ID PROCESSING IN PROGRESS
LOW      EQU   4                        VALUE 4                  S22024
MODCMND  EQU   X'44'                   CODE FOR MODIFY COMMAND
MSG18    EQU   18                      ERROR MESSAGE NO, 18
NEWLINE  EQU   X'15'                   NEW LINE AFTER COMMAND
OFF00    EQU   0                       ZERO OFFSET
OFF02    EQU   2                       OFFSET 2 FOR MOVE
OFF03    EQU   3                        VALUE 3                  S22024
OFF07    EQU   7                        OFFSET SEVEN
OFF08    EQU   8                       LOAD OFFSET
OFF09    EQU   9                       MOVE OFFSET
OFF0A    EQU   10                      MOVE OFFSET
OFF10    EQU   16                      LOAD OFFSET
ON       EQU   1                       BRANCH IF BIT IS ON
ONE      EQU   1                        VALUE 1                  S22024
QUOTE    EQU   X'7D'                   EBCDIC QUOTE
QUOTSW   EQU   X'20'                   INDICATES QUOTE IN DATA
RETCARR  EQU   X'0D'                   CARRIAGE RETURN AFTER DATA
TIOT     EQU   12                      TIOT OFFSET IN TCB
TWELVE   EQU   12                       VALUE 12                 S22024
VERBFLAG EQU   X'10'                   VERB CHECKING IN PROGRESS
ERR18    EQU   X'08'                    VALUE 08                 S22024
         TITLE 'IGC0110D - VERB CHECK ROUTINE'
***********************************************************************
*                                                                     *
*        THIS ROUTINE FIRST LOCATES THE LAST BUFFER UNIT POSTED TO    *
*        OPERATOR CONTROL AND SETS X'02' IN THE LOW BYTE OF THE PRFTIC*
*        FIELD FOR THAT UNIT.  THIS IS LATER USED WHEN THE UNITS ARE  *
*        PLACED IN THE OPC UNIT POOL.  A CHECK IS THEN MADE IN THE    *
*        LCB FOR THE INPUT TERMINAL TO DETERMINE WHETHER OR NOT IT WAS*
*        A BSC TERMINAL.  IF SO, THE OCBSC FLAG IS SET IN THE ELEMENT.*
*        THE INPUT UNITS ARE THEN SCANNED FOR THE COMMAND VERB.       *
*        WHEN FOUND THE VERB IS PLACED IN THE WORKAREA AND VERIFIED   *
*        USING THE TABLE LOCATED IN THIS MODULE.  THE XCTL MODULE NAME*
*        IS SET IF THE VERB IS GOOD.  AN ERROR MESSAGE 'INVALID       *
*        COMMAND' IS GENERATED BY XCTL TO IGC0310D FOR INCORRECT VERBS*
***********************************************************************
         SPACE
         USING IEDQAVTD,RAVT            AVT ADDRESSABILITY
         USING IEDQLCB,RWORK            LCB ADDRESSABILITY
         USING IEDQPRF,RPREFIX          PRF ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OPCD ADDRESSABILITY
         USING IEDQOPCE,ROPCE      ELEMENT ADDRESSABILITY
         BALR  RBASE,RZERO              SET UP ADDRESSABILITY
         USING *,RBASE
IGC0110D IEDHJN SKIPID
         LR    ROPCAVT,RPARM       SET BASE FOR OPC AVT
         L     RAVT,OPCAVTPT       BASE FOR TCAM AVT
         L     RPREFIX,OPCCOPCE         GET FIRST BUFFER POINTER
         NI    OPCFLAG2,AVTEFF-ERR18    CLEAR ERR SWITCH
NOTLAST  EQU   *
         LR    RUNIT,RPREFIX            SAVE FIRST UNIT IN BUFFER ADDR
         SR    RWORK,RWORK              CLEAR FOR UNIT COUNT
         IC    RWORK,PRFNBUNT           GET UNITS IN THIS BUFFER
TICLOOP  EQU   *
         LR    ROPCE,RPREFIX            SAVE LAST UNIT POINTER
         L     RPREFIX,PRFTIC           GET UNIT TIC FIELD
         BCT   RWORK,TICLOOP            LOOP UNTIL ALL UNITS CHECKED
         SPACE
         LA    RRET,EXIT                SET EXIT ADDRESS         S22024
         MVC   OPCLDNME+OFF03(AL2),IGC00 SET MODULE NAME         S22024
         LR    RPARM,RUNIT              SAVE ELEMENT FOR FREEBFR RTN
         MVC   PRFTIC-IEDQPRF(AL4,ROPCE),INVALTIC   SET END    @OZ29687
*                                                   OF UNITS   @OZ29687
         TM    PRFSTAT1-IEDQPRF(RPARM),PRFNHDRN HEADER           S22024
         BO    TEXTBFR                  NO, BRANCH TO RETURN ALL S22024
*                                       TEXT BFRS TO FREE POOL   S22024
         SPACE
         L     RUNIT,OPCCOPCE      POINT TO INPUT BUFFER
         LR    ROPCE,RUNIT              GET FIRST UNIT POINTER
         L     RWORK,PRFLCB-AL1-IEDQPRF(RUNIT) GET LCB ADDRESS
         MVI   OCFLAG,AVTEZERO          CLEAR FLAGS
         L     RBRNCH,OPPOLSTP          SETUP FOR POLLSTOP     @YM09009
         BALR  RRET,RBRNCH              GOTO POLLSTOP          @YM09009
         SPACE
         TM    AVTSAVTF,AVTVTMCP   SAVT PRESENT                @YM09063
         BNO   SAVELCB             BRANCH NO                   @YM09063
         SPACE
         L     RBRNCH,AVTSAVTP     SAVT ADDRESS                @YM09063
         USING IEDNSVTD,RBRNCH                                 @YM09063
         CLC   PRFDEST-IEDQPRF(2,ROPCE),SAVTSCPT  DEST=SSCP    @YM09063
         BNE   SAVELCB             BRANCH NO                   @YM09063
         SPACE
         OI    OCFLAG,OCSSCP       PASS INFO TO 0710D          @YM09063
         DROP  RBRNCH                                          @YM09063
SAVELCB  EQU   *                                               @YM09063
         ST    RWORK,OCMODNME           SAVE LCB ADDRESS       @YM09063
* THE LCB ADDRESS IS LEFT INVALID FOR IEDVOFF TO AVOID        @OY11970*
* GETTING MESSAGE IED013I.                                    @OY11970*
         BAL   RRET,SETPOINT       SET STARTING SCAN POINTER
         SPACE
         MVI   OCOPTCDE,AVTEZERO        CLEAR OP CODE
         OI    OPCFLAG1,VERBFLAG   INDICATE VERB/ID PROCESSING
         BAL   RWORKA,FINDDATA          FIND SOMETHING BESIDES A COMMA
         SPACE
FINDEND  EQU   *
         LA    RSCAN,ONE(RSCAN)    POINT TO NEXT BYTE
         BAL   RRET,CHKLOCAT       CHECK FOR ENDS
         SPACE
         CLI   OFF00(RSCAN),AVTEBLNK CHARACTER A BLANK?
         BNE   FINDEND             NO, CONTINUE SEARCH FOR END
         SPACE
         BAL   RRET,MOVEEND        MOVE LAST OF DATA
         LA    RRET,VERBNG              SET RETURN FROM ERR SET
         CH    RWORK,AVTHA7        COUNT GREATER THAN SEVEN?
         BH    SETERR18                 GO SET ERROR INDICATOR
         SPACE
         LA    RSTART,VERBTBL      POINT TO GOOD VERB TABLE
CHEKVERB EQU   *
         CLC   OFF08(AL7,RWORKA),OFF00(RSTART) GOOD COMMAND?
         BE    VERBOK              MATCH, WE HAVE GOOD VERB
         SPACE
         CLC   OFF08(AL2,RWORKA),OFF07(RSTART) CHECK SINGLE CHAR VERB
         BE    VERBOK              MATCH, BRANCH FOR GOOD VERB
         SPACE
         LA    RSTART,TWELVE(RSTART) POINT TO NEXT TABLE ENTRY
         CLI   OFF00(RSTART),AVTEFF END OF TABLE?
         BNE   CHEKVERB            NO, CONTINUE CHECKING
         SPACE
         B     SETERR18                 GO SET ERROR INDICATOR
         SPACE
VERBOK   EQU   *
         MVC   OCOPTCDE(AL1),OFF09(RSTART) SAVE OPERATION CODE
         MVC   OPCLDNME+OFF03(AL2),OFF0A(RSTART) SET NEXT MODULE NAME
VERBNG   EQU   *
         NI    OPCFLAG1,AVTEFF-VERBFLAG CLEAR VERB SCAN INDICATOR
         TITLE 'IGC0110D - ID CHECKING ROUTINE'
***********************************************************************
*                                                                     *
*        THIS ROUTINE CHECK TO SEE IF THE INPUT WAS A MODIFY COMMAND. *
*        IF SO, THIS CODE IS EXECUTED TO LOCATE AND VERIFY            *
*        THE ID ENTERED WITH THE JOBNAME OR PROCNAME IN THE TCAM TIOT.*
*        'INVALID COMMAND' ERROR MESSAGE IS GENERATED FOR BAD ID.     *
*                                                                     *
***********************************************************************
         SPACE
         BAL   RWORKA,FINDDATA          FIND SOMETHING BESIDES A COMMA
         SPACE
         CLI   OCOPTCDE,MODCMND    MODIFY COMMAND?
         BNE   PROCOP              NO, DO NOT CHECK JOBNAME
         SPACE
         OI    OPCFLAG1,IDSW            INDICATE ID PROCESSING
LOCCOMMA EQU   *
         LA    RSCAN,ONE(RSCAN)    POINT TO NEXT DATA BYTE
         BAL   RRET,CHKLOCAT       CHECK CROSS UNIT DATA
         SPACE
         CLI   OFF00(RSCAN),COMMA       COMMA FOUND?
         BE    GOODDEL                  BYPASS ERROR SET
         CLI   OFF00(RSCAN),AVTEBLNK    CHECK FOR DELIMETER
         BH    LOCCOMMA                 GT THAN BLANK
         OI    OPCFLAG2,ERR18           SET ERROR SWITCH
GOODDEL  EQU   *
         SPACE
         BAL   RRET,MOVEEND        MOVE LAST OF DATA TO WORKAREA
         SPACE
         LA    RRET,GOODID              SET RETURN FROM ERROR SET
         CH    RWORK,OPCHA8        LONGER THAN EIGHT BYTES
         BH    SETERR18                 GO SET ERROR INDICATOR
         SPACE
         L     RWORK,AVTTCB        PICK UP TCAM TCB POINTER
         L     RWORK,TIOT(RWORK)   PICK UP TIOT ADDRESS
         CLC   OFF08(AL8,RWORKA),OFF00(RWORK) CHECK JOBNAME
         BE    GOODID              MATCH, VALID SO FAR
         SPACE
         CLC   OFF08(AL8,RWORKA),OFF08(RWORK)                  @ZA02642
         BNE   SETERR18                 GO SET ERROR INDICATOR
         SPACE
GOODID   EQU   *
         BAL   RWORKA,FINDDATA          FIND SOMETHING BESIDES A COMMA
         SPACE
         OI    OPCFLAG1,CANCELSW        SET CANCEL FLAG
         BAL   RRET,MOVEEND             MOVE LAST OF DATA TO W/A
         NI    OPCFLAG1,AVTEFF-IDSW-CANCELSW CLEAR ID AND CANCEL FLAG
         B     PROCOP              PROCESS OPTIONS
         TITLE 'IGC0110D - OPERAND DATA SCAN AND MOVE ROUTINE'
***********************************************************************
*                                                                     *
*        THIS ROUTINE SCANS THE INPUT BUFFERS FOR DATA AND PLACES     *
*        THAT DATA IN THE RESIDENT WORKAREA FOR LATER PROCESSING      *
*        BY A COMMAND DEPENDENT MODULE.                               *
*                                                                     *
***********************************************************************
         SPACE
LOCATEND EQU   *
         LA    RSCAN,ONE(RSCAN)    POINT TO NEXT BYTE OF DATA
         BAL   RRET,CHKLOCAT       INSURE GOOD POINTER
         SPACE
PROCOP   EQU   *
         CLI   CURRBYTE(RSCAN),QUOTE CURRENT BYTE A QUOTE
         BH    LOCATEND            GREATER, CONTINUE SEARCH
         SPACE
         BL    CHEKBLNK            NO, LESS THAN '7D', CHECK DELIMITER
         SPACE
         TM    OPCFLAG1,QUOTSW     PREVIOUS QUOTE FOUND?
         BO    PREVQUOT            YES, CHECK FOR DOUBLE QUOTES
         SPACE
         OI    OPCFLAG1,QUOTSW     SET QUOTE FOUND SW
         B     LOCATEND            CONTINUE SEARCH FOR END OF DATA
         SPACE
PREVQUOT EQU   *
         LA    RSCAN,ONE(RSCAN)    POINT TO NEXT BYTE
         BAL   RRET,CHKLOCAT       CHECK FOR IN UNIT
         SPACE
         CLI   CURRBYTE(RSCAN),QUOTE NEXT BYTE ALSO A QUOTE
         BE    LOCATEND            CONTINUE SEARCH
         SPACE
         B     LASTCHAR            NO, CHECK FOR MORE DATA
         SPACE
CHEKBLNK EQU   *
         TM    OPCFLAG1,QUOTSW     ONE QUOTE FOUND?
         BO    LOCATEND            YES, DO NOT CHECK OTHER CHARACTERS
         SPACE
LASTCHAR EQU   *
         CLI   CURRBYTE(RSCAN),AVTEBLNK BLANK FOUND IN DATA
         BH    LOCATEND            NO, CONTINUE SEARCH
         SPACE
         BE    CANCANCL            YES, CHECK FOR CANCEL CHARACTERS
         SPACE
         CLI   CURRBYTE(RSCAN),ENDTRANS EOT LOCATED?
         BH    LOCATEND            NO, CONTINUE SEARCH FOR END
         SPACE
         BE    ENDMSG              YES, WE HAVE THE END
         SPACE
         CLI   CURRBYTE(RSCAN),ENDBLOCK EOB OR ETB FOUND?
         BH    LOCATEND            NO, CONTINUE
         SPACE
         BE    ENDMSG              YES, END IS FOUND
         SPACE
         CLI   CURRBYTE(RSCAN),NEWLINE NEW LINE FOUND?
         BH    LOCATEND            NO, CONTINUE SEARCH FOR END
         SPACE
         BE    ENDMSG              YES, END FOUND
         SPACE
         CLI   CURRBYTE(RSCAN),RETCARR CHECK FOR CARRIAGE RETURN
         BH    LOCATEND            NO, CONTINUE SEARCH
         SPACE
         BE    ENDMSG              YES, END FOUND
         SPACE
         CLI   CURRBYTE(RSCAN),ENDTXT ETX FOUND?
         BNE   LOCATEND            NO, CONTINUE SCANNING
         SPACE
ENDMSG   EQU   *
         BAL   RRET,MOVEEND        MOVE REMAINING CHARACTERS
         USING IEDQPRF,RPREFIX     REESTABLISH PRF ADDRESS     @YM05661
         B     FREEBUF             FREE EXTRA BUFFERS
         SPACE
CANCANCL EQU   *
         NI    OPCFLAG1,AVTEFF-QUOTSW CLEAR QUOTE FLAG
         TITLE 'IGC0110D - CANCEL CHECKING ROUTINE'
***********************************************************************
*                                                                     *
*        THIS ROUTINE CHECKS FOR THE CONTROL CHARACTERS BEING REPEATED*
*        AFTER THE INPUT COMMAND.  THIS INDICATES THE COMMAND WAS     *
*        CANCELLED AND UNITS ARE FREED.                               *
*                                                                     *
***********************************************************************
         SPACE
         BAL   RRET,MOVEEND        PLACE REST OF DATA IN WORKAREA
         SPACE
         OI    OPCFLAG1,CANCELSW   INDICATE CANCEL PROCESSING
         BAL   RWORKA,FINDDATA          LOCATE NEXT NON-BLANK
         SPACE
         LA    RWORKA,EIGHT        SET COUNTER
CANSCAN  EQU   *
         SPACE
         LA    RSCAN,ONE(RSCAN)    BUMP POINTER BY ONE
         BAL   RRET,CHKLOCAT       CHECK CROSS BUFFER UNIT
         SPACE
         CLI   CURRBYTE(RSCAN),C' ' BLANK FOUND?
         BNH   ENDSCAN             BRANCH EQUAL OR LESS
         SPACE
         BCT   RWORKA,CANSCAN      GET EIGHT CHARACTERS
         SPACE
ENDSCAN  EQU   *
         BAL   RRET,MOVEEND        MOVE REMAINING DATA
         SPACE
         NI    OPCFLAG1,AVTEFF-QUOTSW-VERBFLAG-CANCELSW-IDSW CLEAR FLGS
         CLC   OPCDOUBL(AL8),AVTCTLCH CANCEL ON COMMAND?
         BNE   FREEBUF             NO, FREE INPUT UNITS
         SPACE
CANCEL   EQU   *
         MVC   OPCLDNME+OFF03(AL2),FREEXCTL SET TO GO TO 710D
         MVI   OCFLAG,OCCONSOL     SET CONSOLE INPUT
         L     RWORKA,OPCWORK           GET WORK AREA POINTER
         XC    OFF00(AL2,RWORKA),OFF00(RWORKA) CLEAR COUNT FIELD
         BAL   RWORK,SKIPCLR            BR TO CLR WORK AREA
         NI    OPCFLAG2,AVTEFF-ERR18    RESET ERROR SWITCH
         SPACE
         B     FREEBUF             PLACE UNITS IN POOL
         TITLE 'IGC0110D - BUFFER UNIT FREEING ROUTINE'
***********************************************************************
*                                                                     *
*        THIS ROUTINE FREES EXTRA UNITS AFTER THE DATA HAS BEEN       *
*        MOVED TO THE WORKAREA AND THEN XCTL'S TO THE NEXT CORRECT    *
*        LOAD OF SVC 104.                                             *
*                                                                     *
***********************************************************************
         SPACE
ERROR18  EQU   *
         OI    OPCFLAG2,ERR18           SET ERROR SWITCH       @OZ09297
FREEBUF  EQU   *
         L     RPREFIX,OPCCOPCE    PICK UP CURRENT BUFFER ADDR
         L     RPARM,PRFTIC        PICK UP LINK FIELD
         EX    RPARM,OPCHNEND          CHECK FOR END OF CHAIN
         BNZ   NOFREE              YES, NO UNITS TO FREE
         LA    RRET,NOFREE         SET RETURN ADDRESS          @YM07340
TEXTBFR  EQU   *                                                 S22024
         L     RBRNCH,OPCFREBF          FREE BUFF ROUTINE        S22024
         BR    RBRNCH              FREE UNITS TO OPC POOL
         SPACE
NOFREE   EQU   *
         TM    OPCFLAG2,ERR18           TEST ERROR SWITCH      @OZ09297
         BZ    NOERR                    NO CONTINE             @OZ09297
         NI    OPCFLAG2,AVTEFF-ERR18    RESET ERROR SWITCH     @OZ09297
         LA    RZERO,MSG18              SET MESSAGE NO 18      @OZ09297
         MVC   OPCLDNME+OFF03(AL2),ERRXCTL SET MODULE NAME     @OZ09297
         MVC   OPCDOUBL(AL8),OFF08(RWORKA) SAVE BAD NAME(VERB) @OZO9297
NOERR    EQU   *                                               @OZ09297
         MVC   OCUNIT,INVALTIC       SET END OF BUFFER UNIT    @OZ29687
         MVI   OCSWITCH,AVTEZERO        CLEAR TO ZERO            S22024
         XC    OCTRMTBL(TWELVE),OCTRMTBL CLEAR FIELDS
         NI    OPCFLAG1,AVTEZERO        CLEAR FLAGS
EXIT     EQU   *                                                 S22024
         LR    RPARM,ROPCAVT       POINT TO AVT
         SPACE 2
         XCTL  SF=(E,OPCXCTL)      CALL NEXT SVC LOAD
         TITLE 'IGC0110D - CROSS UNIT SCAN CODE'
***********************************************************************
*                                                                     *
*        THIS CODE IS ENTERED EACH TIME THE SCAN POINTER IS MOVED     *
*        TO INSURE THAT IT IS STILL WITHIN A UNIT AND THAT THE END    *
*        OF DATA (COUNT) IS NOT ZERO.  EITHER OF THESE CONDITIONS IS  *
*        HANDLES BY FINDING THE NEXT BUFFER UNIT OR BUFFER AND        *
*        CONTINUING THE SCAN.                                         *
*                                                                     *
***********************************************************************
         SPACE
CHKLOCAT EQU   *
         BCT   RREMAIN,SEARCH      NO. OF BYTES LEFT ZERO
         SPACE
         B     NEWUNIT             YES, GET NEXT BUFFER ADDRESS
         SPACE
SEARCH   EQU   *
         C     RSCAN,OPCBFEND      END OF THIS UNIT
         BCR   LOW,RRET            NO, CONTINUE SCAN OF INPUT
         SPACE
NEWUNIT  EQU   *
         SR    RSCAN,RSTART        CALCULATE SCANNED LENGTH
         LTR   RSCAN,RSCAN         SCANNED LENGTH ZERO?
         BZ    SKIPMOVE            YES, MOVE NO CHARACTERS
         SPACE
         LR    RWORK,RSCAN         SAVE LENGTH OF DATA
         TM    OPCFLAG1,CANCELSW   CANCEL PROCESSING?
         BO    SKIPCNT             YES, DO NOT UP COUNT
         SPACE
         AH    RSCAN,OFF02(RWORKA) ADD ALREADY SCANNED COUNT
         STH   RSCAN,OFF02(RWORKA) PLACE NEW COUNT IN WORKAREA
         CH    RSCAN,OPCWRKSZ      DATA LONGER THAN WORKAREA?
         BNL   ERROR18             YES, PUT OUT ERROR
         SPACE
SKIPCNT  EQU   *
         BCTR  RWORK,RZERO         SUBTRACT ONE FOR EXECUTE
         EX    RWORK,MOVEDATA      MOVE THIS DATA TO WORKAREA
         SPACE
         LA    RPUT,ONE(RWORK,RPUT) UPDATE WORKAREA POINTER
SKIPMOVE EQU   *
         L     RUNIT,PRFTIC-IEDQPRF(RUNIT) GET NEXT UNIT ADDR
         BCTR  RUNITNO,RZERO            DECREMENT FOR UNIT PROCESSED
         LH    RWORK,AVTKEYLE      GET KEY LENGTH
         SR    RSTART,RSTART            CLEAR SCAN OFFSET
         LTR   RREMAIN,RREMAIN     END OF THIS BUFFER'S DATA
         BNZ   INBUFF                   CHECK FOR END OF BUFFER
         SPACE
         LTR   RUNITNO,RUNITNO          END OF UNITS
         BNZ   TESTFLAG                 YES, ARE WE IN MIDDLE OF CHECK
         SPACE
         EX    RUNIT,OPCHNEND      TEST FOR END OF CHAIN INDICATOR
         BZ    SETPOINT            NO, CONTINUE
         SPACE
TESTFLAG EQU   *
         TM    OPCFLAG1,QUOTSW+VERBFLAG+IDSW MIDDLE OF PROCESSING?
         BNZ   ERROR18             YES, WE HAVE AN ERROR
         SPACE
         B     FREEBUF             GIVE UP BUFFER UNITS
         SPACE
SETPOINT EQU   *
         LR    RPREFIX,RUNIT       POINT REG TO START OF BUFFER
         SR    RUNITNO,RUNITNO          CLEAR FOR INSERT
         IC    RUNITNO,PRFNBUNT         GET NO. OF UNITS IN BUFFER
         LH    RREMAIN,PRFSIZE     PICK UP NUMBER OF BYTES OF DATA
         N     RREMAIN,AVTCLRHI    CLEAR HIGH BYTES
         LH    RSTART,PRFSCAN      GET SCAN POINTER
         N     RSTART,AVTCLRHI     CLEAR HIGH BYTES
         LH    RWORK,AVTKEYLE           GET KEY LENGTH FROM AVT
CHECK    EQU   *
         CR    RSTART,RWORK        FIRST BYTE OUT OF UNIT
         BL    INBUFF              NO, CALCULATE ACTUAL SCAN POSITION
         SPACE
         L     RUNIT,PRFTIC        PICK UP NEXT UNIT ADDRESS
         SR    RSTART,RWORK        RESET SCAN POINTER TO REFLECT UNIT
         SR    RREMAIN,RWORK       SUBTRACT BYTES FROM LENGTH
         BCTR  RUNITNO,RZERO            DECREMENT FOR UNIT PROCESSED
         B     CHECK               CONTINUE CHECKING UNTIL LOCATED
         SPACE
INBUFF   EQU   *
         SR    RREMAIN,RSTART      CALCULATE LENGTH OF DATA
         LA    RSCAN,AVTUMALN(RUNIT) SET SCAN POINTER TO HEADER
         AR    RWORK,RSCAN         ADD KEY LENGTH TO GET LAST BYTE
         AR    RSCAN,RSTART        ADD SCAN POINTER TO GET FIRST BYTE
         LR    RSTART,RSCAN        SAVE STARTING POINTER
         ST    RWORK,OPCBFEND      SAVE END OF UNIT POINTER
         BR    RRET                RETURN TO IN LINE CODE
         SPACE
MOVEDATA MVC   OFF00(AL0,RPUT),OFF00(RSTART) PLACE DATA IN RECEIVE AREA
         TITLE 'IGC0110D - SMALL ROUTINES AND VERB TABLE'
***********************************************************************
*                                                                     *
*        THIS SUBROUTINE IS ENTERED EACH TIME THE END OF A CERTAIN    *
*        DATA FIELD IS FOUND WITHOUT COMMING TO THE END OF DATA OR A  *
*        UNIT.  THE REMAINING DATA IS COUNTED AND MOVED TO THE        *
*        WORKAREA.                                                    *
*                                                                     *
***********************************************************************
         SPACE
MOVEEND  EQU   *
         LR    RWORK,RSCAN         SAVE SCAN POINTER
         SR    RWORK,RSTART        CALCULATE REMAINING LENGTH
         LTR   RWORK,RWORK         ZERO LENGTH?
         BCR   EQUAL,RRET          YES, DO NOT MOVE ANY DATA
         SPACE
         BCTR  RWORK,RZERO         SUBTRACT ONE FOR MOVE EXECUTE
         EX    RWORK,MOVEDATA      PLACE DATA INTO WORKAREA
         CLC   OFF00(AL8,RPUT),AVTCTLCH TEST FOR CANCEL
         BE    CANCEL                   YES CANCEL
         SPACE
         LA    RWORK,ONE(RWORK)    ADD ONE FOR DECREMENT BEFORE
         TM    OPCFLAG1,CANCELSW   CANCEL PROCESSING?
         BCR   ON,RRET             YES, SKIP COUNTING
         SPACE
         AH    RWORK,OFF02(RWORKA) GET TOTAL NUMBER OF BYTES
         STH   RWORK,OFF02(RWORKA) PLACE NEW TOTAL IN WA
         CH    RWORK,OPCWRKSZ      DATA LARGER THAN WORKAREA
         BCR   LOW,RRET            NO, CONTINUE
         SPACE
         B     ERROR18             TOO MUCH DATA, INVALID COMMAND
         SPACE
FINDDATA EQU   *
         LA    RSCAN,ONE(RSCAN)    POINT TO NEXT INPUT BYTE
         LR    RSTART,RSCAN        START IS SAME BYTE
         BAL   RRET,CHKLOCAT       END OF DATA HERE?
         SPACE
         CLI   OFF00(RSCAN),AVTEBLNK BLANK FOUND?
         BE    FINDDATA                 FIND NON BLANK
         SPACE
         LR    RWORK,RWORKA        SET RETURN ADDRESS
         LA    RWORKA,OPCDOUBL       SET POINTER TO DOUBLE WORD
         SH    RWORKA,OPCHA8       BACK UP FOR CLEAR
         TM    OPCFLAG1,CANCELSW   CANCEL PROCESSING
         BO    SKIPCLR             YES, DO NOT CLEAR COUNT
         SPACE
CLEAR    EQU   *
         L     RWORKA,OPCWORK           GET WORKAREA POINTER
         XC    OFF02(AL2,RWORKA),OFF02(RWORKA) CLEAR COUNT FIELD
SKIPCLR  EQU   *
         LA    RPUT,EIGHT(RWORKA)  SET PUT POINTER TO FIRST OF AREA
         MVI   OFF08(RWORKA),AVTEBLNK   BLANK A BYTE
         MVC   OFF09(AL7,RWORKA),OFF08(RWORKA) CLEAR REMAINING SEVEN
         BR    RWORK               RETURN TO PROCESSING
         SPACE
SETERR18 EQU   *
         OI    OPCFLAG2,ERR18           SET ERROR SWITCH
         BR    RRET                     RETURN TO CALLER
VERBTBL  EQU   *
         DC    CL7'RELEASE',CL2'A',X'70',C'R0'   RELEASE COMMAND
         DC    CL7'VARY',CL2'V',X'28',C'V0'      VARY COMMAND
         DC    CL7'HALT',CL2'Z',X'3C',C'Z0'      HALT COMMAND
         DC    CL7'HOLD',CL2'H',X'6C',C'H0'      HOLD COMMAND
         DC    CL7'DISPLAY',CL2'D',X'68',C'D0'   DISPLAY COMMAND
         DC    CL7'MODIFY',CL2'F',X'44',C'M0'    MODIFY COMMAND
         DC    X'FF'               END OF TABLE
         SPACE 2
INVALTIC DC    XL4'08000002'       INVALID TIC                 @OZ29687
ERRXCTL  DC    C'03'               IGC0310D ERROR MESSAGE MODULE
FREEXCTL DC    C'07'               MAKE IGC0710D MODULE NAME
IGC00    DC    C'00'                    MODULE SET UP            S22024
ZAPS     DC    100X'FF'                 PATCH AREA             @Y17XARX
         TITLE 'IGC0110D - DSECTS REFERENCED IN THIS MODULE'
         TAVTD
         EJECT
         TLCBD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TPRFD
         EJECT
         TTRMD
         END
