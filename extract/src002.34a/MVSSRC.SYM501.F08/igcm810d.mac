         TITLE 'IGCM810D - MODIFY OPTIONS'
IGCM810D CSECT
***********************************************************************
*                                                                     *
* MODULE NAME = IGCM810D (TCAM, OPERATOR CONTROL)              @Y17XART
*                                                              @Y17XART
* DESCRIPTIVE NAME = MODIFY OPTIONS                            @Y17XART
*                                                              @Y17XART
* COPYRIGHT = NONE                                             @Y17XART
*                                                              @Y17XART
* STATUS = VERSION 10.0                                        @Y17XART
*                                                                     *
* FUNCTION = THIS ROUTINE PROCESSES OPERATOR CONTROL COMMANDS WHICH   *
*   REQUEST MODIFICATION OF TERMINAL OPTION FIELDS. THIS MODULE IS    *
*   ENTERED FROM THE MODIFY SCAN/MAP ROUTINE (IGCMA10D)               *
*                                                                     *
*   THE MODIFY OPTIONS RECEIVES THE DATA PORTION OF COMMAND,IN EBCDIC *
*   FORM, IN THE OP CTL RESIDENT WORK AREA. THE COMMAND IS CHECKED FOR*
*   DATA TYPE, AND CONVERTED TO DESIRED FORMAT. IF THE DATA LENGTH    *
*   AFTER CONVERSION EXCEEDS EIGHT BYTES IN LENGTH, NECESSARY BUFFERS *
*   ARE OBTAINED AND CHAINED TO THE ELEMENT. THE DATA IS PLACED IN THE*
*   BUFFERS.                                                          *
*                                                                     *
*   THE TERMINAL ENTRY IS LOCATED AND CHECKED FOR OPTION FIELDS       *
*   PRESENT (TRMOPTFN ON IN TRMSTATE). A CHECK IS THEN MADE TO        *
*   DEDERMINE IF THE SPECIFIED OPTION FIELD HAS BEEN DEFINED FOR THE  *
*   TERMINAL.                                                         *
*   A CHECK IS MADE TO DETERMINE IF THE FIELD TYPE DEFINITION MATCHES *
*   THE DATA (FIELD IS DECIMAL BUT DATA IS CHARACTER - ERROR).        *
*   THE NEW OPTION DATA IS IS PLACED INTO THE OPTION FIELD,PROVIDED   *
*   THE OPTION FIELD IS LARGE ENOUGH. A MSG NUMBER IS SET IN OCPARM,  *
*   OCWTG IS SET TO M1 AND XCTL IS TO IGC0610D.                       *
*                                                                     *
*   IF THE REPLACEMENT DATA IS SHORTER IN LENGTH THAN THE SIZE DEFINED*
*   FOR THE OPTION FIELD, STANDARD PADDING IS USED ACCORDING TO       *
*   ASSEMBLER LANGUAGE STANDARDS.                                     *
*                                                                     *
*   CONDITION WHERE THE OPTION FIELD CANNOT BE MODIFIED ARE           *
*     1)-NO MATCHING ENTRY IN THE TERMNAME TABLE                      *
*        IED016I STATION XXXXXXXX NOT FOUND                           *
*     2)-NO OPTION FIELD WITH THE NAME SPECIFIED EXISTS FOR THIS TERM.*
*        IED034I XXXXXXXX HAS NO XXXXXXXX OPTION                      *
*     3)-THE DATA FORMAT SPECIFIED IN THE COMMAND DIFFERS FROM THE    *
*        OPTION FIELD FORMAT.                                         *
*        IED056I XXXXXXXX OPTION XXXXXXXX DATA FORMAT INVALID         *
*     4)-DATA TO REPLACE CURRENT SETTING IS GREATER IN LENGTH THAN    *
*        THE FIELD                                                    *
*        IED062I XXXXXXXX OPTION XXXXXXXX CANNOT ACCEPT SPECIFIED DATA*
*     5)-CONTENTS OF DATA DOES NOT AGREE WITH FRAMING CHARACTERS.     *
*        IED077I XXXXXXXX OPTION XXXXXXXX DATA CHARACTER INVALID      *
*                                                                     *
*     6) CONFIRMATION THAT THE REQUESTET ACTION WAS TAKEN.     @Y17XART
*        IED050I XXXXXXXX OPTION XXXXXXXX MODIFIED                    *
*                                                                     *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IGCM810D IS THE ONLY ENTRY POINT FOR THIS MODULE            *
*                                                              @Y17XART
*         PURPOSE = SEE FUNCTION                               @Y17XART
*                                                              @Y17XART
*         LINKAGE = AT ENTRY GENERAL REGISTER FIFTEEN (15)     @Y17XART
*         CONTAINS THE ADDRESS OF THE ENTRY POINT OF THIS      @Y17XART
*         MODULE AND GENERAL REGISTER ONE (1) CONTAINS THE     @Y17XART
*         ADDRESS OF THE OPERATOR CONTROL ADDRESS VECTOR TABLE @Y17XART
*                                                                     *
* INPUT - REG 1 CONTAINS A POINTER TO THE OPERATOR CONTROL AVT.       *
*                                                                     *
* OUTPUT - PASSES OP CTL AVT ADDRESS IN REG 1.                        *
*                                                                     *
* EXTERNAL ROUTINES -                                                 *
*         SVC 7(XCTL)                                                 *
*   IEDQCA'S SUBROUTINES                                              *
*        TRMOFLOC--VALIDITY CHECKS TERMINAL NAME PASSED TO IT. RETURNS*
*                  ADDRESS OF TERMINAL ENTRY IF VALID. IF NOT VALID   *
*                  RETURNS PLUS 4 OF RETURN ADDRESS IN REGISTER 14.   *
*                                                                     *
*        DCBLOCAT--VALIDITY CHECKS HARDWARE LINE ADDRESSES, GROUPNAMES*
*                  AND RELATIVE LINE NUMBERS. ALSO INSURES LINE DCBS  *
*                  ARE OPEN, RLN IS NOT MORE THAN NUMBER OF EXTENTS,  *
*                  AND LINE WAS NOT OPENED DUMMY. FOR ANY OF THESE    *
*                  ERRORS RETURNS PLUS 4 OF RETURN ADDRESS IN R14.    *
*                             GOOD RETURN- R0= UCB ADDRESS            *
*                                          R1= DCB ADDRESS            *
*                                                                     *
* EXITS,NORMAL - THE OPERATION SUCCESSFUL MESSAGE NUMBER IS PLACED IN *
*   THE ELEMENTS OCPARM FIELD, THE ELEMENTS OCWTG FIELD IS SET TO M1  *
*   AND AN XCTL (SVC 7) IS MADE TO THE OP CTL INCIDENT CHECKPOINT     *
*   ROUTINE (IGC0610D), REG 1 = @ OP CTL AVT.                         *
*                                                                     *
* EXITS,ERROR - THE ERROR MESSAGE NUMBER IS PLACED IN REGISTER 0,     *
*   THE OP CTL AVT ADDRESS IN REG 1 AND XCTL IS TO THE OP CTL ERROR   *
*   MESSAGE MODULE (IGC0310D).                                        *
*                                                                     *
* TABLES/WORK AREAS - LCB,TNT,TERM ENTRY,DCB,OP CTL AVT,AVT,OPCE      *
*                    OPTION TABLE,OPTION CHARACTERISTICS TABLE        *
*                    TERMNAME TABLE, TERMINAL TABLE                   *
*                                                                     *
* ATTRIBUTES - SUPERVISOR MODE, DISABLED, TRANSIENT(TYPE 4 SVC), NON- *
*             REENTRANT, SERIALLY REUSABLE, REFRESHABLE.              *
*                                                                     *
* NOTES -                                                             *
*    COMMUNICATIONS BETWEEN THE VARIOUS MODULES/TRANSIENTS IS         *
*    PRIMARILY THROUGH THE OPERATOR CONTROL ADDRESS VECTOR TABLE (AVT)*
*                                                                     *
*    DEPENENCIES = THE OPERATION OF THIS MODULE DEPENDS ON     @Y17XART
*    UPON AN INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER @Y17XART
*    SET WHICH IS EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME  @Y17XART
*    THIS MODULE HAS BEEN CODED SO THAT REDEFINATION OF        @Y17XART
*    CHARACTER CONSTANTS, BY REASSEMBLY, WILL RESULT IN A      @Y17XART
*    CORRECT MODULE FOR THE NEW DEFINITION.                    @Y17XART
*                                                              @Y17XART
*    RESTRICTIONS = NONE                                       @Y17XART
*                                                              @Y17XART
*    REGISTER CONVENTIONS = ALL OF THE REGISTER SYMBOLS USED   @Y17XART
*    BY THIS MODULE ARE DEFINED IN NUMERICAL ORDER BY REGISTER @Y17XART
*    NUMBER.                                                   @Y17XART
*                                                              @Y17XART
*    PATCH LABEL = ZAPAREA                                     @Y17XART
*                                                              @Y17XART
* MODULE TYPE = PROCEDURE                                      @Y17XART
*   PROCESSOR = ASSEMBLER                                      @Y17XART
*                                                              @Y17XART
*   MODULE SIZE = THE MAXIMUM SIZE ALLOWED FOR THIS MODULE IS  @Y17XART
*                                                              @Y17XART
* CHANGE ACTIVITY =                                            @Y17XART
* A000000-999999                                               @Y16X5R0
* A499000                                                      @Y17XACT
* D363000-368000                                               @Y17XACT
*A155000,288000                                                @OZ27255
*C284000                                                       @OZ27255
*                                                                     *
***********************************************************************
         EJECT
         SPACE
****    REGISTER EQUATES    ****
RZERO    EQU   0                        PARM REG 0
RPARM    EQU   1                        PARM REG 1
ROPCAVT  EQU   2                        OP CONTROL AVT POINTER
ROPCE    EQU   3                        CURRENT ELEMENT ADDRESS
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORK5   EQU   5                        WORK REGISTER
RTNT     EQU   6                        TNT BASE REG
RTERM    EQU   6                        TERM ENTRY BASE
RWORK6   EQU   6                        WORK REGISTER
RWORK7   EQU   7                        WORK REGISTER
RWORK8   EQU   8                        WORK REGISTER
RWORK9   EQU   9                        WORK REGISTER
RWORK10  EQU   10                       WORK REGISTER
RSCNRTN  EQU   10                       SCAN RETURN REGISTER
RWORK11  EQU   11                       WORK REGISTER
RBASE    EQU   12                       MODULE BASE
RSAVE    EQU   13                       SAVE AREA POINTER
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
RLINK    EQU   15                       SUBROUTINE RETURN REG
         SPACE
         SPACE
****    MISCELLANEOUS EQUATES    ****
ZERO     EQU   0                        ZERO VALUE
ONE      EQU   1                        VALUE ONE
TWO      EQU   2                        VALUE TWO
THREE    EQU   3                        VALUE THREE
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
NINE     EQU   9                        VALUE NINE
TEN      EQU   10                       VALUE TEN
TWELVE   EQU   12                       VALUE TWELVE
FOURTEEN EQU   14                       VALUE FOURTEEN
FIFTEEN  EQU   15                       VALUE FIFTEEN
SIXTEEN  EQU   16                       VALUE SIXTEEN
THIRTY2  EQU   32                       VALUE THIRTY TWO
THIRTY4  EQU   34                       VALUE THIRTY FOUR
FIFTY    EQU   50                       VALUE FIFTY
FIFTY6   EQU   56                       VALUE FIFTY SIX
SIXTY2   EQU   62                       VALUE SIXTY TWO
SEVNTY7  EQU   77                       VALUE SEVENTY SEVEN
ONE93    EQU   193                      VALUE ONE93
TWO40    EQU   240                      VALUE TWO40
CHAR     EQU   C'C'                     CHARACTER C
HEX      EQU   C'X'                     CHARACTER X
QUOTE    EQU   C''''                    CHARACTER QUOTE
DEC      EQU   C'D'                     CHARACTER D
CZERO    EQU   C'0'                     CHARACTER ZERO
CNINE    EQU   C'9'                     CHARACTER NINE
CHARCD   EQU   X'40'                    CODE SWITCH FOR CHARACTER
LA       EQU   X'81'                    LOWER CASE A           @OZ27255
LF       EQU   X'86'                    LOWER CASE F           @OZ27255
ONE29    EQU   129                      OFFSET TO TRANSLATE TBL@OZ27255
HEXCD    EQU   X'01'                    CODE SWITCH FOR HEX
DECCD    EQU   X'00'                    CODE SWITCH FOR DECIMAL
X0F      EQU   X'0F'                    HEX '0F'
CA       EQU   C'A'                     CHARACTER A
CF       EQU   C'F'                     CHARACTER F
TWO55    EQU   255                      TWO HUNDRED FIFTY FIVE
VARINAME EQU   3                        OFFSET TO CHANGE XCTL NAME
BLANK    EQU   C' '                     BLANK CHARACTER
X10      EQU   X'10'                    HEX 10                   S22024
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IEDQTNTD,RTNT            TERM NAME ADDRESSABILITY
         USING IEDQTRM,RTERM
         SPACE
         BALR  RBASE,0                  SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
IGCM810D IEDHJN SKIPID
         SPACE
****    ROUTINE TO DETERMINE DATA TYPE    ****
         LR    ROPCAVT,RPARM            SET OP CTL AVT BASE
         L     RAVT,OPCAVTPT            SET BASE FOR TCAM AVT
         L     ROPCE,OPCCOPCE           GET ELEMENT POINTER
         L     RWORK5,OPCWORK           GET WORK AREA ADDRESS
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROCESS
         BO    GETTRM                   BR TO PROCESS OPT REQUEST
         LM    ROPCE,RWORK9,OPCSAVE     LOAD REGS
         MVC   OCBACKUP(EIGHT),OPCDOUBL SET OPFLDNME TO ELEMENT
         LA    RWORK8,EIGHT(RWORK5)     SET SINK DATA POINTER
         LA    RWORK9,THREE             SET UP TO
         CR    RWORK6,RWORK9              CHECK DATA LENGTH
         BNH   PROCDEC                      LESS THAN 4-YES-DECIMAL
         CLI   ONE(RWORK7),QUOTE        SECOND DATA CHAR QUOTE
         BNE   PROCDEC                  NO-DECIMAL
         SR    RWORK6,RWORK9            ADJUST RAW DATA LENGTH
         SR    RWORK9,RWORK9            CLEAR NUM DATA CHAR REG
         CLI   ZERO(RWORK7),HEX         CHECK FOR HEX
         BE    SCNHEX                   YES-GO PROCESS HEX
         CLI   ZERO(RWORK7),CHAR        CHECK FOR CHARACTER DATA
         BE    SCNCHAR                  YES-GO PROCESS CHAR DATA
         CLI   ZERO(RWORK7),DEC         CHECK FOR DECIMAL
         BNE   GENM77                   NOT HEX,CHAR OR DEC-ERROR
         LA    RWORK7,TWO(RWORK7)       BUMP SOURCE DATA POINTER
         SPACE
PROCDEC  EQU   *
         LA    RWORK9,TEN               SET MAX DEC DATA LENGTH
         CR    RWORK6,RWORK9            GREATER THAN TEN CHAR
         BH    GENM62                   YES-REJECT COMMAND
         SR    RWORK9,RWORK9            CLEAR REG
         SPACE
****    DECIMAL MOVE    ****
MVELOOP  EQU   *
         CLI   ZERO(RWORK7),CZERO       LESS THAN ZERO
         BL    GENM77                   YES-NOT NUMERIC-REJECT
         CLI   ZERO(RWORK7),CNINE       GREATER THAN NINE
         BH    GENM77                   YES-NOT NUMERIC-REJECT
         MVC   ZERO(ONE,RWORK8),ZERO(RWORK7) MOVE CHARACTER
         LA    RWORK8,ONE(RWORK8)       INCREMENT SINK
         LA    RWORK7,ONE(RWORK7)       INCREMENT SOURCE
         LA    RWORK9,ONE(RWORK9)       INCREMENT # CHAR MOVED
         BCT   RWORK6,MVELOOP           ALL CHAR MOVED - NO-LOOP
         MVI   OCRSID+TWO,DECCD         YES-SET DECIMAL DATA TYPE
         BCTR  RWORK9,RZERO             DECREMENT FOR EXECUTE INST
         BCTR  RWORK8,RZERO             DECREMENT BACK TO LAST CHAR
         MVZ   ZERO(ONE,RWORK8),ZONECO  MOVE IN PLUS ZONE
         EX    RWORK9,PACKDF            PACK THE NUMBER
         CLC   OPCDOUBL(EIGHT),DOUBLMAX GREATER THAN ALLOWABLE VALUE
         BH    GENM62                   YES-REJECT
         CVB   RPARM,OPCDOUBL           CHANGE IT TO BINARY
         ST    RPARM,OPCDOUBL           SAVE IT FOR MOVE TO ELEMENT
         LA    RWORK9,FOUR              SET MAXIMUM ALLOWABLE BYTES
         SR    RWORK7,RWORK7            CLEAR REG FOR CHAR INSERT
         LA    RWORK10,OCMODNME         SET SINK ADDRESS
         LA    RWORK6,OPCDOUBL          SET SOURCE ADDRESS
         SPACE
DECMVE   EQU   *
         IC    RWORK7,ZERO(RWORK6)      PICK UP CHARACTER
         LTR   RWORK7,RWORK7            TEST IT FOR ZERO
         BZ    NOTVAL                   YES-DONT MOVE DATA
         STC   RWORK9,OCRSID+THREE      SET LENGTH IN ELEMENT
         BCTR  RWORK9,RZERO             DECREMENT LENGTH FOR EX INST
         EX    RWORK9,MVCDEC            MOVE DATA TO ELEMENT
         B     GETTRM                   BR TO PROCESS OPT REQUEST
         SPACE
NOTVAL   EQU   *
         LA    RWORK6,ONE(RWORK6)       BUMP SOURCE ADDRESS
         BCT   RWORK9,DECMVE            DECREMENT FOR SMALLER FLD MOVE
         B     GENM62                   ALL BYTES ZERO-DATA INVALID
         SPACE
****    ROUTINE TO CONVERT HEX    ****
SCNHEX   EQU   *
         MVI   ONE(RWORK7),ZERO         INSERT DUMMY ZERO
         STH   RWORK6,OPCDOUBL          STORE DATA LENGTH
         TM    OPCDOUBL+ONE,ONE         DATA LENGTH ODD OR EVEN
         BO    ODD                      BR ODD
         LA    RWORK7,ONE(RWORK7)       EVEN-DONT USE DUMMY ZERO
         SPACE
ODD      EQU   *
         LA    RWORK6,ONE(RWORK6)       ADD ONE
         SRL   RWORK6,ONE               DIVIDE BY TWO
         SPACE
LOOPHEX  EQU   *
         BAL   RWORK10,HEXCK            CHECK & TRANSLATE 1ST BYTE
         LA    RWORK7,ONE(RWORK7)       INCREMENT SOURCE POINTER
         BAL   RWORK10,HEXCK            CHECK & TRANSLATE 2ND BYTE
         BAL   RWORK10,MERGE            MERGE TO INE BYTE 2 HEX CHAR
         LA    RWORK8,ONE(RWORK8)       INCREMENT SINK
         LA    RWORK7,ONE(RWORK7)       INCREMENT SOURCE
         LA    RWORK9,ONE(RWORK9)       INCREMENT COUNT
         BCT   RWORK6,LOOPHEX           ALL DATA PROCESSED-NO LOOP
         STC   RWORK9,OCRSID+THREE      SET LENGTH IN ELEMENT
         MVI   OCRSID+TWO,HEXCD         SET HEX DATA TYPE
         B     BFRDATA                  BR TO BFR DATA
         SPACE
HEXCK    EQU   *
         CLI   ONE(RWORK7),CZERO        CHECK FOR ZERO
         BL    TRYALPHA                 NOT NUM. TRY FOR ALPHA
         CLI   ONE(RWORK7),CNINE        CHECK FOR NINE
         BH    GENM77                   INVALID IF GRATER THAN NINE
         TR    ONE(ONE,RWORK7),TRANNUM-TWO40 TRANSLATE THE BYTE
         BR    RWORK10                  RETURN TO CALLER
         SPACE
TRYALPHA EQU   *
         CLI   ONE(RWORK7),CA           TRY CHARACTER A
         BL    NOTCAPS                  CHECK FOR LOWER CASE   @OZ27255
         CLI   ONE(RWORK7),CF           TRY CHARACTER F
         BH    GENM77                   GREATER THAN F -INVALIN
         TR    ONE(ONE,RWORK7),TRANCHAR-ONE93 TRANSLATE THE BYTE
         BR    RWORK10                  RETURN TO CALLER
NOTCAPS  EQU   *                                               @OZ27255
         CLI   ONE(RWORK7),LA           LOWER CASE A           @OZ27255
         BL    GENM77                   LESS, THEN ITS INVALID @OZ27255
         CLI   ONE(RWORK7),LF           LOWER CASE F           @OZ27255
         BH    GENM77                   GREATER THAN F, INVALID@OZ27255
         TR    ONE(ONE,RWORK7),TRANCHAR-ONE29  TRANSLATE BYTE  @OZ27255
         BR    RWORK10                  RETURN TO CALLER       @OZ27255
         SPACE
MERGE    EQU   *
         IC    RZERO,ZERO(RWORK7)       PICK UP 1ST CHARACTER
         NI    ONE(RWORK7),X0F          CLEAR HI-ORDER HALF OF 2NF
         IC    RPARM,ONE(RWORK7)        PICK UP 2ND CHAR
         SLL   RZERO,FOUR               SHIFT 1ST BYTE LEFT FOUR
         OR    RZERO,RPARM              MERGE THE TWO BYTES
         STC   RZERO,ZERO(RWORK8)       STORE THE MERGED BYTE
         BR    RWORK10                  RETURN TO CALLER
         SPACE
SCNCHAR  EQU   *
         LA    RWORK7,TWO(RWORK7)       BUMP SOURCE DATA POINTER
         SPACE
CHARLP   EQU   *
         CLI   ZERO(RWORK7),QUOTE       CHECK CHAR QUOTE
         BNE   NOQUOTE                  NO-NORMAL CHARACTER
         CLI   ONE(RWORK7),QUOTE        YES-THEN NEXT NUST BE QUOTE
         BNE   GENM77                   NO-ERROR
         LA    RWORK7,ONE(RWORK7)       YES-USE SECOND QUOTE AS DATA
         SPACE
         BCT   RWORK6,NOQUOTE           ADJUST DATA COUNT
         B     GENM77                   NO DATA - ERROR
         SPACE
NOQUOTE  EQU   *
         MVC   ZERO(ONE,RWORK8),ZERO(RWORK7)  MOVE CHAR TO WRK AREA
         LA    RWORK8,ONE(RWORK8)       INCREMENT SINK ADDR
         LA    RWORK7,ONE(RWORK7)       INCRENENT SOURCE ADDR
         LA    RWORK9,ONE(RWORK9)       ADD ONE TO BYTES PROCESSED
         BCT   RWORK6,CHARLP            MORE DATA TO PROCESS
         STC   RWORK9,OCRSID+THREE      SET LENGTH IN ELEMENT
         MVI   OCRSID+TWO,CHARCD        SET DATA TYPE=CHARACTER
         SPACE
****    ROUTINE TO BUFFER DATA    ****
BFRDATA  EQU   *
         LA    RWORK8,EIGHT(RWORK5)     SET START OF DATA AREA
         MVC   OCMODNME(EIGHT),ZERO(RWORK8) MOVE 1ST 8 BYTES TO ELEMEN\
         LA    RWORK7,EIGHT             SET UP FOR
         CR    RWORK9,RWORK7              COMPARE LENGTH GT EIGHT
         BNH   GETTRM                   BR TO PROCESS OPT REQUEST
         AR    RWORK8,RWORK7            POSITION DATA PTR
         SR    RWORK9,RWORK7            ADJUST DATA LENGTH
         LR    RSCNRTN,RWORK9           SET DATA LENGHT FOR BFRNG
         LA    RSAVE,OPCSAVE            POINT R13 TO OP CTL SAVE
         SRL   RSCNRTN,FIVE             DIVIDE BY 32 FOR UNITS NEEDED
         LA    RSCNRTN,ONE(RSCNRTN)     ADD ANOTHER UNIT
         LR    RPARM,RSCNRTN            NUM OF REQUESTED UNITS TO PARM
         L     RLINK,OPCGETBF           PICK UP ADDR OF BUFF ALLOC RTN
         BALR  RRET,RLINK               GO GET BUFFERS
         SPACE
         ST    RPARM,OCUNIT             STORE LINK TO UNITS
         LA    RSCNRTN,THIRTY2          LOAD THIRTY TWO VALUE
         SPACE
FILLBUF  EQU   *
         MVC   TWELVE(TWO,RPARM),OCOPTCDE MVE OPRND & SUBOPRND TO UNIT
         STC   RSCNRTN,FIFTEEN(RPARM)   SET DATA LENGTH IN UNIT
         MVI   FOURTEEN(RPARM),ZERO     CLEAR RESERVE BYTE
         MVC   SIXTEEN(THIRTY2,RPARM),ZERO(RWORK8) MVE DATA INTO UNIT
         L     RPARM,EIGHT(RPARM)       PICK UP NXT UNIT ADDR
         LA    RWORK8,THIRTY2(RWORK8)   BUMP DATA BUFF POINTER
         BCT   RZERO,FILLBUF            LAST BUFFER - NO,FILL NXT UNIT
         SPACE
****    GET TERM ENTRY    ****
GETTRM   EQU   *
         L     RTNT,AVTRNMPT            SET TNT BASE
         LH    RWORK8,OCTRMTBL          GET TNT OFFSET FROM ELEMENT
         SLL   RWORK8,SIXTEEN           CLEAR OUT HI-ORDER
         SRL   RWORK8,SIXTEEN              SIXTEEN BITS
         SR    RWORK7,RWORK7            CLEAR REG
         IC    RWORK7,TNTENLEN-IEDQTNTD(RTNT) GET ENTRY LENGTH
         LA    RWORK9,THREE(RWORK7)     ALLOW FOR ADDRESS
         BCTR  RWORK8,RZERO             REDUCE TNT OFFSET BY ONE
         MR    RWORK8,RWORK8            CALCULATE OFFSET
         LA    RWORK8,TNTFIRST-IEDQTNTD(RTNT) GET ADDRESS OF 1ST ENTRY
         AR    RWORK8,RWORK9            ADD OFFSET TO FIRST ENTRY
         AR    RWORK8,RWORK7            POINT TO ADDRESS OF TERM ENTRY
         MVC   OPCSAVE+ONE(THREE),ZERO(RWORK8) MVE ADDR TO BNDRY
         L     RTERM,OPCSAVE            LOAD TERM ENTRY ADDRESS
         TM    TRMDSORG,TRMLGB          LGB                      S22024
         BO    GENM34                   BRANCH, YES              S22024
*                                       NO OPTIONS FIELDS        S22024
         LA    RTERM,ZERO(RTERM)        CLEAR HI-ORDER BYTE
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS PRESENT
         BNO   GENM34                   NO-BR TO SET NO OPTION NSG
         L     RWORK7,AVTOPTPT          GET ADDRESS OF OPTION TABLES
         L     RWORK8,FOUR(RWORK7)      GET OPT NAMES ADDRESS
         SR    RWORK9,RWORK9            CLEAR OFFSET REGISTER
         SPACE
****    LOCATE OPTION FIELD    ****
OPTLOOP  EQU   *
         LA    RWORK9,ONE(RWORK9)       INCREMENT OFFSET COUNTER
         CLI   ZERO(RWORK8),AVTEFF      END OF OPTIONS
         BE    GENM34                   YES-SET NO OPTIONS MSG
         CLC   TWO(EIGHT,RWORK8),OCBACKUP COMPARE OPTFLDMANE
         BE    GOODNAME                 EQUAL-FND NME,GO LOCATE OPTFLD
         LA    RWORK8,TEN(RWORK8)       POINT TO NXT ENTRY IN TBL
         B     OPTLOOP                  BR TO CHECK NXT ENTRY
         SPACE
GOODNAME EQU   *
         SR    RWORK11,RWORK11          CLEAR FOR NUMBER OF OPTIONS
         IC    RWORK11,TRMOPNO          PICK UP NUM OF OPTIONS
         CR    RWORK9,RWORK11           OFFSET GT SPECIFIED
         BH    GENM34                   YES - ERROR
         AR    RWORK9,RTERM             ADD TERM ENTRY BASE
         CLI   TRMOPT-ONE-IEDQTRM(RWORK9),AVTEFF OPTION SPECIFIED
         BE    GENM34                   NO - ERROR
         SR    RWORK10,RWORK10          CLEAR FOR TABLE OFFSET
         IC    RWORK10,TRMOPT-ONE-IEDQTRM(RWORK9) PICK UP OPTION
*                                       OFFSET
         LH    RWORK7,TRMOPTBL          GET ENTRY OFFSET       @YA05454
         N     RWORK7,AVTCLRHI          CLEAR HI HALF          @YA05454
         A     RWORK7,AVTOPTPT          ADD OPT TBL OFFSET     @YA05454
         AR    RWORK10,RWORK7           GET ENTRY BY ADDING OFFSETS
         LA    RWORK5,EIGHT(RWORK5)     SET SINK FOR MOVE RTN
         MVI   ZERO(RWORK5),BLANK       SET BLANK FOR PROPAGATE
         CLI   ONE(RWORK8),ZERO         CHAR OPT FIELD SPECIFIED
         BE    PROP                     YES, GO PROPAGATE BLANKS
         MVI   ZERO(RWORK5),ZERO        MOVE ZERO FOR PROPAGATE
PROP     EQU   *
         MVC   ONE(TWO55,RWORK5),ZERO(RWORK5) PROAGATE THROUGH FIELD
         SR    RWORK6,RWORK6            CLEAR
         IC    RWORK6,ZERO(RWORK8)      GET OPT FLD LENGTH
         LA    RWORK6,ONE(RWORK6)       INCREMENT BY ONE
         SR    RWORK7,RWORK7            CLEAR REG
         IC    RWORK7,OCRSID+THREE      GET DATA LENGTH
         SR    RWORK9,RWORK9            CLEAR REG
         CR    RWORK6,RWORK7            COMP OPT LEN VS DATA LEN
         BL    GENM62                   DATA LEN TOO BIG
         BE    PROCD                    SAME DONT ADJUST DIFF
         LR    RWORK9,RWORK6            GET OPT LENGTH
         SR    RWORK9,RWORK7            ESTABLISH DIFFERENCE
         SPACE
****    VALIDATE OPTION FIELD TYPE AND MODIFY OPTION    ****
PROCD    EQU   *
         CLI   ONE(RWORK8),ZERO         CK CHAR DATA OPT FLD
         BE    CHARMV                   IT IS- GO CK DATA CHAR ALSO
         CLI   OCRSID+TWO,CHARCD        CHECK DATA FOR CHAR
         BE    GENM56                   YES-ERROR
         AR    RWORK5,RWORK9            ADJUST FOR DEC DATA
         B     DECMV                    BR TO MOVE DEC TYPE
         SPACE
CHARMV   EQU   *
         TM    OCRSID+TWO,AVTEFF        CHECK CHAR OR HEX DATA
         BZ    GENM56                   NO - ERROR CONDITION
         SPACE
DECMV    EQU   *
         LA    RWORK9,EIGHT             SET COUNT FOR MVE LOOP
         LA    RWORK11,OCMODNME         SET SOURCE ADDR
         SPACE
LONGMV   EQU   *
         BAL   RRET,MVERTN              GO TO MOVE LOOP
         L     RWORK11,OCUNIT           GET ADDR OF ATTACHED UNITS
         LR    ROPCE,RWORK11            SET AS ELEMENT BASE
         LA    RWORK11,SIXTEEN(RWORK11) SET SOURCE ADDRESS
         LA    RWORK9,THIRTY2           SET COUNT
         B     LONGMV                   GO TO MOVE DATA
         SPACE
MVERTN   EQU   *
         MVC   ZERO(ONE,RWORK5),ZERO(RWORK11) MOVE ONE BYTE OF DATA
         LA    RWORK5,ONE(RWORK5)       INCREMENT SINK
         LA    RWORK11,ONE(RWORK11)     INCREMENT SOURCE
         BCT   RWORK7,COUNT             DECREMENT COUNT
         B     MOVEOPT                  ALL DATA BUFFERED
         SPACE
COUNT    EQU   *
         BCT   RWORK9,MVERTN            LOOP TO MOVE ALL DATA
         BR    RRET                     RETURN
         SPACE
MOVEOPT  EQU   *
         L     RWORK5,OPCWORK           GET ADDR OF WORK AREA
         BCTR  RWORK6,RZERO             DECREMENT FOR EXECUTE
         EX    RWORK6,OPTIONMV          MOVE IN OPTION FIEDD
         L     ROPCE,OPCCOPCE           GET ELEMENT ADDRESS
         SPACE
XCTLMOD  EQU   *
         LA    RZERO,FIFTY              SET MSG NUM
         STH   RZERO,OCPARM             SET FOR WTG MOD
         MVC   OCWTG(TWO),OKWRT         SET WTG MOD NAME
         MVC   OPCLDNME+VARINAME(TWO),CKPTMOD MOD NAME FOR XCTL
         B     EXIT                     BR TO XCTL
         SPACE
****    MESSAGE GENERATION ROUTINE    ****
GENM34   EQU   *
         LA    RZERO,THIRTY4            SET ERROR MSG NUM
         B     XCTLERR                  INDICACT ERROR COND
         SPACE
GENM56   EQU   *
         LA    RZERO,FIFTY6             SET ERROR MSG NUM
         B     XCTLERR                  BR TO EXIT ERROR
         SPACE
GENM62   EQU   *
         LA    RZERO,SIXTY2             SET ERR MSG CODE
         B     XCTLERR                  GO OUTPUT ERROR MESSAGE
         SPACE
GENM77   EQU   *
         LA    RZERO,SEVNTY7            SET ERROR CODE
         SPACE
XCTLERR  EQU   *
         MVC   OPCLDNME+VARINAME(TWO),WRTERR SET UP FOR XCTL
         SPACE
EXIT     EQU   *
         LR    RPARM,ROPCAVT            PASS OP CTL AVT PTR
         XCTL  SF=(E,OPCXCTL)           CALL NXT LOAD
         SPACE
         SPACE
WRTERR   DC    C'03'                    ERROR MESSAGE MODULE NAME
OKWRT    DC    C'M1'                    MODIFY O.K. MESSAGE MODULE
CKPTMOD  DC    C'06'                    INCIDENT CHECKPOINT MOD NAME
MVSTATNM MVC   OPCDOUBL(ZERO),ZERO(RWORK9) MOVE STATION NAME
OPTIONMV MVC   ZERO(ZERO,RWORK10),EIGHT(RWORK5) MOVE OPTION FIELD
PACKDF   PACK  OPCDOUBL(EIGHT),EIGHT(ZERO,RWORK5) PACK DECIMAL
MVCDEC   MVC   ZERO(ZERO,RWORK10),ZERO(RWORK6) MOVE DECIMAL
DOUBLMAX DC    X'000002147483647C'      A DOUBLE WORD W/MAXIMUM VALUE
ZONECO   DC    X'C0'                    PLUS ZONE FOR CONVERT
TRANNUM  DC    X'00112233445566778899'  TRANSLATE NUMERIC
TRANCHAR DC    X'AABBCCDDEEFF'          TRANSLATE CHARACTER
ZAPAREA  DC    100X'00'                                        @Y17XACT
         EJECT
         TAVTD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TTNTD
         EJECT
         TTRMD
         END
