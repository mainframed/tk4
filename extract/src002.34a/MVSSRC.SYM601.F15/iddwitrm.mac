         TITLE 'IDDWITRM   EXCP INTERCEPT PROCESSOR-TRACK MANAGER      *
                        '
IDDWITRM CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(8)                                              0001
         DC    C'IDDWITRM'                                         0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
*                                                                  0071
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM INITIALIZATION FUNCTIONS OF SETTING UP POINTERS FOR   */
*   /* BASED VARIABLES.                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0071
*   RCALLSAV=R13;                   /* SAVE THE ADDRESS OF THE     0071
*                                      CALLERS SAVE AREA             */
         LR    RCALLSAV,R13                                        0071
*   RVBPPLSV=VDSVBPPL;              /* THE ADDRESS CONTAINED IN THE
*                                      VDSCB IS A POINTER TO THE VBP
*                                      PARAMETER LIST PREFIX WHICH IS
*                                      IN FACT TWO SAVE AREAS TO BE
*                                      USED                          */
         L     RVBPPLSV,VDSVBPPL(,RVDSCB)                          0072
*   RVBPPL=ADDR(VBPRWPRM);          /* POINT TO THE ACTUAL VBP     0073
*                                      READ-WRITE PARM LIST TO BE  0073
*                                      USED.                         */
         LA    RVBPPL,VBPRWPRM(,RVBPPLSV)                          0073
*   RTRKBFR=VDSWINDW;               /* ADDRESS OF THE TRACK BUFFER   */
         L     RTRKBFR,VDSWINDW(,RVDSCB)                           0074
*   RCNTRL=TRACKREQ;                /* SET THE CONTROL REG SO THAT 0075
*                                      THE CPI WILL BE CALLED IF THIS
*                                      IS NOT AN ENTRY FROM CLOSE OR
*                                      JOURNAL.                      */
         LA    RCNTRL,4                                            0075
*   RRQE=R1;                        /* SAVE THE ADDRESS OF THE RQE 0076
*                                      FOR SETTING THE KEY TO THE KEY
*                                      OF THE USER                   */
         LR    RRQE,R1                                             0076
*   RFY                                                            0077
*     R1 UNRSTD;                                                   0077
*                                                                  0077
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS IS A CALL FROM MODULE IDDWICLS OR IDDWIJRN  */
*   /* AS OPPOSED TO IDDWIAPP. A NON-ZERO VALUE IN REGISTER ONE      */
*   /* INDICATES THAT AN RQE IS BEING PASSED AND THERFORE INVOKED BY */
*   /* MODULE IDDWIAPP                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0078
*   IF RRQE^=CLOSJOUR THEN                                         0078
*                                                                  0078
         LTR   RRQE,RRQE                                           0078
         BZ    @RF00078                                            0078
*     /***************************************************************/
*     /*                                                             */
*     /* CALLED BY MODULE IDDWIAPP                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0079
*     DO;                                                          0079
*                                                                  0079
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF THIS IS A PCI RESTART SITUATION              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0080
*       IF WICPCIRS=SWOFF THEN                                     0080
*                                                                  0080
         TM    WICPCIRS(RWICB),B'10000000'                         0080
         BNZ   @RF00080                                            0080
*         /***********************************************************/
*         /*                                                         */
*         /* NOT A PCI RESTART SITUATION AND THEREFORE IT MUST BE    */
*         /* DETERMINED IF THE DESIRED TRACK IS CURRENTLY AVAILABLE  */
*         /* OR A NEW TRACK MUST BE REQUESTED. FIRST DETERMINE IF THE*/
*         /* SEEK ADDRESS SUPPLIED IS A VALID SEEK ADDRESS. THE      */
*         /* EXTENT CHECKING DONE BY THE APPENDAGE INTERFACE HANDLER */
*         /* HAS CHECKED THE CYLINDER VALUES AND DETERMINED THAT THEY*/
*         /* ARE WITHIN THE ALLOCATED EXTENT. HOWEVER THE CHECK DOES */
*         /* NOT INSURE THAT THE HEAD VALUE IS LEGAL. IS THE         */
*         /* REQUESTED SEEK ADDRESS A VALID ONE. ONLY THE HEAD       */
*         /* ADDRESS MUST BE CHECKED ANS THE CYL ADDRESS HAS BEEN    */
*         /* CHECKED DURING EXTENT CHECKING                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0081
*         IF WICSEEKA(H1:H2)>=WICMAXHH THEN                        0081
*                                                                  0081
         SLR   @12,@12                                             0081
         ICM   @12,3,WICSEEKA+5(RWICB)                             0081
         CH    @12,WICMAXHH(,RWICB)                                0081
         BL    @RF00081                                            0081
*           /*********************************************************/
*           /*                                                       */
*           /* AN INVALID SEEK ADDRESS HAS BEEN DETECTED             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0082
*           DO;                                                    0082
*             WICRSTRT=SWON;        /* INDICATE TO THE CPI THAT THIS
*                                      SITUATION IS TO BE HANDLED AS
*                                      A RESTART                     */
*             WICTRMSK=SWON;        /* AND INDICATE THE TYPE AS AN 0084
*                                      ERROR DETECTED IN THE SEEK  0084
*                                      ADDRESS                       */
         OI    WICRSTRT(RWICB),B'00001001'                         0084
*           END;                    /* GO ENTER LOOP FOR INVOKING THE
*                                      CPI WITHOUT FURTHER PROCESSING*/
*         ELSE                      /* VALID ADDRESS PASSED          */
*                                                                  0086
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE IF THE TRACK BUFFER IS EMPTY                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0086
*           IF VDSSEEKA(M)^=EMPTY THEN                             0086
*                                                                  0086
         B     @RC00081                                            0086
@RF00081 CLI   VDSSEEKA(RVDSCB),X'FF'                              0086
         BE    @RF00086                                            0086
*             /*******************************************************/
*             /*                                                     */
*             /* THERE IS A TRACK CURRENTLY IN THE BUFFER. DETERMINE */
*             /* IF THE DESIRED TRACK IS THE SAME AS THE ONE         */
*             /* CURRENTLY IN THE BUFFER.                            */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0087
*             IF VDSSEEKA(C1:H2)^=WICSEEKA(C1:H2) THEN             0087
*                                                                  0087
         CLC   VDSSEEKA+3(4,RVDSCB),WICSEEKA+3(RWICB)              0087
         BE    @RF00087                                            0087
*               /*****************************************************/
*               /*                                                   */
*               /* DESIRED TRACK IS NOT IN TRACK BUFFER. GO SET UP   */
*               /* PARM LIST FOR VBP AND CALL VBP FROM THE SETUP     */
*               /* ROUTINE. THE SETUP ROUTINE WILL REQUEST A WRITE ON*/
*               /* THE CURRENT TRACK IF THE TRACK HAS BEEN UPDATED.  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0088
*               CALL TRMSETU1;      /* DESIRED TRACK AND THE BUFFER
*                                      CONTENTS ARE THE SAME         */
         BAL   @14,TRMSETU1                                        0088
*             ELSE                                                 0089
*                                                                  0089
*               /*****************************************************/
*               /*                                                   */
*               /* SET THE RELATIVE POSITION POINTER BEFORE RECORD   */
*               /* ZERO IF THE CURRENT RECORD ADDRESS POINTS TO R0.  */
*               /* OTHERWISE SET THE RELATIVE POSITION POINTER BEFORE*/
*               /* THE COUNT OF THE CURRENT RECORD.                  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0089
*               IF WICCAM=ADDR(VTR0) THEN                          0089
         B     @RC00087                                            0089
@RF00087 LA    @12,VTR0(,RTRKBFR)                                  0089
         C     @12,WICCAM(,RWICB)                                  0089
         BNE   @RF00089                                            0089
*                 WICRELTP=BEFORER0;/* RECORD ZERO                   */
         MVC   WICRELTP(2,RWICB),@CH00087                          0090
*               ELSE                                               0091
*                                                                  0091
*                 /***************************************************/
*                 /*                                                 */
*                 /* CURRENT RECORD NOT R0                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0091
*                 WICRELTP=BEFORCNT;/* ALL OTHER RECORDS             */
         B     @RC00089                                            0091
@RF00089 MVC   WICRELTP(2,RWICB),@CH00081                          0091
*           ELSE                    /* THE TRACK BUFFER IS EMPTY.  0092
*                                      THEREFORE ONLY A READ IS    0092
*                                      REQUIRED OF VBP.              */
*             DO;                                                  0092
         B     @RC00086                                            0092
@RF00086 DS    0H                                                  0093
*               BUFCMW=SWOFF;       /* INDICATE NO WRITE IS TO TAKE
*                                      PLACE                         */
*                                                                  0093
         NI    BUFCMW(RVBPPL),B'01111111'                          0093
*               /*****************************************************/
*               /*                                                   */
*               /* CALL THE SETUP ROUTINE WHICH WILL CALCULTE THE RBA*/
*               /* FOR THE READ REQUEST AND WILL CALL VBP TO READ IN */
*               /* THE DESIRED TRACK.                                */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0094
*               CALL TRMSETU2;      /* NO READ TO BE ISSUED          */
         BAL   @14,TRMSETU2                                        0094
*             END;                  /* END OF PROCESSING FOR THE   0095
*                                      SITUATION WHERE THE TRACK   0095
*                                      BUFFER IS EMPTY. ENTRY IS NOW
*                                      MADE TO THE LOOP FOR INVOKING
*                                      THE CHANNEL PGM INTERPRETER AS
*                                      THE TRACK BUFFER HAS HAD THE
*                                      APPROPRIATE TRACK READ IN     */
*                                                                  0096
*       /*************************************************************/
*       /*                                                           */
*       /* THE FOLLOWING LOOP IS EXECUTED AS LONG AS THE CHANNEL     */
*       /* PROGRAM INTERPRETER RETURNS WITH A REQUEST FOR A NEW      */
*       /* TRACK. EXIT FROM THE LOOP OCCURS WHEN THE CHANNEL PROGRAM */
*       /* HAS BEEN TERMINATED EITHER NORMALLY OR ABNORMALLY OR THE  */
*       /* CHANNEL PGM INTERPRETER HAS REQUESTED A PCI EXIT TO BE    */
*       /* TAKEN. AT THIS TIME CONTROL IS RETURNED TO THE APPENDAGE  */
*       /* INTERFACE HANDLER.                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0096
*       DO WHILE(RCNTRL=TRACKREQ);                                 0096
@RC00086 DS    0H                                                  0096
@RC00081 DS    0H                                                  0096
@RF00080 B     @DE00096                                            0096
@DL00096 DS    0H                                                  0097
*         TRMRETSV=ADDR(TRMCPRET);  /* SAVE THE RETURN ADDRESS TO  0097
*                                      THIS MODULE IN THE REG SAVE 0097
*                                      AREA PREFIXING THE VBP PARM 0097
*                                      LIST. THE CPI WILL LOCATE THE
*                                      RETURN ADDRESS FROM THIS SAVE
*                                      AREA AS THE CPI DOES NOT    0097
*                                      MAINTAIN THE RETURN ADDRESS IN
*                                      A REG                         */
*                                                                  0097
         LA    @12,TRMCPRET                                        0097
         ST    @12,TRMRETSV(,RVBPPLSV)                             0097
*         /***********************************************************/
*         /*                                                         */
*         /* SAVE THIS MODULES REG 3-11 CONTENTS IN THE FIRST SAVE   */
*         /* AREA PREFIXING THE VBP PARM LIST                        */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0098
*         GEN(STM R3,R11,TRM3TO11(RVBPPLSV))                       0098
*         REFS(R3,R4,R5,R6,R7,R8,R9,R10,R11,RVBPPLSV) SETS(TRM3TO11);
         STM R3,R11,TRM3TO11(RVBPPLSV)
*         RFY                                                      0099
*          (R0,                                                    0099
*           R1,                                                    0099
*           R12) RSTD;                                             0099
*         R0=RVDSCB;                /* ADDRESS OF VDSCB              */
         LR    R0,RVDSCB                                           0100
*         R1=RTRKBFR;               /* ADDRESS OF TRACK BUFFER       */
         LR    R1,RTRKBFR                                          0101
*         R12=RWICB;                /* WICB ADDRESS                  */
         LR    R12,RWICB                                           0102
*         SPKA(RQEPRT);             /* SET THE PROTECTION KEY TO THAT
*                                      OF THE USER                   */
         SLR   @11,@11                                             0103
         IC    @11,RQEPRT(,RRQE)                                   0103
         SPKA  0(@11)                                              0103
*         RFY                                                      0104
*           R15 RSTD;                                              0104
*         R15=ADDR(IDDWICPI);       /* ENTRY POINT CHANNEL PROGRAM 0105
*                                      INTERPRETOR                   */
         L     R15,@CV00123                                        0105
*         WICAUDIT='CPI';           /* CHANNEL PROGRAM INTERPRETOR IN
*                                      CONTROL                       */
         MVC   WICAUDIT(3,RWICB),@CC01004                          0106
*         GEN(LM  R3,R11,VBPPLSV2(RVBPPLSV))                       0107
*         SETS(R3,R4,R5,R6,R7,R8,R9,R10,R11) REFS(RVBPPLSV,VBPPLSV2);
         LM  R3,R11,VBPPLSV2(RVBPPLSV)
*                                   /* RESTORE THE CHANNEL PGM     0108
*                                      INTERPRETER'S REG 3-11 AS THEY
*                                      WERE SAVED. THESE REGS ARE  0108
*                                      MEANINGLESS IF THIS IS NOT A
*                                      RESTART FROM A PCI REQUEST OR
*                                      REENTRY AFTER A NEW TRACK HAS
*                                      BEEN REQUESTED BY THE CPI     */
*         CALL R15->CPI;            /* GO INTERPRET THE CHANNEL    0108
*                                      PROGRAM                       */
*                                                                  0108
         BALR  @14,@15                                             0108
*         /***********************************************************/
*         /*                                                         */
*         /* RETURN FROM THE CHANNEL PROGRAM INTERPRETER             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0109
*TRMCPRET:                                                         0109
*         SPKA(KEYZERO);            /* SET THE PROTECTION KEY BACK TO
*                                      ZERO IN ORDER TO SAVE REGS IN
*                                      PROTECTED CORE                */
TRMCPRET SLR   @14,@14                                             0109
         SPKA  0(@14)                                              0109
*         GEN(STM  R3,R11,VBPPLSV2(RVBPPLSV))                      0110
*         REFS(R3,R4,R5,R6,R7,R8,R9,R10,R11,RVBPPLSV) SETS(VBPPLSV2);
         STM  R3,R11,VBPPLSV2(RVBPPLSV)
*                                   /* SAVE THE CHANNEL PGM        0111
*                                      INTERPRETERS REGS 3-11 IN THE
*                                      SECOND SAVE AREA PREFIXING THE
*                                      VBP PARM LIST                 */
*         GEN(LM  R3,R11,TRM3TO11(RVBPPLSV))                       0111
*         SETS(R3,R4,R5,R6,R7,R8,R9,R10,R11) REFS(RVBPPLSV,TRM3TO11);
         LM  R3,R11,TRM3TO11(RVBPPLSV)
*                                   /* RESTORE OWN REGISTERS FROM THE
*                                      FIRST SAVE AREA PREFIXING THE
*                                      VBP PARM LIST                 */
*         WICAUDIT='TRM';           /* TRACK MANAGER BACK IN CONTROL */
         MVC   WICAUDIT(3,RWICB),@CC01006                          0112
*         RCNTRL=R15;               /* GET THE RETURN CODE PASSED  0113
*                                      BACK FROM THE CHANNEL PGM   0113
*                                      INTERPRETER WHICH IS ZERO IF
*                                      NOT A REQUEST FOR A NEW TRACK
*                                      AND FOUR IF IT IS A REQUEST 0113
*                                      FOR A NEW TRACK               */
         LR    RCNTRL,R15                                          0113
*         RFY                                                      0114
*          (R0,                                                    0114
*           R1,                                                    0114
*           R12,                                                   0114
*           R15) UNRSTD;                                           0114
*         IF RCNTRL=TRACKREQ THEN   /* IF A NEW TRACK IS REQUESTED   */
         C     RCNTRL,@CF00083                                     0115
         BNE   @RF00115                                            0115
*           CALL TRMSETU1;          /* GO SET UP REQUEST BY        0116
*                                      COMPLETING THE PARM LIST FOR
*                                      VBP                           */
         BAL   @14,TRMSETU1                                        0116
*       END;                        /* END OF DO WHILE LOOP          */
@RF00115 DS    0H                                                  0117
@DE00096 C     RCNTRL,@CF00083                                     0117
         BE    @DL00096                                            0117
*     END;                          /* END OF INTERCEPT PROCESSING   */
*                                                                  0119
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR CLOSE AND JOURNAL                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0119
*   ELSE                                                           0119
*     DO;                                                          0119
*                                                                  0119
         B     @RC00078                                            0119
@RF00078 DS    0H                                                  0120
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO SEE IF THE TRACK BUFFER IS EMPTY OR IF A PREVIOUS*/
*       /* READ HAS BEEN ISSUED. THE EXTENT NUMBER OF THE WINDOW     */
*       /* CONTENTS IS SET TO X'FF' UNTIL THE FIRST READ HAS BEEN    */
*       /* ISSUED.                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0120
*       IF VDSSEEKA(M)^=EMPTY THEN                                 0120
*                                                                  0120
         CLI   VDSSEEKA(RVDSCB),X'FF'                              0120
         BE    @RF00120                                            0120
*         /***********************************************************/
*         /*                                                         */
*         /* TRACK BUFFER IS NOT EMPTY. HAS THE CURRENT CONTENTS BEEN*/
*         /* UPDATED.                                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0121
*         IF VTUPDATE=SWON THEN                                    0121
*                                                                  0121
         TM    VTUPDATE(RTRKBFR),B'00100000'                       0121
         BNO   @RF00121                                            0121
*           /*********************************************************/
*           /*                                                       */
*           /* CURRENT CONTENTS UPDATED                              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0122
*           DO;                                                    0122
*             VTUPDATE=SWOFF;       /* SET THE TRACK UPDATE FLAG OFF */
         NI    VTUPDATE(RTRKBFR),B'11011111'                       0123
*             BUFCMW=SWON;          /* SET THE WRITE REQUEST OPTION
*                                      ON IN THE VBP PARAMETER LIST  */
         OI    BUFCMW(RVBPPL),B'10000000'                          0124
*             BUFCORBA=BUFCDDDD;    /* USE THE RBA CALCULATED FOR THE
*                                      READ WHICH FILLED THE BUFFER
*                                      AS THE WRITE RBA              */
         L     @12,BUFCDDDD(,RVBPPL)                               0125
         ST    @12,BUFCORBA(,RVBPPL)                               0125
*             BUFCRRD=SWOFF;        /* TURN OFF THE READ REQUEST   0126
*                                      OPTION IN THE PARM LIST       */
         NI    BUFCRRD(RVBPPL),B'11011111'                         0126
*             BUFCWLEN=VTDATEND;    /* PASS TO VBP THE ACTUAL NUMBER
*                                      OF BYTES WHICH OCCUPY THE   0127
*                                      TRACK BUFFER                  */
         L     @12,VTDATEND(,RTRKBFR)                              0127
         STH   @12,BUFCWLEN(,RVBPPL)                               0127
*             DO;                                                  0128
*               RFY                                                0129
*                 GPR01P RSTD;                                     0129
*               GPR01P=RVBPPL;                                     0130
         LR    GPR01P,RVBPPL                                       0130
*               CALL VREADWR;       /* ENTER VREAD/VWRITE ROUTINE    */
         L     @12,CVTPTR                                          0131
         L     @12,CVTPVBP(,@12)                                   0131
         L     @15,VBPMOD+4(,@12)                                  0131
         BALR  @14,@15                                             0131
*               RFY                                                0132
*                 GPR01P UNRSTD;                                   0132
*             END;                  /* CALL VBP                      */
*           END;                    /* END OF WRITE FOR UPDATED TRACK*/
*       VDSSEEKA(M)=EMPTY;          /* MARK THE TRACK BUFFER AS NO 0135
*                                      CONTENTS AND THAT A READ MUST
*                                      BE ISSUED FOR NEXT REQUEST    */
@RF00121 DS    0H                                                  0135
@RF00120 MVI   VDSSEEKA(RVDSCB),X'FF'                              0135
*     END;                          /* END OF PROCESSING FOR CLOSE 0136
*                                      AND JOURNAL                   */
*                                                                  0137
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE INVOKER OF THIS MODULE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0137
*   R13=RCALLSAV;                   /* RESTORE THE SAVE AREA POINTER
*                                      PASSED TO THIS MODULE         */
@RC00078 LR    R13,RCALLSAV                                        0137
*                                                                  0138
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS USED TO SET UP THE PARAMETER LIST FOR VBP. */
*   /* IT IS CALLED WHEN THE CURRENT TRACK IS NOT THE SAME AS THE    */
*   /* DESIRED TRACK. A SECONDARY ENTRY POINT IS PROVIDED FOR THE    */
*   /* CASE WHEN THE TRACK BUFFER IS EMPTY. FOR THIS CASE, ONLY A    */
*   /* READ IS DESIRED. THE ENTRY FROM CLOSE AND JOURNAL DO NOT USE  */
*   /* THIS SUBROUTINE AS THE CODE WHICH HANDLES THOSE ENTRIES SET UP*/
*   /* THE PARAMETER LIST FOR A WRITE ONLY                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*TRMSETU1:                                                         0138
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0138
@EL00001 DS    0H                                                  0138
@EF00001 DS    0H                                                  0138
@ER00001 LM    @14,@12,12(@13)                                     0138
         BR    @14                                                 0138
TRMSETU1 DS    0H                                                  0139
*   RFY                                                            0139
*     R14 RSTD;                                                    0139
*                                                                  0139
*   /*****************************************************************/
*   /*                                                               */
*   /* HAS THE CURRENT TRACK BEEN UPDATED                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0140
*   IF VTUPDATE=SWON THEN                                          0140
*                                                                  0140
         TM    VTUPDATE(RTRKBFR),B'00100000'                       0140
         BNO   @RF00140                                            0140
*     /***************************************************************/
*     /*                                                             */
*     /* CURRENT TRACK UPDATED. SET UP THE PARAMETER LIST FOR A      */
*     /* WRITE.                                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0141
*     DO;                                                          0141
*       BUFCMW=SWON;                /* SET WRITE OPTION ON           */
         OI    BUFCMW(RVBPPL),B'10000000'                          0142
*       BUFCORBA=BUFCDDDD;          /* SET OUTPUT RBA TO THE OLD READ
*                                      RBA                           */
         L     @15,BUFCDDDD(,RVBPPL)                               0143
         ST    @15,BUFCORBA(,RVBPPL)                               0143
*       VTUPDATE=SWOFF;             /* TURN OFF UPDATE FLAG IN THE 0144
*                                      STATUS BYTE OF THE TRACK      */
         NI    VTUPDATE(RTRKBFR),B'11011111'                       0144
*       BUFCWLEN=VTDATEND;          /* INDICATE THE NUMBER OF BYTES
*                                      OF ACTUAL DATA ON THIS TRACK  */
         L     @15,VTDATEND(,RTRKBFR)                              0145
         STH   @15,BUFCWLEN(,RVBPPL)                               0145
*     END;                          /* END WRITE OPTION SET UP       */
*                                                                  0146
*   /*****************************************************************/
*   /*                                                               */
*   /* CURRENT TRACK NOT UPDATED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*   ELSE                                                           0147
*     BUFCMW=SWOFF;                 /* TURN OFF WRITE OPTION REQUEST */
         B     @RC00140                                            0147
@RF00140 NI    BUFCMW(RVBPPL),B'01111111'                          0147
*                                                                  0148
*   /*****************************************************************/
*   /*                                                               */
*   /* SECONDARY ENTRY POINT TO SUBROUTINE IS PROVIDED FOR THE CASE  */
*   /* WHERE THE TRACK BUFFER IS EMPTY AND ONLY A READ IS DESIRED.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*TRMSETU2:                                                         0148
*   ENTRY;                                                         0148
         B     @EC00148                                            0148
TRMSETU2 DS    0H                                                  0148
@EC00148 DS    0H                                                  0149
*   RFY                                                            0149
*     R11 RSTD;                                                    0149
*   R11=R14;                        /* SAVE RETURN ADDRESS           */
         LR    R11,R14                                             0150
*   RFY                                                            0151
*     R14 UNRSTD;                                                  0151
*   BUFCRRD=SWON;                   /* SET READ REQUEST OPTION       */
*                                                                  0152
         OI    BUFCRRD(RVBPPL),B'00100000'                         0152
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE RELATIVE BYTE ADDRESS FOR THE READ.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0153
*   BUFCDDDD=((WICSEEKA(C1:C2)*WICMAXHH)+WICSEEKA(H1:H2)-VDSABSTT)*
*       VDSWINSI;                                                  0153
         SLR   @01,@01                                             0153
         ICM   @01,3,WICSEEKA+3(RWICB)                             0153
         MH    @01,WICMAXHH(,RWICB)                                0153
         SLR   @12,@12                                             0153
         ICM   @12,3,WICSEEKA+5(RWICB)                             0153
         ALR   @01,@12                                             0153
         SH    @01,VDSABSTT(,RVDSCB)                               0153
         MH    @01,VDSWINSI(,RVDSCB)                               0153
         ST    @01,BUFCDDDD(,RVBPPL)                               0153
*   DO;                                                            0154
*     RFY                                                          0155
*       GPR01P RSTD;                                               0155
*     GPR01P=RVBPPL;                                               0156
         LR    GPR01P,RVBPPL                                       0156
*     CALL VREADWR;                 /* ENTER VREAD/VWRITE ROUTINE    */
         L     @12,CVTPTR                                          0157
         L     @12,CVTPVBP(,@12)                                   0157
         L     @15,VBPMOD+4(,@12)                                  0157
         BALR  @14,@15                                             0157
*     RFY                                                          0158
*       GPR01P UNRSTD;                                             0158
*   END;                            /* CALL VBP                      */
*                                                                  0159
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS TRACK HAS BEEN REFERENCED BEFORE. THIS IS   */
*   /* DONE BY TESTING A BIT SET BY VBP WHEN IT DETECTS AN RBA WHICH */
*   /* HAS NOT BEEN REFERENCED BEFORE.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0160
*   IF BUFCNLAS=SWON THEN                                          0160
*                                                                  0160
         TM    BUFCNLAS(RVBPPL),B'01000000'                        0160
         BNO   @RF00160                                            0160
*     /***************************************************************/
*     /*                                                             */
*     /* NEW TRACK INITIALIZATION                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0161
*     DO;                                                          0161
*       VTRACK=VTRACK&&VTRACK;      /* CLEAR THE HEADER PORTION OF 0162
*                                      THE TRACK                     */
         XC    VTRACK(31,RTRKBFR),VTRACK(RTRKBFR)                  0162
*       VTRKBAL=WICTRKCP;           /* SET THE TRACK BALANCE EQUAL TO
*                                      THE TRACK CAPACITY WHICH IS 0163
*                                      SPECIFIED IN THE DEVICE     0163
*                                      CHARACTERISTICS TABLE. THIS 0163
*                                      VALUE WILL BE DECREMENTED AS
*                                      RECORDS ARE ADDED TO THE    0163
*                                      TRACK.                        */
         LH    @12,WICTRKCP(,RWICB)                                0163
         ST    @12,VTRKBAL(,RTRKBFR)                               0163
*       VTDATEND=LENGTH(VTRACK)-LENGTH(VTR1);/* SET THE DISPLACEMENT
*                                      FROM THE BEGINNING OF THE   0164
*                                      TRACK BUFFER EQUAL TO THE   0164
*                                      ADDRESS OF THE FIRST RECORD 0164
*                                      WHICH FOLLOWS RECORD ZERO     */
         MVC   VTDATEND(4,RTRKBFR),@CF01014                        0164
*       VTR0CNT(CNTIDC1:CNTIDH2)=WICSEEKA(C1:H2);/* SET THE FIRST  0165
*                                      FOUR BYTES OF RECORD ZERO ID
*                                      EQUAL TO THE CYLINDER AND HEAD
*                                      ADDRESS OF THIS TRACK         */
         MVC   VTR0CNT(4,RTRKBFR),WICSEEKA+3(RWICB)                0165
*       VTR0CNT(CNTDL2)=LENGTH(VTR0DATA);/* SET THE DATA LENGTH OF 0166
*                                      RECORD ZERO EQUAL TO EIGHT    */
         MVI   VTR0CNT+7(RTRKBFR),X'08'                            0166
*       VTHA(HAC1:HAH2)=WICSEEKA(C1:H2);/* SET THE HOME OF THIS TRACK
*                                      EQUAL TO THE CYLINDER AND HEAD
*                                      VALUES REQUESTED IN THE SEEK
*                                      ADDR                          */
*                                                                  0167
         MVC   VTHA+1(4,RTRKBFR),WICSEEKA+3(RWICB)                 0167
*       /*************************************************************/
*       /*                                                           */
*       /* SET INDICATOR IN THE TRACK TO WRITE THIS TRACK OUT BEFORE */
*       /* SWITCHING THE TRACK                               @YM03861*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0168
*       VTUPDATE=SWON;              /*                       @YM03861*/
         OI    VTUPDATE(RTRKBFR),B'00100000'                       0168
*     END;                          /* END OF TRACK INITIALIZATION   */
*                                                                  0169
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE FIELDS IN THE INTERCEPT CONTROL BLOCK              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0170
*   WICDATND=ADDR(VTRACK)+VTDATEND; /* SET THE END OF DATA POINTER 0170
*                                      WHICH REPRESENTS THE END OF 0170
*                                      TRACK                         */
@RF00160 LR    @12,RTRKBFR                                         0170
         AL    @12,VTDATEND(,RTRKBFR)                              0170
         ST    @12,WICDATND(,RWICB)                                0170
*   WICCAM=ADDR(VTR0);              /* SET THE CURRENT RECORD ADDRESS
*                                      TO RECORD ZERO                */
         LA    @12,VTR0(,RTRKBFR)                                  0171
         ST    @12,WICCAM(,RWICB)                                  0171
*   WICRELTP=BEFORER0;              /* NOTE THE RELATIVE POSITION  0172
*                                      POINTER IS BEFORE RECORD ZERO */
         MVC   WICRELTP(2,RWICB),@CH00087                          0172
*   WICKL=R0KL;                     /* SET THE CURRENT KEY KEY LENGTH
*                                      TO THE KEY LENGTH OF R0 WHICH
*                                      IS EQUAL TO ZERO              */
         SLR   @12,@12                                             0173
         STH   @12,WICKL(,RWICB)                                   0173
*   WICDL=LENGTH(VTR0DATA);         /* SET THE CURRENT DATA LENGTH TO
*                                      THE DATA LENGTH OF R0 WHICH IS
*                                      EQUAL TO EIGHT                */
         MVC   WICDL(4,RWICB),@CF00072                             0174
*   VDSSEEKA(M:H2)=WICSEEKA(M:H2);  /* SAVE THE CURRENT DASD ADDRESS
*                                      OF THIS TRACK IN THE VDSCB    */
         MVC   VDSSEEKA(7,RVDSCB),WICSEEKA(RWICB)                  0175
*   RFY                                                            0176
*     R14 RSTD;                                                    0176
*   R14=R11;                        /* RESTORE RETURN ADDRESS        */
         LR    R14,R11                                             0177
*   RFY                                                            0178
*     R11 UNRSTD;                                                  0178
*   END TRMSETU1;                   /* END SET UP INTERNAL PROCEDURE */
@EL00002 DS    0H                                                  0179
@EF00002 DS    0H                                                  0179
@ER00002 BR    @14                                                 0179
*   END IDDWITRM                    /* END MAIN PROCEDURE            */
*                                                                  0180
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IDDWICB )                                       */
*/*%INCLUDE SYSLIB  (IDDVDSCB)                                       */
*/*%INCLUDE SYSLIB  (IDDTRACK)                                       */
*/*%INCLUDE SYSLIB  (IDDVBPPL)                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDAVBPI )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IECDRQE )                                       */
*                                                                  0180
*       ;                                                          0180
@DATA    DS    0H
@CH00081 DC    H'1'
@CH00087 DC    H'6'
@DATD    DSECT
         DS    0F
IDDWITRM CSECT
         DS    0F
@CF00083 DC    F'4'
@CF00072 DC    F'8'
@CF01014 DC    F'30'
@DATD    DSECT
         DS    0D
RQEPTR   DS    A
VDSCBPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDDWITRM CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00123 DC    V(IDDWICPI)
         DS    0D
@CC01004 DC    C'CPI'
@CC01006 DC    C'TRM'
         DS    CL2
TRMPATCH DC    10F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RBASE    EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
RIOB     EQU   @02
R3       EQU   @03
RTRKBFR  EQU   @03
R4       EQU   @04
RCNTRL   EQU   @04
R5       EQU   @05
RVBPPL   EQU   @05
R6       EQU   @06
RWICB    EQU   @06
R7       EQU   @07
RVDSCB   EQU   @07
R8       EQU   @08
RCALLSAV EQU   @08
R9       EQU   @09
R10      EQU   @10
RRQE     EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
RVBPPLSV EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR01P   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
CVTPTR   EQU   16
CPI      EQU   0
WICB     EQU   0
WICSEEKA EQU   WICB
WICSKBCH EQU   WICSEEKA+1
WICSKACH EQU   WICSKBCH+2
WICAUDIT EQU   WICB+12
WICRSTCP EQU   WICB+16
WICERPSW EQU   WICB+32
WICCAM   EQU   WICB+36
WICRELTP EQU   WICB+40
WICKL    EQU   WICB+42
WICDL    EQU   WICB+44
WICOFLG1 EQU   WICB+56
WICOFLG2 EQU   WICB+57
WICSEQFG EQU   WICB+58
WICXOFLG EQU   WICB+59
WICRESTA EQU   WICB+68
WICPCIRS EQU   WICRESTA
WICTRMSK EQU   WICRESTA
WICRSTRT EQU   WICRESTA
WICDVTAB EQU   WICB+70
WICMAXHH EQU   WICDVTAB+2
WICTRKCP EQU   WICDVTAB+4
WICIGAP  EQU   WICDVTAB+6
WICLGAP  EQU   WICDVTAB+8
WICKEYGP EQU   WICDVTAB+10
WICREGSV EQU   WICB+92
WICDATND EQU   WICB+116
VDSCB    EQU   0
VDSSEEKA EQU   VDSCB+45
VDSWICB  EQU   VDSCB+56
VDSVBPPL EQU   VDSCB+60
VDSWINDW EQU   VDSCB+64
VDSWINSI EQU   VDSCB+70
VDSABSTT EQU   VDSCB+72
VTRACK   EQU   0
VTDATEND EQU   VTRACK
VTRKBAL  EQU   VTRACK+4
VTST     EQU   VTRACK+8
VTUPDATE EQU   VTST
VTHA     EQU   VTRACK+9
VTR0     EQU   VTRACK+14
VTR0CNT  EQU   VTR0
VTR0DATA EQU   VTR0+8
VTR1     EQU   VTRACK+30
VBPPL    EQU   0
VBPPLSAV EQU   VBPPL
VBPPLSV2 EQU   VBPPL+72
@NM00004 EQU   VBPPL+144
VBPRWPRM EQU   @NM00004
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCIOFL EQU   IDABUFC+2
BUFCMW   EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCFLG2 EQU   IDABUFC+3
BUFCNLAS EQU   BUFCFLG2
BUFCPLH  EQU   IDABUFC+4
BUFCDDDD EQU   IDABUFC+8
BUFCORBA EQU   IDABUFC+12
BUFCINV  EQU   IDABUFC+28
BUFCWLEN EQU   BUFCINV
VBPMOD   EQU   0
VREADWR  EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RQE      EQU   0
RQEPRT   EQU   RQE+36
RQETYPE  EQU   RQE+37
RQETYP3  EQU   RQETYPE
RQEFLAG  EQU   RQE+38
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
VCLOSE   EQU   0
VOPEN    EQU   0
VSCRATCH EQU   0
TRMSAVE  EQU   VBPPLSAV
TRMRETSV EQU   TRMSAVE
TRM3TO11 EQU   TRMSAVE+4
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTPVBP  EQU   CVTS01+444
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
BUFCRSC1 EQU   BUFCAVL
WICCCWER EQU   WICREGSV
WICCSWSV EQU   WICREGSV
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
RQEEND   EQU   RQE+40
@NM00011 EQU   RQE+39
RQECHEAC EQU   RQEFLAG
RQEPURGE EQU   RQEFLAG
RQESRBS  EQU   RQEFLAG
RQESTBL  EQU   RQEFLAG
RQEFIXST EQU   RQEFLAG
RQENOFRE EQU   RQEFLAG
RQENOPST EQU   RQEFLAG
RQERETRY EQU   RQEFLAG
RQETYP1  EQU   RQETYP3
RQETYP2  EQU   RQETYP3
RQEDIE   EQU   RQETYPE
RQEEOEE  EQU   RQETYPE
RQEVAM   EQU   RQETYPE
RQE1TO1  EQU   RQETYPE
RQEVIRT  EQU   RQETYPE
RQE114   EQU   RQETYPE
@NM00010 EQU   RQEPRT
RQEPKEY  EQU   RQEPRT
RQEIPIB  EQU   RQE+32
RQESRB   EQU   RQE+28
RQERRQ   EQU   RQE+24
RQENRQE  EQU   RQE+20
RQETCCW  EQU   RQE+16
RQETCB   EQU   RQE+12
RQEDEB   EQU   RQE+8
RQEIOB   EQU   RQE+4
RQEUCB   EQU   RQE
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00009 EQU   CVTFIX+248
@NM00008 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCNXT1 EQU   IDABUFC+24
BUFCBAD  EQU   IDABUFC+20
BUFCCPA  EQU   IDABUFC+16
BUFCAMB  EQU   BUFCPLH
@NM00007 EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00006 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00005 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
VBPOPPRM EQU   VBPRWPRM
VTHACCHH EQU   VTHA+1
VTHAFLAG EQU   VTHA
VTOVFL   EQU   VTST
VTINIT   EQU   VTST
VDSDSCB  EQU   VDSCB+80
VDSRBN   EQU   VDSCB+76
VDSNMTRK EQU   VDSCB+74
VDSTRKSI EQU   VDSCB+68
VDSDSPCT EQU   VDSCB+52
VDSUCB   EQU   VDSCB
WICTCB   EQU   WICB+120
WICRGSV5 EQU   WICREGSV+20
WICRGSV4 EQU   WICREGSV+16
WICRGSV3 EQU   WICREGSV+12
WICRGSV2 EQU   WICREGSV+8
WICRGSV1 EQU   WICREGSV+4
WICRGSV0 EQU   WICREGSV
WICEXPTR EQU   WICB+88
WICSENSE EQU   WICB+86
WICDEVTP EQU   WICDVTAB+15
WICSECT  EQU   WICDVTAB+14
WICTOL   EQU   WICDVTAB+12
WICKYGP  EQU   WICKEYGP
WICLGP   EQU   WICLGAP
WICIGP   EQU   WICIGAP
WICMAXCC EQU   WICDVTAB
WICFMASK EQU   WICB+69
@NM00003 EQU   WICRESTA
WICTRKRS EQU   WICRESTA
WICSEKRS EQU   WICRESTA
WICOVFIP EQU   WICRESTA
WICCUROP EQU   WICB+67
WICLSTOP EQU   WICB+66
WICERDSP EQU   WICB+64
WICWORK  EQU   WICB+60
WICRCSKT EQU   WICXOFLG
WICNDXPT EQU   WICXOFLG
WICTICFG EQU   WICSEQFG
WICFSKE  EQU   WICSEQFG
WICFSIDE EQU   WICSEQFG
WICLWCKD EQU   WICSEQFG
WICWRTIP EQU   WICOFLG2
WICDC    EQU   WICOFLG2
WICSCHEQ EQU   WICOFLG2
WICERROR EQU   WICOFLG2
WICINTRP EQU   WICOFLG2
WICDATAX EQU   WICOFLG2
WICXFCOM EQU   WICOFLG2
@NM00002 EQU   WICOFLG1
WICSID   EQU   WICOFLG1
WICSCHTC EQU   WICOFLG1
WICOVFOP EQU   WICOFLG1
WICFMTW  EQU   WICOFLG1
WICERASE EQU   WICOFLG1
WICWSCKD EQU   WICOFLG1
WICWCKD  EQU   WICOFLG1
WICREQXF EQU   WICB+52
WICAVXFR EQU   WICB+48
WICERPSV EQU   WICB+33
@NM00001 EQU   WICERPSW
WICERPWR EQU   WICERPSW
WICERPOV EQU   WICERPSW
WICCCW2  EQU   WICRSTCP+8
WICCCW1  EQU   WICRSTCP
WICPRT   EQU   WICB+15
WICSTART EQU   WICB+8
WICSKAR  EQU   WICSEEKA+7
WICSKAHH EQU   WICSKACH+2
WICSKACC EQU   WICSKACH
WICSKABB EQU   WICSKBCH
WICSKAM  EQU   WICSEEKA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00089 EQU   @RC00086
@RC00087 EQU   @RC00086
@RC00140 EQU   @EC00148
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IDDWITRM,(C'PLS0202',0602,75325)
