         TITLE 'IDDWIAPP - EXCP INTERCEPT APPENDAGE SIMULATOR          *
                        '
IDDWIAPP CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         USING *,R15                    ADDRESSABILITY FOR BRANCH TABLE
         B     WIEXCP                   WI EXCP ENTRY POINT
         B     WICLOSE                  WI CLOSE ENTRY POINT
         DS    0H                       WI JOURNAL ENTRY POINT
         L     R15,ADWIJRN              POINTER TO JOURNAL MODULE
         BR    R15                      GO TO IDDWIJRN
         DC    C'IDDWIAPP'             MODULE ID              @YM01137
WICLOSE  L     R15,ADWICLS              POINTER TO CLOSE MODULE
         BR    R15                      GO TO IDDWICLS
WIEXCP   EQU   *                        *
         BALR  R8,0                     ADDRESSABILITY IDDWIEXCP
         USING *,R8                     *
*   R9=ADDR(IDDWIFRR);              /* RECOVERY POINT                */
         L     R9,@CV00557                                         0146
*   GEN SETS(R9,R10,R11,FRRSCURR,FRRSFRRA,FRRSPARM) REFS(R9,PSA,PSACSTK
*       ,FRRSCURR,FRRS,FRRSLAST,FRRSELEN,FRRSPARM,PSALSFCC)        0147
*       (SETFRR A,FRRAD=(R9),PARMAD=(R9),WRKREGS=(R10,R11) );/*    0147
*                                                            @YM03030*/
         SETFRR A,FRRAD=(R9),PARMAD=(R9),WRKREGS=(R10,R11)
*   RQESRB=R9;                      /* SAVE RECOVERY PARAMETER LIST
*                                                            @YM03196*/
         ST    R9,RQESRB(,RQEREG)                                  0148
*   RESPECIFY                                                      0149
*     EIFRRPRM BASED(RQESRB);       /*                       @YM03196*/
*                                                                  0149
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE IOS REGISTER FOR SUBSEQUENT RETURN IN THE RQE            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*   RQENRQE=SAVERG;                 /* SAVE AREA PASSED              */
         ST    SAVERG,RQENRQE(,RQEREG)                             0150
*   EIRQEPTR=RQEREG;                /* SAVE RQE POINTER              */
         L     @15,RQESRB(,RQEREG)                                 0151
         ST    RQEREG,EIRQEPTR(,@15)                               0151
*   EIREG14=R14;                    /* SAVE RETURN VECTOR            */
         ST    R14,EIREG14(,@15)                                   0152
*   EIREG5=R5;                      /* SAVE IOS BASE REGISTER        */
         ST    R5,EIREG5(,@15)                                     0153
*   RESPECIFY                                                      0154
*    (R5,                                                          0154
*     R14,                                                         0154
*     R9,                                                          0154
*     R10,                                                         0154
*     R11) UNRSTD;                  /* RELEASE REGISTERS             */
*                                                                  0155
*/********************************************************************/
*/*                                                                  */
*/* FUNCTION - SETS UP REGISTERS AND ADDRESSABILITY FOR MODULE       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0155
*   RESPECIFY                                                      0155
*     VDSCB BASED(VDSCBREG);        /* VDSCB AND UCB ADDRESSABILITY  */
*   RESPECIFY                                                      0156
*     IOBSTDRD BASED(IOBREG);       /* IOB ADDRESSABILITY            */
*   RESPECIFY                                                      0157
*     DEBBASIC BASED(RQEDEB);       /* DEB ADDRESSABILITY            */
*                                                                  0157
*   /*****************************************************************/
*   /*                                                               */
*   /* WICB AND WICSEEKA(APPENDAGES) ADDRESSABILITY                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   WICBREG=VDSWICB;                                               0158
         L     WICBREG,VDSWICB(,VDSCBREG)                          0158
*   RESPECIFY                                                      0159
*     WICB BASED(WICBREG);                                         0159
*                                                                  0160
*/********************************************************************/
*/*                                                                  */
*/* FUNCTION - INSURES THAT THE WINDOW, WICB AND VBPPL EXIST FOR THE */
*/*      EXIST FOR THE APPENDAGE INTERCEPT AND THE TRACK MANAGER.    */
*/*      IF THE KEY OF THE USER HAS CHANGED IT FREES THE CURRENT     */
*/*      WINDOW AND WICB AND REACQUIRES THEM IN THE NEW USER KEY.    */
*/*      ALSO FREE WICB AND WINDOW IF PREVIOUSLY ACQUIRED BUT A      */
*/*      SUCCESSFUL VOPEN WAS NEVER COMPLETED AS EVIDENCED BY A      */
*/*      NON ZERO WICB POINTER AND A ZERO DSPCT POINTER.     @ZA00121*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0160
*   IF((WICBREG^=0)&(VDSDSPCT=0))×(((WICPRT&'F0'X)^=/*       @ZA27906*/
*       (RQEPRT&'F0'X))&(WICBREG^=0)) THEN                         0160
         SLR   @12,@12                                             0160
         CR    WICBREG,@12                                         0160
         BE    @GL00001                                            0160
         C     @12,VDSDSPCT(,VDSCBREG)                             0160
         BE    @RT00160                                            0160
@GL00001 LA    @12,240                                             0160
         SLR   @09,@09                                             0160
         IC    @09,WICPRT(,WICBREG)                                0160
         NR    @09,@12                                             0160
         SLR   @05,@05                                             0160
         IC    @05,RQEPRT(,RQEREG)                                 0160
         NR    @12,@05                                             0160
         CR    @09,@12                                             0160
         BE    @RF00160                                            0160
         LTR   WICBREG,WICBREG                                     0160
         BZ    @RF00160                                            0160
@RT00160 DS    0H                                                  0161
*     DO;                           /*                       @ZA27906
*                                      KEY OF USER HAS CHANGED - OR
*                                      UNSUCESSFUL VOPEN FREE WICB 0161
*                                      AND WINDOW SO THEY CAN BE   0161
*                                      ACQUIRED IN THE NEW KEY.    0161
*                                                            @ZA00121*/
*       RESPECIFY                                                  0162
*        (R9,                                                      0162
*         R10) RSTD;                /* SAVE THE RQE AND VDSCB      0162
*                                      POINTERS                      */
*       R9=VDSCBREG;                /* VDSCB ADDRESSABILITY          */
         LR    R9,VDSCBREG                                         0163
*       RESPECIFY                                                  0164
*         VDSCB BASED(R9);                                         0164
*       RESPECIFY                                                  0165
*         UCBOB BASED(R9);          /* UCB ADDRESSABILITY            */
*       R10=RQEREG;                 /* RQE ADDRESSABILITY            */
         LR    R10,RQEREG                                          0166
*       RESPECIFY                                                  0167
*         RQE BASED(R10);                                          0167
*                                                                  0167
*       /*************************************************************/
*       /*                                                           */
*       /* PURGE THE WINDOW - CALL THE TRACK MANAGER TO VWRITE THE   */
*       /* WINDOW SO IT CAN BE FREED                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0168
*       RESPECIFY                                                  0168
*        (R1) RSTD;                                                0168
*       IF VDSDSPCT^=0 THEN                                        0169
         L     @12,VDSDSPCT(,R9)                                   0169
         LTR   @12,@12                                             0169
         BZ    @RF00169                                            0169
*         DO;                       /* MAKE SURE THAT VOPEN HAS    0170
*                                      COMPLETED SUCCESSFULLY      0170
*                                                            @ZA00121*/
*           R1=0;                   /* RQE = 0 FORCES WINDOW PURGE   */
         SLR   R1,R1                                               0171
*           CALL IDDWITRM;          /* VWRITE THE WINDOW             */
         L     @15,@CV00548                                        0172
         BALR  @14,@15                                             0172
*         END;                      /* END OF FLUSH WINDOW   @ZA00121*/
*                                                                  0173
*       /*************************************************************/
*       /*                                                           */
*       /* PREPARE TO FREE THE WINDOW AND THE WICB                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0174
*       R7=ASCBPTR;                 /* ASCB ADDRESSABILITY FOR     0174
*                                      FREEMAIN                      */
@RF00169 L     @12,CVTPTR                                          0174
         L     @11,CVTTCBP(,@12)                                   0174
         L     R7,ASCBPTR(,@11)                                    0174
*       R4=WICTCB;                  /* FREEMAIN UNDER THE SAME TCB AS
*                                      GETMAIN               @VS05944*/
*                                                                  0175
         L     R4,WICTCB(,WICBREG)                                 0175
*       /*************************************************************/
*       /*                                                           */
*       /* FREE THE WINDOW                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0176
*       DO;                         /* FREEMAIN(RU) LV(VDSWINSI)A(VDS
*                                      WINDW->VTRACK) SP(SP229)    0176
*                                      KEY(WICPRT/16) BRANCH         */
*         RESPECIFY                                                0177
*          (GPR01F,                                                0177
*           GPR03F,                                                0177
*           GPR00F) RESTRICTED;                                    0177
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0178
*         GPR03F=3;                 /* SET TYPE                      */
         LA    GPR03F,3                                            0179
*         GPR00F=VDSWINSI;          /* LENGTH REQUESTED              */
         LH    GPR00F,VDSWINSI(,R9)                                0180
*         GPR01F=ADDR(VDSWINDW->VTRACK);/* SET REGISTER ONE          */
         L     GPR01F,VDSWINDW(,R9)                                0181
*         GPR03F=GPR03F+((SP229)*256);/* SUBPOOL VALUE               */
         AL    GPR03F,@CF03313                                     0182
*         GPR03F=GPR03F×((WICPRT/16)*1048576);/* KEY IN BYTE ONE     */
         SLR   @11,@11                                             0183
         IC    @11,WICPRT(,WICBREG)                                0183
         SRL   @11,4                                               0183
         SLA   @11,20                                              0183
         OR    GPR03F,@11                                          0183
*         CALL CVTCRMN;             /* BRANCH ENTRY POINT            */
         L     @15,CVTCRMN(,@12)                                   0184
         BALR  @14,@15                                             0184
*         RESPECIFY                                                0185
*          (GPR01F,                                                0185
*           GPR03F,                                                0185
*           GPR00F) UNRESTRICTED;                                  0185
*       END;                        /* FREEMAIN(RU) LV(VDSWINSI)A(VDS
*                                      WINDW->VTRACK) SP(SP229)    0186
*                                      KEY(WICPRT/16) BRANCH @YM01169*/
*                                                                  0186
*       /*************************************************************/
*       /*                                                           */
*       /* FREE THE WICB                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0187
*       DO;                         /* FREEMAIN(RU)                0187
*                                      LV(LENGTH(WICB))A(WICB)     0187
*                                      SP(230) KEY(WICPRT/16) BRANCH */
*         RESPECIFY                                                0188
*          (GPR01F,                                                0188
*           GPR03F,                                                0188
*           GPR00F) RESTRICTED;                                    0188
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0189
*         GPR03F=3;                 /* SET TYPE                      */
         LA    GPR03F,3                                            0190
*         GPR00F=LENGTH(WICB);      /* LENGTH REQUESTED              */
         LA    GPR00F,124                                          0191
*         GPR01F=ADDR(WICB);        /* SET REGISTER ONE              */
         LR    GPR01F,WICBREG                                      0192
*         GPR03F=GPR03F+((230)*256);/* SUBPOOL VALUE                 */
         AL    GPR03F,@CF03315                                     0193
*         GPR03F=GPR03F×((WICPRT/16)*1048576);/* KEY IN BYTE ONE     */
         SLR   @12,@12                                             0194
         IC    @12,WICPRT(,WICBREG)                                0194
         SRL   @12,4                                               0194
         SLA   @12,20                                              0194
         OR    GPR03F,@12                                          0194
*         CALL CVTCRMN;             /* BRANCH ENTRY POINT            */
         L     @12,CVTPTR                                          0195
         L     @15,CVTCRMN(,@12)                                   0195
         BALR  @14,@15                                             0195
*         RESPECIFY                                                0196
*          (GPR01F,                                                0196
*           GPR03F,                                                0196
*           GPR00F) UNRESTRICTED;                                  0196
*       END;                        /* FREEMAIN(RU)                0197
*                                      LV(LENGTH(WICB))A(WICB)     0197
*                                      SP(230) KEY(WICPRT/16) BRANCH */
*                                                                  0198
*       /*************************************************************/
*       /*                                                           */
*       /* DISCONNECT OLD WICB AND WINDOW FROM THE VDSCB             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0198
*       WICBREG=0;                  /* NO WICB                       */
         SLR   WICBREG,WICBREG                                     0198
*       VDSWICB=0;                  /* NO WICB                       */
         SLR   @12,@12                                             0199
         ST    @12,VDSWICB(,R9)                                    0199
*       VDSWINDW=0;                 /* NO WINDOW                     */
*                                                                  0200
         ST    @12,VDSWINDW(,R9)                                   0200
*       /*************************************************************/
*       /*                                                           */
*       /* REESTABLISH VDSCB AND RQE ADDRESSABILITY                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0201
*       VDSCBREG=R9;                /* VDSCB                         */
         LR    VDSCBREG,R9                                         0201
*       RQEREG=R10;                 /* RQE                           */
         LR    RQEREG,R10                                          0202
*     END;                                                         0203
*   IF WICBREG=0 THEN                                              0204
@RF00160 SLR   @12,@12                                             0204
         CR    WICBREG,@12                                         0204
         BNE   @RF00204                                            0204
*     DO;                           /* ACQUIRE THE WICB AND WINDOW 0205
*                                      AND IF NECESSARY THE VBPPL. 0205
*                                      FILL IN THE WICB              */
*                                                                  0205
*       /*************************************************************/
*       /*                                                           */
*       /* SAVE THE RQE AND VDSCB POINTERS                   @ZA00139*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0206
*       R9=VDSCBREG;                /* VDSCB ADDRESSABILITY  @ZA00139*/
         LR    R9,VDSCBREG                                         0206
*       R10=RQEREG;                 /* RQE ADDRESSABILITY    @ZA00139*/
*                                                                  0207
         LR    R10,RQEREG                                          0207
*       /*************************************************************/
*       /*                                                           */
*       /* ABEND IF THE DATA SET HAS BEEN SCRATCHED. SCRATCH SETS    */
*       /* RELATIVE TRACK TO -1 WHEN IT SCRATCHES VIRTUAL DATA SETS. */
*       /* ALSO MERGE MODULE IDAVBPJ2 SETS VBPHSCR ON WHEN IT DOES AN*/
*       /* ACTIVATE ON A LOGICAL GROUP BUT THE LOGICAL GROUP HAS BEEN*/
*       /* DELETED.                                          @ZA00139*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0208
*       IF VDSABSTT=-1×((VDSDSPCT^=0)&(VBPHDEL=SET)) THEN          0208
         CLC   VDSABSTT(2,R9),@CH03240                             0208
         BE    @RT00208                                            0208
         L     @11,VDSDSPCT(,R9)                                   0208
         CR    @11,@12                                             0208
         BE    @RF00208                                            0208
         TM    VBPHDEL(@11),B'00001000'                            0208
         BNO   @RF00208                                            0208
@RT00208 DS    0H                                                  0209
*         DO;                       /*                       @ZA00139*/
*           RESPECIFY                                              0210
*             R15 RSTD;                                            0210
*           R15=24;                 /* INDICATE REASON FOR ABEND     */
         LA    R15,24                                              0211
*           GEN(ABEND X'0E6',DUMP,,SYSTEM)                         0212
*           EXIT NOSEQFLOW;                                        0212
         ABEND X'0E6',DUMP,,SYSTEM
*           RESPECIFY                                              0213
*             R15 UNRSTD;                                          0213
*         END;                                                     0214
*                                                                  0215
*       /*************************************************************/
*       /*                                                           */
*       /* PREPARE TO ACQUIRE CONTROL BLOCKS                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0215
*       R7=ASCBPTR;                 /* ASCB ADDRESSABILITY FOR     0215
*                                      GETMAIN                       */
@RF00208 L     @12,CVTPTR                                          0215
         L     @11,CVTTCBP(,@12)                                   0215
         L     R7,ASCBPTR(,@11)                                    0215
*       R4=TCBJSTCB;                /* JOB STEP TCB ADDRESSABILITY 0216
*                                      FOR GETMAIN                   */
*                                                                  0216
         L     @11,TCBPTR(,@11)                                    0216
         L     R4,TCBJSTCB(,@11)                                   0216
*       /*************************************************************/
*       /*                                                           */
*       /* ACQUIRE VBPPL IF NECESSARY                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0217
*       IF VDSVBPPL=0 THEN                                         0217
         L     @11,VDSVBPPL(,R9)                                   0217
         LTR   @11,@11                                             0217
         BNZ   @RF00217                                            0217
*         DO;                       /* NO VBPPL ACQUIRE ONE          */
*           DO;                     /* GETMAIN (RU) LV(LENGTH(VBPPL))
*                                      SP(SP230) KEY(KEYONE) BRANCH  */
*             RESPECIFY                                            0220
*              (GPR01F,                                            0220
*               GPR03F,                                            0220
*               GPR00F) RESTRICTED;                                0220
*             GPR01F=0;             /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0221
*             GPR03F=2;             /* RU-TYPE GETMAIN               */
         LA    GPR03F,2                                            0222
*             GPR00F=LENGTH(VBPPL); /* LENGTH REQUESTED              */
         LA    GPR00F,184                                          0223
*             GPR03F=GPR03F×((SP230)*256);/* SP IN BYTE 2            */
         O     GPR03F,@CF03315                                     0224
*             GPR03F=GPR03F×((KEYONE)*65536*16);/* KEY IN BYTE 1     */
         SLR   @11,@11                                             0225
         IC    @11,KEYONE                                          0225
         SLA   @11,20                                              0225
         OR    GPR03F,@11                                          0225
*             CALL CVTCRMN;         /* BRANCH ENTRY POINT            */
         L     @15,CVTCRMN(,@12)                                   0226
         BALR  @14,@15                                             0226
*             RESPECIFY                                            0227
*              (GPR01F,                                            0227
*               GPR03F,                                            0227
*               GPR00F) UNRESTRICTED;                              0227
*           END;                    /* GETMAIN (RU) LV(LENGTH(VBPPL))
*                                      SP(SP230) KEY(KEYONE) BRANCH  */
*           VDSVBPPL=R1;            /* CONNECT VBPPL TO VDSCB        */
         ST    R1,VDSVBPPL(,R9)                                    0229
*         END;                                                     0230
*                                                                  0231
*       /*************************************************************/
*       /*                                                           */
*       /* ACQUIRE WICB IN USER KEY LSQA. WORK AREA FOR EXCP         */
*       /* INTERCEPT                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0231
*       DO;                         /* GETMAIN (RU) LV(LENGTH(WICB))
*                                      SP(SP230) KEY(RQEPRT/16)    0231
*                                      BRANCH                        */
@RF00217 DS    0H                                                  0232
*         RESPECIFY                                                0232
*          (GPR01F,                                                0232
*           GPR03F,                                                0232
*           GPR00F) RESTRICTED;                                    0232
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0233
*         GPR03F=2;                 /* RU-TYPE GETMAIN               */
         LA    GPR03F,2                                            0234
*         GPR00F=LENGTH(WICB);      /* LENGTH REQUESTED              */
         LA    GPR00F,124                                          0235
*         GPR03F=GPR03F×((SP230)*256);/* SP IN BYTE 2                */
         O     GPR03F,@CF03315                                     0236
*         GPR03F=GPR03F×((RQEPRT/16)*65536*16);/* KEY IN BYTE 1      */
         SLR   @12,@12                                             0237
         IC    @12,RQEPRT(,R10)                                    0237
         SRL   @12,4                                               0237
         SLA   @12,20                                              0237
         OR    GPR03F,@12                                          0237
*         CALL CVTCRMN;             /* BRANCH ENTRY POINT            */
         L     @12,CVTPTR                                          0238
         L     @15,CVTCRMN(,@12)                                   0238
         BALR  @14,@15                                             0238
*         RESPECIFY                                                0239
*          (GPR01F,                                                0239
*           GPR03F,                                                0239
*           GPR00F) UNRESTRICTED;                                  0239
*       END;                        /* GETMAIN (RU) LV(LENGTH(WICB))
*                                      SP(SP230) KEY(RQEPRT/16)    0240
*                                      BRANCH                        */
*       WICBREG=R1;                 /* WICB ADDRESSABILITY           */
         LR    WICBREG,R1                                          0241
*       VDSWICB=WICBREG;            /* CONNECT VDSCB TO WICB         */
         ST    WICBREG,VDSWICB(,R9)                                0242
*                                                                  0243
*       /*************************************************************/
*       /*                                                           */
*       /* FILL IN THE WICB                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0243
*       WICB=WICB&&WICB;            /* CLEAR ACQUIRED WICB           */
         XC    WICB(124,WICBREG),WICB(WICBREG)                     0243
*       WICTCB=R4;                  /* SAVE TCB ADDR UNDER WHICH   0244
*                                      WICB,                 @VS05944
*                                      WINDOW AND VBPPL WERE       0244
*                                      GETMAINED             @VS05944*/
         ST    R4,WICTCB(,WICBREG)                                 0244
*       WICAUDIT='APP';             /* APPENDAGE INTERFACE HANDLER IN
*                                      CONTROL                       */
         MVC   WICAUDIT(3,WICBREG),@CC03242                        0245
*       RESPECIFY                                                  0246
*        (WORKREG) RSTD;                                           0246
*       WORKREG=(DVCTYPMK&UCBTYP)+CVTZDTAB;/* DEVICE TABLE INDEX   0247
*                                      POINTER                       */
         L     WORKREG,UCBTYP(,R9)                                 0247
         N     WORKREG,@CF00103                                    0247
         L     @12,CVTPTR                                          0247
         L     @12,CVTZDTAB(,@12)                                  0247
         ALR   WORKREG,@12                                         0247
*       RESPECIFY                                                  0248
*         DVCINDEX BASED(WORKREG);  /* ADDRESSABILITY ON DEVICE TABLE
*                                      INDEX                         */
*                                                                  0249
*       /*************************************************************/
*       /*                                                           */
*       /* FILL IN DEVICE TABLE TYPE ENTRIES                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0249
*       WORKREG=DVCINDEX+CVTZDTAB;  /* DEVICE TABLE ENTRY POINTER    */
         SLR   @11,@11                                             0249
         IC    @11,DVCINDEX(,WORKREG)                              0249
         ALR   @12,@11                                             0249
         LR    WORKREG,@12                                         0249
*       RESPECIFY                                                  0250
*         DVCT BASED(WORKREG);                                     0250
*                                                                  0250
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE MAXIMUM CYLINDERS AND TRACKS AND THE TRACK CAPACITY  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0251
*       WICCHHTR=DVCCHHTR;          /* MOVE THEM                     */
         MVC   WICCHHTR(6,WICBREG),DVCCHHTR(WORKREG)               0251
*       IF DVC2BOV=SET THEN                                        0252
         TM    DVC2BOV(WORKREG),B'00001000'                        0252
         BNO   @RF00252                                            0252
*         DO;                                                      0253
*                                                                  0253
*           /*********************************************************/
*           /*                                                       */
*           /* ZEUS 2 BYTE OVERHEADS                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0254
*           WICIGAP=DVCOVHD;        /* NORMAL GAP                    */
         LH    @12,DVCOVHD(,WORKREG)                               0254
         STH   @12,WICIGAP(,WICBREG)                               0254
*           WICLGAP=DVCOVHD;        /* LAST GAP                      */
         STH   @12,WICLGAP(,WICBREG)                               0255
*         END;                                                     0256
*       ELSE                                                       0257
*         DO;                                                      0257
*                                                                  0257
         B     @RC00252                                            0257
@RF00252 DS    0H                                                  0258
*           /*********************************************************/
*           /*                                                       */
*           /* NON-ZEUS - 1 BYTE OVERHEADS                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0258
*           WICIGP(2)=DVCOVNLB;     /* NORMAL GAP                    */
         IC    @12,DVCOVNLB(,WORKREG)                              0258
         STC   @12,WICIGP+1(,WICBREG)                              0258
*           WICLGP(2)=DVCOVLB;      /* LAST GAP                      */
         IC    @12,DVCOVLB(,WORKREG)                               0259
         STC   @12,WICLGP+1(,WICBREG)                              0259
*         END;                                                     0260
*       WICKYGP(2)=DVCOVNK;         /* KEYED RECORD OVERHEAD         */
*                                                                  0261
@RC00252 IC    @12,DVCOVNK(,WORKREG)                               0261
         STC   @12,WICKYGP+1(,WICBREG)                             0261
*       /*************************************************************/
*       /*                                                           */
*       /* FILL IN HIGH SECTOR VALUE IF RPS IS SUPPORTED             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0262
*       IF UCB2OPT3=SET THEN                                       0262
         TM    UCB2OPT3(R9),B'00010000'                            0262
         BNO   @RF00262                                            0262
*         WICSECT=DVCSECT;          /* HIGH SECTOR                   */
*                                                                  0263
         IC    @12,DVCSECT(,WORKREG)                               0263
         STC   @12,WICSECT(,WICBREG)                               0263
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TOLERANCE IF THERE IS ONE                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0264
*       IF DVCFTOL=SET THEN                                        0264
@RF00262 TM    DVCFTOL(WORKREG),B'00000001'                        0264
         BNO   @RF00264                                            0264
*         WICTOL=DVCTOL;            /* SET UP TOLERANCE              */
         LH    @12,DVCTOL(,WORKREG)                                0265
         STH   @12,WICTOL(,WICBREG)                                0265
*       RESPECIFY                                                  0266
*        (WORKREG) UNRSTD;                                         0266
@RF00264 DS    0H                                                  0267
*       RESPECIFY                                                  0267
*         DVCT BASED;                                              0267
*       WICDEVTP=UCBTBYT4;          /* DEVICE TYPE                   */
         IC    @12,UCBTBYT4(,R9)                                   0268
         STC   @12,WICDEVTP(,WICBREG)                              0268
*       WICPRT=RQEPRT;              /* KEY OF WICB                   */
         SLR   @12,@12                                             0269
         IC    @12,RQEPRT(,R10)                                    0269
         STC   @12,WICPRT(,WICBREG)                                0269
*                                                                  0270
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE THE WINDOW SIZE. - TRACK SIZE ROUNDED UP TO NEXT*/
*       /* PAGE SIZE                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0270
*       VDSWINSI=(((VDSTRKSI+LENGTH(VTRACK)+7+WICKEYGP-WICLGAP)+   0270
*           PAGESIZE-1)/PAGESIZE)*PAGESIZE;                        0270
*                                                                  0270
         LA    @14,38                                              0270
         AH    @14,VDSTRKSI(,R9)                                   0270
         AH    @14,WICKEYGP(,WICBREG)                              0270
         SH    @14,WICLGAP(,WICBREG)                               0270
         SL    @14,@CF03318                                        0270
         SRDA  @14,32                                              0270
         D     @14,@CF00066                                        0270
         SLA   @15,12                                              0270
         STH   @15,VDSWINSI(,R9)                                   0270
*       /*************************************************************/
*       /*                                                           */
*       /* ACQUIRE WINDOW IN USER KEY LSQA. HOLDS CURRENT TRACK FOR  */
*       /* EXCP INTERCEPT                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0271
*       DO;                         /* GETMAIN (RU) LV(VDSWINSI)   0271
*                                      SP(SP229) KEY(RQEPRT/16)    0271
*                                      BRANCH                        */
*         RESPECIFY                                                0272
*          (GPR01F,                                                0272
*           GPR03F,                                                0272
*           GPR00F) RESTRICTED;                                    0272
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0273
*         GPR03F=2;                 /* RU-TYPE GETMAIN               */
         LA    GPR03F,2                                            0274
*         GPR00F=VDSWINSI;          /* LENGTH REQUESTED              */
         LR    GPR00F,@15                                          0275
*         GPR03F=GPR03F×((SP229)*256);/* SP IN BYTE 2                */
         O     GPR03F,@CF03313                                     0276
*         GPR03F=GPR03F×((RQEPRT/16)*65536*16);/* KEY IN BYTE 1      */
         SRL   @12,4                                               0277
         SLA   @12,20                                              0277
         OR    GPR03F,@12                                          0277
*         CALL CVTCRMN;             /* BRANCH ENTRY POINT            */
         L     @12,CVTPTR                                          0278
         L     @15,CVTCRMN(,@12)                                   0278
         BALR  @14,@15                                             0278
*         RESPECIFY                                                0279
*          (GPR01F,                                                0279
*           GPR03F,                                                0279
*           GPR00F) UNRESTRICTED;                                  0279
*       END;                        /* GETMAIN (RU) LV(VDSWINSI)   0280
*                                      SP(SP229) KEY(RQEPRT/16)    0280
*                                      BRANCH                        */
*       VDSWINDW=R1;                /* CONNECT WINDOW TO VDSCB       */
         ST    R1,VDSWINDW(,R9)                                    0281
*                                                                  0282
*       /*************************************************************/
*       /*                                                           */
*       /* REESTABLISH REGISTERS                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0282
*       VDSCBREG=R9;                /* VDSCB                         */
         LR    VDSCBREG,R9                                         0282
*       RESPECIFY                                                  0283
*         R9 UNRSTD;                                               0283
*       DEBREG=RQEDEB;              /* DEB                           */
         L     DEBREG,RQEDEB(,R10)                                 0284
*       RESPECIFY                                                  0285
*         DEBBASIC BASED(DEBREG);                                  0285
*       DCBREG=DEBDCBAD;            /* DCB                           */
         L     DCBREG,DEBDCBAD(,DEBREG)                            0286
*       RESPECIFY                                                  0287
*         VDSCB BASED(VDSCBREG);                                   0287
*       RESPECIFY                                                  0288
*         UCBOB BASED(VDSCBREG);                                   0288
*                                                                  0289
*       /*************************************************************/
*       /*                                                           */
*       /* MARK THE UCBSEEK INVALID BECAUSE THERE IS NO CURRENT TRACK*/
*       /* - WINDOW WAS JUST ACQUIRED                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0289
*       VDSSEEKA(1)=FOXES;          /* INVALID EXTENT                */
         MVI   VDSSEEKA(VDSCBREG),X'FF'                            0289
*                                                                  0290
*       /*************************************************************/
*       /*                                                           */
*       /* VOPEN DATA SET - ALLOWS VBP TO CONNECT NEW WINDOW TO      */
*       /* DATASET AND TO ACQUIRE A DSPCT IF NECESSARY               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0290
*       VBPRWPRM=VBPRWPRM&&VBPRWPRM;/* CLEAR PARAMETER LIST  @ZA00121*/
         L     @12,VDSVBPPL(,VDSCBREG)                             0290
         XC    VBPRWPRM(40,@12),VBPRWPRM(@12)                      0290
*       VBPOHPTR=VDSDSPCT;          /* HEADER ADDRESS FOR VOPEN      */
         LA    @11,144                                             0291
         ALR   @11,@12                                             0291
         L     @09,VDSDSPCT(,VDSCBREG)                             0291
         ST    @09,VBPOHPTR(,@11)                                  0291
*       VBPOWIA=VDSWINDW;           /* WINDOW POINTER                */
         L     @09,VDSWINDW(,VDSCBREG)                             0292
         ST    @09,VBPOWIA(,@11)                                   0292
*       VBPOLEN=VDSWINSI/PAGESIZE;  /* LENGTH OF WINDOW IN PAGES     */
         LH    @09,VDSWINSI(,VDSCBREG)                             0293
         LR    @14,@09                                             0293
         SRDA  @14,32                                              0293
         D     @14,@CF00066                                        0293
         ST    @15,VBPOLEN(,@11)                                   0293
*       VBPODSSZ=VDSWINSI*VDSNMTRK; /* NUMBER OF BYTES IN THE DATA 0294
*                                      SET                   @Y025010*/
         MH    @09,VDSNMTRK(,VDSCBREG)                             0294
         ST    @09,VBPODSSZ(,@11)                                  0294
*       DO;                                                        0295
*         RFY                                                      0296
*           GPR01P RSTD;                                           0296
*         GPR01P=ADDR(VBPOPPRM);                                   0297
         LA    GPR01P,VBPOPPRM(,@12)                               0297
*         CALL VOPEN;               /* ENTER OPEN ROUTINE            */
         L     @12,CVTPTR                                          0298
         L     @12,CVTPVBP(,@12)                                   0298
         L     @15,VBPMOD(,@12)                                    0298
         BALR  @14,@15                                             0298
*         RFY                                                      0299
*           GPR01P UNRSTD;                                         0299
*       END;                                                       0300
*       VDSDSPCT=VBPOHPTR;          /* SET UP DSPCT ADDRESSABILITY   */
*                                                                  0301
         L     @12,VDSVBPPL(,VDSCBREG)                             0301
         LA    @11,144                                             0301
         ALR   @11,@12                                             0301
         L     @09,VBPOHPTR(,@11)                                  0301
         ST    @09,VDSDSPCT(,VDSCBREG)                             0301
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE VREAD AND VWRITE PARAMETER LIST FOR THE TRACK  */
*       /* MANAGER                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0302
*       VBPRWPRM=VBPRWPRM&&VBPRWPRM;/* CLEAR PARAMETER LIST          */
         XC    VBPRWPRM(40,@12),VBPRWPRM(@12)                      0302
*       BUFCDSPC=VDSDSPCT;          /* HOOK PARAMETER LIST TO DSPCT  */
         ST    @09,BUFCDSPC(,@11)                                  0303
*       BUFCBAD=VDSWINDW;           /* HOOK PARAMETER LIST TO WINDOW */
         L     @12,VDSWINDW(,VDSCBREG)                             0304
         ST    @12,BUFCBAD(,@11)                                   0304
*       RESPECIFY                                                  0305
*         RQE BASED(RQEREG);                                       0305
*       RQEREG=R10;                 /* RQE                           */
         LR    RQEREG,R10                                          0306
*       RESPECIFY                                                  0307
*         R10 UNRSTD;                                              0307
*     END;                          /* END OF VOPEN AND ACQUIRE WICB
*                                                            @ZA00121*/
*                                                                  0309
*/********************************************************************/
*/*                                                                  */
*/* FUNCTION - CONTROLS IOS/USER/DEVICE SIMULATION OF CHANNEL        */
*/*      PROGRAM EXECUTION.                                          */
*/*                                                                  */
*/* INPUT - REGISTERS AT INPUT                                       */
*/*      1  - RQE                                                    */
*/*      2  - IOB                                                    */
*/*      3  - DEB                                                    */
*/*      4  - DCB                                                    */
*/*      6  - WICB                                                   */
*/*      7  - VDSCB/UCB                                              */
*/*     13  - SAVE AREA                                              */
*/*                                                                  */
*/* OUTPUT - REGISTERS AT OUTPUT                                     */
*/*      1,5,13,14 - SAME AS AT ENTRY TO MODULE                      */
*/*                                                                  */
*/* EXTERNAL REFERENCES                                              */
*/*       IDDWITRM - SIMULATE CHANNEL AND DEVICE                     */
*/*       USER APPENDAGES - COMPATABILITY WITH CURRENT IOS/USER      */
*/*          INTERFACES.                                             */
*/*       IEASMFEX - RECORD INFORMATION ABOUT PCI AND REEXCPS.       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0309
*   RESPECIFY                                                      0309
*    (R9,                                                          0309
*     R10,                                                         0309
*     R11,                                                         0309
*     R12) RSTD;                                                   0309
*                                                                  0309
@RF00204 DS    0H                                                  0310
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE USER SPECIFIED IT THE PAGEFIX APPENDAGE MUST BE ENTERED*/
*   /* BEFORE ANY I/O IS SIMULATED FOR COMPATABILITY REASONS. NO     */
*   /* PAGES WILL BE FIXED                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0310
*   IF DEBPGFX=SET THEN                                            0310
         L     @05,DEBAPPAD(,DEBREG)                               0310
         TM    DEBPGFX(@05),B'10000000'                            0310
         BNO   @RF00310                                            0310
*     DO;                           /* INVOKE USER PAGE FIX APPENDAGE*/
*       R10=ADDR(VBPPL);            /* PSUEDO PAGE FIX LIST          */
         L     R10,VDSVBPPL(,VDSCBREG)                             0312
*       R11=0;                      /* NO ENTRIES IN LIST            */
*                                                                  0313
         SLR   R11,R11                                             0313
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO PGFX APPENDAGE                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0314
*       SAVERG=RQENRQE;             /* RESTORE SAVE AREA POINTER     */
         L     SAVERG,RQENRQE(,RQEREG)                             0314
*       RESPECIFY                                                  0315
*        (R9,                                                      0315
*         R10,                                                     0315
*         R11,                                                     0315
*         R12,                                                     0315
*         R15) RSTD;                                               0315
*       R15=DEBSIOA;                /* ROUTINE ADDRESS               */
         L     R15,DEBSIOA(,@05)                                   0316
*       GEN;                                                       0317
         BAL   R14,PGFX4(R15)           GO TO ROUTINE
*       RESPECIFY                                                  0318
*        (R9,                                                      0318
*         R10,                                                     0318
*         R11,                                                     0318
*         R12,                                                     0318
*         R15) UNRSTD;                                             0318
*     END;                                                         0319
*                                                                  0319
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET IOB FLAGS                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*   IOBERRTN=RESET;                 /* ERP IN CONTROL SWITCH         */
@RF00310 DS    0H                                                  0321
*   IOBIOERR=RESET;                 /* EXPECTED ERROR SWITCH         */
         NI    IOBERRTN(IOBREG),B'11011011'                        0321
*STARTCPX:                                                         0322
*                                                                  0322
*   /*****************************************************************/
*   /*                                                               */
*   /* NEW CP OR RE-EXCP                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*   WICSEEKA=IOBSEEK;               /* STARTING SEEK FOR EXCP OR   0322
*                                      RE-EXCP                       */
*                                                                  0322
STARTCPX MVC   WICSEEKA(8,WICBREG),IOBSEEK(IOBREG)                 0322
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THIS IS A RELATED REQUEST AND IF THE DCB IOS FLAG DCBIFLGS */
*   /* INDICATES PERMANENT ERROR THEN                        @YM03854*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0323
*   IF IOBUNREL=RESET&DCBIFEC=IOSCMPLF THEN                        0323
         TM    IOBUNREL(IOBREG),B'00000010'                        0323
         BNZ   @RF00323                                            0323
         L     @12,DEBDCBAD(,DEBREG)                               0323
         TM    DCBIFEC+40(@12),B'11000000'                         0323
         BNO   @RF00323                                            0323
*     DO;                           /*                       @YM03854*/
*       IOBECBCC=PURGREQ;           /* SET COMPLETION CODE = X-48 IN
*                                      IOBECBCC                      */
         MVI   IOBECBCC(IOBREG),X'48'                              0325
*       GO TO AEAPP2ND;             /* GO TO ABNORMAL APPENDAGE    0326
*                                                            @YM03854*/
         B     AEAPP2ND                                            0326
*     END;                          /*                       @YM03854*/
*STARTERP:                                                         0328
*                                                                  0328
*   /*****************************************************************/
*   /*                                                               */
*   /* ERP RESTART POINT                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0328
*   IOBECBCC=NORMEND;               /* ASSUME NORMAL COMPLETION      */
@RF00323 DS    0H                                                  0328
STARTERP MVI   IOBECBCC(IOBREG),X'7F'                              0328
*                                                                  0329
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR EXTENT VIOLATION. GO TO EOE APPENDAGE IF BAD SEEK    */
*   /* FIELD OTHERWISE CONTINUE.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0329
*   RFY                                                            0329
*     DEBDASD BASED(IOBM*(LENGTH(DEBDASD))+LENGTH(DEBBASIC)-LENGTH(
*         DEBBASND)+ADDR(DEBBASIC));/* POINTER TO DA EXTENT  @YM01169*/
*   WICFMASK=DEBDVMOD;              /* FILE MASK             @YM05961*/
         SLR   @12,@12                                             0330
         IC    @12,IOBM(,IOBREG)                                   0330
         SLA   @12,4                                               0330
         SL    @12,@CF03320                                        0330
         ALR   @12,DEBREG                                          0330
         IC    @09,DEBDVMOD(,@12)                                  0330
         STC   @09,WICFMASK(,WICBREG)                              0330
*   DO WHILE(WICSKACH>DEBHIGH)×(WICSKBCH<DEBLOW)×((WICSKAM^=ZERO)&(
*         WICSKAM>=DEBNMEXT));      /*                       @YM03839*/
*                                                                  0331
         B     @DE00331                                            0331
@DL00331 DS    0H                                                  0332
*     /***************************************************************/
*     /*                                                             */
*     /* PERFORM FOR BAD SEEK ADDRESS LINK TO EOE APPENDAGE          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0332
*     SAVERG=RQENRQE;               /* RESTORE SAVE AREA POINTER     */
         L     SAVERG,RQENRQE(,RQEREG)                             0332
*     RESPECIFY                                                    0333
*      (R9,                                                        0333
*       R10,                                                       0333
*       R11,                                                       0333
*       R12) RSTD;                                                 0333
*     CALL EOEAPPX;                 /* LINK TO EOE APPENDAGE         */
         L     @05,DEBAPPAD(,DEBREG)                               0334
         L     @15,DEBEOEA(,@05)                                   0334
         BALR  @14,@15                                             0334
*     RESPECIFY                                                    0335
*      (R9,                                                        0335
*       R10,                                                       0335
*       R11,                                                       0335
*       R12) UNRSTD;                                               0335
*     BC(15,EOEPOST);               /* +0 RETURN GO TO AE APPENDAGE
*                                      NEXT                          */
         BC    15,EOEPOST                                          0336
*EOE4:                                                             0337
*     BC(15,POSTIOS);               /* +4 RETURN RETURN TO IOS TO  0337
*                                      POST IOB                      */
EOE4     BC    15,POSTIOS                                          0337
*EOE8:                              /* +8 RETURN EXTENT CHECK NEW  0338
*                                      SEEK FIELD                    */
*   END;                                                           0338
EOE8     DS    0H                                                  0338
@DE00331 SLR   @12,@12                                             0338
         IC    @12,IOBM(,IOBREG)                                   0338
         SLA   @12,4                                               0338
         SL    @12,@CF03320                                        0338
         ALR   @12,DEBREG                                          0338
         CLC   WICSKACH(4,WICBREG),DEBHIGH(@12)                    0338
         BH    @DL00331                                            0338
         CLC   WICSKBCH(6,WICBREG),DEBLOW(@12)                     0338
         BL    @DL00331                                            0338
         CLI   WICSKAM(WICBREG),0                                  0338
         BE    @DC00331                                            0338
         CLC   WICSKAM(1,WICBREG),DEBNMEXT(DEBREG)                 0338
         BNL   @DL00331                                            0338
@DC00331 DS    0H                                                  0339
*                                                                  0339
*   /*****************************************************************/
*   /*                                                               */
*   /* VALID SEEK FIELD, GO TO USER SUPPLIED SIO MODULE UNLESS ERP   */
*   /* RESTART                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0339
*   IF IOBERRTN=SET                 /* CHECK FOR ERP CONTROL         */
*     THEN                                                         0339
         TM    IOBERRTN(IOBREG),B'00100000'                        0339
         BNO   @RF00339                                            0339
*     IOBERRTN=RESET;               /* DON'T GO TO SIO APP RESET   0340
*                                      ERP'S                         */
         NI    IOBERRTN(IOBREG),B'11011111'                        0340
*   ELSE                                                           0341
*     DO;                           /* NOT ERP'S - GO TO USER SIO  0341
*                                      ROUTINE                       */
*                                                                  0341
         B     @RC00339                                            0341
@RF00339 DS    0H                                                  0342
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO SIO APPENDAGE                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0342
*       SAVERG=RQENRQE;             /* RESTORE SAVE AREA POINTER     */
         L     SAVERG,RQENRQE(,RQEREG)                             0342
*       RESPECIFY                                                  0343
*        (R9,                                                      0343
*         R10,                                                     0343
*         R11,                                                     0343
*         R12) RSTD;                                               0343
*       CALL SIOAPPX;               /* LINK TO SIO APPENDAGE         */
         L     @05,DEBAPPAD(,DEBREG)                               0344
         L     @15,DEBSIOA(,@05)                                   0344
         BALR  @14,@15                                             0344
*       RESPECIFY                                                  0345
*        (R9,                                                      0345
*         R10,                                                     0345
*         R11,                                                     0345
*         R12) UNRSTD;                                             0345
*       BC(15,SIO0A);               /* +0 -RETURN - CONTINUE         */
         BC    15,SIO0A                                            0346
*SIO4:                                                             0347
*       BC(15,SKIPIOS);             /* +4 -RETURN - SKIP POSTING     */
SIO4     BC    15,SKIPIOS                                          0347
*SIO0A:                                                            0348
*       WICSTART=IOBSTART;          /* SET UP CP STARTING POINT      */
SIO0A    L     @12,IOBSTART(,IOBREG)                               0348
         ST    @12,WICSTART(,WICBREG)                              0348
*     END;                                                         0349
*WITRM:                                                            0350
*                                                                  0350
*   /*****************************************************************/
*   /*                                                               */
*   /* SIMULATE CHANNEL - DEVICE OPERATION BY INVOKING THE TRACK     */
*   /* MANAGER/CHANNEL PROGRAM INTERPRETOR. THE IOB WILL BE POSTED   */
*   /* AND ALL ACTIONS ASSOCIATED WITH THE CHANNEL PROGRAM WILL HAVE */
*   /* BEEN COMPLETED WHEN CONTROL IS RETURNED.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0350
*   SAVERG=RQENRQE;                 /* RESTORE SAVE AREA           0350
*                                      ADDRESSABILITY                */
@RC00339 DS    0H                                                  0350
WITRM    L     SAVERG,RQENRQE(,RQEREG)                             0350
*   WICAUDIT='TRM';                 /* TRACK MANAGER IN CONTROL      */
         MVC   WICAUDIT(3,WICBREG),@CC03271                        0351
*   CALL IDDWITRM;                  /* LINK TO TRACK MANAGER         */
         L     @15,@CV00548                                        0352
         BALR  @14,@15                                             0352
*   WICAUDIT='APP';                 /* APPENDAGE INTERFACE HANDLER IN
*                                      CONTROL                       */
*                                                                  0353
         MVC   WICAUDIT(3,WICBREG),@CC03242                        0353
*   /*****************************************************************/
*   /*                                                               */
*   /* GO TO PCI APPENDAGE IF THIS IS A PCI INTERRUPT.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0354
*   IF PCI=SET THEN                                                0354
         TM    PCI(IOBREG),B'10000000'                             0354
         BNO   @RF00354                                            0354
*     DO;                                                          0355
*                                                                  0355
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO PCI APPENDAGE                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0356
*       SAVERG=RQENRQE;             /* RESTORE SAVE AREA POINTER     */
         L     SAVERG,RQENRQE(,RQEREG)                             0356
*       RESPECIFY                                                  0357
*        (R9,                                                      0357
*         R10,                                                     0357
*         R11,                                                     0357
*         R12) RSTD;                                               0357
*       CALL PCIAPPX;               /* LINK TO PCI APPENDAGE         */
         L     @05,DEBAPPAD(,DEBREG)                               0358
         L     @15,DEBPCIA(,@05)                                   0358
         BALR  @14,@15                                             0358
*       RESPECIFY                                                  0359
*        (R9,                                                      0359
*         R10,                                                     0359
*         R11,                                                     0359
*         R12) UNRSTD;                                             0359
*                                                                  0359
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO SMF ROUTINE                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0360
*       IF RQESMFRQ='1'B THEN                                      0360
         TM    RQESMFRQ(RQEREG),B'00000001'                        0360
         BO    @RT00360                                            0360
*         GO TO COUNT;              /* INCREMENT SMF COUNTER @ZA18542*/
*       GEN;                                                       0362
       L R9,RQETCB(,RQEREG) /* GET TCB ADDRESS               @ZA09129*/
       L R9,0(R9)  /* GET RB  ADDRESS                        @ZA09129*/
       TM 10(R9),X'C0' /* IS THIS RB AN SVRB                 @ZA09129*/
       BZ COUNT /* NO  IT IS A PRB - COUNT EXCP'S            @ZA09129*/
       BM SMFEND /*NO  IT IS AN IRB/SIRB - EXIT              @ZA09129*/
*       IF RQEPRT>=USERKEY THEN     /* CALL SMF IF USER KEY  @ZA04728*/
         CLI   RQEPRT(RQEREG),X'80'                                0363
         BL    @RF00363                                            0363
*         DO;                       /*                       @ZA04728*/
*           RESPECIFY                                              0365
*            (R0,                                                  0365
*             R1,                                                  0365
*             R9,                                                  0365
*             R10,                                                 0365
*             R11,                                                 0365
*             R12,                                                 0365
*             R15) RSTD;                                           0365
*COUNT:                             /*                       @ZA09129*/
*           R0=RQETCB;              /* PASS TCB ADDR FOR SMF         */
COUNT    L     R0,RQETCB(,RQEREG)                                  0366
*           R9=R1;                  /* SAVE RQE ADDRESS ACCROSS CALL
*                                                            @ZA04728*/
         LR    R9,R1                                               0367
*           R1=ONE;                 /* SET INCREMENT TO ONE  @ZA04728*/
         LA    R1,1                                                0368
*           CALL IEASMFEX;          /* CALL SMF EXCP COUNT ROUTINE   */
         L     @05,CVTPTR                                          0369
         L     @15,CVTSMFEX(,@05)                                  0369
         BALR  @14,@15                                             0369
*           R1=R9;                  /* RESTORE RQE ADDRESS   @ZA04728*/
         LR    R1,R9                                               0370
*           RFY                                                    0371
*            (R0,                                                  0371
*             R1,                                                  0371
*             R9,                                                  0371
*             R10,                                                 0371
*             R11,                                                 0371
*             R12,                                                 0371
*             R15) UNRSTD;                                         0371
*         END;                      /*                       @ZA04728*/
*SMFEND:                            /*                       @ZA09129*/
*       SAVERG=RQENRQE;             /* RESTORE SAVE AREA POINTER     */
@RF00363 DS    0H                                                  0373
SMFEND   L     SAVERG,RQENRQE(,RQEREG)                             0373
*       GO TO WITRM;                /* CONTROL IS RETURNED TO THE  0374
*                                      TRACK MANAGER TO COMPLETE THIS
*                                      CHANNEL PROGRAM               */
         B     WITRM                                               0374
*     END;                                                         0375
*                                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ERPS RESTARTED THIS CHANNEL PROGRAM THEN THE ADDRESS IN    */
*   /* CSWEND WILL HAVE TO BE RESET IF IT POINTS TO AN ERP CCW       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0376
*   IF WICERPOV=SET THEN                                           0376
@RF00354 TM    WICERPOV(WICBREG),B'10000000'                       0376
         BNO   @RF00376                                            0376
*     DO;                                                          0377
*                                                                  0377
*       /*************************************************************/
*       /*                                                           */
*       /* ERP RESTART OF OVERFLOW CP CORRECT CSW ADDRESS IF         */
*       /* NECESSARY                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0378
*       WICERPOV=RESET;             /* RESET OVERFLOW INDICATOR      */
*                                                                  0378
         NI    WICERPOV(WICBREG),B'01111111'                       0378
*       /*************************************************************/
*       /*                                                           */
*       /* TEST IF ERP CCW IN ERROR                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0379
*       IF CSWEND=ADDR(WICCCW2) THEN                               0379
         LA    @12,WICCCW2(,WICBREG)                               0379
         L     @09,CSWEND-1(,IOBREG)                               0379
         LA    @09,0(,@09)                                         0379
         CR    @12,@09                                             0379
         BNE   @RF00379                                            0379
*         CSWEND=WICERPSV;          /* POINT TO RESTARTED CCW        */
         MVC   CSWEND(3,IOBREG),WICERPSV(WICBREG)                  0380
*     END;                                                         0381
@RF00379 DS    0H                                                  0382
*                                                                  0382
*   /*****************************************************************/
*   /*                                                               */
*   /* POST CP PROCESSING - DETERMINES HOW CP TERMINATED AND ENTERS  */
*   /* CE AND/OR AE APPENDAGES. TEST FOR SERIOUS ERROR - AE APPENDAGE*/
*   /* WILL HAVE TO BE ENTERED.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0382
*   IF UNITCHK=RESET&PROGCHK=RESET&PROTCHK=RESET&CHANLCHK=RESET THEN
@RF00376 TM    UNITCHK(IOBREG),B'00000010'                         0382
         BNZ   @RF00382                                            0382
         TM    PROGCHK(IOBREG),B'00110100'                         0382
         BNZ   @RF00382                                            0382
*     DO;                                                          0383
*                                                                  0383
*       /*************************************************************/
*       /*                                                           */
*       /* MARK UNEXPECTED ERROR IF INCORRECT LENGTH OR UNIT         */
*       /* EXCEPTION                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0384
*       IF UNITEXC=SET×INCLEN=SET THEN                             0384
         TM    UNITEXC(IOBREG),B'00000001'                         0384
         BO    @RT00384                                            0384
         TM    INCLEN(IOBREG),B'01000000'                          0384
         BNO   @RF00384                                            0384
@RT00384 DS    0H                                                  0385
*         IOBIOERR=SET;             /* MARK UNEXPECTED ERROR         */
         OI    IOBIOERR(IOBREG),B'00000100'                        0385
*                                                                  0386
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO CE APPENDAGE                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0386
*       SAVERG=RQENRQE;             /* RESTORE SAVE AREA POINTER     */
@RF00384 L     SAVERG,RQENRQE(,RQEREG)                             0386
*       RESPECIFY                                                  0387
*        (R9,                                                      0387
*         R10,                                                     0387
*         R11,                                                     0387
*         R12) RSTD;                                               0387
*       CALL CEAPPX;                /* LINK TO CE APPENDAGE          */
         L     @05,DEBAPPAD(,DEBREG)                               0388
         L     @15,DEBCEA(,@05)                                    0388
         BALR  @14,@15                                             0388
*       RESPECIFY                                                  0389
*        (R9,                                                      0389
*         R10,                                                     0389
*         R11,                                                     0389
*         R12) UNRSTD;                                             0389
*       BC(15,CE0A);                /* +0 RETURN - CONTINUE          */
         BC    15,CE0A                                             0390
*CE4:                                                              0391
*       BC(15,SKIPIOS);             /* +4 RETURN - SKIP POSTING IOB  */
CE4      BC    15,SKIPIOS                                          0391
*CE8:                                                              0392
*       BC(15,STARTCP);             /* +8 RETURN - REEXCP NEW CHANNEL
*                                      PROGRAM                       */
CE8      BC    15,STARTCP                                          0392
*CE12:                                                             0393
*       BC(15,BYPASIOS);            /* +12 RETURN BYPASS POSTING IOB */
CE12     BC    15,BYPASIOS                                         0393
*CE16:                                                             0394
*       BC(15,STARTCP);             /* +16 RETURN-REEXCP NEW CHANNEL
*                                      PROGRAM BUT PUT THIS REQUEST
*                                      AT THE TOP OF THE CHAIN     0394
*                                      INSTEAD OF THE BOTTOM @YM03829*/
*                                                                  0394
CE16     BC    15,STARTCP                                          0394
*       /*************************************************************/
*       /*                                                           */
*       /* +0 RETURN - TEST EXPECTED ERROR FLAG IF IT HASN'T BEEN    */
*       /* RESET THE THE AE APPENDAGE MUST BE ENTERED WITH A         */
*       /* PERMANENT ERROR                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0395
*CE0A:                                                             0395
*       IF IOBIOERR^=SET THEN                                      0395
CE0A     TM    IOBIOERR(IOBREG),B'00000100'                        0395
         BNO   @RT00395                                            0395
*         GO TO POSTIOS;            /* POST IOB COMPLETE             */
*       IOBECBCC=ERRPOST;           /* POST ERROR                    */
         MVI   IOBECBCC(IOBREG),X'41'                              0397
*     END;                                                         0398
*   ELSE                                                           0399
*     DO;                                                          0399
*                                                                  0399
         B     @RC00382                                            0399
@RF00382 DS    0H                                                  0400
*       /*************************************************************/
*       /*                                                           */
*       /* CP ENDED ABNORMALLY INVOKE USER AE APPENDAGE, ERP'S & USER*/
*       /* AE APPENDAGE AGAIN.                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0400
*AEPOST:                            /* EOE ENTRY                     */
*       IOBERRTN=SET;               /* ASSUME ERROR IS CORRECTABLE 0400
*                                      USER AE MAY RESET             */
*                                                                  0400
AEPOST   OI    IOBERRTN(IOBREG),B'00100000'                        0400
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO AE APPENDAGE                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0401
*       SAVERG=RQENRQE;             /* RESTORE SAVE AREA POINTER     */
         L     SAVERG,RQENRQE(,RQEREG)                             0401
*       RESPECIFY                                                  0402
*        (R9,                                                      0402
*         R10,                                                     0402
*         R11,                                                     0402
*         R12) RSTD;                                               0402
*       CALL AEAPPX;                /* LINK TO AE APPENDAGE          */
         L     @05,DEBAPPAD(,DEBREG)                               0403
         L     @15,DEBXCEA(,@05)                                   0403
         BALR  @14,@15                                             0403
*       RESPECIFY                                                  0404
*        (R9,                                                      0404
*         R10,                                                     0404
*         R11,                                                     0404
*         R12) UNRSTD;                                             0404
*       BC(15,AE0A);                /* +0 RETURN - CONTINUE          */
         BC    15,AE0A                                             0405
*AE4:                                                              0406
*       BC(15,SKIPIOS);             /* +4 RETURN - SKIP POSTING IOB  */
AE4      BC    15,SKIPIOS                                          0406
*AE8:                                                              0407
*       BC(15,STARTCP);             /* +8 RETURN - REEXCP NEW CHANNEL
*                                      PROGRAM                       */
AE8      BC    15,STARTCP                                          0407
*AE12:                                                             0408
*       BC(15,BYPASIOS);            /* +12 RETURN BYPASS POSTING IOB */
AE12     BC    15,BYPASIOS                                         0408
*AE16:                                                             0409
*       BC(15,STARTCP);             /* +16 RETURN-REEXCP NEW CHANNEL
*                                      PROGRAM BUT PUT THIS REQUEST
*                                      AT THE TOP OF THE CHAIN     0409
*                                      INSTEAD OF THE BOTTOM @YM03829*/
AE16     BC    15,STARTCP                                          0409
*AE0A:                                                             0410
*       IOBECBCC=ERRPOST;           /* PERMANENT ERROR               */
AE0A     MVI   IOBECBCC(IOBREG),X'41'                              0410
*                                                                  0411
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK IF AE END RESET RECOVERY SW                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0411
*       IF IOBERRTN^=SET THEN                                      0411
         TM    IOBERRTN(IOBREG),B'00100000'                        0411
         BNO   @RT00411                                            0411
*         GO TO POSTIOS;            /* POST IOB COMPLETE             */
*       IF DCBDSGPS=SET&            /* IF DSORG IS PHYS SEQ  @ZA12180*/
*           DCBRECL(1:2)='10'B&     /* & RECFM IS FIXED      @ZA12180*/
*           DCBRECSB=SET&           /* & STANDARD BLOCKS     @ZA12180*/
*           DCBCNEVA=SET            /* & EOV HAS BEEN SET    @ZA12180*/
*         THEN                                                     0413
         L     @12,DEBDCBAD(,DEBREG)                               0413
         TM    DCBDSGPS+16(@12),B'01000000'                        0413
         BNO   @RF00413                                            0413
         LA    @09,28                                              0413
         ALR   @09,@12                                             0413
         TM    DCBRECL(@09),B'10000000'                            0413
         BNO   @RF00413                                            0413
         TM    DCBRECL(@09),B'01000000'                            0413
         BNZ   @RF00413                                            0413
         TM    DCBRECSB(@09),B'00001000'                           0413
         BNO   @RF00413                                            0413
         TM    DCBCNEVA+52(@12),B'00010000'                        0413
         BO    @RT00413                                            0413
*         GO TO POSTIOS;            /* POST IOB COMPLETE     @ZA12180*/
*                                                                  0414
*       /*************************************************************/
*       /*                                                           */
*       /* RECOVERY DESIRED CHECK IF POSSIBLE                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0415
*       IF WICERDSP>RECOVER&PROGCHK^=SET THEN                      0415
@RF00413 LH    @12,WICERDSP(,WICBREG)                              0415
         C     @12,@CF00074                                        0415
         BNH   @RF00415                                            0415
         TM    PROGCHK(IOBREG),B'00100000'                         0415
         BO    @RF00415                                            0415
*         DO;                                                      0416
*                                                                  0416
*/********************************************************************/
*/*                                                                  */
*/*   RECOVERABLE SITUATIONS                                         */
*/*                                                                  */
*/*      1. SEEK, FILE MASK VIOLATION                                */
*/*         RESTART CP ON DESIRED TRACK WITH NEXT CCW UNLESS IT      */
*/*         IS A TIC.                                                */
*/*                                                                  */
*/*      2. MT READ/SEARCH, FM VIOLATION OR END OF CYLINDER          */
*/*         RESTART MT READ/SEARCH ON NEXT TRACK.                    */
*/*                                                                  */
*/*      3. OVERFLOW INCOMPLETE, FM VIOLATION OR END OF CYLINDER     */
*/*         CONSTRUCT A CCW PREFIX TO FINISH OPERATION - CHAIN TO    */
*/*         REMAINDER OF CHANNEL PROGRAM.                            */
*/*         IF IT IS A READ AND RESIDUAL = 0 AND SILI BIT ISN'T      */
*/*         ON THEN RECOVERY ISN'T POSSIBLE                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0417
*           RESPECIFY                                              0417
*            (WORKREG) RSTD;                                       0417
*           WORKREG=CSWEND-LENGTH(WICCCW1);/* POINTER TO FAILING CCW */
*                                                                  0418
         L     @12,CSWEND-1(,IOBREG)                               0418
         LA    @12,0(,@12)                                         0418
         LR    WORKREG,@12                                         0418
         SL    WORKREG,@CF00037                                    0418
*           /*********************************************************/
*           /*                                                       */
*           /* FILE MASK VIOLATIONS MUST BE RESTARTED                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0419
*           IF IOBS1B7^=SET THEN                                   0419
*                                                                  0419
         TM    IOBS1B7(IOBREG),B'00000001'                         0419
         BO    @RF00419                                            0419
*             /*******************************************************/
*             /*                                                     */
*             /* TEST FOR SEEK OP CODE                               */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0420
*             IF WRBIT=SET&RDBIT=SET THEN                          0420
         TM    WRBIT(WICBREG),B'00000011'                          0420
         BNO   @RF00420                                            0420
*               DO;                                                0421
*                                                                  0421
*                 /***************************************************/
*                 /*                                                 */
*                 /* FAILING CCW WAS A SEEK RESTART CHANNEL PROGRAM  */
*                 /* ON NEXT CCW AND POSITION TO NEW TRACK           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0422
*                 WICSTART=CSWEND;                                 0422
*                                                                  0422
         ST    @12,WICSTART(,WICBREG)                              0422
*                 /***************************************************/
*                 /*                                                 */
*                 /* CP CAN'T START WITH A TIC                       */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0423
*                 IF WICSTART->TICBITS=TIC THEN                    0423
         TM    TICBITS(@12),B'00001000'                            0423
         BNO   @RF00423                                            0423
         TM    TICBITS(@12),B'00000111'                            0423
         BNZ   @RF00423                                            0423
*                   WICSTART=WICSTART->CCWADDR;/* REMOVE EXTRA TIC   */
         L     @12,CCWADDR-1(,@12)                                 0424
         LA    @12,0(,@12)                                         0424
         ST    @12,WICSTART(,WICBREG)                              0424
*               END;                                               0425
*             ELSE                                                 0426
*                                                                  0426
*               /*****************************************************/
*               /*                                                   */
*               /* FAILING CCW WAS A MT READ OR SEARCH CONTINUE CP   */
*               /* WITH FAILING CCW ON NEXT TRACK                    */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0426
*               WICSTART=WORKREG;                                  0426
         B     @RC00420                                            0426
@RF00420 ST    WORKREG,WICSTART(,WICBREG)                          0426
*           ELSE                                                   0427
*                                                                  0427
*             /*******************************************************/
*             /*                                                     */
*             /* OVERFLOW INCOMPLETE CONSTRUCT A NEW CCW PREFIX TO   */
*             /* FINISH THE CCW FUNCTION                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0427
*             DO;                                                  0427
         B     @RC00419                                            0427
@RF00419 DS    0H                                                  0428
*               WICSTART=ADDR(WICRSTCP);/* ERP CCW PREFIX            */
         LA    @12,WICRSTCP(,WICBREG)                              0428
         ST    @12,WICSTART(,WICBREG)                              0428
*               CCW1FLAG=WORKREG->CCWFLAGS;/* USE SAME CCW FLAGS     */
*                                                                  0429
         IC    @12,CCWFLAGS(,WORKREG)                              0429
         STC   @12,CCW1FLAG(,WICBREG)                              0429
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP CCW ADDRESS AND LENGTH                     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0430
*               IF CSWCNT^=ZERO THEN                               0430
         LH    @12,CSWCNT(,IOBREG)                                 0430
         LTR   @12,@12                                             0430
         BZ    @RF00430                                            0430
*                 DO;                                              0431
*                                                                  0431
*                   /*************************************************/
*                   /*                                               */
*                   /* RESTART IN MIDDLE OF CCW USING SAME DATA      */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0432
*                   CCW1LEN=CSWCNT; /* LENGTH(REMAINDER)             */
*                                                                  0432
         STH   @12,CCW1LEN(,WICBREG)                               0432
*                   /*************************************************/
*                   /*                                               */
*                   /* A(REMAINDER)                                  */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0433
*                   CCW1ADDR=WORKREG->CCWADDR+WORKREG->CCWLEN-CSWCNT;
         L     @09,CCWADDR-1(,WORKREG)                             0433
         LA    @09,0(,@09)                                         0433
         LH    @00,CCWLEN(,WORKREG)                                0433
         N     @00,@CF03331                                        0433
         ALR   @09,@00                                             0433
         SLR   @09,@12                                             0433
         ST    @09,CCW1ADDR(,WICBREG)                              0433
*                 END;                                             0434
*               ELSE                                               0435
*                 DO;                                              0435
*                                                                  0435
         B     @RC00430                                            0435
@RF00430 DS    0H                                                  0436
*                   /*************************************************/
*                   /*                                               */
*                   /* NO RESTART FOR READS IF RESIDUAL=0 AND SILI   */
*                   /* BIT ISN'T SET                                 */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0436
*                   IF RDBIT=SET THEN                              0436
         TM    RDBIT(WICBREG),B'00000010'                          0436
         BNO   @RF00436                                            0436
*                     IF WORKREG->SILI=SET THEN/* READ CCW           */
         TM    SILI(WORKREG),B'00100000'                           0437
         BNO   @RF00437                                            0437
*                       CCW1SDT=SET;/* ALLOW CP TO CONTINUE BUT DON'T
*                                      TRANSFER DATA                 */
         OI    CCW1SDT(WICBREG),B'00010000'                        0438
*                     ELSE                                         0439
*                       GO TO AEAPP2ND;/* NO RECOVERY GO TO AE AGAIN */
*                                                                  0439
*                   /*************************************************/
*                   /*                                               */
*                   /* RESTART WITH ONE BYTE OF ZERO DATA TO FINISH  */
*                   /* PADDING THE RECORD.                           */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0440
*                   CCW1LEN=ONE;    /* ONE BYTE TO BE TRANSFERRED    */
@RF00436 MVC   CCW1LEN(2,WICBREG),@CH00042                         0440
*                   CCW1ADDR=ADDR(CCW1NULL);/* '00'X DATA            */
         LA    @12,CCW1NULL(,WICBREG)                              0441
         ST    @12,CCW1ADDR(,WICBREG)                              0441
*                 END;                                             0442
*                                                                  0443
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP OPCDE                                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0443
*               IF RDBIT=SET THEN                                  0443
@RC00430 TM    RDBIT(WICBREG),B'00000010'                          0443
         BNO   @RF00443                                            0443
*                 CCW1OP=RDDATA;    /* CONTINUE WITH READ            */
         MVI   CCW1OP(WICBREG),X'06'                               0444
*               ELSE                                               0445
*                 DO;                                              0445
         B     @RC00443                                            0445
@RF00443 DS    0H                                                  0446
*                   CCW1OP=WRDATA;  /* CONTINUE WITH WRITE           */
         MVI   CCW1OP(WICBREG),X'05'                               0446
*                   WICERPWR=SET;   /* SATISFY WRITE PREREQUISITES -
*                                      CPI WILL TEST AND RESET THIS
*                                      SWITCH                        */
         OI    WICERPWR(WICBREG),B'01000000'                       0447
*                 END;                                             0448
*               WICERPSV=CSWEND;    /* SAVE FOR POSSIBLE RESET OF  0449
*                                      CSWEND ADDRESS                */
*                                                                  0449
@RC00443 L     @12,CSWEND-1(,IOBREG)                               0449
         LA    @12,0(,@12)                                         0449
         STCM  @12,7,WICERPSV(WICBREG)                             0449
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP TIC ADDRESS                                */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0450
*               IF CSWEND->TICBITS=TIC THEN                        0450
         TM    TICBITS(@12),B'00001000'                            0450
         BNO   @RF00450                                            0450
         TM    TICBITS(@12),B'00000111'                            0450
         BNZ   @RF00450                                            0450
*                 CCW2ADDR=CSWEND->CCWADDR;/* TIC POINTS TO TIC SKIP
*                                      2ND TIC                       */
         L     @12,CCWADDR-1(,@12)                                 0451
         LA    @12,0(,@12)                                         0451
         ST    @12,CCW2ADDR(,WICBREG)                              0451
*               ELSE                                               0452
*                 CCW2ADDR=CSWEND;  /* POINT TO NEXT CCW             */
         B     @RC00450                                            0452
@RF00450 L     @12,CSWEND-1(,IOBREG)                               0452
         LA    @12,0(,@12)                                         0452
         ST    @12,CCW2ADDR(,WICBREG)                              0452
*               CCW2OP=OPTIC;       /* OPERATION = TIC               */
@RC00450 MVI   CCW2OP(WICBREG),X'08'                               0453
*               WICERPOV=SET;       /* ERP OVERFLOW RESTART          */
         OI    WICERPOV(WICBREG),B'10000000'                       0454
*             END;                                                 0455
*           GO TO STARTERP;         /* RESTART CP                    */
         B     STARTERP                                            0456
*         END;                                                     0457
*       RESPECIFY                                                  0458
*        (WORKREG) UNRSTD;                                         0458
@RF00415 DS    0H                                                  0459
*     END;                                                         0459
*AEAPP2ND:                                                         0460
*                                                                  0460
*   /*****************************************************************/
*   /*                                                               */
*   /* FINAL ENTRY TO AE APPENDAGE, NO RECOVERY IS POSSIBLE USER MAY */
*   /* POST SKIP, RE-EXCP OR BYPASS.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0460
*   IOBERRTN=RESET;                 /* RESET RECOVERY SW             */
@RC00382 DS    0H                                                  0460
AEAPP2ND DS    0H                                                  0461
*   IOBIOERR=RESET;                 /* UNEXPECTED ERROR IS PERMANENT */
*                                                                  0461
         NI    IOBERRTN(IOBREG),B'11011011'                        0461
*   /*****************************************************************/
*   /*                                                               */
*   /* LINK TO AE APPENDAGE                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0462
*   SAVERG=RQENRQE;                 /* RESTORE SAVE AREA POINTER     */
         L     SAVERG,RQENRQE(,RQEREG)                             0462
*   RESPECIFY                                                      0463
*    (R9,                                                          0463
*     R10,                                                         0463
*     R11,                                                         0463
*     R12) RSTD;                                                   0463
*   CALL AEBAPPX;                   /* LINK TO AE APPENDAGE          */
         L     @05,DEBAPPAD(,DEBREG)                               0464
         L     @15,DEBXCEA(,@05)                                   0464
         BALR  @14,@15                                             0464
*   RESPECIFY                                                      0465
*    (R9,                                                          0465
*     R10,                                                         0465
*     R11,                                                         0465
*     R12) UNRSTD;                                                 0465
*   BC(15,POSTIOS);                 /* +0 RETURN - CONTINUE  @YM03854*/
         BC    15,POSTIOS                                          0466
*AEB4:                                                             0467
*   BC(15,SKIPIOS);                 /* +4 RETURN - SKIP POSTING IOB  */
AEB4     BC    15,SKIPIOS                                          0467
*AEB8:                                                             0468
*   BC(15,STARTCP);                 /* +8 RETURN - REEXCP NEW CHANNEL
*                                      PROGRAM                       */
AEB8     BC    15,STARTCP                                          0468
*AEB12:                                                            0469
*   BC(15,BYPASIOS);                /* +12 RETURN BYPASS POSTING IOB */
AEB12    BC    15,BYPASIOS                                         0469
*AEB16:                                                            0470
*   BC(15,STARTCP);                 /* +16 RETURN-REEXCP NEW CHANNEL
*                                      PROGRAM BUT PUT THIS REQUEST
*                                      AT THE TOP OF THE CHAIN     0470
*                                      INSTEAD OF THE BOTTOM @YM03829*/
AEB16    BC    15,STARTCP                                          0470
*EOEPOST:                                                          0471
*                                                                  0471
*   /*****************************************************************/
*   /*                                                               */
*   /* POST IOB WITH AN EXTENT VIOLATION THEN ENTER AE APPENDAGE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0471
*   IOBECBCC=EXVIOL;                /* MARK ECB WITH EXTENT VIOLATION*/
EOEPOST  MVI   IOBECBCC(IOBREG),X'42'                              0471
*   GO TO AEAPP2ND;                 /* ENTER AE APPENDAGE            */
         B     AEAPP2ND                                            0472
*STARTCP:                                                          0473
*                                                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REQUESTED THAT A NEW CHANNEL PROGRAM BE RESTARTED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0473
*   IOBIOERR=RESET;                 /* RESET FOR REEXCP              */
STARTCP  DS    0H                                                  0474
*   IOBERRTN=RESET;                 /* RESET FOR REEXCP              */
*                                                                  0474
         NI    IOBIOERR(IOBREG),B'11011011'                        0474
*   /*****************************************************************/
*   /*                                                               */
*   /* REEXCP OF CP, GO TO SMF FOR COUNTING EXCPS                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0475
*   IF RQESMFRQ='1'B THEN                                          0475
         TM    RQESMFRQ(RQEREG),B'00000001'                        0475
         BO    @RT00475                                            0475
*     GO TO COUNT1;                 /* INCREMENT SMF COUNTER@ZA18542 */
*   GEN;                                                           0477
   L R9,RQETCB(,RQEREG)     /* GET TCB ADDRESS               @ZA09129*/
   L R9,0(R9)               /* GET RB ADDRESS                @ZA09129*/
   TM 10(R9),X'C0'          /* IS THIS RB AN SVRB            @ZA09129*/
   BZ COUNT1                /* NO, IT IS A PRB - COUNT EXCPS @ZA09129*/
   BM SMFEND1               /* NO, IT IS AN IRB/SIRB - EXIT  @ZA09129*/
*   IF RQEPRT>=USERKEY THEN         /* CALL SMF IF USER KEY  @ZA04728*/
         CLI   RQEPRT(RQEREG),X'80'                                0478
         BL    @RF00478                                            0478
*     DO;                           /*                       @ZA04728*/
*       RFY                                                        0480
*        (R0,                                                      0480
*         R1,                                                      0480
*         R9,                                                      0480
*         R10,                                                     0480
*         R11,                                                     0480
*         R12,                                                     0480
*         R15) RSTD;                                               0480
*COUNT1:                            /*                       @ZA09129*/
*       R0=RQETCB;                  /* PASS TCB ADDR TO SMF ROUTINE  */
COUNT1   L     R0,RQETCB(,RQEREG)                                  0481
*       R9=R1;                      /* SAVE RQE ADDRESS      @ZA04728*/
         LR    R9,R1                                               0482
*       R1=ONE;                     /* SET INCREMENT TO ONE  @ZA04728*/
         LA    R1,1                                                0483
*       CALL IEASMFEX;              /* GO TO SMF                     */
         L     @05,CVTPTR                                          0484
         L     @15,CVTSMFEX(,@05)                                  0484
         BALR  @14,@15                                             0484
*       R1=R9;                      /* RESTORE RQE ADDRESS   @ZA04728*/
         LR    R1,R9                                               0485
*       RFY                                                        0486
*        (R0,                                                      0486
*         R1,                                                      0486
*         R9,                                                      0486
*         R10,                                                     0486
*         R11,                                                     0486
*         R12,                                                     0486
*         R15) UNRSTD;                                             0486
*     END;                          /*                       @ZA04728*/
*SMFEND1:                           /*                       @ZA09129*/
*   SAVERG=RQENRQE;                 /* RESTORE SAVE AREA POINTER     */
@RF00478 DS    0H                                                  0488
SMFEND1  L     SAVERG,RQENRQE(,RQEREG)                             0488
*   GO TO STARTCPX;                 /* START NEW CP                  */
         B     STARTCPX                                            0489
*   RESPECIFY                                                      0490
*    (R14) RSTD;                                                   0490
*BYPASIOS:                                                         0491
*                                                                  0491
*   /*****************************************************************/
*   /*                                                               */
*   /* BYPASS FREEING RQE AND POSTING IOB                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0491
*   R14=IOSBYPAS;                   /* BYPASS - DISPLACEMENT = 8     */
BYPASIOS LA    R14,8                                               0491
*   GO TO IOSRET;                   /* RETURN TO IOS                 */
         B     IOSRET                                              0492
*POSTIOS:                                                          0493
*                                                                  0493
*   /*****************************************************************/
*   /*                                                               */
*   /* IF BIT 2 OF IOBECBCC IS OFF THEN TURN ON THE ERROR COMPLETION */
*   /* FLAG IN DCBIFLGS(DCBIFEC) (ONLY FOR RELATED REQUEST)  @YM03854*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0493
*   IF ERRESETF=RESET&IOBUNREL=RESET THEN                          0493
POSTIOS  TM    ERRESETF(IOBREG),B'00100000'                        0493
         BNZ   @RF00493                                            0493
         TM    IOBUNREL(IOBREG),B'00000010'                        0493
         BNZ   @RF00493                                            0493
*     DCBIFEC=IOSCMPLF;             /* SET ERROR FLAG IN DCBIFLGS  0494
*                                                            @ZA00616*/
*                                                                  0494
         L     @15,DEBDCBAD(,DEBREG)                               0494
         OI    DCBIFEC+40(@15),B'11000000'                         0494
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE ECB IS NOT BEING WAITED UPON THEN POST THE ECB COMPLETE*/
*   /* - SINCE THE LOCAL LOCK IS HELD AND ALL I/O IS COMPLETED BEFORE*/
*   /* CONTROL IS PASSED TO THE USER THE COMPLETION CODE CAN BE MOVED*/
*   /* INTO THE ECB WITHOUT USING THE POST INTERFACE. THE SKIP RETURN*/
*   /* IS TAKEN SINCE THE ECB IS POSTED.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0495
*   IF ECB<WAITED THEN                                             0495
@RF00493 L     @15,IOBECBPT(,IOBREG)                               0495
         CLI   ECB(@15),X'80'                                      0495
         BNL   @RF00495                                            0495
*     DO;                           /* ECB NOT BEING WAITED UPON   0496
*                                                            @YM03828
*                                      THEN POST IS DONE HERE      0496
*                                                            @YM03854*/
*       SPKA(RQEPRT);               /* PROTECT AGAINST MALICIOUS   0497
*                                      TAMPERING BY USER OF ECB    0497
*                                      ADDRESS                       */
         SLR   @12,@12                                             0497
         IC    @12,RQEPRT(,RQEREG)                                 0497
         SPKA  0(@12)                                              0497
*       ECB=IOBECBCC;               /* POST ECB              @YM03854*/
         MVC   ECB(1,@15),IOBECBCC(IOBREG)                         0498
*       SPKA(ZERO);                 /* RESTORE KEY AFTER POST        */
         SLR   @15,@15                                             0499
         SPKA  0(@15)                                              0499
*       GO TO SKIPIOS;              /* BYPASS EXCPCI POST    @YM03854*/
         B     SKIPIOS                                             0500
*     END;                          /*                       @YM03828*/
*                                                                  0501
*   /*****************************************************************/
*   /*                                                               */
*   /* WAIT OUTSTANDING. USE EXCP CI POST FACILITY TO POST           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0502
*   R14=IOSPOST;                    /*                       @YM03828*/
@RF00495 SLR   R14,R14                                             0502
*   GO TO IOSRET;                   /* POST IT               @YM03828*/
         B     IOSRET                                              0503
*SKIPIOS:                                                          0504
*                                                                  0504
*   /*****************************************************************/
*   /*                                                               */
*   /* SKIP POST ENTRY                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0504
*   R14=IOSSKIP;                    /* SKIP - DISPLACEMENT = 4       */
SKIPIOS  LA    R14,4                                               0504
*                                                                  0505
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE RESTORES IOS REGISTERS AND RETURNS               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0505
*IOSRET:                                                           0505
*   RESPECIFY                                                      0505
*    (R5) RSTD;                                                    0505
*                                                                  0505
IOSRET   DS    0H                                                  0506
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE IOS REGISTERS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0506
*   SAVERG=RQENRQE;                 /* SAVE AREA                     */
         L     SAVERG,RQENRQE(,RQEREG)                             0506
*   R14=R14+EIREG14;                /* CALCULATE RETURN ADDRESS - R14
*                                      + 4 SKIP POST, R14 + 8 BYPASS
*                                      POST                          */
         L     @15,RQESRB(,RQEREG)                                 0507
         AL    R14,EIREG14(,@15)                                   0507
*   R5=EIREG5;                      /* RESTORE FOR IOS               */
*                                                                  0508
         L     R5,EIREG5(,@15)                                     0508
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE RECOVERY ENVIRENMENT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0509
*   RESPECIFY                                                      0509
*    (R10,                                                         0509
*     R11) RSTD;                                                   0509
*   GEN SETS(R10,R11,FRRSCURR) REFS(PSACSTK,PSA,FRRSCURR,FRRS,FRRSEMP,
*       FRRSELEN)                                                  0510
*       (SETFRR D,WRKREGS=(R10,R11)       RELEASE RECOVERY ENVIRONMENT)
*       ;                                                          0510
         SETFRR D,WRKREGS=(R10,R11)       RELEASE RECOVERY ENVIRONMENT
*   RESPECIFY                                                      0511
*    (R10,                                                         0511
*     R11) UNRSTD;                                                 0511
*                                                                  0511
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO IOS                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0512
*   END IDDWIAPP                                                   0512
*                                                                  0512
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IDAVOP1 )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDDWICB )                                       */
*/*%INCLUDE SYSLIB  (IDDVDSCB)                                       */
*/*%INCLUDE SYSLIB  (IDDVBPPL)                                       */
*/*%INCLUDE SYSLIB  (IDAVBPI )                                       */
*/*%INCLUDE SYSLIB  (IDDTRACK)                                       */
*/*%INCLUDE SYSLIB  (IDAVBPH )                                       */
*/*%INCLUDE SYSLIB  (IECDRQE )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*                                                                  0512
*       ;                                                          0512
@EL00001 DS    0H                                                  0512
@EF00001 DS    0H                                                  0512
@ER00001 BR    @14                                                 0512
@DATA    DS    0H
@CH00042 DC    H'1'
@CH03240 DC    H'-1'
@DATD    DSECT
         DS    0F
IDDWIAPP CSECT
         DS    0F
@CF00037 DC    F'8'
@CF00074 DC    F'12'
@CF00103 DC    F'15'
@CF00066 DC    F'4096'
@CF03313 DC    F'58624'
@CF03315 DC    F'58880'
@CF03318 DC    F'-4095'
@CF03320 DC    F'-32'
@CF03331 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
DCBPTR   DS    A
DEBPTR   DS    A
DVCTPTR  DS    A
UCBPTR   DS    A
VDSCBPTR DS    A
FRREPTR  DS    A
FRRSPTR  DS    A
SDWAPARM DS    A
DEBEXPTR DS    A
IOBPRPTR DS    A
DEBSBPTR DS    A
DEBSEPTR DS    A
IDDWIAPP CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00548 DC    V(IDDWITRM)
@CV00556 DC    V(IDDWIJRN)
@CV00557 DC    V(IDDWIFRR)
@CV00558 DC    V(IDDWICLS)
         DS    0D
ADWIJRN  DC    VL4(IDDWIJRN)
ADWICLS  DC    VL4(IDDWICLS)
KEYONE   DC    AL1(1)
@CC03242 DC    C'APP'
@CC03271 DC    C'TRM'
PATCH    DC    CL100'PATCH SPACE'
APAR     DC    CL8'@ZA31588'
DATE     DC    CL8'06/22/78'
@DATD    DSECT
*                                                          /*@YM03030*/
PGFX4    EQU   4                        CONSTANT 4
SMFEX8   EQU   8                        CONSTANT 8
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDDWIAPP CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RQEREG   EQU   @01
IOBREG   EQU   @02
DEBREG   EQU   @03
DCBREG   EQU   @04
WORKREG  EQU   @05
WICBREG  EQU   @06
VDSCBREG EQU   @07
SAVERG   EQU   @13
R0       EQU   @00
R1       EQU   @01
GPR03F   EQU   @03
R4       EQU   @04
R5       EQU   @05
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
GPR00F   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR00P   EQU   @00
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
R2       EQU   @02
R3       EQU   @03
R6       EQU   @06
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
IHADCB   EQU   0
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSGPS EQU   DCBDSRG1
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
DCBRECL  EQU   DCBRECLA
DCBRECSB EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFEC  EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS28 EQU   0
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCNEVA EQU   DCBCIND1
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00027 EQU   IHADCS40+12
DCBEROPT EQU   @NM00027
CCW      EQU   0
CCWADDR  EQU   CCW+1
CCWFLAGS EQU   CCW+4
SILI     EQU   CCWFLAGS
CCWLEN   EQU   CCW+6
@NM00032 EQU   0
TICBITS  EQU   @NM00032
ECB      EQU   0
EOEAPPX  EQU   0
SIOAPPX  EQU   0
CEAPPX   EQU   0
AEAPPX   EQU   0
AEBAPPX  EQU   0
PCIAPPX  EQU   0
IEASMFEX EQU   0
IDAVOP1  EQU   0
VBPOHPTR EQU   IDAVOP1
VBPOWIA  EQU   IDAVOP1+4
VBPOLEN  EQU   IDAVOP1+8
VBPODSSZ EQU   IDAVOP1+12
VBPOFLG  EQU   IDAVOP1+16
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCIOFL EQU   IDABUFC+2
BUFCFLG2 EQU   IDABUFC+3
BUFCPLH  EQU   IDABUFC+4
BUFCBAD  EQU   IDABUFC+20
BUFCINV  EQU   IDABUFC+28
BUFCDSPC EQU   IDABUFC+32
DVCT     EQU   0
DVCCYL   EQU   DVCT
DVCOVHD  EQU   DVCT+6
DVCOVNLB EQU   DVCOVHD
DVCOVLB  EQU   DVCOVHD+1
DVCOVNK  EQU   DVCT+8
DVCFLAGS EQU   DVCT+9
DVC2BOV  EQU   DVCFLAGS
DVCFTOL  EQU   DVCFLAGS
DVCTOL   EQU   DVCT+10
DVCSECT  EQU   DVCT+16
DVCINDEX EQU   0
WICB     EQU   0
WICSEEKA EQU   WICB
WICSKAM  EQU   WICSEEKA
WICSKBCH EQU   WICSEEKA+1
WICSKACH EQU   WICSKBCH+2
WICSTART EQU   WICB+8
WICAUDIT EQU   WICB+12
WICPRT   EQU   WICB+15
WICRSTCP EQU   WICB+16
WICCCW1  EQU   WICRSTCP
WICCCW2  EQU   WICRSTCP+8
WICERPSW EQU   WICB+32
WICERPOV EQU   WICERPSW
WICERPWR EQU   WICERPSW
WICERPSV EQU   WICB+33
WICOFLG1 EQU   WICB+56
WICOFLG2 EQU   WICB+57
WICSEQFG EQU   WICB+58
WICXOFLG EQU   WICB+59
WICERDSP EQU   WICB+64
WICLSTOP EQU   WICB+66
WICCUROP EQU   WICB+67
WICRESTA EQU   WICB+68
WICFMASK EQU   WICB+69
WICDVTAB EQU   WICB+70
WICMAXCC EQU   WICDVTAB
WICIGAP  EQU   WICDVTAB+6
WICIGP   EQU   WICIGAP
WICLGAP  EQU   WICDVTAB+8
WICLGP   EQU   WICLGAP
WICKEYGP EQU   WICDVTAB+10
WICKYGP  EQU   WICKEYGP
WICTOL   EQU   WICDVTAB+12
WICSECT  EQU   WICDVTAB+14
WICDEVTP EQU   WICDVTAB+15
WICREGSV EQU   WICB+92
WICTCB   EQU   WICB+120
EIFRRPRM EQU   0
EIRQEPTR EQU   EIFRRPRM
EIREG5   EQU   EIFRRPRM+4
EIREG14  EQU   EIFRRPRM+8
@NM00053 EQU   EIFRRPRM+12
@NM00054 EQU   @NM00053
VDSCB    EQU   0
VDSSEEKA EQU   VDSCB+45
VDSDSPCT EQU   VDSCB+52
VDSWICB  EQU   VDSCB+56
VDSVBPPL EQU   VDSCB+60
VDSWINDW EQU   VDSCB+64
VDSTRKSI EQU   VDSCB+68
VDSWINSI EQU   VDSCB+70
VDSABSTT EQU   VDSCB+72
VDSNMTRK EQU   VDSCB+74
VBPPL    EQU   0
@NM00055 EQU   VBPPL+144
VBPRWPRM EQU   @NM00055
VBPOPPRM EQU   VBPRWPRM
VBPMOD   EQU   0
VOPEN    EQU   0
VTRACK   EQU   0
VTST     EQU   VTRACK+8
VTHA     EQU   VTRACK+9
VTR0     EQU   VTRACK+14
VBPDSPCT EQU   0
VBPHFIX  EQU   VBPDSPCT
VBPHJJ   EQU   VBPHFIX
VBPHLGN  EQU   VBPHJJ+8
VBPHLGID EQU   VBPHLGN
VBPHSYM  EQU   VBPHJJ+16
VBPHOPT  EQU   VBPHJJ+32
VBPHDEL  EQU   VBPHOPT
VBPHSTA  EQU   VBPHJJ+33
VBPHBUFC EQU   VBPHFIX+52
VBPHVCB  EQU   VBPHFIX+60
VBPHSAVE EQU   VBPHFIX+64
SECSAVE  EQU   VBPHFIX+136
VBPVCB   EQU   0
VBPVFXD  EQU   VBPVCB
VBPVAPTR EQU   VBPVFXD+36
RQE      EQU   0
RQEIOB   EQU   RQE+4
RQEDEB   EQU   RQE+8
RQETCB   EQU   RQE+12
RQENRQE  EQU   RQE+20
RQESRB   EQU   RQE+28
RQEPRT   EQU   RQE+36
RQESMFRQ EQU   RQEPRT
RQETYPE  EQU   RQE+37
RQETYP3  EQU   RQETYPE
RQEFLAG  EQU   RQE+38
RQEFLAG3 EQU   RQE+39
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTZDTAB EQU   CVTMAP+64
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
TCBDWORD EQU   0
TCBPTR   EQU   TCBDWORD+4
ASCBPTR  EQU   TCBDWORD+12
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBERRTN EQU   IOBFLAG1
IOBCYCCK EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBUNREL EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBS1B7  EQU   IOBSENS1
IOBECBPT EQU   IOBSTDRD+4
IOBECBCC EQU   IOBECBPT
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00095 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBNMEXT EQU   DEBUSRPG
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBDVMOD EQU   DEBUCBAD
DEBBINUM EQU   DEBDASD+4
DEBENDCC EQU   DEBDASD+10
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPGFX  EQU   DEBSIOAB
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
PGFXAPPX EQU   3
UCBBGN   EQU   0
VBPVASIN EQU   0
VCLOSE   EQU   0
VREADWR  EQU   0
VSCRATCH EQU   0
@NM00001 EQU   IOBECBCC
ERRESETF EQU   @NM00001
@NM00034 EQU   WICCUROP
RDBIT    EQU   @NM00034
WRBIT    EQU   @NM00034
@NM00036 EQU   WICRSTCP
CCW1ADDR EQU   @NM00036
CCW1OP   EQU   CCW1ADDR
CCW1FLAG EQU   @NM00036+4
CCW1SDT  EQU   CCW1FLAG
CCW1NULL EQU   @NM00036+5
CCW1LEN  EQU   @NM00036+6
CCW2ADDR EQU   @NM00036+8
CCW2OP   EQU   CCW2ADDR
@NM00039 EQU   IOBFLAG3
CSWEND   EQU   @NM00039+1
CSWFLAG  EQU   @NM00039+4
UNITCHK  EQU   CSWFLAG
UNITEXC  EQU   CSWFLAG
PCI      EQU   CSWFLAG+1
INCLEN   EQU   CSWFLAG+1
PROGCHK  EQU   CSWFLAG+1
PROTCHK  EQU   CSWFLAG+1
CHANLCHK EQU   CSWFLAG+1
CSWCNT   EQU   @NM00039+6
DEBHIGH  EQU   DEBENDCC
DEBLOW   EQU   DEBBINUM
WICCHHTR EQU   WICMAXCC
DVCCHHTR EQU   DVCCYL
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSMFEX EQU   CVTS01+108
CVTCRMN  EQU   CVTS01+156
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTPVBP  EQU   CVTS01+444
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBPRTOV EQU   IOBNFLG1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBM     EQU   IOBSEEK
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00094 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
BUFCRSC1 EQU   BUFCAVL
FLC      EQU   PSA
WICCCWER EQU   WICREGSV
WICCSWSV EQU   WICREGSV
WICPRTB  EQU   WICPRT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00094
UCBSKPFG EQU   @NM00094
UCBRIPND EQU   @NM00094
UCBRTIAC EQU   @NM00094
UCBRSV79 EQU   @NM00094
UCBRSV78 EQU   @NM00094
UCBRSV77 EQU   @NM00094
UCBOLTEP EQU   @NM00094
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00093 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBSEGMT EQU   IOBPRTOV
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
@NM00043 EQU   CSWFLAG+1
@NM00042 EQU   CSWFLAG+1
@NM00041 EQU   CSWFLAG
@NM00040 EQU   @NM00039
CCW2ADD  EQU   CCW2ADDR+1
@NM00038 EQU   CCW1FLAG
@NM00037 EQU   CCW1FLAG
CCW1ADD  EQU   CCW1ADDR+1
@NM00035 EQU   @NM00034
@NM00002 EQU   @NM00001
@NM00101 EQU   FRRSFLGS+1
@NM00100 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00099 EQU   DEBACS08+12
@NM00098 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00097 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00096 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBUCBA  EQU   DEBUCBAD+1
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00095
UCBHALI  EQU   @NM00095
UCBRSV09 EQU   @NM00095
UCBRSV08 EQU   @NM00095
UCBRSV07 EQU   @NM00095
UCBRSV06 EQU   @NM00095
UCBRSV05 EQU   @NM00095
UCBRSV04 EQU   @NM00095
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00092 EQU   UCB
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSTRTB EQU   IOBSTART+1
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBPB EQU   IOBECBPT+1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
NXTASCB  EQU   TCBDWORD+8
NXTTCB   EQU   TCBDWORD
@NM00091 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00090 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBSTAFX EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00089 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00088 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00087 EQU   CVTFIX+248
@NM00086 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
RQEEND   EQU   RQE+40
@NM00061 EQU   RQEFLAG3
RQEINIOS EQU   RQEFLAG3
RQECHEAC EQU   RQEFLAG
RQEPURGE EQU   RQEFLAG
RQESRBS  EQU   RQEFLAG
RQESTBL  EQU   RQEFLAG
RQEFIXST EQU   RQEFLAG
RQENOFRE EQU   RQEFLAG
RQENOPST EQU   RQEFLAG
RQERETRY EQU   RQEFLAG
RQETYP1  EQU   RQETYP3
RQETYP2  EQU   RQETYP3
RQEDIE   EQU   RQETYPE
RQEEOEE  EQU   RQETYPE
RQEVAM   EQU   RQETYPE
RQE1TO1  EQU   RQETYPE
RQEVIRT  EQU   RQETYPE
RQE114   EQU   RQETYPE
@NM00060 EQU   RQEPRT
RQEPKEY  EQU   RQEPRT
RQEIPIB  EQU   RQE+32
RQERRQ   EQU   RQE+24
RQETCCW  EQU   RQE+16
RQEUCB   EQU   RQE
VBPVMOVE EQU   VBPVCB+40
VCBSAVAD EQU   VBPVFXD+32
VBPVMAP  EQU   VBPVFXD+8
VBPVLEN  EQU   VBPVFXD+4
VBPVNAME EQU   VBPVFXD
VBPHMAD  EQU   VBPDSPCT+216
VBPHTCB  EQU   VBPHFIX+212
VBPHJRNP EQU   VBPHFIX+209
VBPHSPUL EQU   VBPHFIX+208
OPTSAVE  EQU   SECSAVE+18
LGNSAVE  EQU   SECSAVE+10
DSGSAVE  EQU   SECSAVE+8
SECSAVO  EQU   SECSAVE+4
@NM00059 EQU   SECSAVE
VBPHSAVO EQU   VBPHSAVE+4
@NM00058 EQU   VBPHSAVE
VBPHFRAR EQU   VBPHFIX+56
VBPHVOP  EQU   VBPHBUFC
VBPHRBN  EQU   VBPHJJ+48
VBPHPRL  EQU   VBPHJJ+44
VBPHWAD  EQU   VBPHJJ+40
VBPHWSZ  EQU   VBPHJJ+38
VBPHMMP  EQU   VBPHJJ+36
VBPHNMP  EQU   VBPHJJ+34
@NM00057 EQU   VBPHSTA
VBPHCLO  EQU   VBPHSTA
VBPHSCR  EQU   VBPHSTA
@NM00056 EQU   VBPHSTA
VBPHRW   EQU   VBPHSTA
VBPHOPE  EQU   VBPHSTA
VBPHJOU  EQU   VBPHOPT
VBPHJRN  EQU   VBPHOPT
VBPHPADD EQU   VBPHOPT
VBPHPAS  EQU   VBPHOPT
VBPHRST  EQU   VBPHOPT
VBPHPGLD EQU   VBPHOPT
VBPHINS  EQU   VBPHOPT
VBPHDSSZ EQU   VBPHJJ+28
VBPHDSG  EQU   VBPHJJ+26
VBPHPNP  EQU   VBPHJJ+24
VBPHSYM2 EQU   VBPHSYM+4
VBPHSYM1 EQU   VBPHSYM
VBPHLPG2 EQU   VBPHLGID+2
VBPHLPG1 EQU   VBPHLGID
VBPHLEN  EQU   VBPHJJ+4
VBPHNAME EQU   VBPHJJ
VTR1     EQU   VTRACK+30
VTR0DATA EQU   VTR0+8
VTR0CNT  EQU   VTR0
VTHACCHH EQU   VTHA+1
VTHAFLAG EQU   VTHA
VTUPDATE EQU   VTST
VTOVFL   EQU   VTST
VTINIT   EQU   VTST
VTRKBAL  EQU   VTRACK+4
VTDATEND EQU   VTRACK
VBPPLSV2 EQU   VBPPL+72
VBPPLSAV EQU   VBPPL
VDSDSCB  EQU   VDSCB+80
VDSRBN   EQU   VDSCB+76
VDSUCB   EQU   VDSCB
EIRECUR  EQU   @NM00054
WICDATND EQU   WICB+116
WICRGSV5 EQU   WICREGSV+20
WICRGSV4 EQU   WICREGSV+16
WICRGSV3 EQU   WICREGSV+12
WICRGSV2 EQU   WICREGSV+8
WICRGSV1 EQU   WICREGSV+4
WICRGSV0 EQU   WICREGSV
WICEXPTR EQU   WICB+88
WICSENSE EQU   WICB+86
WICTRKCP EQU   WICDVTAB+4
WICMAXHH EQU   WICDVTAB+2
WICRSTRT EQU   WICRESTA
@NM00052 EQU   WICRESTA
WICTRMSK EQU   WICRESTA
WICTRKRS EQU   WICRESTA
WICSEKRS EQU   WICRESTA
WICOVFIP EQU   WICRESTA
WICPCIRS EQU   WICRESTA
WICWORK  EQU   WICB+60
WICRCSKT EQU   WICXOFLG
WICNDXPT EQU   WICXOFLG
WICTICFG EQU   WICSEQFG
WICFSKE  EQU   WICSEQFG
WICFSIDE EQU   WICSEQFG
WICLWCKD EQU   WICSEQFG
WICWRTIP EQU   WICOFLG2
WICDC    EQU   WICOFLG2
WICSCHEQ EQU   WICOFLG2
WICERROR EQU   WICOFLG2
WICINTRP EQU   WICOFLG2
WICDATAX EQU   WICOFLG2
WICXFCOM EQU   WICOFLG2
@NM00051 EQU   WICOFLG1
WICSID   EQU   WICOFLG1
WICSCHTC EQU   WICOFLG1
WICOVFOP EQU   WICOFLG1
WICFMTW  EQU   WICOFLG1
WICERASE EQU   WICOFLG1
WICWSCKD EQU   WICOFLG1
WICWCKD  EQU   WICOFLG1
WICREQXF EQU   WICB+52
WICAVXFR EQU   WICB+48
WICDL    EQU   WICB+44
WICKL    EQU   WICB+42
WICRELTP EQU   WICB+40
WICCAM   EQU   WICB+36
@NM00050 EQU   WICERPSW
WICSKAR  EQU   WICSEEKA+7
WICSKAHH EQU   WICSKACH+2
WICSKACC EQU   WICSKACH
WICSKABB EQU   WICSKBCH
DVCSECTD EQU   DVCT+17
DVCOVR0  EQU   DVCT+14
DVCALT   EQU   DVCT+12
@NM00049 EQU   DVCFLAGS
@NM00048 EQU   DVCFLAGS
DVCTRKLN EQU   DVCT+4
DVCTRK   EQU   DVCT+2
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCWLEN EQU   BUFCINV
BUFCNXT1 EQU   IDABUFC+24
BUFCCPA  EQU   IDABUFC+16
BUFCORBA EQU   IDABUFC+12
BUFCDDDD EQU   IDABUFC+8
BUFCAMB  EQU   BUFCPLH
@NM00047 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCMW   EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00046 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00045 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
@NM00044 EQU   VBPOFLG
VBPOPGLD EQU   VBPOFLG
@NM00033 EQU   @NM00032
CCWNULL  EQU   CCW+5
SDT      EQU   CCWFLAGS
@NM00031 EQU   CCWFLAGS
OPCODE   EQU   CCW
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00030 EQU   IHADCS40+16
@NM00029 EQU   @NM00027+1
@NM00028 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00026 EQU   IHADCS40+10
@NM00025 EQU   IHADCS40+9
@NM00024 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00023 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00022 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00021 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00020 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00019 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00018 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00017 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00016 EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
@NM00015 EQU   IHADCS28+1
@NM00014 EQU   IHADCS28
DCBPUTA  EQU   DCBGETA
@NM00013 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00012 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00011 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00010 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00009 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00008 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00007 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00006 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00005 EQU   DCBDSRG1
@NM00004 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
@NM00003 EQU   IHADCB
@NM00085 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00084 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00083 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00082 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00081 EQU   FLCFSA
@NM00080 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00079 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00078 EQU   FLCIOA
@NM00077 EQU   FLCMCLA+15
@NM00076 EQU   FLCMCLA+14
@NM00075 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00074 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00073 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00072 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00071 EQU   FLCPER
@NM00070 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00069 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00068 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00067 EQU   FLCPIILC
@NM00066 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00065 EQU   FLCSVILC
@NM00064 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00063 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00062 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00360 EQU   COUNT
@RT00395 EQU   POSTIOS
@RT00411 EQU   POSTIOS
@RT00413 EQU   POSTIOS
@RF00437 EQU   AEAPP2ND
@RC00419 EQU   STARTERP
@RT00475 EQU   COUNT1
@RC00420 EQU   @RC00419
@RF00423 EQU   @RC00420
@ENDDATA EQU   *
         END   IDDWIAPP,(C'PLS1631',0701,78180)
