         TITLE 'IDAVBPP1 VBP RECORD MANAGEMENT MODULE                  *
                        '
IDAVBPP1 CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
        DS    0F
        DC     V(IDAVBPO1)              ADDR OF IDAVBPO1
        DC     A(IDAVBPPR)              ADDR OF IDAVBPP1
        DC     V(IDAVBPC1)              ADDR OF IDAVBPC1
        DS     F                        NOT USED              @Z40WSSR
        DC     V(IDAVBPS1)              ADDR OF IDAVBPS1
        DC     AL1(8)                   LENGTH OF NAME
        DC     C'IDAVBPP1'              MODULE NAME
IDAVBPPR   STM  R14,R12,12(R13)          SAVE CALLERS REGS
        BALR   R12,R0                   SETUP BASE REG
        DS     0H
        USING   *,R12
*   R11=BUFCDSPC;                   /* BASE DSPCT HEADER ON REG 11   */
         L     R11,BUFCDSPC(,R1)                                   0082
*   RFY                                                            0083
*     VBPDSPCT BASED(R11);                                         0083
*   OSAVREG=ADDR(VBPHSAVE);         /* STORE MY SAVE AREA ADDR IN  0084
*                                      CALLERS SAVE AREA             */
         LA    @10,VBPHSAVE(,R11)                                  0084
         ST    @10,OSAVREG(,R13)                                   0084
*   VBPHBUFC=R1;                    /* STORE BUFC ADDR IN DSPCT    0085
*                                      HEADER                        */
         ST    R1,VBPHBUFC(,R11)                                   0085
*   VBPHSAVO=R13;                   /* STORE CALLERS SAVE AREA ADDR
*                                      IN MY SAVE AREA               */
         ST    R13,VBPHSAVO(,R11)                                  0086
*   R13=ADDR(VBPHSAVE);             /* LOAD REG 13 WITH MY SAVE AREA
*                                      ADDR                          */
         LA    R13,VBPHSAVE(,R11)                                  0087
*   VBPHSTA=RWFLG;                  /* SET TRACE FLAG IN DSPCT HDR TO
*                                      INDICATE IDAVBPP1 IN PROGRESS
*                                                            @Z40WSSR*/
*                                                                  0088
         MVI   VBPHSTA(R11),B'01000000'                            0088
*   /*****************************************************************/
*   /*                                                               */
*   /* SET FUNCTIONAL RECOVERY(FRR) ENVIRONMENT                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0089
*   RFY                                                            0089
*    (R2,                                                          0089
*     R3,                                                          0089
*     R4) RSTD;                                                    0089
*   R2=ADDR(IDAVBPR1);              /* LOAD RECOVERY ROUTINE ADDR IN
*                                      REG 2                         */
         L     R2,@CV01151                                         0090
*   GEN CODE REFS(R2,PSACSTK,FRRSCURR,FRRS,PSA,PSALSFCC,FRRSELEN,  0091
*       FRRSENTR,FRRSLAST) SETS(R3,FRRSCURR,FRRSFRRA,FRRSPARM) NOEXIT
*       NOFLOWS;                                                   0091
  SETFRR  A,FRRAD=(2),PARMAD=(3),WRKREGS=(3,4)
*   RFY                                                            0092
*     RDWA BASED(R3);               /* BASE RECV. RTN. COMM. AREA ON
*                                      REG.3                         */
*   RDWAVBPH=ADDR(VBPDSPCT);        /* LOAD DSPCT HDR ADDR IN      0093
*                                      RECOVERY RTN COMM AREA        */
         ST    R11,RDWAVBPH(,R3)                                   0093
*   VBPHFRAR=ADDR(RDWA);            /* SAVE RECV. RTN COMM. AREA ADDR
*                                      IN DSPCT HDR                  */
         ST    R3,VBPHFRAR(,R11)                                   0094
*   RDWA2=ADDR(IDABUFC);            /* STORE INPUT PARMLIST ADDR IN
*                                      RECV. RTN COMM. AREA          */
         ST    R1,RDWA2(,R3)                                       0095
*   RDWA32=RWIND;                   /* SET IDAVBPP1 IN PROGRESS    0096
*                                      INDICATOR IN FRR COMM. AREA   */
         MVI   RDWA32(R3),X'02'                                    0096
*   RFY                                                            0097
*     RDWA BASED(VBPHFRAR);         /* BASE RECV. RTN. COMM. AREA ON
*                                      DSPCT HDR                     */
*   RFY                                                            0098
*     IDABUFC BASED(VBPHBUFC);      /* BASE BUFC ON DSPCT HDR        */
*   RFY                                                            0099
*    (R1,                                                          0099
*     R2,                                                          0099
*     R3,                                                          0099
*     R4) UNRSTD;                                                  0099
*   RFY                                                            0100
*    (VCBNXT,                                                      0100
*     VCBPTR) RSTD;                                                0100
*   VCBPTR=ADDR(VCBSAVAD);          /* MAP THE VCB DSECT ON VCBSAVE
*                                      ADDR FIELD IN DSPCT HDR TO  0101
*                                      STORE THE ADDR OF THE FIRST 0101
*                                      VCB TO BE PASSED TO RSM IN IT.*/
         L     @10,VBPHVCB(,R11)                                   0101
         LA    VCBPTR,VCBSAVAD(,@10)                               0101
*                                                                  0102
*   /*****************************************************************/
*   /*                                                               */
*   /* IF WRITE REQUESTED THEN BUILD VCBS FOR MOVE OUT               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0102
*   IF BUFCMW=BITB THEN                                            0102
         L     @06,VBPHBUFC(,R11)                                  0102
         TM    BUFCMW(@06),B'10000000'                             0102
         BNO   @RF00102                                            0102
*     DO;                           /* BUILD VCB FOR MOVE OUT        */
*       RFY                                                        0104
*        (R8,                                                      0104
*         R1,                                                      0104
*         R2) RSTD;                                                0104
*       VCBNXT=ADDR(VBPVMOVE);      /* VCB DSECT SHOULD POINT TO THE
*                                      FIRST VCB FOR MOVE OUT BUILT
*                                      IN IDAVBPR2           @Z40WSSR*/
         LA    VCBNXT,VBPVMOVE(,@10)                               0105
*       R1=(BUFCWLEN-ONE)/PAGESIZE; /* GET # OF PAGES TO BE WRITTEN  */
*                                                                  0106
         LH    @00,BUFCWLEN(,@06)                                  0106
         BCTR  @00,0                                               0106
         SRDA  @00,32                                              0106
         D     @00,@CF01104                                        0106
*       /*************************************************************/
*       /*                                                           */
*       /* IF # OF PAGES TO BE MOVED OUT AS REQUESTED BY IDDWITRM IS */
*       /* LESS THAN # OF PAGES ASSIGNED IN THE PRIOR REQUEST THEN   */
*       /* MOVE OUT ALL THE PAGES ASSIGNED IN THE PRIOR REQUEST      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0107
*       IF R1<VBPHPNP THEN                                         0107
         LH    @10,VBPHPNP(,R11)                                   0107
         CLR   R1,@10                                              0107
         BNL   @RF00107                                            0107
*         R1=VBPHPNP;                                              0108
         LR    R1,@10                                              0108
*       R2=(BUFCORBA/PAGESIZE)+VBPHMMP;/* GET REL. PAGE OFFSET OF 1ST
*                                      PAGE IN THE WINDOW            */
@RF00107 L     @10,VBPHBUFC(,R11)                                  0109
         L     R2,BUFCORBA(,@10)                                   0109
         SRL   R2,12                                               0109
         LH    @10,VBPHMMP(,R11)                                   0109
         ALR   R2,@10                                              0109
*       R1=R1+R2;                   /* R1 NOW HAS REL. PAGE OFFSET OF
*                                      LAST PAGE IN THE WINDOW TO BE
*                                      MOVED OUT                     */
         ALR   R1,R2                                               0110
*       R8=VBPHDSG;                 /* LOAD REG 8 WITH DSPAGEID    0111
*                                      GENERATOR                     */
*                                                                  0111
         LH    R8,VBPHDSG(,R11)                                    0111
         N     R8,@CF01271                                         0111
*       /*************************************************************/
*       /*                                                           */
*       /* PASS A ZERO DSPAGEID TO RSM AS RECLAIM SHOULD NOT BE DONE */
*       /* IF LPID OFFSET IS > 64K                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0112
*       IF R1>=RECLMLIM THEN                                       0112
         CL    R1,@CF01232                                         0112
         BL    @RF00112                                            0112
*         R8=ZERO;                  /*                       @Z40WSSR*/
*                                                                  0113
         SLR   R8,R8                                               0113
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD VCBS FOR THE # OF PAGES TO BE MOVED OUT FROM THE    */
*       /* WINDOW                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0114
*       DO R2=R2 TO R1;                                            0114
@RF00112 B     @DE00114                                            0114
@DL00114 DS    0H                                                  0115
*         VCBLINK=VCBNXT;           /* STORE ADDR OF NEXT VCB OR THE
*                                      FIRST VCB FOR MOVE OUT        */
         ST    VCBNXT,VCBLINK(,VCBPTR)                             0115
*         VCBPTR=VCBNXT;            /* MAP VCB DSECT ON VCB TO BE  0116
*                                      FILLED                        */
         LR    VCBPTR,VCBNXT                                       0116
*         VCBNXT=VCBNXT+LENGTH(VCB);/* SAVE ADDR OF NEXT VCB TO BE 0117
*                                      FILLED                        */
         AL    VCBNXT,@CF00127                                     0117
*         VCBLGN=VBPHLGID;          /* MOVE LGN              @Z40WSSR*/
         L     @10,VBPHLGID(,R11)                                  0118
         ST    @10,VCBLGN(,VCBPTR)                                 0118
*         VCBLGOFF=R2;              /* SET LGID FIELD                */
         ST    R2,VCBLGOFF(,VCBPTR)                                0119
*         VCBCPFLG=HEX00;           /* CLEAR COMPLETION FLAG @YM03910*/
         MVI   VCBCPFLG(VCBPTR),B'00000000'                        0120
*/*  IF RECLAIM IS NOT TO BE ATTEMPTED THEN ZERO DSPAGEID            */
*                                                                  0121
*         IF R8=ZERO THEN                                          0121
         SLR   @10,@10                                             0121
         CLR   R8,@10                                              0121
         BNE   @RF00121                                            0121
*           VCBDSID=ZERO;                                          0122
*                                                                  0122
         ST    @10,VCBDSID(,VCBPTR)                                0122
*         /***********************************************************/
*         /*                                                         */
*         /* ELSE PASS DSPAGEID                                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0123
*         ELSE                                                     0123
*           DO;                                                    0123
         B     @RC00121                                            0123
@RF00121 DS    0H                                                  0124
*             VCBDSN=R8;            /* PASS DSPAGEID GENERATOR       */
         STH   R8,VCBDSN(,VCBPTR)                                  0124
*             VCBDSOFF=R2;          /* PASS LPID OFFSET              */
         STH   R2,VCBDSOFF(,VCBPTR)                                0125
*           END;                                                   0126
*                                                                  0126
*         /***********************************************************/
*         /*                                                         */
*         /* IF THIS IS NOT THE LAST VCB TO BE SET THEN BUMP THE     */
*         /* DSECT. IF NOT DEPENDING ON WHAT ELSE HAS TO BE DONE THE */
*         /* VCBLINK FIELD IN THE CURRENT VCB HAS TO BE SET TO ZERO  */
*         /* OR THE NEXT VCB TO BE SET FOR READ AS DETERMINED AND SET*/
*         /* LATER ON                                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0127
*       END;                                                       0127
@RC00121 AL    R2,@CF00105                                         0127
@DE00114 CLR   R2,R1                                               0127
         BNH   @DL00114                                            0127
*       RFY                                                        0128
*        (R8,                                                      0128
*         R1,                                                      0128
*         R2) UNRSTD;                                              0128
*     END;                                                         0129
*                                                                  0130
*   /*****************************************************************/
*   /*                                                               */
*   /* ELSE IF READ NOT REQUESTED THEN BYPASS PROCESSING             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0130
*   ELSE                                                           0130
*     IF BUFCRRD=NULLB THEN                                        0130
         B     @RC00102                                            0130
@RF00102 L     @10,VBPHBUFC(,R11)                                  0130
         TM    BUFCRRD(@10),B'00100000'                            0130
         BZ    @RT00130                                            0130
*       GO TO FINIS;                /* IF NEITHER WRITE NOR READ   0131
*                                      REQUESTED THEN BYPASS       0131
*                                      PROCESSING                    */
*                                                                  0132
*/*   ELSE IF READ REQUESTED NOW THEN                                */
*                                                                  0132
*     ELSE                                                         0132
*                                                                  0132
*       /*************************************************************/
*       /*                                                           */
*       /* IF WRITE NOT REQUESTED NOW AND IF PRIOR REQUEST WAS A READ*/
*       /* THEN BUILD VCBS FOR MOVE OUT NULL FOR THE PAGES ASSIGNED  */
*       /* IN THE PRIOR REQUEST TO DISCONNECT THE WINDOW FROM VIRTUAL*/
*       /* MEMORY AND TO SAVE THE REAL STORAGE# (RSN)S PASSED BY RSM */
*       /* IN THE DSPCT MAP FOR RECLAIMING THESE PAGES FROM REAL     */
*       /* STORAGE                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0132
*       IF VBPHPAS=BITB THEN                                       0132
         TM    VBPHPAS(R11),B'00010000'                            0132
         BNO   @RF00132                                            0132
*         DO;                                                      0133
*           RFY                                                    0134
*            (R8,                                                  0134
*             R2,                                                  0134
*             R1) RSTD;                                            0134
*           VCBNXT=ADDR(VBPVMOVE);  /* LOAD INTO VCBNXT ADDR OF 1ST
*                                      VCB FOR MOVE OUT NULL BUILT IN
*                                      IDAVBPR2              @Z40WSSR*/
         L     VCBNXT,VBPHVCB(,R11)                                0135
         LA    VCBNXT,VBPVMOVE(,VCBNXT)                            0135
*           R1=VBPHPRL;             /* LOAD INTO REG1 REL. PAGE    0136
*                                      OFFSET OF 1ST PAGE IN THE   0136
*                                      WINDOW FOR THE LAST READ    0136
*                                      REQUEST                       */
         L     R1,VBPHPRL(,R11)                                    0136
*           R2=R1+VBPHPNP;          /* LOAD INTO REG2 REL. PAGE    0137
*                                      OFFSET OF LAST PAGE ASSIGNED
*                                      IN THE WINDOW IN THE LAST READ
*                                      REQUEST                       */
         LR    R2,R1                                               0137
         LH    @10,VBPHPNP(,R11)                                   0137
         ALR   R2,@10                                              0137
*           R8=VBPHDSG;             /* LOAD INTO REG. 8 DSPAGEID   0138
*                                      GENERATOR                     */
*                                                                  0138
         LH    R8,VBPHDSG(,R11)                                    0138
         N     R8,@CF01271                                         0138
*           /*********************************************************/
*           /*                                                       */
*           /* IF THIS PAGE IS NOT RECLAIMABLE THEN DO NOT PASS      */
*           /* DSPAGEID TO RSM                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0139
*           IF R2>=RECLMLIM THEN                                   0139
         CL    R2,@CF01232                                         0139
         BL    @RF00139                                            0139
*             R8=ZERO;              /*                       @Z40WSSR*/
*                                                                  0140
         SLR   R8,R8                                               0140
*           /*********************************************************/
*           /*                                                       */
*           /* BUILD VCBS FOR MOVE OUT NULL FOR ALL PAGES ASSIGNED ON*/
*           /* PRIOR REQUEST                                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0141
*           DO R1=R1 TO R2;                                        0141
@RF00139 B     @DE00141                                            0141
@DL00141 DS    0H                                                  0142
*             VCBLINK=VCBNXT;       /* STORE ADDR OF 1ST VCB FOR MOVE
*                                      OUT NULL IN VCBSAVEAD FIELD OR
*                                      THE NEXT VCB ADDR IN CURRENT
*                                      VCB                           */
         ST    VCBNXT,VCBLINK(,VCBPTR)                             0142
*             VCBPTR=VCBNXT;        /* MAP VCB DSECT ON VCB IN DSPCT
*                                      HDR                           */
         LR    VCBPTR,VCBNXT                                       0143
*             VCBNXT=VCBNXT+LENGTH(VCB);/* VCBNXT POINTS TO NEXT VCB
*                                      IN CHAIN                      */
         AL    VCBNXT,@CF00127                                     0144
*             VCBLGN=ZERO;          /* LGN SHOULD BE 0 FOR MOVEOUT 0145
*                                      NULL                  @Z40WSSR*/
         SLR   @10,@10                                             0145
         ST    @10,VCBLGN(,VCBPTR)                                 0145
*             VCBLGOFF=ZERO;        /* LPID OFFSET ALSO SHOULD BE 0
*                                                            @Z40WSSR*/
         ST    @10,VCBLGOFF(,VCBPTR)                               0146
*             VCBCPFLG=HEX00;       /* CLEAR COMPLETION FLAG @YM03910*/
*                                                                  0147
         MVI   VCBCPFLG(VCBPTR),B'00000000'                        0147
*             /*******************************************************/
*             /*                                                     */
*             /* IF RECLAIM IS NOT TO BE ATTEMPTED THEN ZERO OUT     */
*             /* DSPAGEID                                            */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0148
*             IF R8=ZERO THEN                                      0148
         CLR   R8,@10                                              0148
         BNE   @RF00148                                            0148
*               VCBDSID=ZERO;       /* ZERO DSPAGEID FIELD IN VCB    */
*                                                                  0149
         ST    @10,VCBDSID(,VCBPTR)                                0149
*             /*******************************************************/
*             /*                                                     */
*             /* ELSE BUILD DSPAGEID IN VCB                          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0150
*             ELSE                                                 0150
*               DO;                                                0150
         B     @RC00148                                            0150
@RF00148 DS    0H                                                  0151
*                 VCBDSN=R8;        /* STORE DSPAGEID GENERATOR IN 0151
*                                      VCB                           */
         STH   R8,VCBDSN(,VCBPTR)                                  0151
*                 VCBDSOFF=R1;      /* STORE LPID OFFSET IN VCB      */
         STH   R1,VCBDSOFF(,VCBPTR)                                0152
*               END;                                               0153
*           END;                                                   0154
@RC00148 AL    R1,@CF00105                                         0154
@DE00141 CLR   R1,R2                                               0154
         BNH   @DL00141                                            0154
*           RFY                                                    0155
*            (R8,                                                  0155
*             R1,                                                  0155
*             R2) UNRSTD;                                          0155
*         END;                                                     0156
*                                                                  0157
*   /*****************************************************************/
*   /*                                                               */
*   /* IF READ REQUESTED NOW THEN BUILD VCBS FOR ASSIGN. IF PAGES ARE*/
*   /* RECLAIMABLE THEN PASS DSPAGEIDS AND RSNS FOR RSM TO RECLAIM   */
*   /* FROM REAL MEMORY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0157
*   IF BUFCRRD=BITB THEN                                           0157
@RF00132 DS    0H                                                  0157
@RC00102 L     @10,VBPHBUFC(,R11)                                  0157
         TM    BUFCRRD(@10),B'00100000'                            0157
         BNO   @RF00157                                            0157
*     DO;                           /* IF READ REQUESTED             */
*       VCBNXT=ADDR(VBPVASIN);      /* LOAD IN VCBNXT ADDR OF 1ST  0159
*                                      ASSIGN VCB SET IN IDAVBPR2  0159
*                                                            @Z40WSSR*/
         L     @05,VBPHVCB(,R11)                                   0159
         L     VCBNXT,VBPVAPTR(,@05)                               0159
*       RFY                                                        0160
*        (R1,                                                      0160
*         MPNTRYOF,                                                0160
*         R3,                                                      0160
*         DSPCTMPR) RSTD;                                          0160
*       R1=(BUFCDDDD/PAGESIZE)+VBPHMMP;/* LOAD INTO REG.1 REL. PAGE
*                                      OFFSET OF THE 1ST PAGE TO BE
*                                      ASSIGNED IN THE WINDOW        */
         L     R1,BUFCDDDD(,@10)                                   0161
         SRL   R1,12                                               0161
         LH    @10,VBPHMMP(,R11)                                   0161
         ALR   R1,@10                                              0161
*       RFY                                                        0162
*         R0 RSTD;                                                 0162
*       R0=ZERO;                    /* ZERO REG. 0. IT WILL BE USED
*                                      TO TEST IF ASSIGN IS TO BE  0163
*                                      DONE ON THE WINDOW            */
         SLR   R0,R0                                               0163
*       RFY                                                        0164
*        (R6) RSTD;                                                0164
*       R6=R1+VBPHWSZ-ONE;          /* LOAD INTO REG. 6 THE REL. PAGE
*                                      OFFSET OF THE LAST PAGE TO BE
*                                      ASSIGNED IN THE WINDOW      0165
*                                                            @Z40WSSR*/
         LR    R6,R1                                               0165
         LH    @10,VBPHWSZ(,R11)                                   0165
         ALR   R6,@10                                              0165
         BCTR  R6,0                                                0165
*       RFY                                                        0166
*         R8 RSTD;                                                 0166
*       R8=VBPHDSG;                 /* LOAD REG. 8 WITH DSPAGEID   0167
*                                      GENERATOR                     */
*                                                                  0167
         LH    R8,VBPHDSG(,R11)                                    0167
         N     R8,@CF01271                                         0167
*       /*************************************************************/
*       /*                                                           */
*       /* PASS 0 DSPAGEID TO RSM IF THE PAGE IS NOT TO BE RECLAIMED.*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0168
*       IF R6>=RECLMLIM THEN                                       0168
         CL    R6,@CF01232                                         0168
         BL    @RF00168                                            0168
*         R8=ZERO;                  /*                       @Z40WSSR*/
*                                                                  0169
         SLR   R8,R8                                               0169
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE READ REQUEST IS BEYOND THE DATASET AS DEFINED WHEN */
*       /* IT WAS FIRST ACCESSED AT THE FIRST EXCP, THEN ISSUE AN    */
*       /* ABEND                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0170
*       IF R6>VBPHDSSZ THEN                                        0170
@RF00168 CL    R6,VBPHDSSZ(,R11)                                   0170
         BNH   @RF00170                                            0170
*         DO;                       /*                       @VS07065*/
*           RFY                                                    0172
*             R15 RSTD;             /*                       @VS07065*/
*           R15=FOUR;               /* INVALID PARAMETER ERROR     0173
*                                                            @VS07065*/
         LA    R15,4                                               0173
*           CALL ABEND0E3;          /* CALL ABEND SUBROUTINE @ZM42066*/
         BAL   @14,ABEND0E3                                        0174
*           RFY                                                    0175
*             R15 UNRSTD;           /*                       @VS07065*/
*         END;                      /*                       @VS07065*/
*                                                                  0176
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK IF NEW MAP PAGES ARE REQUIRED FOR THIS REQUEST AND  */
*       /* GETMAIN FOR MAP PAGES, ASSIGN NULL THEM (TO SIGNIFY TO RSM*/
*       /* THAT THEY BELONG TO VIO) AND SET DSPCT HDR TO POINT TO    */
*       /* THEM.                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0177
*       IF((R6/TEN24)+ONE)>VBPHNMP THEN                            0177
@RF00170 LR    @10,R6                                              0177
         SRL   @10,10                                              0177
         AL    @10,@CF00105                                        0177
         LH    @09,VBPHNMP(,R11)                                   0177
         CLR   @10,@09                                             0177
         BNH   @RF00177                                            0177
*         DO;                                                      0178
*                                                                  0178
*           /*********************************************************/
*           /*                                                       */
*           /* GETMAIN FOR MAP PAGES AND ASSIGN NULL THE MAP PAGES.  */
*           /* AT ENTRY INTO CHEKMPPG REG 6 WILL HAVE THE RELATIVE   */
*           /* PAGE OFFSET WHICH INCLUDES THE # OF MAP PAGES OF THE  */
*           /* LAST PAGE IN THE WINDOW FOR A READ REQUEST            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0179
*           CALL CHEKMPPG;                                         0179
         L     @15,@CV01152                                        0179
         BALR  @14,@15                                             0179
*         END;                                                     0180
*       MPNTRYOF=(R1//TEN24)*FOUR;  /* FIND OFFSET OF THE MAP PAGE 0181
*                                      ENTRY FOR THE 1ST PAGE TO BE
*                                      READ INTO THE WINDOW, FROM THE
*                                      BEGINNING OF THE MAP PAGE   0181
*                                                            @ZA02188*/
@RF00177 LR    MPNTRYOF,R1                                         0181
         N     MPNTRYOF,@CF01272                                   0181
         SLL   MPNTRYOF,2                                          0181
*       R3=ADDR(VBPHMAD)+((R1/TEN24)*FOUR);/* GET ADDRESSIBILITY TO
*                                      MAP PAGE THAT CONTAINS ENTRIES
*                                      FOR THE PAGE TO BE READ IN. 0182
*                                                            @ZA02188*/
         LA    R3,VBPHMAD(,R11)                                    0182
         LR    @10,R1                                              0182
         SRL   @10,10                                              0182
         SLL   @10,2                                               0182
         ALR   R3,@10                                              0182
*       DSPCTMPR=MAPPGPTR+MPNTRYOF; /* DSPCTMPR POINTS TO THE MAP  0183
*                                      PAGE ENTRY FOR THE 1ST PAGE TO
*                                      BE ASSIGNED           @ZA02188*/
*                                                                  0183
         LR    DSPCTMPR,MPNTRYOF                                   0183
         AL    DSPCTMPR,MAPPGPTR(,R3)                              0183
*       /*************************************************************/
*       /*                                                           */
*       /* SET VCBS FOR ASSIGN ONLY FOR THOSE PAGES THAT ALREADY     */
*       /* EXIST.                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0184
*       DO R1=R1 TO R6 WHILE VBPMRLPG=BITB;                        0184
         B     @DE00184                                            0184
@DL00184 TM    VBPMRLPG(DSPCTMPR),B'10000000'                      0184
         BNO   @DC00184                                            0184
*         R0=ONE;                                                  0185
         LA    R0,1                                                0185
*         VCBLINK=VCBNXT;           /* STORE IN VCBSAVAD ADDR OF 1ST
*                                      VCB FOR ASSIGN OR STORE IN  0186
*                                      VCBLINK FIELD ADDR OF NEXT VCB
*                                      IN THE CHAIN                  */
         ST    VCBNXT,VCBLINK(,VCBPTR)                             0186
*         VCBPTR=VCBNXT;            /* MAP VCB DSECT ON VCB IN DSPCT
*                                      HDR                           */
         LR    VCBPTR,VCBNXT                                       0187
*         VCBNXT=VCBNXT+LENGTH(VCB);/* VCBNXT POINTS TO NEXT VCB IN
*                                      THE CHAIN                     */
         AL    VCBNXT,@CF00127                                     0188
*         VCBLGOFF=R1;              /* SET LOGICAL GROUP PAGE OFFSET */
         ST    R1,VCBLGOFF(,VCBPTR)                                0189
*         VCBCPFLG=HEX00;           /* CLEAR COMPLETION FLAG @YM03910*/
*                                                                  0190
         MVI   VCBCPFLG(VCBPTR),B'00000000'                        0190
*         /***********************************************************/
*         /*                                                         */
*         /* IF RECLAIM IS NOT TO BE ATTEMPTED THEN PASS ZERO        */
*         /* DSPAGEID AND RSN.                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0191
*         IF R8=ZERO THEN                                          0191
         SLR   @10,@10                                             0191
         CLR   R8,@10                                              0191
         BNE   @RF00191                                            0191
*           DO;                                                    0192
*             VCBRSN=ZERO;          /* ZERO RSN                      */
         STH   @10,VCBRSN(,VCBPTR)                                 0193
*             VCBDSID=ZERO;         /* ZERO DSPAGEID                 */
         ST    @10,VCBDSID(,VCBPTR)                                0194
*           END;                                                   0195
*                                                                  0195
*         /***********************************************************/
*         /*                                                         */
*         /* ELSE BUILD DSPAGEID                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0196
*         ELSE                                                     0196
*           DO;                                                    0196
         B     @RC00191                                            0196
@RF00191 DS    0H                                                  0197
*             VCBDSN=R8;            /* MOVE DSPAGEID GENERATOR       */
         STH   R8,VCBDSN(,VCBPTR)                                  0197
*             VCBDSOFF=R1;          /* MOVE LPID OFFSET              */
         STH   R1,VCBDSOFF(,VCBPTR)                                0198
*             VCBRSN=VBPMRSN;       /* MOVE RSN FROM MAP PAGE ENTRY  */
         LH    @10,VBPMRSN(,DSPCTMPR)                              0199
         N     @10,@CF01271                                        0199
         STH   @10,VCBRSN(,VCBPTR)                                 0199
*           END;                                                   0200
*         MPNTRYOF=MPNTRYOF+FOUR;   /* MPNTRYOF HASINDEX OF RELATIVE
*                                      OFFSET OF MAP PAGE ENTRY FOR
*                                      THIS DATASET PAGE FROM THE  0201
*                                      BEGINNING OF THE MAP PAGE     */
*                                                                  0201
@RC00191 LA    @10,4                                               0201
         ALR   MPNTRYOF,@10                                        0201
*         /***********************************************************/
*         /*                                                         */
*         /* IF THIS WINDOW IS MAPPED WITH ENTRIES SPANNING TWO MAP  */
*         /* PAGES THEN INDEX TO NEXT MAP PAGE.                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0202
*         IF MPNTRYOF>=PAGESIZE THEN                               0202
         CL    MPNTRYOF,@CF01104                                   0202
         BL    @RF00202                                            0202
*           DO;                                                    0203
*             MPNTRYOF=ZERO;        /* REQUIRED MAP PAGE ENTRY IS AT
*                                      THE BEGINNING OF THE NEXT MAP
*                                      PAGE                          */
         SLR   MPNTRYOF,MPNTRYOF                                   0204
*             R3=R3+FOUR;           /* GET ADDRESSABILITY TO NEXT MAP
*                                      PAGE                          */
         ALR   R3,@10                                              0205
*             DSPCTMPR=MAPPGPTR;    /* GET ADDRESSABILITY TO MAP PAGE
*                                      ENTRY                         */
         L     DSPCTMPR,MAPPGPTR(,R3)                              0206
*           END;                                                   0207
*                                                                  0207
*         /***********************************************************/
*         /*                                                         */
*         /* ELSE REQUIRED MAP PAGE ENTRY IS ON THE SAME MAP PAGE    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0208
*         ELSE                                                     0208
*           DSPCTMPR=DSPCTMPR+FOUR; /* INDEX MAP PAGE ENTRY          */
         B     @RC00202                                            0208
@RF00202 AL    DSPCTMPR,@CF00083                                   0208
*       END;                                                       0209
@RC00202 AL    R1,@CF00105                                         0209
@DE00184 CLR   R1,R6                                               0209
         BNH   @DL00184                                            0209
@DC00184 DS    0H                                                  0210
*       RFY                                                        0210
*        (R1,                                                      0210
*         MPNTRYOF,                                                0210
*         R3,                                                      0210
*         DSPCTMPR,                                                0210
*         R6,                                                      0210
*         R8) UNRSTD;                                              0210
*                                                                  0210
*       /*************************************************************/
*       /*                                                           */
*       /* IF NONE OF THE PAGES EXIST FOR THE ENTIRE READ REQUEST    */
*       /* THEN SET FLAG IN THE INPUT PARM FIELD AND BYPASS ASSIGN   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0211
*       IF R0=ZERO THEN                                            0211
         LTR   R0,R0                                               0211
         BNZ   @RF00211                                            0211
*         DO;                                                      0212
*           BUFCNLAS=BITB;          /* SET NONEXISTING PAGE READ   0213
*                                      REQUESTED IN THE INPUT PARM 0213
*                                      FIELD                         */
*                                                                  0213
         L     @10,VBPHBUFC(,R11)                                  0213
         OI    BUFCNLAS(@10),B'01000000'                           0213
*           /*********************************************************/
*           /*                                                       */
*           /* IF WRITE NOT REQUESTED NOW AND                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0214
*           IF BUFCMW=NULLB THEN                                   0214
*                                                                  0214
         TM    BUFCMW(@10),B'10000000'                             0214
         BNZ   @RF00214                                            0214
*             /*******************************************************/
*             /*                                                     */
*             /* IF NO READ DONE ON PRIOR REQUEST THEN BYPASS ALL    */
*             /* PROCESSING                                          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0215
*             IF VBPHPAS=NULLB THEN                                0215
         TM    VBPHPAS(R11),B'00010000'                            0215
         BZ    @RT00215                                            0215
*               GO TO FINIS;                                       0216
*         END;                                                     0217
*                                                                  0217
*       /*************************************************************/
*       /*                                                           */
*       /* ELSE CLEAR INDICATOR IN INPUT PARM. LIST TO INDICATE      */
*       /* ASSIGN DONE IN THIS REQUEST.                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0218
*       ELSE                                                       0218
*         BUFCNLAS=NULLB;                                          0218
         B     @RC00211                                            0218
@RF00211 L     @01,VBPHBUFC(,R11)                                  0218
         NI    BUFCNLAS(@01),B'10111111'                           0218
*       RFY                                                        0219
*         R0 UNRSTD;                                               0219
@RC00211 DS    0H                                                  0220
*     END;                                                         0220
*                                                                  0220
*   /*****************************************************************/
*   /*                                                               */
*   /* ZERO THE LINK POINTER IN THE LAST VCB IN THE CHAIN    @Z40WSSR*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   VCBLINK=ZERO;                   /*                       @Z40WSSR*/
@RF00157 SLR   @10,@10                                             0221
         ST    @10,VCBLINK(,VCBPTR)                                0221
*   RFY                                                            0222
*    (VCBNXT,                                                      0222
*     VCBPTR) UNRSTD;               /*                       @Z40WSSR*/
*                                                                  0223
*   /*****************************************************************/
*   /*                                                               */
*   /* BRANCH TO RSM ASSIGN/MOVE OUT ROUTINE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   RFY                                                            0223
*    (R0,                                                          0223
*     R1,                                                          0223
*     R2) RSTD;                                                    0223
*   R1=VCBSAVAD;                    /* LOAD REG 1 WITH THE ADDRESS OF
*                                      FIRST VCB TO BE PASSED TO RSM */
         L     @10,VBPHVCB(,R11)                                   0224
         L     R1,VCBSAVAD(,@10)                                   0224
*   R0=PSATOLD;                     /* LOAD REG 0 WITH TCB ADDR    0225
*                                                            @Z40WSSR*/
         L     R0,PSATOLD                                          0225
*   CALL CVTVSI;                    /* BRANCH TO RSM PAGING ROUTINE  */
         L     @10,CVTPTR                                          0226
         L     @15,CVTVSI(,@10)                                    0226
         BALR  @14,@15                                             0226
*   RFY                                                            0227
*     R15 RSTD;                                                    0227
*                                                                  0227
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MOVE OUT IS UNSUCCESSFUL THEN ABEND TO PASS CONTROL TO     */
*   /* IDAVBPR1 -VBP FRR ROUTINE VIA RECOVERY MANAGEMENT SERVICES IF */
*   /* ASSIGN IS UNSUCCESSFUL THEN DIAGNOSE FAILURE AND ATTEMPT TO   */
*   /* RECOVER WHERE POSSIBLE.                               @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0228
*   RESPECIFY                                                      0228
*     VCBPTR RESTRICTED;            /*                       @ZA05535*/
*   IF R15>ZERO THEN                                               0229
         CL    R15,@CF00075                                        0229
         BNH   @RF00229                                            0229
*     DO;                                                          0230
*       R15=R15+RSMERROR;           /* LOAD REG 15 WITH            0231
*                                      MOVEOUT/ASSIGN ERROR        0231
*                                      COMPLETION CODE               */
*                                                                  0231
         AL    R15,@CF00379                                        0231
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK IF RSM WAS UNABLE TO ASSIGN BECAUSE THIS PAGE HAD   */
*       /* BEEN REFERENCED                                   @ZA05535*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0232
*       IF BUFCRRD=BITB             /* IF ASSIGN AND NOT     @ZA05535*/
*           &BUFCNLAS=NULLB THEN    /* BEYOND EXTENTS        @ZA05535*/
         L     @14,VBPHBUFC(,R11)                                  0232
         TM    BUFCRRD(@14),B'00100000'                            0232
         BNO   @RF00232                                            0232
         TM    BUFCNLAS(@14),B'01000000'                           0232
         BNZ   @RF00232                                            0232
*         DO;                       /* YES                   @ZA05535*/
*                                                                  0233
*           /*********************************************************/
*           /*                                                       */
*           /* SEARCH FOR THE ERROR VCB                      @ZA05535*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0234
*           VCBPTR=VBPVAPTR;        /* FIRST ASSIGN VCB      @ZM42066*/
         L     @14,VBPHVCB(,R11)                                   0234
         L     VCBPTR,VBPVAPTR(,@14)                               0234
*           DO WHILE VCBPTR^=0&VCBCPFLG=0;/* SEARCH ALL VCBS @ZA05535*/
         B     @DE00235                                            0235
@DL00235 DS    0H                                                  0236
*             VCBPTR=VCBLINK;       /* NEXT VCB              @ZA05535*/
         L     VCBPTR,VCBLINK(,VCBPTR)                             0236
*           END;                    /*                       @ZA05535*/
@DE00235 LTR   VCBPTR,VCBPTR                                       0237
         BZ    @DC00235                                            0237
         CLI   VCBCPFLG(VCBPTR),0                                  0237
         BE    @DL00235                                            0237
@DC00235 DS    0H                                                  0238
*           IF VCBPTR^=0            /* CHECK IF PAGE         @ZA05535*/
*               &VCBNOVAC=BITB THEN /* REFERENCED ERROR      @ZA05535*/
         LTR   VCBPTR,VCBPTR                                       0238
         BZ    @RF00238                                            0238
         TM    VCBNOVAC(VCBPTR),B'10000000'                        0238
         BNO   @RF00238                                            0238
*             CALL ASSGNERR;        /* PAGE REFERENCED ERROR @ZA05535*/
         BAL   @14,ASSGNERR                                        0239
*           ELSE                    /*                       @ZA05535*/
*             CALL ABEND0E3;        /* NOT SUSPECTED ERROR - ABEND 0240
*                                                            @ZA05535*/
         B     @RC00238                                            0240
@RF00238 BAL   @14,ABEND0E3                                        0240
*         END;                      /*                       @ZA05535*/
*       ELSE                        /*                       @ZA13581*/
*         CALL ABEND0E3;            /* NOT RECOVERABLE - ABEND     0242
*                                                            @ZA13581*/
         B     @RC00232                                            0242
@RF00232 BAL   @14,ABEND0E3                                        0242
*     END;                                                         0243
@RC00232 DS    0H                                                  0244
*   RFY                                                            0244
*    (R0,                                                          0244
*     R1,                                                          0244
*     R2,                                                          0244
*     VCBPTR,                                                      0244
*     R15) UNRSTD;                  /*                       @ZA05535*/
@RF00229 DS    0H                                                  0245
*                                                                  0245
*   /*****************************************************************/
*   /*                                                               */
*   /* IF WRITE REQUESTED THEN UPDATE MAP PAGE ENTRIES WITH REAL     */
*   /* STORAGE# (RSN) PASSED BY RSM. FOR LATER USE IN RECLAIMING VIA */
*   /* ASSIGN COMMAND                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0245
*   IF BUFCMW=BITB THEN                                            0245
         L     @10,VBPHBUFC(,R11)                                  0245
         TM    BUFCMW(@10),B'10000000'                             0245
         BNO   @RF00245                                            0245
*     DO;                                                          0246
*       RFY                                                        0247
*        (R1,                                                      0247
*         MPNTRYOF,                                                0247
*         VCBPTR,                                                  0247
*         R3,                                                      0247
*         DSPCTMPR) RSTD;                                          0247
*       VBPHPAS=NULLB;              /* CLEAR ASSIGN DONE BIT         */
         NI    VBPHPAS(R11),B'11101111'                            0248
*       R1=(BUFCORBA/PAGESIZE)+VBPHMMP;/* GET RELATIVE PAGE OFFSET OF
*                                      1ST PAGE WRITTEN FROM THE   0249
*                                      WINDOW.                       */
         L     R1,BUFCORBA(,@10)                                   0249
         SRL   R1,12                                               0249
         LH    @10,VBPHMMP(,R11)                                   0249
         ALR   R1,@10                                              0249
*       VCBPTR=ADDR(VBPVMOVE);      /* LOAD VCBPTR WITH ADDR OF 1ST
*                                      VCB SET FOR MOVEOUT   @Z40WSSR*/
         L     VCBPTR,VBPHVCB(,R11)                                0250
         LA    VCBPTR,VBPVMOVE(,VCBPTR)                            0250
*       MPNTRYOF=(R1//TEN24)*FOUR;  /* GET OFFSET OF THE MAP PAGE  0251
*                                      ENTRY FOR THIS DATA SET PAGE
*                                      FROM THE BEGINNING OF THE MAP
*                                      PAGE                          */
         LR    MPNTRYOF,R1                                         0251
         N     MPNTRYOF,@CF01272                                   0251
         SLL   MPNTRYOF,2                                          0251
*       R3=ADDR(VBPHMAD)+((R1/TEN24)*FOUR);/* SET ADDRESSIBILITY TO
*                                      MAP PAGE                      */
         LA    R3,VBPHMAD(,R11)                                    0252
         LR    @10,R1                                              0252
         SRL   @10,10                                              0252
         SLL   @10,2                                               0252
         ALR   R3,@10                                              0252
*       DSPCTMPR=MPNTRYOF+MAPPGPTR; /* DSPCTMPR NOW POINTS TO THE MAP
*                                      PAGE ENTRY                    */
*                                                                  0253
         LR    DSPCTMPR,MPNTRYOF                                   0253
         AL    DSPCTMPR,MAPPGPTR(,R3)                              0253
*       /*************************************************************/
*       /*                                                           */
*       /* INDEX MOVE OUT VCBS                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0254
*       DO WHILE VCBMVOUT=BITB&VCBPTR^=0;/* FOR ALL MOVED OUT VCBS   */
*                                                                  0254
         B     @DE00254                                            0254
@DL00254 DS    0H                                                  0255
*         /***********************************************************/
*         /*                                                         */
*         /* IF PAGE WAS WRITTEN OUT BY RSM THEN                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0255
*         IF VCBNOAUX=NULLB THEN                                   0255
         TM    VCBNOAUX(VCBPTR),B'00010000'                        0255
         BNZ   @RF00255                                            0255
*           DO;                                                    0256
*                                                                  0256
*             /*******************************************************/
*             /*                                                     */
*             /* NEW OR MODIFIED PAGES, THEN SET JOURNAL FLAG ON TO  */
*             /* INDICATE JOURNALLING REQUIRED                       */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0257
*             VBPHJRN=BITB;         /* SET DSPCT JOURNALING & DATASET
*                                      SAVEING REQUIRED FLAG @Z40WSSR*/
         OI    VBPHJRN(R11),B'00000010'                            0257
*             VBPMRLPG=BITB;        /* UPDATE FIELD IN MAP PAGE ENTRY
*                                      TO INDICATE PAGE ADDED TO   0258
*                                      LOGICAL GROUP                 */
         OI    VBPMRLPG(DSPCTMPR),B'10000000'                      0258
*             VBPMRSN=VCBRSN;       /* MOVE RSN INTO MAP PAGE ENTRY  */
         LH    @10,VCBRSN(,VCBPTR)                                 0259
         N     @10,@CF01271                                        0259
         STH   @10,VBPMRSN(,DSPCTMPR)                              0259
*           END;                                                   0260
*         MPNTRYOF=MPNTRYOF+FOUR;   /* BUMP COUNTER THAT HAS OFFSET
*                                      OF MAP ENTRY FROM BEGINNING OF
*                                      MAP PAGE                      */
*                                                                  0261
@RF00255 LA    @10,4                                               0261
         ALR   MPNTRYOF,@10                                        0261
*         /***********************************************************/
*         /*                                                         */
*         /* IF ENTRY FOR THIS PAGE IS ON NEXT MAP PAGE THEN         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0262
*         IF MPNTRYOF>=PAGESIZE THEN                               0262
         CL    MPNTRYOF,@CF01104                                   0262
         BL    @RF00262                                            0262
*           DO;                                                    0263
*             MPNTRYOF=ZERO;        /* MAP PAGE ENTRY WILL BE AT THE
*                                      START OF NEXT PAGE            */
         SLR   MPNTRYOF,MPNTRYOF                                   0264
*             R3=R3+FOUR;           /* INDEX TO NEXT MAP PAGE POINTER
*                                      IN DSPCT HDR                  */
         ALR   R3,@10                                              0265
*             DSPCTMPR=MAPPGPTR;    /* DSPCTMPR POINTS TO NEXT MAP 0266
*                                      PAGE ENTRY                    */
         L     DSPCTMPR,MAPPGPTR(,R3)                              0266
*           END;                                                   0267
*                                                                  0267
*         /***********************************************************/
*         /*                                                         */
*         /* ELSE THE NEXT MAP PAGE ENTRY IS ON SAME MAP PAGE        */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0268
*         ELSE                                                     0268
*           DSPCTMPR=DSPCTMPR+FOUR; /* INDEX DSPCTMPR TO NEXT MAP  0268
*                                      PAGE ENTRY                    */
         B     @RC00262                                            0268
@RF00262 AL    DSPCTMPR,@CF00083                                   0268
*         VCBPTR=VCBLINK;           /* INDEX VCBPTR TO POINT TO NEXT
*                                      VCB                           */
@RC00262 L     VCBPTR,VCBLINK(,VCBPTR)                             0269
*       END;                                                       0270
@DE00254 TM    VCBMVOUT(VCBPTR),B'10000000'                        0270
         BNO   @DC00254                                            0270
         LTR   VCBPTR,VCBPTR                                       0270
         BNZ   @DL00254                                            0270
@DC00254 DS    0H                                                  0271
*       RFY                                                        0271
*        (R1,                                                      0271
*         MPNTRYOF,                                                0271
*         R3,                                                      0271
*         VCBPTR,                                                  0271
*         DSPCTMPR) UNRSTD;                                        0271
*     END;                                                         0272
*                                                                  0273
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ANY MOVE OUT NULL DONE THIS TIME THEN SAVE RSN PASSED BY   */
*   /* RSM IN THE RESPECTIVE MAP PAGE ENTRIES FOR LATER USE IN       */
*   /* RECLAIMING VIA AN ASSIGN COMMAND                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0273
*   ELSE                                                           0273
*     IF VBPHPAS=BITB THEN                                         0273
         B     @RC00245                                            0273
@RF00245 TM    VBPHPAS(R11),B'00010000'                            0273
         BNO   @RF00273                                            0273
*       DO;                         /* DID I DO ANY MOVE OUT NULL?   */
*         RFY                                                      0275
*          (R1,                                                    0275
*           MPNTRYOF,                                              0275
*           R3,                                                    0275
*           DSPCTMPR,                                              0275
*           VCBPTR,                                                0275
*           R6) RSTD;                                              0275
*         VBPHPAS=NULLB;            /* CLEAR ASSIGN DONE BIT         */
         NI    VBPHPAS(R11),B'11101111'                            0276
*         MPNTRYOF=(VBPHPRL//TEN24)*FOUR;/* GET OFFSET FOR THIS PAGE
*                                      FROM THE BEGINNING OF THE MAP
*                                      PAGE                          */
         L     @10,VBPHPRL(,R11)                                   0277
         LR    MPNTRYOF,@10                                        0277
         N     MPNTRYOF,@CF01272                                   0277
         SLL   MPNTRYOF,2                                          0277
*         R3=ADDR(VBPHMAD)+((VBPHPRL/TEN24)*FOUR);/* FIND ADDR. OF 0278
*                                      MAP PAGE POINTER FOR THIS MAP
*                                      PAGE                          */
         LA    R3,VBPHMAD(,R11)                                    0278
         SRL   @10,10                                              0278
         SLL   @10,2                                               0278
         ALR   R3,@10                                              0278
*         DSPCTMPR=MPNTRYOF+MAPPGPTR;/* DSPCTMPR NOW POINTS TO THE 0279
*                                      MAP PAGE ENTRY FOR THE 1ST VCB
*                                      FOR MOVEOUT NULL              */
         LR    DSPCTMPR,MPNTRYOF                                   0279
         AL    DSPCTMPR,MAPPGPTR(,R3)                              0279
*         VCBPTR=ADDR(VBPVMOVE);    /* SET VCB TEMPLATE ON 1ST MOVE
*                                      OUT NULL VCB          @Z40WSSR*/
         L     VCBPTR,VBPHVCB(,R11)                                0280
         LA    VCBPTR,VBPVMOVE(,VCBPTR)                            0280
*         R6=VBPHPNP;               /* LOAD R6 WITH # OF MOVE OUT  0281
*                                      NULLS -1                      */
         LH    R6,VBPHPNP(,R11)                                    0281
*         DO R1=ZERO TO R6;         /* INDEX THRU ALL MOVE OUT NULLS */
         SLR   R1,R1                                               0282
         B     @DE00282                                            0282
@DL00282 DS    0H                                                  0283
*           VBPMRSN=VCBRSN;         /* STORE RSN RETURNED BY RSM IN
*                                      MAP PAGE ENTRY                */
         LH    @10,VCBRSN(,VCBPTR)                                 0283
         N     @10,@CF01271                                        0283
         STH   @10,VBPMRSN(,DSPCTMPR)                              0283
*           MPNTRYOF=MPNTRYOF+FOUR; /* INDEX MAP PAGE ENTRY          */
*                                                                  0284
         LA    @10,4                                               0284
         ALR   MPNTRYOF,@10                                        0284
*           /*********************************************************/
*           /*                                                       */
*           /* IF NEXT MAP PAGE ENTRY IS OUTSIDE THE MAP PAGE THEN   */
*           /* INDEX TO THE NEXT MAP PAGE                            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0285
*           IF MPNTRYOF>=PAGESIZE THEN                             0285
         CL    MPNTRYOF,@CF01104                                   0285
         BL    @RF00285                                            0285
*             DO;                                                  0286
*               MPNTRYOF=ZERO;      /* NEXT MAP PAGE ENTRY IS AT THE
*                                      START OF NEXT MAP PAGE        */
         SLR   MPNTRYOF,MPNTRYOF                                   0287
*               R3=R3+FOUR;         /* INDEX TO NEXT MAP PAGE POINTER
*                                      IN DSPCT HEADER               */
         ALR   R3,@10                                              0288
*               DSPCTMPR=MAPPGPTR;  /* DSPCTMPR POINTS TO NEXT MAP 0289
*                                      PAGE ENTRY                    */
         L     DSPCTMPR,MAPPGPTR(,R3)                              0289
*             END;                                                 0290
*                                                                  0290
*           /*********************************************************/
*           /*                                                       */
*           /* ELSE NEXT MAP PAGE ENTRY IS ON THIS MAP PAGE ITSELF   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0291
*           ELSE                                                   0291
*             DSPCTMPR=DSPCTMPR+FOUR;                              0291
         B     @RC00285                                            0291
@RF00285 AL    DSPCTMPR,@CF00083                                   0291
*           VCBPTR=VCBLINK;         /* INDEX VCBPTR TO POINT TO NEXT
*                                      VCB                           */
@RC00285 L     VCBPTR,VCBLINK(,VCBPTR)                             0292
*         END;                                                     0293
         AL    R1,@CF00105                                         0293
@DE00282 CLR   R1,R6                                               0293
         BNH   @DL00282                                            0293
*         RFY                                                      0294
*          (R1,                                                    0294
*           MPNTRYOF,                                              0294
*           R3,                                                    0294
*           VCBPTR,                                                0294
*           DSPCTMPR,                                              0294
*           R6) UNRSTD;                                            0294
*       END;                                                       0295
*                                                                  0296
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ASSIGN DONE THIS TIME THEN RESET PRIOR REQUEST FIELDS IN   */
*   /* DSPCT HEADER WITH DATA FROM THIS ASSIGN REQUEST               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0296
*   IF BUFCRRD=BITB THEN            /* IF READ REQUESTED             */
*                                                                  0296
@RF00273 DS    0H                                                  0296
@RC00245 L     @10,VBPHBUFC(,R11)                                  0296
         TM    BUFCRRD(@10),B'00100000'                            0296
         BNO   @RF00296                                            0296
*     /***************************************************************/
*     /*                                                             */
*     /* AND ASSIGN DONE THEN                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0297
*     IF BUFCNLAS=NULLB THEN                                       0297
         TM    BUFCNLAS(@10),B'01000000'                           0297
         BNZ   @RF00297                                            0297
*       DO;                                                        0298
*         RFY                                                      0299
*           VCBPTR RSTD;                                           0299
*         VCBPTR=ADDR(VBPVASIN);    /* SET VCB TEMPLATE ON 1ST ASSIGN
*                                      VCB                   @Z40WSSR*/
         L     @10,VBPHVCB(,R11)                                   0300
         L     VCBPTR,VBPVAPTR(,@10)                               0300
*         VBPHPNP=ZERO;             /* ZERO PRIOR # OF PAGES ASSIGNED*/
         SLR   @10,@10                                             0301
         STH   @10,VBPHPNP(,R11)                                   0301
*         VBPHPAS=BITB;             /* SET PRIOR ASSIGN DONE       0302
*                                      INDICATOR                     */
         OI    VBPHPAS(R11),B'00010000'                            0302
*         VBPHPRL=VCBLGOFF;         /* SET REL. PAGE OFFSET OF 1ST 0303
*                                      PAGE IN THE WINDOW ASSIGNED   */
*                                                                  0303
         L     @10,VCBLGOFF(,VCBPTR)                               0303
         ST    @10,VBPHPRL(,R11)                                   0303
*         /***********************************************************/
*         /*                                                         */
*         /* FIND # OF PAGES ASSIGNED THIS TIME                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0304
*         DO WHILE VCBLINK^=ZERO;                                  0304
         B     @DE00304                                            0304
@DL00304 DS    0H                                                  0305
*           VCBPTR=VCBLINK;         /* BUMP VCB PTR TO POINT TO NEXT
*                                      ASSIGN VCB                    */
         L     VCBPTR,VCBLINK(,VCBPTR)                             0305
*           VBPHPNP=VBPHPNP+ONE;    /* INCREMENT COUNTER FOR THE # OF
*                                      PAGES ASSIGNED THIS TIME      */
         LA    @10,1                                               0306
         AH    @10,VBPHPNP(,R11)                                   0306
         STH   @10,VBPHPNP(,R11)                                   0306
*         END;                                                     0307
@DE00304 L     @10,VCBLINK(,VCBPTR)                                0307
         LTR   @10,@10                                             0307
         BNZ   @DL00304                                            0307
*       END;                                                       0308
*                                                                  0308
*   /*****************************************************************/
*   /*                                                               */
*   /* NOTE: AT THE END OF THE DO WHILE LOOP VBPHPNP COUNTER WILL    */
*   /* HAVE 1 LESS THAN THE # OF ASSIGNS DONE IN THIS REQUEST        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0309
*   RFY                                                            0309
*    (VCBPTR) UNRSTD;                                              0309
@RF00297 DS    0H                                                  0309
@RF00296 DS    0H                                                  0310
*                                                                  0310
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOVE FUNCTIONAL RECOVERY ENVIRONMENT                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0310
*FINIS:                                                            0310
*   RFY                                                            0310
*    (R2,                                                          0310
*     R3) RSTD;                                                    0310
FINIS    DS    0H                                                  0311
*   GEN CODE REFS(FRRS,PSA,PSACSTK,FRRSEMP,FRRSCURR,FRRSELEN) SETS(
*       FRRSCURR) NOEXIT NOFLOWS;                                  0311
  SETFRR  D,WRKREGS=(2,3)
*   RFY                                                            0312
*    (R2,                                                          0312
*     R3) UNRSTD;                                                  0312
*   VBPHRW=NULLB;                   /* CLEAR IDAVBPP1 IN PROGRESS  0313
*                                      FLAG                          */
*                                                                  0313
         NI    VBPHRW(R11),B'10111111'                             0313
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO INVOKER OF IDAVBPP1                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   GEN CODE;                                                      0314
*                                                         /*@YM03872*/
        L     R13,4(,R13)            LOAD R13 WITH CALLERS SAVE ADDR
        LM    R14,R12,12(R13)    RESTORE CALLERS REGS.
        BR    R14             BRANCH TO CALLER
*ASSGNERR:                                                         0315
*   PROC OPTIONS(NOSAVE);           /*                       @ZA05535*/
*                                                                  0315
@EL00001 DS    0H                                                  0315
@EF00001 DS    0H                                                  0315
@ER00001 BR    @14                                                 0315
ASSGNERR DS    0H                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* FUNCTION - TO CHAIN MOVEOUT-NULL VCB'S AHEAD OF THE FAILING   */
*   /* AND SUBSEQUENT ASSIGN VCB'S SO THAT RSM WILL CLEAR THE PAGE   */
*   /* TABLE ENTRIES FOR THE PAGES WE ARE ATTEMTING TO ASSIGN (READ  */
*   /* IN). THIS SHOULD ALLOW THE ASSIGNS TO BE SUCCESSFUL ON THIS   */
*   /* SECOND PASS.                                          @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   RESPECIFY                                                      0316
*    (VCBPTR2,                                                     0316
*     VCBNXT,                                                      0316
*     GPR15F,                                                      0316
*     GPR14F,                                                      0316
*     VCBPTR,                                                      0316
*     R1) RSTD;                     /*                       @ZA12937*/
*   SAVERG14=GPR14F;                /* SAVE RETURN VECTOR    @ZA05535*/
         ST    GPR14F,SAVERG14(,R11)                               0317
*   RESPECIFY                                                      0318
*     GPR14F UNRESTRICTED;          /*                       @ZA05535*/
*   VCBPTR2=VCBSAVAD;               /* FIRST VCB SCEDULED    @ZA05535*/
         L     @14,VBPHVCB(,R11)                                   0319
         L     @14,VCBSAVAD(,@14)                                  0319
         LR    VCBPTR2,@14                                         0319
*   SAVE1VCB=VCBSAVAD;              /* SAVE TO RESTORE THE CHAIN   0320
*                                                            @ZA05535*/
         ST    @14,SAVE1VCB(,R11)                                  0320
*   SAVE2VCB=VCBPTR;                /* SAVE ADDRESS OF FAILING ASSIGN
*                                                            @ZA05535*/
*                                                                  0321
         ST    VCBPTR,SAVE2VCB(,R11)                               0321
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF PAGE THAT WAS REFERENCED (CAUSING THE NON-ZERO RETURN*/
*   /* CODE FROM RSM) WAS ALSO A PAGE THAT HAD BEEN MOVED OUT BY     */
*   /* ANOTHER VCB IN THE ORIGINAL CHAIN. IF SO, ABEND       @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*   DO WHILE VCBPTR2->VCBMVOUT=BITB;/* PROCESS ALL MOVE OUTS         */
*                                                                  0322
         B     @DE00322                                            0322
@DL00322 DS    0H                                                  0323
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK TO SEE IF ERROR PAGE (ASSIGN) WAS ALSO MOVED OUT      */
*     /* (WRITTEN) IN THE ORIGINAL VCB CHAIN                 @ZA05535*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0323
*     IF VCBVSA=VCBPTR2->VCBVSA THEN                               0323
         CLC   VCBVSA(4,VCBPTR),VCBVSA(VCBPTR2)                    0323
         BNE   @RF00323                                            0323
*       CALL ABEND0E3;              /* SAME PAGE - ABEND     @ZA05535*/
         BAL   @14,ABEND0E3                                        0324
*     ELSE                                                         0325
*       VCBPTR2=VCBPTR2->VCBLINK;   /* GET NEXT MOVE OUT     @ZA05535*/
         B     @RC00323                                            0325
@RF00323 L     VCBPTR2,VCBLINK(,VCBPTR2)                           0325
*   END;                            /*                       @ZA05535*/
*                                                                  0326
@RC00323 DS    0H                                                  0326
@DE00322 TM    VCBMVOUT(VCBPTR2),B'10000000'                       0326
         BO    @DL00322                                            0326
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD VCB CHAIN TO MOVEOUT NULL THE REMAINING PAGES AND CHAIN */
*   /* REMAINDER OF ASSIGNS                                  @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0327
*   VCBNXT=VCBPTR-VBPVAPTR+ADDR(VBPVMOVE(1));/* FIRST MOVEOUT NULL 0327
*                                      VCB TO BE SCHEDULED   @ZM42066*/
         L     @14,VBPHVCB(,R11)                                   0327
         LR    VCBNXT,VCBPTR                                       0327
         SL    VCBNXT,VBPVAPTR(,@14)                               0327
         LA    @10,VBPVMOVE(,@14)                                  0327
         ALR   VCBNXT,@10                                          0327
*   R1=VCBNXT;                      /* SET PARM REG FOR RSM  @ZA12937*/
         LR    R1,VCBNXT                                           0328
*   VCBPTR2=ADDR(VCBSAVAD);         /* START OF ORIGINAL VCB CHAIN 0329
*                                                            @ZA05535*/
         LA    VCBPTR2,VCBSAVAD(,@14)                              0329
*/* CHAIN UP VCBS                                            @ZA05535*/
*                                                                  0330
*   DO WHILE VCBPTR^=0;             /* PROCESS REMAINING ASSIGNS   0330
*                                                            @ZA05535*/
         B     @DE00330                                            0330
@DL00330 DS    0H                                                  0331
*     VCBPTR2->VCBLINK=VCBNXT;      /* CHAIN MOVEOUT VCBS    @ZA05535*/
         ST    VCBNXT,VCBLINK(,VCBPTR2)                            0331
*     VCBPTR2=VCBNXT;               /* SAVE ADDR OF CURRENT VCB    0332
*                                                            @ZA05535*/
         LR    VCBPTR2,VCBNXT                                      0332
*     VCBNXT=VCBNXT+LENGTH(VCB);    /* INCREMENT TO NEXT VCB @ZA05535*/
         AL    VCBNXT,@CF00127                                     0333
*     VCBPTR2->VCBCPFLG=ZERO;       /* CLEAR ERROR FLAG      @ZA05535*/
         MVI   VCBCPFLG(VCBPTR2),X'00'                             0334
*     VCBCPFLG=ZERO;                /* CLEAR ERROR FLAG      @ZA05535*/
         MVI   VCBCPFLG(VCBPTR),X'00'                              0335
*     VCBPTR=VCBLINK;               /* NEXT ASSIGN VCB       @ZA05535*/
         L     VCBPTR,VCBLINK(,VCBPTR)                             0336
*   END;                            /*                       @ZA05535*/
@DE00330 LTR   VCBPTR,VCBPTR                                       0337
         BNZ   @DL00330                                            0337
*   VCBPTR2->VCBLINK=SAVE2VCB;      /* CHAIN LAST MOVE OUT TO FIRST
*                                      ASSIGN VCB            @ZA05535*/
*                                                                  0338
         L     @14,SAVE2VCB(,R11)                                  0338
         ST    @14,VCBLINK(,VCBPTR2)                               0338
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL RSM TO PROCESS MOVEOUT NULLS AND ASSIGNS         @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0339
*   RESPECIFY                                                      0339
*     R0 RESTRICTED;                /*                       @ZA05535*/
*   R0=PSATOLD;                     /* GET TCB ADDRESS       @ZA05535*/
         L     R0,PSATOLD                                          0340
*   CALL CVTVSI;                    /* LINK TO RSM           @ZA05535*/
*                                                                  0341
         L     @10,CVTPTR                                          0341
         L     @15,CVTVSI(,@10)                                    0341
         BALR  @14,@15                                             0341
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR ANOUTHER ERROR IN RSM                       @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0342
*   IF R15^=0 THEN                                                 0342
         LTR   R15,R15                                             0342
         BZ    @RF00342                                            0342
*     DO;                           /*                       @ZA05535*/
*       R15=R15+RSMERROR;           /* ERROR CODE            @ZA05535*/
         AL    R15,@CF00379                                        0344
*       CALL ABEND0E3;              /* ABEND                 @ZA05535*/
         BAL   @14,ABEND0E3                                        0345
*     END;                          /*                       @ZA05535*/
*                                                                  0346
*   /*****************************************************************/
*   /*                                                               */
*   /* RECHAIN ORIGINAL VCBS                                 @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0347
*   VCBSAVAD=SAVE1VCB;              /*                       @ZA05535*/
@RF00342 L     @14,VBPHVCB(,R11)                                   0347
         L     @10,SAVE1VCB(,R11)                                  0347
         ST    @10,VCBSAVAD(,@14)                                  0347
*   RESPECIFY                                                      0348
*     GPR14F RESTRICTED;            /*                       @ZA05535*/
*   GPR14F=SAVERG14;                /* RESTORE RETURN VECTOR @ZA05535*/
         L     GPR14F,SAVERG14(,R11)                               0349
*   RFY                                                            0350
*    (VCBPTR2,                                                     0350
*     VCBNXT,                                                      0350
*     GPR14F,                                                      0350
*     GPR15F,                                                      0350
*     VCBPTR,                                                      0350
*     R0,                                                          0350
*     R1) UNRSTD;                   /*                       @ZA12937*/
*   END ASSGNERR;                   /*                       @ZA05535*/
@EL00002 DS    0H                                                  0351
@EF00002 DS    0H                                                  0351
@ER00002 BR    @14                                                 0351
*ABEND0E3:                                                         0352
*   PROC OPTIONS(SAVE);             /*                       @ZA05535*/
*                                                                  0352
ABEND0E3 STM   @14,@12,12(@13)                                     0352
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE A 0E3 ABEND INORDER TO PASS CONTROL TO THE FUNCTIONAL   */
*   /* RECOVERY ROUTINES                                     @ZA05535*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0353
*   DO;                             /* ABEND (227) SYSTEM    @ZA05535*/
*     RFY                                                          0354
*      (GPR01F) RSTD;               /*                       @ZA05535*/
*     GPR01F=((227)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19    0355
*                                                            @ZA05535*/
         L     GPR01F,@CF01270                                     0355
*     SVC(13);                      /* ISSUE ABEND SVC       @ZA05535*/
         SVC   13                                                  0356
*     RFY                                                          0357
*      (GPR01F) UNRSTD;             /*                       @ZA05535*/
*   END;                            /*                       @ZA05535*/
*   END ABEND0E3;                   /*                       @ZA05535*/
@EL00003 DS    0H                                                  0359
@EF00003 DS    0H                                                  0359
@ER00003 LM    @14,@12,12(@13)                                     0359
         BR    @14                                                 0359
*   END IDAVBPP1                    /*                       @ZA05535*/
*                                                                  0360
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IDAVBPH )                                       */
*/*%INCLUDE SYSLIB  (IDAVBPM )                                       */
*/*%INCLUDE SYSLIB  (IHAVCB  )                                       */
*/*%INCLUDE SYSLIB  (IDAVBPI )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*                                                                  0360
*       ;                                                          0360
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDAVBPP1 CSECT
         DS    0F
@CF00075 DC    F'0'
@CF00105 DC    F'1'
@CF00083 DC    F'4'
@CF00127 DC    F'24'
@CF00379 DC    F'512'
@CF01272 DC    F'1023'
@CF01104 DC    F'4096'
@CF01232 DC    F'65536'
@CF01270 DC    F'929792'
@CF01271 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
FRRSPTR  DS    A
FRREPTR  DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDAVBPP1 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01151 DC    V(IDAVBPR1)
@CV01152 DC    V(CHEKMPPG)
         DS    0D
VREADPTC DC    CL50'PATCH AREA                                        '
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GPR01F   EQU   @01
GPR14F   EQU   @14
GPR15F   EQU   @15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
MPNTRYOF EQU   @02
R3       EQU   @03
R4       EQU   @04
VCBPTR   EQU   @04
DSPCTMPR EQU   @05
R6       EQU   @06
VCBPTR2  EQU   @06
VCBNXT   EQU   @07
R8       EQU   @08
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R15      EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
R14      EQU   @14
R7       EQU   @07
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
OLDSAV   EQU   0
OSAVREG  EQU   OLDSAV+8
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
VBPDSPCT EQU   0
VBPHFIX  EQU   VBPDSPCT
VBPHJJ   EQU   VBPHFIX
VBPHLGN  EQU   VBPHJJ+8
VBPHLGID EQU   VBPHLGN
VBPHSYM  EQU   VBPHJJ+16
VBPHPNP  EQU   VBPHJJ+24
VBPHDSG  EQU   VBPHJJ+26
VBPHDSSZ EQU   VBPHJJ+28
VBPHOPT  EQU   VBPHJJ+32
VBPHPAS  EQU   VBPHOPT
VBPHJRN  EQU   VBPHOPT
VBPHSTA  EQU   VBPHJJ+33
VBPHRW   EQU   VBPHSTA
VBPHNMP  EQU   VBPHJJ+34
VBPHMMP  EQU   VBPHJJ+36
VBPHWSZ  EQU   VBPHJJ+38
VBPHPRL  EQU   VBPHJJ+44
VBPHBUFC EQU   VBPHFIX+52
VBPHFRAR EQU   VBPHFIX+56
VBPHVCB  EQU   VBPHFIX+60
VBPHSAVE EQU   VBPHFIX+64
VBPHSAVO EQU   VBPHSAVE+4
SECSAVE  EQU   VBPHFIX+136
VBPHMAD  EQU   VBPDSPCT+216
VBPVCB   EQU   0
VBPVFXD  EQU   VBPVCB
VCBSAVAD EQU   VBPVFXD+32
VBPVAPTR EQU   VBPVFXD+36
VBPVMOVE EQU   VBPVCB+40
VBPVASIN EQU   0
MAPPGPTR EQU   0
VBPMAPE  EQU   0
VBPMFLG  EQU   VBPMAPE
VBPMRLPG EQU   VBPMFLG
VBPMRSN  EQU   VBPMAPE+2
VCB      EQU   0
VCBLINK  EQU   VCB
VCBVSA   EQU   VCB+4
VCBOPFLG EQU   VCB+16
VCBMVOUT EQU   VCBOPFLG
VCBCPFLG EQU   VCB+17
VCBNOVAC EQU   VCBCPFLG
VCBNOAUX EQU   VCBCPFLG
VCBRSN   EQU   VCB+18
VBPMOD   EQU   0
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCIOFL EQU   IDABUFC+2
BUFCMW   EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCFLG2 EQU   IDABUFC+3
BUFCNLAS EQU   BUFCFLG2
BUFCPLH  EQU   IDABUFC+4
BUFCDDDD EQU   IDABUFC+8
BUFCORBA EQU   IDABUFC+12
BUFCINV  EQU   IDABUFC+28
BUFCWLEN EQU   BUFCINV
BUFCDSPC EQU   IDABUFC+32
RDWA     EQU   0
RDWAVBPH EQU   RDWA
RDWA2    EQU   RDWA+4
RDWA32   EQU   RDWA+11
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
MAPPAGE  EQU   0
MPPG     EQU   0
VCLOSE   EQU   0
VOPEN    EQU   0
VREADWR  EQU   0
VSCRATCH EQU   0
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTPVBP  EQU   CVTS01+444
CVTMFRTR EQU   CVTS01+452
CVTVSI   EQU   CVTS01+460
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
VCBDSID  EQU   VCB+20
VCBLGN   EQU   VCB+8
VCBLGOFF EQU   VCB+12
VCBDSN   EQU   VCBDSID
VCBDSOFF EQU   VCBDSID+2
@NM00043 EQU   SECSAVE
SAVE1VCB EQU   @NM00043
SAVE2VCB EQU   @NM00043+4
SAVERG14 EQU   @NM00043+8
BUFCRSC1 EQU   BUFCAVL
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
@NM00042 EQU   RDWA+12
RDWA31   EQU   RDWA+8
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCNXT1 EQU   IDABUFC+24
BUFCBAD  EQU   IDABUFC+20
BUFCCPA  EQU   IDABUFC+16
BUFCAMB  EQU   BUFCPLH
@NM00041 EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00040 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00039 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
VCBDSPID EQU   VCB+20
@NM00038 EQU   VCBCPFLG
@NM00037 EQU   VCBCPFLG
@NM00036 EQU   VCBCPFLG
VCBEFIX  EQU   VCBCPFLG
VCBELPID EQU   VCBCPFLG
VCBINVSA EQU   VCBCPFLG
VCBRSV3  EQU   VCBOPFLG
VCBRSV2  EQU   VCBOPFLG
VCBLOAD  EQU   VCBOPFLG
VCBNDISC EQU   VCBOPFLG
VCBINSTG EQU   VCBOPFLG
VCBASIGN EQU   VCBOPFLG
VCBRSV1  EQU   VCBOPFLG
VCBLPID  EQU   VCB+8
@NM00035 EQU   VBPMAPE+1
@NM00034 EQU   VBPMFLG
VBPVMAP  EQU   VBPVFXD+8
VBPVLEN  EQU   VBPVFXD+4
VBPVNAME EQU   VBPVFXD
VBPHTCB  EQU   VBPHFIX+212
VBPHJRNP EQU   VBPHFIX+209
VBPHSPUL EQU   VBPHFIX+208
OPTSAVE  EQU   SECSAVE+18
LGNSAVE  EQU   SECSAVE+10
DSGSAVE  EQU   SECSAVE+8
SECSAVO  EQU   SECSAVE+4
@NM00033 EQU   SECSAVE
@NM00032 EQU   VBPHSAVE
VBPHVOP  EQU   VBPHBUFC
VBPHRBN  EQU   VBPHJJ+48
VBPHWAD  EQU   VBPHJJ+40
@NM00031 EQU   VBPHSTA
VBPHCLO  EQU   VBPHSTA
VBPHSCR  EQU   VBPHSTA
@NM00030 EQU   VBPHSTA
VBPHOPE  EQU   VBPHSTA
VBPHJOU  EQU   VBPHOPT
VBPHPADD EQU   VBPHOPT
VBPHDEL  EQU   VBPHOPT
VBPHRST  EQU   VBPHOPT
VBPHPGLD EQU   VBPHOPT
VBPHINS  EQU   VBPHOPT
VBPHSYM2 EQU   VBPHSYM+4
VBPHSYM1 EQU   VBPHSYM
VBPHLPG2 EQU   VBPHLGID+2
VBPHLPG1 EQU   VBPHLGID
VBPHLEN  EQU   VBPHJJ+4
VBPHNAME EQU   VBPHJJ
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00029 EQU   CVTFIX+248
@NM00028 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00027 EQU   FRRSFLGS+1
@NM00026 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
@NM00001 EQU   OLDSAV
@NM00025 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00024 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00023 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00022 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00021 EQU   FLCFSA
@NM00020 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00019 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00018 EQU   FLCIOA
@NM00017 EQU   FLCMCLA+15
@NM00016 EQU   FLCMCLA+14
@NM00015 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00014 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00013 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00012 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00011 EQU   FLCPER
@NM00010 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00009 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00008 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00007 EQU   FLCPIILC
@NM00006 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00005 EQU   FLCSVILC
@NM00004 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00003 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00002 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00130 EQU   FINIS
@RT00215 EQU   FINIS
@RF00214 EQU   @RC00211
@RC00238 EQU   @RC00232
@PB00003 EQU   @EL00001
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDAVBPP1,(C'PLS2142',0701,77006)
