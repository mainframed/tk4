         TITLE '**************** IGC0112F - TRACK MSS ORDERS ***********
               *******  '
IGC0112F CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGC0112F  78.166'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         LM    @00,@01,20(@13)                                     0001
         MVC   @PC00001(16),0(@01)                                 0001
*   RETURNCD=ZERO;                  /* INIT FINAL RETURN CODE      0085
*                                                            @ZA27588*/
         SLR   RETURNCD,RETURNCD                                   0085
*   SWITCHES=''B;                   /* ZERO OUT SWITCHES     @ZA27588*/
         MVI   SWITCHES,X'00'                                      0086
*   ORDREG=ORDPTR-FOUR;             /* ADJUST FOR ORDER LENGTH       */
         L     @15,@PC00001+4                                      0087
         L     ORDREG,ORDPTR(,@15)                                 0087
         SL    ORDREG,@CF00057                                     0087
*   ENQSW=OFF;                      /* INDICATE NOT ENQUEUED @ZA27588*/
         L     @03,@PC00001+12                                     0088
         NI    ENQSW(@03),B'01111111'                              0088
*   IF WHENCALL=BEFOREIO THEN                                      0089
         L     @03,@PC00001+8                                      0089
         CLC   WHENCALL(3,@03),@CC00920                            0089
         BNE   @RF00089                                            0089
*     DO;                           /*                       @ZA27588*/
*                                                                  0090
*       /*************************************************************/
*       /*                                                           */
*       /* MODULE CALLED BEFORE ORDER SENT TO MSC. ONLY      @ZA27588*/
*       /* ORDER THAT CAN BE PROCESSED IS ACQUIRE.           @ZA27588*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0091
*       IF REQCODE=ACQUIRE THEN                                    0091
         CLI   REQCODE(ORDREG),2                                   0091
         BNE   @RF00091                                            0091
*         DO;                       /*                       @ZA27588*/
*                                                                  0092
*           /*********************************************************/
*           /*                                                       */
*           /* ONLY PROCESS ACQUIRE IF FOR THIS CPU          @ZA27588*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0093
*           IF ARHOST=ICBCPUID THEN                                0093
         L     @03,@PC00001                                        0093
         L     @03,ICBPTR(,@03)                                    0093
         CLC   ARHOST(5,ORDREG),ICBCPUID(@03)                      0093
         BNE   @RF00093                                            0093
*             CALL ACQBIO;          /*                       @ZA27588*/
         BAL   @14,ACQBIO                                          0094
*         END;                      /*                       @ZA27588*/
*     END;                          /*                       @ZA27588*/
*   ELSE                                                           0097
*     IF WHENCALL=AFTERIO THEN                                     0097
         B     @RC00089                                            0097
@RF00089 L     @03,@PC00001+8                                      0097
         CLC   WHENCALL(3,@03),@CC00922                            0097
         BNE   @RF00097                                            0097
*       DO;                         /*                       @ZA27588*/
*                                                                  0098
*         /***********************************************************/
*         /*                                                         */
*         /* MODULE CALLED AFTER ORDER SUCCESSFULLY PROCESSED        */
*         /*                                                 @ZA27588*/
*         /* BY MSC. ONLY ORDER TYPES THAT CAN BE PROCESSED ARE      */
*         /* RELINQUISH, DEMOUNT, SUSPEND, PURGE AND ASSOCIATE.      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0099
*         IF REQCODE=RELINQ THEN                                   0099
         CLI   REQCODE(ORDREG),4                                   0099
         BNE   @RF00099                                            0099
*           DO;                     /*                       @ZA27588*/
*                                                                  0100
*             /*******************************************************/
*             /*                                                     */
*             /* ONLY PROCESS RELINQUISH IF FOR THIS CPU AND @ZA27588*/
*             /* INHIBIT DESTAGE REQUESTED.                  @ZA27588*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0101
*             IF ARINH=ON&ARHOST=ICBCPUID THEN                     0101
         TM    ARINH(ORDREG),B'00100000'                           0101
         BNO   @RF00101                                            0101
         L     @03,@PC00001                                        0101
         L     @03,ICBPTR(,@03)                                    0101
         CLC   ARHOST(5,ORDREG),ICBCPUID(@03)                      0101
         BNE   @RF00101                                            0101
*               CALL RELAIO;        /*                       @ZA27588*/
         BAL   @14,RELAIO                                          0102
*           END;                    /*                       @ZA27588*/
*         ELSE                                                     0104
*           IF REQCODE=DEMOUNT THEN                                0104
         B     @RC00099                                            0104
@RF00099 CLI   REQCODE(ORDREG),6                                   0104
         BNE   @RF00104                                            0104
*             DO;                   /*                       @ZA27588*/
*                                                                  0105
*               /*****************************************************/
*               /*                                                   */
*               /* ONLY PROCESS DEMOUNT IF FOR THIS CPU.     @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0106
*               IF DMHOST=ICBCPUID THEN                            0106
         L     @03,@PC00001                                        0106
         L     @03,ICBPTR(,@03)                                    0106
         CLC   DMHOST(5,ORDREG),ICBCPUID(@03)                      0106
         BNE   @RF00106                                            0106
*                 CALL DMTAIO;      /*                       @ZA27588*/
         BAL   @14,DMTAIO                                          0107
*             END;                  /*                       @ZA27588*/
*           ELSE                                                   0109
*             IF REQCODE=SUSPEND THEN                              0109
         B     @RC00104                                            0109
@RF00104 CLI   REQCODE(ORDREG),34                                  0109
         BNE   @RF00109                                            0109
*               DO;                 /*                       @ZA27588*/
*                                                                  0110
*                 /***************************************************/
*                 /*                                                 */
*                 /* ONLY PROCESS SUSPEND IF IMMEDIATE OR    @ZA27588*/
*                 /* RECONFIGURATION REQUESTED.              @ZA27588*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0111
*                 IF SUPIMED=ON×SUPRCON=ON THEN                    0111
         TM    SUPIMED(ORDREG),B'11000000'                         0111
         BZ    @RF00111                                            0111
*                   CALL SUPGAIO;   /*                       @ZA27588*/
         BAL   @14,SUPGAIO                                         0112
*               END;                /*                       @ZA27588*/
*             ELSE                                                 0114
*               IF REQCODE=PURGE THEN                              0114
         B     @RC00109                                            0114
@RF00109 CLI   REQCODE(ORDREG),20                                  0114
         BNE   @RF00114                                            0114
*                 DO;               /*                       @ZA27588*/
*                                                                  0115
*                   /*************************************************/
*                   /*                                               */
*                   /* ONLY PROCESS PURGE IF FOR THIS CPU.   @ZA27588*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0116
*                   IF PURGHOST=ICBCPUID THEN                      0116
         L     @03,@PC00001                                        0116
         L     @03,ICBPTR(,@03)                                    0116
         CLC   PURGHOST(5,ORDREG),ICBCPUID(@03)                    0116
         BNE   @RF00116                                            0116
*                     CALL SUPGAIO; /*                       @ZA27588*/
         BAL   @14,SUPGAIO                                         0117
*                 END;              /*                       @ZA27588*/
*               ELSE                                               0119
*                 IF REQCODE=ASSOCIAT THEN                         0119
         B     @RC00114                                            0119
@RF00114 CLI   REQCODE(ORDREG),44                                  0119
         BNE   @RF00119                                            0119
*                   DO;             /*                       @ZA27588*/
*                                                                  0120
*                     /***********************************************/
*                     /*                                             */
*                     /* ONLY PROCESS ASSOCIATE IF FOR THIS CPU AND  */
*                     /* DEMOUNT OF ALL VOLUMES REQUESTED.   @ZA27588*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0121
*                     IF ASDMNT=ON&ASDACPU=ICBCPUID THEN           0121
         TM    ASDMNT(ORDREG),B'00000010'                          0121
         BNO   @RF00121                                            0121
         L     @03,@PC00001                                        0121
         L     @03,ICBPTR(,@03)                                    0121
         CLC   ASDACPU(5,ORDREG),ICBCPUID(@03)                     0121
         BNE   @RF00121                                            0121
*                       CALL SUPGAIO;/*                      @ZA27588*/
         BAL   @14,SUPGAIO                                         0122
*                   END;            /*                       @ZA27588*/
*       END;                        /*                       @ZA27588*/
*     ELSE                                                         0125
*       IF WHENCALL=ERRORIO THEN                                   0125
         B     @RC00097                                            0125
@RF00097 L     @03,@PC00001+8                                      0125
         CLC   WHENCALL(3,@03),@CC00924                            0125
         BNE   @RF00125                                            0125
*         DO;                       /*                       @ZA27588*/
*                                                                  0126
*           /*********************************************************/
*           /*                                                       */
*           /* MODULE CALLED AFTER ORDER UNSUCCESSFULLY PROCESSED BY */
*           /* THE MSC. THE ONLY ORDER TYPE THAT CAN BE PROCESSED IS */
*           /* ACQUIRE.                                      @ZA27588*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0127
*           IF REQCODE=ACQUIRE THEN                                0127
         CLI   REQCODE(ORDREG),2                                   0127
         BNE   @RF00127                                            0127
*             DO;                   /*                       @ZA27588*/
*                                                                  0128
*               /*****************************************************/
*               /*                                                   */
*               /* ONLY PROCESS ACQUIRE IF FOR THIS CPU.     @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0129
*               IF ARHOST=ICBCPUID THEN                            0129
         L     @03,@PC00001                                        0129
         L     @03,ICBPTR(,@03)                                    0129
         CLC   ARHOST(5,ORDREG),ICBCPUID(@03)                      0129
         BNE   @RF00129                                            0129
*                 CALL ACQEIO;      /*                       @ZA27588*/
         BAL   @14,ACQEIO                                          0130
*             END;                  /*                       @ZA27588*/
@RF00129 DS    0H                                                  0132
*         END;                      /*                       @ZA27588*/
@RF00127 DS    0H                                                  0133
*   RETURN CODE(RETURNCD);          /* RETURN TO SVC 126     @ZA27588*/
@RF00125 DS    0H                                                  0133
@RC00097 DS    0H                                                  0133
@RC00089 L     @00,@SIZDATD                                        0133
         LR    @01,@11                                             0133
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0133
         L     @14,12(,@13)                                        0133
         LM    @00,@12,20(@13)                                     0133
         BR    @14                                                 0133
*ACQBIO:                                                           0134
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA27588*/
*                                                                  0134
ACQBIO   DS    0H                                                  0135
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC PROCESSES ACQUIRES BEFORE THEY ARE SENT     @ZA27588*/
*   /* TO THE MSC. IT ENQS ON THE VOLID, SEARCHES THE        @ZA27588*/
*   /* VOLUME LIST FOR A MATCHING ENTRY. IF NO ENTRY IS      @ZA27588*/
*   /* FOUND, IT CALLS FINDSLOT TO SEE IF ANY NEW SLOTS      @ZA27588*/
*   /* ARE AVAILABLE. IF ONE IS THE PROCESS STARTS OVER.     @ZA27588*/
*   /* IF ONE IS NOT AVAILABLE, PROCESSING TERMINATES WITH   @ZA27588*/
*   /* RETURN CODE OF ZERO. IF A MATCHING SLOT IS FOUND      @ZA27588*/
*   /* BITS ARE TURNED ON IN THE LIST MATCHING THE CYLS      @ZA27588*/
*   /* IN THE EXTENTS. IF ANY OF THE BITS CHANGE STATE, THE  @ZA27588*/
*   /* RETURN CODE IS SET TO ZERO TO INDICATE THAT THE       @ZA27588*/
*   /* ACQUIRE MUST BE SENT TO THE MSC. IF NONE CHANGE       @ZA27588*/
*   /* THEN THE RETURN CODE IS SET TO FOUR. THE EXCEPTION    @ZA27588*/
*   /* TO THIS IS ACQUIRE WITH BIND OR DELAYED RESPONSE      @ZA27588*/
*   /* WHERE THE RETURN CODE IS ALWAYS SET TO ZERO.          @ZA27588*/
*   /* AT THE END OF PROCESSING, THE VOLID IS DEQUEUED.      @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0135
*   RFY                                                            0135
*     R14 RSTD;                     /*                       @ZA27588*/
*   ACQRET=R14;                     /* SAVE RETURN ADDRESS   @ZA27588*/
         LR    ACQRET,R14                                          0136
*   RFY                                                            0137
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   ORDVOLID=ARVOL;                 /* SAVE VOLID FROM ORDER @ZA27588*/
         MVC   ORDVOLID(6),ARVOL(ORDREG)                           0138
*   ENQVOLID=ORDVOLID;              /* SAVE VOLID FOR SVC126 ESTAE   */
*                                                                  0139
         L     @08,@PC00001+12                                     0139
         MVC   ENQVOLID(6,@08),ORDVOLID                            0139
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQ ON VOLID                                          @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0140
*   RFY                                                            0140
*    (R0,                                                          0140
*     R1,                                                          0140
*     R14,                                                         0140
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0141
*                                                         /*@ZA27588*/
        B   EQDQEND                                           @ZA27588
ENQLIST ENQ (,,E,6,SYSTEM),MF=L                               @ZA27588
ENQEND  EQU *                                                 @ZA27588
ENQL    EQU ENQEND-ENQLIST                                    @ZA27588
DEQLIST DEQ (,,6,SYSTEM),MF=L                                 @ZA27588
DEQEND  EQU *                                                 @ZA27588
DEQL    EQU DEQEND-DEQLIST                                    @ZA27588
EQDQEND DS  0H                                                @ZA27588
        MVC ENQDEQ(ENQL),ENQLIST                              @ZA27588
        ENQ (QNAME,ORDVOLID),MF=(E,ENQDEQ)                    @ZA27588
*   RFY                                                            0142
*    (R0,                                                          0142
*     R1,                                                          0142
*     R14,                                                         0142
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=ON;                       /* INDICATE ENQUEUED     @ZA27588*/
         L     @08,@PC00001+12                                     0143
         OI    ENQSW(@08),B'10000000'                              0143
*ACQBIO01:                          /* RESTART POINT         @ZA27588*/
*   SLOTPTR=ADDR(ICBVLENT(1));      /* INIT VOLUME LIST PTR  @ZA27588*/
ACQBIO01 L     @08,@PC00001                                        0144
         L     @08,ICBPTR(,@08)                                    0144
         L     SLOTPTR,ICBVOLST(,@08)                              0144
         LA    SLOTPTR,ICBVLENT(,SLOTPTR)                          0144
*   LOOPSW=OFF;                     /* TURN OFF LOOP CONTROLLER      */
*                                                                  0145
         NI    LOOPSW,B'10111111'                                  0145
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH THROUGH VOLUME LIST FOR MATCHING VOLID.        @ZA27588*/
*   /* IF MATCH FOUND THEN LOOP SWITCH WILL BE TURNED        @ZA27588*/
*   /* ON TO TERMINATE LOOP. IF MATCH NOT FOUND THEN         @ZA27588*/
*   /* AN ATTEMPT WILL BE MADE TO FIND AN EMPTY              @ZA27588*/
*   /* SLOT TO USE AND REPROCESS THE ACQUIRE.                @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0146
*   DO VOLIMIT=ONE TO ICBVLCNT WHILE LOOPSW=OFF;/*           @ZA27588*/
         LA    VOLIMIT,1                                           0146
         B     @DE00146                                            0146
@DL00146 TM    LOOPSW,B'01000000'                                  0146
         BNZ   @DC00146                                            0146
*     IF SLTVOLID^=ORDVOLID THEN    /* IS THIS A MATCH       @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),ORDVOLID                        0147
         BE    @RF00147                                            0147
*       SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* NO, BUMP POINTER         */
         AL    SLOTPTR,@CF00839                                    0148
*     ELSE                          /* YES, PROCESS ACQUIRE  @ZA27588*/
*       DO;                         /*                       @ZA27588*/
         B     @RC00147                                            0149
@RF00147 DS    0H                                                  0150
*         BYPASSSW=ON;              /* SET TO BYPASS IO INITIALLY    */
*                                                                  0150
         OI    BYPASSSW,B'10000000'                                0150
*         /***********************************************************/
*         /*                                                         */
*         /* LOOP THROUGH AND PROCESS EACH EXTENT            @ZA27588*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0151
*         DO EXTINDEX=ONE TO ARNMEXT;/*                      @ZA27588*/
         LA    EXTINDEX,1                                          0151
         B     @DE00151                                            0151
@DL00151 DS    0H                                                  0152
*           EXTENT=AREXT(EXTINDEX); /* SAVE COPY OF EXTENT           */
         LR    @07,EXTINDEX                                        0152
         SLA   @07,2                                               0152
         ALR   @07,ORDREG                                          0152
         MVC   EXTENT(4),AREXT-4(@07)                              0152
*           IF BEGCYL<=ENDCYL&ENDCYL<=MAXCYLS THEN/* ARE CYLINDERS 0153
*                                      VALID                         */
         CLC   BEGCYL(2),ENDCYL                                    0153
         BH    @RF00153                                            0153
         LH    @07,ENDCYL                                          0153
         N     @07,@CF00993                                        0153
         C     @07,@CF00936                                        0153
         BH    @RF00153                                            0153
*             DO;                   /* YES                   @ZA27588*/
*                                                                  0154
*               /*****************************************************/
*               /*                                                   */
*               /* CALCULATE NUMBER OF CYLINDERS IN EXTENT, STARTING */
*               /* BYTE POINTER AND INITIAL MASK FOR ORING   @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0155
*               CYLCOUNT=ENDCYL-BEGCYL+ONE;/*                @ZA27588*/
         LA    @15,1                                               0155
         LH    @14,ENDCYL                                          0155
         N     @14,@CF00993                                        0155
         LH    @01,BEGCYL                                          0155
         N     @01,@CF00993                                        0155
         SLR   @14,@01                                             0155
         ALR   @14,@15                                             0155
         LR    CYLCOUNT,@14                                        0155
*               BYTESS=(BEGCYL/EIGHT)+ONE;/*                 @ZA27588*/
         LR    BYTESS,@01                                          0156
         SRL   BYTESS,3                                            0156
         ALR   BYTESS,@15                                          0156
*               WORKBYTE=(BEGCYL//EIGHT)+ONE;/*              @ZA27588*/
         LR    @00,@01                                             0157
         SRA   @00,31                                              0157
         D     @00,@CF00048                                        0157
         ALR   @00,@15                                             0157
         LR    WORKBYTE,@00                                        0157
*               MASK=ACQTABLE(WORKBYTE);/*                   @ZA27588*/
         LA    @01,ACQTABLE-1(WORKBYTE)                            0158
         MVC   MASK(1),0(@01)                                      0158
*               CYLHOLD=CYLBITS;    /* SAVE COPY OF BITS     @ZA27588*/
*                                                                  0159
         MVC   CYLHOLD(54),CYLBITS(SLOTPTR)                        0159
*               /*****************************************************/
*               /*                                                   */
*               /* LOOP THROUGH CYLINDERS IN EXTENT SETTING EACH     */
*               /*                                           @ZA27588*/
*               /* MATCHING BIT ON.                          @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0160
*               DO I=ONE TO CYLCOUNT;/*                      @ZA27588*/
         LR    I,@15                                               0160
         B     @DE00160                                            0160
@DL00160 DS    0H                                                  0161
*                 CYLBITS(BYTESS:BYTESS)=CYLBITS(BYTESS:BYTESS)×MASK;
         LR    @01,SLOTPTR                                         0161
         ALR   @01,BYTESS                                          0161
         OC    CYLBITS-1(1,@01),MASK                               0161
*                                   /* OR IN BIT                     */
*                 SRL(MASK,ONE);    /* SHIFT MASK            @ZA27588*/
         SLR   @15,@15                                             0162
         IC    @15,MASK                                            0162
         SRL   @15,1                                               0162
         STC   @15,MASK                                            0162
*                 IF MASK=ZERO THEN /* IS BYTE BOUNDARY CROSSED      */
         CLI   MASK,0                                              0163
         BNE   @RF00163                                            0163
*                   DO;             /* YES                   @ZA27588*/
*                     MASK=ACQMRSET;/* SET MASK FOR NEXT BYTE        */
         MVC   MASK(1),ACQMRSET                                    0165
*                     BYTESS=BYTESS+ONE;/* BUMP BYTE POINTER         */
         AL    BYTESS,@CF00050                                     0166
*                   END;            /*                       @ZA27588*/
*               END;                /*                       @ZA27588*/
@RF00163 AL    I,@CF00050                                          0168
@DE00160 CR    I,CYLCOUNT                                          0168
         BNH   @DL00160                                            0168
*               CYLHOLD=CYLHOLD&&CYLBITS;/* HAVE BITS CHANGED        */
         XC    CYLHOLD(54),CYLBITS(SLOTPTR)                        0169
*               IF CYLHOLD^=ALLZERO THEN/* YES,DO NOT BYPASS IO      */
         CLC   CYLHOLD(54),ALLZERO                                 0170
         BE    @RF00170                                            0170
*                 BYPASSSW=OFF;     /*                       @ZA27588*/
         NI    BYPASSSW,B'01111111'                                0171
*             END;                  /*                       @ZA27588*/
*           ELSE                                                   0173
*             BYPASSSW=OFF;         /* BAD EXTENT, DO NOT BYPASS IO  */
         B     @RC00153                                            0173
@RF00153 NI    BYPASSSW,B'01111111'                                0173
*         END;                      /*                       @ZA27588*/
@RC00153 AL    EXTINDEX,@CF00050                                   0174
@DE00151 SLR   @07,@07                                             0174
         IC    @07,ARNMEXT(,ORDREG)                                0174
         CR    EXTINDEX,@07                                        0174
         BNH   @DL00151                                            0174
*         IF BYPASSSW=ON THEN       /* IF BYPASS IO INDICATED THEN   */
         TM    BYPASSSW,B'10000000'                                0175
         BNO   @RF00175                                            0175
*           RETURNCD=BYPASSIO;      /* SET FINAL RETURN CODE @ZA27588*/
         LA    RETURNCD,4                                          0176
*         LOOPSW=ON;                /* TERMINATE DO WHILE LOOP       */
@RF00175 OI    LOOPSW,B'01000000'                                  0177
*       END;                        /*                       @ZA27588*/
*   END;                            /*                       @ZA27588*/
*                                                                  0179
@RC00147 AL    VOLIMIT,@CF00050                                    0179
@DE00146 L     @07,@PC00001                                        0179
         L     @07,ICBPTR(,@07)                                    0179
         L     @07,ICBVOLST(,@07)                                  0179
         C     VOLIMIT,ICBVLCNT(,@07)                              0179
         BNH   @DL00146                                            0179
@DC00146 DS    0H                                                  0180
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LOOP SWITCH IS OFF THEN A VOLUME ENTRY WAS         @ZA27588*/
*   /* NOT FOUND TO MATCH THE VOLID IN THE ACQUIRE           @ZA27588*/
*   /* ORDER. IN THIS CASE A SEARCH WILL BE MADE             @ZA27588*/
*   /* BY FINDSLOT PROCEDURE. IF AN EMPTY SLOT IS            @ZA27588*/
*   /* FOUND IT WILL BE INITIALIZED AND THEN THE             @ZA27588*/
*   /* THE ACQUIRE ORDER WILL BE REPROCESSED.                @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0180
*   IF LOOPSW=OFF THEN                                             0180
         TM    LOOPSW,B'01000000'                                  0180
         BNZ   @RF00180                                            0180
*     DO;                           /*                       @ZA27588*/
*       CALL FINDSLOT;              /* SEARCH FOR EMPTY SLOT @ZA27588*/
         BAL   @14,FINDSLOT                                        0182
*       IF FOUNDSW=ON THEN          /* WAS A SLOT FOUND      @ZA27588*/
         TM    FOUNDSW,B'00100000'                                 0183
         BO    @RT00183                                            0183
*         GO TO ACQBIO01;           /* YES,REPROCESS ACQUIRE @ZA27588*/
*     END;                          /*                       @ZA27588*/
*                                                                  0185
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQ VOLID                                             @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*   RFY                                                            0186
*    (R0,                                                          0186
*     R1,                                                          0186
*     R14,                                                         0186
*     R15) RSTD;                    /*                       @ZA27588*/
@RF00180 DS    0H                                                  0187
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0187
*                                                         /*@ZA27588*/
      MVC  ENQDEQ(DEQL),DEQLIST                               @ZA27588
      DEQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                     @ZA27588
*   RFY                                                            0188
*    (R0,                                                          0188
*     R1,                                                          0188
*     R14,                                                         0188
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=OFF;                      /* INDICATE NOT ENQUEUED @ZA27588*/
*                                                                  0189
         L     @08,@PC00001+12                                     0189
         NI    ENQSW(@08),B'01111111'                              0189
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ACQUIRE ISSUED WITH BIND OR DELAYED RESPONSE THEN IO MUST  */
*   /* BE ISSUED TO MSC EVEN THOUGH ALL CYLINDERS WERE PREVIOUSLY    */
*   /* ACQUIRED. IN THIS CASE THE FINAL                      @ZA27588*/
*   /* RETURN CODE IS SET TO ZERO.                           @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0190
*   IF ARBDUBD=ON×ARDRES=ON THEN                                   0190
         TM    ARBDUBD(ORDREG),B'11000000'                         0190
         BZ    @RF00190                                            0190
*     RETURNCD=ZERO;                /*                       @ZA27588*/
         SLR   RETURNCD,RETURNCD                                   0191
*   RFY                                                            0192
*     R14 RSTD;                     /*                       @ZA27588*/
@RF00190 DS    0H                                                  0193
*   R14=ACQRET;                     /* RESTORE RETURN ADDRESS      0193
*                                                            @ZA27588*/
         LR    R14,ACQRET                                          0193
*   RFY                                                            0194
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   END ACQBIO;                     /*                       @ZA27588*/
@EL00002 DS    0H                                                  0195
@EF00002 DS    0H                                                  0195
@ER00002 BR    @14                                                 0195
*FINDSLOT:                                                         0196
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA27588*/
*                                                                  0196
FINDSLOT DS    0H                                                  0197
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC IS CALLED TO SEARCH FOR AN UNUSED VOLUME    @ZA27588*/
*   /* LIST ENTRY. IF ONE IS FOUND, THE VOLID IS STORED      @ZA27588*/
*   /* AND THE CYLINDER BITS ARE ALL TURNED OFF.             @ZA27588*/
*   /* IF ONE IS NOT FOUND, THE BIT INDICATING ONE WAS       @ZA27588*/
*   /* FOUND IS NOT TURNED.                                  @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*   RFY                                                            0197
*     R14 RSTD;                     /*                       @ZA27588*/
*   FINDRET=R14;                    /* SAVE RETURN ADDRESS   @ZA27588*/
         LR    FINDRET,R14                                         0198
*   RFY                                                            0199
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   FOUNDSW=OFF;                    /* TURN OFF SLOT FOUND SWITCH    */
         NI    FOUNDSW,B'11011111'                                 0200
*FNDSLT01:                          /* RESTART POINT         @ZA27588*/
*   SLOTPTR=ADDR(ICBVLENT(1));      /* INIT VOLUME LIST PTR  @ZA27588*/
FNDSLT01 L     @08,@PC00001                                        0201
         L     @08,ICBPTR(,@08)                                    0201
         L     SLOTPTR,ICBVOLST(,@08)                              0201
         LA    SLOTPTR,ICBVLENT(,SLOTPTR)                          0201
*   LOOPSW=OFF;                     /* TURN OFF LOOP CONTROLLER      */
         NI    LOOPSW,B'10111111'                                  0202
*   FULLZERO=ZERO;                  /* CLEAR COMPARE AREA FOR CS     */
*                                                                  0203
         SLR   FULLZERO,FULLZERO                                   0203
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH VOLUME LIST LOOKING FOR ZERO VOLID. IF MATCH     */
*   /* FOUND THEN LOOP SWITCH WILL BE TURNED ON TO TERMINATE LOOP.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0204
*   DO VOLIMIT=ONE TO ICBVLCNT WHILE LOOPSW=OFF;/*           @ZA27588*/
         LA    VOLIMIT,1                                           0204
         B     @DE00204                                            0204
@DL00204 TM    LOOPSW,B'01000000'                                  0204
         BNZ   @DC00204                                            0204
*     IF SLTVOLID^=V000000 THEN     /* IS THIS A MATCH       @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),V000000                         0205
         BE    @RF00205                                            0205
*       SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* NO, BUMP POINTER         */
         AL    SLOTPTR,@CF00839                                    0206
*     ELSE                          /* YES,INITIALIZE SLOT   @ZA27588*/
*       DO;                         /*                       @ZA27588*/
         B     @RC00205                                            0207
@RF00205 DS    0H                                                  0208
*         CS(FULLZERO,ACQVOL4,FVID);/* IS VOLID STILL ZEROS  @ZA27588*/
         L     @07,ACQVOL4                                         0208
         CS    FULLZERO,@07,FVID(SLOTPTR)                          0208
*         BC(NE,FNDSLT01);          /* NO, GO START AT TOP OF LIST   */
         BC    7,FNDSLT01                                          0209
*         SLTVOLID=ORDVOLID;        /* YES, FILL IN 6 BYTE VOLID     */
         MVC   SLTVOLID(6,SLOTPTR),ORDVOLID                        0210
*         CYLBITS=ALLZERO;          /* CLEAR OUT CYLINDER BITS       */
         MVC   CYLBITS(54,SLOTPTR),ALLZERO                         0211
*         LOOPSW=ON;                /* TERMINATE DO WHILE LOOP       */
*         FOUNDSW=ON;               /* INDICATE SLOT FOUND   @ZA27588*/
         OI    LOOPSW,B'01100000'                                  0213
*       END;                        /*                       @ZA27588*/
*   END;                            /*                       @ZA27588*/
@RC00205 AL    VOLIMIT,@CF00050                                    0215
@DE00204 L     @07,@PC00001                                        0215
         L     @07,ICBPTR(,@07)                                    0215
         L     @07,ICBVOLST(,@07)                                  0215
         C     VOLIMIT,ICBVLCNT(,@07)                              0215
         BNH   @DL00204                                            0215
@DC00204 DS    0H                                                  0216
*   RFY                                                            0216
*     R14 RSTD;                     /*                       @ZA27588*/
*   R14=FINDRET;                    /* RESTORE RETURN ADDRESS      0217
*                                                            @ZA27588*/
         LR    R14,FINDRET                                         0217
*   RFY                                                            0218
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   END FINDSLOT;                   /*                       @ZA27588*/
@EL00003 DS    0H                                                  0219
@EF00003 DS    0H                                                  0219
@ER00003 BR    @14                                                 0219
*DMTAIO:                                                           0220
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA27588*/
*                                                                  0220
DMTAIO   DS    0H                                                  0221
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC IS CALLED TO PROCESS A DEMOUNT ORDER.       @ZA27588*/
*   /* IT ENQUES ON THE VOLID AND SEARCHES THE VOLUME        @ZA27588*/
*   /* LIST FOR A MATCHING VOLID. IF FOUND, IT CLEARS THE    @ZA27588*/
*   /* VOLID PORTION OF THE ENTRY AND DEQUEUES THE VOLID.    @ZA27588*/
*   /* IF A MATCH IS NOT FOUND, THE VOLID IS DEQUEUED AND    @ZA27588*/
*   /* PROCESSING TERMINATES.                                @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   RFY                                                            0221
*     R14 RSTD;                     /*                       @ZA27588*/
*   DMTRET=R14;                     /* SAVE RETURN ADDRESS   @ZA27588*/
         LR    DMTRET,R14                                          0222
*   RFY                                                            0223
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   ORDVOLID=DMVOL;                 /* SAVE VOLID FROM ORDER @ZA27588*/
         MVC   ORDVOLID(6),DMVOL(ORDREG)                           0224
*   ENQVOLID=ORDVOLID;              /* SAVE VOLID FOR SVC126 ESTAE   */
*                                                                  0225
         L     @03,@PC00001+12                                     0225
         MVC   ENQVOLID(6,@03),ORDVOLID                            0225
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQ ON VOLID                                          @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0226
*   RFY                                                            0226
*    (R0,                                                          0226
*     R1,                                                          0226
*     R14,                                                         0226
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0227
*                                                         /*@ZA27588*/
  MVC  ENQDEQ(ENQL),ENQLIST                                   @ZA27588
  ENQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                         @ZA27588
*   RFY                                                            0228
*    (R0,                                                          0228
*     R1,                                                          0228
*     R14,                                                         0228
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=ON;                       /* INDICATE ENQUEUED     @ZA27588*/
         L     @03,@PC00001+12                                     0229
         OI    ENQSW(@03),B'10000000'                              0229
*   SLOTPTR=ADDR(ICBVLENT(1));      /* INIT VOLUME LIST PTR  @ZA27588*/
         L     @03,@PC00001                                        0230
         L     @03,ICBPTR(,@03)                                    0230
         L     SLOTPTR,ICBVOLST(,@03)                              0230
         LA    SLOTPTR,ICBVLENT(,SLOTPTR)                          0230
*   LOOPSW=OFF;                     /* TURN OFF LOOP CONTROLLER      */
*                                                                  0231
         NI    LOOPSW,B'10111111'                                  0231
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH VOLUME LIST LOOKING FOR MATCHING VOLID. IF MATCH */
*   /* FOUND THEN LOOP SWITCH WILL BE TURNED ON TO TERMINATE LOOP.   */
*   /*                                                       @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0232
*   DO VOLIMIT=ONE TO ICBVLCNT WHILE LOOPSW=OFF;/*           @ZA27588*/
         LA    VOLIMIT,1                                           0232
         B     @DE00232                                            0232
@DL00232 TM    LOOPSW,B'01000000'                                  0232
         BNZ   @DC00232                                            0232
*     IF SLTVOLID^=ORDVOLID THEN    /* IS THIS A MATCH       @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),ORDVOLID                        0233
         BE    @RF00233                                            0233
*       SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* NO, BUMP POINTER         */
         AL    SLOTPTR,@CF00839                                    0234
*     ELSE                          /* YES, PROCESS DEMOUNT  @ZA27588*/
*       DO;                         /*                       @ZA27588*/
         B     @RC00233                                            0235
@RF00233 DS    0H                                                  0236
*         SLTVOLID=V000000;         /* CLEAR OUT VOLID IN LIST       */
         MVC   SLTVOLID(6,SLOTPTR),V000000                         0236
*         LOOPSW=ON;                /* TERMINATE DO WHILE LOOP       */
         OI    LOOPSW,B'01000000'                                  0237
*       END;                        /*                       @ZA27588*/
*   END;                            /*                       @ZA27588*/
*                                                                  0239
@RC00233 AL    VOLIMIT,@CF00050                                    0239
@DE00232 L     @09,@PC00001                                        0239
         L     @09,ICBPTR(,@09)                                    0239
         L     @09,ICBVOLST(,@09)                                  0239
         C     VOLIMIT,ICBVLCNT(,@09)                              0239
         BNH   @DL00232                                            0239
@DC00232 DS    0H                                                  0240
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQ VOLID                                             @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0240
*   RFY                                                            0240
*    (R0,                                                          0240
*     R1,                                                          0240
*     R14,                                                         0240
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0241
*                                                         /*@ZA27588*/
  MVC  ENQDEQ(DEQL),DEQLIST                                   @ZA27588
  DEQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                         @ZA27588
*   RFY                                                            0242
*    (R0,                                                          0242
*     R1,                                                          0242
*     R14,                                                         0242
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=OFF;                      /* INDICATE NOT ENQUEUED @ZA27588*/
         L     @06,@PC00001+12                                     0243
         NI    ENQSW(@06),B'01111111'                              0243
*   RFY                                                            0244
*     R14 RSTD;                     /*                       @ZA27588*/
*   R14=DMTRET;                     /* RESTORE RETURN ADDRESS      0245
*                                                            @ZA27588*/
         LR    R14,DMTRET                                          0245
*   RFY                                                            0246
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   END DMTAIO;                     /*                       @ZA27588*/
@EL00004 DS    0H                                                  0247
@EF00004 DS    0H                                                  0247
@ER00004 BR    @14                                                 0247
*RELAIO:                                                           0248
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA27588*/
*                                                                  0248
RELAIO   DS    0H                                                  0249
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC IS CALLED TO PROCESS A RELINQUISH ORDER.    @ZA27588*/
*   /* IT ENQUEUES ON THE VOLID AND SEARCHES THE VOLUME      @ZA27588*/
*   /* LIST FOR A MATCHING VOLID. IF ONE IS FOUND, BITS      @ZA27588*/
*   /* MATCHING THE CYLINDERS IN THE EXTENTS ARE TURNED      @ZA27588*/
*   /* OFF, THE VOLID IS DEQUEUED AND PROCESSING TERMINATES. @ZA27588*/
*   /* IF A MATCH IS NOT FOUND, THE VOLID IS DEQUEUED        @ZA27588*/
*   /* AND PROCESSING TERMINATES.                            @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*   RFY                                                            0249
*     R14 RSTD;                     /*                       @ZA27588*/
*   RELRET=R14;                     /* SAVE RETURN ADDRESS   @ZA27588*/
         LR    RELRET,R14                                          0250
*   RFY                                                            0251
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   ORDVOLID=ARVOL;                 /* SAVE VOLID FROM ORDER @ZA27588*/
         MVC   ORDVOLID(6),ARVOL(ORDREG)                           0252
*   ENQVOLID=ORDVOLID;              /* SAVE VOLID FOR SVC126 ESTAE   */
*                                                                  0253
         L     @08,@PC00001+12                                     0253
         MVC   ENQVOLID(6,@08),ORDVOLID                            0253
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQ ON VOLID                                          @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0254
*   RFY                                                            0254
*    (R0,                                                          0254
*     R1,                                                          0254
*     R14,                                                         0254
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0255
*                                                         /*@ZA27588*/
  MVC  ENQDEQ(ENQL),ENQLIST                                   @ZA27588
  ENQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                         @ZA27588
*   RFY                                                            0256
*    (R0,                                                          0256
*     R1,                                                          0256
*     R14,                                                         0256
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=ON;                       /* INDICATE ENQUEUED     @ZA27588*/
         L     @08,@PC00001+12                                     0257
         OI    ENQSW(@08),B'10000000'                              0257
*   SLOTPTR=ADDR(ICBVLENT(1));      /* INIT VOLUME LIST PTR  @ZA27588*/
         L     @08,@PC00001                                        0258
         L     @08,ICBPTR(,@08)                                    0258
         L     SLOTPTR,ICBVOLST(,@08)                              0258
         LA    SLOTPTR,ICBVLENT(,SLOTPTR)                          0258
*   LOOPSW=OFF;                     /* TURN OFF LOOP CONTROLLER      */
*                                                                  0259
         NI    LOOPSW,B'10111111'                                  0259
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH VOLUME LIST LOOKING FOR MATCHING VOLID. IF MATCH */
*   /* FOUND THEN LOOP SWITCH WILL BE TURNED ON TO TERMINATE LOOP.   */
*   /*                                                       @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0260
*   DO VOLIMIT=ONE TO ICBVLCNT WHILE LOOPSW=OFF;/*           @ZA27588*/
         LA    VOLIMIT,1                                           0260
         B     @DE00260                                            0260
@DL00260 TM    LOOPSW,B'01000000'                                  0260
         BNZ   @DC00260                                            0260
*     IF SLTVOLID^=ORDVOLID THEN    /* IS THIS A MATCH       @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),ORDVOLID                        0261
         BE    @RF00261                                            0261
*       SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* NO, BUMP POINTER         */
         AL    SLOTPTR,@CF00839                                    0262
*     ELSE                          /* YES, PROCESS RELINQUISH       */
*       DO;                         /*                       @ZA27588*/
*                                                                  0263
         B     @RC00261                                            0263
@RF00261 DS    0H                                                  0264
*         /***********************************************************/
*         /*                                                         */
*         /* LOOP THROUGH AND PROCESS EACH EXTENT            @ZA27588*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0264
*         DO EXTINDEX=ONE TO ARNMEXT;/*                      @ZA27588*/
         LA    EXTINDEX,1                                          0264
         B     @DE00264                                            0264
@DL00264 DS    0H                                                  0265
*           EXTENT=AREXT(EXTINDEX); /* SAVE COPY OF EXTENT   @ZA27588*/
         LR    @07,EXTINDEX                                        0265
         SLA   @07,2                                               0265
         ALR   @07,ORDREG                                          0265
         MVC   EXTENT(4),AREXT-4(@07)                              0265
*           IF BEGCYL<=ENDCYL&ENDCYL<=MAXCYLS THEN/* ARE CYLINDERS 0266
*                                      VALID                 @ZA27588*/
         CLC   BEGCYL(2),ENDCYL                                    0266
         BH    @RF00266                                            0266
         LH    @07,ENDCYL                                          0266
         N     @07,@CF00993                                        0266
         C     @07,@CF00936                                        0266
         BH    @RF00266                                            0266
*             DO;                   /* YES                   @ZA27588*/
*                                                                  0267
*               /*****************************************************/
*               /*                                                   */
*               /* CALCULATE NUMBER OF CYLINDERS IN EXTENT,  @ZA27588*/
*               /* STARTING BYTE POINTER AND INITIAL MASK FOR        */
*               /*                                           @ZA27588*/
*               /* ANDING.                                   @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0268
*               CYLCOUNT=ENDCYL-BEGCYL+ONE;/*                @ZA27588*/
         LA    @15,1                                               0268
         LH    @14,ENDCYL                                          0268
         N     @14,@CF00993                                        0268
         LH    @01,BEGCYL                                          0268
         N     @01,@CF00993                                        0268
         SLR   @14,@01                                             0268
         ALR   @14,@15                                             0268
         LR    CYLCOUNT,@14                                        0268
*               BYTESS=(BEGCYL/EIGHT)+ONE;/*                 @ZA27588*/
         LR    BYTESS,@01                                          0269
         SRL   BYTESS,3                                            0269
         ALR   BYTESS,@15                                          0269
*               WORKBYTE=(BEGCYL//EIGHT)+ONE;/*              @ZA27588*/
         LR    @00,@01                                             0270
         SRA   @00,31                                              0270
         D     @00,@CF00048                                        0270
         ALR   @00,@15                                             0270
         LR    WORKBYTE,@00                                        0270
*               MASK=RELTABLE(WORKBYTE);/*                   @ZA27588*/
*                                                                  0271
         LA    @01,RELTABLE-1(WORKBYTE)                            0271
         MVC   MASK(1),0(@01)                                      0271
*               /*****************************************************/
*               /*                                                   */
*               /* LOOP THROUGH CYLINDERS IN EXTENT TURNING EACH     */
*               /* MATCHING BIT OFF                          @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0272
*               DO I=ONE TO CYLCOUNT;/*                      @ZA27588*/
         LR    I,@15                                               0272
         B     @DE00272                                            0272
@DL00272 DS    0H                                                  0273
*                 CYLBITS(BYTESS:BYTESS)=CYLBITS(BYTESS:BYTESS)&MASK;
         LR    @01,SLOTPTR                                         0273
         ALR   @01,BYTESS                                          0273
         NC    CYLBITS-1(1,@01),MASK                               0273
*                                   /* AND OFF BIT           @ZA27588*/
*                 SRL(MASK,ONE);    /* SHIFT MASK            @ZA27588*/
         SLR   @15,@15                                             0274
         IC    @15,MASK                                            0274
         SRL   @15,1                                               0274
         STC   @15,MASK                                            0274
*                 MASK=MASK×BIT0ON; /* RESET BIT 0 OF MASK   @ZA27588*/
         OC    MASK(1),BIT0ON                                      0275
*                 IF MASK=FOXFOX THEN/* IS BYTE BOUNDARY CROSSED     */
         CLC   MASK(1),FOXFOX                                      0276
         BNE   @RF00276                                            0276
*                   DO;             /* YES                   @ZA27588*/
*                     MASK=RELMRSET;/* SET MASK FOR NEXT BYTE        */
         MVC   MASK(1),RELMRSET                                    0278
*                     BYTESS=BYTESS+ONE;/* BUMP BYTE POINTER         */
         AL    BYTESS,@CF00050                                     0279
*                   END;            /*                       @ZA27588*/
*               END;                /*                       @ZA27588*/
@RF00276 AL    I,@CF00050                                          0281
@DE00272 CR    I,CYLCOUNT                                          0281
         BNH   @DL00272                                            0281
*             END;                  /*                       @ZA27588*/
*         END;                      /*                       @ZA27588*/
@RF00266 AL    EXTINDEX,@CF00050                                   0283
@DE00264 SLR   @07,@07                                             0283
         IC    @07,ARNMEXT(,ORDREG)                                0283
         CR    EXTINDEX,@07                                        0283
         BNH   @DL00264                                            0283
*         LOOPSW=ON;                /* TERMINATE DO WHILE LOOP       */
         OI    LOOPSW,B'01000000'                                  0284
*       END;                        /*                       @ZA27588*/
*   END;                            /*                       @ZA27588*/
*                                                                  0286
@RC00261 AL    VOLIMIT,@CF00050                                    0286
@DE00260 L     @07,@PC00001                                        0286
         L     @07,ICBPTR(,@07)                                    0286
         L     @07,ICBVOLST(,@07)                                  0286
         C     VOLIMIT,ICBVLCNT(,@07)                              0286
         BNH   @DL00260                                            0286
@DC00260 DS    0H                                                  0287
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQ VOLID                                             @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*   RFY                                                            0287
*    (R0,                                                          0287
*     R1,                                                          0287
*     R14,                                                         0287
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0288
*                                                         /*@ZA27588*/
  MVC  ENQDEQ(DEQL),DEQLIST                                   @ZA27588
  DEQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                         @ZA27588
*   RFY                                                            0289
*    (R0,                                                          0289
*     R1,                                                          0289
*     R14,                                                         0289
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=OFF;                      /* INDICATE NOT ENQUEUED @ZA27588*/
         L     @08,@PC00001+12                                     0290
         NI    ENQSW(@08),B'01111111'                              0290
*   RFY                                                            0291
*     R14 RSTD;                     /*                       @ZA27588*/
*   R14=RELRET;                     /* RESTORE RETURN ADDRESS      0292
*                                                            @ZA27588*/
         LR    R14,RELRET                                          0292
*   RFY                                                            0293
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   END RELAIO;                     /*                       @ZA27588*/
@EL00005 DS    0H                                                  0294
@EF00005 DS    0H                                                  0294
@ER00005 BR    @14                                                 0294
*SUPGAIO:                                                          0295
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA27588*/
*                                                                  0295
SUPGAIO  DS    0H                                                  0296
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC IS CALLED TO PROCESS SUSPEND, ASSOCIATE     @ZA27588*/
*   /* AND PURGE REQUESTS. IT SEARCHES THE VOLUME LIST       @ZA27588*/
*   /* FOR ALL ENTRIES WHOSE VOLID IS NOT BINARY ZEROS.      @ZA27588*/
*   /* FOR EACH ONE FOUND, IT ENQUEUES ON THE VOLID IN THE   @ZA27588*/
*   /* ENTRY, ZEROS THE VOLID SLOT AND DEQUEUES THE VOLID.   @ZA27588*/
*   /* IT THEN LOOKS FOR THE NEXT ACTIVE ENTRY UNTIL ALL     @ZA27588*/
*   /* ENTRIES IN THE LIST HAVE BEEN CHECKED. IT THEN        @ZA27588*/
*   /* TERMINATES PROCESSING.                                @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0296
*   RFY                                                            0296
*     R14 RSTD;                     /*                       @ZA27588*/
*   SUPGRET=R14;                    /* SAVE RETURN ADDRESS   @ZA27588*/
         LR    SUPGRET,R14                                         0297
*   RFY                                                            0298
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   SLOTPTR=ADDR(ICBVLENT(1));      /* INIT VOLUME LIST PTR  @ZA27588*/
*                                                                  0299
         L     @03,@PC00001                                        0299
         L     @03,ICBPTR(,@03)                                    0299
         L     SLOTPTR,ICBVOLST(,@03)                              0299
         LA    SLOTPTR,ICBVLENT(,SLOTPTR)                          0299
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH VOLUME LIST LOOKING FOR ACTIVE SLOTS. WHEN FOUND,*/
*   /* THE VOLID PORTION IS ZEROED OUT TO MAKE THE           @ZA27588*/
*   /* SLOT INACTIVE.                                        @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0300
*   DO VOLIMIT=ONE TO ICBVLCNT;     /*                       @ZA27588*/
         LA    VOLIMIT,1                                           0300
         B     @DE00300                                            0300
@DL00300 DS    0H                                                  0301
*     IF SLTVOLID=V000000 THEN      /* IS SLOT ACTIVE        @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),V000000                         0301
         BNE   @RF00301                                            0301
*       SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* NO, BUMP POINTER         */
         AL    SLOTPTR,@CF00839                                    0302
*     ELSE                          /* YES, FREE IT          @ZA27588*/
*       DO;                         /*                       @ZA27588*/
         B     @RC00301                                            0303
@RF00301 DS    0H                                                  0304
*SUPGAI01:                          /* RESTART POINT         @ZA27588*/
*         ORDVOLID=SLTVOLID;        /* SAVE VOLID FOR ENQ    @ZA27588*/
SUPGAI01 MVC   ORDVOLID(6),SLTVOLID(SLOTPTR)                       0304
*         ENQVOLID=ORDVOLID;        /* SAVE VOLID FOR SVC126 ESTAE   */
*                                                                  0305
         L     @09,@PC00001+12                                     0305
         MVC   ENQVOLID(6,@09),ORDVOLID                            0305
*         /***********************************************************/
*         /*                                                         */
*         /* ENQ ON VOLID                                    @ZA27588*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0306
*         RFY                                                      0306
*          (R0,                                                    0306
*           R1,                                                    0306
*           R14,                                                   0306
*           R15) RSTD;              /*                       @ZA27588*/
*         GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);            0307
*                                                         /*@ZA27588*/
        MVC  ENQDEQ(ENQL),ENQLIST                             @ZA27588
        ENQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                   @ZA27588
*         RFY                                                      0308
*          (R0,                                                    0308
*           R1,                                                    0308
*           R14,                                                   0308
*           R15) UNRSTD;            /*                       @ZA27588*/
*         ENQSW=ON;                 /* INDICATE ENQUEUED     @ZA27588*/
         L     @09,@PC00001+12                                     0309
         OI    ENQSW(@09),B'10000000'                              0309
*         IF SLTVOLID^=ORDVOLID THEN/* HAS SLOT CHANGED      @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),ORDVOLID                        0310
         BE    @RF00310                                            0310
*           DO;                     /* YES, DEQUEUE AND RETRY      0311
*                                                            @ZA27588*/
*                                                                  0311
*             /*******************************************************/
*             /*                                                     */
*             /* DEQ VOLID                                   @ZA27588*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0312
*             RFY                                                  0312
*              (R0,                                                0312
*               R1,                                                0312
*               R14,                                               0312
*               R15) RSTD;          /*                       @ZA27588*/
*             GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);        0313
*                                                         /*@ZA27588*/
            MVC  ENQDEQ(DEQL),DEQLIST                         @ZA27588
            DEQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)               @ZA27588
*             RFY                                                  0314
*              (R0,                                                0314
*               R1,                                                0314
*               R14,                                               0314
*               R15) UNRSTD;        /*                       @ZA27588*/
*             ENQSW=OFF;            /* INDICATE NOT ENQUEUED @ZA27588*/
         L     @09,@PC00001+12                                     0315
         NI    ENQSW(@09),B'01111111'                              0315
*             GO TO SUPGAI01;       /* REPROCESS THIS SLOT   @ZA27588*/
         B     SUPGAI01                                            0316
*           END;                    /*                       @ZA27588*/
*         ELSE                                                     0318
*           DO;                     /* SLOT UNCHANGED, FREE IT       */
@RF00310 DS    0H                                                  0319
*             SLTVOLID=V000000;     /* FREE SLOT             @ZA27588*/
         MVC   SLTVOLID(6,SLOTPTR),V000000                         0319
*             SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* BUMP POINTER TO  0320
*                                      NEXT SLOT TO BE CHECKED       */
*                                                                  0320
         AL    SLOTPTR,@CF00839                                    0320
*             /*******************************************************/
*             /*                                                     */
*             /* DEQ VOLID                                   @ZA27588*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0321
*             RFY                                                  0321
*              (R0,                                                0321
*               R1,                                                0321
*               R14,                                               0321
*               R15) RSTD;          /*                       @ZA27588*/
*             GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);        0322
*                                                         /*@ZA27588*/
            MVC  ENQDEQ(DEQL),DEQLIST                         @ZA27588
            DEQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)               @ZA27588
*             RFY                                                  0323
*              (R0,                                                0323
*               R1,                                                0323
*               R14,                                               0323
*               R15) UNRSTD;        /*                       @ZA27588*/
*             ENQSW=OFF;            /* INDICATE NOT ENQUEUED @ZA27588*/
         L     @09,@PC00001+12                                     0324
         NI    ENQSW(@09),B'01111111'                              0324
*           END;                    /*                       @ZA27588*/
*       END;                        /*                       @ZA27588*/
*   END;                            /*                       @ZA27588*/
@RC00301 AL    VOLIMIT,@CF00050                                    0327
@DE00300 L     @09,@PC00001                                        0327
         L     @09,ICBPTR(,@09)                                    0327
         L     @09,ICBVOLST(,@09)                                  0327
         C     VOLIMIT,ICBVLCNT(,@09)                              0327
         BNH   @DL00300                                            0327
*   RFY                                                            0328
*     R14 RSTD;                     /*                       @ZA27588*/
*   R14=SUPGRET;                    /* RESTORE RETURN ADDRESS      0329
*                                                            @ZA27588*/
         LR    R14,SUPGRET                                         0329
*   RFY                                                            0330
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   END SUPGAIO;                    /*                       @ZA27588*/
@EL00006 DS    0H                                                  0331
@EF00006 DS    0H                                                  0331
@ER00006 BR    @14                                                 0331
*ACQEIO:                                                           0332
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA27588*/
*                                                                  0332
ACQEIO   DS    0H                                                  0333
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC IS CALLED TO PROCESS AN ACQUIRE ORDER       @ZA27588*/
*   /* THAT HAS BEEN INDICATED IN ERROR BY THE MSC.          @ZA27588*/
*   /* ITS FUNCTION IS TO BACKOUT ANY CYLINDER BITS SET      @ZA27588*/
*   /* ON BY THE ACQBIO PROC. IT DOES THAT BY PROCESSING     @ZA27588*/
*   /* THE REQUEST AS THOUGH IT WERE A RELINQUISH ORDER.     @ZA27588*/
*   /* FOR EXPLANATION OF THE PROCESSING, SEE THE            @ZA27588*/
*   /* DESCRIPTION OF THE RELAIO PROC.                       @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0333
*   RFY                                                            0333
*     R14 RSTD;                     /*                       @ZA27588*/
*   ACQERET=R14;                    /* SAVE RETURN ADDRESS   @ZA27588*/
         LR    ACQERET,R14                                         0334
*   RFY                                                            0335
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   ORDVOLID=ARVOL;                 /* SAVE VOLID FROM ORDER @ZA27588*/
         MVC   ORDVOLID(6),ARVOL(ORDREG)                           0336
*   ENQVOLID=ORDVOLID;              /* SAVE VOLID FOR SVC126 ESTAE   */
*                                                                  0337
         L     @08,@PC00001+12                                     0337
         MVC   ENQVOLID(6,@08),ORDVOLID                            0337
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQ ON VOLID                                          @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0338
*   RFY                                                            0338
*    (R0,                                                          0338
*     R1,                                                          0338
*     R14,                                                         0338
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0339
*                                                         /*@ZA27588*/
  MVC  ENQDEQ(ENQL),ENQLIST                                   @ZA27588
  ENQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                         @ZA27588
*   RFY                                                            0340
*    (R0,                                                          0340
*     R1,                                                          0340
*     R14,                                                         0340
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=ON;                       /* INDICATE ENQUEUED     @ZA27588*/
         L     @08,@PC00001+12                                     0341
         OI    ENQSW(@08),B'10000000'                              0341
*   SLOTPTR=ADDR(ICBVLENT(1));      /* INIT VOLUME LIST PTR  @ZA27588*/
         L     @08,@PC00001                                        0342
         L     @08,ICBPTR(,@08)                                    0342
         L     SLOTPTR,ICBVOLST(,@08)                              0342
         LA    SLOTPTR,ICBVLENT(,SLOTPTR)                          0342
*   LOOPSW=OFF;                     /* TURN OFF LOOP CONTROLLER      */
*                                                                  0343
         NI    LOOPSW,B'10111111'                                  0343
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH VOLUME LIST LOOKING FOR MATCHING VOLID. IF MATCH */
*   /* FOUND THEN LOOP SWITCH WILL BE TURNED ON TO TERMINATE LOOP.   */
*   /*                                                       @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0344
*   DO VOLIMIT=ONE TO ICBVLCNT WHILE LOOPSW=OFF;/*           @ZA27588*/
         LA    VOLIMIT,1                                           0344
         B     @DE00344                                            0344
@DL00344 TM    LOOPSW,B'01000000'                                  0344
         BNZ   @DC00344                                            0344
*     IF SLTVOLID^=ORDVOLID THEN    /* IS THIS A MATCH       @ZA27588*/
         CLC   SLTVOLID(6,SLOTPTR),ORDVOLID                        0345
         BE    @RF00345                                            0345
*       SLOTPTR=SLOTPTR+LENGTH(VOLENTRY);/* NO, BUMP POINTER         */
         AL    SLOTPTR,@CF00839                                    0346
*     ELSE                          /* YES, BACKOUT ACQUIRE  @ZA27588*/
*       DO;                         /*                       @ZA27588*/
*                                                                  0347
         B     @RC00345                                            0347
@RF00345 DS    0H                                                  0348
*         /***********************************************************/
*         /*                                                         */
*         /* LOOP THROUGH AND PROCESS EACH EXTENT            @ZA27588*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0348
*         DO EXTINDEX=ONE TO ARNMEXT;/*                      @ZA27588*/
         LA    EXTINDEX,1                                          0348
         B     @DE00348                                            0348
@DL00348 DS    0H                                                  0349
*           EXTENT=AREXT(EXTINDEX); /* SAVE COPY OF EXTENT   @ZA27588*/
         LR    @07,EXTINDEX                                        0349
         SLA   @07,2                                               0349
         ALR   @07,ORDREG                                          0349
         MVC   EXTENT(4),AREXT-4(@07)                              0349
*           IF BEGCYL<=ENDCYL&ENDCYL<=MAXCYLS THEN/* ARE CYLINDERS 0350
*                                      VALID                 @ZA27588*/
         CLC   BEGCYL(2),ENDCYL                                    0350
         BH    @RF00350                                            0350
         LH    @07,ENDCYL                                          0350
         N     @07,@CF00993                                        0350
         C     @07,@CF00936                                        0350
         BH    @RF00350                                            0350
*             DO;                   /* YES                   @ZA27588*/
*                                                                  0351
*               /*****************************************************/
*               /*                                                   */
*               /* CALCULATE NUMBER OF CYLINDERS IN EXTENT,  @ZA27588*/
*               /* STARTING BYTE POINTER AND INITIAL MASK FOR        */
*               /*                                           @ZA27588*/
*               /* ANDING.                                   @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0352
*               CYLCOUNT=ENDCYL-BEGCYL+ONE;/*                @ZA27588*/
         LA    @15,1                                               0352
         LH    @14,ENDCYL                                          0352
         N     @14,@CF00993                                        0352
         LH    @01,BEGCYL                                          0352
         N     @01,@CF00993                                        0352
         SLR   @14,@01                                             0352
         ALR   @14,@15                                             0352
         LR    CYLCOUNT,@14                                        0352
*               BYTESS=(BEGCYL/EIGHT)+ONE;/*                 @ZA27588*/
         LR    BYTESS,@01                                          0353
         SRL   BYTESS,3                                            0353
         ALR   BYTESS,@15                                          0353
*               WORKBYTE=(BEGCYL//EIGHT)+ONE;/*              @ZA27588*/
         LR    @00,@01                                             0354
         SRA   @00,31                                              0354
         D     @00,@CF00048                                        0354
         ALR   @00,@15                                             0354
         LR    WORKBYTE,@00                                        0354
*               MASK=RELTABLE(WORKBYTE);/*                   @ZA27588*/
*                                                                  0355
         LA    @01,RELTABLE-1(WORKBYTE)                            0355
         MVC   MASK(1),0(@01)                                      0355
*               /*****************************************************/
*               /*                                                   */
*               /* LOOP THROUGH CYLINDERS IN EXTENT TURNING EACH     */
*               /* MATCHING BIT OFF                          @ZA27588*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0356
*               DO I=ONE TO CYLCOUNT;/*                      @ZA27588*/
         LR    I,@15                                               0356
         B     @DE00356                                            0356
@DL00356 DS    0H                                                  0357
*                 CYLBITS(BYTESS:BYTESS)=CYLBITS(BYTESS:BYTESS)&MASK;
         LR    @01,SLOTPTR                                         0357
         ALR   @01,BYTESS                                          0357
         NC    CYLBITS-1(1,@01),MASK                               0357
*                                   /* AND OFF BIT           @ZA27588*/
*                 SRL(MASK,ONE);    /* SHIFT MASK            @ZA27588*/
         SLR   @15,@15                                             0358
         IC    @15,MASK                                            0358
         SRL   @15,1                                               0358
         STC   @15,MASK                                            0358
*                 MASK=MASK×BIT0ON; /* RESET BIT 0 OF MASK   @ZA27588*/
         OC    MASK(1),BIT0ON                                      0359
*                 IF MASK=FOXFOX THEN/* IS BYTE BOUNDARY CROSSED     */
         CLC   MASK(1),FOXFOX                                      0360
         BNE   @RF00360                                            0360
*                   DO;             /* YES                   @ZA27588*/
*                     MASK=RELMRSET;/* SET MASK FOR NEXT BYTE        */
         MVC   MASK(1),RELMRSET                                    0362
*                     BYTESS=BYTESS+ONE;/* BUMP BYTE POINTER         */
         AL    BYTESS,@CF00050                                     0363
*                   END;            /*                       @ZA27588*/
*               END;                /*                       @ZA27588*/
@RF00360 AL    I,@CF00050                                          0365
@DE00356 CR    I,CYLCOUNT                                          0365
         BNH   @DL00356                                            0365
*             END;                  /*                       @ZA27588*/
*         END;                      /*                       @ZA27588*/
@RF00350 AL    EXTINDEX,@CF00050                                   0367
@DE00348 SLR   @07,@07                                             0367
         IC    @07,ARNMEXT(,ORDREG)                                0367
         CR    EXTINDEX,@07                                        0367
         BNH   @DL00348                                            0367
*         LOOPSW=ON;                /* TERMINATE DO WHILE LOOP       */
         OI    LOOPSW,B'01000000'                                  0368
*       END;                        /*                       @ZA27588*/
*   END;                            /*                       @ZA27588*/
*                                                                  0370
@RC00345 AL    VOLIMIT,@CF00050                                    0370
@DE00344 L     @07,@PC00001                                        0370
         L     @07,ICBPTR(,@07)                                    0370
         L     @07,ICBVOLST(,@07)                                  0370
         C     VOLIMIT,ICBVLCNT(,@07)                              0370
         BNH   @DL00344                                            0370
@DC00344 DS    0H                                                  0371
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQ VOLID                                             @ZA27588*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0371
*   RFY                                                            0371
*    (R0,                                                          0371
*     R1,                                                          0371
*     R14,                                                         0371
*     R15) RSTD;                    /*                       @ZA27588*/
*   GEN REFS(QNAME,ORDVOLID,ENQDEQ) SETS(ENQDEQ);                  0372
*                                                         /*@ZA27588*/
  MVC  ENQDEQ(DEQL),DEQLIST                                   @ZA27588
  DEQ  (QNAME,ORDVOLID),MF=(E,ENQDEQ)                         @ZA27588
*   RFY                                                            0373
*    (R0,                                                          0373
*     R1,                                                          0373
*     R14,                                                         0373
*     R15) UNRSTD;                  /*                       @ZA27588*/
*   ENQSW=OFF;                      /* INDICATE NOT ENQUEUED @ZA27588*/
         L     @08,@PC00001+12                                     0374
         NI    ENQSW(@08),B'01111111'                              0374
*   RFY                                                            0375
*     R14 RSTD;                     /*                       @ZA27588*/
*   R14=ACQERET;                    /* RESTORE RETURN ADDRESS      0376
*                                                            @ZA27588*/
         LR    R14,ACQERET                                         0376
*   RFY                                                            0377
*     R14 UNRSTD;                   /*                       @ZA27588*/
*   END ACQEIO;                     /*                       @ZA27588*/
@EL00007 DS    0H                                                  0378
@EF00007 DS    0H                                                  0378
@ER00007 BR    @14                                                 0378
*   END IGC0112F                    /*                       @ZA27588*/
*                                                                  0379
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (ICBVOLTB)                                       */
*                                                                  0379
*       ;                                                          0379
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@PC00001 DS    4F
IGC0112F CSECT
         DS    0F
@CF00050 DC    F'1'
@CF00057 DC    F'4'
@CF00048 DC    F'8'
@CF00839 DC    F'60'
@CF00936 DC    F'403'
@CF00993 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
ENQDEQ   DS    CL12
EXTENT   DS    CL4
         ORG   EXTENT
BEGCYL   DS    FL2
ENDCYL   DS    FL2
         ORG   EXTENT+4
SWITCHES DS    BL1
         ORG   SWITCHES
BYPASSSW DS    BL1
LOOPSW   EQU   SWITCHES+0
FOUNDSW  EQU   SWITCHES+0
@NM00017 EQU   SWITCHES+0
         ORG   SWITCHES+1
CYLHOLD  DS    CL54
MASK     DS    CL1
ORDVOLID DS    CL6
         ORG   ORDVOLID
ACQVOL4  DS    FL4
@NM00018 DS    FL2
         ORG   ORDVOLID+6
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGC0112F CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00920 DC    C'BIO'
@CC00922 DC    C'AIO'
@CC00924 DC    C'EIO'
ACQMRSET DC    X'80'
RELMRSET DC    X'7F'
BIT0ON   DC    X'80'
V000000  DC    X'000000000000'
FOXFOX   DC    X'FF'
QNAME    DC    CL8'SYSMSSVT'
ACQTABLE DC    X'80'
         DC    X'40'
         DC    X'20'
         DC    X'10'
         DC    X'08'
         DC    X'04'
         DC    X'02'
         DC    X'01'
RELTABLE DC    X'7F'
         DC    X'BF'
         DC    X'DF'
         DC    X'EF'
         DC    X'F7'
         DC    X'FB'
         DC    X'FD'
         DC    X'FE'
ZERO54   DC    54X'00'
         DS    CL3
FIXAREA  DC    50X'00000000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ACQERET  EQU   @09
SUPGRET  EQU   @07
RELRET   EQU   @09
DMTRET   EQU   @07
FINDRET  EQU   @04
ACQRET   EQU   @09
WORKBYTE EQU   @04
RETURNCD EQU   @10
FULLZERO EQU   @03
VOLIMIT  EQU   @08
I        EQU   @04
EXTINDEX EQU   @05
CYLCOUNT EQU   @07
BYTESS   EQU   @03
SLOTPTR  EQU   @06
ORDREG   EQU   @02
R0       EQU   @00
R1       EQU   @01
R14      EQU   @14
R15      EQU   @15
ARR1     EQU   @01
ASDAR1   EQU   @01
MDREG1   EQU   @01
PAIRR1   EQU   @01
SUSPR1   EQU   @01
CVTPTR   EQU   16
ARLIST   EQU   0
ARLL     EQU   ARLIST
ARFLG    EQU   ARLIST+6
ARBDUBD  EQU   ARFLG
ARDRES   EQU   ARFLG
ARINH    EQU   ARFLG
ARNMEXT  EQU   ARLIST+7
ARVOL    EQU   ARLIST+8
ARHOST   EQU   ARLIST+20
AREXT    EQU   ARLIST+28
DMTLIST  EQU   0
DMLEN    EQU   DMTLIST
DMOPCD   EQU   DMTLIST+4
DMNTFLAG EQU   DMTLIST+6
DMVOL    EQU   DMTLIST+8
DMHOST   EQU   DMTLIST+20
PURGLIST EQU   0
PURGFLG  EQU   PURGLIST+6
PURGHOST EQU   PURGLIST+8
SUSPLIST EQU   0
SUSPFLG  EQU   SUSPLIST+6
SUPIMED  EQU   SUSPFLG
SUPRCON  EQU   SUSPFLG
ASDSLIST EQU   0
ASDAFLG  EQU   ASDSLIST+6
ASDMNT   EQU   ASDAFLG
ASDACPU  EQU   ASDSLIST+8
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ICB2SSCB EQU   0
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBCPUID EQU   ICB2SSCB+112
ICBVOLST EQU   ICB2SSCB+124
ICBTRACE EQU   ICB2SSCB+148
ICBVLIST EQU   0
ICBVLCNT EQU   ICBVLIST
ICBVLENT EQU   ICBVLIST+4
VOLENTRY EQU   0
SLTVOLID EQU   VOLENTRY
CYLBITS  EQU   VOLENTRY+6
FVE      EQU   0
FVID     EQU   FVE
INORDER  EQU   0
REQCODE  EQU   INORDER+4
ICBPTR   EQU   0
ORDPTR   EQU   0
WHENCALL EQU   0
RECOVERY EQU   0
@NM00014 EQU   RECOVERY
ENQSW    EQU   @NM00014
ENQVOLID EQU   RECOVERY+1
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
ALLZERO  EQU   ZERO54
ARFLAG   EQU   ARFLG
ARLEN    EQU   ARLL
ARNMEXTS EQU   ARNMEXT
DMHOSTID EQU   DMHOST
DMNTLEN  EQU   DMLEN
DMOPCODE EQU   DMOPCD
DMVOLID  EQU   DMVOL
*                                      START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00015 EQU   @NM00014
LISTLEN  EQU   INORDER
@NM00016 EQU   FVE+4
ICBVLCYL EQU   ICBVLENT+6
ICBVLVID EQU   ICBVLENT
ICBLORD  EQU   ICBTRACE+256
ICBOTRC  EQU   ICBTRACE
ICBRESV  EQU   ICB2SSCB+128
ICBVSCRA EQU   ICB2SSCB+120
ICBSAMP  EQU   ICB2SSCB+118
ICBRESVD EQU   ICB2SSCB+117
ICBFAB   EQU   ICB2SSCB+108
ICBMSSC  EQU   ICB2SSCB+104
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBVVICB EQU   ICB2SSCB+76
ICBVVIC  EQU   ICB2SSCB+72
ICBSIOP  EQU   ICB2SSCB+68
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBFG3   EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00013 EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBI     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBQHEAD EQU   ICB2SSCB+36
ICBAUCB  EQU   ICB2SSCB+32
ICBPUCB  EQU   ICB2SSCB+28
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00012 EQU   CVTFIX+248
@NM00011 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ASDA002  EQU   ASDSLIST+13
@NM00010 EQU   ASDAFLG
ASDEINT  EQU   ASDAFLG
@NM00009 EQU   ASDAFLG
ASDASSOC EQU   ASDAFLG
ASASSOC  EQU   ASDAFLG
ASDA001  EQU   ASDSLIST+5
ASDAOPC  EQU   ASDSLIST+4
ASDALEN  EQU   ASDSLIST
@NM00008 EQU   SUSPFLG
SUPPRSW  EQU   SUSPFLG
@NM00007 EQU   SUSPLIST+5
SUSPOP   EQU   SUSPLIST+4
SUSPLEN  EQU   SUSPLIST
@NM00006 EQU   PURGFLG
PURGMPP  EQU   PURGFLG
@NM00005 EQU   PURGLIST+5
PURGOP   EQU   PURGLIST+4
PURGLL   EQU   PURGLIST
DMNTVUA  EQU   DMTLIST+26
DMNTRES2 EQU   DMTLIST+25
DMNTECB  EQU   DMTLIST+16
DMNTASID EQU   DMTLIST+14
DMBITRES EQU   DMNTFLAG
DMVUAVAL EQU   DMNTFLAG
DMDELRSP EQU   DMNTFLAG
DMBITRE1 EQU   DMNTFLAG
DMNTRES1 EQU   DMTLIST+5
ARNEDB   EQU   ARLIST+92
@NM00004 EQU   AREXT
ARCOMPC  EQU   ARLIST+26
@NM00003 EQU   ARLIST+25
ARECB    EQU   ARLIST+16
ARASID   EQU   ARLIST+14
@NM00002 EQU   ARFLG
ARSEC    EQU   ARFLG
@NM00001 EQU   ARLIST+5
AROP     EQU   ARLIST+4
*                                      END UNREFERENCED COMPONENTS
@RF00091 EQU   @RC00089
@RF00093 EQU   @RC00089
@RF00119 EQU   @RC00097
@RC00114 EQU   @RC00097
@RC00109 EQU   @RC00097
@RC00104 EQU   @RC00097
@RC00099 EQU   @RC00097
@RF00121 EQU   @RC00097
@RF00170 EQU   @RC00153
@RT00183 EQU   ACQBIO01
@RF00101 EQU   @RC00099
@RF00106 EQU   @RC00104
@RF00111 EQU   @RC00109
@RF00116 EQU   @RC00114
@ENDDATA EQU   *
         END   IGC0112F,(C'PLS1253',0701,78166)
