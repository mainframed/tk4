         TITLE 'ICBMSG56 - DISPLAY 3850                                *
                        '
ICBMSG56 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICBMSG56  78.180'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         LA    @09,4095(,@10)                                      0001
         LA    @08,4095(,@09)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         USING @PSTART+12285,@09                                   0001
         USING @PSTART+16380,@08                                   0001
         LA    @07,@DATA                                           0001
         LA    @06,4095(,@07)                                      0001
         LA    @05,4095(,@06)                                      0001
         USING @DATA,@07                                           0001
         USING @DATA+4095,@06                                      0001
         USING @DATA+8190,@05                                      0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                                                  0232
*/* ******************************************************   @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*  IF THERE ARE ANY CWBS ON THE INTERNAL CWB               @Z40LB01*/
*/*  QUEUE THEN GET THE TIME STAMP AND ISSUE THE             @Z40LB01*/
*/*  DISPLAY START MESSAGE.                                  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*  STATMENT LABEL - MAIN,  END STATMENT LABEL ENDMAIN...   @Z40LB01*/
*/* ******************************************************   @Z40LB01*/
*                                                                  0232
*MAIN:                              /* MAIN DO ENDMAIN END   @Z40LB01*/
*   IF CMDQUE(F1)^=F0 THEN          /* EMPTY QUE TEST        @Z40LB01*/
MAIN     L     @04,@CA01311                                        0232
         L     @04,CMDQUE-CMDQUE(,@04)                             0232
         LTR   @04,@04                                             0232
         BZ    @RF00232                                            0232
*     DO;                           /* INITIALIZE MESSAGE    @Z40LB01*/
*                                                                  0233
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE THE TIME MACRO AND TRANSLATE THE TIME       @Z40LB01*/
*       /* STAMP FOR THE DISPLAY MESSAGES.                   @Z40LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0234
*       RFY                                                        0234
*         R0 RSTD;                  /*                       @Z40LB01*/
*       GEN(TIME DEC);              /*                       @Z40LB01*/
         TIME DEC
*       TMESTAMP=R0;                /* STORE TIME RETURN     @Z40LB01*/
         ST    R0,TMESTAMP                                         0236
*       RFY                                                        0237
*         R0 UNRSTD;                /*                       @Z40LB01*/
*       UNPK(TIMEFLD,TMESTAMP);     /* UNPACK TIME           @Z40LB01*/
         UNPK  TIMEFLD(8),TMESTAMP(4)                              0238
*       HRS=HH;                     /* FILL MSG HOURS FIELD  @Z40LB01*/
         MVC   HRS(2),HH                                           0239
*       MINS=MM;                    /* FILL MSG MINUTES FLD  @Z40LB01*/
         MVC   MINS(2),MM                                          0240
*       SECS=SS;                    /* FILL MSG SECONDS FLD  @Z40LB01*/
         MVC   SECS(2),SS                                          0241
*       RETC=F0;                    /* AVOID WARNING MSG     @OZ30157*/
         SLR   @04,@04                                             0242
         STH   @04,RETC                                            0242
*QUELOOP:                           /* DO GROUP LABEL        @Z40LB01*/
*                                                                  0243
*       /*************************************************************/
*       /*                                                           */
*       /* THERE IS A MAXIMUM OF TEN CWBS ON THE INTERNAL CWB        */
*       /*                                                   @Z40LB01*/
*       /* QUEUE. THE FOLLOWING DO LOOP IS SET UP TO PROCESS @Z40LB01*/
*       /* THE CWBS FROM THE QUEUE ONE AT A TIME UNTIL THE   @Z40LB01*/
*       /* QUEUE IS EMPTY. THE DO START AND END ARE LABELED  @Z40LB01*/
*       /* QUELOOP & QUELOOPX.                               @Z40LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0243
*       DO CWBIX=F1 TO F10;         /*                       @OZ30157*/
QUELOOP  LA    @04,1                                               0243
         STH   @04,CWBIX                                           0243
@DL00243 DS    0H                                                  0244
*         FLAGS=''B;                /* CLEAR LOCAL FLAGS     @OZ24706*/
         MVI   FLAGS,X'00'                                         0244
*         CONSOL=0;                 /* SET/RESET FOR WTO     @OZ24706*/
*                                                                  0245
         SLR   @15,@15                                             0245
         ST    @15,CONSOL                                          0245
*         /***********************************************************/
*         /*                                                         */
*         /* SET CWBPTR FOR ADDRESSABILITY TO CWB            @Z40LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0246
*         IF CMDQUE(CWBIX)^=F0 THEN /* INSURE CWB IN SLOT    @ZA14724*/
         SLA   @04,2                                               0246
         L     @14,@CA01311                                        0246
         AL    @14,@CF03609                                        0246
         L     @04,CMDQUE-CMDQUE(@04,@14)                          0246
         CR    @04,@15                                             0246
         BE    @RF00246                                            0246
*           DO;                     /* IF CWB DO             @ZA14724*/
*             CWBPTR=CMDQUE(CWBIX); /*                       @OZ24706*/
         L     @14,@CA00041                                        0248
         ST    @04,CWBPTR-CWBPTR(,@14)                             0248
*             IF DSPINP^=BONE THEN  /* WAS ALREADY IN PROC ? @ZA14724*/
         TM    DSPINP(@04),B'00000001'                             0249
         BO    @RF00249                                            0249
*               DO;                 /* NO PROCESS IT         @ZA14724*/
*                 RETC=F0;          /* CLEAR RETURN CODE     @OZ30157*/
         STH   @15,RETC                                            0251
*                 DSPINP=BONE;      /* MARK IN PRCSS         @ZA14724*/
         OI    DSPINP(@04),B'00000001'                             0252
*                 IF DSPOFFS^=F0 THEN/* SET DSPQUAL IF OFFSET      0253
*                                                            @OZ30157*/
         CH    @15,DSPOFFS(,@04)                                   0253
         BE    @RF00253                                            0253
*                   DSPQUAL=BONE;   /* IS PRESENT            @OZ30157*/
         OI    DSPQUAL(@04),B'00100000'                            0254
*                 IF DSPPATH=BONE×DSPALTM=BONE×DSPTRC=BONE×/*      0255
*                                                            @OZ30157*/
*                     DSPMSVC=BONE×DSPQCB=BONE THEN/*        @OZ30157*/
@RF00253 L     @04,@CA00041                                        0255
         L     @04,CWBPTR-CWBPTR(,@04)                             0255
         TM    DSPPATH(@04),B'00000001'                            0255
         BO    @RT00255                                            0255
         TM    DSPALTM(@04),B'00011110'                            0255
         BZ    @RF00255                                            0255
@RT00255 DS    0H                                                  0256
*                   DO;             /* SET CORRECT MSG FLAG  @OZ30157*/
*                     DSPNEW=BONE;  /* AND INDICATE NEW OPS  @OZ30157*/
         L     @04,@CA00041                                        0257
         L     @04,CWBPTR-CWBPTR(,@04)                             0257
         OI    DSPNEW(@04),B'01000000'                             0257
*                     IF DSPPATH=BONE THEN/* INSURE CORRECT PATH   0258
*                                                            @OZ30157*/
         TM    DSPPATH(@04),B'00000001'                            0258
         BNO   @RF00258                                            0258
*                       DO;         /* AND CALL PATHS BUILD  @OZ30157*/
*                         IF DSPCPU=BZERO&DSPSDG=BZERO&DSPDRC=BZERO
*                           THEN    /*                       @OZ30157*/
         TM    DSPCPU(@04),B'00010010'                             0260
         BNZ   @RF00260                                            0260
         TM    DSPDRC(@04),B'10000000'                             0260
         BNZ   @RF00260                                            0260
*                           DO;     /* IF ALL OFF, SET ALL   @OZ30157*/
*                             DSPCPU=BONE;/* ON TO INSURE    @OZ30157*/
*                             DSPSDG=BONE;/* LIST ALL        @OZ30157*/
         OI    DSPCPU(@04),B'00010010'                             0263
*                             DSPDRC=BONE;/* PATHS           @OZ30157*/
         OI    DSPDRC(@04),B'10000000'                             0264
*                           END;    /*                       @OZ30157*/
*                         CALL MSG56PA;/* DO PATHS BUILD     @OZ30157*/
@RF00260 BAL   @14,MSG56PA                                         0266
*                       END;        /* END PATHS BUILD       @OZ30157*/
*                     ELSE          /* IF NOT PATHS,         @OZ30157*/
*                       IF DSPQCB=BONE THEN/* IF QCB DISPLAY @OZ30157*/
         B     @RC00258                                            0268
@RF00258 L     @04,@CA00041                                        0268
         L     @04,CWBPTR-CWBPTR(,@04)                             0268
         TM    DSPQCB(@04),B'00000100'                             0268
         BNO   @RF00268                                            0268
*                         CALL MSG56QC;/* BUILD QCB TABLES   @OZ30157*/
         BAL   @14,MSG56QC                                         0269
*                       ELSE                                       0270
*                         IF DSPTRC=BONE THEN/* IF TRACE, DO @OZ30157*/
         B     @RC00268                                            0270
@RF00268 L     @04,@CA00041                                        0270
         L     @04,CWBPTR-CWBPTR(,@04)                             0270
         TM    DSPTRC(@04),B'00001000'                             0270
         BNO   @RF00270                                            0270
*                           DO;     /* QUERIES               @OZ30157*/
*                             QAPTR(1)=ADDR(QUBUF1);/* FST QRY     0272
*                                      ADDRESS               @OZ30157*/
         LA    @04,44                                              0272
         AL    @04,WORKPTR                                         0272
         ST    @04,QAPTR                                           0272
*                             QBCNT=F2;/* 2 QUERIES          @OZ30157*/
         MVC   QBCNT(4),@CF00056                                   0273
*                             QBENT(1)=QBW57;/* NEED SECT 57 IN B1 0274
*                                                            @OZ30157*/
         MVI   QBENT+12,C' '                                       0274
         MVC   QBENT+13(31),QBENT+12                               0274
         MVC   QBENT(12),QBW57                                     0274
*                             QBENT(2)=QBVER1;/* VERIFICATION TABLE
*                                                            @OZ30157*/
         MVI   QBENT+56,C' '                                       0275
         MVC   QBENT+57(31),QBENT+56                               0275
         MVC   QBENT+44(12),QBVER1                                 0275
*                             QBINDX(2)=F2;/* IN BUFFER 2    @OZ30157*/
         MVI   QBINDX+44,X'02'                                     0276
*                             CALL MSG56GQ;/* GET QUERY DATA @OZ30157*/
         BAL   @14,MSG56GQ                                         0277
*                             IF RETC=F0 THEN/* IF QUERIES GOOD,   0278
*                                                            @OZ30157*/
         LH    @04,RETC                                            0278
         LTR   @04,@04                                             0278
         BNZ   @RF00278                                            0278
*                               DO; /* THEN SET SWITCHES TO  @OZ30157*/
*                                 VALSSID=BONE;/* CALL THE MSG56TR 0280
*                                                            @OZ30157*/
*                                 VALCODE=BONE;/* MODULE IN THE    0281
*                                                            @OZ30157*/
         OI    VALSSID,B'01001000'                                 0281
*                               END;/* NEXT SECTIONION       @OZ30157*/
*                           END;    /* END TRACE QUERIES     @OZ30157*/
*                         ELSE      /* IF NOT TRACE,         @OZ30157*/
*                           DO;     /* MUST BE ALTMSC OR     @OZ30157*/
         B     @RC00270                                            0284
@RF00270 DS    0H                                                  0285
*                             VALSSID=BONE;/* MSVC, SO SAY IS VALID
*                                                            @OZ30157*/
*                             VALCODE=BONE;/* FOR LATER CALL TO    0286
*                                                            @OZ30157*/
         OI    VALSSID,B'01001000'                                 0286
*                           END;    /* MSG56AL OR MSG56MS    @OZ30157*/
*                   END;            /* END MSG BUILD NEW OPTS@OZ30157*/
*                 ELSE              /* MUST BE ORD DISP      @OZ30157*/
*                   DO;             /* START MSG92 ANALYSIS  @OZ30157*/
*                                                                  0289
         B     @RC00255                                            0289
@RF00255 DS    0H                                                  0290
*                     /***********************************************/
*                     /*                                             */
*                     /* CLEAR REQUESTED BIT AND CHARACTER STRINGS   */
*                     /*                                     @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0290
*                     REQBIT=''B;   /*                       @Z40LB01*/
         XC    REQBIT(40),REQBIT                                   0290
*                     RNGCHAR(1:160)=''B;/*                  @Z40LB01*/
         L     @04,WORKPTR                                         0291
         XC    RNGCHAR(160,@04),RNGCHAR(@04)                       0291
*                     RNGCHAR(161:320)=''B;/*                @Z40LB01*/
*                                                                  0292
         XC    RNGCHAR+160(160,@04),RNGCHAR+160(@04)               0292
*                     /***********************************************/
*                     /*                                             */
*                     /* CLEAR STATUS AND REQUEST FLAGS FOR EACH CWB */
*                     /*                                     @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0293
*                     REQFLG=''B;   /*                       @Z40LB01*/
*                                                                  0293
         MVI   REQFLG,X'00'                                        0293
*                     /***********************************************/
*                     /*                                             */
*                     /* TEST FOR DISPLAY ALL AND SET THE APPROPRIATE*/
*                     /*                                     @Z40LB01*/
*                     /* VALUES IN THE REQCHAR ARRAY.        @OZ30157*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0294
*                     IF DSPALL=BONE THEN/* TEST FOR REQUEST ALL   0294
*                                                            @Z40LB01*/
         L     @15,@CA00041                                        0294
         L     @15,CWBPTR-CWBPTR(,@15)                             0294
         TM    DSPALL(@15),B'10000000'                             0294
         BNO   @RF00294                                            0294
*                       REQCHAR(1)=CONE;/* IF ON, SET FOR ONES     0295
*                                                            @OZ30157*/
         MVC   REQCHAR+320(1,@04),CONE                             0295
*                     ELSE          /* IF OFF,               @OZ30157*/
*                       REQCHAR(1)=''B;/* SET FOR NULLS      @OZ30157*/
         B     @RC00294                                            0296
@RF00294 L     @04,WORKPTR                                         0296
         MVI   REQCHAR+320(@04),X'00'                              0296
*                     DO I=F2 TO F320;/* SET ARRAY TO ALL SAME     0297
*                                                            @OZ30157*/
@RC00294 LA    @04,2                                               0297
         STH   @04,I                                               0297
@DL00297 DS    0H                                                  0298
*                       REQCHAR(I)=REQCHAR(1);/* EITHER NULL OR F0 0298
*                                                            @OZ30157*/
         LA    @15,320                                             0298
         AL    @15,WORKPTR                                         0298
         ALR   @04,@15                                             0298
         BCTR  @04,0                                               0298
         MVC   @TS00001(1),REQCHAR(@15)                            0298
         MVC   REQCHAR(1,@04),@TS00001                             0298
*                     END;          /* END INITIALIZE        @OZ30157*/
         LH    @15,I                                               0299
         AH    @15,@CH00047                                        0299
         LR    @04,@15                                             0299
         STH   @04,I                                               0299
         CH    @04,@CH01355                                        0299
         BNH   @DL00297                                            0299
*                                                                  0300
*                     /***********************************************/
*                     /*                                             */
*                     /* TEST TO SEE IF THE REQUEST IS FOR A SINGLE  */
*                     /* SSID.                               @OZ30157*/
*                     /* IF IT IS, SET THE APPROPRIATE REQBIT FOR THE*/
*                     /* SSID.                               @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0300
*                     IF DSPSSID=BONE&DSPQUAL=BONE THEN/* SINGLE SSID
*                                      ?                     @OZ30157*/
         L     @04,@CA00041                                        0300
         L     @04,CWBPTR-CWBPTR(,@04)                             0300
         TM    DSPSSID(@04),B'00000100'                            0300
         BNO   @RF00300                                            0300
         TM    DSPQUAL(@04),B'00100000'                            0300
         BNO   @RF00300                                            0300
*                       DO;         /* REQ FOR SINGLE SSID   @Z40LB01*/
*                         QUALLEN(1)=F3;/* EXPECT 3 CHARACTERS     0302
*                                                            @OZ30157*/
         MVC   QUALLEN(2),@CH00060                                 0302
*                         QUALLEN(2)=F0;/* IN ONE QUALIFIER  @OZ30157*/
         SLR   @04,@04                                             0303
         STH   @04,QUALLEN+2                                       0303
*                         CALL MSG56QU;/*                    @OZ30157*/
         BAL   @14,MSG56QU                                         0304
*                         IF RETC=F0 THEN/*                  @OZ30157*/
         LH    @04,RETC                                            0305
         LTR   @04,@04                                             0305
         BNZ   @RF00305                                            0305
*                           DO I=F1 TO F320;/* SCAN TABL SSIDS     0306
*                                                            @Z40LB01*/
         LA    @04,1                                               0306
         STH   @04,I                                               0306
@DL00306 DS    0H                                                  0307
*                             IF QUAL(1,1:3)=SSIDS(I) THEN/* MATCH 0307
*                                      FOUND                 @OZ30157*/
         LR    @15,@04                                             0307
         MH    @15,@CH00060                                        0307
         LA    @14,SSIDS-3(@15)                                    0307
         CLC   QUAL(3),0(@14)                                      0307
         BNE   @RF00307                                            0307
*                               REQCHAR(I)=CONE;/* SET ITS REQBIT  0308
*                                                            @Z40LB01*/
         L     @15,WORKPTR                                         0308
         ALR   @15,@04                                             0308
         MVC   REQCHAR+319(1,@15),CONE                             0308
*                           END;    /* END TABL SCAN         @Z40LB01*/
@RF00307 LA    @04,1                                               0309
         AH    @04,I                                               0309
         STH   @04,I                                               0309
         CH    @04,@CH01355                                        0309
         BNH   @DL00306                                            0309
*                       END;        /* END SINGLE SSID CODE  @Z40LB01*/
@RF00305 DS    0H                                                  0311
*                                                                  0311
*                     /***********************************************/
*                     /*                                             */
*                     /* IF REQUEST IS NOT FOR SINGLE SSID THEN TEST */
*                     /* TO                                  @Z40LB01*/
*                     /* SEE IF THE REQUEST IS FOR A SDG DISPLAY. IF */
*                     /* THE                                 @Z40LB01*/
*                     /* REQUEST IS FOR A SDG DISPLAY, THE SDG NUMBER*/
*                     /*                                     @Z40LB01*/
*                     /* HAS TO BE TRANSLATED TO BINARY TO USE IT FOR*/
*                     /*                                     @Z40LB01*/
*                     /* INDEXING INTO THE BIT ARRAYS TO SET THE     */
*                     /* REQUEST                             @Z40LB01*/
*                     /* BITS FOR ALL THE SSIDS IN THAT SDG. @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0311
*                     IF DSPSDG=BONE&DSPQUAL=BONE THEN/* SDG REQUEST
*                                      ?                     @OZ30157*/
@RF00300 L     @04,@CA00041                                        0311
         L     @04,CWBPTR-CWBPTR(,@04)                             0311
         TM    DSPSDG(@04),B'00010000'                             0311
         BNO   @RF00311                                            0311
         TM    DSPQUAL(@04),B'00100000'                            0311
         BNO   @RF00311                                            0311
*                       DO;         /* REQUEST IS FOR SDG    @Z40LB01*/
*                         INTER=''B;/* CLEAR CONV WORK AREA  @Z40LB01*/
         L     @04,@CA01302                                        0313
         XC    INTER-INTER(4,@04),INTER-INTER(@04)                 0313
*                         QUALLEN(1)=F2;/* ONE QUALIFIER, 2  @OZ30157*/
         MVC   QUALLEN(2),@CH00056                                 0314
*                         QUALLEN(2)=F0;/* BYTES LONG EXPECTED     0315
*                                                            @OZ30157*/
         SLR   @04,@04                                             0315
         STH   @04,QUALLEN+2                                       0315
*                         CALL MSG56QU;/* GO GET IT          @OZ30157*/
         BAL   @14,MSG56QU                                         0316
*                         IF RETC=F0 THEN/* IF GOOD VALUE,   @OZ30157*/
         LH    @04,RETC                                            0317
         LTR   @04,@04                                             0317
         BNZ   @RF00317                                            0317
*                           DO;     /* CONVERT IT            @OZ30157*/
*                             BYTES34=QUAL(1,1:2);/* MOVE IN SDG NO
*                                                            @OZ30157*/
         L     @04,@CA01302                                        0319
         MVC   BYTES34-INTER(2,@04),QUAL                           0319
*                             PACK(INTER,BYTES34);/* PACK SDG NO   0320
*                                                            @Z40LB01*/
         PACK  INTER-INTER(4,@04),BYTES34-INTER(2,@04)             0320
*                             CVB(SDGNO,BYTES34);/* CONVERT TO BINARY
*                                                            @Z40LB01*/
         XC    @TS00001(8),@TS00001                                0321
         MVC   @TS00001+6(2),BYTES34-INTER(@04)                    0321
         CVB   @04,@TS00001                                        0321
         STH   @04,SDGNO                                           0321
*                             SDGNO=SDGNO+F1;/* ADD ONE FOR INDEXING
*                                                            @Z40LB01*/
         LA    @15,1                                               0322
         ALR   @04,@15                                             0322
         STH   @04,SDGNO                                           0322
*                             IF SDGNO>=F1&SDGNO<=F28 THEN/* SDG NO
*                                      IN RANGE              @Z40LB01*/
         CR    @04,@15                                             0323
         BL    @RF00323                                            0323
         CH    @04,@CH01339                                        0323
         BH    @RF00323                                            0323
*                               DO; /* SET REQUEST           @Z40LB01*/
*                                 DO I=F1 TO F8;/* SCAN THIS SDG   0325
*                                                            @Z40LB01*/
         STH   @15,I                                               0325
@DL00325 DS    0H                                                  0326
*                                   SDGCHR(SDGNO,I)=CONE;/* SET    0326
*                                      REQUESTED BITS        @Z40LB01*/
         LH    @04,SDGNO                                           0326
         SLA   @04,3                                               0326
         ALR   @04,@15                                             0326
         L     @14,WORKPTR                                         0326
         ALR   @14,@04                                             0326
         MVC   SDGCHR+311(1,@14),CONE                              0326
*                                 END;/* END SDG SCAN        @Z40LB01*/
         AH    @15,@CH00047                                        0327
         STH   @15,I                                               0327
         CH    @15,@CH00036                                        0327
         BNH   @DL00325                                            0327
*                               END;/* END SET REQUEST       @Z40LB01*/
*                           END;    /* GOOD CONVERT          @OZ30157*/
@RF00323 DS    0H                                                  0330
*                       END;        /* END SDG CODE          @Z40LB01*/
@RF00317 DS    0H                                                  0331
*RNGDO:                             /* RANGE REQUEST LABEL   @Z40LB01*/
*                                                                  0331
*                     /***********************************************/
*                     /*                                             */
*                     /* IF THE REQUEST IS NOT FOR SDG THEN IT MUST  */
*                     /* BE                                  @Z40LB01*/
*                     /* A RANGE DISPLAY. THE RANGE DISPLAY IS THE   */
*                     /* MOST                                @Z40LB01*/
*                     /* COMPLEX TO BREAK DOWN INTO THE VARIOUS TYPES*/
*                     /*                                     @Z40LB01*/
*                     /* AND SSIDS WHICH MUST BE DISPLAYED.  @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0331
*                     IF DSPRNG=BONE THEN/* TEST RANGE REQUEST     0331
*                                                            @Z40LB01*/
@RF00311 DS    0H                                                  0331
RNGDO    L     @04,@CA00041                                        0331
         L     @04,CWBPTR-CWBPTR(,@04)                             0331
         TM    DSPRNG(@04),B'00001000'                             0331
         BNO   @RF00331                                            0331
*                       DO;         /* RANGE DISPLAY REQ     @Z40LB01*/
*                                                                  0332
*                         /*******************************************/
*                         /*                                         */
*                         /* BUILD A TEMP TABLE OF SSID NAMES IN     */
*                         /* ASCENDING                       @Z40LB01*/
*                         /* NUMERIC SEQUENCE. THIS TABLE WILL BE    */
*                         /* USED IN                         @Z40LB01*/
*                         /* CONJUNCTION WITH THE RNGCHAR ARRAY TO   */
*                         /* SET                             @Z40LB01*/
*                         /* REQUESTED BITS FOR THE RANGE.   @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0333
*                         DTBDA1=SRTSDA1;/* GET DASD SSIDS   @OZ30157*/
         LA    @04,640                                             0333
         AL    @04,WORKPTR                                         0333
         MVC   DTBDA1(224,@04),SRTSDA1                             0333
*                         DTBDA2=SRTSDA2;/* GET DASD SSIDS   @OZ30157*/
         MVC   DTBDA2(224,@04),SRTSDA2                             0334
*                         DTBDA3=SRTSDA3;/* GET DASD SSIDS   @OZ30157*/
         MVC   DTBDA3(224,@04),SRTSDA3                             0335
*                         DTBMSF=SRTMSFS;/* GET MSF SSIDS    @OZ30157*/
         MVC   DTBMSF(24,@04),SRTMSFS                              0336
*                         DTBDRD=SRTDRDS;/* GET DRD SSIDS    @OZ30157*/
         MVC   DTBDRD(96,@04),SRTDRDS                              0337
*                         DTBDRC=SRTDRCS;/* GET DRC SSIDS    @OZ30157*/
         MVC   DTBDRC(48,@04),SRTDRCS                              0338
*                         DTBSA=SRTSAS;/* GET SA SSIDS       @OZ30157*/
*                                                                  0339
         MVC   DTBSA(48,@04),SRTSAS                                0339
*                         /*******************************************/
*                         /*                                         */
*                         /* FIND INDEX FOR FIRST AND LAST SSID      */
*                         /* REQUESTED                       @Z40LB01*/
*                         /* IN THE OPERATOR COMMAND. USE THE START  */
*                         /* AND                             @Z40LB01*/
*                         /* END INCREMENTS AS LOOP CONTROL VALUES TO*/
*                         /* SET                             @Z40LB01*/
*                         /* THE PROPER REQUESTS.            @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0340
*                         STARTI=F0;/* SET FOR CMPLR WARNING @Z40LB01*/
         SLR   @04,@04                                             0340
         STH   @04,STARTI                                          0340
*                         ENDI=F0;  /* SET FOR CMPLR WARNING @Z40LB01*/
         STH   @04,ENDI                                            0341
*                         EXITSW=BZERO;/* CLEAR LOOP EXIT SW @Z40LB01*/
         L     @04,@CA01294                                        0342
         NI    EXITSW-BITSW(@04),B'11110111'                       0342
*                         QUALLEN(1)=F3;/* NEED TWO QUALIFIERS,    0343
*                                                            @OZ30157*/
         LA    @04,3                                               0343
         STH   @04,QUALLEN                                         0343
*                         QUALLEN(2)=F3;/* EACH 3 BYTES LONG @OZ30157*/
         STH   @04,QUALLEN+2                                       0344
*                         CALL MSG56QU;/* GO GET THEM        @OZ30157*/
         BAL   @14,MSG56QU                                         0345
*                         IF RETC=F0 THEN/* IF GOOD QUALIFIERS     0346
*                                                            @OZ30157*/
         LH    @04,RETC                                            0346
         LTR   @04,@04                                             0346
         BNZ   @RF00346                                            0346
*                           DO;     /* THEN PROCESS RANGE REQ@OZ30157*/
*                             CMPSSID1=QUAL(1,1:3);/* SET START SSID
*                                                            @OZ30157*/
         MVC   CMPSSID1(3),QUAL                                    0348
*                             TR(CMPSSID1,TRANS);/* TRANSLATE ALPHAS
*                                                            @X50AC01*/
         TR    CMPSSID1(3),TRANS                                   0349
*                             DO I=F1 TO F296 WHILE EXITSW=BZERO;/*
*                                      MATCH                 @Z40LB01*/
         LA    @04,1                                               0350
         STH   @04,I                                               0350
@DL00350 L     @15,@CA01294                                        0350
         TM    EXITSW-BITSW(@15),B'00001000'                       0350
         BNZ   @DC00350                                            0350
*                               CMPSSID2=DSPSSIDS(I);/* SET ARRAY  0351
*                                      SSID                  @Z40LB01*/
         LR    @14,@04                                             0351
         MH    @14,@CH00060                                        0351
         L     @03,WORKPTR                                         0351
         ALR   @03,@14                                             0351
         MVC   CMPSSID2(3),DSPSSIDS+637(@03)                       0351
*                               TR(CMPSSID2,TRANS);/* TRANSLATE    0352
*                                      ALPHAS                @Z40LB01*/
         TR    CMPSSID2(3),TRANS                                   0352
*                               IF CMPSSID1<=CMPSSID2 THEN/* TEST  0353
*                                      MATCH                 @Z40LB01*/
         CLC   CMPSSID1(3),CMPSSID2                                0353
         BH    @RF00353                                            0353
*                                 DO;/* MATCH FOUND          @Z40LB01*/
*                                   STARTI=I;/* KEEP START INDEX   0355
*                                                            @Z40LB01*/
         STH   @04,STARTI                                          0355
*                                   EXITSW=BONE;/* SET LOOP EXIT   0356
*                                                            @Z40LB01*/
         OI    EXITSW-BITSW(@15),B'00001000'                       0356
*                                 END;/* END MATCH CODE      @Z40LB01*/
*                             END;  /* END LOOP              @Z40LB01*/
@RF00353 LA    @04,1                                               0358
         AH    @04,I                                               0358
         STH   @04,I                                               0358
         CH    @04,@CH01353                                        0358
         BNH   @DL00350                                            0358
@DC00350 DS    0H                                                  0359
*                             IF EXITSW=BZERO THEN/* STARTI SET ?  0359
*                                                            @Z40LB01*/
         L     @04,@CA01294                                        0359
         TM    EXITSW-BITSW(@04),B'00001000'                       0359
         BNZ   @RF00359                                            0359
*                               STARTI=F320;/* SET TO LAST SSID    0360
*                                                            @Z40LB01*/
         MVC   STARTI(2),@CH01355                                  0360
*                             EXITSW=BZERO;/* CLEAR LOOP EXIT SW   0361
*                                                            @Z40LB01*/
@RF00359 L     @04,@CA01294                                        0361
         NI    EXITSW-BITSW(@04),B'11110111'                       0361
*                             CMPSSID1=QUAL(2,1:3);/* SET END SSID 0362
*                                                            @OZ30157*/
         MVC   CMPSSID1(3),QUAL+11                                 0362
*                             TR(CMPSSID1,TRANS);/* TRANSLATE ALPHAS
*                                                            @Z40LB01*/
         TR    CMPSSID1(3),TRANS                                   0363
*                             DO I=F296 TO F1 BY-1 WHILE(EXITSW=BZERO);
         LA    @04,296                                             0364
         STH   @04,I                                               0364
@DL00364 L     @15,@CA01294                                        0364
         TM    EXITSW-BITSW(@15),B'00001000'                       0364
         BNZ   @DC00364                                            0364
*                                   /*                       @OZ30157*/
*                               CMPSSID2=DSPSSIDS(I);/* SET ARRAY  0365
*                                      SSID                  @Z40LB01*/
         LR    @15,@04                                             0365
         MH    @15,@CH00060                                        0365
         L     @14,WORKPTR                                         0365
         ALR   @14,@15                                             0365
         MVC   CMPSSID2(3),DSPSSIDS+637(@14)                       0365
*                               TR(CMPSSID2,TRANS);/* TRANSLATE    0366
*                                      ALPHAS                @Z40LB01*/
         TR    CMPSSID2(3),TRANS                                   0366
*                               IF CMPSSID1>=CMPSSID2 THEN/* TEST  0367
*                                      MATCH                 @OZ30157*/
         CLC   CMPSSID1(3),CMPSSID2                                0367
         BL    @RF00367                                            0367
*                                 DO;/* MATCH FOUND          @Z40LB01*/
*                                   IF CMPSSID1>CMPSSID2 THEN/* TEST
*                                      FOR LOW               @OZ30157*/
         CLC   CMPSSID1(3),CMPSSID2                                0369
         BNH   @RF00369                                            0369
*                                    ENDI=I+F1;/* SET TO NEXT LOW  0370
*                                      SSID                  @OZ30157*/
         LA    @04,1(,@04)                                         0370
         STH   @04,ENDI                                            0370
*                                   ELSE/* NOT LOW           @Z40LB01*/
*                                    ENDI=I;/* SET TO CURRENT SSID 0371
*                                                            @Z40LB01*/
         B     @RC00369                                            0371
@RF00369 MVC   ENDI(2),I                                           0371
*                                   EXITSW=BONE;/* SET LOOP EXIT   0372
*                                                            @Z40LB01*/
@RC00369 L     @04,@CA01294                                        0372
         OI    EXITSW-BITSW(@04),B'00001000'                       0372
*                                 END;/* END MATCH CODE      @Z40LB01*/
*                             END;  /* END LOOP              @Z40LB01*/
@RF00367 SLR   @04,@04                                             0374
         BCTR  @04,0                                               0374
         AH    @04,I                                               0374
         STH   @04,I                                               0374
         LTR   @04,@04                                             0374
         BP    @DL00364                                            0374
@DC00364 DS    0H                                                  0375
*                             IF EXITSW=BZERO THEN/* END SSID TO   0375
*                                      GREAT                 @Z40LB01*/
         L     @04,@CA01294                                        0375
         TM    EXITSW-BITSW(@04),B'00001000'                       0375
         BNZ   @RF00375                                            0375
*                               ENDI=F296;/* SET TO LAST SSID      0376
*                                                            @Z40LB01*/
         MVC   ENDI(2),@CH01353                                    0376
*                             EXITSW=BZERO;/* CLEAR LOOP EXIT SW   0377
*                                                            @Z40LB01*/
*                                                                  0377
@RF00375 L     @04,@CA01294                                        0377
         NI    EXITSW-BITSW(@04),B'11110111'                       0377
*                             /***************************************/
*                             /*                                     */
*                             /* USING THE START AND END INDEX SET   */
*                             /* THE MATCHING                @Z40LB01*/
*                             /* RNGCHAR                     @Z40LB01*/
*                             /*                                     */
*                             /***************************************/
*                                                                  0378
*                             DO I=STARTI TO ENDI;/* LOOP START    0378
*                                                            @Z40LB01*/
         LH    @04,STARTI                                          0378
         B     @DE00378                                            0378
@DL00378 DS    0H                                                  0379
*                               RNGCHAR(I)=CONE;/* SET RNGCHAR     0379
*                                                            @Z40LB01*/
         L     @15,WORKPTR                                         0379
         ALR   @15,@04                                             0379
         BCTR  @15,0                                               0379
         MVC   RNGCHAR(1,@15),CONE                                 0379
*                             END;  /* LOOP END              @Z40LB01*/
*                                                                  0380
         AH    @04,@CH00047                                        0380
@DE00378 STH   @04,I                                               0380
         CH    @04,ENDI                                            0380
         BNH   @DL00378                                            0380
*                             /***************************************/
*                             /*                                     */
*                             /* MOVE THE NUMERIC SEQUENCED RNGCHAR  */
*                             /* TO THE MSC                  @Z40LB01*/
*                             /* SEQUENCED REQCHAR STRUCTURE.        */
*                             /*                             @Z40LB01*/
*                             /*                                     */
*                             /***************************************/
*                                                                  0381
*                             SDGCHRA=SDGRNGA;/* SDG ELEMENTS      0381
*                                                            @OZ30157*/
         L     @04,WORKPTR                                         0381
         LA    @15,320                                             0381
         ALR   @15,@04                                             0381
         MVI   SDGCHRA+224(@15),C' '                               0381
         MVC   SDGCHRA+225(15,@15),SDGCHRA+224(@15)                0381
         MVC   SDGCHRA(224,@15),SDGRNGA(@04)                       0381
*                             DRDCHRA=DRDRNGA;/* DRD ELEMENTS      0382
*                                                            @OZ30157*/
         MVC   DRDCHRA(32,@15),DRDRNGA(@04)                        0382
*                             DRCCHRA=DRCRNGA;/* DRC ELEMENTS      0383
*                                                            @OZ30157*/
         MVC   DRCCHRA(16,@15),DRCRNGA(@04)                        0383
*                             SACHRA=SARNGA;/* SA ELEMENTS   @OZ30157*/
         MVC   SACHRA(16,@15),SARNGA(@04)                          0384
*                             MSFCHRA=MSFRNGA;/* MSF ELEMENT @OZ30157*/
         MVC   MSFCHRA(8,@15),MSFRNGA(@04)                         0385
*                           END;    /* END GOOD QUALIFIERS   @OZ30157*/
*RNGEND:                                                           0387
*                       END;        /* END RANGE REQUEST     @Z40LB01*/
@RF00346 DS    0H                                                  0387
RNGEND   DS    0H                                                  0388
*                                                                  0388
*                     /***********************************************/
*                     /*                                             */
*                     /* AT THIS POINT THE REQCHAR ARRAY HAS ALL THE */
*                     /*                                     @Z40LB01*/
*                     /* REQUESTED SSIDS IN THE COMMAND SPECIFIED BY */
*                     /*                                     @Z40LB01*/
*                     /* THE OPERATOR. NOW WE HAVE TO CONVERT THIS   */
*                     /*                                     @Z40LB01*/
*                     /* CHARACTER ARRAY TO A BIT ARRAY SO THE       */
*                     /*                                     @Z40LB01*/
*                     /* REQUESTS CAN BE COORDINATED WITH THE MSG92  */
*                     /*                                     @Z40LB01*/
*                     /* DATA.                               @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0388
*                     DO I=F1 TO F40;/* BYTE LOOP            @Z40LB01*/
@RF00331 LA    @04,1                                               0388
         STH   @04,I                                               0388
@DL00388 DS    0H                                                  0389
*                       DO K=F1 TO F8;/* BIT LOOP            @Z40LB01*/
         LA    @04,1                                               0389
         STH   @04,K                                               0389
@DL00389 DS    0H                                                  0390
*                         IF REQCHAR((I-1)*8+K)=CONE THEN/*  @Z40LB01*/
         LH    @15,I                                               0390
         LR    @14,@15                                             0390
         BCTR  @14,0                                               0390
         SLA   @14,3                                               0390
         ALR   @14,@04                                             0390
         L     @03,WORKPTR                                         0390
         ALR   @03,@14                                             0390
         CLC   REQCHAR+319(1,@03),CONE                             0390
         BNE   @RF00390                                            0390
*                           RBIT(I)=(RBIT(I)×CONFGMSK(K));/* @Z40LB01*/
         LA    @14,RBIT-1(@15)                                     0391
         L     @15,@CA01312                                        0391
         ALR   @15,@04                                             0391
         BCTR  @15,0                                               0391
         OC    0(1,@14),CONFGMSK-CONFGMSK(@15)                     0391
*                       END;        /* END BIT LOOP          @Z40LB01*/
@RF00390 LA    @04,1                                               0392
         AH    @04,K                                               0392
         STH   @04,K                                               0392
         CH    @04,@CH00036                                        0392
         BNH   @DL00389                                            0392
*                     END;          /* END BYTE LOOP         @Z40LB01*/
*                                                                  0393
         LA    @04,1                                               0393
         AH    @04,I                                               0393
         STH   @04,I                                               0393
         CH    @04,@CH01344                                        0393
         BNH   @DL00388                                            0393
*                     /***********************************************/
*                     /*                                             */
*                     /* REQUEST BITS AS SET NOW INCLUDE ALL SSIDS   */
*                     /*                                     @Z40LB01*/
*                     /* REQUESTED IN THE OPERATOR COMMAND. THE      */
*                     /* REQUEST                             @Z40LB01*/
*                     /* BITS MUST BE MATCHED AGAINST THE MSC EXIST  */
*                     /* BITS                                @Z40LB01*/
*                     /* AND ANY REQUESTED BUT NOT VALID MUST BE     */
*                     /* RESET                               @Z40LB01*/
*                     /* TO ZERO.                            @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0394
*                     REQBIT=(REQBIT&EXISTARY);/*            @Z40LB01*/
*                                                                  0394
         L     @04,@CA01293                                        0394
         LA    @15,2                                               0394
         AL    @15,MSGPTR-MSGPTR(,@04)                             0394
         NC    REQBIT(40),EXISTARY(@15)                            0394
*                     /***********************************************/
*                     /*                                             */
*                     /* REQUEST BITS AS SET NOW INCLUDE ALL         */
*                     /* REQUESTED                           @Z40LB01*/
*                     /* AND VALID. IF THE DISPLAY COMMAND REQUESTED */
*                     /*                                     @Z40LB01*/
*                     /* ONLY ONLINE UNITS, THE REQUEST BITS MUST NOW*/
*                     /*                                     @Z40LB01*/
*                     /* BE MATCHED AGAINST THE MSC ONLINE BITS AND  */
*                     /*                                     @Z40LB01*/
*                     /* ANY OF THE REQUEST BITS WHICH ARE NOT ONLINE*/
*                     /*                                     @Z40LB01*/
*                     /* MUST BE RESET TO ZERO.              @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0395
*                     IF DSPON=BONE THEN/*                   @Z40LB01*/
         L     @04,@CA00041                                        0395
         L     @04,CWBPTR-CWBPTR(,@04)                             0395
         TM    DSPON(@04),B'01000000'                              0395
         BNO   @RF00395                                            0395
*                       REQBIT=(REQBIT&ONLINARY);/*          @Z40LB01*/
*                                                                  0396
         NC    REQBIT(40),ONLINARY(@15)                            0396
*                     /***********************************************/
*                     /*                                             */
*                     /* OFFLINE IS MUTUALLY EXCLUSIVE OF ONLINE AND */
*                     /* IF                                  @OZ30157*/
*                     /* THE DISPLAY REQUEST WAS FOR ONLY OFFLINE    */
*                     /* UNITS,                              @Z40LB01*/
*                     /* THE REQUEST BITS WILL STILL INCLUDE THE     */
*                     /* REQUESTED                           @Z40LB01*/
*                     /* AND VALID SSIDS. IF OFFLINE ONLY WAS        */
*                     /* REQUESTED,                          @Z40LB01*/
*                     /* THE REQUEST BITS ARE EXCLUSIVELY OR'D WITH  */
*                     /* THE                                 @OZ30157*/
*                     /* MSC ONLINE BITS TO REDUCE THE REQUESTS TO   */
*                     /* ONLY                                @Z40LB01*/
*                     /* THOSE REQUESTED WHICH ARE NOT ONLINE.       */
*                     /*                                     @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0397
*                     IF DSPOFF=BONE THEN/*                  @Z40LB01*/
@RF00395 L     @04,@CA00041                                        0397
         L     @04,CWBPTR-CWBPTR(,@04)                             0397
         TM    DSPOFF(@04),B'00100000'                             0397
         BNO   @RF00397                                            0397
*                       DO;         /*                       @Z40LB01*/
*                         OFFMASK=(ONLINARY&REQBIT);/*       @Z40LB01*/
         L     @04,@CA01293                                        0399
         L     @04,MSGPTR-MSGPTR(,@04)                             0399
         MVC   OFFMASK(40),ONLINARY+2(@04)                         0399
         NC    OFFMASK(40),REQBIT                                  0399
*                         REQBIT=(REQBIT&&OFFMASK);/*        @Z40LB01*/
         XC    REQBIT(40),OFFMASK                                  0400
*                       END;        /*                       @Z40LB01*/
*                                                                  0401
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESSING OF THIS DISPLAY REQUEST FROM HERE*/
*                     /* CAN                                 @Z40LB01*/
*                     /* BE CONTROLLED BY REQUEST BITS AS THEY ARE   */
*                     /* NOW                                 @Z40LB01*/
*                     /* SET.                                @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0402
*                                                                  0402
*                     /***********************************************/
*                     /*                                             */
*                     /* TO BYPASS SOME CODE IF NOT REQUIRED, DO A   */
*                     /* SCAN                                @Z40LB01*/
*                     /* OF THE FINAL REQUEST BITS TO SEE IF ANY ARE */
*                     /*                                     @Z40LB01*/
*                     /* STILL SET. IF THERE ARE NONE THEN THE REST  */
*                     /*                                     @Z40LB01*/
*                     /* OF THE PROCESSING FOR THIS CWB CAN BE       */
*                     /* BYPASSED.                           @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0402
*                     DO I=F1 TO F4;/*                       @Z40LB01*/
@RF00397 LA    @04,1                                               0402
         STH   @04,I                                               0402
@DL00402 DS    0H                                                  0403
*                       IF RBIT(I)^=F0 THEN/*                @Z40LB01*/
         SLR   @00,@00                                             0403
         IC    @00,RBIT-1(@04)                                     0403
         CH    @00,@CH00226                                        0403
         BE    @RF00403                                            0403
*                         DRDFLG=BONE;/*                     @Z40LB01*/
         OI    DRDFLG,B'00100000'                                  0404
*                     END;          /*                       @Z40LB01*/
@RF00403 LA    @04,1                                               0405
         AH    @04,I                                               0405
         STH   @04,I                                               0405
         CH    @04,@CH00045                                        0405
         BNH   @DL00402                                            0405
*                     DO I=F5 TO F6;/*                       @Z40LB01*/
         LA    @04,5                                               0406
         STH   @04,I                                               0406
@DL00406 DS    0H                                                  0407
*                       IF RBIT(I)^=F0 THEN/*                @Z40LB01*/
         SLR   @00,@00                                             0407
         IC    @00,RBIT-1(@04)                                     0407
         CH    @00,@CH00226                                        0407
         BE    @RF00407                                            0407
*                         SAFLG=BONE;/*                      @Z40LB01*/
         OI    SAFLG,B'00001000'                                   0408
*                     END;          /*                       @Z40LB01*/
@RF00407 LA    @04,1                                               0409
         AH    @04,I                                               0409
         STH   @04,I                                               0409
         CH    @04,@CH00038                                        0409
         BNH   @DL00406                                            0409
*                     DO I=F7 TO F8;/*                       @Z40LB01*/
         LA    @04,7                                               0410
         STH   @04,I                                               0410
@DL00410 DS    0H                                                  0411
*                       IF RBIT(I)^=F0 THEN/*                @Z40LB01*/
         SLR   @00,@00                                             0411
         IC    @00,RBIT-1(@04)                                     0411
         CH    @00,@CH00226                                        0411
         BE    @RF00411                                            0411
*                         DRCFLG=BONE;/*                     @Z40LB01*/
         OI    DRCFLG,B'00010000'                                  0412
*                     END;          /*                       @Z40LB01*/
@RF00411 LA    @04,1                                               0413
         AH    @04,I                                               0413
         STH   @04,I                                               0413
         CH    @04,@CH00036                                        0413
         BNH   @DL00410                                            0413
*                     EXITSW=BZERO; /*                       @Z40LB01*/
         L     @04,@CA01294                                        0414
         NI    EXITSW-BITSW(@04),B'11110111'                       0414
*                     DO I=F9 TO F36 WHILE EXITSW=BZERO;/*   @Z40LB01*/
         LA    @04,9                                               0415
         STH   @04,I                                               0415
@DL00415 L     @15,@CA01294                                        0415
         TM    EXITSW-BITSW(@15),B'00001000'                       0415
         BNZ   @DC00415                                            0415
*                       IF RBIT(I)^=F0 THEN/*                @Z40LB01*/
         SLR   @00,@00                                             0416
         IC    @00,RBIT-1(@04)                                     0416
         CH    @00,@CH00226                                        0416
         BE    @RF00416                                            0416
*                         DO;       /*                       @Z40LB01*/
*                           SDGFLG=BONE;/*                   @Z40LB01*/
         OI    SDGFLG,B'10000000'                                  0418
*                           EXITSW=BONE;/*                   @Z40LB01*/
         OI    EXITSW-BITSW(@15),B'00001000'                       0419
*                         END;      /*                       @Z40LB01*/
*                     END;          /*                       @Z40LB01*/
@RF00416 LA    @04,1                                               0421
         AH    @04,I                                               0421
         STH   @04,I                                               0421
         CH    @04,@CH01342                                        0421
         BNH   @DL00415                                            0421
@DC00415 DS    0H                                                  0422
*                     EXITSW=BZERO; /*                       @Z40LB01*/
         L     @04,@CA01294                                        0422
         NI    EXITSW-BITSW(@04),B'11110111'                       0422
*                     IF RBIT(F40)^=F0 THEN/*                @Z40LB01*/
         CLI   RBIT+39,0                                           0423
         BE    @RF00423                                            0423
*                       MSFFLG=BONE;/*                       @Z40LB01*/
         OI    MSFFLG,B'01000000'                                  0424
*                     IF DRDFLG=BONE×SAFLG=BONE×DRCFLG=BONE×/*     0425
*                                                            @Z40LB01*/
*                         SDGFLG=BONE×MSFFLG=BONE THEN/*     @Z40LB01*/
@RF00423 TM    DRDFLG,B'11111000'                                  0425
         BZ    @RF00425                                            0425
*                       DO;         /* WE HAVE VALID REQ     @Z40LB01*/
*                         VALSSID=BONE;/* SET VALID REQ FLAG @Z40LB01*/
*                         VALCODE=BONE;/* VALID CODE PROCESS @Z40LB01*/
         OI    VALSSID,B'01001000'                                 0428
*                       END;        /* END HAVE VALID REQ    @Z40LB01*/
*                   END;            /* END MSG92 ANALYSIS    @OZ30157*/
@RF00425 DS    0H                                                  0431
*                                                                  0431
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THE VALID CODE FLAG (VALCODE) IS SET THEN    */
*                 /*                                         @Z40LB01*/
*                 /* PROCESSING OF THIS CWB MUST CONTINUE. IF NOT,   */
*                 /*                                         @Z40LB01*/
*                 /* THE REMAINING CODE FOR THIS CWB IS BYPASSED.    */
*                 /*                                         @Z40LB01*/
*                 /* THIS CODE IS IDENTIFIED BY LABEL VALPROC AND    */
*                 /*                                         @Z40LB01*/
*                 /* VALPROCX.                               @Z40LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0431
*                 IF VALCODE=BONE THEN/*                     @Z40LB01*/
@RC00255 TM    VALCODE,B'00001000'                                 0431
         BNO   @RF00431                                            0431
*VALPROC:                           /*                       @Z40LB01*/
*                   DO;             /*                       @Z40LB01*/
VALPROC  DS    0H                                                  0433
*                     RETC=F0;      /* INSURE GOOD RET CODE  @OZ30157*/
         SLR   @04,@04                                             0433
         STH   @04,RETC                                            0433
*                     CALL MSG56E;  /* CALL MSG START SUB    @OZ24706*/
*                                                                  0434
         BAL   @14,MSG56E                                          0434
*                     /***********************************************/
*                     /*                                             */
*                     /* HEADER LINES NEED TO BE BUILT IN THE        */
*                     /*                                     @Z40LB01*/
*                     /* MULTI LINE BUFFER BEFORE ISSUANCE   @Z40LB01*/
*                     /* OF THE ML WTO. THE CODE FOR THIS FUNCTION   */
*                     /*                                     @Z40LB01*/
*                     /* IS PUT IN SUBROUTINE MSG56A.        @Z40LB01*/
*                     /* ON RETURN FROM MSG56A, THE WPLPTR IS SET    */
*                     /*                                     @Z40LB01*/
*                     /* TO POINT TO THE FIRST DATA LINE FOR THE     */
*                     /*                                     @Z40LB01*/
*                     /* DISPLAY.                            @Z40LB01*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0435
*                     MSGIND=MSG05603;/* SET DEFAULT MESSAGE @OZ30157*/
         MVI   MSGIND,X'13'                                        0435
*                     IF DSPCPU=BONE THEN/* IF CPU PATHS OPER.     0436
*                                                            @OZ30157*/
         L     @04,@CA00041                                        0436
         L     @04,CWBPTR-CWBPTR(,@04)                             0436
         TM    DSPCPU(@04),B'00000010'                             0436
         BNO   @RF00436                                            0436
*                       MSGIND=MSG05608;/* SET FOR THAT MSG  @OZ30157*/
         MVI   MSGIND,X'2C'                                        0437
*                     ELSE          /*                       @OZ30157*/
*                       IF DSPSDG=BONE THEN/* IF SDG PATHS   @OZ30157*/
         B     @RC00436                                            0438
@RF00436 L     @04,@CA00041                                        0438
         L     @04,CWBPTR-CWBPTR(,@04)                             0438
         TM    DSPSDG(@04),B'00010000'                             0438
         BNO   @RF00438                                            0438
*                         MSGIND=MSG05610;/* SET FIRST LINE  @OZ30157*/
         MVI   MSGIND,X'2E'                                        0439
*                       ELSE        /*                       @OZ30157*/
*                         IF DSPDRC=BONE THEN/* IF DRC PATHS @OZ30157*/
         B     @RC00438                                            0440
@RF00438 L     @04,@CA00041                                        0440
         L     @04,CWBPTR-CWBPTR(,@04)                             0440
         TM    DSPDRC(@04),B'10000000'                             0440
         BNO   @RF00440                                            0440
*                           MSGIND=MSG05612;/* SET TO DRC LINE     0441
*                                                            @OZ30157*/
         MVI   MSGIND,X'30'                                        0441
*                         ELSE      /*                       @OZ30157*/
*                           IF DSPQCB=BONE THEN/* IF ERR QCB REQUEST
*                                                            @OZ30157*/
         B     @RC00440                                            0442
@RF00440 L     @04,@CA00041                                        0442
         L     @04,CWBPTR-CWBPTR(,@04)                             0442
         TM    DSPQCB(@04),B'00000100'                             0442
         BNO   @RF00442                                            0442
*                             MSGIND=MSG05614;/* THEN SET THAT ONE 0443
*                                                            @OZ30157*/
         MVI   MSGIND,X'32'                                        0443
*                           ELSE    /*                       @OZ30157*/
*                             IF DSPMSVC=BONE THEN/* IF MSVC REQUEST
*                                                            @OZ30157*/
         B     @RC00442                                            0444
@RF00442 L     @04,@CA00041                                        0444
         L     @04,CWBPTR-CWBPTR(,@04)                             0444
         TM    DSPMSVC(@04),B'00010000'                            0444
         BNO   @RF00444                                            0444
*                               MSGIND=MSG05616;/*           @OZ30157*/
         MVI   MSGIND,X'34'                                        0445
*                             ELSE  /*                       @OZ30157*/
*                               IF DSPTRC=BONE THEN/* IF TRACE     0446
*                                      REQUEST               @OZ30157*/
         B     @RC00444                                            0446
@RF00444 L     @04,@CA00041                                        0446
         L     @04,CWBPTR-CWBPTR(,@04)                             0446
         TM    DSPTRC(@04),B'00001000'                             0446
         BNO   @RF00446                                            0446
*                                 MSGIND=MSG05618;/*         @OZ30157*/
         MVI   MSGIND,X'36'                                        0447
*                               ELSE/*                       @OZ30157*/
*                                 IF DSPALTM=BONE THEN/* IF ALTMSC 0448
*                                      REQUEST               @OZ30157*/
         B     @RC00446                                            0448
@RF00446 L     @04,@CA00041                                        0448
         L     @04,CWBPTR-CWBPTR(,@04)                             0448
         TM    DSPALTM(@04),B'00000010'                            0448
         BNO   @RF00448                                            0448
*                                   MSGIND=MSG05620;/*       @OZ30157*/
         MVI   MSGIND,X'38'                                        0449
*                                 ELSE                             0450
*                                   ;/*                      @OZ30157*/
@RF00448 DS    0H                                                  0451
*                     CALL MSG56AA; /* CALL MSG BUILD SUB    @OZ30157*/
@RC00446 DS    0H                                                  0451
@RC00444 DS    0H                                                  0451
@RC00442 DS    0H                                                  0451
@RC00440 DS    0H                                                  0451
@RC00438 DS    0H                                                  0451
@RC00436 BAL   @14,MSG56AA                                         0451
*                     IF DSPNEW=BZERO THEN/* IF NOT NEW TYPE @OZ30157*/
         L     @04,@CA00041                                        0452
         L     @04,CWBPTR-CWBPTR(,@04)                             0452
         TM    DSPNEW(@04),B'01000000'                             0452
         BNZ   @RF00452                                            0452
*                       DO;         /* DO ORIGINAL LOGIC     @OZ30157*/
*                                                                  0453
*                         /*******************************************/
*                         /*                                         */
*                         /* SET WPLPTR TO NEXT LINE (DATA LINE) AND */
*                         /* MOVE IN THE                     @ZA14724*/
*                         /* DATA LINE SKELETON.             @ZA14724*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0454
*                         MSGIND=MSG05606;/* IND. MESSAGE TYPE     0454
*                                                            @OZ30157*/
         MVI   MSGIND,X'16'                                        0454
*                         WPLPTR=WPLPTR+WPLMLLEN;/* UP BY HDR 2    0455
*                                      LENGTH                @OZ30157*/
         L     @04,WPLPTR                                          0455
         SLR   @00,@00                                             0455
         IC    @00,WPLMLLEN(,@04)                                  0455
         ALR   @00,@04                                             0455
         ST    @00,WPLPTR                                          0455
*                         WPLMLLTF=''B;/* CLEAR FLAG FIELD   @OZ30157*/
         LR    @04,@00                                             0456
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       0456
*                         WPLMLTXT=MESGS(MSG05606);/* DATA LINE    0457
*                                      SKELETON@ZA14724              */
*                                                                  0457
         LR    @04,@00                                             0457
         MVI   WPLMLTXT+72(@04),C' '                               0457
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                0457
         MVC   WPLMLTXT(72,@04),MESGS+1596                         0457
*                         /*******************************************/
*                         /*                                         */
*                         /* TEST TO SEE IF THERE ARE ANY SDG DASD   */
*                         /* SSIDS                           @Z40LB01*/
*                         /* WHICH NEED TO BE DISPLAYED AND IF SO,   */
*                         /*                                 @Z40LB01*/
*                         /* PROCESS THESE FIRST.            @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0458
*                         IF SDGFLG=BONE THEN/*              @Z40LB01*/
         TM    SDGFLG,B'10000000'                                  0458
         BNO   @RF00458                                            0458
*                           DO;     /*                       @Z40LB01*/
*                                                                  0459
*                             /***************************************/
*                             /*                                     */
*                             /* SUBROUTINE MSG56B READS THE MSC PAB */
*                             /*                             @Z40LB01*/
*                             /* FOR EACH SDG AND BUILDS A TABLE OF  */
*                             /*                             @Z40LB01*/
*                             /* DASD SSID STATUS FOR EACH REQUESTED */
*                             /*                             @Z40LB01*/
*                             /* DASD SSID.                  @Z40LB01*/
*                             /*                                     */
*                             /***************************************/
*                                                                  0460
*                             CALL MSG56B;/*                 @Z40LB01*/
*                                                                  0460
         BAL   @14,MSG56B                                          0460
*                             /***************************************/
*                             /*                                     */
*                             /* USING THE TABLE BUILT BY MSG56B AND */
*                             /* THE                         @Z40LB01*/
*                             /* REQUEST BIT STRUCTURES, MESSAGE     */
*                             /* LINES                       @Z40LB01*/
*                             /* ARE BUILT IN THE ML WTO BUFFER AND  */
*                             /*                             @Z40LB01*/
*                             /* WHEN THE BUFFER IS FULL, ISSUE THE  */
*                             /*                             @Z40LB01*/
*                             /* MLWTO MACRO.                @Z40LB01*/
*                             /*                                     */
*                             /***************************************/
*                                                                  0461
*                             CALL SDGMSGS;/* CALL DASD MSG BLD    0461
*                                                            @Z40LB01*/
         BAL   @14,SDGMSGS                                         0461
*                           END;    /* END SDG CODE          @Z40LB01*/
*                                                                  0463
*                         /*******************************************/
*                         /*                                         */
*                         /* TEST IF ANY MSF SSIDS WERE REQUESTED IN */
*                         /* THE                             @Z40LB01*/
*                         /* DISPLAY COMMAND                 @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0463
*                         IF MSFFLG=BONE THEN/*              @Z40LB01*/
@RF00458 TM    MSFFLG,B'01000000'                                  0463
         BNO   @RF00463                                            0463
*                           DO;     /* PROCESS MSF STATUS    @X50AC01*/
*                             DO I=F1 TO F8;/* LOOP THRU MSF REQSTS
*                                                            @Z40LB01*/
         LA    @04,1                                               0465
         STH   @04,I                                               0465
@DL00465 DS    0H                                                  0466
*                               IF CONFGMSK(I)=(MSFREQ(1)&CONFGMSK(I))
*                                 THEN/*                     @Z40LB01*/
         L     @15,@CA01312                                        0466
         MVC   @TS00001(1),MSFREQ                                  0466
         ST    @04,@TF00001                                        0466
         ALR   @04,@15                                             0466
         BCTR  @04,0                                               0466
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@04)                  0466
         AL    @15,@TF00001                                        0466
         BCTR  @15,0                                               0466
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   0466
         BNE   @RF00466                                            0466
*                                 DO;/* BUILD MESSAGE LINE   @Z40LB01*/
*                                                                  0467
*                                   /*********************************/
*                                   /*                               */
*                                   /* FILL MESSAGE FIELDS   @Z40LB01*/
*                                   /*                               */
*                                   /*********************************/
*                                                                  0468
*                                   IF FLIPSW=BONE THEN/* SECOND HALF
*                                      LINE ?                @Z40LB01*/
         TM    FLIPSW,B'00010000'                                  0468
         BNO   @RF00468                                            0468
*                                    DTAPTR=ADDR(SHALF);/* PNT TO  0469
*                                      SECND HALF            @OZ30157*/
         L     @04,WPLPTR                                          0469
         LA    @04,SHALF+4(,@04)                                   0469
         ST    @04,DTAPTR                                          0469
*                                   ELSE/* FIRST HALF LINE   @Z40LB01*/
*                                    DTAPTR=ADDR(FHALF);/* PNT TO IT
*                                                            @OZ30157*/
         B     @RC00468                                            0470
@RF00468 LA    @04,4                                               0470
         AL    @04,WPLPTR                                          0470
         ST    @04,DTAPTR                                          0470
*                                   DSSID=MSFSSIDS(I);/* FILL SSID 0471
*                                      FIELD                 @Z40LB01*/
@RC00468 L     @04,DTAPTR                                          0471
         LH    @15,I                                               0471
         LR    @14,@15                                             0471
         MH    @14,@CH00060                                        0471
         LA    @03,MSFSSIDS-3(@14)                                 0471
         MVC   DSSID(3,@04),0(@03)                                 0471
*                                   DTYPE14='MSF-';/* MSFID  @OZ30157*/
         MVC   DTYPE14(4,@04),@CC02848                             0472
*                                   DTYPE5=DSSID2;/* FILL UNIT TYPE
*                                      FLD                   @OZ30157*/
         MVC   DTYPE5(1,@04),DSSID2(@04)                           0473
*                                   IF CONFGMSK(I)=(MSFON(1)&CONFGMSK(I
*                                       )) THEN/*            @Z40LB01*/
         L     @14,@CA01312                                        0474
         L     @03,@CA01293                                        0474
         LA    @02,2                                               0474
         AL    @02,MSGPTR-MSGPTR(,@03)                             0474
         MVC   @TS00001(1),MSFON(@02)                              0474
         ST    @15,@TF00001                                        0474
         ALR   @15,@14                                             0474
         BCTR  @15,0                                               0474
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  0474
         LR    @15,@14                                             0474
         AL    @15,@TF00001                                        0474
         BCTR  @15,0                                               0474
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   0474
         BNE   @RF00474                                            0474
*                                    DO;/* SET ONLINE IND    @Z40LB01*/
*                                     DSTAT1='O';/* ONLINE IND     0476
*                                                            @OZ30157*/
         MVI   DSTAT1(@04),C'O'                                    0476
*                                     IF CONFGMSK(I)^=(MSFRDY(1)&  0477
*                                         CONFGMSK(I))/*     @Z40LB01*/
*                                       THEN/* IS UNIT UNUSABLE    0477
*                                                            @Z40LB01*/
         MVC   @TS00001(1),MSFRDY(@02)                             0477
         LR    @15,@14                                             0477
         AL    @15,@TF00001                                        0477
         BCTR  @15,0                                               0477
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  0477
         AL    @14,@TF00001                                        0477
         BCTR  @14,0                                               0477
         CLC   CONFGMSK-CONFGMSK(1,@14),@TS00001                   0477
         BE    @RF00477                                            0477
*                                      DSTAT27='/SUU  ';/* UNUSABLE
*                                      IND                   @OZ30157*/
         MVC   DSTAT27(6,@04),@CC02850                             0478
*                                     ELSE/* UNIT USABLE     @Z40LB01*/
*                                      DO;/* ACC STATUS CODE @Z40LB01*/
         B     @RC00477                                            0479
@RF00477 DS    0H                                                  0480
*                                       QBCNT=F1;/* ONE QUERY      0480
*                                                            @OZ30157*/
         MVC   QBCNT(4),@CF00047                                   0480
*                                       QBENT(1)=QBCEL;/* FOR CELL 0481
*                                      AUDIT                 @OZ30157*/
         MVI   QBENT+12,C' '                                       0481
         MVC   QBENT+13(31),QBENT+12                               0481
         MVC   QBENT(12),QBCEL                                     0481
*                                       QBREC(1)=DSSID(2:2)&'0F'X;/*
*                                      SET LIBID             @OZ30157*/
         LA    @04,15                                              0482
         L     @15,DTAPTR                                          0482
         MVC   @ZT00003+3(1),DSSID+1(@15)                          0482
         N     @04,@ZT00003                                        0482
         STC   @04,QBREC                                           0482
*                                       QBREC(1)=QBREC(1)*F64;/* SHFT
*                                      6 POS                 @OZ30157*/
         SLA   @04,6                                               0483
         STC   @04,QBREC                                           0483
*                                       QBTID(1)='EA'X;/* SET CELL 0484
*                                      LOC 234               @OZ30157*/
         MVI   QBTID,X'EA'                                         0484
*IQUERY2:                                                          0485
*                                       CALL MSG56GQ;/* GO DO QUERY
*                                                            @OZ30157*/
IQUERY2  BAL   @14,MSG56GQ                                         0485
*                                       IF RETC=F0 THEN/* CHECK    0486
*                                      RETURN                @Z40LB01*/
         LH    @04,RETC                                            0486
         LTR   @04,@04                                             0486
         BNZ   @RF00486                                            0486
*                                        DO;/* GOOD RETURN   @Z40LB01*/
*                                         CELPTR=QAPTR(1);/* GET AREA
*                                      ADDRESS               @OZ30157*/
         L     @04,QAPTR                                           0488
         ST    @04,CELPTR                                          0488
*                                         IF ACC2BIT=BONE THEN/* ACC2
*                                      STAT                  @Z40LB01*/
         TM    ACC2BIT(@04),B'00000010'                            0489
         BNO   @RF00489                                            0489
*                                          DCONF12=' 2';/* ACC2 GOOD
*                                                            @OZ30157*/
         L     @04,DTAPTR                                          0490
         MVC   DCONF12(2,@04),@CC02853                             0490
*                                         IF ACC1BIT=BONE THEN/* ACC1
*                                      STAT                  @Z40LB01*/
@RF00489 L     @04,CELPTR                                          0491
         TM    ACC1BIT(@04),B'00000001'                            0491
         BNO   @RF00491                                            0491
*                                          DCONF35='/1 ';/* ACC1 GOOD
*                                                            @OZ30157*/
         L     @04,DTAPTR                                          0492
         MVC   DCONF35(3,@04),@CC02854                             0492
*                                        END;/* END GOOD RET CODE  0493
*                                                            @Z40LB01*/
*                                       ELSE/* BAD RETURN    @Z40LB01*/
*                                        DCONF=' */* ';/* NO ACC STAT
*                                                            @Z40LB01*/
         B     @RC00486                                            0494
@RF00486 L     @04,DTAPTR                                          0494
         MVC   DCONF(5,@04),@CC02855                               0494
*                                      END;/* END ACC STAT CODE    0495
*                                                            @Z40LB01*/
*                                    END;/* END ONLINE CODE  @Z40LB01*/
*                                   ELSE/* UNIT IS OFFLINE   @Z40LB01*/
*                                    DSTAT='OFFLINE';/* OFFLINE IND
*                                                            @Z40LB01*/
*                                                                  0497
         B     @RC00474                                            0497
@RF00474 L     @04,DTAPTR                                          0497
         MVC   DSTAT(7,@04),@CC02856                               0497
*                                   /*********************************/
*                                   /*                               */
*                                   /* ONE MESSAGE LINE CONTAINS THE */
*                                   /* STATUS                @Z40LB01*/
*                                   /* OF TWO SSIDS. SWITCH FIELD    */
*                                   /* (FLIPSW)              @Z40LB01*/
*                                   /* IS USED TO KEEP TRACK OF THIS */
*                                   /* SO WHEN               @Z40LB01*/
*                                   /* THE TWO SSIDS HAVE BEEN PUT IN*/
*                                   /* THE                   @Z40LB01*/
*                                   /* LINE, THE LINE CAN BE MOVED TO*/
*                                   /* THE                   @Z40LB01*/
*                                   /* ML WTO BUFFER AREA. FLIPSW = 0*/
*                                   /* FOR                   @Z40LB01*/
*                                   /* FIRST SSID AND FLIPSW = 1 FOR */
*                                   /* 2ND                   @Z40LB01*/
*                                   /* SSID STATUS.          @Z40LB01*/
*                                   /*                               */
*                                   /*********************************/
*                                                                  0498
*                                   IF FLIPSW=BONE THEN/*    @Z40LB01*/
@RC00474 TM    FLIPSW,B'00010000'                                  0498
         BNO   @RF00498                                            0498
*                                    CALL MSG56D;/*          @OZ30157*/
         BAL   @14,MSG56D                                          0499
*                                   ELSE/*                   @Z40LB01*/
*                                                                  0500
*                                    /********************************/
*                                    /*                              */
*                                    /* FILL PART ONE MESSAGE FIELDS */
*                                    /*                      @Z40LB01*/
*                                    /*                              */
*                                    /********************************/
*                                                                  0500
*                                    FLIPSW=BONE;/*          @Z40LB01*/
         B     @RC00498                                            0500
@RF00498 OI    FLIPSW,B'00010000'                                  0500
*                                 END;/* END BUILD MESSAGE   @Z40LB01*/
@RC00498 DS    0H                                                  0502
*                             END;  /* END SCAN MSF REQUESTS @Z40LB01*/
@RF00466 LA    @04,1                                               0502
         AH    @04,I                                               0502
         STH   @04,I                                               0502
         CH    @04,@CH00036                                        0502
         BNH   @DL00465                                            0502
*                           END;    /* END MSF STATUS        @Z40LB01*/
*                                                                  0504
*                         /*******************************************/
*                         /*                                         */
*                         /* TEST IF ANY DRD SSIDS WERE REQUESTED IN */
*                         /* THE                             @Z40LB01*/
*                         /* DISPLAY COMMAND                 @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0504
*                         IF DRDFLG=BONE THEN/*              @Z40LB01*/
@RF00463 TM    DRDFLG,B'00100000'                                  0504
         BNO   @RF00504                                            0504
*                           DO;     /* PROCESS DRD STATUS    @Z40LB01*/
*                             DO I=F1 TO F4;/* SCAN BY DRD   @Z40LB01*/
         LA    @04,1                                               0506
         STH   @04,I                                               0506
@DL00506 DS    0H                                                  0507
*                               IF DRDREQ(I)^=F0 THEN/* ANY VAL REQ
*                                                            @Z40LB01*/
         SLR   @00,@00                                             0507
         IC    @00,DRDREQ-1(@04)                                   0507
         CH    @00,@CH00226                                        0507
         BE    @RF00507                                            0507
*                                 DO;/* PROCESS THE VALID REQUESTS IN
*                                      GROUP                 @Z40LB01*/
*                                   DO K=F1 TO F8;/* SCAN SSID WITHIN
*                                      GRP                   @Z40LB01*/
         LA    @04,1                                               0509
         STH   @04,K                                               0509
@DL00509 DS    0H                                                  0510
*                                    IF CONFGMSK(K)=(CONFGMSK(K)&DRDREQ
*                                        (I))/*              @Z40LB01*/
*                                      THEN/* ANY REQUESTED SSIDS  0510
*                                                            @Z40LB01*/
         L     @15,@CA01312                                        0510
         LH    @14,I                                               0510
         ST    @04,@TF00001                                        0510
         ALR   @04,@15                                             0510
         BCTR  @04,0                                               0510
         MVC   @TS00001(1),CONFGMSK-CONFGMSK(@04)                  0510
         LA    @04,DRDREQ-1(@14)                                   0510
         NC    @TS00001(1),0(@04)                                  0510
         AL    @15,@TF00001                                        0510
         BCTR  @15,0                                               0510
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   0510
         BNE   @RF00510                                            0510
*                                     DO;/* BUILD MESSAGE LINE     0511
*                                                            @Z40LB01*/
*                                                                  0511
*                                      /******************************/
*                                      /*                            */
*                                      /* FILL MESSAGE FIELDS        */
*                                      /*                    @Z40LB01*/
*                                      /*                            */
*                                      /******************************/
*                                                                  0512
*                                      IF FLIPSW=BONE THEN/* SECOND
*                                      HALF LINE ?@Z40LB01           */
         TM    FLIPSW,B'00010000'                                  0512
         BNO   @RF00512                                            0512
*                                       DTAPTR=ADDR(SHALF);/* PNT  0513
*                                      SECOND HALF           @OZ30157*/
         L     @04,WPLPTR                                          0513
         LA    @04,SHALF+4(,@04)                                   0513
         ST    @04,DTAPTR                                          0513
*                                      ELSE/* FIRST HALF LINE      0514
*                                                            @Z40LB01*/
*                                       DTAPTR=ADDR(FHALF);/* PNT TO
*                                      FIRST HALF            @OZ30157*/
         B     @RC00512                                            0514
@RF00512 LA    @04,4                                               0514
         AL    @04,WPLPTR                                          0514
         ST    @04,DTAPTR                                          0514
*                                      DSSID=DRDSSIDS((I-1)*8+K);/*
*                                      SSID FIELD            @Z40LB01*/
@RC00512 L     @04,DTAPTR                                          0515
         LH    @15,K                                               0515
         LH    @14,I                                               0515
         LR    @03,@14                                             0515
         BCTR  @03,0                                               0515
         SLA   @03,3                                               0515
         ALR   @03,@15                                             0515
         MH    @03,@CH00060                                        0515
         LA    @02,DRDSSIDS-3(@03)                                 0515
         MVC   DSSID(3,@04),0(@02)                                 0515
*                                      DTYPE14='DRD-';/* DRDID     0516
*                                                            @OZ30157*/
         MVC   DTYPE14(4,@04),@CC02858                             0516
*                                      DTYPE5=DSSID2;/* FILL UNIT  0517
*                                      TYPE FLD              @OZ30157*/
         MVC   DTYPE5(1,@04),DSSID2(@04)                           0517
*                                      IF CONFGMSK(K)=(DRDON(I)&   0518
*                                          CONFGMSK(K)) THEN/*     0518
*                                                            @Z40LB01*/
         L     @03,@CA01312                                        0518
         L     @02,@CA01293                                        0518
         LA    @00,2                                               0518
         AL    @00,MSGPTR-MSGPTR(,@02)                             0518
         LR    @02,@00                                             0518
         ALR   @02,@14                                             0518
         MVC   @TS00001(1),DRDON-1(@02)                            0518
         ST    @15,@TF00001                                        0518
         ALR   @15,@03                                             0518
         BCTR  @15,0                                               0518
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  0518
         LR    @02,@03                                             0518
         AL    @02,@TF00001                                        0518
         BCTR  @02,0                                               0518
         CLC   CONFGMSK-CONFGMSK(1,@02),@TS00001                   0518
         BNE   @RF00518                                            0518
*                                       DO;/* SET ONLINE IND @Z40LB01*/
*                                        DSTAT1='O';/* ONLINE IND  0520
*                                                            @OZ30157*/
         MVI   DSTAT1(@04),C'O'                                    0520
*                                        IF CONFGMSK(K)^=(DRDRDY(I)&
*                                            CONFGMSK(K))/*  @Z40LB01*/
*                                          THEN/* IS UNIT UNUSABLE 0521
*                                                            @Z40LB01*/
         LR    @15,@00                                             0521
         ALR   @15,@14                                             0521
         MVC   @TS00001(1),DRDRDY-1(@15)                           0521
         LR    @02,@03                                             0521
         AL    @02,@TF00001                                        0521
         BCTR  @02,0                                               0521
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@02)                  0521
         AL    @03,@TF00001                                        0521
         BCTR  @03,0                                               0521
         CLC   CONFGMSK-CONFGMSK(1,@03),@TS00001                   0521
         BE    @RF00521                                            0521
*                                         DSTAT27='/SUU  ';/*      0522
*                                      UNUSABLE IND          @OZ30157*/
         MVC   DSTAT27(6,@04),@CC02850                             0522
*                                       END;/* END ONLINE CODE     0523
*                                                            @Z40LB01*/
*                                      ELSE/* UNIT IS OFFLINE      0524
*                                                            @Z40LB01*/
*                                       DSTAT='OFFLINE';/* OFFLINE 0524
*                                      IND                   @Z40LB01*/
*                                                                  0524
         B     @RC00518                                            0524
@RF00518 L     @04,DTAPTR                                          0524
         MVC   DSTAT(7,@04),@CC02856                               0524
*                                      /******************************/
*                                      /*                            */
*                                      /* ONE MESSAGE LINE CONTAINS  */
*                                      /* THE STATUS         @Z40LB01*/
*                                      /* OF TWO SSIDS. SWITCH FIELD */
*                                      /* (FLIPSW)           @Z40LB01*/
*                                      /* IS USED TO KEEP TRACK OF   */
*                                      /* THIS SO WHEN       @Z40LB01*/
*                                      /* THE TWO SSIDS HAVE BEEN PUT*/
*                                      /* IN THE             @Z40LB01*/
*                                      /* LINE, THE LINE CAN BE MOVED*/
*                                      /* TO THE             @Z40LB01*/
*                                      /* ML WTO BUFFER AREA. FLIPSW */
*                                      /* = 0 FOR            @Z40LB01*/
*                                      /* FIRST SSID AND FLIPSW = 1  */
*                                      /* FOR 2ND            @Z40LB01*/
*                                      /* SSID STATUS.       @Z40LB01*/
*                                      /*                            */
*                                      /******************************/
*                                                                  0525
*                                      IF FLIPSW=BONE THEN/* @Z40LB01*/
@RC00518 TM    FLIPSW,B'00010000'                                  0525
         BNO   @RF00525                                            0525
*                                       CALL MSG56D;/*       @OZ30157*/
         BAL   @14,MSG56D                                          0526
*                                      ELSE/*                @Z40LB01*/
*                                                                  0527
*                                       /*****************************/
*                                       /*                           */
*                                       /* FILL PART ONE MESSAGE     */
*                                       /* FIELDS            @Z40LB01*/
*                                       /*                           */
*                                       /*****************************/
*                                                                  0527
*                                       FLIPSW=BONE;/*       @Z40LB01*/
         B     @RC00525                                            0527
@RF00525 OI    FLIPSW,B'00010000'                                  0527
*                                     END;/* END MESSAGE BUILD     0528
*                                                            @Z40LB01*/
@RC00525 DS    0H                                                  0529
*                                   END;/* END SSID SCAN     @Z40LB01*/
@RF00510 LA    @04,1                                               0529
         AH    @04,K                                               0529
         STH   @04,K                                               0529
         CH    @04,@CH00036                                        0529
         BNH   @DL00509                                            0529
*                                 END;/* END VALID REQUEST CODE FOR
*                                      SDG                   @Z40LB01*/
*                             END;  /* END GROUP SCAN        @Z40LB01*/
@RF00507 LA    @04,1                                               0531
         AH    @04,I                                               0531
         STH   @04,I                                               0531
         CH    @04,@CH00045                                        0531
         BNH   @DL00506                                            0531
*                           END;    /* END DRD STATUS        @Z40LB01*/
*                                                                  0533
*                         /*******************************************/
*                         /*                                         */
*                         /* TEST IF ANY DRC SSIDS WERE REQUESTED IN */
*                         /* THE                             @Z40LB01*/
*                         /* DISPLAY COMMAND                 @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0533
*                         IF DRCFLG=BONE THEN/*              @Z40LB01*/
@RF00504 TM    DRCFLG,B'00010000'                                  0533
         BNO   @RF00533                                            0533
*                           DO;     /* PROCESS DRC STATUS    @Z40LB01*/
*                             DO I=F1 TO F2;/* SCAN BY GROUP @Z40LB01*/
         LA    @04,1                                               0535
         STH   @04,I                                               0535
@DL00535 DS    0H                                                  0536
*                               IF DRCREQ(I)^=F0 THEN/* ANY VAL REQ
*                                                            @Z40LB01*/
         SLR   @00,@00                                             0536
         IC    @00,DRCREQ-1(@04)                                   0536
         CH    @00,@CH00226                                        0536
         BE    @RF00536                                            0536
*                                 DO;/* PROCESS THE VALID REQUESTS IN
*                                      GROUP                 @Z40LB01*/
*                                   DO K=F1 TO F8;/* SCAN SSID WITHIN
*                                      GRP                   @Z40LB01*/
         LA    @04,1                                               0538
         STH   @04,K                                               0538
@DL00538 DS    0H                                                  0539
*                                    IF CONFGMSK(K)=(CONFGMSK(K)&DRCREQ
*                                        (I))/*              @Z40LB01*/
*                                      THEN/* ANY REQUESTED SSIDS  0539
*                                                            @Z40LB01*/
         L     @15,@CA01312                                        0539
         LH    @14,I                                               0539
         ST    @04,@TF00001                                        0539
         ALR   @04,@15                                             0539
         BCTR  @04,0                                               0539
         MVC   @TS00001(1),CONFGMSK-CONFGMSK(@04)                  0539
         LA    @04,DRCREQ-1(@14)                                   0539
         NC    @TS00001(1),0(@04)                                  0539
         AL    @15,@TF00001                                        0539
         BCTR  @15,0                                               0539
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   0539
         BNE   @RF00539                                            0539
*                                     DO;/* BUILD MESSAGE LINE     0540
*                                                            @Z40LB01*/
*                                                                  0540
*                                      /******************************/
*                                      /*                            */
*                                      /* FILL MESSAGE FIELDS        */
*                                      /*                    @Z40LB01*/
*                                      /*                            */
*                                      /******************************/
*                                                                  0541
*                                      IF FLIPSW=BONE THEN/* SECOND
*                                      HALF LINE ?@Z40LB01           */
         TM    FLIPSW,B'00010000'                                  0541
         BNO   @RF00541                                            0541
*                                       DTAPTR=ADDR(SHALF);/* PNT TO
*                                      SECND HALF            @OZ30157*/
         L     @04,WPLPTR                                          0542
         LA    @04,SHALF+4(,@04)                                   0542
         ST    @04,DTAPTR                                          0542
*                                      ELSE/* FIRST HALF LINE      0543
*                                                            @Z40LB01*/
*                                       DTAPTR=ADDR(FHALF);/* POINT
*                                      TO IT                 @OZ30157*/
         B     @RC00541                                            0543
@RF00541 LA    @04,4                                               0543
         AL    @04,WPLPTR                                          0543
         ST    @04,DTAPTR                                          0543
*                                      DSSID=DRCSSIDS((I-1)*8+K);/*
*                                      SSID FIELD            @Z40LB01*/
@RC00541 L     @04,DTAPTR                                          0544
         LH    @15,K                                               0544
         LH    @14,I                                               0544
         LR    @03,@14                                             0544
         BCTR  @03,0                                               0544
         SLA   @03,3                                               0544
         ALR   @03,@15                                             0544
         MH    @03,@CH00060                                        0544
         LA    @02,DRCSSIDS-3(@03)                                 0544
         MVC   DSSID(3,@04),0(@02)                                 0544
*                                      DTYPE14='DRC-';/* DRCID     0545
*                                                            @OZ30157*/
         MVC   DTYPE14(4,@04),@CC02859                             0545
*                                      DTYPE5=DSSID2;/* FILL UNIT  0546
*                                      TYPE FLD              @OZ30157*/
         MVC   DTYPE5(1,@04),DSSID2(@04)                           0546
*                                      IF CONFGMSK(K)=(DRCON(I)&   0547
*                                          CONFGMSK(K)) THEN/*     0547
*                                                            @Z40LB01*/
         L     @03,@CA01312                                        0547
         L     @02,@CA01293                                        0547
         L     @02,MSGPTR-MSGPTR(,@02)                             0547
         ALR   @02,@14                                             0547
         MVC   @TS00001(1),DRCON+1(@02)                            0547
         ST    @15,@TF00001                                        0547
         ALR   @15,@03                                             0547
         BCTR  @15,0                                               0547
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  0547
         AL    @03,@TF00001                                        0547
         BCTR  @03,0                                               0547
         CLC   CONFGMSK-CONFGMSK(1,@03),@TS00001                   0547
         BNE   @RF00547                                            0547
*                                       DSTAT1='O';/* ONLINE IND   0548
*                                                            @OZ30157*/
         MVI   DSTAT1(@04),C'O'                                    0548
*                                      ELSE/* UNIT IS OFFLINE      0549
*                                                            @Z40LB01*/
*                                       DSTAT='OFFLINE';/* OFFLINE 0549
*                                      IND                   @Z40LB01*/
*                                                                  0549
         B     @RC00547                                            0549
@RF00547 L     @04,DTAPTR                                          0549
         MVC   DSTAT(7,@04),@CC02856                               0549
*                                      /******************************/
*                                      /*                            */
*                                      /* ONE MESSAGE LINE CONTAINS  */
*                                      /* THE STATUS         @Z40LB01*/
*                                      /* OF TWO SSIDS. SWITCH FIELD */
*                                      /* (FLIPSW)           @Z40LB01*/
*                                      /* IS USED TO KEEP TRACK OF   */
*                                      /* THIS SO WHEN       @Z40LB01*/
*                                      /* THE TWO SSIDS HAVE BEEN PUT*/
*                                      /* IN THE             @Z40LB01*/
*                                      /* LINE, THE LINE CAN BE MOVED*/
*                                      /* TO THE             @Z40LB01*/
*                                      /* ML WTO BUFFER AREA. FLIPSW */
*                                      /* = 0 FOR            @Z40LB01*/
*                                      /* FIRST SSID AND FLIPSW = 1  */
*                                      /* FOR 2ND            @Z40LB01*/
*                                      /* SSID STATUS.       @Z40LB01*/
*                                      /*                            */
*                                      /******************************/
*                                                                  0550
*                                      IF FLIPSW=BONE THEN/* @Z40LB01*/
@RC00547 TM    FLIPSW,B'00010000'                                  0550
         BNO   @RF00550                                            0550
*                                       CALL MSG56D;/*       @OZ30157*/
         BAL   @14,MSG56D                                          0551
*                                      ELSE/*                @Z40LB01*/
*                                                                  0552
*                                       /*****************************/
*                                       /*                           */
*                                       /* FILL PART ONE MESSAGE     */
*                                       /* FIELDS            @Z40LB01*/
*                                       /*                           */
*                                       /*****************************/
*                                                                  0552
*                                       FLIPSW=BONE;/*       @Z40LB01*/
         B     @RC00550                                            0552
@RF00550 OI    FLIPSW,B'00010000'                                  0552
*                                     END;/* END MESSAGE BUILD     0553
*                                                            @Z40LB01*/
@RC00550 DS    0H                                                  0554
*                                   END;/* END SSID SCAN     @Z40LB01*/
@RF00539 LA    @04,1                                               0554
         AH    @04,K                                               0554
         STH   @04,K                                               0554
         CH    @04,@CH00036                                        0554
         BNH   @DL00538                                            0554
*                                 END;/* END VALID REQUEST CODE FOR
*                                      SDG                   @Z40LB01*/
*                             END;  /* END GROUP SCAN        @Z40LB01*/
@RF00536 LA    @04,1                                               0556
         AH    @04,I                                               0556
         STH   @04,I                                               0556
         CH    @04,@CH00056                                        0556
         BNH   @DL00535                                            0556
*                           END;    /* END DRC STATUS        @Z40LB01*/
*                                                                  0558
*                         /*******************************************/
*                         /*                                         */
*                         /* TEST IF ANY SA SSIDS WERE REQUESTED IN  */
*                         /* THE                             @Z40LB01*/
*                         /* DISPLAY COMMAND                 @Z40LB01*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0558
*                         IF SAFLG=BONE THEN/*               @Z40LB01*/
@RF00533 TM    SAFLG,B'00001000'                                   0558
         BNO   @RF00558                                            0558
*                           DO;     /* PROCESS SA STATUS     @Z40LB01*/
*                             DO I=F1 TO F2;/* SCAN BY GROUP @Z40LB01*/
         LA    @04,1                                               0560
         STH   @04,I                                               0560
@DL00560 DS    0H                                                  0561
*                               IF SAREQ(I)^=F0 THEN/* ANY VAL REQ 0561
*                                                            @Z40LB01*/
         SLR   @00,@00                                             0561
         IC    @00,SAREQ-1(@04)                                    0561
         CH    @00,@CH00226                                        0561
         BE    @RF00561                                            0561
*                                 DO;/* PROCESS THE VALID REQUESTS IN
*                                      GROUP                 @Z40LB01*/
*                                   DO K=F1 TO F8;/* SCAN SSID WITHIN
*                                      GRP                   @Z40LB01*/
         LA    @04,1                                               0563
         STH   @04,K                                               0563
@DL00563 DS    0H                                                  0564
*                                    IF CONFGMSK(K)=(CONFGMSK(K)&SAREQ(
*                                        I))/*               @Z40LB01*/
*                                      THEN/* ANY REQUESTED SSIDS  0564
*                                                            @Z40LB01*/
         L     @15,@CA01312                                        0564
         LH    @14,I                                               0564
         ST    @04,@TF00001                                        0564
         ALR   @04,@15                                             0564
         BCTR  @04,0                                               0564
         MVC   @TS00001(1),CONFGMSK-CONFGMSK(@04)                  0564
         LA    @04,SAREQ-1(@14)                                    0564
         NC    @TS00001(1),0(@04)                                  0564
         AL    @15,@TF00001                                        0564
         BCTR  @15,0                                               0564
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   0564
         BNE   @RF00564                                            0564
*                                     DO;/* BUILD MESSAGE LINE     0565
*                                                            @Z40LB01*/
*                                                                  0565
*                                      /******************************/
*                                      /*                            */
*                                      /* FILL MESSAGE FIELDS        */
*                                      /*                    @Z40LB01*/
*                                      /*                            */
*                                      /******************************/
*                                                                  0566
*                                      IF FLIPSW=BONE THEN/* SECOND
*                                      HALF LINE ?@Z40LB01           */
         TM    FLIPSW,B'00010000'                                  0566
         BNO   @RF00566                                            0566
*                                       DTAPTR=ADDR(SHALF);/* PNT TO
*                                      SECND HALF            @OZ30157*/
         L     @04,WPLPTR                                          0567
         LA    @04,SHALF+4(,@04)                                   0567
         ST    @04,DTAPTR                                          0567
*                                      ELSE/* FIRST HALF LINE      0568
*                                                            @Z40LB01*/
*                                       DTAPTR=ADDR(FHALF);/* POINT
*                                      TO IT                 @OZ30157*/
         B     @RC00566                                            0568
@RF00566 LA    @04,4                                               0568
         AL    @04,WPLPTR                                          0568
         ST    @04,DTAPTR                                          0568
*                                      DSSID=SASSIDS((I-1)*8+K);/* 0569
*                                      SSID FIELD            @Z40LB01*/
@RC00566 L     @04,DTAPTR                                          0569
         LH    @15,K                                               0569
         LH    @14,I                                               0569
         LR    @03,@14                                             0569
         BCTR  @03,0                                               0569
         SLA   @03,3                                               0569
         ALR   @03,@15                                             0569
         MH    @03,@CH00060                                        0569
         LA    @02,SASSIDS-3(@03)                                  0569
         MVC   DSSID(3,@04),0(@02)                                 0569
*                                      DTYPE14='SA  ';/* SAID      0570
*                                                            @OZ30157*/
         MVC   DTYPE14(4,@04),@CC02860                             0570
*                                      DTYPE5=DSSID2;/* FILL UNIT  0571
*                                      TYPE FLD              @OZ30157*/
         MVC   DTYPE5(1,@04),DSSID2(@04)                           0571
*                                      IF CONFGMSK(K)=(SAON(I)&CONFGMSK
*                                          (K)) THEN/*       @Z40LB01*/
         L     @03,@CA01312                                        0572
         L     @02,@CA01293                                        0572
         LA    @00,2                                               0572
         AL    @00,MSGPTR-MSGPTR(,@02)                             0572
         LR    @02,@00                                             0572
         ALR   @02,@14                                             0572
         MVC   @TS00001(1),SAON-1(@02)                             0572
         ST    @15,@TF00001                                        0572
         ALR   @15,@03                                             0572
         BCTR  @15,0                                               0572
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  0572
         LR    @02,@03                                             0572
         AL    @02,@TF00001                                        0572
         BCTR  @02,0                                               0572
         CLC   CONFGMSK-CONFGMSK(1,@02),@TS00001                   0572
         BNE   @RF00572                                            0572
*                                       DO;/* SET ONLINE IND @Z40LB01*/
*                                        DSTAT1='O';/* ONLINE IND  0574
*                                                            @OZ30157*/
         MVI   DSTAT1(@04),C'O'                                    0574
*                                        IF CONFGMSK(K)^=(SARDY(I)&
*                                            CONFGMSK(K))/*  @Z40LB01*/
*                                          THEN/* IS UNIT UNUSABLE 0575
*                                                            @Z40LB01*/
         LR    @15,@00                                             0575
         ALR   @15,@14                                             0575
         MVC   @TS00001(1),SARDY-1(@15)                            0575
         LR    @02,@03                                             0575
         AL    @02,@TF00001                                        0575
         BCTR  @02,0                                               0575
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@02)                  0575
         AL    @03,@TF00001                                        0575
         BCTR  @03,0                                               0575
         CLC   CONFGMSK-CONFGMSK(1,@03),@TS00001                   0575
         BE    @RF00575                                            0575
*                                         DSTAT27='/SUU  ';/*      0576
*                                      UNUSABLE IND          @OZ30157*/
         MVC   DSTAT27(6,@04),@CC02850                             0576
*                                       END;/* END ONLINE CODE     0577
*                                                            @Z40LB01*/
*                                      ELSE/* UNIT IS OFFLINE      0578
*                                                            @Z40LB01*/
*                                       DSTAT='OFFLINE';/* OFFLINE 0578
*                                      IND                   @Z40LB01*/
*                                                                  0578
         B     @RC00572                                            0578
@RF00572 L     @04,DTAPTR                                          0578
         MVC   DSTAT(7,@04),@CC02856                               0578
*                                      /******************************/
*                                      /*                            */
*                                      /* ONE MESSAGE LINE CONTAINS  */
*                                      /* THE STATUS         @Z40LB01*/
*                                      /* OF TWO SSIDS. SWITCH FIELD */
*                                      /* (FLIPSW)           @Z40LB01*/
*                                      /* IS USED TO KEEP TRACK OF   */
*                                      /* THIS SO WHEN       @Z40LB01*/
*                                      /* THE TWO SSIDS HAVE BEEN PUT*/
*                                      /* IN THE             @Z40LB01*/
*                                      /* LINE, THE LINE CAN BE MOVED*/
*                                      /* TO THE             @Z40LB01*/
*                                      /* ML WTO BUFFER AREA. FLIPSW */
*                                      /* = 0 FOR            @Z40LB01*/
*                                      /* FIRST SSID AND FLIPSW = 1  */
*                                      /* FOR 2ND            @Z40LB01*/
*                                      /* SSID STATUS.       @Z40LB01*/
*                                      /*                            */
*                                      /******************************/
*                                                                  0579
*                                      IF FLIPSW=BONE THEN/* @Z40LB01*/
@RC00572 TM    FLIPSW,B'00010000'                                  0579
         BNO   @RF00579                                            0579
*                                       CALL MSG56D;/*       @OZ30157*/
         BAL   @14,MSG56D                                          0580
*                                      ELSE/*                @Z40LB01*/
*                                                                  0581
*                                       /*****************************/
*                                       /*                           */
*                                       /* FILL PART ONE MESSAGE     */
*                                       /* FIELDS            @Z40LB01*/
*                                       /*                           */
*                                       /*****************************/
*                                                                  0581
*                                       FLIPSW=BONE;/*       @Z40LB01*/
         B     @RC00579                                            0581
@RF00579 OI    FLIPSW,B'00010000'                                  0581
*                                     END;/* END MESSAGE BUILD     0582
*                                                            @Z40LB01*/
@RC00579 DS    0H                                                  0583
*                                   END;/* END SSID SCAN     @Z40LB01*/
@RF00564 LA    @04,1                                               0583
         AH    @04,K                                               0583
         STH   @04,K                                               0583
         CH    @04,@CH00036                                        0583
         BNH   @DL00563                                            0583
*                                 END;/* END VALID REQUEST CODE FOR
*                                      SDG                   @Z40LB01*/
*                             END;  /* END GROUP SCAN        @Z40LB01*/
@RF00561 LA    @04,1                                               0585
         AH    @04,I                                               0585
         STH   @04,I                                               0585
         CH    @04,@CH00056                                        0585
         BNH   @DL00560                                            0585
*                           END;    /* END SA STATUS         @Z40LB01*/
*                       END;        /* END SSID DISPLAY      @OZ30157*/
*                                                                  0588
*/* CODE TO INVOKE ALTERNATE DISPLAYS - PATHS, ALTMSC,       @OZ30157*/
*/* ERROR QCBS, TRACE, MSVC                                  @OZ30157*/
*                                                                  0588
*                     ELSE          /*                       @OZ30157*/
*                       DO;         /* PATHS, ETC.           @OZ30157*/
         B     @RC00452                                            0588
@RF00452 DS    0H                                                  0589
*                         IF DSPPATH=BONE THEN/* IF PATHS REQUEST  0589
*                                                            @OZ30157*/
         L     @04,@CA00041                                        0589
         L     @04,CWBPTR-CWBPTR(,@04)                             0589
         TM    DSPPATH(@04),B'00000001'                            0589
         BNO   @RF00589                                            0589
*                           DO;     /* THEN CHK CPU,SDG,DRC  @OZ30157*/
*                             IF DSPCPU=BONE THEN/* IF CPU PATHS   0591
*                                      REQUEST               @OZ30157*/
         TM    DSPCPU(@04),B'00000010'                             0591
         BNO   @RF00591                                            0591
*                               CALL MSG56G;/* DO CPU PATH DISPLAY 0592
*                                                            @OZ30157*/
         BAL   @14,MSG56G                                          0592
*                             IF DSPSDG=BONE THEN/* IF SDG PATHS   0593
*                                      REQUEST               @OZ30157*/
@RF00591 L     @04,@CA00041                                        0593
         L     @04,CWBPTR-CWBPTR(,@04)                             0593
         TM    DSPSDG(@04),B'00010000'                             0593
         BNO   @RF00593                                            0593
*                               DO; /*                       @OZ30157*/
*                                 IF DSPCPU=BONE THEN/* IF DID CPU 0595
*                                      ALREADY               @OZ30157*/
         TM    DSPCPU(@04),B'00000010'                             0595
         BNO   @RF00595                                            0595
*                                   DO;/* MUST REINIT WPLBUF @OZ30157*/
*                                    CALL MSG56C;/* FINISH CURRENT 0597
*                                      MSG,                  @OZ30157*/
         BAL   @14,MSG56C                                          0597
*                                    MSGIND=MSG05610;/* SET UP FOR 0598
*                                      SDG HDR               @OZ30157*/
         MVI   MSGIND,X'2E'                                        0598
*                                    CALL MSG56AA;/* GET IT OUT    0599
*                                                            @OZ30157*/
         BAL   @14,MSG56AA                                         0599
*                                   END;/* ALL SET FOR MSGS  @OZ30157*/
*                                 CALL MSG56H;/* THEN DO THAT ONE  0601
*                                                            @OZ30157*/
@RF00595 BAL   @14,MSG56H                                          0601
*                               END;/*                       @OZ30157*/
*                             IF DSPDRC=BONE THEN/* IF DRC PATHS   0603
*                                      REQUEST               @OZ30157*/
@RF00593 L     @04,@CA00041                                        0603
         L     @04,CWBPTR-CWBPTR(,@04)                             0603
         TM    DSPDRC(@04),B'10000000'                             0603
         BNO   @RF00603                                            0603
*                               DO; /*                       @OZ30157*/
*                                 IF DSPCPU=BONE THEN/* IF DID CPU 0605
*                                      ALREADY,              @OZ30157*/
         TM    DSPCPU(@04),B'00000010'                             0605
         BNO   @RF00605                                            0605
*                                   DO;/* MUST REINIT WPLBUF @OZ30157*/
*                                    CALL MSG56C;/* FINISH CURRENT 0607
*                                      MSG,                  @OZ30157*/
         BAL   @14,MSG56C                                          0607
*                                    MSGIND=MSG05612;/* SET UP FOR 0608
*                                      DRC HDR               @OZ30157*/
         MVI   MSGIND,X'30'                                        0608
*                                    CALL MSG56AA;/* GET IT OUT    0609
*                                                            @OZ30157*/
         BAL   @14,MSG56AA                                         0609
*                                   END;/* ALL SET FOR MSGS  @OZ30157*/
*                                 CALL MSG56I;/* THEN DO THAT ONE  0611
*                                                            @OZ30157*/
@RF00605 BAL   @14,MSG56I                                          0611
*                               END;/*                       @OZ30157*/
*                           END;    /* END PATHS DISPLAY     @OZ30157*/
*                         ELSE      /*                       @OZ30157*/
*                           IF DSPQCB=BONE THEN/* IF ERROR QCB     0614
*                                      REQUEST               @OZ30157*/
         B     @RC00589                                            0614
@RF00589 L     @04,@CA00041                                        0614
         L     @04,CWBPTR-CWBPTR(,@04)                             0614
         TM    DSPQCB(@04),B'00000100'                             0614
         BNO   @RF00614                                            0614
*                             CALL MSG56J;/* DO THAT DISPLAY @OZ30157*/
         BAL   @14,MSG56J                                          0615
*                           ELSE    /*                       @OZ30157*/
*                             IF DSPALTM=BONE THEN/* IF ALTMSC     0616
*                                      REQUEST               @OZ30157*/
         B     @RC00614                                            0616
@RF00614 L     @04,@CA00041                                        0616
         L     @04,CWBPTR-CWBPTR(,@04)                             0616
         TM    DSPALTM(@04),B'00000010'                            0616
         BNO   @RF00616                                            0616
*                               CALL MSG56AL;/* DO THAT      @OZ30157*/
         BAL   @14,MSG56AL                                         0617
*                             ELSE  /*                       @OZ30157*/
*                               IF DSPTRC=BONE THEN/* IF TRACE     0618
*                                      DISPLAY               @OZ30157*/
         B     @RC00616                                            0618
@RF00616 L     @04,@CA00041                                        0618
         L     @04,CWBPTR-CWBPTR(,@04)                             0618
         TM    DSPTRC(@04),B'00001000'                             0618
         BNO   @RF00618                                            0618
*                                 CALL MSG56TR;/* THEN DO IT @OZ30157*/
         BAL   @14,MSG56TR                                         0619
*                               ELSE/*                       @OZ30157*/
*                                 IF DSPMSVC=BONE THEN/* IF MSVC   0620
*                                      REQUEST               @OZ30157*/
         B     @RC00618                                            0620
@RF00618 L     @04,@CA00041                                        0620
         L     @04,CWBPTR-CWBPTR(,@04)                             0620
         TM    DSPMSVC(@04),B'00010000'                            0620
         BNO   @RF00620                                            0620
*                                   CALL MSG56MS;/* THEN DO THAT   0621
*                                                            @OZ30157*/
         BAL   @14,MSG56MS                                         0621
*                                 ELSE                             0622
*                                   ;/*                      @OZ30157*/
@RF00620 DS    0H                                                  0623
*                       END;        /* END ALTERNATE REQ     @OZ30157*/
@RC00618 DS    0H                                                  0623
@RC00616 DS    0H                                                  0623
@RC00614 DS    0H                                                  0623
@RC00589 DS    0H                                                  0624
*                                                                  0624
*/*  ******************************************************  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*   CLEANUP RESIDUAL MESSAGES IN THE WPL BUFFER            @Z40LB01*/
*/*   OR BUILD BLANK LINE FOR OUTPUT.                        @ZA14724*/
*/*                                                          @Z40LB01*/
*/*  ******************************************************  @Z40LB01*/
*                                                                  0624
*                     CALL MSG56CA; /* WRITE SUBROUTINE      @OZ30157*/
@RC00452 BAL   @14,MSG56CA                                         0624
*VALPROCX:                                                         0625
*                   END;            /* VALID PROCESS END     @OZ24706*/
VALPROCX DS    0H                                                  0626
*/*  ******************************************************  @OZ24706*/
*/*                                                          @OZ24706*/
*/*   IF NO VALID SSIDS WERE PROCESSED FOR THIS CWB,         @OZ24706*/
*/*   THEN BUILD AND WRITE ERROR MESSAGE.                    @OZ24706*/
*/*                                                          @OZ24706*/
*/*  ******************************************************  @OZ24706*/
*                                                                  0626
*                 IF VALSSID=BZERO THEN/* TEST FOR VALID     @OZ24706*/
@RF00431 TM    VALSSID,B'01000000'                                 0626
         BNZ   @RF00626                                            0626
*                   DO;             /* NO VALID SSID PROCES  @OZ24706*/
*                     IF STORER=BZERO THEN/* IF NO VALID SSID      0628
*                                                            @OZ30157*/
         TM    STORER,B'00000001'                                  0628
         BNZ   @RF00628                                            0628
*                       MSGIND=MSG05604;/* POINT TO ERROR MSG      0629
*                                                            @OZ24706*/
         MVI   MSGIND,X'14'                                        0629
*                     ELSE          /* ELSE IF INSUFF STOR.  @OZ30157*/
*                       MSGIND=MSG05601;/* INSUFFICIENT STORAGE    0630
*                                                            @OZ30157*/
         B     @RC00628                                            0630
@RF00628 MVI   MSGIND,X'11'                                        0630
*                     CALL MSG56A;  /* MSG BUILD SUB         @OZ24706*/
@RC00628 BAL   @14,MSG56A                                          0631
*                     CALL MSG56C;  /* MSG WRITE SUB         @OZ24706*/
         BAL   @14,MSG56C                                          0632
*                   END;            /* END ERROR MSG CODE    @OZ24706*/
*               END;                /* END OF CK FOR IN PROCESS    0634
*                                                            @ZA14724*/
@RF00626 DS    0H                                                  0635
*/*  ******************************************************  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*   CALL SUBROUTINE ICBMSG46 TO ISSUE FREEMAIN FOR CWB     @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*  ******************************************************  @Z40LB01*/
*                                                                  0635
*             CALL ICBMSG46;        /*                       @Z40LB01*/
@RF00249 BAL   @14,ICBMSG46                                        0635
*/*  ******************************************************  @OZ30157*/
*/*                                                          @OZ30157*/
*/*   CLEANUP AREAS OBTAINED WITH GETMAIN BY MSG56F          @OZ30157*/
*/*                                                          @OZ30157*/
*/*  ******************************************************  @OZ30157*/
*                                                                  0636
*             IF GMCUR>=GMSTT THEN  /*                       @OZ30157*/
         L     @04,GMSTT                                           0636
         CL    @04,GMCUR                                           0636
         BH    @RF00636                                            0636
*               DO GMPTR=GMSTT TO GMCUR BY F8;/* FREE ALL AREAS    0637
*                                                            @OZ30157*/
         ST    @04,GMPTR                                           0637
         B     @DE00637                                            0637
@DL00637 DS    0H                                                  0638
*                 RFY                                              0638
*                   R0 RSTD;        /* OBTAINED WITH GETMAIN @OZ30157*/
*                 R0=GMLEN;         /* GET LENGTH OF AREA    @OZ30157*/
         L     R0,GMLEN(,@04)                                      0639
*                 R1=GMADR;         /* ADDRESS               @OZ30157*/
         L     R1,GMADR(,@04)                                      0640
*                 GEN CODE;                                        0641
*                                   /* FREE QUEUE SPACE      @OZ30157*/
FREE1    FREEMAIN R,LV=(0),A=(1)
*                 RFY                                              0642
*                   R0 UNRSTD;      /* RELEASE R0            @OZ30157*/
*               END;                /* END FREEMAIN LOOP     @OZ30157*/
         LA    @04,8                                               0643
         AL    @04,GMPTR                                           0643
         ST    @04,GMPTR                                           0643
@DE00637 CL    @04,GMCUR                                           0643
         BNH   @DL00637                                            0643
*             GMCUR=F0;             /* RESET START POINTER   @OZ30157*/
@RF00636 SLR   @04,@04                                             0644
         ST    @04,GMCUR                                           0644
*/*  ******************************************************  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*   DEQUE THIS CWB FROM INTERNAL QUEUE                     @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*  ******************************************************  @Z40LB01*/
*                                                                  0645
*             CMDQUE(CWBIX)=F0;     /* CLEAR CURRENT ELEMENT @Z40LB01*/
         LH    @15,CWBIX                                           0645
         SLA   @15,2                                               0645
         L     @14,@CA01311                                        0645
         AL    @14,@CF03609                                        0645
         ST    @04,CMDQUE-CMDQUE(@15,@14)                          0645
*           END;                    /* END OF F0 CK LOOP     @ZA14724*/
*QUELOOPX:                                                         0647
*       END;                        /*                       @Z40LB01*/
@RF00246 DS    0H                                                  0647
QUELOOPX LA    @04,1                                               0647
         AH    @04,CWBIX                                           0647
         STH   @04,CWBIX                                           0647
         CH    @04,@CH00034                                        0647
         BNH   @DL00243                                            0647
*ENDMAIN:                                                          0648
*     END;                          /* END MAIN CODE         @Z40LB01*/
ENDMAIN  DS    0H                                                  0649
*/*  ******************************************************  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*   CLEANUP AND EXIT PROCEDURE                             @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*  ******************************************************  @Z40LB01*/
*                                                                  0649
*   BITSW=''B;                      /* RESET DSP SWITCHES    @Z40LB01*/
@RF00232 L     @04,@CA01294                                        0649
         MVI   BITSW-BITSW(@04),X'00'                              0649
*   RETURN;                         /* RETURN TO ICBMSG15    @Z40LB01*/
@EL00001 L     @13,4(,@13)                                         0650
@EF00001 DS    0H                                                  0650
@ER00001 LM    @14,@12,12(@13)                                     0650
         BR    @14                                                 0650
*                                                                  0651
*/******************* SUBROUTINES ************************   @Z40LB01*/
*                                                                  0651
*MSG56AL:                                                          0651
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56AL  DS    0H                                                  0652
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56AL                                  @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY ALTMSC STATUS                          @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: MSC SECTORS 04, 40, AND IEZSSC                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE WTO LINE WITH ALTERNATE MSC STATUS          @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  0652
*   DCL                                                            0652
*     MS56AL14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            0653
*     1 MSGBMAP CHAR(52) BASED(WPLPTR+4),/* ALT MSC MSG      @OZ30157*/
*      2 * CHAR(8),                 /* HEADING               @OZ30157*/
*      2 ALMSCAD CHAR(3),           /* MSC ADR               @OZ30157*/
*       3 ALMSCCH CHAR(1),          /* CHANNEL               @OZ30157*/
*       3 ALMSCCU CHAR(2),          /* CONTROL UNIT          @OZ30157*/
*      2 * CHAR(4),                 /* CHARS IS              @OZ30157*/
*      2 ALTMONOF CHAR(7),          /* OFFLINE               @OZ30157*/
*       3 ALTMONON CHAR(2),         /* O/                    @OZ30157*/
*       3 ALTMRDYO CHAR(5),         /* READY                 @OZ30157*/
*      2 * CHAR(3),                 /* -                     @OZ30157*/
*      2 ALTMUNUS CHAR(8),          /* UNUSABLE              @OZ30157*/
*       3 ALTMUS CHAR(6),           /* USABLE                @OZ30157*/
*      2 * CHAR(3),                 /* -                     @OZ30157*/
*      2 ALTMRCD CHAR(12),          /* REASON CODE           @OZ30157*/
*       3 ALTMNIML CHAR(9),         /* NOT IMLED             @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 ALTMRSNU CHAR(3),          /*                       @OZ30157*/
*       3 ALTMRSN CHAR(2),          /* REASON CODE HEX       @OZ30157*/
*       3 ALTMRSNY CHAR(1);         /*                       @OZ30157*/
*   DCL                                                            0654
*     1 WCS4C BASED(QAPTR(2)),      /* SECTOR 4C             @OZ30157*/
*      2 WC4CRSNP CHAR(2),          /* REASON CODE FOR UNPK  @OZ30157*/
*       3 WC4CRSN CHAR(1);          /* REASON CODE           @OZ30157*/
*   RFY                                                            0655
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56AL14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56AL14                                        0656
*   RFY                                                            0657
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   UCBPTR=ICBAUCB;                 /* GET PTR TO ALT MSC UCB@OZ30157*/
         L     @04,@CA00927                                        0658
         L     @15,CVTPTR                                          0658
         L     @15,CVTEXT2(,@15)                                   0658
         L     @15,CVTICB(,@15)                                    0658
         L     @00,ICBAUCB(,@15)                                   0658
         ST    @00,UCBPTR-UCBPTR(,@04)                             0658
*   IF UCBPTR=0 THEN                /* IF NO SUCH DEVICE     @OZ30157*/
         LTR   @00,@00                                             0659
         BNZ   @RF00659                                            0659
*     DO;                           /* THEN SAY SO           @OZ30157*/
*       ALMSCAD='NO';               /* NO                    @OZ30157*/
         LA    @04,4                                               0661
         AL    @04,WPLPTR                                          0661
         MVI   ALMSCAD+2(@04),C' '                                 0661
         MVC   ALMSCAD(2,@04),@CC02904                             0661
*       ALTMONOF='ALTMSC';          /* ALTERNATE MSC         @OZ30157*/
         MVI   ALTMONOF+6(@04),C' '                                0662
         MVC   ALTMONOF(6,@04),@CC02905                            0662
*     END;                          /*                       @OZ30157*/
*   ELSE                            /* OTHERWISE, GET STAT   @OZ30157*/
*     DO;                           /* AND WTO               @OZ30157*/
*                                                                  0664
         B     @RC00659                                            0664
@RF00659 DS    0H                                                  0665
*       /*************************************************************/
*       /*                                                           */
*       /* PUT IN ADDRESS FROM UCB(SEE ICB2MSG)              @OZ30157*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0665
*       ALMSCAD=UCBNAME;            /* MOVE IN UCB NAME      @OZ30157*/
*                                                                  0665
         LA    @04,4                                               0665
         AL    @04,WPLPTR                                          0665
         L     @15,@CA00927                                        0665
         L     @15,UCBPTR-UCBPTR(,@15)                             0665
         MVC   ALMSCAD(3,@04),UCBNAME(@15)                         0665
*       /*************************************************************/
*       /*                                                           */
*       /* GET STATUS FROM UCB (ALTMONOF ETC)                @OZ30157*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0666
*       IF UCBONLI=BZERO THEN       /* IF SECNDRY DEVICE OFFLINE   0666
*                                                            @OZ30157*/
         TM    UCBONLI(@15),B'10000000'                            0666
         BNZ   @RF00666                                            0666
*         ALTMONOF='OFFLINE';       /* THEN SAY SO           @OZ30157*/
         MVC   ALTMONOF(7,@04),@CC02856                            0667
*       ELSE                        /* NO ALT MSC            @OZ30157*/
*         DO;                       /* ALT MSC AVAIL CODE    @OZ30157*/
         B     @RC00666                                            0668
@RF00666 DS    0H                                                  0669
*           ALTMONOF='O/     ';     /* FIRST SAY ONLINE      @OZ30157*/
         LA    @04,4                                               0669
         AL    @04,WPLPTR                                          0669
         MVC   ALTMONOF(7,@04),@CC02906                            0669
*           ALTMRDYO='READY';       /* AND READY             @OZ30157*/
*                                                                  0670
         MVC   ALTMRDYO(5,@04),@CC02907                            0670
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE QUERY FOR SECTOR 04                     @OZ30157*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0671
*           QAPTR(1)=ADDR(QUBUF1);  /* SET FIRST QUERY       @OZ30157*/
         LA    @04,44                                              0671
         AL    @04,WORKPTR                                         0671
         ST    @04,QAPTR                                           0671
*           QBCNT=F2;               /* TWO QUERIES           @OZ30157*/
         MVC   QBCNT(4),@CF00056                                   0672
*           QBENT(1)=QBW04;         /* FOR SECTOR 04         @OZ30157*/
         MVI   QBENT+12,C' '                                       0673
         MVC   QBENT+13(31),QBENT+12                               0673
         MVC   QBENT(12),QBW04                                     0673
*           QBENT(2)=QBW4C;         /* AND 4C                @OZ30157*/
         MVI   QBENT+56,C' '                                       0674
         MVC   QBENT+57(31),QBENT+56                               0674
         MVC   QBENT+44(12),QBW4C                                  0674
*           CALL MSG56GQ;           /* TO SEE IF WAS IMLED   @OZ30157*/
*                                                                  0675
         BAL   @14,MSG56GQ                                         0675
*           /*********************************************************/
*           /*                                                       */
*           /* IF RETURN NON-ZERO, SAY NOT AVAILABLE, NOT IMLED      */
*           /*                                               @OZ30157*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0676
*           IF RETC^=F0 THEN        /* IF CANNOT QUERY 04    @OZ30157*/
         LH    @04,RETC                                            0676
         LTR   @04,@04                                             0676
         BZ    @RF00676                                            0676
*             DO;                   /* THEN                  @OZ30157*/
*               ALTMUNUS='UNUSABLE';/* SAY UNUSABLE          @OZ30157*/
         LA    @04,4                                               0678
         AL    @04,WPLPTR                                          0678
         MVC   ALTMUNUS(8,@04),@CC02908                            0678
*               ALTMNIML='NOT INIT ';/* AND NOT IMLED        @OZ30157*/
         MVC   ALTMNIML(9,@04),@CC02909                            0679
*             END;                  /*                       @OZ30157*/
*           ELSE                    /*                       @OZ30157*/
*             DO;                   /* CHECK CODES           @OZ30157*/
*                                                                  0681
         B     @RC00676                                            0681
@RF00676 DS    0H                                                  0682
*               /*****************************************************/
*               /*                                                   */
*               /* ELSE IF STATUS BYTE IS 00 SAY USABLE      @OZ30157*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0682
*               IF WC4CRSN='00'X THEN/* IF 00, IS GOOD IML   @OZ30157*/
         L     @04,QAPTR+4                                         0682
         CLI   WC4CRSN(@04),X'00'                                  0682
         BNE   @RF00682                                            0682
*                 ALTMUS='USABLE';  /* SO SAY SO             @OZ30157*/
         L     @04,WPLPTR                                          0683
         MVC   ALTMUS+4(6,@04),@CC02911                            0683
*               ELSE                /* IF NOT, MUST          @OZ30157*/
*                 DO;               /* PRINT REASON CODE     @OZ30157*/
         B     @RC00682                                            0684
@RF00682 DS    0H                                                  0685
*                   ALTMUNUS='UNUSABLE';/* IS UNUSABLE       @OZ30157*/
         LA    @04,4                                               0685
         AL    @04,WPLPTR                                          0685
         MVC   ALTMUNUS(8,@04),@CC02908                            0685
*                   ALTMRCD='REASON CODE ';/* WITH REASON          0686
*                                      CODE@OZ30157                  */
*                                                                  0686
         MVC   ALTMRCD(12,@04),@CC02912                            0686
*                   /*************************************************/
*                   /*                                               */
*                   /* UNPACK STATUS BYTE INTO MESSAGE       @OZ30157*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0687
*                   UNPK(ALTMRSNU,WC4CRSNP);/* UNPACK RSN COD      0687
*                                                            @OZ30157*/
         L     @15,QAPTR+4                                         0687
         UNPK  ALTMRSNU(3,@04),WC4CRSNP(2,@15)                     0687
*                   TR(ALTMRSN,TRANS);/* GET GOOD PRINTABLE  @OZ30157*/
         TR    ALTMRSN(2,@04),TRANS                                0688
*                   ALTMRSNY=' ';   /* CLEAR EXTRA BYTE      @OZ30157*/
         MVI   ALTMRSNY(@04),C' '                                  0689
*                 END;              /* END SET REASON CODE   @OZ30157*/
*             END;                  /* END GOOD RET 2        @OZ30157*/
@RC00682 DS    0H                                                  0692
*         END;                      /* END ALT MSC CODE      @OZ30157*/
@RC00676 DS    0H                                                  0693
*     END;                          /* END OF WTO FOR ALTMSC @OZ30157*/
@RC00666 DS    0H                                                  0694
*   WPLPTR=WPLPTR+WPLMLLEN;         /* SET FOR NEXT LINE     @OZ30157*/
@RC00659 L     @04,WPLPTR                                          0694
         SLR   @00,@00                                             0694
         IC    @00,WPLMLLEN(,@04)                                  0694
         ALR   @00,@04                                             0694
         ST    @00,WPLPTR                                          0694
*   MSGCNT=F2;                      /* TWO MESSAGES THIS TIME@OZ30157*/
         MVC   MSGCNT(2),@CH00056                                  0695
*   RFY                                                            0696
*     R14 RSTD;                     /*                       @OZ30157*/
*   R14=MS56AL14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56AL14                                        0697
*   RFY                                                            0698
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00002 DS    0H                                                  0699
@EF00002 DS    0H                                                  0699
@ER00002 BR    @14                                                 0699
*   END MSG56AL;                    /* END ALTMSC ROUTINE    @OZ30157*/
*MSG56MS:                                                          0701
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56MS  DS    0H                                                  0702
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56MS                                  @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY MSVI AND JOURNAL STATUS                @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: HOST TABLES                                      @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE WTO LINE WITH MSVI STATUS                   @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  0702
*   DCL                                                            0702
*     MS56MS14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            0703
*     DISABL CHAR(8) CONSTANT('DISABLED');/*                 @OZ30157*/
*   DCL                                                            0704
*     ENABLE CHAR(8) CONSTANT('ENABLED ');/*                 @OZ30157*/
*   DCL                                                            0705
*     1 MSGBDS CHAR(31) BASED(WPLPTR+4),/*                   @OZ30157*/
*      2 * CHAR(5),                 /* HEADER                @OZ30157*/
*      2 MSGBVIST CHAR(8),          /* ENABLED/DISABLED      @OZ30157*/
*      2 * CHAR(10),                /* HEADER - JOURNAL      @OZ30157*/
*      2 MSGBJRST CHAR(8);          /* ENABLED/DISABLED      @OZ30157*/
*   RFY                                                            0706
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56MS14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56MS14                                        0707
*   RFY                                                            0708
*     R14 UNRSTD;                   /*                       @OZ30157*/
*/* LOCATE VVI TABLE                                         @OZ30157*/
*                                                                  0709
*   VVIPTR=ICBVVICB;                /* POINT TO VVICB        @OZ30157*/
         L     @04,CVTPTR                                          0709
         L     @04,CVTEXT2(,@04)                                   0709
         L     @04,CVTICB(,@04)                                    0709
         L     @04,ICBVVICB(,@04)                                  0709
         ST    @04,VVIPTR                                          0709
*   IF VVIFLG0=BONE THEN            /* IF BOTH DISABLED      @OZ30157*/
         TM    VVIFLG0(@04),B'10000000'                            0710
         BNO   @RF00710                                            0710
*     DO;                           /* THEN SAY THEY ARE     @OZ30157*/
*       MSGBVIST=DISABL;            /* INVENTORY             @OZ30157*/
         LA    @04,4                                               0712
         AL    @04,WPLPTR                                          0712
         MVC   MSGBVIST(8,@04),@CC02919                            0712
*       MSGBJRST=DISABL;            /* AND JOURNAL           @OZ30157*/
         MVC   MSGBJRST(8,@04),@CC02919                            0713
*     END;                          /*                       @OZ30157*/
*   ELSE                            /*                       @OZ30157*/
*     DO;                           /*                       @OZ30157*/
         B     @RC00710                                            0715
@RF00710 DS    0H                                                  0716
*       MSGBVIST=ENABLE;            /* ASSUME ENABLED FOR    @OZ30157*/
         LA    @04,4                                               0716
         AL    @04,WPLPTR                                          0716
         MVC   MSGBVIST(8,@04),@CC02921                            0716
*       MSGBJRST=ENABLE;            /* BOTH                  @OZ30157*/
         MVC   MSGBJRST(8,@04),@CC02921                            0717
*       IF VVIFLG1=BONE THEN        /* THEN IF INVENTORY IS  @OZ30157*/
         L     @15,VVIPTR                                          0718
         TM    VVIFLG1(@15),B'01000000'                            0718
         BNO   @RF00718                                            0718
*         MSGBVIST=DISABL;          /* DISABLED, SAY SO      @OZ30157*/
         MVC   MSGBVIST(8,@04),@CC02919                            0719
*       ELSE                        /* OTHERWISE, ONLY       @OZ30157*/
*         IF VVIFLG2=BONE THEN      /* THE JOURNAL CAN BE    @OZ30157*/
         B     @RC00718                                            0720
@RF00718 L     @04,VVIPTR                                          0720
         TM    VVIFLG2(@04),B'00100000'                            0720
         BNO   @RF00720                                            0720
*           MSGBJRST=DISABL;        /* IT IS, SO INDICATE    @OZ30157*/
         L     @04,WPLPTR                                          0721
         MVC   MSGBJRST+4(8,@04),@CC02919                          0721
*     END;                          /*                       @OZ30157*/
@RF00720 DS    0H                                                  0722
@RC00718 DS    0H                                                  0723
*   WPLMLLTF=''B;                   /* SET FOR DATA LINE     @OZ30157*/
@RC00710 L     @04,WPLPTR                                          0723
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       0723
*   WPLMLLTC=BONE;                  /* AND BUMP POINTER      @OZ30157*/
         OI    WPLMLLTC(@04),B'00100000'                           0724
*   WPLPTR=WPLPTR+WPLMLLEN;         /* TO END OF LINE        @OZ30157*/
         SLR   @00,@00                                             0725
         IC    @00,WPLMLLEN(,@04)                                  0725
         ALR   @00,@04                                             0725
         ST    @00,WPLPTR                                          0725
*   MSGCNT=F2;                      /* TWO MESSAGE LINES     @OZ30157*/
         MVC   MSGCNT(2),@CH00056                                  0726
*   RFY                                                            0727
*     R14 RSTD;                     /*                       @OZ30157*/
*   R14=MS56MS14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56MS14                                        0728
*   RFY                                                            0729
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00003 DS    0H                                                  0730
@EF00003 DS    0H                                                  0730
@ER00003 BR    @14                                                 0730
*   END MSG56MS;                    /* END MSVI ROUTINE      @OZ30157*/
*MSG56PA:                                                          0732
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56PA  DS    0H                                                  0733
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME: MSG56PA                                          */
*/*                                                                  */
*/* FUNCTION: DISPLAY PATH STATUS - CPU, SDG, DRC                    */
*/*                                                                  */
*/* INPUTS: SYSTEM AND MSC TABLES AND MSC SECTORS AS FOLLOWS:        */
*/*            CVT                                                   */
*/*            UCB AND UCB INDEX                                     */
*/*            ICB                                                   */
*/*            CONFIGURATION INDEX AND MANUFACTURER'S ID TABLE       */
*/*            CONFIGURATION DATA TABLE                              */
*/*            VERIFICATION TABLE                                    */
*/*            MSC WCS SECTORS 0F, 7C, 7D                            */
*/*                                                                  */
*/* DATA AREAS: CPU PATH HEADER TABLE                                */
*/*             CPU PATH DETAIL TABLE                                */
*/*             SDG PATH TABLE                                       */
*/*             PAB TABLE                                            */
*/*             DRC PATH TABLE                                       */
*/*                                                                  */
*/* OUTPUTS: WTO LINES WITH PATH STATUS AS REQUESTED                 */
*/*                                                                  */
*/* CALLS: MSG56F - GETMAIN                                          */
*/*        MSG56G - DISPLAY CPU STATUS                               */
*/*        MSG56H - DISPLAY SDG STATUS                               */
*/*        MSG56I - DISPLAY DRC STATUS                               */
*/*        MSG56GQ- ISSUE QUERIES                                    */
*/*        MSG56QU- GET QUALIFIERS                                   */
*/*                                                          @OZ30157*/
*/********************************************************************/
*                                                                  0733
*   DCL                                                            0733
*     MS56PA14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* THIS STRUCTURE MAPS THE CONFIGURATION INDEX/ MANUFACTURERS ID    */
*/* RECORD FROM THE CONFIGURATION TABLE AS USED IN PATHS DSP @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0734
*   DCL                                                            0734
*     1 CONFXTBL BASED(CONXPTR),    /* CONFIG INDEX ENTRY    @OZ30157*/
*      2 CONFXTAB(16) CHAR(8),      /* INDEX ENTRIES         @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* IN THE SAME RECORD, MAP THE MANUFACTURERS ID TABLE       @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0734
*      2 MIDCTAB(16),               /* 16 ENTRIES            @OZ30157*/
*       3 MIDCPUID CHAR(5),         /* MANUF ID THIS CPU     @OZ30157*/
*       3 MIDCPAIR FIXED(8),        /* INDEX TO OTHER CPU IN PAIR  0734
*                                                            @OZ30157*/
*       3 MIDCFLG1 BIT(8),          /* FIRST FLAG BYTE       @OZ30157*/
*        4 * BIT(1),                /* MUST BE ZERO          @OZ30157*/
*        4 MIDCFPOT BIT(1),         /* MAY BE MULTIPROC PAIR @OZ30157*/
*        4 MIDCFALT BIT(1),         /* ALTERNATE PATH TO THIS CPU  0734
*                                                            @OZ30157*/
*        4 MIDCFZZ1 BIT(3),         /* MUST BE ZERO          @OZ30157*/
*        4 MIDCFIF BIT(2),          /* INTERFACE ID          @OZ30157*/
*         5 MIDCFIF1 BIT(1),        /* FIRST BIT OF INTERFACE ID   0734
*                                                            @OZ30157*/
*         5 MIDCFIF2 BIT(1),        /* FIRST BIT OF INTERFACE ID   0734
*                                                            @OZ30157*/
*       3 MIDCFLG2 BIT(8),          /* SECOND FLAG BYTE      @OZ30157*/
*        4 MIDCFVAL BIT(1),         /* ENTRY IS VALID        @OZ30157*/
*        4 MIDCFASC BIT(1),         /* IS ASSOCIATED         @OZ30157*/
*        4 MIDCFCBF BIT(1),         /* COMM MSG BUFF         @OZ30157*/
*        4 MIDCFZZZ BIT(2),         /* MUST BE ZERO          @OZ30157*/
*        4 MIDCFAIF BIT(2),         /* ALT INTERFACE ID      @OZ30157*/
*         5 MIDCFAI1 BIT(1),        /* FIRST BIT OF ALT INTFC ID   0734
*                                                            @OZ30157*/
*         5 MIDCFAI2 BIT(1);        /* FIRST BIT OF ALT INTFC ID   0734
*                                                            @OZ30157*/
*   DCL                                                            0735
*     1 CONFXENT BASED(TABPTR1),    /* INDIV TABLE ENTRY     @OZ30157*/
*      2 CXCSCON BIT(8),            /*                       @OZ30157*/
*       3 CXCSCCS BIT(1),           /* OFF=SA, ON=CART STORE @OZ30157*/
*       3 * BIT(3),                 /* NOT USED              @OZ30157*/
*       3 CXCSCS0 BIT(1),           /* SA TO CS 0            @OZ30157*/
*       3 CXCSCS1 BIT(1),           /* SA TO CS 1            @OZ30157*/
*       3 * BIT(2),                 /* NOT USED              @OZ30157*/
*      2 * BIT(8),                  /* ALWAYS 00000000 1     @OZ30157*/
*      2 CXSAIF(3),                 /* 3 SA INTERFACES - A, B, C   0735
*                                      2-7@OZ30157                   */
*       3 CXSACPU FIXED(8),         /* INDEX TO CPU          @OZ30157*/
*       3 CXSACUCH BIT(8),          /* CU AND CHANNEL        @OZ30157*/
*        4 CXSACU BIT(2),           /* CU NUMBER             @OZ30157*/
*        4 * BIT(2),                /* NOT USED 00           @OZ30157*/
*        4 CXSACH BIT(4);           /* CHANNEL ADDRESS       @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* THIS STRUCTURE MAPS THE CONFIGURATION TABLE ENTRY FOR USE BY     */
*/* THE PATHS DISPLAY                                        @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0736
*   DCL                                                            0736
*     1 CONFDATA(16) BASED(CONDPTR),/* CONFIG TABLE          @OZ30157*/
*      2 CONDCONF BIT(8),           /*                       @OZ30157*/
*       3 CONDNSHR BIT(1),          /* ON IF NOT SHARED      @OZ30157*/
*       3 CONDVINU BIT(1),          /* VUA IN USE            @OZ30157*/
*       3 CONDDTYP BIT(1),          /* ON IF 3333-1          @OZ30157*/
*       3 CONDSDG BIT(5),           /* SDG NUMBER            @OZ30157*/
*      2 CONDALTP BIT(8),           /* ALT PATH INFO         @OZ30157*/
*       3 CONA1NU BIT(1),           /* NOT USED              @OZ30157*/
*       3 CONA1B BIT(1),            /* SA1 INTF B IS ALT     @OZ30157*/
*       3 CONA1C BIT(1),            /* SA1 INTF C IS ALT     @OZ30157*/
*       3 CONA1D BIT(1),            /* SA1 INTF D IS ALT     @OZ30157*/
*       3 CONA2NU BIT(1),           /* NOT USED              @OZ30157*/
*       3 CONA2B BIT(1),            /* SA2 INTF B IS ALT     @OZ30157*/
*       3 CONA2C BIT(1),            /* SA2 INTF C            @OZ30157*/
*       3 CONA2D BIT(1),            /* SA2 INTF D            @OZ30157*/
*      2 CONDMVTP FIXED(16);        /* MVT DB PTR            @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* THIS STRUCTURE MAPS WCS SECTORS 7C THROUGH 7F DATA IN QUBUF1     */
*/* FOR USE IN THE PATHS DISPLAY                             @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0737
*   DCL                                                            0737
*     1 WCS7X BASED(PWCS7X),        /* SECTOR 7C THROUGH 7F  @OZ30157*/
*      2 DRCSA(4),                  /* DRC-SA PATHS          @OZ30157*/
*       3 DRCCON BIT(16),           /* SA'S BY BIT           @OZ30157*/
*       3 * CHAR(2),                /* NOT USED              @OZ30157*/
*      2 DRCUCB(4) CHAR(4),         /* DRC UCBS              @OZ30157*/
*      2 DRDUCB(8) CHAR(4),         /* DRD PATH UCBS         @OZ30157*/
*       3 DRDFLGS BIT(8),           /*                       @OZ30157*/
*        4 DRDFVAL BIT(1),          /* VALID                 @OZ30157*/
*        4 DRDFONL BIT(1),          /* ONLINE                @OZ30157*/
*        4 DRDFRDY BIT(1),          /* READY/USABLE          @OZ30157*/
*        4 DRDFAPR BIT(1),          /* ALT PATH RETRY        @OZ30157*/
*        4 DRDDRC0 BIT(1),          /* TO DRC 0              @OZ30157*/
*        4 DRDDRC1 BIT(1),          /* 1                     @OZ30157*/
*        4 DRDDRC2 BIT(1),          /* 2                     @OZ30157*/
*        4 DRDDRC3 BIT(1),          /* 3                     @OZ30157*/
*       3 * CHAR(3),                /*                       @OZ30157*/
*      2 SAUCB(4) CHAR(4),          /* SA UCBS               @OZ30157*/
*       3 SAFLGS BIT(8),            /*                       @OZ30157*/
*        4 SAFVAL BIT(1),           /* VALID                 @OZ30157*/
*        4 SAFONL BIT(1),           /* ONLINE                @OZ30157*/
*        4 SAFRDY BIT(1),           /* READY                 @OZ30157*/
*        4 SAFBSY BIT(1),           /* BUSY                  @OZ30157*/
*        4 * BIT(4),                /* ZEROS                 @OZ30157*/
*       3 * CHAR(3);                /* NOT USED              @OZ30157*/
*   DCL                                                            0738
*     1 DRCPUCB BASED(PTHPTR),      /* DRC PATH UCB          @OZ30157*/
*      2 DRCFLGS(4) BIT(8),         /* ONE EACH LOGICAL PATH @OZ30157*/
*       3 DRCFVAL BIT(1),           /* VALID                 @OZ30157*/
*       3 DRCFONL BIT(1),           /* ONLINE                @OZ30157*/
*       3 DRCFUSA BIT(1),           /* USABLE                @OZ30157*/
*       3 DRCFAPR BIT(1),           /* ALT PATH RETRY        @OZ30157*/
*       3 DRCFADR BIT(4);           /* DRD LOGICAL ADDRESS   @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* THIS STRUCTURE MAPS WCS SECTOR 0F AS USED IN PATHS DISPL @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0739
*   DCL                                                            0739
*     1 WCS0F BASED(PWCS0F),        /* SECTOR 0F DSECT       @OZ30157*/
*      2 WC0FINIT BIT(8),           /* INTERFACES INITIALIZE @OZ30157*/
*       3 WC0FINA BIT(1),           /* A                     @OZ30157*/
*       3 WC0FINB BIT(1),           /* B                     @OZ30157*/
*       3 WC0FINC BIT(1),           /* C                     @OZ30157*/
*       3 WC0FIND BIT(1),           /* D                     @OZ30157*/
*       3 * BIT(4),                 /* NOT USED              @OZ30157*/
*      2 WC0FP BIT(8),              /* PRIMARY HOST ID       @OZ30157*/
*       3 * BIT(4),                 /* NOT USED              @OZ30157*/
*       3 WC0FPHIF BIT(2),          /* INTERFACE ID          @OZ30157*/
*       3 * BIT(2),                 /* NOT USED              @OZ30157*/
*      2 WC0FAP(4) CHAR(1),         /* FOR AP/MP CHECK       @OZ30157*/
*       3 WC0FAPCK BIT(8),          /* AP/MP HERE            @OZ30157*/
*        4 * BIT(5),                /* NOT USED              @OZ30157*/
*        4 WC0FAPVL BIT(1),         /* ALP PATH IS VALID     @OZ30157*/
*        4 * BIT(1),                /* NOT USED              @OZ30157*/
*        4 WC0FMPPR BIT(1);         /* POTENTIAL MP PAIR     @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* MAP THE VIRTUAL UCB AREA                                 @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0740
*   DCL                                                            0740
*     VUCBAD(64) PTR(32) BASED(VVIUCB);/* 64 VUCB ADDRESSES  @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* THESE STRUCTURES MAP THE VERIFICATION TABLE AS IN PATHS DISPL    */
*/* VERIFICATION RECORD 1                                    @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0741
*   DCL                                                            0741
*     1 VERTAB BASED(VERPTR),       /* VERIFICATION TABLE    @OZ30157*/
*      2 VESDGNDX(16),              /* SDGS BY SA NUMBER 50  @OZ30157*/
*       3 VESDG1 FIXED(8),          /* SDG 1 FOR THIS SA 50  @OZ30157*/
*       3 VESDG2 FIXED(8),          /* SDG 2 FOR THIS SA 51  @OZ30157*/
*       3 * FIXED(15);              /* NOT USED 52           @OZ30157*/
*   DCL                                                            0742
*     PKPTR PTR(31);                /* PTR TO UNPK VESDG     @OZ30157*/
*   DCL                                                            0743
*     PACK2 CHAR(2) BASED(PKPTR);   /* OVERLAY FOR UNPK      @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* VARIABLES, WORK AREAS, AND CONSTANTS USED WITHIN THIS    @OZ30157*/
*/* MODULE ONLY                                              @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0744
*   DCL                                                            0744
*     PWCS0F PTR(31),               /* PTR TO WCS 0F         @OZ30157*/
*     CONXPTR PTR(31),              /* PTR TO CONFIG INDEX   @OZ30157*/
*     LASTENT PTR(31),              /* LAST ENTRY TRACKER    @OZ30157*/
*     ENDPTR PTR(31);               /* GETMAIN END POINTER   @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* POINTERS TO BUILD CPU DETAIL TABLE - USED TO FIND THE            */
*/* CURRENT ENTRY OF A TYPE TO ADD A VUA. SET TO ZERO AT             */
*/* START OF EACH SDG, TO ENTRY ADDRESS ON FIRST OCCURRENCE          */
*/* OF A VUA IN A PARTICULAR TYPE.                           @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0745
*   DCL                                                            0745
*     1 CURSTR,                     /*                       @OZ30157*/
*      2 * BIT(8),                  /*                       @OZ30157*/
*      2 ONLPTR PTR(24),            /* CURR ONLINE POINTER   @OZ30157*/
*      2 * BIT(8),                  /*                       @OZ30157*/
*      2 OFFPTR PTR(24),            /* CURR OFFLINE POINTER  @OZ30157*/
*      2 * BIT(8),                  /*                       @OZ30157*/
*      2 SUUPTR PTR(24);            /* CURR SUU POINTER      @OZ30157*/
*   DCL                                                            0746
*     1 CURPTRS(3) DEF(CURSTR),     /* REDEF FOR INDEXED OPS @OZ30157*/
*      2 * BIT(8),                  /* SWITCHES              @OZ30157*/
*       3 USEADB BIT(1),            /* NEXT TO ADD VUAB      @OZ30157*/
*       3 * BIT(7),                 /* NOT USED              @OZ30157*/
*      2 CURPTR PTR(24);            /* CURRENT POINTERS      @OZ30157*/
*   DCL                                                            0747
*     VUALEN FIXED(31) CONSTANT(388);/* LENGTH OF VUA ENTRY  @OZ30157*/
*   DCL                                                            0748
*     VUAMIN FIXED(31) CONSTANT(10);/* LENGTH MINIMUM VUA ENT@OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* WORK AREAS FOR CHANNEL, CONTROL UNIT AND DEVICE CALCS            */
*/* AND FOR BIT ADJUSTMENT TO DO BIT COMPARES                @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0749
*   DCL                                                            0749
*     1 PTHWK BDY(DWORD),           /* PATH CALC WORK AREA   @OZ30157*/
*      2 PCHAN FIXED(31),           /* CHANNEL ADDRESS WORK  @OZ30157*/
*       3 * CHAR(3),                /* FROM CHAR FIELDS      @OZ30157*/
*       3 PCHANCX CHAR(1),          /* INTO FIXED FIELDS     @OZ30157*/
*        4 BITWK1 BIT(8),           /*                       @OZ30157*/
*      2 PCNTL FIXED(31),           /* CNTL UNIT ADDR WORK   @OZ30157*/
*       3 * CHAR(3),                /*                       @OZ30157*/
*       3 PCNTLCX CHAR(1),          /*                       @OZ30157*/
*        4 BITWK2 BIT(8),           /*                       @OZ30157*/
*      2 PUNIT FIXED(31),           /* DVC ADDR WORK AREA    @OZ30157*/
*       3 * CHAR(1),                /*                       @OZ30157*/
*       3 PUNIT3 CHAR(3),           /*                       @OZ30157*/
*        4 * CHAR(1),               /*                       @OZ30157*/
*        4 PUNITCY CHAR(2),         /* WORK FOR CVD OPS      @OZ30157*/
*         5 PUNITCX CHAR(1),        /*                       @OZ30157*/
*          6 BITWK3 BIT(8);         /*                       @OZ30157*/
*   DCL                                                            0750
*     1 CPXWK DEF(PTHWK),           /* CALC CPU ID WORK AREA @OZ30157*/
*      2 * FIXED(8),                /* VERSION - NOT USED    @OZ30157*/
*      2 CPXIDP CHAR(3),            /* CPU ID - SERIAL NUMBER@OZ30157*/
*      2 CPXMODP1 CHAR(3),          /* UNPACK WORK SOURCE    @OZ30157*/
*       3 CPXMODP CHAR(2);          /* MODEL NUMBER          @OZ30157*/
*   DCL                                                            0751
*     1 CPYWK DEF(PTHWK),           /* CALC CPU ID WORK AREA @OZ30157*/
*      2 * FIXED(8),                /* VERSION - NOT USED    @OZ30157*/
*      2 CPXIDP1 CHAR(4);           /* UNPACK WORK SOURCE    @OZ30157*/
*   DCL                                                            0752
*     CPXCPU CHAR(5) DEF(PTHWK) POS(2);/* PACKED FORM        @OZ30157*/
*   DCL                                                            0753
*     1 CURRCPUW CHAR(11),          /* SAVE AREA             @OZ30157*/
*      2 CPXIDC CHAR(6),            /* SAVE CPU SERIAL       @OZ30157*/
*      2 CPXMODC1 CHAR(5),          /*                       @OZ30157*/
*       3 CPXMODC CHAR(4);          /* AND MODEL NUMBER      @OZ30157*/
*   DCL                                                            0754
*     1 CURRCPU CHAR(10) DEF(CURRCPUW),/* REDEF FOR COMPARE  @OZ30157*/
*      2 CPXIDC1 CHAR(7);           /* UNPACK WORK AREA      @OZ30157*/
*   DCL                                                            0755
*     TESTVAL FIXED(31) INIT(32768);/* START VALUE FOR SHIFT @OZ30157*/
*   DCL                                                            0756
*     SATST FIXED(15);              /* WORK AREA             @OZ30157*/
*   DCL                                                            0757
*     CURSTAT FIXED(8);             /* STATUS SAVE AREA      @OZ30157*/
*   DCL                                                            0758
*     PRVSTAT FIXED(8);             /* STATUS SAVE AREA      @OZ30157*/
*   DCL                                                            0759
*     CURCPUP CHAR(5);              /* CURRENT CPU IN PACKED @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* COMPARE AREA FOR CPUID                                   @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0760
*   DCL                                                            0760
*     1 COMPAREA,                   /* COMPARE AREA FOR      @OZ30157*/
*      2 CMPCPUX CHAR(6),           /* CPUID                 @OZ30157*/
*       3 CMPCPU CHAR(5);           /* IN 5 CHARACTER PACKED @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* MISCELLANEOUS CHARACTER VARIABLES AND CONSTANTS          @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0761
*   DCL                                                            0761
*     VUA00 CHAR(3) INIT('000000'X);/* BASIC VUA 00 VALUE    @OZ30157*/
*   DCL                                                            0762
*     VUA3F CHAR(3) INIT('00030F'X);/* BASIC VUA 3F VALUE    @OZ30157*/
*   DCL                                                            0763
*     OFFLN BIT(8) CONSTANT('02'X), /* OFFLINE SWITCH VALUE  @OZ30157*/
*     ONLN BIT(8) CONSTANT('01'X),  /* ONLINE SWITCH VALUE   @OZ30157*/
*     SUU BIT(8) CONSTANT('03'X),   /* SUU SWITCH VALUE      @OZ30157*/
*     HEX01 BIT(8) CONSTANT('01'X), /* CONSTANT VALUES       @OZ30157*/
*     HEX02 BIT(8) CONSTANT('02'X), /* FOR COMPARES          @OZ30157*/
*     HEX03 BIT(8) CONSTANT('03'X), /*                       @OZ30157*/
*     HEX04 BIT(8) CONSTANT('04'X); /*                       @OZ30157*/
*   RFY                                                            0764
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56PA14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56PA14                                        0765
*   RFY                                                            0766
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   VVIPTR=ICBVVICB;                /* POINT TO VVICB        @OZ30157*/
         L     @04,CVTPTR                                          0767
         L     @04,CVTEXT2(,@04)                                   0767
         L     @04,CVTICB(,@04)                                    0767
         MVC   VVIPTR(4),ICBVVICB(@04)                             0767
*   CPUPTR=F0;                      /* INSURE START AT 0     @OZ30157*/
         SLR   @04,@04                                             0768
         ST    @04,CPUPTR                                          0768
*   CPHPTR=F0;                      /* FOR LATER CHECK       @OZ30157*/
         ST    @04,CPHPTR                                          0769
*   CPHEND=F0;                      /* IN CASE OF ERROR      @OZ30157*/
         ST    @04,CPHEND                                          0770
*   IF(DSPON=BZERO)&(DSPOFF=BZERO) THEN/* IF BOTH TO SHOW    @OZ30157*/
         L     @04,@CA00041                                        0771
         L     @04,CWBPTR-CWBPTR(,@04)                             0771
         TM    DSPON(@04),B'01100000'                              0771
         BNZ   @RF00771                                            0771
*     DO;                           /* THEN SET BOTH FOR     @OZ30157*/
*       DSPON=BONE;                 /* PATHS DSPLY ONLY      @OZ30157*/
*       DSPOFF=BONE;                /* ON AND OFF            @OZ30157*/
         OI    DSPON(@04),B'01100000'                              0774
*     END;                          /*                       @OZ30157*/
*                                                                  0775
*   /*****************************************************************/
*   /*                                                               */
*   /* GET CONFIGURATION TABLE DATA, SECTS 0F, 7C-7F, AND            */
*   /* VERIFICATION TABLE                                    @OZ30157*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0776
*   QAPTR(1)=ADDR(QUBUF1);          /* SET FOR FIRST QUERY   @OZ30157*/
@RF00771 LA    @04,44                                              0776
         AL    @04,WORKPTR                                         0776
         ST    @04,QAPTR                                           0776
*   QBCNT=F4;                       /* COUNT TO 4            @OZ30157*/
         MVC   QBCNT(4),@CF00045                                   0777
*   QBENT(1)=QBCIX;                 /* 1ST IS CONF INDX      @OZ30157*/
         MVI   QBENT+12,C' '                                       0778
         MVC   QBENT+13(31),QBENT+12                               0778
         MVC   QBENT(12),QBCIX                                     0778
*   QBENT(2)=QBW0F;                 /* 2ND IS SECT 0F        @OZ30157*/
         MVI   QBENT+56,C' '                                       0779
         MVC   QBENT+57(31),QBENT+56                               0779
         MVC   QBENT+44(12),QBW0F                                  0779
*   QBENT(3)=QBW7C;                 /* 3RD IS SECTS 7C-7F    @OZ30157*/
         MVI   QBENT+100,C' '                                      0780
         MVC   QBENT+101(31),QBENT+100                             0780
         MVC   QBENT+88(12),QBW7C                                  0780
*   QBENT(4)=QBVER1;                /* 4TH IS VER REC 1      @OZ30157*/
         MVI   QBENT+144,C' '                                      0781
         MVC   QBENT+145(31),QBENT+144                             0781
         MVC   QBENT+132(12),QBVER1                                0781
*   CALL MSG56GQ;                   /* GO GET THE DATA       @OZ30157*/
         BAL   @14,MSG56GQ                                         0782
*   CONXPTR=QAPTR(1);               /* CONF INDEX PTR        @OZ30157*/
         MVC   CONXPTR(4),QAPTR                                    0783
*   PWCS0F=QAPTR(2);                /* WCS 0F PTR            @OZ30157*/
         MVC   PWCS0F(4),QAPTR+4                                   0784
*   PWCS7X=QAPTR(3);                /* PTR TO WCS 7C-7F      @OZ30157*/
         MVC   PWCS7X(4),QAPTR+8                                   0785
*   VERPTR=QAPTR(7);                /* PTR TO VER REC 1      @OZ30157*/
         MVC   VERPTR(4),QAPTR+24                                  0786
*   IF DSPCPU=BONE THEN             /* IF CPU PATH REQUEST   @OZ30157*/
         L     @04,@CA00041                                        0787
         L     @04,CWBPTR-CWBPTR(,@04)                             0787
         TM    DSPCPU(@04),B'00000010'                             0787
         BNO   @RF00787                                            0787
*     DO;                           /* DO CPU PATH DISPLAY   @OZ30157*/
*/*  *****************************************************************/
*/*                                                                  */
*/*   GET CPUID FOR LATER COMPARISON                         @OZ30157*/
*/*                                                                  */
*/*  *****************************************************************/
*                                                                  0789
*       GEN CODE REFS(CPXWK) SETS(CPXWK);                          0789
*                                    /* GET THIS HOST CPUID  @OZ30157*/
          STIDP CPXWK
*       CURCPUP=CPXCPU;             /* SAVE PACKED FORM      @OZ30157*/
         MVC   CURCPUP(5),CPXCPU                                   0790
*       UNPK(CPXIDC1,CPXIDP1);      /* UNPACK CPU SERIAL     @OZ30157*/
         UNPK  CPXIDC1(7),CPXIDP1(4)                               0791
*       UNPK(CPXMODC1,CPXMODP1);    /* AND MODEL NUMBER      @OZ30157*/
         UNPK  CPXMODC1(5),CPXMODP1(3)                             0792
*       TR(CURRCPU,TRANS);          /* AND TRANSLATE TO VALID@OZ30157*/
         TR    CURRCPU(10),TRANS                                   0793
*       IF RETC=F0 THEN             /* IF GOOD RETURN CODE   @OZ30157*/
         SLR   @04,@04                                             0794
         CH    @04,RETC                                            0794
         BNE   @RF00794                                            0794
*         DO;                       /* THEN CONTINUE         @OZ30157*/
*           IEND=F1;                /* AVOID ERR MSG         @OZ30157*/
         LA    @15,1                                               0796
         STH   @15,IEND                                            0796
*           I2=F1;                  /* BY SETTING INITIALLY  @OZ30157*/
         STH   @15,I2                                              0797
*           IF DSPQUAL=BONE THEN    /* IF QUALIFIED REQUEST  @OZ30157*/
         L     @15,@CA00041                                        0798
         L     @15,CWBPTR-CWBPTR(,@15)                             0798
         TM    DSPQUAL(@15),B'00100000'                            0798
         BNO   @RF00798                                            0798
*             DO;                   /* GO GET QUALIFIER      @OZ30157*/
*               QUALLEN(1)=F10;     /* LENGTH OF 10          @OZ30157*/
         MVC   QUALLEN(2),@CH00034                                 0800
*               QUALLEN(2)=F0;      /* ONE QUALIFIER ONLY    @OZ30157*/
         STH   @04,QUALLEN+2                                       0801
*               CALL MSG56QU;       /* GET QUALIFIER VALUE   @OZ30157*/
         BAL   @14,MSG56QU                                         0802
*               ENDSW=BZERO;        /*                       @OZ30157*/
         NI    ENDSW,B'11111011'                                   0803
*               IF RETC=F0&QUALLEN(1)=F10 THEN/* IF QUAL VALID     0804
*                                                            @OZ30157*/
         LH    @04,RETC                                            0804
         LTR   @04,@04                                             0804
         BNZ   @RF00804                                            0804
         CLC   QUALLEN(2),@CH00034                                 0804
         BNE   @RF00804                                            0804
*                 DO;               /*                       @OZ30157*/
*                   PACK(CMPCPUX,QUAL(1));/* PACK TO 5 BYTES @OZ30157*/
         PACK  CMPCPUX(6),QUAL(11)                                 0806
*                   DO I=F1 TO F16 WHILE(ENDSW^=BONE);/* FIND      0807
*                                                            @OZ30157*/
         LA    @04,1                                               0807
         STH   @04,I                                               0807
@DL00807 TM    ENDSW,B'00000100'                                   0807
         BO    @DC00807                                            0807
*                     IF CMPCPU=MIDCPUID(I) THEN/* COMP CPUID      0808
*                                                            @OZ30157*/
         LR    @15,@04                                             0808
         SLA   @15,3                                               0808
         L     @14,CONXPTR                                         0808
         ALR   @14,@15                                             0808
         CLC   CMPCPU(5),MIDCPUID-8(@14)                           0808
         BNE   @RF00808                                            0808
*                       DO;         /*                       @OZ30157*/
*                         I2=I;     /* SAY FOUND IT          @OZ30157*/
         STH   @04,I2                                              0810
*                         IEND=I;   /* SET LOOP INDICES      @OZ30157*/
         STH   @04,IEND                                            0811
*                         ENDSW=BONE;/* AND EXIT             @OZ30157*/
         OI    ENDSW,B'00000100'                                   0812
*                       END;        /*                       @OZ30157*/
*                   END;            /* END CPU SEARCH RTN    @OZ30157*/
@RF00808 LA    @04,1                                               0814
         AH    @04,I                                               0814
         STH   @04,I                                               0814
         CH    @04,@CH01227                                        0814
         BNH   @DL00807                                            0814
@DC00807 DS    0H                                                  0815
*                   IF ENDSW^=BONE THEN/* IF NOT FOUND,      @OZ30157*/
         TM    ENDSW,B'00000100'                                   0815
         BO    @RF00815                                            0815
*                     RETC=F1;      /* THEN IS ERROR         @OZ30157*/
         MVC   RETC(2),@CH00047                                    0816
*                 END;              /* END GOOD QUAL RTN     @OZ30157*/
*               ELSE                /* IF BAD QUAL           @OZ30157*/
*                 RETC=F1;          /* SAY SO                @OZ30157*/
         B     @RC00804                                            0818
@RF00804 MVC   RETC(2),@CH00047                                    0818
*             END;                  /* END QUALIFIER RTN     @OZ30157*/
*           ELSE                    /* IF NO QUALIFIER       @OZ30157*/
*             DO;                   /* ASSUME ALL            @OZ30157*/
         B     @RC00798                                            0820
@RF00798 DS    0H                                                  0821
*               I2=F1;              /* SET INDICES TO LOOP   @OZ30157*/
         MVC   I2(2),@CH00047                                      0821
*               IEND=F16;           /* THROUGH ALL ENTRIES   @OZ30157*/
         MVC   IEND(2),@CH01227                                    0822
*             END;                  /* END SETUP             @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* GET STORAGE FOR THE CPU TABLES - HEADER TABLE WITH 16 ENTRIES    */
*/* AND SPACE FOR 4 FULL SIZE DETAIL ENTRIES                 @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0824
*           IF RETC=F0 THEN         /* IF GOOD SO FAR,       @OZ30157*/
@RC00798 SLR   @04,@04                                             0824
         CH    @04,RETC                                            0824
         BNE   @RF00824                                            0824
*             DO;                   /* THEN GET SPACE        @OZ30157*/
*               CPUPTR=F0;          /* INSURE START AT 0     @OZ30157*/
         ST    @04,CPUPTR                                          0826
*               R1=ADDR(CPUPTR);    /* SET UP POINTER ADR    @OZ30157*/
         LA    R1,CPUPTR                                           0827
*               CALL MSG56F;        /* GO GET SPACE          @OZ30157*/
         BAL   @14,MSG56F                                          0828
*               IF RETC=F0 THEN     /* IF GOOD GETMAIN       @OZ30157*/
         LH    @04,RETC                                            0829
         LTR   @04,@04                                             0829
         BNZ   @RF00829                                            0829
*                 CPHPTR=CPUPTR;    /* INIT HEADER POINTER   @OZ30157*/
         MVC   CPHPTR(4),CPUPTR                                    0830
*             END;                  /* GOT SPACE             @OZ30157*/
@RF00829 DS    0H                                                  0832
*/********************************************************************/
*/*                                                                  */
*/* BUILD CPU HEADER TABLE FROM SECT 0F AND MID TBL          @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0832
*           UCBPTR=ICBPUCB;         /* PRIMARY UCB ADDRESS   @OZ30157*/
@RF00824 L     @04,@CA00927                                        0832
         L     @15,CVTPTR                                          0832
         L     @15,CVTEXT2(,@15)                                   0832
         L     @15,CVTICB(,@15)                                    0832
         MVC   UCBPTR-UCBPTR(4,@04),ICBPUCB(@15)                   0832
*           IF RETC=F0 THEN         /*                       @OZ30157*/
         LH    @04,RETC                                            0833
         LTR   @04,@04                                             0833
         BNZ   @RF00833                                            0833
*             DO I2=I2 TO IEND;     /* LOOP THRU ALL CPUS    @OZ30157*/
         LH    @04,I2                                              0834
         B     @DE00834                                            0834
@DL00834 DS    0H                                                  0835
*               IF MIDCFVAL(I2)=BONE THEN/* IF VALID ENTRY   @OZ30157*/
         L     @15,CONXPTR                                         0835
         LR    @14,@04                                             0835
         SLA   @14,3                                               0835
         ST    @14,@TF00001                                        0835
         ALR   @14,@15                                             0835
         TM    MIDCFVAL-8(@14),B'10000000'                         0835
         BNO   @RF00835                                            0835
*                 DO;               /* THEN USE IT           @OZ30157*/
*                   CPHENT=''B;     /* FIRST, CLEAR IT       @OZ30157*/
         L     @14,CPHPTR                                          0837
         XC    CPHENT(16,@14),CPHENT(@14)                          0837
*                   CPHID=MIDCPUID(I2);/* GET CPU ID         @OZ30157*/
         LR    @03,@15                                             0838
         AL    @03,@TF00001                                        0838
         MVC   CPHID(5,@14),MIDCPUID-8(@03)                        0838
*                   CPHPTI=I2-1;    /* AND CPU INDEX         @OZ30157*/
         BCTR  @04,0                                               0839
         STC   @04,CPHPTI(,@14)                                    0839
*                   CPHPTA=MIDCPAIR(I2);/* PAIRED CPU        @OZ30157*/
         L     @04,@TF00001                                        0840
         SLR   @00,@00                                             0840
         IC    @00,MIDCPAIR-8(@04,@15)                             0840
         STC   @00,CPHPTA(,@14)                                    0840
*                   CPHFLGS=HEX00;  /* FIRST FLAG BYTE       @OZ30157*/
         MVI   CPHFLGS(@14),X'00'                                  0841
*                   CPHSTAT=HEX00;  /* SECOND FLAG BYTE      @OZ30157*/
         MVI   CPHSTAT(@14),X'00'                                  0842
*                   CPHDET=F0;      /* NULL DETAIL POINTER   @OZ30157*/
         SLR   @04,@04                                             0843
         ST    @04,@TF00002                                        0843
         MVC   CPHDET(3,@14),@TF00002+1                            0843
*                   PCHAN=F0;       /* CLEAR WORK AREAS      @OZ30157*/
         SLR   @04,@04                                             0844
         ST    @04,PCHAN                                           0844
*                   PCNTL=F0;       /* FOR BIT COMPARE       @OZ30157*/
         ST    @04,PCNTL                                           0845
*                   PCHANCX=WC0FP&'0C'X;/* SET FIRST COMP FLD      0846
*                                                            @OZ30157*/
         L     @04,PWCS0F                                          0846
         MVC   PCHANCX(1),WC0FP(@04)                               0846
         NI    PCHANCX,X'0C'                                       0846
*                   PCHAN=PCHAN/4;  /* WITH BITS IN LOW ORD  @OZ30157*/
         L     @02,PCHAN                                           0847
         SRDA  @02,32                                              0847
         D     @02,@CF00045                                        0847
         ST    @03,PCHAN                                           0847
*                   CPHFLGS=MIDCFLG1(I2)&'03'X;/* 2ND COMP FLD     0848
*                                                            @OZ30157*/
         AL    @15,@TF00001                                        0848
         MVC   CPHFLGS(1,@14),MIDCFLG1-8(@15)                      0848
         NI    CPHFLGS(@14),X'03'                                  0848
*                   CPHINT=CPHFLGS+F1;/* SAVE INTERFACE      @OZ30157*/
         LA    @00,1                                               0849
         MVC   @ZT00003+3(1),CPHFLGS(@14)                          0849
         AL    @00,@ZT00003                                        0849
         STC   @00,CPHINT(,@14)                                    0849
*                   CPHINT=CPHINT×'C0'X;/* IN ALPHA          @OZ30157*/
         OI    CPHINT(@14),X'C0'                                   0850
*                   IF WC0FINA=BONE THEN/* SET PCNTLCX TO    @OZ30157*/
         TM    WC0FINA(@04),B'10000000'                            0851
         BNO   @RF00851                                            0851
*                     PCNTLCX=HEX00;/* VALUE INDICATING      @OZ30157*/
         MVI   PCNTLCX,X'00'                                       0852
*                   ELSE            /* THE PROPER            @OZ30157*/
*                     IF WC0FINB=BONE THEN/* INTERFACE PER THE     0853
*                                                            @OZ30157*/
         B     @RC00851                                            0853
@RF00851 L     @04,PWCS0F                                          0853
         TM    WC0FINB(@04),B'01000000'                            0853
         BNO   @RF00853                                            0853
*                       PCNTLCX=HEX01;/* ID TABLE VALUES     @OZ30157*/
         MVI   PCNTLCX,X'01'                                       0854
*                     ELSE          /* SO THAT A             @OZ30157*/
*                       IF WC0FINC=BONE THEN/* COMPARE CAN   @OZ30157*/
         B     @RC00853                                            0855
@RF00853 L     @04,PWCS0F                                          0855
         TM    WC0FINC(@04),B'00100000'                            0855
         BNO   @RF00855                                            0855
*                         PCNTLCX=HEX02;/* BE DONE           @OZ30157*/
         MVI   PCNTLCX,X'02'                                       0856
*                       ELSE        /*                       @OZ30157*/
*                         IF WC0FIND=BONE THEN/*             @OZ30157*/
         B     @RC00855                                            0857
@RF00855 L     @04,PWCS0F                                          0857
         TM    WC0FIND(@04),B'00010000'                            0857
         BNO   @RF00857                                            0857
*                           PCNTLCX=HEX03;/* VALUES SET      @OZ30157*/
         MVI   PCNTLCX,X'03'                                       0858
*                         ELSE      /* IF NONE OF ABOVE      @OZ30157*/
*                           PCNTLCX=HEX04;/* INSURE NO COMP  @OZ30157*/
         B     @RC00857                                            0859
@RF00857 MVI   PCNTLCX,X'04'                                       0859
*                   IF CPHFLGS=PCNTLCX THEN/* NOW SET INIT FLG     0860
*                                                            @OZ30157*/
@RC00857 DS    0H                                                  0860
@RC00855 DS    0H                                                  0860
@RC00853 DS    0H                                                  0860
@RC00851 L     @04,CPHPTR                                          0860
         CLC   CPHFLGS(1,@04),PCNTLCX                              0860
         BNE   @RF00860                                            0860
*                     CPHIN=BONE;   /* IF THIS INTF INIT'D   @OZ30157*/
         OI    CPHIN(@04),B'10000000'                              0861
*                   IF CPHFLGS=PCHANCX THEN/* IF THIS IS PRIM      0862
*                                                            @OZ30157*/
@RF00860 L     @04,CPHPTR                                          0862
         CLC   CPHFLGS(1,@04),PCHANCX                              0862
         BNE   @RF00862                                            0862
*                     CPHPRI=BONE;  /* SET PRI FLAG          @OZ30157*/
         OI    CPHPRI(@04),B'01000000'                             0863
*                   ELSE                                           0864
*                     CPHPRI=BZERO; /* 0 IF NOT              @OZ30157*/
         B     @RC00862                                            0864
@RF00862 L     @04,CPHPTR                                          0864
         NI    CPHPRI(@04),B'10111111'                             0864
*                   CPHVALID=BONE;  /* VALID                 @OZ30157*/
@RC00862 L     @04,CPHPTR                                          0865
         OI    CPHVALID(@04),B'10000000'                           0865
*                   IF MIDCFASC(I2)=BONE THEN/*              @OZ30157*/
         LH    @15,I2                                              0866
         SLA   @15,3                                               0866
         L     @14,CONXPTR                                         0866
         ALR   @14,@15                                             0866
         TM    MIDCFASC-8(@14),B'01000000'                         0866
         BNO   @RF00866                                            0866
*                     CPHFASC=BONE; /* ASSOCIATED            @OZ30157*/
         OI    CPHFASC(@04),B'01000000'                            0867
*                   IF MIDCFAI1(I2)=BONE THEN/*              @OZ30157*/
@RF00866 LH    @04,I2                                              0868
         SLA   @04,3                                               0868
         L     @15,CONXPTR                                         0868
         ALR   @15,@04                                             0868
         TM    MIDCFAI1-8(@15),B'00000100'                         0868
         BNO   @RF00868                                            0868
*                     CPHALTF1=BONE;/* ALT INTERFACE ID      @OZ30157*/
         L     @04,CPHPTR                                          0869
         OI    CPHALTF1(@04),B'00000010'                           0869
*                   IF MIDCFAI2(I2)=BONE THEN/*              @OZ30157*/
@RF00868 LH    @04,I2                                              0870
         SLA   @04,3                                               0870
         L     @15,CONXPTR                                         0870
         ALR   @15,@04                                             0870
         TM    MIDCFAI2-8(@15),B'00000010'                         0870
         BNO   @RF00870                                            0870
*                     CPHALTF2=BONE;/* ALT INTERFACE ID      @OZ30157*/
         L     @04,CPHPTR                                          0871
         OI    CPHALTF2(@04),B'00000001'                           0871
*                   IF MIDCFALT(I2)=BONE THEN/*              @OZ30157*/
@RF00870 LH    @04,I2                                              0872
         SLA   @04,3                                               0872
         L     @15,CONXPTR                                         0872
         ALR   @15,@04                                             0872
         TM    MIDCFALT-8(@15),B'00100000'                         0872
         BNO   @RF00872                                            0872
*                     CPHFALT=BONE; /* ALT PATH AVAIL        @OZ30157*/
         L     @04,CPHPTR                                          0873
         OI    CPHFALT(@04),B'00001000'                            0873
*                   IF MIDCFCBF(I2)=BONE THEN/*              @OZ30157*/
@RF00872 LH    @04,I2                                              0874
         SLA   @04,3                                               0874
         L     @15,CONXPTR                                         0874
         ALR   @15,@04                                             0874
         TM    MIDCFCBF-8(@15),B'00100000'                         0874
         BNO   @RF00874                                            0874
*                     CPHMBUF=BONE; /* COMM MSG BUFF         @OZ30157*/
         L     @04,CPHPTR                                          0875
         OI    CPHMBUF(@04),B'00000100'                            0875
*                   IF MIDCFPOT(I2)=BONE THEN/*              @OZ30157*/
@RF00874 LH    @04,I2                                              0876
         SLA   @04,3                                               0876
         L     @15,CONXPTR                                         0876
         ALR   @15,@04                                             0876
         TM    MIDCFPOT-8(@15),B'01000000'                         0876
         BNO   @RF00876                                            0876
*                     CPHFPOT=BONE; /* POTENTIAL PAIR        @OZ30157*/
         L     @04,CPHPTR                                          0877
         OI    CPHFPOT(@04),B'00010000'                            0877
*                   IF MIDCFASC(I2)=BONE THEN/* IF ASSOCIATED      0878
*                                                            @OZ30157*/
@RF00876 LH    @04,I2                                              0878
         SLA   @04,3                                               0878
         L     @15,CONXPTR                                         0878
         ALR   @15,@04                                             0878
         TM    MIDCFASC-8(@15),B'01000000'                         0878
         BNO   @RF00878                                            0878
*                     CPHASC=BONE;  /* SAY SO                @OZ30157*/
         L     @04,CPHPTR                                          0879
         OI    CPHASC(@04),B'00100000'                             0879
*                   ELSE                                           0880
*                     ;             /*                       @OZ30157*/
@RF00878 DS    0H                                                  0881
*                   CPHMSAD=UCBNAME;/* GET MSC ADDRESS       @OZ30157*/
         L     @04,CPHPTR                                          0881
         L     @15,@CA00927                                        0881
         L     @15,UCBPTR-UCBPTR(,@15)                             0881
         MVC   CPHMSAD(3,@04),UCBNAME(@15)                         0881
*                   IF UCBONLI=BZERO THEN/* IF OFFLINE       @OZ30157*/
         TM    UCBONLI(@15),B'10000000'                            0882
         BNZ   @RF00882                                            0882
*                     CPHMSOF=BONE; /* THEN SAY SO           @OZ30157*/
*                                                                  0883
         OI    CPHMSOF(@04),B'00000010'                            0883
*                   /*************************************************/
*                   /*                                               */
*                   /* GET UCB RDY STAT                      @OZ30157*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0884
*                   CPHEND=CPHPTR;  /* SAVE ADR LAST ENTRY   @OZ30157*/
@RF00882 L     @04,CPHPTR                                          0884
         ST    @04,CPHEND                                          0884
*                   CPHPTR=CPHPTR+CPHLEN;/* INCREMENT CPH PTR      0885
*                                                            @OZ30157*/
         AH    @04,@CH01227                                        0885
         ST    @04,CPHPTR                                          0885
*                 END;              /* END VALID CPU CODE    @OZ30157*/
*             END;                  /* END CPU LOOP MID TAB  @OZ30157*/
@RF00835 LA    @04,1                                               0887
         AH    @04,I2                                              0887
         STH   @04,I2                                              0887
@DE00834 CH    @04,IEND                                            0887
         BNH   @DL00834                                            0887
*/********************************************************************/
*/*                                                                  */
*/*             NOW BUILD DETAIL TABLE                               */
*/*  GET THE CPUID FOR THIS HOST SYSTEM. CAN ONLY GET                */
*/*  SOME INFO FOR THE CURRENT HOST SYSTEM.                  @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0888
*           LASTENT=CPUPTR+2047-CPDLEN;/* MAX ENTRY ADDR     @OZ30157*/
@RF00833 L     @04,CPUPTR                                          0888
         LA    @00,2047                                            0888
         ALR   @00,@04                                             0888
         SH    @00,CPDLEN                                          0888
         ST    @00,LASTENT                                         0888
*           CPHPTR=CPUPTR;          /* IN FIRST CPH ENTRY,   @OZ30157*/
         ST    @04,CPHPTR                                          0889
*           CPDPTR=CPHEND+CPHLEN;   /* SET DETAIL POINTER    @OZ30157*/
         LA    @00,16                                              0890
         AL    @00,CPHEND                                          0890
         ST    @00,CPDPTR                                          0890
*           DO CPHPTR=CPUPTR TO CPHEND BY CPHLEN;/* CPU LOOP @OZ30157*/
         ST    @04,CPHPTR                                          0891
         B     @DE00891                                            0891
@DL00891 DS    0H                                                  0892
*             CPHDET=CPDPTR;        /* POINT TO DETAIL ENT.  @OZ30157*/
         L     @00,CPDPTR                                          0892
         ST    @00,@TF00001                                        0892
         MVC   CPHDET(3,@04),@TF00001+1                            0892
*             IF CPHDET>LASTENT THEN/* NEED SPACE?           @OZ30157*/
         C     @00,LASTENT                                         0893
         BNH   @RF00893                                            0893
*               DO;                 /* THEN GET IT           @OZ30157*/
*                 R1=ADDR(CPHDET)-1;/* SET UP FOR GETMAIN    @OZ30157*/
         LA    R1,CPHDET(,@04)                                     0895
         BCTR  R1,0                                                0895
*                 CALL MSG56F;      /*                       @OZ30157*/
         BAL   @14,MSG56F                                          0896
*                 IF RETC=F0 THEN   /* CHECK FOR GOOD GETM   @OZ30157*/
         LH    @04,RETC                                            0897
         LTR   @04,@04                                             0897
         BNZ   @RF00897                                            0897
*                   DO;             /* IF GOOD,              @OZ30157*/
*                     CPDPTR=CPHDET;/* GET NEW ENTRY ADDR    @OZ30157*/
         L     @04,CPHPTR                                          0899
         L     @04,CPHDET-1(,@04)                                  0899
         LA    @04,0(,@04)                                         0899
         ST    @04,CPDPTR                                          0899
*                     LASTENT=CPDPTR+2047-CPDLEN;/* END POINT      0900
*                                                            @OZ30157*/
         AH    @04,@CH03110                                        0900
         SH    @04,CPDLEN                                          0900
         ST    @04,LASTENT                                         0900
*                   END;            /*                       @OZ30157*/
*               END;                /*                       @OZ30157*/
@RF00897 DS    0H                                                  0903
*             IF RETC=F0 THEN       /* IF GETMAIN GOOD OR NOT@OZ30157*/
@RF00893 LH    @04,RETC                                            0903
         SLR   @15,@15                                             0903
         CR    @04,@15                                             0903
         BNE   @RF00903                                            0903
*               DO;                 /* ISSUED                @OZ30157*/
*                 ENDSW=BZERO;      /* SET UP FOR LOOP CNTL  @OZ30157*/
*                                                                  0905
         NI    ENDSW,B'11111011'                                   0905
*                 /***************************************************/
*                 /*                                                 */
*                 /* LOOP THROUGH ALL SAS, 3 INTERFACES EACH ONE AND */
*                 /* BUILD A DETAIL ENTRY FOR EACH INTERFACE         */
*                 /* CONNECTED TO THE CPU IN THE CURRENT HEADER TABLE*/
*                 /* ENTRY.                                  @OZ30157*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0906
*                 IF RETC=F0 THEN   /* IF ENOUGH SPACE, THEN @OZ30157*/
         CR    @04,@15                                             0906
         BNE   @RF00906                                            0906
*                   DO J=1 TO 16;   /* SA LOOP               @OZ30157*/
         LA    @04,1                                               0907
         STH   @04,J                                               0907
@DL00907 DS    0H                                                  0908
*                     TABPTR1=ADDR(CONFXTAB(J));/* SET ENTRY POINTER
*                                                            @OZ30157*/
         SLA   @04,3                                               0908
         L     @15,CONXPTR                                         0908
         AL    @15,@CF03654                                        0908
         LA    @04,CONFXTAB(@04,@15)                               0908
         ST    @04,TABPTR1                                         0908
*                     IF CXCSCCS=BZERO THEN/*                @OZ30157*/
         TM    CXCSCCS(@04),B'10000000'                            0909
         BNZ   @RF00909                                            0909
*                       IF CXCSCS0=BONE×CXCSCS1=BONE THEN/*  @OZ30157*/
         TM    CXCSCS0(@04),B'00001100'                            0910
         BZ    @RF00910                                            0910
*                         DO;       /* GOT VALID ENTRY       @OZ30157*/
*                           DO K=1 TO 3;/*                   @OZ30157*/
         LA    @04,1                                               0912
         STH   @04,K                                               0912
@DL00912 DS    0H                                                  0913
*                             PCNTL=F0;/* CLEAR CONTROL UNIT AD    0913
*                                                            @OZ30157*/
         SLR   @00,@00                                             0913
         ST    @00,PCNTL                                           0913
*                             PCNTLCX=CXSACUCH(K)&'C0'X;/* CNTL UNIT
*                                                            @OZ30157*/
         L     @15,TABPTR1                                         0914
         ALR   @04,@04                                             0914
         ST    @04,@TF00001                                        0914
         ALR   @04,@15                                             0914
         MVC   PCNTLCX(1),CXSACUCH-2(@04)                          0914
         NI    PCNTLCX,X'C0'                                       0914
*                             PCNTL=PCNTL/F64;/* PUT INTO LOW ORD. 0915
*                                      BITS@OZ30157                  */
*                                                                  0915
         L     @02,PCNTL                                           0915
         SRDA  @02,32                                              0915
         D     @02,@CF01346                                        0915
         ST    @03,PCNTL                                           0915
*                             /***************************************/
*                             /*                                     */
*                             /* DO FOLLOWING ONLY FOR CPU IN CURRENT*/
*                             /* HEADER ENTRY                @OZ30157*/
*                             /*                                     */
*                             /***************************************/
*                                                                  0916
*                             IF CXSACPU(K)=CPHPTI THEN/* IF THIS CPU
*                                                            @OZ30157*/
         L     @04,@TF00001                                        0916
         SLR   @00,@00                                             0916
         IC    @00,CXSACPU-2(@04,@15)                              0916
         L     @04,CPHPTR                                          0916
         MVC   @ZT00003+3(1),CPHPTI(@04)                           0916
         C     @00,@ZT00003                                        0916
         BNE   @RF00916                                            0916
*                               DO; /* THEN PUT IN VALUES    @OZ30157*/
*                                 CPDET=''B;/* FIRST, CLEAR IT     0918
*                                                            @OZ30157*/
         L     @04,CPDPTR                                          0918
         XC    CPDET(28,@04),CPDET(@04)                            0918
*                                 K1=((J-1)//4)+1;/* SA WITHIN GROUP
*                                                            @OZ30157*/
         LH    @15,J                                               0919
         LR    @02,@15                                             0919
         BCTR  @02,0                                               0919
         SRDA  @02,32                                              0919
         D     @02,@CF00045                                        0919
         AL    @02,@CF00047                                        0919
         STH   @02,K1                                              0919
*                                 PWCS7X=QAPTR((J/4+3));/* SET SECTOR
*                                      PTR                   @OZ30157*/
         LR    @02,@15                                             0920
         SRDA  @02,32                                              0920
         D     @02,@CF00045                                        0920
         SLA   @03,2                                               0920
         L     @00,QAPTR+8(@03)                                    0920
         ST    @00,PWCS7X                                          0920
*                                 IF SAFVAL(K1)=BONE THEN/* IF SA IS
*                                      VALID                 @OZ30157*/
         LH    @15,K1                                              0921
         SLA   @15,2                                               0921
         LR    @14,@00                                             0921
         ALR   @14,@15                                             0921
         TM    SAFVAL-4(@14),B'10000000'                           0921
         BNO   @RF00921                                            0921
*                                   DO;/* THEN SET OFL, RDY        0922
*                                      BITS@OZ30157                  */
*                                    IF SAFONL(K1)=BZERO THEN/* IS 0923
*                                      OFFLINE               @OZ30157*/
         LR    @14,@00                                             0923
         ALR   @14,@15                                             0923
         TM    SAFONL-4(@14),B'01000000'                           0923
         BNZ   @RF00923                                            0923
*                                     CPDSAOF=BONE;/* SAY IS OFFLINE
*                                                            @OZ30157*/
         OI    CPDSAOF(@04),B'10000000'                            0924
*                                    IF SAFRDY(K1)=BONE THEN/* IF  0925
*                                      READY                 @OZ30157*/
@RF00923 LH    @04,K1                                              0925
         SLA   @04,2                                               0925
         L     @15,PWCS7X                                          0925
         ALR   @15,@04                                             0925
         TM    SAFRDY-4(@15),B'00100000'                           0925
         BNO   @RF00925                                            0925
*                                     CPDSARDY=BONE;/* SAY SO,     0926
*                                                            @OZ30157*/
         L     @04,CPDPTR                                          0926
         OI    CPDSARDY(@04),B'01000000'                           0926
*                                    ELSE                          0927
*                                     CPDSAVAL=BONE;/* SUU MUST PRINT
*                                                            @OZ30157*/
         B     @RC00925                                            0927
@RF00925 L     @04,CPDPTR                                          0927
         OI    CPDSAVAL(@04),B'00100000'                           0927
*                                   END;/* SA FLAGS SET      @OZ30157*/
@RC00925 DS    0H                                                  0929
*                                 IF(SAFONL(K1)=BONE)&(DSPON=BONE) THEN
@RF00921 LH    @04,K1                                              0929
         SLA   @04,2                                               0929
         L     @15,PWCS7X                                          0929
         ALR   @15,@04                                             0929
         TM    SAFONL-4(@15),B'01000000'                           0929
         BNO   @RF00929                                            0929
         L     @04,@CA00041                                        0929
         L     @04,CWBPTR-CWBPTR(,@04)                             0929
         TM    DSPON(@04),B'01000000'                              0929
         BNO   @RF00929                                            0929
*                                   /* OZ30157                       */
*                                   CPDSAVAL=BONE;/* VALID PER     0930
*                                      REQUEST               @OZ30157*/
         L     @04,CPDPTR                                          0930
         OI    CPDSAVAL(@04),B'00100000'                           0930
*                                 IF(SAFONL(K1)=BZERO)&(DSPOFF=BONE)
*                                   THEN/* OZ30157                   */
@RF00929 LH    @04,K1                                              0931
         SLA   @04,2                                               0931
         L     @15,PWCS7X                                          0931
         ALR   @15,@04                                             0931
         TM    SAFONL-4(@15),B'01000000'                           0931
         BNZ   @RF00931                                            0931
         L     @04,@CA00041                                        0931
         L     @04,CWBPTR-CWBPTR(,@04)                             0931
         TM    DSPOFF(@04),B'00100000'                             0931
         BNO   @RF00931                                            0931
*                                   CPDSAVAL=BONE;/* ALSO VALID    0932
*                                                            @OZ30157*/
         L     @04,CPDPTR                                          0932
         OI    CPDSAVAL(@04),B'00100000'                           0932
*                                 IF ENDSW=BONE THEN/* CHAIN IF NOT
*                                      FIRST                 @OZ30157*/
@RF00931 TM    ENDSW,B'00000100'                                   0933
         BNO   @RF00933                                            0933
*                                   CHNADR=CPDPTR;/* TO PREV ENTRY 0934
*                                                            @OZ30157*/
         L     @04,LVUPTR                                          0934
         MVC   CHNADR(3,@04),CPDPTR+1                              0934
*                                 CPDSAAD='800';/* INIT SA SSID    0935
*                                                            @OZ30157*/
@RF00933 L     @04,CPDPTR                                          0935
         MVC   CPDSAAD(3,@04),@CC01468                             0935
*                                 CPDSAAD(2:2)=NUMBRS(J:J);/*      0936
*                                                            @OZ30157*/
         LH    @15,J                                               0936
         LA    @14,NUMBRS-1(@15)                                   0936
         MVC   CPDSAAD+1(1,@04),0(@14)                             0936
*                                 CPDINT=INTFC(K:K);/* SA INTERFACE
*                                      ID                    @OZ30157*/
         LH    @14,K                                               0937
         LA    @03,INTFC-1(@14)                                    0937
         MVC   CPDINT(1,@04),0(@03)                                0937
*                                 CVD(VESDG1(J),PUNITCY);/* CNVT FOR
*                                      DSP                   @OZ30157*/
         L     @03,VERPTR                                          0938
         SLA   @15,2                                               0938
         LA    @02,0(@15,@03)                                      0938
         AL    @02,@CF03609                                        0938
         SLR   @00,@00                                             0938
         IC    @00,VESDG1(,@02)                                    0938
         CVD   @00,@TS00001                                        0938
         MVC   PUNITCY(2),@TS00001+6                               0938
*                                 UNPK(CPDSDG1,PUNITCY);/* UNPACK SDG
*                                      1                     @OZ30157*/
         UNPK  CPDSDG1(2,@04),PUNITCY(2)                           0939
*                                 CPDSDG12=CPDSDG12×'0';/* CLEAR SIGN
*                                                            @OZ30157*/
         OI    CPDSDG12(@04),C'0'                                  0940
*                                 CVD(VESDG2(J),PUNITCY);/* SAME FOR
*                                      SDG 2                 @OZ30157*/
         AL    @03,@CF03655                                        0941
         SLR   @00,@00                                             0941
         IC    @00,VESDG2-1(@15,@03)                               0941
         CVD   @00,@TS00001                                        0941
         MVC   PUNITCY(2),@TS00001+6                               0941
*                                 UNPK(CPDSDG2,PUNITCY);/* UNPACK AND
*                                                            @OZ30157*/
         UNPK  CPDSDG2(2,@04),PUNITCY(2)                           0942
*                                 CPDSDG22=CPDSDG22×'0';/* CLEAR SIGN
*                                                            @OZ30157*/
         OI    CPDSDG22(@04),C'0'                                  0943
*                                 PCHAN=F0;/* CLEAR CHANNEL  @OZ30157*/
         SLR   @00,@00                                             0944
         ST    @00,PCHAN                                           0944
*                                 PCHANCX=CXSACUCH(K)&'0F'X;/* CHAN
*                                      ADR                   @OZ30157*/
         ALR   @14,@14                                             0945
         L     @15,TABPTR1                                         0945
         ALR   @15,@14                                             0945
         MVC   PCHANCX(1),CXSACUCH-2(@15)                          0945
         NI    PCHANCX,X'0F'                                       0945
*                                 CPDCH=PCHANCX×'F0'X;/* SAVE IT FOR
*                                      DSPLY                 @OZ30157*/
         MVC   CPDCH(1,@04),PCHANCX                                0946
         OI    CPDCH(@04),X'F0'                                    0946
*                                 CURSTAT=HEX00;/* CLEAR NEW STATUS
*                                                            @OZ30157*/
         MVI   CURSTAT,X'00'                                       0947
*/*  IF THE ENTRY IS FOR THIS HOST, THEN VUA NUMBERS AND STATUSES    */
*/*  CAN BE BUILT INTO VUA TABLE ENTRIES.                    @OZ30157*/
*                                                                  0948
*                                 IF CPHID=CURCPUP THEN/* IF SAME ID,
*                                      THEN                  @OZ30157*/
         L     @15,CPHPTR                                          0948
         CLC   CPHID(5,@15),CURCPUP                                0948
         BNE   @RF00948                                            0948
*                                   DO;/* IS THIS HOST CPU   @OZ30157*/
*                                    ENDSW=BONE;/* SAY END LOOP    0950
*                                                            @OZ30157*/
         OI    ENDSW,B'00000100'                                   0950
*                                    VUAPTR=CPDPTR+CPDLEN;/* INDEXING
*                                                            @OZ30157*/
         AH    @04,CPDLEN                                          0951
         ST    @04,VUAPTR                                          0951
*                                    ENDPTR=VUAPTR;/* INDEXING END 0952
*                                                            @OZ30157*/
         ST    @04,ENDPTR                                          0952
*/********************************************************************/
*/*                                                                  */
*/* LOOP THROUGH ALL POSSIBLE VUAS THIS SA FOR STATUSES      @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0953
*                                    CURSTAT=HEX00;/* SET INITIALLY
*                                      TO 0                  @OZ30157*/
         MVI   CURSTAT,X'00'                                       0953
*                                    ONLPTR=F0;/* INITIALIZE CHAIN 0954
*                                                            @OZ30157*/
         SLR   @04,@04                                             0954
         ST    @04,@TF00001                                        0954
         MVC   ONLPTR(3),@TF00001+1                                0954
*                                    OFFPTR=F0;/* REFERENCE POINTERS
*                                                            @OZ30157*/
         SLR   @04,@04                                             0955
         ST    @04,@TF00001                                        0955
         MVC   OFFPTR(3),@TF00001+1                                0955
*                                    SUUPTR=F0;/* TO ZERO    @OZ30157*/
         SLR   @04,@04                                             0956
         ST    @04,@TF00001                                        0956
         MVC   SUUPTR(3),@TF00001+1                                0956
*                                    DO K2=1 TO 64;/* LOOP ALL VUAS
*                                                            @OZ30157*/
         LA    @04,1                                               0957
         STH   @04,K2                                              0957
@DL00957 DS    0H                                                  0958
*                                     PUNIT=K2;/* GET UNIT ADDRESS 0958
*                                                            @OZ30157*/
         ST    @04,PUNIT                                           0958
*                                     UCBPTR=VUCBAD(K2);/* ADDRESS OF
*                                      UCB                   @OZ30157*/
         L     @15,@CA00927                                        0959
         SLA   @04,2                                               0959
         L     @14,VVIPTR                                          0959
         L     @14,VVIUCB(,@14)                                    0959
         AL    @14,@CF03609                                        0959
         L     @04,VUCBAD(@04,@14)                                 0959
         ST    @04,UCBPTR-UCBPTR(,@15)                             0959
*/********************************************************************/
*/*                                                                  */
*/* SAVE PREVIOUS STATUS, SET CURRENT TO THAT OF CURRENT VUA.        */
*/* THEN CAN CHAIN TO CORRECT CHAIN                          @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0960
*                                     PRVSTAT=CURSTAT;/* SAVE LAST 0960
*                                      STATUS                @OZ30157*/
         MVC   PRVSTAT(1),CURSTAT                                  0960
*                                     CURSTAT=HEX00;/* CLEAR NEW   0961
*                                      STATUS                @OZ30157*/
         MVI   CURSTAT,X'00'                                       0961
*                                     IF UCBONLI=BZERO THEN/* IF OFFL
*                                                            @OZ30157*/
         TM    UCBONLI(@04),B'10000000'                            0962
         BNZ   @RF00962                                            0962
*                                      CURSTAT=OFFLN;/* SAY IT IS  0963
*                                                            @OZ30157*/
         MVI   CURSTAT,X'02'                                       0963
*                                     ELSE/* IF NOT, IS IT SUU     0964
*                                                            @OZ30157*/
*                                      IF UCBNOTRD=BONE THEN/* YES,
*                                                            @OZ30157*/
         B     @RC00962                                            0964
@RF00962 L     @04,@CA00927                                        0964
         L     @04,UCBPTR-UCBPTR(,@04)                             0964
         TM    UCBNOTRD(@04),B'01000000'                           0964
         BNO   @RF00964                                            0964
*                                       CURSTAT=SUU;/* SAY THAT, ELSE
*                                                            @OZ30157*/
         MVI   CURSTAT,X'03'                                       0965
*                                      ELSE/* SAY IT IS      @OZ30157*/
*                                       CURSTAT=ONLN;/* ONLINE     0966
*                                                            @OZ30157*/
         B     @RC00964                                            0966
@RF00964 MVI   CURSTAT,X'01'                                       0966
*/********************************************************************/
*/*                                                                  */
*/* SET CHAIN REFERENCE TO CHAIN THIS TO NEXT PREVIOUS ONE IN CHAIN  */
*/*                                                          @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0967
*                                     IF CURSTAT^=PRVSTAT THEN/* NOT
*                                      SAME                  @OZ30157*/
@RC00964 DS    0H                                                  0967
@RC00962 CLC   CURSTAT(1),PRVSTAT                                  0967
         BE    @RF00967                                            0967
*                                      DO;/* AS PREVIOUS, SET NEW  0968
*                                      CHAIN                 @OZ30157*/
*                                       IF PRVSTAT^=F0 THEN/* IF ANY
*                                      PREV                  @OZ30157*/
         CLI   PRVSTAT,0                                           0969
         BE    @RF00969                                            0969
*                                        CURPTR(PRVSTAT)=TABPTR;/* SV
*                                      OLD                   @OZ30157*/
         SLR   @04,@04                                             0970
         IC    @04,PRVSTAT                                         0970
         SLA   @04,2                                               0970
         L     @00,TABPTR                                          0970
         ST    @00,@TF00001                                        0970
         LA    @15,CURPTR-4(@04)                                   0970
         MVC   0(3,@15),@TF00001+1                                 0970
*                                       VUAPTR=CURPTR(CURSTAT);/* GET
*                                      NEW                   @OZ30157*/
*                                                                  0971
@RF00969 SLR   @04,@04                                             0971
         IC    @04,CURSTAT                                         0971
         SLA   @04,2                                               0971
         L     @04,CURPTR-5(@04)                                   0971
         LA    @04,0(,@04)                                         0971
         ST    @04,VUAPTR                                          0971
*                                       /*****************************/
*                                       /*                           */
*                                       /* IF THIS IS THE FIRST VUA  */
*                                       /* WITH THIS STATUS, MUST    */
*                                       /* BUILD A NEW VUA CHAIN.    */
*                                       /*                   @OZ30157*/
*                                       /*                           */
*                                       /*****************************/
*                                                                  0972
*                                       IF VUAPTR=F0 THEN/* ANY CURR
*                                      CHN                   @OZ30157*/
         LTR   @04,@04                                             0972
         BNZ   @RF00972                                            0972
*                                        DO;/* NO SET CHAIN  @OZ30157*/
*                                         IF CPDVUA=BZERO THEN/* IF
*                                      FIRST                 @OZ30157*/
         L     @04,CPDPTR                                          0974
         TM    CPDVUA(@04),B'00000001'                             0974
         BNZ   @RF00974                                            0974
*                                          DO;/* THEN SET FOR IT   0975
*                                                            @OZ30157*/
*                                           VUAPTR=CPDPTR+CPDLEN;/*
*                                                            @OZ30157*/
         LH    @00,CPDLEN                                          0976
         ALR   @00,@04                                             0976
         ST    @00,VUAPTR                                          0976
*                                           CPDVUA=BONE;/* ONCE ONLY
*                                                            @OZ30157*/
         OI    CPDVUA(@04),B'00000001'                             0977
*                                          END;/* IF NOT FIRST, THEN
*                                                            @OZ30157*/
*                                         ELSE/* SET FOR NEXT VUA  0979
*                                                            @OZ30157*/
*                                          VUAPTR=TABPTR+VUALEN;/* 0979
*                                                            @OZ30157*/
         B     @RC00974                                            0979
@RF00974 LA    @04,388                                             0979
         AL    @04,TABPTR                                          0979
         ST    @04,VUAPTR                                          0979
*                                         LVUPTR=ADDR(CHNPTR(CURSTAT));
@RC00974 SLR   @04,@04                                             0980
         IC    @04,CURSTAT                                         0980
         SLA   @04,2                                               0980
         L     @15,CPDPTR                                          0980
         LA    @04,CHNPTR-4(@04,@15)                               0980
         ST    @04,LVUPTR                                          0980
*                                         /*                 @OZ30157*/
*                                         NEWVUA=BONE;/* GET NEW VUA
*                                                            @OZ30157*/
         OI    NEWVUA,B'00000010'                                  0981
*                                        END;/* END SET NEW CHAIN  0982
*                                                            @OZ30157*/
*                                                                  0982
*                                       /*****************************/
*                                       /*                           */
*                                       /* IF NOT FIRST, USE CURRENT */
*                                       /* ENTRY IN CURRENT CHAIN.   */
*                                       /*                   @OZ30157*/
*                                       /*                           */
*                                       /*****************************/
*                                                                  0983
*                                       ELSE/* ELSE USE CURR CHAIN 0983
*                                                            @OZ30157*/
*                                        DO;/* SET UP LINKS  @OZ30157*/
         B     @RC00972                                            0983
@RF00972 DS    0H                                                  0984
*                                         NEWVUA=BZERO;/* NXT WILL BE
*                                      NEW                   @OZ30157*/
         NI    NEWVUA,B'11111101'                                  0984
*                                         TABPTR=VUAPTR;/*   @OZ30157*/
         L     @04,VUAPTR                                          0985
         ST    @04,TABPTR                                          0985
*                                         LVUPTR=ADDR(VUACHN);/* CUR
*                                      CHAIN                 @OZ30157*/
         LA    @00,VUACHN(,@04)                                    0986
         ST    @00,LVUPTR                                          0986
*                                         USEADB(CURSTAT)=BZERO;/* 0987
*                                      VUAA                  @OZ30157*/
*                                                                  0987
         SLR   @15,@15                                             0987
         IC    @15,CURSTAT                                         0987
         SLA   @15,2                                               0987
         LA    @14,USEADB-4(@15)                                   0987
         NI    0(@14),B'01111111'                                  0987
*                                         /***************************/
*                                         /*                         */
*                                         /* IF THE CURRENT ENTRY IS */
*                                         /* FULL, MUST BUILD A NEW  */
*                                         /* ONE             @OZ30157*/
*                                         /*                         */
*                                         /***************************/
*                                                                  0988
*                                         IF VUACNT>63 THEN/*      0988
*                                                            @OZ30157*/
         CLI   VUACNT(@04),63                                      0988
         BNH   @RF00988                                            0988
*                                          DO;/* SET UP NEW VUA ENTRY
*                                                            @OZ30157*/
*                                           NEWVUA=BONE;/*   @OZ30157*/
         OI    NEWVUA,B'00000010'                                  0990
*                                           VUAPTR=VUALEN+TABPTR;/*
*                                                            @OZ30157*/
         AH    @04,@CH03055                                        0991
         ST    @04,VUAPTR                                          0991
*                                          END;/* END SETUP NEW    0992
*                                                            @OZ30157*/
*                                        END;/* END NOT 0 VUAPTR   0993
*                                                            @OZ30157*/
*                                      END;/* END NOT SAME STATUS  0994
*                                                            @OZ30157*/
*                                                                  0994
*                                     /*******************************/
*                                     /*                             */
*                                     /* IF THIS VUA HAS SAME STATUS */
*                                     /* AS PREVIOUS, IF THE CURRENT */
*                                     /* ENTRY IS FULL, MUST ADD A   */
*                                     /* NEW ENTRY TO THE CHAIN.     */
*                                     /*                     @OZ30157*/
*                                     /*                             */
*                                     /*******************************/
*                                                                  0995
*                                     ELSE/* ELSE SAME STATUS      0995
*                                                            @OZ30157*/
*                                      IF VUACNT>63 THEN/* IF OLD  0995
*                                      FULL                  @OZ30157*/
         B     @RC00967                                            0995
@RF00967 L     @04,TABPTR                                          0995
         CLI   VUACNT(@04),63                                      0995
         BNH   @RF00995                                            0995
*                                       DO;/* SET UP NEW     @OZ30157*/
*                                        NEWVUA=BONE;/*      @OZ30157*/
         OI    NEWVUA,B'00000010'                                  0997
*                                        VUAPTR=VUALEN+TABPTR;/*   0998
*                                                            @OZ30157*/
         AH    @04,@CH03055                                        0998
         ST    @04,VUAPTR                                          0998
*                                       END;/* END SETUP NEW @OZ30157*/
*                                                                  0999
*                                     /*******************************/
*                                     /*                             */
*                                     /* IF THE ENTRY IS NOT FULL,   */
*                                     /* CAN USE IT          @OZ30157*/
*                                     /*                             */
*                                     /*******************************/
*                                                                  1000
*                                      ELSE/* ELSE USE OLD   @OZ30157*/
*                                       DO;/* VUA ENTRY AND PUT    1000
*                                                            @OZ30157*/
         B     @RC00995                                            1000
@RF00995 DS    0H                                                  1001
*                                        NEWVUA=BZERO;/* INTO THE  1001
*                                                            @OZ30157*/
         NI    NEWVUA,B'11111101'                                  1001
*                                        VUAPTR=CURPTR(CURSTAT);/* 1002
*                                                            @OZ30157*/
         SLR   @04,@04                                             1002
         IC    @04,CURSTAT                                         1002
         SLA   @04,2                                               1002
         L     @00,CURPTR-5(@04)                                   1002
         N     @00,@CF03658                                        1002
         ST    @00,VUAPTR                                          1002
*                                        USEADB(CURSTAT)=BONE;/*   1003
*                                      FIELD                 @OZ30157*/
         LA    @15,USEADB-4(@04)                                   1003
         OI    0(@15),B'10000000'                                  1003
*                                       END;/* END USE OLD   @OZ30157*/
*                                     TABPTR=VUAPTR;/*       @OZ30157*/
*                                                                  1005
@RC00995 DS    0H                                                  1005
@RC00967 L     @04,VUAPTR                                          1005
         ST    @04,TABPTR                                          1005
*                                     /*******************************/
*                                     /*                             */
*                                     /* BUILD A NEW VUA ENTRY       */
*                                     /*                     @OZ30157*/
*                                     /*                             */
*                                     /*******************************/
*                                                                  1006
*                                     IF NEWVUA=BONE THEN/* IF NEW 1006
*                                      ONE                   @OZ30157*/
         TM    NEWVUA,B'00000010'                                  1006
         BNO   @RF01006                                            1006
*                                      DO;/* INITIALIZE      @OZ30157*/
*/*   IF NOT ENOUGH SPACE IN CURRENT BLOCK, MUST GET MORE    @OZ30157*/
*                                                                  1008
*                                       IF VUAPTR>(LASTENT-388+CPDLEN)
*                                        THEN/*              @OZ30157*/
         L     @00,LASTENT                                         1008
         SH    @00,@CH03055                                        1008
         AH    @00,CPDLEN                                          1008
         CR    @04,@00                                             1008
         BNH   @RF01008                                            1008
*                                        DO;/* THEN GET IT   @OZ30157*/
*                                         R1=LVUPTR;/* SET UP GETMAIN
*                                                            @OZ30157*/
         L     R1,LVUPTR                                           1010
*                                         CALL MSG56F;/*     @OZ30157*/
         BAL   @14,MSG56F                                          1011
*                                         IF RETC=F0 THEN/* GOOD GETM
*                                                            @OZ30157*/
         LH    @04,RETC                                            1012
         LTR   @04,@04                                             1012
         BNZ   @RF01012                                            1012
*                                          DO;/* IF GOOD,    @OZ30157*/
*                                           VUAPTR=CHNADR;/* @OZ30157*/
         L     @04,LVUPTR                                          1014
         L     @04,CHNADR-1(,@04)                                  1014
         LA    @04,0(,@04)                                         1014
         ST    @04,VUAPTR                                          1014
*                                           LASTENT=VUAPTR+2047;/* 1015
*                                                            @OZ30157*/
         AH    @04,@CH03110                                        1015
         ST    @04,LASTENT                                         1015
*                                          END;/*            @OZ30157*/
*                                        END;/*              @OZ30157*/
@RF01012 DS    0H                                                  1018
*                                       IF RETC=F0 THEN/* IF SPACE 1018
*                                      GOOD                  @OZ30157*/
@RF01008 LH    @04,RETC                                            1018
         LTR   @04,@04                                             1018
         BNZ   @RF01018                                            1018
*                                        DO;/* OR NOT REQUIRED,    1019
*                                                            @OZ30157*/
*                                         CHNADR=VUAPTR;/* SET UP  1020
*                                      CHAIN                 @OZ30157*/
         L     @04,VUAPTR                                          1020
         ST    @04,@TF00001                                        1020
         L     @15,LVUPTR                                          1020
         MVC   CHNADR(3,@15),@TF00001+1                            1020
*                                         ENDPTR=VUAPTR;/* SAVE HIGH
*                                      ADDR                  @OZ30157*/
         ST    @04,ENDPTR                                          1021
*                                         VUACNT=F1;/* BUILD NEW   1022
*                                      ENTRY                 @OZ30157*/
         L     @15,TABPTR                                          1022
         MVI   VUACNT(@15),X'01'                                   1022
*                                         VUACHN=F0;/* CLEAR NEW   1023
*                                      CHAIN                 @OZ30157*/
         SLR   @00,@00                                             1023
         ST    @00,@TF00001                                        1023
         MVC   VUACHN(3,@15),@TF00001+1                            1023
*                                         VUAA(1)=UCBNAME;/* FST VUA
*                                      NME                   @OZ30157*/
         L     @14,@CA00927                                        1024
         L     @14,UCBPTR-UCBPTR(,@14)                             1024
         MVC   VUAA(3,@15),UCBNAME(@14)                            1024
*                                         VUAA(1,1:1)=CPDCH;/*     1025
*                                      CHANNEL               @OZ30157*/
         L     @14,CPDPTR                                          1025
         MVC   VUAA(1,@15),CPDCH(@14)                              1025
*                                         VUAB(1)='   ';/* SECOND  1026
*                                      BLANKS                @OZ30157*/
         MVC   VUAB(3,@15),@CC03112                                1026
*                                         USEADB(CURSTAT)=BONE;/*  1027
*                                                            @OZ30157*/
         SLR   @15,@15                                             1027
         IC    @15,CURSTAT                                         1027
         SLA   @15,2                                               1027
         LA    @14,USEADB-4(@15)                                   1027
         OI    0(@14),B'10000000'                                  1027
*                                         CURPTR(CURSTAT)=VUAPTR;/*
*                                                            @OZ30157*/
         ST    @04,@TF00001                                        1028
         LA    @14,CURPTR-4(@15)                                   1028
         MVC   0(3,@14),@TF00001+1                                 1028
*                                        END;/* END NEW SPACE GOOD 1029
*                                                            @OZ30157*/
*                                      END;/* END INITIALIZE NEW   1030
*                                                            @OZ30157*/
*                                                                  1030
*                                     /*******************************/
*                                     /*                             */
*                                     /* ADD TO EXISTING VUA ENTRY.  */
*                                     /* IF USEADB IS ON, MUST PUT   */
*                                     /* VUA IN CURRENT VUAB FIELD.  */
*                                     /*                     @OZ30157*/
*                                     /*                             */
*                                     /*******************************/
*                                                                  1031
*                                     ELSE/* NOT NEW, BUT NEW      1031
*                                      COUNT@OZ30157                 */
*                                      DO;/* IF FOR VUAB, SET IT   1031
*                                                            @OZ30157*/
         B     @RC01006                                            1031
@RF01006 DS    0H                                                  1032
*                                       IF USEADB(CURSTAT)=BONE THEN
         SLR   @04,@04                                             1032
         IC    @04,CURSTAT                                         1032
         SLA   @04,2                                               1032
         LA    @15,USEADB-4(@04)                                   1032
         TM    0(@15),B'10000000'                                  1032
         BNO   @RF01032                                            1032
*                                        /*                  @OZ30157*/
*                                        DO;/*               @OZ30157*/
*                                         VUAB(VUACNT)=UCBNAME;/*  1034
*                                                            @OZ30157*/
         L     @04,TABPTR                                          1034
         SLR   @15,@15                                             1034
         IC    @15,VUACNT(,@04)                                    1034
         MH    @15,@CH00038                                        1034
         ST    @15,@TF00001                                        1034
         ALR   @15,@04                                             1034
         L     @14,@CA00927                                        1034
         L     @14,UCBPTR-UCBPTR(,@14)                             1034
         MVC   VUAB-6(3,@15),UCBNAME(@14)                          1034
*                                         VUAB(VUACNT,1:1)=CPDCH;/*
*                                      CHAN                  @OZ30157*/
         AL    @04,@TF00001                                        1035
         L     @15,CPDPTR                                          1035
         MVC   VUAB-6(1,@04),CPDCH(@15)                            1035
*                                        END;/*              @OZ30157*/
*                                                                  1036
*                                       /*****************************/
*                                       /*                           */
*                                       /* IF USEADB IS OFF, PUT VUA */
*                                       /* IN NEXT VUAA FIELD AND SET*/
*                                       /* USEADB SO THAT THE NEXT   */
*                                       /* ONE WILL GO INTO THE VUAB */
*                                       /* FIELD             @OZ30157*/
*                                       /*                           */
*                                       /*****************************/
*                                                                  1037
*                                       ELSE/* ELSE PUT IN NEXT    1037
*                                                            @OZ30157*/
*                                        DO;/* VUAA          @OZ30157*/
         B     @RC01032                                            1037
@RF01032 DS    0H                                                  1038
*                                         VUACNT=VUACNT+1;/* BUMP CNT
*                                                            @OZ30157*/
         L     @04,TABPTR                                          1038
         LA    @00,1                                               1038
         MVC   @ZT00003+3(1),VUACNT(@04)                           1038
         AL    @00,@ZT00003                                        1038
         STC   @00,VUACNT(,@04)                                    1038
*                                         VUAA(VUACNT)=UCBNAME;/* SET
*                                                            @OZ30157*/
         MH    @00,@CH00038                                        1039
         LR    @15,@00                                             1039
         ALR   @15,@04                                             1039
         BCTR  @15,0                                               1039
         BCTR  @15,0                                               1039
         L     @14,@CA00927                                        1039
         L     @14,UCBPTR-UCBPTR(,@14)                             1039
         MVC   VUAA-4(3,@15),UCBNAME(@14)                          1039
*                                         VUAA(VUACNT,1:1)=CPDCH;/*
*                                      CHAN                  @OZ30157*/
         LR    @15,@00                                             1040
         ALR   @15,@04                                             1040
         BCTR  @15,0                                               1040
         BCTR  @15,0                                               1040
         L     @14,CPDPTR                                          1040
         MVC   VUAA-4(1,@15),CPDCH(@14)                            1040
*                                         VUAB(VUACNT)='   ';/* CLEAR
*                                                            @OZ30157*/
         ALR   @04,@00                                             1041
         MVC   VUAB-6(3,@04),@CC03112                              1041
*                                         USEADB(CURSTAT)=BONE;/*  1042
*                                                            @OZ30157*/
         SLR   @04,@04                                             1042
         IC    @04,CURSTAT                                         1042
         SLA   @04,2                                               1042
         LA    @15,USEADB-4(@04)                                   1042
         OI    0(@15),B'10000000'                                  1042
*                                        END;/* DONE THIS SUBENT   1043
*                                                            @OZ30157*/
*                                      END;/* END ADD TO OLD @OZ30157*/
@RC01032 DS    0H                                                  1045
*                                    END;/* END VUA LOOP     @OZ30157*/
@RC01006 LA    @04,1                                               1045
         AH    @04,K2                                              1045
         STH   @04,K2                                              1045
         CH    @04,@CH01346                                        1045
         BNH   @DL00957                                            1045
*                                   END;/* END SAME CPU      @OZ30157*/
*                                                                  1046
*                                 /***********************************/
*                                 /*                                 */
*                                 /* IF NOT FOR THE CURRENT HOST, CAN*/
*                                 /* ONLY PUT IN VUA RANGE THAT CAN  */
*                                 /* BE ACCESSED BY THE CPU. PUT INTO*/
*                                 /* ONLINE CHAIN            @OZ30157*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  1047
*                                 ELSE/* IF NOT SAME CPU     @OZ30157*/
*                                   DO;/* THEN SET ONLINE GROUP    1047
*                                                            @OZ30157*/
         B     @RC00948                                            1047
@RF00948 DS    0H                                                  1048
*                                    ENDSW=BONE;/* FORCE LAST ENTRY
*                                                            @OZ30157*/
         OI    ENDSW,B'00000100'                                   1048
*                                    VUAPTR=CPDPTR+CPDLEN;/* @OZ30157*/
         L     @04,CPDPTR                                          1049
         LH    @00,CPDLEN                                          1049
         ALR   @00,@04                                             1049
         ST    @00,VUAPTR                                          1049
*                                    ENDPTR=VUAPTR;/* SAVE HIGH    1050
*                                      ADDRESS               @OZ30157*/
         ST    @00,ENDPTR                                          1050
*                                    CPDONL=VUAPTR;/* POINT TO VUA 1051
*                                      ENTRY                 @OZ30157*/
         ST    @00,@TF00001                                        1051
         MVC   CPDONL(3,@04),@TF00001+1                            1051
*                                    CPDFLG1=BONE;/* NOT REAL ONLINE
*                                                            @OZ30157*/
         OI    CPDFLG1(@04),B'10000000'                            1052
*                                    CURSTAT=ONLN;/* SET FOR ONLINE
*                                                            @OZ30157*/
         MVI   CURSTAT,X'01'                                       1053
*                                    TABPTR=VUAPTR;/* POINT TO ENTRY
*                                                            @OZ30157*/
         ST    @00,TABPTR                                          1054
*                                    VUACNT=F1;/* COUNT OF ONE     1055
*                                                            @OZ30157*/
         LR    @04,@00                                             1055
         MVI   VUACNT(@04),X'01'                                   1055
*                                    VUACHN=F0;/* AND END OF CHAIN 1056
*                                                            @OZ30157*/
         LR    @04,@00                                             1056
         SLR   @15,@15                                             1056
         ST    @15,@TF00001                                        1056
         MVC   VUACHN(3,@04),@TF00001+1                            1056
*                                    VUAA(1)=VUA00;/* SET BASE VALUE
*                                      AND                   @OZ30157*/
         LR    @04,@00                                             1057
         MVC   VUAA(3,@04),VUA00                                   1057
*                                    VUAA(1,1:1)=PCHANCX;/* CHANNEL
*                                      ADDRESS               @OZ30157*/
         LR    @04,@00                                             1058
         MVC   VUAA(1,@04),PCHANCX                                 1058
*                                    PUNIT=PCNTL*4;/* AND CONTROL  1059
*                                      UNIT                  @OZ30157*/
         L     @04,PCNTL                                           1059
         SLA   @04,2                                               1059
         ST    @04,PUNIT                                           1059
*                                    VUAA(1,2:2)=PUNITCX;/* INTO VUAA
*                                                            @OZ30157*/
         LR    @04,@00                                             1060
         MVC   VUAA+1(1,@04),PUNITCX                               1060
*                                    VUAB(1)=VUAA(1)×VUA3F;/* SET  1061
*                                      VUAB                  @OZ30157*/
         LR    @04,@00                                             1061
         LR    @15,@00                                             1061
         MVC   VUAB(3,@04),VUAA(@15)                               1061
         OC    VUAB(3,@04),VUA3F                                   1061
*                                    TR(VUAA(1),NUMBRS);/* MAKE    1062
*                                                            @OZ30157*/
         LR    @04,@00                                             1062
         TR    VUAA(3,@04),NUMBRS                                  1062
*                                    TR(VUAB(1),NUMBRS);/* PRINTABLE
*                                                            @OZ30157*/
         LR    @04,@00                                             1063
         TR    VUAB(3,@04),NUMBRS                                  1063
*                                   END;/* END NOT SAME CPU  @OZ30157*/
*                                 LVUPTR=ADDR(CPDCHN);/* SET FOR   1065
*                                      CHAINING              @OZ30157*/
@RC00948 L     @04,CPDPTR                                          1065
         LA    @04,CPDCHN(,@04)                                    1065
         ST    @04,LVUPTR                                          1065
*                                 TABPTR=ENDPTR;/* GET HIGH VUA ADDR
*                                                            @OZ30157*/
         L     @04,ENDPTR                                          1066
         ST    @04,TABPTR                                          1066
*                                 CPDPTR=TABPTR+(VUACNT*6)+8;/* NEXT
*                                      ENTRY                 @OZ30157*/
         SLR   @00,@00                                             1067
         IC    @00,VUACNT(,@04)                                    1067
         MH    @00,@CH00038                                        1067
         ALR   @04,@00                                             1067
         AH    @04,@CH00036                                        1067
         ST    @04,CPDPTR                                          1067
*                                 CPDPTR=(CPDPTR/4)*4;/* ROUND TO  1068
*                                      NEXT WORD             @OZ30157*/
         SRL   @04,2                                               1068
         SLA   @04,2                                               1068
         ST    @04,CPDPTR                                          1068
*                                 ENDPTR=CPDPTR;/* SAVE HIGH ADDRESS
*                                                            @OZ30157*/
         ST    @04,ENDPTR                                          1069
*                               END;/* END VALID INTERFACE   @OZ30157*/
*                           END;    /* END INTERFACE LOOP    @OZ30157*/
@RF00916 LA    @04,1                                               1071
         AH    @04,K                                               1071
         STH   @04,K                                               1071
         CH    @04,@CH00060                                        1071
         BNH   @DL00912                                            1071
*                         END;      /* END GOOD SA ENTRY     @OZ30157*/
*                   END;            /* END SA LOOP           @OZ30157*/
@RF00910 DS    0H                                                  1073
@RF00909 LA    @04,1                                               1073
         AH    @04,J                                               1073
         STH   @04,J                                               1073
         CH    @04,@CH01227                                        1073
         BNH   @DL00907                                            1073
*               END;                /* USE CONF INDEX FOR SA @OZ30157*/
@RF00906 DS    0H                                                  1075
*           END;                    /* END CPU LOOP          @OZ30157*/
@RF00903 LA    @04,16                                              1075
         AL    @04,CPHPTR                                          1075
         ST    @04,CPHPTR                                          1075
@DE00891 C     @04,CPHEND                                          1075
         BNH   @DL00891                                            1075
*/********************************************************************/
*/*                                                                  */
*/*   SETUP TO CALL MSG56G OR ISSUE ERROR MESSAGE            @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1076
*         END;                      /* END GOOD RETC         @OZ30157*/
*       IF RETC=F0&CPUPTR^=F0 THEN  /* IF GOOD TABLES BUILT  @OZ30157*/
@RF00794 SLR   @04,@04                                             1077
         CH    @04,RETC                                            1077
         BNE   @RF01077                                            1077
         C     @04,CPUPTR                                          1077
         BE    @RF01077                                            1077
*         DO;                       /* SET TO DO DISPLAY     @OZ30157*/
*           VALSSID=BONE;           /* SAY SSID VALID        @OZ30157*/
*           VALCODE=BONE;           /* AND CODE VALID SO     @OZ30157*/
         OI    VALSSID,B'01001000'                                 1080
*         END;                      /* WILL CALL MSG56G      @OZ30157*/
*     END;                          /* END CPU PATH DISPLAY  @OZ30157*/
@RF01077 DS    0H                                                  1083
*   IF DSPSDG=BONE×DSPDRC=BONE THEN /* IF SDG OR DRC PATH    @OZ30157*/
@RF00787 L     @04,@CA00041                                        1083
         L     @04,CWBPTR-CWBPTR(,@04)                             1083
         TM    DSPSDG(@04),B'00010000'                             1083
         BO    @RT01083                                            1083
         TM    DSPDRC(@04),B'10000000'                             1083
         BNO   @RF01083                                            1083
@RT01083 DS    0H                                                  1084
*     DO;                           /* BUILD SDG TABLE HDR   @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/*     BUILD SDG HEADER TABLE                               @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1085
*       SDGPTR=F0;                  /* CLEAR FOR GET 2K      @OZ30157*/
         SLR   @04,@04                                             1085
         ST    @04,SDGPTR                                          1085
*       SDGEND=F0;                  /* CLEAR BFORE FIRST USE @OZ30157*/
         ST    @04,SDGEND                                          1086
*       DRCPTR=F0;                  /* CLEAR BFORE FIRST USE @OZ30157*/
         ST    @04,DRCPTR                                          1087
*       DRCEND=F0;                  /* CLEAR BFORE FIRST USE @OZ30157*/
         ST    @04,DRCEND                                          1088
*       LVUPTR=ADDR(SDGPTR);        /* SET FOR CHAINING      @OZ30157*/
         LA    @04,SDGPTR                                          1089
         ST    @04,LVUPTR                                          1089
*       R1=LVUPTR;                  /* PARM ADR FOR CALL     @OZ30157*/
         LR    R1,@04                                              1090
*       CALL MSG56F;                /* GO GET SPACE FOR SDGTB@OZ30157*/
         BAL   @14,MSG56F                                          1091
*       IF RETC=F0 THEN             /* GOOD GETM             @OZ30157*/
         SLR   @04,@04                                             1092
         CH    @04,RETC                                            1092
         BNE   @RF01092                                            1092
*         DO;                       /* IF GOOD,              @OZ30157*/
*           VUAPTR=CHNADR;          /*                       @OZ30157*/
         L     @15,LVUPTR                                          1094
         L     @00,CHNADR-1(,@15)                                  1094
         N     @00,@CF03658                                        1094
         ST    @00,VUAPTR                                          1094
*           LASTENT=VUAPTR+2047;    /*                       @OZ30157*/
         AH    @00,@CH03110                                        1095
         ST    @00,LASTENT                                         1095
*           SDGEND=SDGPTR+216;      /* AND QUERIES           @OZ30157*/
         L     @15,SDGPTR                                          1096
         LA    @00,216                                             1096
         ALR   @00,@15                                             1096
         ST    @00,SDGEND                                          1096
*/********************************************************************/
*/*                                                                  */
*/* BUILD A HEADER ENTRY FOR EACH SA IN THE CONFIGURATION TABLE      */
*/*                                                          @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1097
*           TABPTR=SDGPTR;          /* ENTRY ADDRESS         @OZ30157*/
         ST    @15,TABPTR                                          1097
*           I=F1;                   /* START POINT DEFAULT   @OZ30157*/
         MVC   I(2),@CH00047                                       1098
*           I2=F28;                 /* MAXIMUM SDG NUMBER+1  @OZ30157*/
         MVC   I2(2),@CH01339                                      1099
*           IF DSPQUAL=BONE&DSPSDG=BONE THEN/* IF OP IS SDGNN      1100
*                                                            @OZ30157*/
         L     @15,@CA00041                                        1100
         L     @15,CWBPTR-CWBPTR(,@15)                             1100
         TM    DSPQUAL(@15),B'00100000'                            1100
         BNO   @RF01100                                            1100
         TM    DSPSDG(@15),B'00010000'                             1100
         BNO   @RF01100                                            1100
*             DO;                   /* THEN SET LIMITS PER   @OZ30157*/
*               QUALLEN(1)=F2;      /* QUALIFIER             @OZ30157*/
         MVC   QUALLEN(2),@CH00056                                 1102
*               QUALLEN(2)=F0;      /* ONE QUALIFIER NEEDED  @OZ30157*/
         STH   @04,QUALLEN+2                                       1103
*               CALL MSG56QU;       /* GO GET IT             @OZ30157*/
         BAL   @14,MSG56QU                                         1104
*               IF RETC=F0 THEN     /* IF GOT ONE 2 BYTE QUAL@OZ30157*/
         LH    @04,RETC                                            1105
         LTR   @04,@04                                             1105
         BNZ   @RF01105                                            1105
*                 DO;               /* THEN USE IT           @OZ30157*/
*                   PACK(CPXCPU,QUAL(1,1:2));/* PACK SDG NUMBER    1107
*                                                            @OZ30157*/
         PACK  CPXCPU(5),QUAL(2)                                   1107
*                   CVB(I,CPXCPU);  /* CVT TO BINARY START   @OZ30157*/
         XC    @TS00001(8),@TS00001                                1108
         MVC   @TS00001+3(5),CPXCPU                                1108
         CVB   @04,@TS00001                                        1108
         STH   @04,I                                               1108
*                   I=I+1;          /* PLUS ONE FOR INDEX    @OZ30157*/
         AL    @04,@CF00047                                        1109
         STH   @04,I                                               1109
*                   I2=I;           /* AND END LOOP VALUES   @OZ30157*/
         STH   @04,I2                                              1110
*                 END;              /* GOT QUALIFIER         @OZ30157*/
*             END;                  /* END QUALIFIER         @OZ30157*/
*           ELSE                                                   1113
*             ;                     /* NO QUALIFIER          @OZ30157*/
@RF01100 DS    0H                                                  1114
*           ENDSW=BZERO;            /* RESET TEST SWITCH     @OZ30157*/
@RC01100 NI    ENDSW,B'11111011'                                   1114
*           DO I=I TO I2 WHILE(RETC=F0);/* LOOP ALL SDGS     @OZ30157*/
         LH    @04,I                                               1115
         B     @DE01115                                            1115
@DL01115 LH    @00,RETC                                            1115
         LTR   @00,@00                                             1115
         BNZ   @DC01115                                            1115
*             IF SDGXST(I)^='00000000'B THEN/* ALL EXIST SDGS      1116
*                                                            @OZ30157*/
         L     @15,@CA01293                                        1116
         L     @15,MSGPTR-MSGPTR(,@15)                             1116
         ALR   @15,@04                                             1116
         CLI   SDGXST+1(@15),B'00000000'                           1116
         BE    @RF01116                                            1116
*               DO;                 /* SDG EXISTS, BUILD AN ENTRY  1117
*                                                            @OZ30157*/
*                 ENDSW=BONE;       /* SAY FOUND IT          @OZ30157*/
         OI    ENDSW,B'00000100'                                   1118
*                 SDGENT=''B;       /* CLEAR BEFORE USE      @OZ30157*/
         L     @15,TABPTR                                          1119
         XC    SDGENT(16,@15),SDGENT(@15)                          1119
*                 IF I>1 THEN       /* CHAIN TO EARLIER      @OZ30157*/
         CH    @04,@CH00047                                        1120
         BNH   @RF01120                                            1120
*                   CHAIN=TABPTR;   /* SDGTAB ENTRY          @OZ30157*/
         L     @04,LVUPTR                                          1121
         ST    @15,CHAIN(,@04)                                     1121
*                 SDGNUM=I-1;       /* SDG DEFINED           @OZ30157*/
@RF01120 LH    @04,I                                               1122
         BCTR  @04,0                                               1122
         L     @15,TABPTR                                          1122
         STC   @04,SDGNUM(,@15)                                    1122
*                 SDGREQ(SDGNUM+1)='FF'X;/* SET REQUEST FLAG @OZ30157*/
*                                                                  1123
         LA    @15,SDGREQ(@04)                                     1123
         MVI   0(@15),X'FF'                                        1123
*                 /***************************************************/
*                 /*                                                 */
*                 /* SCAN ALL SA ENTRIES IN CONFIG INDEX TABLE       */
*                 /*                                         @OZ30157*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1124
*                 K=1;              /* SA ENTRY NUMBER       @OZ30157*/
         LA    @04,1                                               1124
         STH   @04,K                                               1124
*                 DO J=1 TO 16 WHILE(K<3);/* ALL SAS TO CHECK      1125
*                                                            @OZ30157*/
         STH   @04,J                                               1125
@DL01125 LH    @15,K                                               1125
         CH    @15,@CH00060                                        1125
         BNL   @DC01125                                            1125
*                   TABPTR1=ADDR(CONFXTAB(J));/* SET ENTRY PTR     1126
*                                                            @OZ30157*/
         LR    @14,@04                                             1126
         SLA   @14,3                                               1126
         L     @03,CONXPTR                                         1126
         AL    @03,@CF03654                                        1126
         LA    @00,CONFXTAB(@14,@03)                               1126
         ST    @00,TABPTR1                                         1126
*                   IF CXCSCCS=BZERO THEN/* IF SA CONNECTION @OZ30157*/
         LR    @14,@00                                             1127
         TM    CXCSCCS(@14),B'10000000'                            1127
         BNZ   @RF01127                                            1127
*                     IF CXCSCS0^=BZERO×CXCSCS1^=BZERO THEN/* VALID
*                                                            @OZ30157*/
         LR    @14,@00                                             1128
         TM    CXCSCS0(@14),B'00001100'                            1128
         BZ    @RF01128                                            1128
*                       DO;         /* THEN USE IT           @OZ30157*/
*                         IF VESDG1(J)=SDGNUM THEN/* IS IT THIS SDG
*                                                            @OZ30157*/
         LR    @14,@04                                             1130
         SLA   @14,2                                               1130
         L     @03,TABPTR                                          1130
         L     @02,VERPTR                                          1130
         AL    @02,@CF03609                                        1130
         SLR   @00,@00                                             1130
         IC    @00,VESDG1(@14,@02)                                 1130
         MVC   @ZT00003+3(1),SDGNUM(@03)                           1130
         C     @00,@ZT00003                                        1130
         BNE   @RF01130                                            1130
*                           DO;     /*                       @OZ30157*/
*                             SDGSANO(K)=J-1;/* WITH SA NUMBER     1132
*                                                            @OZ30157*/
         LR    @14,@15                                             1132
         MH    @14,@CH00038                                        1132
         BCTR  @04,0                                               1132
         LA    @02,0(@14,@03)                                      1132
         BCTR  @02,0                                               1132
         BCTR  @02,0                                               1132
         STC   @04,SDGSANO-4(,@02)                                 1132
*                             SDGSAP(K)=BONE;/* SAY SA IS PRESENT  1133
*                                                            @OZ30157*/
         ALR   @03,@14                                             1133
         BCTR  @03,0                                               1133
         OI    SDGSAP-5(@03),B'00001000'                           1133
*                             K=K+1;/* GOT ONE, BUILD        @OZ30157*/
         LA    @15,1(,@15)                                         1134
         STH   @15,K                                               1134
*                           END;    /*                       @OZ30157*/
*                         IF VESDG2(J)=SDGNUM THEN/* OR THIS SDG   1136
*                                                            @OZ30157*/
@RF01130 LH    @04,J                                               1136
         LR    @15,@04                                             1136
         SLA   @15,2                                               1136
         L     @14,TABPTR                                          1136
         L     @03,VERPTR                                          1136
         AL    @03,@CF03655                                        1136
         SLR   @00,@00                                             1136
         IC    @00,VESDG2-1(@15,@03)                               1136
         MVC   @ZT00003+3(1),SDGNUM(@14)                           1136
         C     @00,@ZT00003                                        1136
         BNE   @RF01136                                            1136
*                           DO;     /*                       @OZ30157*/
*                             SDGSANO(K)=J-1;/* WITH SA NUMBER     1138
*                                                            @OZ30157*/
         LH    @15,K                                               1138
         LR    @03,@15                                             1138
         MH    @03,@CH00038                                        1138
         BCTR  @04,0                                               1138
         LA    @02,0(@03,@14)                                      1138
         BCTR  @02,0                                               1138
         BCTR  @02,0                                               1138
         STC   @04,SDGSANO-4(,@02)                                 1138
*                             SDGSAP(K)=BONE;/* SAY SA IS PRESENT  1139
*                                                            @OZ30157*/
         ALR   @14,@03                                             1139
         BCTR  @14,0                                               1139
         OI    SDGSAP-5(@14),B'00001000'                           1139
*                             K=K+1;/* GOT ONE, BUILD        @OZ30157*/
         LA    @15,1(,@15)                                         1140
         STH   @15,K                                               1140
*                           END;    /*                       @OZ30157*/
*                         IF CXCSCS1=BONE THEN/* IF ON CARTR STORE 1
*                                                            @OZ30157*/
@RF01136 L     @04,TABPTR1                                         1142
         TM    CXCSCS1(@04),B'00000100'                            1142
         BNO   @RF01142                                            1142
*                           SDGCSFNO(K)=F1;/* THEN SAY SO    @OZ30157*/
         LH    @04,K                                               1143
         MH    @04,@CH00038                                        1143
         LA    @00,1                                               1143
         L     @15,TABPTR                                          1143
         STC   @00,SDGCSFNO-6(@04,@15)                             1143
*                       END;        /* END SA CONNECTION     @OZ30157*/
@RF01142 DS    0H                                                  1145
*                 END;              /* END SCAN ALL SAS      @OZ30157*/
@RF01128 DS    0H                                                  1145
@RF01127 LA    @04,1                                               1145
         AH    @04,J                                               1145
         STH   @04,J                                               1145
         CH    @04,@CH01227                                        1145
         BNH   @DL01125                                            1145
@DC01125 DS    0H                                                  1146
*                 SDGEND=TABPTR;    /* SET END POINTER       @OZ30157*/
         L     @04,TABPTR                                          1146
         ST    @04,SDGEND                                          1146
*                 LVUPTR=ADDR(SDGCHN)-F1;/* SET FOR CHAINING @OZ30157*/
         LA    @00,SDGCHN(,@04)                                    1147
         BCTR  @00,0                                               1147
         ST    @00,LVUPTR                                          1147
*                 TABPTR=TABPTR+SDGLEN;/* BUMP TO NEXT ENTRY @OZ30157*/
         AL    @04,SDGLEN                                          1148
         ST    @04,TABPTR                                          1148
*               END;                /* END ENTRY BUILD       @OZ30157*/
*           END;                    /* END SDG LOOP          @OZ30157*/
@RF01116 LA    @04,1                                               1150
         AH    @04,I                                               1150
         STH   @04,I                                               1150
@DE01115 CH    @04,I2                                              1150
         BNH   @DL01115                                            1150
@DC01115 DS    0H                                                  1151
*           IF ENDSW=BZERO&RETC=F0 THEN/* IF NEW ERROR       @OZ30157*/
         TM    ENDSW,B'00000100'                                   1151
         BNZ   @RF01151                                            1151
         LH    @04,RETC                                            1151
         LTR   @04,@04                                             1151
         BNZ   @RF01151                                            1151
*             RETC=F1;              /* SAY SO                @OZ30157*/
         MVC   RETC(2),@CH00047                                    1152
*         END;                      /* END GOOD RETC         @OZ30157*/
@RF01151 DS    0H                                                  1154
*       IF RETC=F0 THEN             /* IF GOOD SO FAR        @OZ30157*/
@RF01092 LH    @04,RETC                                            1154
         LTR   @04,@04                                             1154
         BNZ   @RF01154                                            1154
*         DO;                       /* KEEP ON               @OZ30157*/
*           DO J=1 TO 2;            /* NOW THROUGH 2 CSFS    @OZ30157*/
         LA    @04,1                                               1156
         STH   @04,J                                               1156
@DL01156 DS    0H                                                  1157
*             DO I=1 TO 4;          /* DO UP TO 4 DRCS EACH  @OZ30157*/
         LA    @04,1                                               1157
         STH   @04,I                                               1157
@DL01157 DS    0H                                                  1158
*               PWCS7X=QAPTR(J+2);  /* POINT TO SECT7.CSF    @OZ30157*/
         LH    @15,J                                               1158
         SLA   @15,2                                               1158
         L     @00,QAPTR+4(@15)                                    1158
         ST    @00,PWCS7X                                          1158
*               IF(DRCXST&CONFGMSK(I))^=HEX00 THEN/* IF EXISTS     1159
*                                                            @OZ30157*/
         L     @15,@CA01293                                        1159
         L     @15,MSGPTR-MSGPTR(,@15)                             1159
         L     @14,@CA01312                                        1159
         MVC   @TS00001(1),DRCXST+2(@15)                           1159
         ALR   @14,@04                                             1159
         BCTR  @14,0                                               1159
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@14)                  1159
         CLI   @TS00001,X'00'                                      1159
         BE    @RF01159                                            1159
*                 DO TABPTR=SDGPTR TO SDGEND BY SDGLEN;/*    @OZ30157*/
         L     @04,SDGPTR                                          1160
         B     @DE01160                                            1160
@DL01160 DS    0H                                                  1161
*                   DO K=1 TO 2;    /* CHECK EACH SA IN SDG  @OZ30157*/
         LA    @04,1                                               1161
         STH   @04,K                                               1161
@DL01161 DS    0H                                                  1162
*                     PWCS7X=QAPTR(J+2);/* POINT TO SECT7.CSF      1162
*                                                            @OZ30157*/
         LH    @15,J                                               1162
         SLA   @15,2                                               1162
         L     @00,QAPTR+4(@15)                                    1162
         ST    @00,PWCS7X                                          1162
*                     R1=TESTVAL;   /* SET INITIAL BIT       @OZ30157*/
         L     R1,TESTVAL                                          1163
*                     PUNIT=SDGSANO(K);/* CALC SHIFT VALUE   @OZ30157*/
         L     @15,TABPTR                                          1164
         MH    @04,@CH00038                                        1164
         LA    @14,0(@04,@15)                                      1164
         BCTR  @14,0                                               1164
         BCTR  @14,0                                               1164
         SLR   @03,@03                                             1164
         IC    @03,SDGSANO-4(,@14)                                 1164
         ST    @03,PUNIT                                           1164
*                     SRL(R1,PUNIT);/* FIND BIT TO CHECK     @OZ30157*/
         SRL   R1,0(@03)                                           1165
*                     PUNIT=R1;     /* PUT INTO PUNIT        @OZ30157*/
         ST    R1,PUNIT                                            1166
*                     SATST=DRCCON(I)&PUNIT;/* CHECK CONNECT @OZ30157*/
         L     @14,PUNIT                                           1167
         LH    @03,I                                               1167
         LR    @02,@03                                             1167
         SLA   @02,2                                               1167
         LR    @15,@00                                             1167
         ALR   @15,@02                                             1167
         AL    @15,@CF03609                                        1167
         MVC   @ZT00002+2(2),DRCCON(@15)                           1167
         N     @14,@ZT00002                                        1167
         STH   @14,SATST                                           1167
*                     IF SATST^=F0 THEN/* IF CONNECTION, THEN      1168
*                                                            @OZ30157*/
         LTR   @14,@14                                             1168
         BZ    @RF01168                                            1168
*                       DO;         /* BUILD ENTRIES         @OZ30157*/
*                         SDGDCCNO(K)=I-1;/* AND DRC NUMBER  @OZ30157*/
         L     @02,TABPTR                                          1170
         BCTR  @03,0                                               1170
         STC   @03,SDGDCCNO-6(@04,@02)                             1170
*                       END;        /* END SET DRC ENTRY     @OZ30157*/
*                                                                  1171
*                     /***********************************************/
*                     /*                                             */
*                     /* USE WCS SECTORS 7C TO 7F DATA FROM SA AND   */
*                     /* PATH UCBS TO FILL IN THE SDG TABLE ENTRY    */
*                     /*                                     @OZ30157*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  1172
*                     IF SDGSAP(K)=BONE THEN/* IF SA IS PRESENT    1172
*                                                            @OZ30157*/
@RF01168 L     @04,TABPTR                                          1172
         LH    @15,K                                               1172
         MH    @15,@CH00038                                        1172
         ST    @15,@TF00001                                        1172
         ALR   @15,@04                                             1172
         BCTR  @15,0                                               1172
         TM    SDGSAP-5(@15),B'00001000'                           1172
         BNO   @RF01172                                            1172
*                       DO;         /* THEN                  @OZ30157*/
*                         K3=SDGDCCNO(K)+1;/* NOW SET DRC NUMBER   1174
*                                                            @OZ30157*/
         L     @15,@TF00001                                        1174
         SLR   @00,@00                                             1174
         IC    @00,SDGDCCNO-6(@15,@04)                             1174
         AL    @00,@CF00047                                        1174
         STH   @00,K3                                              1174
*                         PWCS7X=QAPTR(J+2);/* POINT TO SECT7.CSF  1175
*                                                            @OZ30157*/
*                                                                  1175
         LH    @15,J                                               1175
         LR    @14,@15                                             1175
         SLA   @14,2                                               1175
         L     @14,QAPTR+4(@14)                                    1175
         ST    @14,PWCS7X                                          1175
*                         /*******************************************/
*                         /*                                         */
*                         /* IF PATH IS VALID                @OZ30157*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  1176
*                         IF CONFGMSK(K3)=(DRCXST&CONFGMSK(K3)) THEN
         L     @14,@CA01312                                        1176
         L     @03,@CA01293                                        1176
         LA    @02,2                                               1176
         AL    @02,MSGPTR-MSGPTR(,@03)                             1176
         MVC   @TS00001(1),DRCXST(@02)                             1176
         LR    @03,@00                                             1176
         ALR   @03,@14                                             1176
         BCTR  @03,0                                               1176
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@03)                  1176
         LR    @03,@00                                             1176
         ALR   @03,@14                                             1176
         BCTR  @03,0                                               1176
         CLC   CONFGMSK-CONFGMSK(1,@03),@TS00001                   1176
         BNE   @RF01176                                            1176
*                                   /*                       @OZ30157*/
*                           DO;     /* THEN GET STATUS       @OZ30157*/
*                             IF CONFGMSK(K3)^=(DRCON(J)&CONFGMSK(K3))
*                               THEN/*                       @OZ30157*/
         ALR   @02,@15                                             1178
         MVC   @TS00001(1),DRCON-1(@02)                            1178
         LR    @15,@00                                             1178
         ALR   @15,@14                                             1178
         BCTR  @15,0                                               1178
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  1178
         ALR   @14,@00                                             1178
         BCTR  @14,0                                               1178
         CLC   CONFGMSK-CONFGMSK(1,@14),@TS00001                   1178
         BE    @RF01178                                            1178
*                               SDGDCOF(K)=BONE;/* NO, OFFLINE     1179
*                                                            @OZ30157*/
         AL    @04,@TF00001                                        1179
         OI    SDGDCOF-6(@04),B'10000000'                          1179
*                             ELSE                                 1180
*                               SDGDCOF(K)=BZERO;/* YES, ONLINE    1180
*                                                            @OZ30157*/
         B     @RC01178                                            1180
@RF01178 LH    @04,K                                               1180
         MH    @04,@CH00038                                        1180
         L     @15,TABPTR                                          1180
         ALR   @15,@04                                             1180
         NI    SDGDCOF-6(@15),B'01111111'                          1180
*                             IF CONFGMSK(K3)=(DRCRDY(J)&CONFGMSK(K3))
*                               THEN/*                       @OZ30157*/
@RC01178 LH    @04,K3                                              1181
         L     @15,@CA01312                                        1181
         LH    @14,J                                               1181
         L     @03,@CA01293                                        1181
         L     @03,MSGPTR-MSGPTR(,@03)                             1181
         ALR   @03,@14                                             1181
         MVC   @TS00001(1),DRCRDY+1(@03)                           1181
         ST    @04,@TF00001                                        1181
         ALR   @04,@15                                             1181
         BCTR  @04,0                                               1181
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@04)                  1181
         AL    @15,@TF00001                                        1181
         BCTR  @15,0                                               1181
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   1181
         BNE   @RF01181                                            1181
*                               SDGDCRDY(K)=BONE;/* YES, USABLE    1182
*                                                            @OZ30157*/
         LH    @04,K                                               1182
         MH    @04,@CH00038                                        1182
         L     @15,TABPTR                                          1182
         ALR   @15,@04                                             1182
         OI    SDGDCRDY-6(@15),B'01000000'                         1182
*                           END;    /*                       @OZ30157*/
*                         ELSE                                     1184
*                           SDGDCCST(K)=''B;/* NOT VALID     @OZ30157*/
         B     @RC01176                                            1184
@RF01176 LH    @04,K                                               1184
         MH    @04,@CH00038                                        1184
         L     @15,TABPTR                                          1184
         ALR   @15,@04                                             1184
         MVI   SDGDCCST-6(@15),X'00'                               1184
*                         PWCS7X=QAPTR((SDGSANO(K)/4)+3);/* SET    1185
*                                      SECTOR AND            @OZ30157*/
@RC01176 L     @04,TABPTR                                          1185
         LH    @15,K                                               1185
         MH    @15,@CH00038                                        1185
         LA    @14,0(@15,@04)                                      1185
         BCTR  @14,0                                               1185
         BCTR  @14,0                                               1185
         SLR   @03,@03                                             1185
         IC    @03,SDGSANO-4(,@14)                                 1185
         LR    @02,@03                                             1185
         SRL   @02,2                                               1185
         SLA   @02,2                                               1185
         L     @00,QAPTR+8(@02)                                    1185
         ST    @00,PWCS7X                                          1185
*                         K3=(SDGSANO(K)//4)+1;/* UCB INDICES      1186
*                                                            @OZ30157*/
         LR    @14,@03                                             1186
         ST    @15,@TF00001                                        1186
         SRDA  @14,32                                              1186
         D     @14,@CF00045                                        1186
         AL    @14,@CF00047                                        1186
         STH   @14,K3                                              1186
*                         IF SAFVAL(K3)=BONE THEN/* IF SA IS VALID 1187
*                                                            @OZ30157*/
         SLA   @14,2                                               1187
         LR    @15,@00                                             1187
         ALR   @15,@14                                             1187
         TM    SAFVAL-4(@15),B'10000000'                           1187
         BNO   @RF01187                                            1187
*                           DO;     /* THEN SET OFL, RDY BITS@OZ30157*/
*                             IF SAFONL(K3)=BZERO THEN/* NOT ONLINE
*                                                            @OZ30157*/
         LR    @15,@00                                             1189
         ALR   @15,@14                                             1189
         TM    SAFONL-4(@15),B'01000000'                           1189
         BNZ   @RF01189                                            1189
*                               SDGSAOF(K)=BONE;/* SAY IS OFFLINE  1190
*                                                            @OZ30157*/
         AL    @04,@TF00001                                        1190
         BCTR  @04,0                                               1190
         OI    SDGSAOF-5(@04),B'10000000'                          1190
*                             ELSE                                 1191
*                               SDGSAOF(K)=BZERO;/* OR ONLINE      1191
*                                                            @OZ30157*/
         B     @RC01189                                            1191
@RF01189 LH    @04,K                                               1191
         MH    @04,@CH00038                                        1191
         L     @15,TABPTR                                          1191
         ALR   @15,@04                                             1191
         BCTR  @15,0                                               1191
         NI    SDGSAOF-5(@15),B'01111111'                          1191
*                             IF(SDGSAOF(K)=BONE)&(DSPOFF=BONE) THEN
@RC01189 L     @04,TABPTR                                          1192
         LH    @15,K                                               1192
         MH    @15,@CH00038                                        1192
         ST    @15,@TF00001                                        1192
         ALR   @15,@04                                             1192
         BCTR  @15,0                                               1192
         TM    SDGSAOF-5(@15),B'10000000'                          1192
         BNO   @RF01192                                            1192
         L     @15,@CA00041                                        1192
         L     @15,CWBPTR-CWBPTR(,@15)                             1192
         TM    DSPOFF(@15),B'00100000'                             1192
         BNO   @RF01192                                            1192
*                                   /*                       @OZ30157*/
*                               SDGSAVAL(K)=BONE;/* VALID FOR DISPLAY
*                                                            @OZ30157*/
         AL    @04,@TF00001                                        1193
         BCTR  @04,0                                               1193
         OI    SDGSAVAL-5(@04),B'00010000'                         1193
*                             IF(SDGSAOF(K)=BZERO)&(DSPON=BONE) THEN
@RF01192 L     @04,TABPTR                                          1194
         LH    @15,K                                               1194
         MH    @15,@CH00038                                        1194
         ST    @15,@TF00001                                        1194
         ALR   @15,@04                                             1194
         BCTR  @15,0                                               1194
         TM    SDGSAOF-5(@15),B'10000000'                          1194
         BNZ   @RF01194                                            1194
         L     @15,@CA00041                                        1194
         L     @15,CWBPTR-CWBPTR(,@15)                             1194
         TM    DSPON(@15),B'01000000'                              1194
         BNO   @RF01194                                            1194
*                                   /*                       @OZ30157*/
*                               SDGSAVAL(K)=BONE;/* VALID FOR DISPLAY
*                                                            @OZ30157*/
         AL    @04,@TF00001                                        1195
         BCTR  @04,0                                               1195
         OI    SDGSAVAL-5(@04),B'00010000'                         1195
*                             IF SAFRDY(K3)=BONE THEN/* IF READY   1196
*                                                            @OZ30157*/
@RF01194 LH    @04,K3                                              1196
         SLA   @04,2                                               1196
         L     @15,PWCS7X                                          1196
         ALR   @15,@04                                             1196
         TM    SAFRDY-4(@15),B'00100000'                           1196
         BNO   @RF01196                                            1196
*                               SDGSARDY(K)=BONE;/* SAY SO,  @OZ30157*/
         LH    @04,K                                               1197
         MH    @04,@CH00038                                        1197
         L     @15,TABPTR                                          1197
         ALR   @15,@04                                             1197
         BCTR  @15,0                                               1197
         OI    SDGSARDY-5(@15),B'01000000'                         1197
*                             ELSE                                 1198
*                               SDGSAVAL(K)=BONE;/* ELSE IS SUU    1198
*                                                            @OZ30157*/
         B     @RC01196                                            1198
@RF01196 LH    @04,K                                               1198
         MH    @04,@CH00038                                        1198
         L     @15,TABPTR                                          1198
         ALR   @15,@04                                             1198
         BCTR  @15,0                                               1198
         OI    SDGSAVAL-5(@15),B'00010000'                         1198
*                           END;    /* SA FLAGS SET          @OZ30157*/
@RC01196 DS    0H                                                  1200
*                       END;        /* END SA PRESENT        @OZ30157*/
@RF01187 DS    0H                                                  1201
*                   END;            /* END SA LOOP           @OZ30157*/
@RF01172 LA    @04,1                                               1201
         AH    @04,K                                               1201
         STH   @04,K                                               1201
         CH    @04,@CH00056                                        1201
         BNH   @DL01161                                            1201
*                 END;              /* END SDG LOOP          @OZ30157*/
         L     @04,TABPTR                                          1202
         AL    @04,SDGLEN                                          1202
@DE01160 ST    @04,TABPTR                                          1202
         C     @04,SDGEND                                          1202
         BNH   @DL01160                                            1202
*             END;                  /* END DRC LOOP          @OZ30157*/
@RF01159 LA    @04,1                                               1203
         AH    @04,I                                               1203
         STH   @04,I                                               1203
         CH    @04,@CH00045                                        1203
         BNH   @DL01157                                            1203
*           END;                    /* END SCAN DRCS         @OZ30157*/
         LA    @04,1                                               1204
         AH    @04,J                                               1204
         STH   @04,J                                               1204
         CH    @04,@CH00056                                        1204
         BNH   @DL01156                                            1204
*         END;                      /* END GOOD RET CODE     @OZ30157*/
*       IF RETC=F0 THEN             /* IF GOOD SO FAR        @OZ30157*/
@RF01154 SLR   @04,@04                                             1206
         CH    @04,RETC                                            1206
         BNE   @RF01206                                            1206
*         DO;                       /* THEN CONTINUE         @OZ30157*/
*           DRCPTR=TABPTR;          /* START OF DRC TABLE    @OZ30157*/
         L     @00,TABPTR                                          1208
         ST    @00,DRCPTR                                          1208
*           TABPTR2=DRCPTR;         /* SET DRC TABLE ENT PTR @OZ30157*/
         ST    @00,TABPTR2                                         1209
*           I=F1;                   /* SET DEFAULT DRC START @OZ30157*/
         MVC   I(2),@CH00047                                       1210
*           I2=F4;                  /* AND STOP POINTS       @OZ30157*/
         MVC   I2(2),@CH00045                                      1211
*           IF DSPQUAL=BONE&DSPDRC=BONE THEN/* IF OP IS DRCNN      1212
*                                                            @OZ30157*/
         L     @15,@CA00041                                        1212
         L     @15,CWBPTR-CWBPTR(,@15)                             1212
         TM    DSPQUAL(@15),B'10100000'                            1212
         BNO   @RF01212                                            1212
*             DO;                   /* THEN GET QUALIFIER    @OZ30157*/
*               QUALLEN(1)=F2;      /* SET FOR ONE TWO BYTE  @OZ30157*/
         MVC   QUALLEN(2),@CH00056                                 1214
*               QUALLEN(2)=F0;      /* QUALIFIER AND GET     @OZ30157*/
         STH   @04,QUALLEN+2                                       1215
*               CALL MSG56QU;       /* VALUE IN QUAL(1)      @OZ30157*/
         BAL   @14,MSG56QU                                         1216
*               IF RETC=F0 THEN     /* IF GOT GOOD ONE       @OZ30157*/
         LH    @04,RETC                                            1217
         LTR   @04,@04                                             1217
         BNZ   @RF01217                                            1217
*                 DO;               /* THEN SET IT UP        @OZ30157*/
*                   PACK(CPXCPU,QUAL(1,1:2));/* PACK IT AND  @OZ30157*/
         PACK  CPXCPU(5),QUAL(2)                                   1219
*                   CVB(I,CPXCPU);  /* PUT IN BINARY FORM    @OZ30157*/
         XC    @TS00001(8),@TS00001                                1220
         MVC   @TS00001+3(5),CPXCPU                                1220
         CVB   @04,@TS00001                                        1220
         STH   @04,I                                               1220
*                   I=I+1;          /* PLUS ONE FOR INDEX    @OZ30157*/
         AL    @04,@CF00047                                        1221
         STH   @04,I                                               1221
*                   I2=I;           /* PUT IN END CNTRL ALSO @OZ30157*/
         STH   @04,I2                                              1222
*                 END;              /* END GOOD QUAL         @OZ30157*/
*             END;                  /* END GET QUALIFIER     @OZ30157*/
@RF01217 DS    0H                                                  1225
*         END;                      /* END GOOD RETC         @OZ30157*/
@RF01212 DS    0H                                                  1226
*       ENDSW=BZERO;                /* TEST SWITCH           @OZ30157*/
@RF01206 NI    ENDSW,B'11111011'                                   1226
*       IF RETC=F0 THEN             /* IF GOOD SO FAR        @OZ30157*/
         LH    @04,RETC                                            1227
         LTR   @04,@04                                             1227
         BNZ   @RF01227                                            1227
*         DO;                       /* THEN KEEP ON          @OZ30157*/
*           DO J=1 TO 2;            /* NOW THROUGH 2 CSFS    @OZ30157*/
         LA    @04,1                                               1229
         STH   @04,J                                               1229
@DL01229 DS    0H                                                  1230
*             DO I=I TO I2;         /* DO UP TO 4 DRCS EACH  @OZ30157*/
         LH    @04,I                                               1230
         B     @DE01230                                            1230
@DL01230 DS    0H                                                  1231
*               PWCS7X=QAPTR(J+2);  /* POINT TO SECT7.CSF    @OZ30157*/
         LH    @15,J                                               1231
         SLA   @15,2                                               1231
         L     @00,QAPTR+4(@15)                                    1231
         ST    @00,PWCS7X                                          1231
*               IF(DRCXST&CONFGMSK(I))^=HEX00 THEN/* IF EXISTS     1232
*                                                            @OZ30157*/
         L     @15,@CA01293                                        1232
         L     @15,MSGPTR-MSGPTR(,@15)                             1232
         L     @14,@CA01312                                        1232
         MVC   @TS00001(1),DRCXST+2(@15)                           1232
         ALR   @14,@04                                             1232
         BCTR  @14,0                                               1232
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@14)                  1232
         CLI   @TS00001,X'00'                                      1232
         BE    @RF01232                                            1232
*                 DO K=1 TO 16;     /* THEN LOOP ALL SAS     @OZ30157*/
         LA    @04,1                                               1233
         STH   @04,K                                               1233
@DL01233 DS    0H                                                  1234
*                   R1=TESTVAL;     /* SET INITIAL BIT       @OZ30157*/
         L     R1,TESTVAL                                          1234
*                   PUNIT=K-1;      /* CALC SHIFT VALUE      @OZ30157*/
         BCTR  @04,0                                               1235
         ST    @04,PUNIT                                           1235
*                   SRL(R1,PUNIT);  /* FIND BIT TO CHECK     @OZ30157*/
         SRL   R1,0(@04)                                           1236
*                   PUNIT=R1;       /* PUT INTO PUNIT        @OZ30157*/
         ST    R1,PUNIT                                            1237
*                   SATST=DRCCON(I)&PUNIT;/* CHECK CONNECT   @OZ30157*/
         L     @04,PUNIT                                           1238
         LH    @15,I                                               1238
         SLA   @15,2                                               1238
         L     @14,PWCS7X                                          1238
         ALR   @14,@15                                             1238
         AL    @14,@CF03609                                        1238
         MVC   @ZT00002+2(2),DRCCON(@14)                           1238
         N     @04,@ZT00002                                        1238
         STH   @04,SATST                                           1238
*                   IF SATST^=F0 THEN/* IF CONNECTION, THEN  @OZ30157*/
         LTR   @04,@04                                             1239
         BZ    @RF01239                                            1239
*                     DO;           /* BUILD ENTRIES         @OZ30157*/
*                       IF ENDSW=BONE THEN/* IF NOT FIRST,   @OZ30157*/
         TM    ENDSW,B'00000100'                                   1241
         BNO   @RF01241                                            1241
*                         CHNADR=TABPTR2;/* CHAIN TO PREV    @OZ30157*/
         L     @04,LVUPTR                                          1242
         MVC   CHNADR(3,@04),TABPTR2+1                             1242
*                       ENDSW=BONE; /* SET FOUND DRC SW      @OZ30157*/
@RF01241 OI    ENDSW,B'00000100'                                   1243
*                       DRCTAB=''B; /* CLEAR THE ENTRY FIRST @OZ30157*/
         L     @04,TABPTR2                                         1244
         XC    DRCTAB(30,@04),DRCTAB(@04)                          1244
*                       DRCSANO=K-1;/* SET SA NUMBER         @OZ30157*/
         LH    @15,K                                               1245
         LR    @00,@15                                             1245
         BCTR  @00,0                                               1245
         STC   @00,DRCSANO(,@04)                                   1245
*                       DRCCSNO=J-1;/* AND CSF NUMBER        @OZ30157*/
         LH    @14,J                                               1246
         LR    @00,@14                                             1246
         BCTR  @00,0                                               1246
         STC   @00,DRCCSNO(,@04)                                   1246
*                       DRCSAID='800';/* ALSO SET INTO THE   @OZ30157*/
         MVC   DRCSAID(3,@04),@CC01468                             1247
*                       DRCSAID2=NUMBRS(K);/* SA NUMBER      @OZ30157*/
         LA    @03,NUMBRS-1(@15)                                   1248
         MVC   DRCSAID2(1,@04),0(@03)                              1248
*                       DRCDRNO=I-1;/* DRC NUMBER            @OZ30157*/
         LH    @15,I                                               1249
         LR    @00,@15                                             1249
         BCTR  @00,0                                               1249
         STC   @00,DRCDRNO(,@04)                                   1249
*                       DRCDRSS='400';/* BUILD THE           @OZ30157*/
         MVC   DRCDRSS(3,@04),@CC01484                             1250
*                       DRCDRSS2=NUMBRS(J);/* CSF AND DRC INTO     1251
*                                                            @OZ30157*/
         LA    @03,NUMBRS-1(@14)                                   1251
         MVC   DRCDRSS2(1,@04),0(@03)                              1251
*                       DRCDRSS3=NUMBRS(I);/* SSID FIELD     @OZ30157*/
         LA    @14,NUMBRS-1(@15)                                   1252
         MVC   DRCDRSS3(1,@04),0(@14)                              1252
*                       DRCEND=TABPTR2;/* SAVE LAST ENTRY ADDR     1253
*                                                            @OZ30157*/
         ST    @04,DRCEND                                          1253
*                       LVUPTR=ADDR(DRCCHN);/* SET FOR CHAIN @OZ30157*/
         ST    @04,LVUPTR                                          1254
*                       TABPTR2=TABPTR2+DRCLEN;/*            @OZ30157*/
         AL    @04,DRCLEN                                          1255
         ST    @04,TABPTR2                                         1255
*                     END;          /* END BUILD ONE ENTRY   @OZ30157*/
*                 END;              /* END SA LOOP           @OZ30157*/
@RF01239 LA    @04,1                                               1257
         AH    @04,K                                               1257
         STH   @04,K                                               1257
         CH    @04,@CH01227                                        1257
         BNH   @DL01233                                            1257
*             END;                  /* END DRC LOOP          @OZ30157*/
@RF01232 LA    @04,1                                               1258
         AH    @04,I                                               1258
         STH   @04,I                                               1258
@DE01230 CH    @04,I2                                              1258
         BNH   @DL01230                                            1258
*           END;                    /* END CSF LOOP          @OZ30157*/
         LA    @04,1                                               1259
         AH    @04,J                                               1259
         STH   @04,J                                               1259
         CH    @04,@CH00056                                        1259
         BNH   @DL01229                                            1259
*           IF ENDSW=BZERO THEN     /* IF DRC NOT FOUND      @OZ30157*/
         TM    ENDSW,B'00000100'                                   1260
         BNZ   @RF01260                                            1260
*             RETC=F1;              /* THEN SAY SO           @OZ30157*/
         MVC   RETC(2),@CH00047                                    1261
*         END;                      /* END GOOD RETC         @OZ30157*/
@RF01260 DS    0H                                                  1263
*       IF RETC=F0 THEN             /* IF GOOD SO FAR        @OZ30157*/
@RF01227 LH    @04,RETC                                            1263
         LTR   @04,@04                                             1263
         BNZ   @RF01263                                            1263
*         DO TABPTR2=DRCPTR TO DRCEND BY DRCLEN;/* INTO ALL  @OZ30157*/
*                                                                  1264
         L     @04,DRCPTR                                          1264
         B     @DE01264                                            1264
@DL01264 DS    0H                                                  1265
*           /*********************************************************/
*           /*                                                       */
*           /* USE SA AND DRC NUMBERS AS INDICES, GET        @OZ30157*/
*           /* STATUS OF SA AND PATHS TO DRDS                @OZ30157*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1265
*           J=DRCSANO//4+1;         /* CALC INDICES          @OZ30157*/
         SLR   @15,@15                                             1265
         IC    @15,DRCSANO(,@04)                                   1265
         LR    @02,@15                                             1265
         SRDA  @02,32                                              1265
         D     @02,@CF00045                                        1265
         AL    @02,@CF00047                                        1265
         STH   @02,J                                               1265
*           PWCS7X=QAPTR(DRCSANO/4+3);/* SECTOR ADDRESS      @OZ30157*/
         SRL   @15,2                                               1266
         SLA   @15,2                                               1266
         L     @00,QAPTR+8(@15)                                    1266
         ST    @00,PWCS7X                                          1266
*           DRCSAST=''B;            /* FIRST CLEAR FLAGS     @OZ30157*/
         MVI   DRCSAST(@04),X'00'                                  1267
*           IF SAFONL(J)=BZERO THEN /* IF OFFLINE            @OZ30157*/
         SLA   @02,2                                               1268
         LR    @03,@00                                             1268
         ALR   @03,@02                                             1268
         TM    SAFONL-4(@03),B'01000000'                           1268
         BNZ   @RF01268                                            1268
*             DRCSAOF=BONE;         /* SAY SO                @OZ30157*/
         OI    DRCSAOF(@04),B'10000000'                            1269
*           IF SAFRDY(J)=BONE THEN  /* IF READY              @OZ30157*/
@RF01268 LH    @04,J                                               1270
         SLA   @04,2                                               1270
         L     @15,PWCS7X                                          1270
         ALR   @15,@04                                             1270
         TM    SAFRDY-4(@15),B'00100000'                           1270
         BNO   @RF01270                                            1270
*             DRCSARDY=BONE;        /* SAY THAT TOO          @OZ30157*/
         L     @04,TABPTR2                                         1271
         OI    DRCSARDY(@04),B'01000000'                           1271
*           ELSE                                                   1272
*             DRCSAVAL=BONE;        /* SUU IS VALID          @OZ30157*/
         B     @RC01270                                            1272
@RF01270 L     @04,TABPTR2                                         1272
         OI    DRCSAVAL(@04),B'00010000'                           1272
*           IF(DRCSAOF=BONE)&(DSPOFF=BONE) THEN/*            @OZ30157*/
@RC01270 L     @04,TABPTR2                                         1273
         TM    DRCSAOF(@04),B'10000000'                            1273
         BNO   @RF01273                                            1273
         L     @15,@CA00041                                        1273
         L     @15,CWBPTR-CWBPTR(,@15)                             1273
         TM    DSPOFF(@15),B'00100000'                             1273
         BNO   @RF01273                                            1273
*             DRCSAVAL=BONE;        /* VALID FOR DISPLAY     @OZ30157*/
         OI    DRCSAVAL(@04),B'00010000'                           1274
*           IF(DRCSAOF=BZERO)&(DSPON=BONE) THEN/*            @OZ30157*/
@RF01273 L     @04,TABPTR2                                         1275
         TM    DRCSAOF(@04),B'10000000'                            1275
         BNZ   @RF01275                                            1275
         L     @15,@CA00041                                        1275
         L     @15,CWBPTR-CWBPTR(,@15)                             1275
         TM    DSPON(@15),B'01000000'                              1275
         BNO   @RF01275                                            1275
*             DRCSAVAL=BONE;        /* VALID FOR DISPLAY     @OZ30157*/
         OI    DRCSAVAL(@04),B'00010000'                           1276
*           PWCS7X=QAPTR(DRCCSNO+3);/* SET SECTOR ADDRESS    @OZ30157*/
@RF01275 L     @04,TABPTR2                                         1277
         SLR   @15,@15                                             1277
         IC    @15,DRCCSNO(,@04)                                   1277
         LR    @14,@15                                             1277
         SLA   @14,2                                               1277
         L     @00,QAPTR+8(@14)                                    1277
         ST    @00,PWCS7X                                          1277
*           K1=DRCDRNO+1;           /* DRC UCB INDEX         @OZ30157*/
         SLR   @00,@00                                             1278
         IC    @00,DRCDRNO(,@04)                                   1278
         AL    @00,@CF00047                                        1278
         STH   @00,K1                                              1278
*           IF CONFGMSK(DRCCSNO+1)=(DRCRDY(K1)&CONFGMSK(DRCCSNO+1))
*             THEN                                                 1279
         L     @14,@CA01312                                        1279
         L     @03,@CA01293                                        1279
         L     @03,MSGPTR-MSGPTR(,@03)                             1279
         ALR   @03,@00                                             1279
         MVC   @TS00001(1),DRCRDY+1(@03)                           1279
         ST    @15,@TF00001                                        1279
         ALR   @15,@14                                             1279
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  1279
         AL    @14,@TF00001                                        1279
         CLC   CONFGMSK-CONFGMSK(1,@14),@TS00001                   1279
         BNE   @RF01279                                            1279
*             DRCDCRDY=BONE;        /* SAY SO                @OZ30157*/
         OI    DRCDCRDY(@04),B'00000100'                           1280
*           IF CONFGMSK(DRCCSNO+1)^=(DRCON(K1)&CONFGMSK(DRCCSNO+1))
*             THEN                                                 1281
@RF01279 L     @04,TABPTR2                                         1281
         SLR   @15,@15                                             1281
         IC    @15,DRCCSNO(,@04)                                   1281
         L     @14,@CA01312                                        1281
         LH    @03,K1                                              1281
         L     @02,@CA01293                                        1281
         L     @02,MSGPTR-MSGPTR(,@02)                             1281
         ALR   @02,@03                                             1281
         MVC   @TS00001(1),DRCON+1(@02)                            1281
         ST    @15,@TF00001                                        1281
         ALR   @15,@14                                             1281
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@15)                  1281
         AL    @14,@TF00001                                        1281
         CLC   CONFGMSK-CONFGMSK(1,@14),@TS00001                   1281
         BE    @RF01281                                            1281
*             DRCDCOF=BONE;         /* SET OFFLINE FLAG      @OZ30157*/
         OI    DRCDCOF(@04),B'00001000'                            1282
*           ELSE                    /* IF ONLINE,            @OZ30157*/
*             IF(DRCSAOF=BONE)×(DRCSARDY=BZERO) THEN               1283
*                                                                  1283
         B     @RC01281                                            1283
@RF01281 L     @04,TABPTR2                                         1283
         TM    DRCSAOF(@04),B'10000000'                            1283
         BNZ   @RT01283                                            1283
         TM    DRCSARDY(@04),B'01000000'                           1283
         BO    @RF01283                                            1283
@RT01283 DS    0H                                                  1284
*               /*****************************************************/
*               /*                                                   */
*               /* IF SA NOT ON & RDY                        @OZ30157*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1284
*               DRCDCNA=BONE;       /* THEN DRC UNAVAIL.     @OZ30157*/
         L     @04,TABPTR2                                         1284
         OI    DRCDCNA(@04),B'00000010'                            1284
*           PTHPTR=ADDR(DRCUCB(K1));/* POINT TO DRC PATHS    @OZ30157*/
@RF01283 DS    0H                                                  1285
@RC01281 LH    @04,K1                                              1285
         SLA   @04,2                                               1285
         L     @15,PWCS7X                                          1285
         LA    @04,DRCUCB-4(@04,@15)                               1285
         ST    @04,PTHPTR                                          1285
*           DO K=1 TO 4;            /* DO ALL 4 POSS DRDS    @OZ30157*/
         LA    @04,1                                               1286
         STH   @04,K                                               1286
@DL01286 DS    0H                                                  1287
*             IF DRCCSNO=0 THEN     /* SET UP BASE FOR DRD   @OZ30157*/
         L     @15,TABPTR2                                         1287
         CLI   DRCCSNO(@15),0                                      1287
         BNE   @RF01287                                            1287
*               DRCDRDAD(K)='20X';  /* SSID                  @OZ30157*/
         SLA   @04,2                                               1288
         ALR   @15,@04                                             1288
         MVC   DRCDRDAD-4(3,@15),@CC03116                          1288
*             ELSE                                                 1289
*               DRCDRDAD(K)='21X';  /*                       @OZ30157*/
         B     @RC01287                                            1289
@RF01287 LH    @04,K                                               1289
         SLA   @04,2                                               1289
         L     @15,TABPTR2                                         1289
         ALR   @15,@04                                             1289
         MVC   DRCDRDAD-4(3,@15),@CC03117                          1289
*             K2=DRCFLGS(K)&'0F'X;  /* INDEX TO PATH UCB     @OZ30157*/
@RC01287 L     @04,PTHPTR                                          1290
         LH    @15,K                                               1290
         LA    @00,15                                              1290
         ALR   @15,@04                                             1290
         BCTR  @15,0                                               1290
         MVC   @ZT00003+3(1),DRCFLGS(@15)                          1290
         N     @00,@ZT00003                                        1290
         STH   @00,K2                                              1290
*             DRCDRDAD(K,3:3)=NUMBRS(K2+1);/* DRD NUMBER AS CHAR   1291
*                                                            @OZ30157*/
         L     @15,TABPTR2                                         1291
         LH    @14,K                                               1291
         LR    @03,@14                                             1291
         SLA   @03,2                                               1291
         ST    @03,@TF00001                                        1291
         ALR   @03,@15                                             1291
         LR    @02,@00                                             1291
         LA    @04,NUMBRS(@02)                                     1291
         MVC   DRCDRDAD-2(1,@03),0(@04)                            1291
*             DRCDRDST(K)=''B;      /* CLEAR STATUS          @OZ30157*/
         LR    @04,@15                                             1292
         AL    @04,@TF00001                                        1292
         MVI   DRCDRDST-4(@04),X'00'                               1292
*             IF DRCFUSA(K)=BONE THEN/* SAME IF READY        @OZ30157*/
         L     @04,PTHPTR                                          1293
         ALR   @04,@14                                             1293
         BCTR  @04,0                                               1293
         TM    DRCFUSA(@04),B'00100000'                            1293
         BNO   @RF01293                                            1293
*               DRCDRDRD(K)=BONE;   /* FLAG IT               @OZ30157*/
         AL    @15,@TF00001                                        1294
         OI    DRCDRDRD-4(@15),B'01000000'                         1294
*             IF DRCFONL(K)=BZERO THEN/* IF PATH IS OFFLINE  @OZ30157*/
@RF01293 LH    @04,K                                               1295
         L     @15,PTHPTR                                          1295
         ALR   @15,@04                                             1295
         BCTR  @15,0                                               1295
         TM    DRCFONL(@15),B'01000000'                            1295
         BNZ   @RF01295                                            1295
*               DRCDRDOF(K)=BONE;   /* SAY SO                @OZ30157*/
         SLA   @04,2                                               1296
         L     @15,TABPTR2                                         1296
         ALR   @15,@04                                             1296
         OI    DRCDRDOF-4(@15),B'10000000'                         1296
*             ELSE                  /* IF ONLINE, THEN       @OZ30157*/
*               IF DRCDCOF=BONE×DRCDCRDY=BZERO×DRCDCNA=BONE THEN   1297
         B     @RC01295                                            1297
@RF01295 L     @04,TABPTR2                                         1297
         TM    DRCDCOF(@04),B'00001010'                            1297
         BNZ   @RT01297                                            1297
         TM    DRCDCRDY(@04),B'00000100'                           1297
         BO    @RF01297                                            1297
@RT01297 DS    0H                                                  1298
*                 DRCDRDNA(K)=BONE; /* FLAG IF NOT AVAIL     @OZ30157*/
         LH    @04,K                                               1298
         SLA   @04,2                                               1298
         L     @15,TABPTR2                                         1298
         ALR   @15,@04                                             1298
         OI    DRCDRDNA-4(@15),B'00100000'                         1298
*           END;                    /* END DRD LOOP          @OZ30157*/
@RF01297 DS    0H                                                  1299
@RC01295 LA    @04,1                                               1299
         AH    @04,K                                               1299
         STH   @04,K                                               1299
         CH    @04,@CH00045                                        1299
         BNH   @DL01286                                            1299
*         END;                      /* END DRC LOOP          @OZ30157*/
         L     @04,TABPTR2                                         1300
         AL    @04,DRCLEN                                          1300
@DE01264 ST    @04,TABPTR2                                         1300
         C     @04,DRCEND                                          1300
         BNH   @DL01264                                            1300
*     END;                          /* READY FOR SDG/DRC     @OZ30157*/
@RF01263 DS    0H                                                  1302
*                                                                  1302
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ANY VALID SDG ENTRIES, SET SWITCHES FOR DISPLAY    @OZ30157*/
*   /* BY LATER CALL TO MSG56H                               @OZ30157*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1302
*   IF DSPSDG=BONE&RETC=F0 THEN     /* IF SDG DISPLAY REQUEST@OZ30157*/
@RF01083 L     @04,@CA00041                                        1302
         L     @04,CWBPTR-CWBPTR(,@04)                             1302
         TM    DSPSDG(@04),B'00010000'                             1302
         BNO   @RF01302                                            1302
         LH    @04,RETC                                            1302
         LTR   @04,@04                                             1302
         BNZ   @RF01302                                            1302
*     DO;                           /* THEN DO IT            @OZ30157*/
*       VALSSID=BONE;               /* SSID SWITCH AND       @OZ30157*/
*       VALCODE=BONE;               /* VALCODE SWITCH        @OZ30157*/
         OI    VALSSID,B'01001000'                                 1305
*     END;                          /* END SDG DISPLAY       @OZ30157*/
*   IF DSPDRC=BONE THEN             /* IF DRC PATH REQUEST   @OZ30157*/
@RF01302 L     @04,@CA00041                                        1307
         L     @04,CWBPTR-CWBPTR(,@04)                             1307
         TM    DSPDRC(@04),B'10000000'                             1307
         BNO   @RF01307                                            1307
*     IF RETC=F0 THEN               /* IF GOOD RUN           @OZ30157*/
         LH    @04,RETC                                            1308
         LTR   @04,@04                                             1308
         BNZ   @RF01308                                            1308
*/********************************************************************/
*/*                                                                  */
*/*  SINCE THE TABLE IS ALREADY BUILT, IF RETURN CODE IS 0           */
*/*     SETUP TO CALL MSG56I TO DO THE DISPLAY.              @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1309
*       DO;                         /* SET SWITCHES          @OZ30157*/
*         VALSSID=BONE;             /* FOR VALID SSID        @OZ30157*/
*         VALCODE=BONE;             /* AND VALID CODE        @OZ30157*/
         OI    VALSSID,B'01001000'                                 1311
*       END;                        /* TO DO DISPLAY         @OZ30157*/
*   RFY                                                            1313
*     R14 RSTD;                     /*                       @OZ30157*/
@RF01308 DS    0H                                                  1313
@RF01307 DS    0H                                                  1314
*   R14=MS56PA14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56PA14                                        1314
*   RFY                                                            1315
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00004 DS    0H                                                  1316
@EF00004 DS    0H                                                  1316
@ER00004 BR    @14                                                 1316
*   END MSG56PA;                    /* END PATHS ROUTINE     @OZ30157*/
*MSG56QC:                                                          1318
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56QC  DS    0H                                                  1319
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56QC                                  @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY ERROR QCB STATUS                       @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: MSC SECTORS 6A, 6B, AND SQT TABLE RECORDS        @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: WTO LINES WITH ERROR QCB STATUS                 @OZ30157*/
*/*                                                          @OZ30157*/
*/* CALLS: MSG56J - DISPLAY QCB STATUS                       @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  1319
*   DCL                                                            1319
*     MS56QC14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            1320
*     QCBAR(64) CHAR(4) BASED(QAPTR(1));/* SECT 6A, 6B       @OZ30157*/
*   DCL                                                            1321
*     QCBLST PTR(31);               /* PTR TO LAST QCB IN SEC@OZ30157*/
*   DCL                                                            1322
*     QCBEPTR PTR(31);              /* PTR TO ERR QCB        @OZ30157*/
*   DCL                                                            1323
*     MHPTR PTR(31);                /* PTR TO MINI-HEADER    @OZ30157*/
*   DCL                                                            1324
*     MHSAPTR PTR(31);              /* PTR TO SA FIELD       @OZ30157*/
*   DCL                                                            1325
*     QCBLEN FIXED(15) CONSTANT(4); /*                       @OZ30157*/
*   DCL                                                            1326
*     1 QCB BASED(QCBPTR),          /* QCB FORMAT            @OZ30157*/
*      2 QCBFLG1 BIT(8),            /*                       @OZ30157*/
*       3 QCBEXC BIT(1),            /*                       @OZ30157*/
*       3 QCBERR BIT(1),            /* THIS QCB IN ERROR     @OZ30157*/
*       3 * BIT(1),                 /*                       @OZ30157*/
*       3 QCBFMVTP BIT(5),          /*                       @OZ30157*/
*      2 QCBMVTP FIXED(8),          /*                       @OZ30157*/
*      2 QCBFLG2 BIT(8),            /*                       @OZ30157*/
*       3 QCBDSQ0 BIT(1),           /* VALID ON DSQ          @OZ30157*/
*       3 * BIT(3),                 /*                       @OZ30157*/
*       3 QCBF2RS BIT(1),           /* RESTART INDICATOR     @OZ30157*/
*       3 QCBCSEQ BIT(1),           /* CARTRIDGE SEQUENCE NUMBER   1326
*                                                            @OZ30157*/
*       3 * BIT(2),                 /*                       @OZ30157*/
*      2 QCBRCOD CHAR(1),           /* RESTART CODE          @OZ30157*/
*       3 QCBRCE BIT(1),            /* RESTART BY CE         @OZ30157*/
*       3 QCBRCC BIT(1),            /* RESTART COPY CART     @OZ30157*/
*       3 QCBRMC BIT(1),            /* RESTART MAN CART ENT  @OZ30157*/
*       3 QCBRDA BIT(1),            /* RESTART V DASD        @OZ30157*/
*       3 QCBRSA BIT(1),            /* RESTART V SA          @OZ30157*/
*       3 QCBRDC BIT(1),            /* RESTART V DRC         @OZ30157*/
*       3 QCBRDD BIT(1),            /* RESTART V DRD         @OZ30157*/
*       3 QCBRCS BIT(1);            /* RESTART V CSF         @OZ30157*/
*   DCL                                                            1327
*     QCBRCODP CHAR(2) DEF(QCBRCOD);/* REDEF FOR UNPACK      @OZ30157*/
*   DCL                                                            1328
*     1 QCBEXT BASED(QCBEPTR),      /* QCB EXTENSION         @OZ30157*/
*       3 QCBXXXX BIT(1);           /*                       @OZ30157*/
*   DCL                                                            1329
*     1 SQTENT BASED(QAPTR(2)),     /* SCHEDULER QUEUE BLOCK @OZ30157*/
*      2 SQTBFLG BIT(8),            /* BLOCK FLAG            @OZ30157*/
*       3 * BIT(5),                 /* NOT USED HERE         @OZ30157*/
*       3 SQTBFSA2 BIT(1),          /* USE SA 2 FOR DRD      @OZ30157*/
*       3 * BIT(2),                 /* NOT USED HERE         @OZ30157*/
*      2 SQTMHPTR FIXED(8),         /* CURRENT MINI-HDR PTR  @OZ30157*/
*      2 SQTBFLG1 BIT(8),           /* FLAGS AND CSID        @OZ30157*/
*      2 SQTBFLG2 BIT(8),           /* FLAG OR SDG INDEX     @OZ30157*/
*       3 SQT2RCL BIT(1),           /* READ CART LABEL       @OZ30157*/
*       3 * BIT(2),                 /* NOT USED              @OZ30157*/
*       3 SQTSDG BIT(5),            /* SDG INDEX             @OZ30157*/
*      2 SQTSA1 CHAR(1),            /* ACCESS TO SA 1        @OZ30157*/
*      2 SQTSA2 CHAR(1),            /* ACCESS TO SA 2        @OZ30157*/
*      2 SQTVVA(2) FIXED(8),        /* VVAS 1 AND 2          @OZ30157*/
*      2 SQTQCB(6) BIT(8),          /* QCB FLAGS             @OZ30157*/
*      2 SQTDRDAD FIXED(8),         /* LOGICAL DRD ADDRESS   @OZ30157*/
*      2 SQTQCBPT FIXED(8),         /* QCB POINTER           @OZ30157*/
*      2 SQTCVOL CHAR(6),           /* CARTRIDGE VOLID       @OZ30157*/
*      2 SQTLZYX CHAR(2),           /* LZYX                  @OZ30157*/
*       3 SQLZYXC1 CHAR(1),         /* FIRST CHARACTER       @OZ30157*/
*       3 SQLZYXC2 CHAR(1),         /* SECOND CHARACTER      @OZ30157*/
*      2 SQTNU CHAR(8),             /* NOT USED HERE         @OZ30157*/
*      2 SQTMHDRS CHAR(224);        /* MINI-HEADERS          @OZ30157*/
*   DCL                                                            1330
*     1 MHDR BASED(MHPTR),          /* MINI-HEADER MAP       @OZ30157*/
*      2 MHSEQ FIXED(8),            /* SEQUENCE              @OZ30157*/
*      2 MHF1 BIT(8),               /* FLAGS                 @OZ30157*/
*       3 MHF1B0 BIT(1),            /* STAGING OR NOT        @OZ30157*/
*       3 MHF1B1 BIT(1),            /* SA TYPE OR NOT        @OZ30157*/
*       3 * BIT(4),                 /* NOT USED HERE         @OZ30157*/
*       3 MHF1B6 BIT(1),            /* IORB TYPE             @OZ30157*/
*       3 MHF1B7 BIT(1),            /* IORB TYPE             @OZ30157*/
*      2 * CHAR(6),                 /* NOT USED HERE         @OZ30157*/
*      2 MHIOLUA CHAR(1),           /* LUA IF IORB TYPE      @OZ30157*/
*      2 * CHAR(5),                 /* NOT USED HERE         @OZ30157*/
*      2 MHPLNDX FIXED(8);          /* ACTIVE PAGE LIST INDEX@OZ30157*/
*   DCL                                                            1331
*     MHSALUA CHAR(1) BASED(MHSAPTR);/* PAGE LIST            @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* INTERNAL VARIABLES, CONSTANTS, AND WORK AREAS            @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1332
*   DCL                                                            1332
*     1 LZYXCALC BDY(WORD),         /* LZYX CALC AREA        @OZ30157*/
*      2 LCALC FIXED(15),           /* SAVE L VALUE          @OZ30157*/
*       3 LCALCC CHAR(2),           /* REDEF IN CHARACTER    @OZ30157*/
*        4 * CHAR(1),               /* NOT USED BY NAME      @OZ30157*/
*        4 LCALCC2 CHAR(1),         /* REDEF LOW ORDER BYTE  @OZ30157*/
*         5 * BIT(7),               /* NOT USED              @OZ30157*/
*         5 LCALCB7 BIT(1),         /* BIT 7 OF SDG          @OZ30157*/
*      2 ZCALC FIXED(15),           /* Z CALC AREA           @OZ30157*/
*       3 ZCALCC CHAR(2),           /*                       @OZ30157*/
*        4 * CHAR(1),               /*                       @OZ30157*/
*        4 ZCALCC2 CHAR(1),         /*                       @OZ30157*/
*      2 YCALC FIXED(15),           /* SAVE Y VALUE          @OZ30157*/
*       3 YCALCC CHAR(2),           /*                       @OZ30157*/
*        4 * CHAR(1),               /*                       @OZ30157*/
*        4 YCALCC2 CHAR(1),         /*                       @OZ30157*/
*      2 XCALC FIXED(15),           /* SAVE X VALUE          @OZ30157*/
*       3 XCALCC CHAR(2),           /* REDEF AS CHARACTERS   @OZ30157*/
*        4 * CHAR(1),               /*                       @OZ30157*/
*        4 XCALCC2 CHAR(1);         /* REDEF LOW ORDER       @OZ30157*/
*   DCL                                                            1333
*     LZYXFX(4) FIXED(15) DEF(LZYXCALC) POS(1);/*            @OZ30157*/
*   DCL                                                            1334
*     LZYXCP(4) CHAR(2);            /* PACKED VERSIONS       @OZ30157*/
*   DCL                                                            1335
*     LZYXCU(4) CHAR(4);            /* UNPACKED VERSIONS     @OZ30157*/
*   RFY                                                            1336
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56QC14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56QC14                                        1337
*   RFY                                                            1338
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETC=F0;                        /* SET RETURN CODE       @OZ30157*/
         SLR   @04,@04                                             1339
         STH   @04,RETC                                            1339
*   QCTPTR=F0;                      /* CLEAR QCTPTR          @OZ30157*/
         ST    @04,QCTPTR                                          1340
*   QCTEND=F0;                      /* AND QCTEND            @OZ30157*/
         ST    @04,QCTEND                                          1341
*   R1=ADDR(QCTPTR);                /* POINT TO ADDRESS      @OZ30157*/
         LA    R1,QCTPTR                                           1342
*   CALL MSG56F;                    /* GO GET STORAGE        @OZ30157*/
         BAL   @14,MSG56F                                          1343
*   IF RETC=0 THEN                  /* IF GOOD GETMAIN       @OZ30157*/
         LH    @04,RETC                                            1344
         LTR   @04,@04                                             1344
         BNZ   @RF01344                                            1344
*     DO;                           /* SAVE R1 IN CHAINADR   @OZ30157*/
*       TABPTR=QCTPTR;              /* TABPTR TO START       @OZ30157*/
         L     @04,QCTPTR                                          1346
         ST    @04,TABPTR                                          1346
*       QCTEND=TABPTR+1512;         /* RESET ENDPTR          @OZ30157*/
         AH    @04,@CH03211                                        1347
         ST    @04,QCTEND                                          1347
*       VALSSID=BZERO;              /* INSURE VALSSID AND    @OZ30157*/
*       ENDSW=BZERO;                /* ENDSW ARE OFF         @OZ30157*/
         NI    VALSSID,B'10111011'                                 1349
*     END;                          /* END OF GETMAIN GOOD   @OZ30157*/
*   DO I=1 TO 2 WHILE(RETC=F0);     /* AND GO TO IT          @OZ30157*/
@RF01344 LA    @04,1                                               1351
         STH   @04,I                                               1351
@DL01351 LH    @00,RETC                                            1351
         LTR   @00,@00                                             1351
         BNZ   @DC01351                                            1351
*     QAPTR(1)=ADDR(QUBUF1);        /* FIRST QUERY ADDRESS   @OZ30157*/
         LA    @00,44                                              1352
         AL    @00,WORKPTR                                         1352
         ST    @00,QAPTR                                           1352
*     QBCNT=F1;                     /* ONE QUERY FOR         @OZ30157*/
         MVC   QBCNT(4),@CF00047                                   1353
*     QBENT(1)=QBW6A;               /* SECTOR 6A (FIRST PASS)@OZ30157*/
         MVI   QBENT+12,C' '                                       1354
         MVC   QBENT+13(31),QBENT+12                               1354
         MVC   QBENT(12),QBW6A                                     1354
*     IF I=2 THEN                   /*                       @OZ30157*/
         CH    @04,@CH00056                                        1355
         BNE   @RF01355                                            1355
*       QBSECT(1)='6B'X;            /* OR SECT 6B (SECOND)   @OZ30157*/
         MVI   QBSECT,X'6B'                                        1356
*     CALL MSG56GQ;                 /* ISSUE QUERY           @OZ30157*/
@RF01355 BAL   @14,MSG56GQ                                         1357
*     QCBPTR=ADDR(QCBAR(1));        /* SET QCB POINTER       @OZ30157*/
         L     @04,QAPTR                                           1358
         ST    @04,QCBPTR                                          1358
*     QCBLST=ADDR(QCBAR(64));       /* SET LOOP END POINTER  @OZ30157*/
         LA    @00,QCBAR+252(,@04)                                 1359
         ST    @00,QCBLST                                          1359
*     LVUPTR=ADDR(QCTCHAIN)-1;      /* DUMMY FIRST CHAIN     @OZ30157*/
         L     @15,TABPTR                                          1360
         LA    @00,QCTCHAIN(,@15)                                  1360
         BCTR  @00,0                                               1360
         ST    @00,LVUPTR                                          1360
*     DO QCBPTR=QCBPTR TO QCBLST BY QCBLEN;/* QCB LOOP       @OZ30157*/
         B     @DE01361                                            1361
@DL01361 DS    0H                                                  1362
*       IF QCBERR=BONE THEN         /* IF THIS ONE IN ERR    @OZ30157*/
         TM    QCBERR(@04),B'01000000'                             1362
         BNO   @RF01362                                            1362
*         DO;                       /* EXTRACT IT            @OZ30157*/
*                                                                  1363
*           /*********************************************************/
*           /*                                                       */
*           /* BUILD QTAB ENTRY                              @OZ30157*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1364
*           IF ENDSW=BONE THEN      /* IF NOT FIRST, CHAIN   @OZ30157*/
         TM    ENDSW,B'00000100'                                   1364
         BNO   @RF01364                                            1364
*             CHNADR=TABPTR;        /* TO PREVIOUS ENTRY     @OZ30157*/
         L     @04,LVUPTR                                          1365
         MVC   CHNADR(3,@04),TABPTR+1                              1365
*           ENDSW=BONE;             /* SAY ONE FOUND         @OZ30157*/
@RF01364 OI    ENDSW,B'00000100'                                   1366
*           IF TABPTR>QCTEND THEN   /* OOPS, NEED MORE       @OZ30157*/
         CLC   TABPTR(4),QCTEND                                    1367
         BNH   @RF01367                                            1367
*             DO;                   /* GET SOME              @OZ30157*/
*               CHAIN=F0;           /* INSURE ZERO ADDRESS   @OZ30157*/
         L     @04,LVUPTR                                          1369
         SLR   @00,@00                                             1369
         ST    @00,CHAIN(,@04)                                     1369
*               R1=LVUPTR;          /* POINT TO ADDRESS      @OZ30157*/
         LR    R1,@04                                              1370
*               CALL MSG56F;        /* GO GET STORAGE        @OZ30157*/
         BAL   @14,MSG56F                                          1371
*               IF RETC=F0 THEN     /* IF GOOD GETMAIN       @OZ30157*/
         LH    @04,RETC                                            1372
         LTR   @04,@04                                             1372
         BNZ   @RF01372                                            1372
*                 DO;               /* SAVE R1 IN CHAINADR   @OZ30157*/
*                   QCTEND=TABPTR+1512;/* RESET ENDPTR       @OZ30157*/
         LA    @04,1512                                            1374
         AL    @04,TABPTR                                          1374
         ST    @04,QCTEND                                          1374
*                 END;              /* END OF GETMAIN GOOD   @OZ30157*/
*             END;                  /* END OF GETMAIN RTN    @OZ30157*/
@RF01372 DS    0H                                                  1377
*/********************************************************************/
*/*                                                                  */
*/* GET SCHEDULE QUEUE BLOCK                                 @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1377
*           QCTENT=''B;             /* CLEAR THE ENTRY       @OZ30157*/
@RF01367 L     @04,TABPTR                                          1377
         XC    QCTENT(24,@04),QCTENT(@04)                          1377
*           QCTNO=QCBPTR-QAPTR(1);  /* CALC QCB NUMBER       @OZ30157*/
         L     @15,QCBPTR                                          1378
         LR    @00,@15                                             1378
         SL    @00,QAPTR                                           1378
         STC   @00,QCTNO(,@04)                                     1378
*           UNPK(QCTRCODU,QCBRCODP);/* RESTART CODE          @OZ30157*/
         UNPK  QCTRCODU(3,@04),QCBRCODP(2,@15)                     1379
*           TR(QCTRCOD,TRANS);      /* TO PRINTABLE FORM     @OZ30157*/
         TR    QCTRCOD(2,@04),TRANS                                1380
*           QCTCHAIN=F0;            /*                       @OZ30157*/
         SLR   @15,@15                                             1381
         ST    @15,@TF00001                                        1381
         MVC   QCTCHAIN(3,@04),@TF00001+1                          1381
*           QBCNT=QBDSECNT;         /* DO ONE QUERY          @OZ30157*/
         SLR   @04,@04                                             1382
         IC    @04,QBDSECNT                                        1382
         ST    @04,QBCNT                                           1382
*           QBENT(1)=QBDSQ;         /* SET QUERY PARMS       @OZ30157*/
         MVI   QBENT+12,C' '                                       1383
         MVC   QBENT+13(31),QBENT+12                               1383
         MVC   QBENT(12),QBDSQ                                     1383
*           QBVAR2(1)=QCTNO;        /* SET QCB INDEX         @OZ30157*/
         STC   @00,QBVAR2                                          1384
*           CALL MSG56GQ;           /* GO GET SQT ENTRY      @OZ30157*/
         BAL   @14,MSG56GQ                                         1385
*           IF RETC=F0 THEN         /* IF GOOD RETURN CODE   @OZ30157*/
         LH    @04,RETC                                            1386
         LTR   @04,@04                                             1386
         BNZ   @RF01386                                            1386
*             DO;                   /* THEN PROCESS IT       @OZ30157*/
*               IF SQTCVOL^=NULLS&SQTCVOL^=BLKS THEN/*       @OZ30157*/
         L     @04,QAPTR+4                                         1388
         CLC   SQTCVOL(6,@04),NULLS                                1388
         BE    @RF01388                                            1388
         CLC   SQTCVOL(6,@04),@CC01404                             1388
         BE    @RF01388                                            1388
*                 DO;               /*                       @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* TRANSLATE LZYX FIELD FOR PRINTING                        @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1390
*                   QCTCVOL=SQTCVOL;/* PUT IN VOLID          @OZ30157*/
         L     @15,TABPTR                                          1390
         MVC   QCTCVOL(6,@15),SQTCVOL(@04)                         1390
*                   IF QCBCSEQ=BZERO THEN/* IF FIRST CARTR.  @OZ30157*/
         L     @04,QCBPTR                                          1391
         TM    QCBCSEQ(@04),B'00000100'                            1391
         BNZ   @RF01391                                            1391
*                     QCTCSEQ='1';  /* SAY SO IN DSPLY       @OZ30157*/
         MVI   QCTCSEQ(@15),C'1'                                   1392
*                   ELSE            /* ELSE IS               @OZ30157*/
*                     QCTCSEQ='2';  /* SECOND ONE            @OZ30157*/
         B     @RC01391                                            1393
@RF01391 L     @04,TABPTR                                          1393
         MVI   QCTCSEQ(@04),C'2'                                   1393
*                   DO I=1 TO 4;    /* CLEAR WORK AREAS      @OZ30157*/
@RC01391 LA    @04,1                                               1394
         STH   @04,I                                               1394
@DL01394 DS    0H                                                  1395
*                     LZYXFX(I)=F0; /* TO ZERO VALUES        @OZ30157*/
         LR    @15,@04                                             1395
         ALR   @15,@15                                             1395
         SLR   @00,@00                                             1395
         STH   @00,LZYXFX-2(@15)                                   1395
*                   END;            /*                       @OZ30157*/
         AL    @04,@CF00047                                        1396
         STH   @04,I                                               1396
         CH    @04,@CH00045                                        1396
         BNH   @DL01394                                            1396
*                   LCALCC2=SQLZYXC1&'C0'X;/* GET L VALUE    @OZ30157*/
         L     @04,QAPTR+4                                         1397
         MVC   LCALCC2(1),SQLZYXC1(@04)                            1397
         NI    LCALCC2,X'C0'                                       1397
*                   XCALCC2=SQLZYXC2;/* X VALUE              @OZ30157*/
         MVC   XCALCC2(1),SQLZYXC2(@04)                            1398
*                   YCALCC2=SQLZYXC1&'1F'X;/* Y VALUE        @OZ30157*/
         MVC   YCALCC2(1),SQLZYXC1(@04)                            1399
         NI    YCALCC2,X'1F'                                       1399
*                   ZCALCC2=SQLZYXC1&'20'X;/* Z VALUE        @OZ30157*/
         MVC   ZCALCC2(1),SQLZYXC1(@04)                            1400
         NI    ZCALCC2,X'20'                                       1400
*                   LCALC=LCALC/64; /* SHIFT TO LOW ORDER    @OZ30157*/
         LH    @02,LCALC                                           1401
         SRDA  @02,32                                              1401
         D     @02,@CF01346                                        1401
         STH   @03,LCALC                                           1401
*                   ZCALC=ZCALC/32; /* SHIFT TO LOW ORDER    @OZ30157*/
         LH    @02,ZCALC                                           1402
         SRDA  @02,32                                              1402
         D     @02,@CF00291                                        1402
         STH   @03,ZCALC                                           1402
*                   DO I=1 TO 4;    /* CONVERT ALL 4         @OZ30157*/
         LA    @04,1                                               1403
         STH   @04,I                                               1403
@DL01403 DS    0H                                                  1404
*                     CVD(LZYXFX(I),LZYXCP(I));/* TO DECIMAL @OZ30157*/
         LR    @15,@04                                             1404
         ALR   @15,@15                                             1404
         LH    @00,LZYXFX-2(@15)                                   1404
         CVD   @00,@TS00001                                        1404
         LA    @14,LZYXCP-2(@15)                                   1404
         MVC   0(2,@14),@TS00001+6                                 1404
*                     UNPK(LZYXCU(I),LZYXCP(I));/* AND UNPACK      1405
*                                                            @OZ30157*/
         LR    @14,@04                                             1405
         SLA   @14,2                                               1405
         LA    @03,LZYXCU-4(@14)                                   1405
         LA    @02,LZYXCP-2(@15)                                   1405
         UNPK  0(4,@03),0(2,@02)                                   1405
*                     LZYXCU(I)=LZYXCU(I)×ZEROS4;/* CLEAR          1406
*                                      ZONES@OZ30157                 */
         LA    @15,LZYXCU-4(@14)                                   1406
         OC    0(4,@15),@CC01402                                   1406
*                   END;            /* LOOP 4 TIMES          @OZ30157*/
         AL    @04,@CF00047                                        1407
         STH   @04,I                                               1407
         CH    @04,@CH00045                                        1407
         BNH   @DL01403                                            1407
*                   QCTLVAL=LZYXCU(1,4:4);/* ONE BYTE L VALUE      1408
*                                                            @OZ30157*/
         L     @04,TABPTR                                          1408
         MVC   QCTLVAL(1,@04),LZYXCU+3                             1408
*                   QCTXVAL=LZYXCU(4,2:4);/* 3 BYTE X VALUE  @OZ30157*/
         MVC   QCTXVAL(3,@04),LZYXCU+13                            1409
*                   QCTYVAL=LZYXCU(3,3:4);/* 2 BYTE Y VALUE  @OZ30157*/
         MVC   QCTYVAL(2,@04),LZYXCU+10                            1410
*                   QCTZVAL=LZYXCU(2,4:4);/* 1 BYTE Z VALUE  @OZ30157*/
         MVC   QCTZVAL(1,@04),LZYXCU+7                             1411
*                 END;              /*                       @OZ30157*/
*               ELSE                /*                       @OZ30157*/
*                 DO;               /* CALCULATE SSID        @OZ30157*/
         B     @RC01388                                            1413
@RF01388 DS    0H                                                  1414
*/********************************************************************/
*/*                                                                  */
*/* CALCULATE SSID OF DEVICE IN ERROR PER QCB AND SQT        @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1414
*                   IF QCBRCE=BZERO&QCBRCC=BZERO&QCBRMC=BZERO THEN/*
*                                                            @OZ30157*/
         L     @04,QCBPTR                                          1414
         TM    QCBRCE(@04),B'11100000'                             1414
         BNZ   @RF01414                                            1414
*                     IF QCBRDA=BONE THEN/* IF DASD          @OZ30157*/
         TM    QCBRDA(@04),B'00010000'                             1415
         BNO   @RF01415                                            1415
*                       DO;         /* SET DASD SSID         @OZ30157*/
*                         QCTSSID='00X';/* INIT VALUE        @OZ30157*/
         L     @04,TABPTR                                          1417
         MVC   QCTSSID(3,@04),@CC03216                             1417
*                         LCALC=F0; /* CLEAR WORK AREAS      @OZ30157*/
         SLR   @04,@04                                             1418
         STH   @04,LCALC                                           1418
*                         ZCALC=F0; /*                       @OZ30157*/
         STH   @04,ZCALC                                           1419
*                         LCALCC2=SQTBFLG2&'1F'X;/* GET SDG  @OZ30157*/
         L     @04,QAPTR+4                                         1420
         MVC   LCALCC2(1),SQTBFLG2(@04)                            1420
         NI    LCALCC2,X'1F'                                       1420
*                         IF LCALCB7=BONE THEN/*             @OZ30157*/
         TM    LCALCB7,B'00000001'                                 1421
         BNO   @RF01421                                            1421
*                           YCALC=F8;/* SET HIGH ORDER       @OZ30157*/
         MVC   YCALC(2),@CH00036                                   1422
*                         ELSE      /* IF SDG UNITS ON       @OZ30157*/
*                           YCALC=F0;/* OFF IF OFF           @OZ30157*/
         B     @RC01421                                            1423
@RF01421 SLR   @04,@04                                             1423
         STH   @04,YCALC                                           1423
*                         LCALC=LCALC/2;/* DROP LOW ORD. BIT @OZ30157*/
@RC01421 LH    @02,LCALC                                           1424
         SRDA  @02,32                                              1424
         D     @02,@CF00056                                        1424
         STH   @03,LCALC                                           1424
*                         QCTSSID(2:2)=LCALCC2&'0F'X;/* FOR  @OZ30157*/
         L     @04,TABPTR                                          1425
         MVC   QCTSSID+1(1,@04),LCALCC2                            1425
         NI    QCTSSID+1(@04),X'0F'                                1425
*                         MHPTR=QAPTR(2)+SQTMHPTR;/* MH ADDR @OZ30157*/
         L     @04,QAPTR+4                                         1426
         SLR   @00,@00                                             1426
         IC    @00,SQTMHPTR(,@04)                                  1426
         ALR   @00,@04                                             1426
         ST    @00,MHPTR                                           1426
*                         IF MHF1B1=BZERO THEN/* IF SA TYPE  @OZ30157*/
         LR    @04,@00                                             1427
         TM    MHF1B1(@04),B'01000000'                             1427
         BNZ   @RF01427                                            1427
*                           IF MHF1B6=BZERO&MHF1B7=BZERO THEN/*    1428
*                                                            @OZ30157*/
         LR    @04,@00                                             1428
         TM    MHF1B6(@04),B'00000011'                             1428
         BNZ   @RF01428                                            1428
*                             DO;   /* GET LUA IN ERROR      @OZ30157*/
*                               MHSAPTR=MHPTR+MHPLNDX;/*     @OZ30157*/
         LR    @04,@00                                             1430
         SLR   @15,@15                                             1430
         IC    @15,MHPLNDX(,@04)                                   1430
         ALR   @15,@00                                             1430
         ST    @15,MHSAPTR                                         1430
*                               ZCALCC2=MHSALUA&'07'X;/*     @OZ30157*/
         MVC   ZCALCC2(1),MHSALUA(@15)                             1431
         NI    ZCALCC2,X'07'                                       1431
*                             END;  /*                       @OZ30157*/
*                           ELSE    /* IF IORB TYPE, GET LUA @OZ30157*/
*                             ZCALCC2=MHIOLUA&'07'X;/* FIELD @OZ30157*/
         B     @RC01428                                            1433
@RF01428 L     @04,MHPTR                                           1433
         MVC   ZCALCC2(1),MHIOLUA(@04)                             1433
         NI    ZCALCC2,X'07'                                       1433
*                         ELSE                                     1434
*                           ;       /* LEAVE AS ZERO         @OZ30157*/
@RF01427 DS    0H                                                  1435
*                         ZCALC=ZCALC+YCALC;/* GET SSID UNITS      1435
*                                                            @OZ30157*/
@RC01427 LH    @04,ZCALC                                           1435
         AH    @04,YCALC                                           1435
         STH   @04,ZCALC                                           1435
*                         QCTSSID(3:3)=ZCALCC2&'0F'X;/*      @OZ30157*/
         L     @04,TABPTR                                          1436
         MVC   QCTSSID+2(1,@04),ZCALCC2                            1436
         NI    QCTSSID+2(@04),X'0F'                                1436
*                         TR(QCTSSID(2:3),NUMBRS);/* SSID    @OZ30157*/
         TR    QCTSSID+1(2,@04),NUMBRS                             1437
*                       END;        /* DASD SSID SET         @OZ30157*/
*                     ELSE          /* NOT DASD              @OZ30157*/
*                       IF QCBRSA=BONE THEN/* IS IT SA       @OZ30157*/
         B     @RC01415                                            1439
@RF01415 L     @04,QCBPTR                                          1439
         TM    QCBRSA(@04),B'00001000'                             1439
         BNO   @RF01439                                            1439
*                         DO;       /* YES                   @OZ30157*/
*                           QCTSSID='800';/* SET SA BASE SSID      1441
*                                                            @OZ30157*/
         L     @04,TABPTR                                          1441
         MVC   QCTSSID(3,@04),@CC01468                             1441
*                           QCTSSID(2:2)=SQTSA1&'0F'X;/* SA NO     1442
*                                                            @OZ30157*/
         L     @15,QAPTR+4                                         1442
         MVC   QCTSSID+1(1,@04),SQTSA1(@15)                        1442
         NI    QCTSSID+1(@04),X'0F'                                1442
*                           TR(QCTSSID(2:2),NUMBRS);/* ADJUST      1443
*                                                            @OZ30157*/
         TR    QCTSSID+1(1,@04),NUMBRS                             1443
*                         END;      /* SA SSID SET           @OZ30157*/
*                       ELSE        /* NOT SA, IS IT         @OZ30157*/
*                         IF QCBRDC=BONE THEN/* A DRC        @OZ30157*/
         B     @RC01439                                            1445
@RF01439 L     @04,QCBPTR                                          1445
         TM    QCBRDC(@04),B'00000100'                             1445
         BNO   @RF01445                                            1445
*                           DO;     /* YES, SET              @OZ30157*/
*                             QCTSSID='4XX';/* BASE VALUE    @OZ30157*/
         L     @04,TABPTR                                          1447
         MVC   QCTSSID(3,@04),@CC03217                             1447
*                             QCTSSID(2:2)=SQTBFLG&'03'X;/*        1448
*                                      MSF@OZ30157                   */
         L     @15,QAPTR+4                                         1448
         MVC   QCTSSID+1(1,@04),SQTBFLG(@15)                       1448
         NI    QCTSSID+1(@04),X'03'                                1448
*                             QCTSSID(2:2)=QCTSSID(2:2)×'0';/*     1449
*                                                            @OZ30157*/
         OI    QCTSSID+1(@04),C'0'                                 1449
*                           END;    /* DRC SSID SET          @OZ30157*/
*                         ELSE      /*                       @OZ30157*/
*                           IF QCBRDD=BONE THEN/* IF DRD     @OZ30157*/
         B     @RC01445                                            1451
@RF01445 L     @04,QCBPTR                                          1451
         TM    QCBRDD(@04),B'00000010'                             1451
         BNO   @RF01451                                            1451
*                             DO;   /* THEN CALC THAT ONE    @OZ30157*/
*                               QCTSSID='2XX';/* SET BASE    @OZ30157*/
         L     @04,TABPTR                                          1453
         MVC   QCTSSID(3,@04),@CC03218                             1453
*                               QCTSSID(2:2)=SQTBFLG1&'03'X;/*     1454
*                                                            @OZ30157*/
         L     @15,QAPTR+4                                         1454
         MVC   QCTSSID+1(1,@04),SQTBFLG1(@15)                      1454
         NI    QCTSSID+1(@04),X'03'                                1454
*                               QCTSSID(3:3)=SQTDRDAD;/*     @OZ30157*/
         MVC   QCTSSID+2(1,@04),SQTDRDAD(@15)                      1455
*                               QCTSSID=QCTSSID×'000';/*     @OZ30157*/
         OC    QCTSSID(3,@04),@CC01500                             1456
*                             END;  /* END DRD SSID          @OZ30157*/
*                           ELSE    /* IS IT CSF             @OZ30157*/
*                             IF QCBRCS=BONE THEN/* YES      @OZ30157*/
         B     @RC01451                                            1458
@RF01451 L     @04,QCBPTR                                          1458
         TM    QCBRCS(@04),B'00000001'                             1458
         BNO   @RF01458                                            1458
*                               DO; /* DO THAT ONE           @OZ30157*/
*                                 QCTSSID='1XX';/* BASE VAL  @OZ30157*/
         L     @04,TABPTR                                          1460
         MVC   QCTSSID(3,@04),@CC03219                             1460
*                                 QCTSSID(2:2)=SQTBFLG1&'03'X;/*   1461
*                                                            @OZ30157*/
         L     @15,QAPTR+4                                         1461
         MVC   QCTSSID+1(1,@04),SQTBFLG1(@15)                      1461
         NI    QCTSSID+1(@04),X'03'                                1461
*                                 QCTSSID(2:2)=QCTSSID(2:2)×'0';/* 1462
*                                                            @OZ30157*/
         OI    QCTSSID+1(@04),C'0'                                 1462
*                               END;/*                       @OZ30157*/
*                             ELSE  /* NONE OF ABOVE         @OZ30157*/
*                               QCTSSID='   ';/* NONE        @OZ30157*/
         B     @RC01458                                            1464
@RF01458 L     @04,TABPTR                                          1464
         MVC   QCTSSID(3,@04),@CC03112                             1464
*                 END;              /* END GOOD SQT RTN      @OZ30157*/
@RC01458 DS    0H                                                  1465
@RC01451 DS    0H                                                  1465
@RC01445 DS    0H                                                  1465
@RC01439 DS    0H                                                  1465
@RC01415 DS    0H                                                  1465
@RF01414 DS    0H                                                  1466
*               LVUPTR=ADDR(QCTCHAIN)-1;/* SET ADDRESS FOR CHAIN   1466
*                                                            @OZ30157*/
@RC01388 L     @04,TABPTR                                          1466
         LA    @00,QCTCHAIN(,@04)                                  1466
         BCTR  @00,0                                               1466
         ST    @00,LVUPTR                                          1466
*               TABPTR=TABPTR+QCTLEN;/* BUMP TABPTR TO NEXT  @OZ30157*/
         AH    @04,@CH00049                                        1467
         ST    @04,TABPTR                                          1467
*             END;                  /* END GOOD RETC         @OZ30157*/
*         END;                      /* END ONE QCB LOOP      @OZ30157*/
@RF01386 DS    0H                                                  1470
*     END;                          /* END SECTOR LOOP       @OZ30157*/
@RF01362 LA    @04,4                                               1470
         AL    @04,QCBPTR                                          1470
         ST    @04,QCBPTR                                          1470
@DE01361 C     @04,QCBLST                                          1470
         BNH   @DL01361                                            1470
*   END;                            /* END BOTH SECTORS      @OZ30157*/
         LA    @04,1                                               1471
         AH    @04,I                                               1471
         STH   @04,I                                               1471
         CH    @04,@CH00056                                        1471
         BNH   @DL01351                                            1471
@DC01351 DS    0H                                                  1472
*   IF RETC=F0 THEN                 /* IF GOOD RUN           @OZ30157*/
         LH    @04,RETC                                            1472
         LTR   @04,@04                                             1472
         BNZ   @RF01472                                            1472
*     DO;                           /* SETUP TO DISPLAY THE  @OZ30157*/
*       VALCODE=BONE;               /* MESSAGE AND IF        @OZ30157*/
         OI    VALCODE,B'00001000'                                 1474
*       IF ENDSW=BONE THEN          /* ANY ERR FOUND, TO     @OZ30157*/
         TM    ENDSW,B'00000100'                                   1475
         BNO   @RF01475                                            1475
*         VALSSID=BONE;             /* DISPLAY THE TABLE     @OZ30157*/
         OI    VALSSID,B'01000000'                                 1476
*     END;                          /* END CHECK RESULTS     @OZ30157*/
@RF01475 DS    0H                                                  1478
*   RFY                                                            1478
*     R14 RSTD;                     /*                       @OZ30157*/
@RF01472 DS    0H                                                  1479
*   R14=MS56QC14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56QC14                                        1479
*   RFY                                                            1480
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00005 DS    0H                                                  1481
@EF00005 DS    0H                                                  1481
@ER00005 BR    @14                                                 1481
*   END MSG56QC;                    /* END QCB STAT ROUTINE  @OZ30157*/
*MSG56TR:                                                          1483
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56TR  DS    0H                                                  1484
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME: MSG56TR                                          */
*/*                                                                  */
*/* FUNCTION: DISPLAY TRACE STATUS                                   */
*/*                                                                  */
*/* INPUTS: MSC SECTOR 57                                            */
*/*                                                                  */
*/* OUTPUTS: ONE WTO LINE WITH TRACE STATUS                  @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1484
*   DCL                                                            1484
*     MS56TR14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            1485
*     1 TRCCHK BASED(QAPTR(1)),     /* TRACE CHECK AREA IN WCS 57  1485
*                                                            @OZ30157*/
*      2 TRCCHKA BIT(8),            /*                       @OZ30157*/
*       3 TRCACT BIT(1),            /* TRACE IS ACTIVE       @OZ30157*/
*       3 TRCXACT BIT(1),           /* TRACE X IS ACTIVE     @OZ30157*/
*       3 TRCXX1 BIT(6),            /* NOT USED HERE         @OZ30157*/
*      2 TRCCHR FIXED(24),          /* NEXT REC TO BE WRITTEN      1485
*                                                            @OZ30157*/
*       3 TRCNC FIXED(8),           /* CYL NO                @OZ30157*/
*       3 TRCNH FIXED(8),           /* HEAD NO               @OZ30157*/
*       3 TRCNR FIXED(8);           /* RECORD NO             @OZ30157*/
*   DCL                                                            1486
*     1 TRCCHRS BASED(QAPTR(2)),    /* CHRS FOR TRACE RECS   @OZ30157*/
*      2 * CHAR(64),                /*                       @OZ30157*/
*      2 * FIXED(32),               /* END OF X AREA         @OZ30157*/
*       3 * FIXED(8),               /* FLAGS- NOT USED HERE  @OZ30157*/
*       3 TRCEXC FIXED(8),          /* CYL                   @OZ30157*/
*       3 TRCEXH FIXED(8),          /* HEAD                  @OZ30157*/
*       3 TRCEXR FIXED(8),          /* REC                   @OZ30157*/
*      2 * FIXED(32),               /* END OF Y AREA         @OZ30157*/
*       3 * FIXED(8),               /* FLAGS- NOT USED HERE  @OZ30157*/
*       3 TRCEYC FIXED(8),          /* CYL                   @OZ30157*/
*       3 TRCEYH FIXED(8),          /* HEAD                  @OZ30157*/
*       3 TRCEYR FIXED(8),          /* REC                   @OZ30157*/
*      2 * FIXED(32),               /* START OF X AREA       @OZ30157*/
*       3 * FIXED(8),               /* FLAGS- NOT USED HERE  @OZ30157*/
*       3 TRCSXC FIXED(8),          /* CYL                   @OZ30157*/
*       3 TRCSXH FIXED(8),          /* HEAD                  @OZ30157*/
*       3 TRCSXR FIXED(8),          /* REC                   @OZ30157*/
*      2 * FIXED(32),               /* START OF Y AREA       @OZ30157*/
*       3 * FIXED(8),               /* FLAGS- NOT USED HERE  @OZ30157*/
*       3 TRCSYC FIXED(8),          /* CYL                   @OZ30157*/
*       3 TRCSYH FIXED(8),          /* HEAD                  @OZ30157*/
*       3 TRCSYR FIXED(8);          /* REC                   @OZ30157*/
*   DCL                                                            1487
*     1 MSGTRB CHAR(44) BASED(WPLPTR+4),/* MAP TRACE MSG     @OZ30157*/
*      2 * CHAR(6),                 /* HEADER PORTION        @OZ30157*/
*      2 MTRACTIN CHAR(8),          /* INACTIVE/ACTIVE       @OZ30157*/
*      2 MTRCLR,                    /*                       @OZ30157*/
*       3 * CHAR(8),                /* AREA CONSTANT         @OZ30157*/
*       3 MTRAREA CHAR(1),          /* AREA VARIABLE         @OZ30157*/
*       3 * CHAR(2),                /* -                     @OZ30157*/
*       3 MTRPCT CHAR(3),           /* PERCENT FULL          @OZ30157*/
*        4 * CHAR(1),               /* USE ONLY IF 100%      @OZ30157*/
*        4 MTRPCTB CHAR(2),         /* 01 TO 99%             @OZ30157*/
*       3 * CHAR(6);                /* % FULL CONSTANT       @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* LOCAL STATIC VARIABLES AND WORK AREAS FOR TRACE ONLY     @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1488
*   DCL                                                            1488
*     1 TRCCALC LOCAL STATIC,       /* AREA FOR CALCULATIONS @OZ30157*/
*      2 TRNXC FIXED(15),           /* NEXT CYLINDER         @OZ30157*/
*      2 TRNXH FIXED(15),           /* NEXT HEAD             @OZ30157*/
*      2 TRNXR FIXED(15),           /* NEXT RECORD           @OZ30157*/
*      2 TRCTREC FIXED(15),         /* TOTAL RECORDS         @OZ30157*/
*      2 TRCTHDS FIXED(15),         /* TOTAL HEADS           @OZ30157*/
*      2 TRCTCYL FIXED(15),         /* TOTAL CYLINDERS       @OZ30157*/
*      2 TRCUREC FIXED(15),         /* RECORDS USED          @OZ30157*/
*      2 TRCUHDS FIXED(15),         /* HEADS USED            @OZ30157*/
*      2 TRCUCYL FIXED(15),         /* CYLINDERS USED        @OZ30157*/
*      2 TRCUSE FIXED(15),          /* USAGE WORK AREA       @OZ30157*/
*      2 TRCPCT FIXED(15);          /* PERCENT FINAL CALC    @OZ30157*/
*   DCL                                                            1489
*     1 TRCWORK STATIC LOCAL,       /* CONVERSION WORK AREA  @OZ30157*/
*      2 TRCWORKA CHAR(1),          /* USED ONLY IF 3 CHARS  @OZ30157*/
*      2 TRCWORKB CHAR(2);          /*                       @OZ30157*/
*   DCL                                                            1490
*     TCYLCNT FIXED(15) INIT(608),  /* CALC WORK AREAS       @OZ30157*/
*     THDCNT FIXED(15) INIT(32),    /*                       @OZ30157*/
*     TRNXCC FIXED(15),             /*                       @OZ30157*/
*     TRNXHH FIXED(15),             /*                       @OZ30157*/
*     TRNXRR FIXED(15),             /*                       @OZ30157*/
*     TRCRECS FIXED(15),            /*                       @OZ30157*/
*     TRCTOT FIXED(15);             /*                       @OZ30157*/
*   DCL                                                            1491
*     CHARX CHAR(1) CONSTANT('X'),  /* CHAR X FOR MESSAGE    @OZ30157*/
*     CHARY CHAR(1) CONSTANT('Y'),  /* CHAR Y FOR MESSAGE    @OZ30157*/
*     ACTIVE CHAR(8) CONSTANT('ACTIVE  '),/*                 @OZ30157*/
*     INACTIVE CHAR(8) CONSTANT('INACTIVE');/*               @OZ30157*/
*   DCL                                                            1492
*     CZEROS CHAR(3) INIT('000');   /* TO CLEAR SIGNS        @OZ30157*/
*   RFY                                                            1493
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56TR14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56TR14                                        1494
*   RFY                                                            1495
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   DO;                             /* GOOD QUERY RESULT     @OZ30157*/
*     IF TRCACT=BZERO THEN          /* IF TRACE NOT ACTIVE   @OZ30157*/
         L     @04,QAPTR                                           1497
         TM    TRCACT(@04),B'10000000'                             1497
         BNZ   @RF01497                                            1497
*       DO;                         /* THEN SET MESSAGE TO   @OZ30157*/
*         MTRACTIN=INACTIVE;        /* NEITHER ACTIVE        @OZ30157*/
         LA    @04,4                                               1499
         AL    @04,WPLPTR                                          1499
         MVC   MTRACTIN(8,@04),@CC03296                            1499
*         MTRCLR=BLANK;             /* AND CLEAR REST        @OZ30157*/
         MVI   MTRCLR+13(@04),C' '                                 1500
         MVC   MTRCLR+14(6,@04),MTRCLR+13(@04)                     1500
         MVC   MTRCLR(13,@04),@CC02699                             1500
*       END;                        /*                       @OZ30157*/
*     ELSE                          /* ONE IS - SO GO        @OZ30157*/
*       DO;                         /* TRACE ACTIVE          @OZ30157*/
         B     @RC01497                                            1502
@RF01497 DS    0H                                                  1503
*         MTRACTIN=ACTIVE;          /* FIRST SAY ACTIVE      @OZ30157*/
         LA    @04,4                                               1503
         AL    @04,WPLPTR                                          1503
         MVC   MTRACTIN(8,@04),@CC03294                            1503
*         TRNXCC=TRCNC;             /* GET NEXT CYL NUMBER   @OZ30157*/
         L     @15,QAPTR                                           1504
         SLR   @14,@14                                             1504
         IC    @14,TRCNC(,@15)                                     1504
         STH   @14,TRNXCC                                          1504
*         TRNXHH=TRCNH;             /* HEAD NUMBER           @OZ30157*/
         SLR   @03,@03                                             1505
         IC    @03,TRCNH(,@15)                                     1505
         STH   @03,TRNXHH                                          1505
*         TRNXRR=TRCNR;             /* AND RECORD NUMBER     @OZ30157*/
         SLR   @02,@02                                             1506
         IC    @02,TRCNR(,@15)                                     1506
         STH   @02,TRNXRR                                          1506
*/********************************************************************/
*/*                                                                  */
*/*   CALCULATE THE AMOUNT OF AREA IN USE AND PUT IN MESSAGE @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1507
*         IF TRCXACT=BZERO THEN     /* CALC PERCENT          @OZ30157*/
         TM    TRCXACT(@15),B'01000000'                            1507
         BNZ   @RF01507                                            1507
*           DO;                     /* FROM Y AREA           @OZ30157*/
*             MTRAREA=CHARY;        /* SAY IT IS             @OZ30157*/
         MVI   MTRAREA(@04),C'Y'                                   1509
*             TRCTCYL=TRCEYC-TRCSYC;/* GET NBR CYLS          @OZ30157*/
         L     @04,QAPTR+4                                         1510
         SLR   @15,@15                                             1510
         IC    @15,TRCSYC(,@04)                                    1510
         SLR   @00,@00                                             1510
         IC    @00,TRCEYC(,@04)                                    1510
         SLR   @00,@15                                             1510
         STH   @00,TRCTCYL                                         1510
*             TRCTHDS=TRCEYH-TRCSYH;/* NMBR OF HEADS         @OZ30157*/
         SLR   @00,@00                                             1511
         IC    @00,TRCSYH(,@04)                                    1511
         ST    @15,@TF00001                                        1511
         SLR   @15,@15                                             1511
         IC    @15,TRCEYH(,@04)                                    1511
         SLR   @15,@00                                             1511
         STH   @15,TRCTHDS                                         1511
*             TRCRECS=TRCEYR-TRCSYR;/* NBR OF RECRDS         @OZ30157*/
         SLR   @15,@15                                             1512
         IC    @15,TRCSYR(,@04)                                    1512
         ST    @00,@TF00002                                        1512
         SLR   @00,@00                                             1512
         IC    @00,TRCEYR(,@04)                                    1512
         SLR   @00,@15                                             1512
         STH   @00,TRCRECS                                         1512
*             TRCUCYL=TRCNC-TRCSYC; /* TOT USED CYLS         @OZ30157*/
         SL    @14,@TF00001                                        1513
         STH   @14,TRCUCYL                                         1513
*             TRCUHDS=TRCNH-TRCSYH; /* HEADS, AND            @OZ30157*/
         SL    @03,@TF00002                                        1514
         STH   @03,TRCUHDS                                         1514
*             TRCUREC=TRCNR-TRCSYR; /* RECORDS IN Y          @OZ30157*/
         SLR   @02,@15                                             1515
         STH   @02,TRCUREC                                         1515
*           END;                    /* END GET Y FIGURES     @OZ30157*/
*         ELSE                      /* OR FROM X AREA        @OZ30157*/
*           DO;                     /*                       @OZ30157*/
         B     @RC01507                                            1517
@RF01507 DS    0H                                                  1518
*             MTRAREA=CHARX;        /* X IS ACTIVE           @OZ30157*/
         L     @04,WPLPTR                                          1518
         MVI   MTRAREA+4(@04),C'X'                                 1518
*             TRCTCYL=TRCEXC-TRCSXC;/* GET CYL COUNT         @OZ30157*/
         L     @04,QAPTR+4                                         1519
         SLR   @15,@15                                             1519
         IC    @15,TRCSXC(,@04)                                    1519
         SLR   @00,@00                                             1519
         IC    @00,TRCEXC(,@04)                                    1519
         SLR   @00,@15                                             1519
         STH   @00,TRCTCYL                                         1519
*             TRCTHDS=TRCEXH-TRCSXH;/* NUMB OF HEADS         @OZ30157*/
         SLR   @14,@14                                             1520
         IC    @14,TRCSXH(,@04)                                    1520
         SLR   @00,@00                                             1520
         IC    @00,TRCEXH(,@04)                                    1520
         SLR   @00,@14                                             1520
         STH   @00,TRCTHDS                                         1520
*             TRCTREC=TRCEXR-TRCSXR;/* NUM OF RECRDS         @OZ30157*/
         SLR   @03,@03                                             1521
         IC    @03,TRCSXR(,@04)                                    1521
         SLR   @00,@00                                             1521
         IC    @00,TRCEXR(,@04)                                    1521
         SLR   @00,@03                                             1521
         STH   @00,TRCTREC                                         1521
*             TRCUCYL=TRCNC-TRCSXC; /* TOT USED CYLS         @OZ30157*/
         L     @04,QAPTR                                           1522
         LCR   @15,@15                                             1522
         MVC   @ZT00003+3(1),TRCNC(@04)                            1522
         AL    @15,@ZT00003                                        1522
         STH   @15,TRCUCYL                                         1522
*             TRCUHDS=TRCNH-TRCSXH; /* HEADS, AND            @OZ30157*/
         LCR   @14,@14                                             1523
         MVC   @ZT00003+3(1),TRCNH(@04)                            1523
         AL    @14,@ZT00003                                        1523
         STH   @14,TRCUHDS                                         1523
*             TRCUREC=TRCNR-TRCSXR; /* RECORDS IN X          @OZ30157*/
         LCR   @03,@03                                             1524
         MVC   @ZT00003+3(1),TRCNR(@04)                            1524
         AL    @03,@ZT00003                                        1524
         STH   @03,TRCUREC                                         1524
*           END;                    /* END GET Y FIGURES     @OZ30157*/
*         IF TRCTREC<F0 THEN        /* IF RECORDS IS NEGATIVE      1526
*                                                            @OZ30157*/
@RC01507 LH    @04,TRCTREC                                         1526
         LTR   @04,@04                                             1526
         BNM   @RF01526                                            1526
*           DO;                     /* ADJUST CALC VALUES    @OZ30157*/
*             TRCTHDS=TRCTHDS-F1;   /* DECREMENT HD CNT      @OZ30157*/
         LH    @00,TRCTHDS                                         1528
         BCTR  @00,0                                               1528
         STH   @00,TRCTHDS                                         1528
*             TRCTREC=TRCTREC+F32;  /* MAKE REC CNT VALID    @OZ30157*/
         LA    @04,32(,@04)                                        1529
         STH   @04,TRCTREC                                         1529
*           END;                    /*                       @OZ30157*/
*         IF TRCTHDS<F0 THEN        /* IF HEAD COUNT NEGATIVE      1531
*                                                            @OZ30157*/
@RF01526 LH    @04,TRCTHDS                                         1531
         LTR   @04,@04                                             1531
         BNM   @RF01531                                            1531
*           DO;                     /*                       @OZ30157*/
*             TRCTCYL=TRCTCYL-F1;   /* THEN DECR CYL CT      @OZ30157*/
         LH    @00,TRCTCYL                                         1533
         BCTR  @00,0                                               1533
         STH   @00,TRCTCYL                                         1533
*             TRCTHDS=TRCTHDS+F19;  /* MAKE HD CT VALID      @OZ30157*/
         LA    @04,19(,@04)                                        1534
         STH   @04,TRCTHDS                                         1534
*           END;                    /*                       @OZ30157*/
*         TRCTOT=(TRCTCYL*TCYLCNT)+(TRCTHDS*THDCNT)+TRCTREC;       1536
*                                                                  1536
@RF01531 LH    @04,TCYLCNT                                         1536
         LR    @00,@04                                             1536
         MH    @00,TRCTCYL                                         1536
         LH    @15,THDCNT                                          1536
         LR    @14,@15                                             1536
         MH    @14,TRCTHDS                                         1536
         ALR   @00,@14                                             1536
         AH    @00,TRCTREC                                         1536
         STH   @00,TRCTOT                                          1536
*         /***********************************************************/
*         /*                                                         */
*         /* TOTAL RECORD COUNT                              @OZ30157*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1537
*         TRCUSE=(TRCUCYL*TCYLCNT)+(TRCUHDS*THDCNT)+TRCUREC;       1537
*                                                                  1537
         MH    @04,TRCUCYL                                         1537
         MH    @15,TRCUHDS                                         1537
         ALR   @04,@15                                             1537
         AH    @04,TRCUREC                                         1537
         STH   @04,TRCUSE                                          1537
*         /***********************************************************/
*         /*                                                         */
*         /* USED RECORD COUNT                               @OZ30157*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1538
*         IF TRCUSE>F0 THEN         /* IF ANY USED,          @OZ30157*/
         LTR   @04,@04                                             1538
         BNP   @RF01538                                            1538
*           DO;                     /* THEN CALC PERCENT     @OZ30157*/
*             TRCPCT=(TRCUSE*100)/TRCTOT;/* CALC PCT FULL    @OZ30157*/
         LR    @03,@04                                             1540
         M     @02,@CF03298                                        1540
         DR    @02,@00                                             1540
         STH   @03,TRCPCT                                          1540
*             CVD(TRCPCT,TRCWORK);  /* CONVERT FOR PRINT     @OZ30157*/
         CVD   @03,@TS00001                                        1541
         MVC   TRCWORK(3),@TS00001+5                               1541
*             IF TRCWORKA^='00'X THEN/* IF OVER 99 MUST      @OZ30157*/
         CLI   TRCWORKA,X'00'                                      1542
         BE    @RF01542                                            1542
*               DO;                 /*                       @OZ30157*/
*                 UNPK(MTRPCT,TRCWORK);/* IN 3 BYTE AREA     @OZ30157*/
         LA    @04,4                                               1544
         AL    @04,WPLPTR                                          1544
         UNPK  MTRPCT(3,@04),TRCWORK(3)                            1544
*                 MTRPCT=MTRPCT×CZEROS;/* AND CLEAR SIGN     @OZ30157*/
         OC    MTRPCT(3,@04),CZEROS                                1545
*               END;                /*                       @OZ30157*/
*             ELSE                  /* ELSE PUT IN           @OZ30157*/
*               DO;                 /*                       @OZ30157*/
         B     @RC01542                                            1547
@RF01542 DS    0H                                                  1548
*                 UNPK(MTRPCTB,TRCWORKB);/* TWO BYTE AREA    @OZ30157*/
         LA    @04,4                                               1548
         AL    @04,WPLPTR                                          1548
         UNPK  MTRPCTB(2,@04),TRCWORKB(2)                          1548
*                 MTRPCTB=MTRPCTB×CZEROS(1:2);/*             @OZ30157*/
         OC    MTRPCTB(2,@04),CZEROS                               1549
*               END;                /*                       @OZ30157*/
*           END;                    /* BUT IF NONE           @OZ30157*/
*         ELSE                      /* WERE USED,            @OZ30157*/
*           MTRPCTB=CZEROS(1:2);    /* PUT IN ZEROS          @OZ30157*/
         B     @RC01538                                            1552
@RF01538 L     @04,WPLPTR                                          1552
         MVC   MTRPCTB+4(2,@04),CZEROS                             1552
*       END;                        /* END TRACE ACTIVE      @OZ30157*/
@RC01538 DS    0H                                                  1554
*   END;                            /* END GOOD QUERY        @OZ30157*/
@RC01497 DS    0H                                                  1555
*   WPLMLLTF=''B;                   /* CLEAR FLAG FIELD      @OZ30157*/
         L     @04,WPLPTR                                          1555
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       1555
*   WPLMLLTC=BONE;                  /* DATA LINE             @OZ30157*/
         OI    WPLMLLTC(@04),B'00100000'                           1556
*   WPLPTR=WPLPTR+WPLMLLEN;         /* BUMP TO NEXT LINE     @OZ30157*/
         SLR   @00,@00                                             1557
         IC    @00,WPLMLLEN(,@04)                                  1557
         ALR   @00,@04                                             1557
         ST    @00,WPLPTR                                          1557
*   MSGCNT=F2;                      /* TWO LINE MESSAGE      @OZ30157*/
         MVC   MSGCNT(2),@CH00056                                  1558
*   RFY                                                            1559
*     R14 RSTD;                     /*                       @OZ30157*/
*   R14=MS56TR14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56TR14                                        1560
*   RFY                                                            1561
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00006 DS    0H                                                  1562
@EF00006 DS    0H                                                  1562
@ER00006 BR    @14                                                 1562
*   END MSG56TR;                    /* END TRACE DISPLAY     @OZ30157*/
*MSG56GQ:                                                          1564
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56GQ  DS    0H                                                  1565
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME: MSG56GQ                                          */
*/*                                                                  */
*/* FUNCTIONS:                                                       */
*/*    1. ISSUE UP TO 28 QUERIES PER PARM LIST PASSED                */
*/*       FROM USER.                                                 */
*/*                                                                  */
*/* INPUTS:                                                          */
*/*    1. QUERY REQUEST LIST IN QBTAB.                               */
*/*                                                                  */
*/* OUTPUTS:                                                         */
*/*    1. QUERY AREA - UP TO 28 QUERIES REQUESTED                    */
*/*                                                                  */
*/* RETURN CODES - PLACED IN GLOBAL RETC FIELD                       */
*/*    4 - GOT AT LEAST ONE PER REQUEST - NOT ENOUGH                 */
*/*        STORAGE FOR ALL                                           */
*/*    8 - ERROR ON QUERY - CHECK AREAS FOR RESULTS                  */
*/*   12 - COULD NOT ISSUE A QUERY - NO STORAGE OR ERROR IN          */
*/*        CALLING PARAMETERS.                               @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1565
*   DCL                                                            1565
*     MVSRC CHAR(512) BASED(QWPTR), /* OVERLAY FOR SOURCE    @OZ30157*/
*     MVREC CHAR(512) BASED(MVPTR); /* AND RECEIVER AREAS    @OZ30157*/
*   DCL                                                            1566
*     MOVEMAP(*) FIXED(15) BASED(MAPPTR);/* MOVE MAP OVERLAY @OZ30157*/
*   DCL                                                            1567
*     MVPTR PTR(32),                /* MOVE RECEIVE POINTER  @OZ30157*/
*     MAPPTR PTR(32);               /* MAP POINTER           @OZ30157*/
*   DCL                                                            1568
*     QCNT FIXED(31);               /* COUNTER               @OZ30157*/
*   DCL                                                            1569
*     MS56GQ14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            1570
*     1 QBCHRF FIXED(32),           /* CHR UPDATE AREA       @OZ30157*/
*      2 * FIXED(8),                /* NOT USED - 00         @OZ30157*/
*      2 QBPCYL FIXED(8),           /* CYL NUMBER            @OZ30157*/
*      2 QBPHD FIXED(8),            /* HEAD NUMBER           @OZ30157*/
*      2 QBPREC FIXED(8);           /* RECORD NUMBER         @OZ30157*/
*   DCL                                                            1571
*     QBCHRC CHAR(4) DEF(QBCHRF);   /* REDEF FOR MOVE        @OZ30157*/
*   DCL                                                            1572
*     QPEND PTR(31),                /* MAX QUERY ADDRESS     @OZ30157*/
*     QWPTR PTR(31),                /* CURR QUERY ADDRESS    @OZ30157*/
*     QENT FIXED(15),               /* CURRENT QUERY INDEX   @OZ30157*/
*     QI FIXED(15),                 /* CURRENT SUBINDEX      @OZ30157*/
*     QMI FIXED(15),                /* MOVE MAP INDEX        @OZ30157*/
*     MFB FIXED(15),                /* MOVE FROM BEGIN INDEX @OZ30157*/
*     MFE FIXED(15),                /* MOVE FROM END INDEX   @OZ30157*/
*     M2B FIXED(15),                /* MOVE TO BEGIN INDEX   @OZ30157*/
*     M2E FIXED(15),                /* MOVE TO END INDEX     @OZ30157*/
*     QMCT FIXED(15);               /* MOVE COUNT INDEX      @OZ30157*/
*   DCL                                                            1573
*     1 QBPRMAR,                    /* QUERY PARAMETER BUILD @OZ30157*/
*      2 QBPSUB,                    /* FOR MOVE QBPARM       @OZ30157*/
*       3 QBPTID FIXED(8),          /* AREA - TABLE ID/SECTOR@OZ30157*/
*       3 QBPTRD CHAR(1),           /* READ OR ALT MSC FLAG  @OZ30157*/
*       3 QBPTVAR1 CHAR(1),         /* 08 OR SA NUMBER       @OZ30157*/
*       3 QBPTVAR2 FIXED(8),        /* SDG, INTFC, OR 00     @OZ30157*/
*      2 QBPTFIL CHAR(16) INIT(''B),/* FILL WITH BINARY ZEROS@OZ30157*/
*      2 QBPCHR CHAR(4),            /* DASD CHR FOR TID F0   @OZ30157*/
*      2 * CHAR(8) INIT(''B),       /* FILL WITH ZEROS       @OZ30157*/
*      2 QBPBUF PTR(32);            /* BUFFER POINTER        @OZ30157*/
*   DCL                                                            1574
*     QBPORD CHAR(1);               /* TO HOLD QUERY ORDER   @OZ30157*/
*   RFY                                                            1575
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56GQ14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56GQ14                                        1576
*   RFY                                                            1577
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETC=F0;                        /* START WITH 0 RETURN   @OZ30157*/
         SLR   @04,@04                                             1578
         STH   @04,RETC                                            1578
*   QPEND=ADDR(WPLBUF)-512;         /* LAST POSSIBLE QUERY   @OZ30157*/
         L     @15,WORKPTR                                         1579
         LR    @00,@15                                             1579
         SH    @00,@CH03603                                        1579
         ST    @00,QPEND                                           1579
*   IF QAPTR(1)=F0 THEN             /* IF FIRST QUERY PTR 0  @OZ30157*/
         CL    @04,QAPTR                                           1580
         BNE   @RF01580                                            1580
*     QAPTR(1)=ADDR(QUBUF1);        /* SET TO BUFFER 1 ADDR  @OZ30157*/
         AH    @15,@CH01372                                        1581
         ST    @15,QAPTR                                           1581
*   QWPTR=QAPTR(QBINDX(1));         /* SET START LOCATION    @OZ30157*/
@RF01580 SLR   @04,@04                                             1582
         IC    @04,QBINDX                                          1582
         LR    @15,@04                                             1582
         SLA   @15,2                                               1582
         L     @00,QAPTR-4(@15)                                    1582
         ST    @00,QWPTR                                           1582
*   QCNT=QBINDX(1);                 /* TO START VALUE        @OZ30157*/
         ST    @04,QCNT                                            1583
*/********************************************************************/
*/*                                                                  */
*/* BUILD AND ISSUE QUERIES AS REQUESTED UP TO MAX SPACE     @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1584
*   DO QENT=1 TO QBCNT WHILE(RETC=F0);/* LOOP THROUGH LIST   @OZ30157*/
         LA    @04,1                                               1584
         B     @DE01584                                            1584
@DL01584 LH    @00,RETC                                            1584
         LTR   @00,@00                                             1584
         BNZ   @DC01584                                            1584
*     MVPTR=QWPTR;                  /* SET START LOCATION    @OZ30157*/
         MVC   MVPTR(4),QWPTR                                      1585
*     QBPRMAR=QBPRMAR&&QBPRMAR;     /* CLEAR PARM AREA       @OZ30157*/
         XC    QBPRMAR(36),QBPRMAR                                 1586
*     QBPSUB=QBPARM(QENT);          /* SET UP PARAMETER AREA @OZ30157*/
         MH    @04,@CH01372                                        1587
         LA    @15,QBPARM-44(@04)                                  1587
         MVC   QBPSUB(4),0(@15)                                    1587
*     QBPORD=QBORD(QENT);           /* AND SAVE THE ORDER    @OZ30157*/
         LA    @15,QBORD-44(@04)                                   1588
         MVC   QBPORD(1),0(@15)                                    1588
*     IF QBPORD='05'X&QBPTID=CZERO THEN/* IF CHR REQUEST     @OZ30157*/
         CLI   QBPORD,X'05'                                        1589
         BNE   @RF01589                                            1589
         CLI   QBPTID,240                                          1589
         BNE   @RF01589                                            1589
*       QBCHRF='00070100'X+QBREC(QENT);/* GET START ADDRESS  @OZ30157*/
         SLR   @00,@00                                             1590
         IC    @00,QBREC-44(@04)                                   1590
         AL    @00,@CF03336                                        1590
         ST    @00,QBCHRF                                          1590
*     ELSE                                                         1591
*       QBCHRC=''B;                 /* IF NOT, SET NULLS     @OZ30157*/
         B     @RC01589                                            1591
@RF01589 XC    QBCHRC(4),QBCHRC                                    1591
*     DO QI=1 TO QBECNT(QENT) WHILE(RETC=F0);/* LOOP THRU QU @OZ30157*/
@RC01589 LA    @04,1                                               1592
         B     @DE01592                                            1592
@DL01592 LH    @04,RETC                                            1592
         LTR   @04,@04                                             1592
         BNZ   @DC01592                                            1592
*       IF QWPTR>QPEND THEN         /* CHECK FOR SPACE AVAIL @OZ30157*/
         CLC   QWPTR(4),QPEND                                      1593
         BNH   @RF01593                                            1593
*         RETC=F8;                  /* OUT OF SPACE          @OZ30157*/
         MVC   RETC(2),@CH00036                                    1594
*       IF RETC<F8 THEN             /* IF CAN DO 1 OR MORE   @OZ30157*/
@RF01593 LH    @04,RETC                                            1595
         CH    @04,@CH00036                                        1595
         BNL   @RF01595                                            1595
*         DO;                       /* DO THEM               @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* DETERMINE QUERY TYPE AND ISSUE PROPER ONE                @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1597
*           IF QBPORD='05'X THEN    /* IF QTAB REQUEST       @OZ30157*/
         CLI   QBPORD,X'05'                                        1597
         BNE   @RF01597                                            1597
*             DO;                   /*                       @OZ30157*/
*               QUERYAR=QUERYAR&&QUERYAR;/* CLEAR QUERY AREA @OZ30157*/
         L     @04,WORKPTR                                         1599
         XC    QUERYAR(44,@04),QUERYAR(@04)                        1599
*               QUPTR=QWPTR;        /* SET ADDRESS FOR DATA  @OZ30157*/
         MVC   QUPTR(4,@04),QWPTR                                  1600
*               QBPCHR=QBCHRC;      /* MOVE CHR              @OZ30157*/
*                                                                  1601
         MVC   QBPCHR(4),QBCHRC                                    1601
*               /*****************************************************/
*               /*                                                   */
*               /* ***************************************************/
*               /* *****                                     @Z40LB22*/
*               /* MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL MACRO    */
*               /*                                           @Z40LB22*/
*               /* OS/VS2 VERSION-- 03/21/75 LEVEL 00        @Z40LB22*/
*               /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.  @Z40LB22*/
*               /* THE LIST FORM OF THIS MACRO SHOULD BE     @Z40LB22*/
*               /* INVOKED FIRST IN ORDER TO SET UP NECESSARY        */
*               /*                                           @Z40LB22*/
*               /* DECLARES. IF THE COMPLETE ARGUMENT IS     @Z40LB22*/
*               /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.   @Z40LB22*/
*               /* ***************************************************/
*               /* *****                                     @Z40LB22*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1602
*               RFY                                                1602
*                (QUERR1) RSTD;     /* RESTRICT R1           @Z40LB22*/
*               QUERR1=ADDR(QUERYAR);/* SET QUERR1 TO REQ BLOCK    1603
*                                                            @Z40LB22*/
         LR    QUERR1,@04                                          1603
*               QULEN='2C'X;        /* SET LENGTH FIELD      @Z40LB22*/
         LA    @00,44                                              1604
         ST    @00,QULEN(,@04)                                     1604
*               QUORD='05'X;        /* SET OPCODE FIELD      @Z40LB22*/
         MVI   QUORD(@04),X'05'                                    1605
*               QUCODE='06'X;       /* SET CODE TYPE         @Z40LB22*/
         MVI   QUCODE(@04),X'06'                                   1606
*               QUPARM=(QBPRMAR);   /* FILL IN PARAMETERS    @Z40LB22*/
         MVC   QUPARM(32,@04),QBPRMAR                              1607
*               SVC(126);           /* ISSUE SVC INST.       @Z40LB22*/
         SVC   126                                                 1608
*               RFY                                                1609
*                (QUERR1) UNRSTD;   /* UNRESTRICT R1         @Z40LB22
*                                      ISSUE QTAB            @OZ30157*/
*               RFY                                                1610
*                 R15 RSTD;         /* MUST CHECK RETURN CODE@OZ30157*/
*               RETC=R15;           /*                       @OZ30157*/
         STH   R15,RETC                                            1611
*               RFY                                                1612
*                 R15 UNRSTD;       /*                       @OZ30157*/
*               IF QBPTID^=CZERO THEN/* IF NOT DASD CHR      @OZ30157*/
         CLI   QBPTID,240                                          1613
         BE    @RF01613                                            1613
*                 QBPTVAR2=QBPTVAR2+1;/* INCREMENT POINTER   @OZ30157*/
         IC    @04,QBPTVAR2                                        1614
         LA    @04,1(,@04)                                         1614
         STC   @04,QBPTVAR2                                        1614
*               ELSE                /* IF IT IS, INCREMENT   @OZ30157*/
*                 DO;               /* ADDRESS               @OZ30157*/
         B     @RC01613                                            1615
@RF01613 DS    0H                                                  1616
*                   QBPREC=QBPREC+1;/* TO NEXT VALID RECORD  @OZ30157*/
         LA    @04,1                                               1616
         SLR   @00,@00                                             1616
         IC    @00,QBPREC                                          1616
         ALR   @00,@04                                             1616
         STC   @00,QBPREC                                          1616
*                   IF QBPREC>32 THEN/* IF PAST TRACK        @OZ30157*/
         CLI   QBPREC,32                                           1617
         BNH   @RF01617                                            1617
*                     DO;           /* ADD TO TRACK ADDRESS  @OZ30157*/
*                       QBPREC=1;   /* AND SET REC TO 1      @OZ30157*/
         MVI   QBPREC,X'01'                                        1619
*                       QBPHD=QBPHD+1;/*                     @OZ30157*/
         SLR   @00,@00                                             1620
         IC    @00,QBPHD                                           1620
         ALR   @00,@04                                             1620
         STC   @00,QBPHD                                           1620
*                       IF QBPHD>19 THEN/* IF PAST CYL BOUND @OZ30157*/
         CLI   QBPHD,19                                            1621
         BNH   @RF01621                                            1621
*                         DO;       /* BUMP CYL              @OZ30157*/
*                           QBPHD=0;/* SET TRACK             @OZ30157*/
         MVI   QBPHD,X'00'                                         1623
*                           QBPCYL=QBPCYL+1;/* AND BUMP CYL  @OZ30157*/
         MVC   @ZT00003+3(1),QBPCYL                                1624
         AL    @04,@ZT00003                                        1624
         STC   @04,QBPCYL                                          1624
*                         END;      /* END CYL ADJUST        @OZ30157*/
*                     END;          /* END TRACK ADJUST      @OZ30157*/
*                 END;              /* END RECORD ADJUST     @OZ30157*/
*             END;                  /* END QTAB              @OZ30157*/
*           ELSE                    /* NOT QTAB,             @OZ30157*/
*             IF QBPORD='07'X THEN  /* IS IT QCEL            @OZ30157*/
         B     @RC01597                                            1629
@RF01597 CLI   QBPORD,X'07'                                        1629
         BNE   @RF01629                                            1629
*               DO;                 /* YES, ISSUE IT         @OZ30157*/
*                 QUERYAR=QUERYAR&&QUERYAR;/* CLEAR THE AIR  @OZ30157*/
         L     @04,WORKPTR                                         1631
         XC    QUERYAR(44,@04),QUERYAR(@04)                        1631
*                 QUPTR=QWPTR;      /* POINT TO AREA         @OZ30157*/
*                                                                  1632
         MVC   QUPTR(4,@04),QWPTR                                  1632
*                 /***************************************************/
*                 /*                                                 */
*                 /* *************************************************/
*                 /* *******                                 @Z40LB22*/
*                 /* MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL MACRO  */
*                 /*                                         @Z40LB22*/
*                 /* OS/VS2 VERSION-- 03/21/75 LEVEL 00      @Z40LB22*/
*                 /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.        */
*                 /*                                         @Z40LB22*/
*                 /* THE LIST FORM OF THIS MACRO SHOULD BE   @Z40LB22*/
*                 /* INVOKED FIRST IN ORDER TO SET UP NECESSARY      */
*                 /*                                         @Z40LB22*/
*                 /* DECLARES. IF THE COMPLETE ARGUMENT IS   @Z40LB22*/
*                 /* SPECIFIED THE REQ BLOCK WILL BE ZEROED. @Z40LB22*/
*                 /* *************************************************/
*                 /* *******                                 @Z40LB22*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1633
*                 RFY                                              1633
*                  (QUERR1) RSTD;   /* RESTRICT R1           @Z40LB22*/
*                 QUERR1=ADDR(QUERYAR);/* SET QUERR1 TO REQ BLOCK  1634
*                                                            @Z40LB22*/
         LR    QUERR1,@04                                          1634
*                 QULEN='2C'X;      /* SET LENGTH FIELD      @Z40LB22*/
         LA    @00,44                                              1635
         ST    @00,QULEN(,@04)                                     1635
*                 QUORD='07'X;      /* SET OPCODE FIELD      @Z40LB22*/
         MVI   QUORD(@04),X'07'                                    1636
*                 QUXADDR=(QBPTID); /* FILL IN X ADDR        @Z40LB22*/
         MVC   QUXADDR(1,@04),QBPTID                               1637
*                 QUPARM=(MAP);     /* FILL IN CELL BIT MAP  @Z40LB22*/
         MVC   QUPARM(32,@04),MAP                                  1638
*                 SVC(126);         /* ISSUE SVC INST.       @Z40LB22*/
         SVC   126                                                 1639
*                 RFY                                              1640
*                  (QUERR1) UNRSTD; /* UNRESTRICT R1         @Z40LB22
*                                      ISSUE QCEL            @OZ30157*/
*                 RFY                                              1641
*                   R15 RSTD;       /* MUST CHECK RETURN CODE@OZ30157*/
*                 RETC=R15;         /*                       @OZ30157*/
         STH   R15,RETC                                            1642
*                 RFY                                              1643
*                   R15 UNRSTD;     /*                       @OZ30157*/
*               END;                /* END QCEL DO           @OZ30157*/
*             ELSE                  /*                       @OZ30157*/
*               DO;                 /* MUST BE QMWCS         @OZ30157*/
         B     @RC01629                                            1645
@RF01629 DS    0H                                                  1646
*                 QUERYAR=QUERYAR&&QUERYAR;/* CLEAR QUERY AREA     1646
*                                                            @OZ30157*/
         L     @04,WORKPTR                                         1646
         XC    QUERYAR(44,@04),QUERYAR(@04)                        1646
*                 QUPTR=QWPTR;      /* SET AREA POINTER      @OZ30157*/
*                                                                  1647
         MVC   QUPTR(4,@04),QWPTR                                  1647
*                 /***************************************************/
*                 /*                                                 */
*                 /* *************************************************/
*                 /* *******                                 @Z40LB22*/
*                 /* MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL MACRO  */
*                 /*                                         @Z40LB22*/
*                 /* OS/VS2 VERSION-- 03/21/75 LEVEL 00      @Z40LB22*/
*                 /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.        */
*                 /*                                         @Z40LB22*/
*                 /* THE LIST FORM OF THIS MACRO SHOULD BE   @Z40LB22*/
*                 /* INVOKED FIRST IN ORDER TO SET UP NECESSARY      */
*                 /*                                         @Z40LB22*/
*                 /* DECLARES. IF THE COMPLETE ARGUMENT IS   @Z40LB22*/
*                 /* SPECIFIED THE REQ BLOCK WILL BE ZEROED. @Z40LB22*/
*                 /* *************************************************/
*                 /* *******                                 @Z40LB22*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1648
*                 RFY                                              1648
*                  (QUERR1) RSTD;   /* RESTRICT R1           @Z40LB22*/
*                 QUERR1=ADDR(QUERYAR);/* SET QUERR1 TO REQ BLOCK  1649
*                                                            @Z40LB22*/
         LR    QUERR1,@04                                          1649
*                 QULEN='2C'X;      /* SET LENGTH FIELD      @Z40LB22*/
         LA    @00,44                                              1650
         ST    @00,QULEN(,@04)                                     1650
*                 QUORD='0B'X;      /* SET OPCODE FIELD      @Z40LB22*/
         MVI   QUORD(@04),X'0B'                                    1651
*                 QUCODE='03'X;     /* SET CODE TYPE         @Z40LB22*/
         MVI   QUCODE(@04),X'03'                                   1652
*                 QUSECT=(QBPTID);  /* FILL IN SECTOR ID     @Z40LB22*/
         MVC   QUSECT(1,@04),QBPTID                                1653
*                 QWFLAG=(QBPTRD);  /* FILL IN FLAGS FIELD   @ZA09556*/
         MVC   QWFLAG(1,@04),QBPTRD                                1654
*                 SVC(126);         /* ISSUE SVC INST.       @Z40LB22*/
         SVC   126                                                 1655
*                 RFY                                              1656
*                  (QUERR1) UNRSTD; /* UNRESTRICT R1         @Z40LB22
*                                      ISSUE QMWCS           @OZ30157*/
*                 RFY                                              1657
*                   R15 RSTD;       /* MUST CHECK RETURN CODE@OZ30157*/
*                 RETC=R15;         /*                       @OZ30157*/
         STH   R15,RETC                                            1658
*                 RFY                                              1659
*                   R15 UNRSTD;     /*                       @OZ30157*/
*                 QBPTID=QBPTID+F1; /* INCREMENT SECTOR ADR  @OZ30157*/
         IC    @04,QBPTID                                          1660
         LA    @04,1(,@04)                                         1660
         STC   @04,QBPTID                                          1660
*               END;                /* END QMWCS             @OZ30157*/
*/* ******************************************************************
*                                                                    */
*/*                                                                  */
*/*  IF QUERY WAS UNSUCCESSFUL, TELL CALLER VIA RETURN CODE   @OZ30157
*                                                                    */
*/*                                                                  */
*/* ******************************************************************
*                                                                    */
*                                                                  1662
*           IF RETC=F0 THEN         /* IF GOOD QUERY         @OZ30157*/
@RC01629 DS    0H                                                  1662
@RC01597 SLR   @04,@04                                             1662
         CH    @04,RETC                                            1662
         BNE   @RF01662                                            1662
*             IF QBMAP(QENT)^=F0 THEN/* IF ANY MOVE MAP      @OZ30157*/
         LH    @15,QENT                                            1663
         MH    @15,@CH01372                                        1663
         L     @15,QBMAP-45(@15)                                   1663
         LA    @15,0(,@15)                                         1663
         LTR   @15,@15                                             1663
         BZ    @RF01663                                            1663
*               DO;                 /* MOVE PER MOVE MAP     @OZ30157*/
*                 MAPPTR=QBMAP(QENT);/* SET MAP POINTER      @OZ30157*/
         ST    @15,MAPPTR                                          1665
*                 M2B=F1;           /* FIRST POSITION        @OZ30157*/
         LA    @14,1                                               1666
         STH   @14,M2B                                             1666
*                 QMCT=MOVEMAP(1)*F2;/* GET COUNT OF MOVES*2 @OZ30157*/
         LH    @00,MOVEMAP(,@15)                                   1667
         ALR   @00,@00                                             1667
         STH   @00,QMCT                                            1667
*                 IF QMCT>F0 THEN   /* IF MOVE REQUIRED      @OZ30157*/
         CR    @00,@04                                             1668
         BNH   @RF01668                                            1668
*                   DO;             /*                       @OZ30157*/
*                     M2E=F1;       /* AVOID ERROR MESSAGE   @OZ30157*/
         STH   @14,M2E                                             1670
*                     DO QMI=2 TO QMCT BY 2;/* LOOP THRU MOVES     1671
*                                                            @OZ30157*/
         LA    @04,2                                               1671
         STH   @04,QMI                                             1671
         B     @DE01671                                            1671
@DL01671 DS    0H                                                  1672
*                       MFE=MOVEMAP(QMI+1);/* LENGTH OF MOVE -1    1672
*                                                            @OZ30157*/
         L     @15,MAPPTR                                          1672
         ALR   @04,@04                                             1672
         LH    @00,MOVEMAP(@04,@15)                                1672
         STH   @00,MFE                                             1672
*                       MFB=MOVEMAP(QMI)+1;/* START OF MOVE  @OZ30157*/
         LA    @14,1                                               1673
         BCTR  @15,0                                               1673
         BCTR  @15,0                                               1673
         AH    @14,MOVEMAP(@04,@15)                                1673
         STH   @14,MFB                                             1673
*                       M2E=M2B+MFE-1;/* LAST POS IN RCVR    @OZ30157*/
         AH    @00,M2B                                             1674
         BCTR  @00,0                                               1674
         STH   @00,M2E                                             1674
*                       IF QBPORD='05'X THEN/* IF QTAB THEN  @OZ30157*/
         CLI   QBPORD,X'05'                                        1675
         BNE   @RF01675                                            1675
*                         MFB=MFB+256;/* USE LAST HALF OF BFR      1676
*                                                            @OZ30157*/
         LA    @14,256(,@14)                                       1676
         STH   @14,MFB                                             1676
*                       MFE=MFE+MFB-1;/* LAST POS IN SOURCE  @OZ30157*/
@RF01675 LH    @04,MFB                                             1677
         LH    @00,MFE                                             1677
         ALR   @00,@04                                             1677
         BCTR  @00,0                                               1677
         STH   @00,MFE                                             1677
*                       MVREC(M2B:M2E)=MVSRC(MFB:MFE);/* MOVE      1678
*                                                            @OZ30157*/
         LH    @15,M2B                                             1678
         L     @14,MVPTR                                           1678
         ALR   @14,@15                                             1678
         BCTR  @14,0                                               1678
         LH    @03,M2E                                             1678
         LCR   @15,@15                                             1678
         ALR   @15,@03                                             1678
         L     @02,QWPTR                                           1678
         ALR   @02,@04                                             1678
         BCTR  @02,0                                               1678
         EX    @15,@SM03659                                        1678
*                       M2B=M2E+1;  /* BUMP TO NEXT FIELD    @OZ30157*/
         LA    @03,1(,@03)                                         1679
         STH   @03,M2B                                             1679
*                     END;          /* LOOP MOVES            @OZ30157*/
         LA    @04,2                                               1680
         AH    @04,QMI                                             1680
         STH   @04,QMI                                             1680
@DE01671 CH    @04,QMCT                                            1680
         BNH   @DL01671                                            1680
*                     MVPTR=MVPTR+M2E;/* SET NEXT MOVE AREA  @OZ30157*/
         LH    @04,M2E                                             1681
         AL    @04,MVPTR                                           1681
         ST    @04,MVPTR                                           1681
*                   END;            /* END MOVES             @OZ30157*/
*               END;                /* END MOVE MAP          @OZ30157*/
*             ELSE                  /* IF NO MOVE MAP, THEN  @OZ30157*/
*               DO;                 /* USE ALL 256 BYTES     @OZ30157*/
         B     @RC01663                                            1684
@RF01663 DS    0H                                                  1685
*                 IF QBPORD='05'X THEN/* IF QTAB REQUEST     @OZ30157*/
         CLI   QBPORD,X'05'                                        1685
         BNE   @RF01685                                            1685
*                   MVREC(1:256)=MVSRC(257:512);/* MOVE 256 BYTES  1686
*                                                            @OZ30157*/
         L     @04,MVPTR                                           1686
         L     @15,QWPTR                                           1686
         MVC   MVREC(256,@04),MVSRC+256(@15)                       1686
*                 MVPTR=MVPTR+256;  /* BUMP MOVE POINTER     @OZ30157*/
@RF01685 LA    @04,256                                             1687
         AL    @04,MVPTR                                           1687
         ST    @04,MVPTR                                           1687
*               END;                /* END MOVE ALL          @OZ30157*/
*         END;                      /* END ISSUE QUERY       @OZ30157*/
@RC01663 DS    0H                                                  1689
@RF01662 DS    0H                                                  1690
*       QWPTR=MVPTR;                /* TO NEXT QUERY AREA    @OZ30157*/
@RF01595 L     @04,MVPTR                                           1690
         ST    @04,QWPTR                                           1690
*       QCNT=QCNT+F1;               /* BUMP COUNT FOR NEXT   @OZ30157*/
         LA    @00,1                                               1691
         AL    @00,QCNT                                            1691
         ST    @00,QCNT                                            1691
*       QAPTR(QCNT)=QWPTR;          /* AND SET NEXT QAPTR    @OZ30157*/
         SLA   @00,2                                               1692
         LR    @15,@00                                             1692
         ST    @04,QAPTR-4(@15)                                    1692
*     END;                          /* END ENTRY LOOP        @OZ30157*/
         LA    @04,1                                               1693
         AH    @04,QI                                              1693
@DE01592 STH   @04,QI                                              1693
         LH    @15,QENT                                            1693
         MH    @15,@CH01372                                        1693
         LA    @14,QBECNT-44(@15)                                  1693
         MVC   @ZT00003+3(1),0(@14)                                1693
         C     @04,@ZT00003                                        1693
         BNH   @DL01592                                            1693
@DC01592 DS    0H                                                  1694
*   END;                            /* END LIST LOOP         @OZ30157*/
         LA    @04,1                                               1694
         AH    @04,QENT                                            1694
@DE01584 STH   @04,QENT                                            1694
         C     @04,QBCNT                                           1694
         BNH   @DL01584                                            1694
@DC01584 DS    0H                                                  1695
*   RFY                                                            1695
*     R14 RSTD;                     /*                       @OZ30157*/
*   R14=MS56GQ14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56GQ14                                        1696
*   RFY                                                            1697
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /* BACK TO CALLER        @OZ30157*/
@EL00007 DS    0H                                                  1698
@EF00007 DS    0H                                                  1698
@ER00007 BR    @14                                                 1698
*   END MSG56GQ;                    /* END GET/QUERY ROUTINE @OZ30157*/
*MSG56B:                                                           1700
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/
MSG56B   DS    0H                                                  1701
*/*********************************************************  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* PROCEDURE NAME - MSG56B                                  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* FUNCTION - FOR DASD SSIDS, THE MSC SDG PAB MUST BE READ  @Z40LB01*/
*/*            FOR THE SDG AND A TABLE OF STATUS FOR EACH    @Z40LB01*/
*/*            SSID TO BE DISPLAYED BUILT. THIS IS NECESSARY @Z40LB01*/
*/*            TO REDUCE THE AMOUNT OF CODE EXECUTED BETWEEN @Z40LB01*/
*/*            ISSUING THE ML WTO FOR EACH DISPLAY GROUP.    @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* INPUTS - INTERNAL FIELDS INITIALIZED BY ICBMSG56.        @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* OUTPUTS - DASD SSID STATUS TABLE ENTRIES FOR EACH SSID   @Z40LB01*/
*/*           TO BE DISPLAYED.                               @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  1701
*   DCL                                                            1701
*     MSG56B14 FIXED(31);           /* LOCAL RETURN REG SAVE @Z40LB01*/
*   RFY                                                            1702
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   MSG56B14=R14;                   /*                       @Z40LB01*/
         ST    R14,MSG56B14                                        1703
*   RFY                                                            1704
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   DO I=F1 TO F28;                 /* SCAN BY SDG           @Z40LB01*/
         LA    @04,1                                               1705
         STH   @04,I                                               1705
@DL01705 DS    0H                                                  1706
*     IF SDGREQ(I)^=F0 THEN         /* ANY REQUESTS THIS SDG @Z40LB01*/
         SLR   @00,@00                                             1706
         IC    @00,SDGREQ-1(@04)                                   1706
         CH    @00,@CH00226                                        1706
         BE    @RF01706                                            1706
*       DO;                         /* READ MSC PAB TABLE    @Z40LB01*/
*         TABSDG=I-F1;              /* SET SDG NUMBER        @Z40LB01*/
         BCTR  @04,0                                               1708
         STC   @04,TABSDG                                          1708
*         QUERYAR=''B;              /* CLEAR PARM AREA       @OZ30157*/
         L     @04,WORKPTR                                         1709
         XC    QUERYAR(44,@04),QUERYAR(@04)                        1709
*         PABPTR=ADDR(QUBUF3)+256;  /* SET POINTER FOR PAB   @OZ30157*/
         AH    @04,@CH03604                                        1710
         ST    @04,PABPTR                                          1710
*IQUERY1:                                                          1711
*                                                                  1711
*         /***********************************************************/
*         /*                                                         */
*         /* ******************************************************* */
*         /*                                                 @Z40LB22*/
*         /* MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL MACRO  @Z40LB22*/
*         /* OS/VS2 VERSION-- 03/21/75 LEVEL 00              @Z40LB22*/
*         /* THIS IS THE OUTPUT FOR THE EXECUTE FORM.        @Z40LB22*/
*         /* THE LIST FORM OF THIS MACRO SHOULD BE           @Z40LB22*/
*         /* INVOKED FIRST IN ORDER TO SET UP NECESSARY      @Z40LB22*/
*         /* DECLARES. IF THE COMPLETE ARGUMENT IS           @Z40LB22*/
*         /* SPECIFIED THE REQ BLOCK WILL BE ZEROED.         @Z40LB22*/
*         /* ******************************************************* */
*         /*                                                 @Z40LB22*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1711
*         RFY                                                      1711
*          (QUERR1) RSTD;           /* RESTRICT R1           @Z40LB22*/
IQUERY1  DS    0H                                                  1712
*         QUERR1=ADDR(QUERYAR);     /* SET QUERR1 TO REQ BLOCK     1712
*                                                            @Z40LB22*/
         L     @04,WORKPTR                                         1712
         LR    QUERR1,@04                                          1712
*         QULEN='2C'X;              /* SET LENGTH FIELD      @Z40LB22*/
         LA    @00,44                                              1713
         ST    @00,QULEN(,@04)                                     1713
*         QUORD='05'X;              /* SET OPCODE FIELD      @Z40LB22*/
         MVI   QUORD(@04),X'05'                                    1714
*         QUCODE='06'X;             /* SET CODE TYPE         @Z40LB22*/
         MVI   QUCODE(@04),X'06'                                   1715
*         QUPARM=(TABPARM);         /* FILL IN PARAMETERS    @Z40LB22*/
         MVI   QUPARM+20(@04),C' '                                 1716
         MVC   QUPARM+21(11,@04),QUPARM+20(@04)                    1716
         MVC   QUPARM(20,@04),TABPARM                              1716
*         QUPTR=ADDR(QUBUF3);       /* ADDR OF DATAPTR FIELD @Z40LB22*/
         LA    @00,1488                                            1717
         ALR   @00,@04                                             1717
         ST    @00,QUPTR(,@04)                                     1717
*         SVC(126);                 /* ISSUE SVC INST.       @Z40LB22*/
         SVC   126                                                 1718
*         RFY                                                      1719
*          (QUERR1) UNRSTD;         /* UNRESTRICT R1         @Z40LB22*/
*                                                                  1719
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 @OZ30157*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1720
*         RFY                                                      1720
*           R15 RSTD;               /* RESTRICT REG 15       @Z40LB01*/
*         IF R15^=F0 THEN           /* CHECK FOR ERROR       @Z40LB01*/
         LTR   R15,R15                                             1721
         BZ    @RF01721                                            1721
*           DO;                     /* PROCESS ERROR         @Z40LB01*/
*             RFY                                                  1723
*               R15 UNRSTD;         /* FREE REG 15           @Z40LB01*/
*             DO K=F1 TO F8;        /* SCAN BY SSID          @Z40LB01*/
         LA    @04,1                                               1724
         STH   @04,K                                               1724
@DL01724 DS    0H                                                  1725
*               IF CONFGMSK(K)=(SDGREQ(I)&CONFGMSK(K)) THEN/*      1725
*                                                            @Z40LB01*/
         L     @15,@CA01312                                        1725
         LH    @14,I                                               1725
         LA    @03,SDGREQ-1(@14)                                   1725
         MVC   @TS00001(1),0(@03)                                  1725
         ST    @04,@TF00001                                        1725
         ALR   @04,@15                                             1725
         BCTR  @04,0                                               1725
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@04)                  1725
         AL    @15,@TF00001                                        1725
         BCTR  @15,0                                               1725
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   1725
         BNE   @RF01725                                            1725
*                 STATFLG((I-1)*8+K)='*';/* ERROR IND        @Z40LB01*/
         BCTR  @14,0                                               1726
         SLA   @14,3                                               1726
         AL    @14,@TF00001                                        1726
         MH    @14,@CH00060                                        1726
         L     @04,WORKPTR                                         1726
         ALR   @04,@14                                             1726
         MVI   STATFLG+41(@04),C'*'                                1726
*             END;                  /* END SSID SCAN         @Z40LB01*/
@RF01725 LA    @04,1                                               1727
         AH    @04,K                                               1727
         STH   @04,K                                               1727
         CH    @04,@CH00036                                        1727
         BNH   @DL01724                                            1727
*           END;                    /* END ERROR PROC        @Z40LB01*/
*         ELSE                      /* GOOD RETURN           @Z40LB01*/
*           DO K=F1 TO F8;          /* SCAN BY SSID          @Z40LB01*/
         B     @RC01721                                            1729
@RF01721 LA    @04,1                                               1729
         STH   @04,K                                               1729
@DL01729 DS    0H                                                  1730
*             IF CONFGMSK(K)=(SDGREQ(I)&CONFGMSK(K)) THEN/*  @Z40LB01*/
         L     @15,@CA01312                                        1730
         LH    @14,I                                               1730
         LA    @03,SDGREQ-1(@14)                                   1730
         MVC   @TS00001(1),0(@03)                                  1730
         ST    @04,@TF00001                                        1730
         ALR   @04,@15                                             1730
         BCTR  @04,0                                               1730
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@04)                  1730
         LR    @04,@15                                             1730
         AL    @04,@TF00001                                        1730
         BCTR  @04,0                                               1730
         CLC   CONFGMSK-CONFGMSK(1,@04),@TS00001                   1730
         BNE   @RF01730                                            1730
*               DO;                 /* BUILD STAT TBL ENTRY  @Z40LB01*/
*                                                                  1731
*                 /***************************************************/
*                 /*                                                 */
*                 /* BUILD STATUS TABLE ENTRY FOR SSID       @Z40LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1732
*                 STATFLG((I-1)*8+K)=PABFLG(K);/* FLAGS FR PAB     1732
*                                                            @Z40LB01*/
         BCTR  @14,0                                               1732
         SLA   @14,3                                               1732
         AL    @14,@TF00001                                        1732
         MH    @14,@CH00060                                        1732
         LA    @04,44                                              1732
         AL    @04,WORKPTR                                         1732
         ST    @14,@TF00002                                        1732
         ALR   @14,@04                                             1732
         AL    @14,@CF03655                                        1732
         L     @03,PABPTR                                          1732
         L     @02,@TF00001                                        1732
         SLA   @02,2                                               1732
         ST    @02,@TF00001                                        1732
         ALR   @02,@03                                             1732
         MVC   STATFLG(1,@14),PABFLG-4(@02)                        1732
*                 STATUNIT((I-1)*8+K)=PABUNIT(K);/* UNITS FR PAB   1733
*                                                            @Z40LB01*/
*                                                                  1733
         LR    @14,@04                                             1733
         AL    @14,@TF00002                                        1733
         BCTR  @14,0                                               1733
         BCTR  @14,0                                               1733
         LR    @02,@03                                             1733
         AL    @02,@TF00001                                        1733
         MVC   STATUNIT-1(2,@14),PABUNIT-4(@02)                    1733
*                 /***************************************************/
*                 /*                                                 */
*                 /* THE MSC PAB FLAG BIT FOR 3330 MOD 2 SECOND      */
*                 /*                                         @Z40LB01*/
*                 /* HALF (BIT(7)) IS BEING OVERLAID IN THE NEXT     */
*                 /*                                         @Z40LB01*/
*                 /* CODE. THIS BIT IS BEING USED TO KEEP TRACK      */
*                 /*                                         @Z40LB01*/
*                 /* OF THE CONVERTABLE STATUS OF THE SSID. IF       */
*                 /*                                         @Z40LB01*/
*                 /* THIS BIT IS NOT USED, AN ADDITIONAL 224 @Z40LB01*/
*                 /* BYTES WILL BE REQUIRED IN THE STATUS TABLE      */
*                 /*                                         @Z40LB01*/
*                 /* TO STORE THE PAB REAL INTERFACE BYTE.   @Z40LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1734
*                 IF PABRI(K)^=HEX00 THEN/* NON ZERO         @Z40LB01*/
         AL    @03,@TF00001                                        1734
         CLI   PABRI-4(@03),X'00'                                  1734
         BE    @RF01734                                            1734
*                   STATFLG((I-1)*8+K)=/*                    @Z40LB01*/
*                       (STATFLG((I-1)*8+K)×CONFGMSK(8));/*  @Z40LB01*/
         AL    @04,@TF00002                                        1735
         AL    @04,@CF03655                                        1735
         OC    STATFLG(1,@04),CONFGMSK-CONFGMSK+7(@15)             1735
*                 ELSE              /* MAKE SURE BIT OFF     @Z40LB01*/
*                   STATFLG((I-1)*8+K)=/*                    @Z40LB01*/
*                       (STATFLG((I-1)*8+K)&'FE'X);/* CLEAR BIT    1736
*                                                            @Z40LB01*/
         B     @RC01734                                            1736
@RF01734 LH    @04,I                                               1736
         BCTR  @04,0                                               1736
         SLA   @04,3                                               1736
         AH    @04,K                                               1736
         MH    @04,@CH00060                                        1736
         L     @15,WORKPTR                                         1736
         ALR   @15,@04                                             1736
         NI    STATFLG+41(@15),X'FE'                               1736
*               END;                /* END STAT ENTRY        @Z40LB01*/
@RC01734 DS    0H                                                  1738
*           END;                    /* END SSID SCAN         @Z40LB01*/
@RF01730 LA    @04,1                                               1738
         AH    @04,K                                               1738
         STH   @04,K                                               1738
         CH    @04,@CH00036                                        1738
         BNH   @DL01729                                            1738
*       END;                        /* END THIS SDG          @Z40LB01*/
@RC01721 DS    0H                                                  1740
*   END;                            /* END SDG TBL BUILD     @Z40LB01*/
@RF01706 LA    @04,1                                               1740
         AH    @04,I                                               1740
         STH   @04,I                                               1740
         CH    @04,@CH01339                                        1740
         BNH   @DL01705                                            1740
*   RFY                                                            1741
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=MSG56B14;                   /* RESTORE RETURN REG    @Z40LB01*/
         L     R14,MSG56B14                                        1742
*   RFY                                                            1743
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RETURN TO ICBMSG56    @Z40LB01*/
@EL00008 DS    0H                                                  1744
@EF00008 DS    0H                                                  1744
@ER00008 BR    @14                                                 1744
*   END MSG56B;                     /* END MSG56B SUB        @Z40LB01*/
*                                                                  1746
*/************ SUBROUTINE MSG56AA ***********                @OZ30157*/
*                                                                  1746
*MSG56AA:                                                          1746
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56AA  DS    0H                                                  1747
*/********************************************************   @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME - MSG56AA                                 @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: CALL MSG56A THEN BUMP MSGIND TO NEXT VALUE     @OZ30157*/
*/*           AND MOVE IN BASE FOR NEXT LINE OF MESSAGE.     @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUT -  MSGIND SET TO LINE INDEX FOR FIRST MESSAGE      @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUT - ML WTO BUFFER CLEARED WITH HEADER LINES BUILT   @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************   @OZ30157*/
*                                                                  1747
*   DCL                                                            1747
*     MS56AA14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   RFY                                                            1748
*     R14 RSTD;                     /* RESTRICT REG 14       @OZ30157*/
*   MS56AA14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56AA14                                        1749
*   RFY                                                            1750
*     R14 UNRSTD;                   /* FREE REG 14           @OZ30157*/
*   CALL MSG56A;                    /* CALL MSG BUILD SUB    @OZ30157*/
         BAL   @14,MSG56A                                          1751
*   IF DSPNEW=BZERO THEN            /* SET IND FOR NXT LINE  @OZ30157*/
         L     @04,@CA00041                                        1752
         L     @04,CWBPTR-CWBPTR(,@04)                             1752
         TM    DSPNEW(@04),B'01000000'                             1752
         BNZ   @RF01752                                            1752
*     MSGIND=MSG05605;              /* IF SSID DISPLAY       @OZ30157*/
         MVI   MSGIND,X'15'                                        1753
*   ELSE                                                           1754
*     MSGIND=MSGIND+1;              /* IF NOT                @OZ30157*/
         B     @RC01752                                            1754
@RF01752 IC    @04,MSGIND                                          1754
         LA    @04,1(,@04)                                         1754
         STC   @04,MSGIND                                          1754
*   WPLML0=F0;                      /* INSURE ZERO LENGTH    @OZ30157*/
@RC01752 L     @04,WPLPTR                                          1755
         MVI   WPLML0(@04),X'00'                                   1755
*   WPLMLLTF=''B;                   /* AND FLAGS             @OZ30157*/
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       1756
*   WPLMLLTC=BONE;                  /* DATA LINE FLAG        @OZ30157*/
         OI    WPLMLLTC(@04),B'00100000'                           1757
*   WPLMLTXT=MESGS(MSGIND);         /* LINE LABEL            @OZ30157*/
         MVI   WPLMLTXT+72(@04),C' '                               1758
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                1758
         SLR   @15,@15                                             1758
         IC    @15,MSGIND                                          1758
         MH    @15,@CH03605                                        1758
         LA    @14,MESGS-76(@15)                                   1758
         MVC   WPLMLTXT(72,@04),0(@14)                             1758
*   WPLMLLEN=MESGLEN(MSGIND)+F4;    /* LEN + TYPE            @OZ30157*/
         LA    @00,4                                               1759
         LA    @14,MESGLEN-76(@15)                                 1759
         MVC   @ZT00003+3(1),0(@14)                                1759
         AL    @00,@ZT00003                                        1759
         STC   @00,WPLMLLEN(,@04)                                  1759
*/*********************************************************  @Z40LB01*/
*/* RESTORE RETURN REG AND RETURN TO ICBMSG56                @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  1760
*   RFY                                                            1760
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=MS56AA14;                   /* RESTORE RETURN REG    @Z40LB01*/
         L     R14,MS56AA14                                        1761
*   RFY                                                            1762
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RETURN TO ICBMSG56    @Z40LB01*/
@EL00009 DS    0H                                                  1763
@EF00009 DS    0H                                                  1763
@ER00009 BR    @14                                                 1763
*   END MSG56AA;                    /* END OF ROUTINE        @OZ30157*/
*                                                                  1765
*/************ SUBROUTINE MSG56A ***********                 @Z40LB01*/
*                                                                  1765
*MSG56A:                                                           1765
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/
MSG56A   DS    0H                                                  1766
*/********************************************************   @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* PROCEDURE NAME - MSG56A                                  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* FUNCTION - INITIALIZES ML WTO COUNTS AND CLEARS ML       @Z40LB01*/
*/*            WTO BUFFER AREA. CREATE TWO HEADER LINES      @Z40LB01*/
*/*            FOR THE DISPLAY MESSAGE AND SINGLE LINE       @Z40LB01*/
*/*            MESSAGES AS REQUIRED.                         @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*            ____________________________________          @Z40LB01*/
*/*            ×   LENGTH        ×     FLAGS      ×          @Z40LB01*/
*/*            ×_________________×________________×          @Z40LB01*/
*/*            ×         HEADER 1                 ×          @Z40LB01*/
*/*            ×          TEXT                    ×          @Z40LB01*/
*/*            ×__________________________________×          @Z40LB01*/
*/*        SL  ×   DESC CODE     ×  ROUTE CODE    ×  SL      @Z40LB01*/
*/*        ___ ×_________________×________________× ___      @Z40LB01*/
*/*        ML  ×  LINE TYPE      × AREA   ×# LINES×  ML      @Z40LB01*/
*/*            ×_________________×________×_______×          @Z40LB01*/
*/*            ×        × LENGTH ×  LINE TYPE     ×          @Z40LB01*/
*/*            ×________×________×________________×          @Z40LB01*/
*/*            ×         HEADER 2                 ×          @Z40LB01*/
*/*            ×          TEXT                    ×          @Z40LB01*/
*/*            ×__________________________________×          @Z40LB01*/
*/*            ×        × LENGTH ×  LINE TYPE     ×          @Z40LB01*/
*/*            ×________×________×________________×          @Z40LB01*/
*/*            ×         DATA LINE                ×          @Z40LB01*/
*/*            ×          TEXT                    ×          @Z40LB01*/
*/*            × UP TO 8 (LENGTH,LINE TYPE, DATA  ×          @Z40LB01*/
*/*            ×   TEXT LINES CAN EXIST HERE      ×          @Z40LB01*/
*/*            ×__________________________________×          @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* INPUTS - MSGIND SET TO MSG05603 FOR ML HEADERS           @Z40LB01*/
*/*          MSGIND SET TO LINE INDEX FOR OTHER MSGS         @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* OUTPUT - ML WTO BUFFER CLEARED WITH HEADER LINES BUILT   @Z40LB01*/
*/*          IN THE BUFFER AND WPLPTR SET TO NEXT MESSAGE    @Z40LB01*/
*/*          LINE ENTRY. MSGCNT USED TO RECORD THE NUMBER    @Z40LB01*/
*/*          OF LINES IN BUFFER IS SET.                      @Z40LB01*/
*/*                                                          @Z40LB01*/
*/********************************************************   @Z40LB01*/
*                                                                  1766
*   DCL                                                            1766
*     MSG56A14 FIXED(31);           /* LOCAL RETURN REG SAVE @Z40LB01*/
*   RFY                                                            1767
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   MSG56A14=R14;                   /* SAVE RETURN REG       @Z40LB01*/
         ST    R14,MSG56A14                                        1768
*   RFY                                                            1769
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*/* SET COUNTS, BUILD FIRST LINE AND FLAGS FOR WTO           @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  1770
*   FLIPSW=BZERO;                   /* SET HALF LINE SWITCH  @Z40LB01*/
         NI    FLIPSW,B'11101111'                                  1770
*   MSGCNT=F2;                      /* SET LINE COUNT TO 2   @Z40LB01*/
         MVC   MSGCNT(2),@CH00056                                  1771
*   WPLPTR=ADDR(WPLBUF);            /* SET PTR TO ML BUFFER  @Z40LB01*/
         LA    @04,1200                                            1772
         AL    @04,WORKPTR                                         1772
         ST    @04,WPLPTR                                          1772
*   WPLTXT=MESGS(MSGIND);           /* HDR1 LINE             @Z40LB01*/
         MVI   WPLTXT+72(@04),C' '                                 1773
         MVC   WPLTXT+73(53,@04),WPLTXT+72(@04)                    1773
         SLR   @15,@15                                             1773
         IC    @15,MSGIND                                          1773
         MH    @15,@CH03605                                        1773
         LA    @14,MESGS-76(@15)                                   1773
         MVC   WPLTXT(72,@04),0(@14)                               1773
*   WPLLGH=MESGLEN(MSGIND)+F4;      /* LINE LENGTH + LIN TYP @Z40LB01*/
         LA    @00,4                                               1774
         LA    @14,MESGLEN-76(@15)                                 1774
         MVC   @ZT00003+3(1),0(@14)                                1774
         AL    @00,@ZT00003                                        1774
         STH   @00,WPLLGH(,@04)                                    1774
*   WPLMCSF=''B;                    /* CLEAR FLAG FIELD      @Z40LB01*/
         XC    WPLMCSF(2,@04),WPLMCSF(@04)                         1775
*   WPLMCSFA=BONE;                  /* ROUT AND DESC CODES FLG     1776
*                                                            @ZA14724*/
*   WPLMCSFB=BONE;                  /* QUEUE MESSAGES TO CONS      1777
*                                                            @Z40LB01*/
*   WPLMCSFC=BONE;                  /* CMD RESPONSE FLG      @Z40LB01*/
         OI    WPLMCSFA(@04),B'11100000'                           1778
*   IF MSGIND^=MSG05604 THEN        /* IF NO SYNTAX ERROR    @ZA14724*/
         CLI   MSGIND,20                                           1779
         BE    @RF01779                                            1779
*     IF MSGIND^=MSG05601 THEN      /* AND NOT INSUFF STORAGE      1780
*                                                            @OZ30157*/
         CLI   MSGIND,17                                           1780
         BE    @RF01780                                            1780
*       DO;                         /* THEN                  @OZ30157*/
*         WPLMCSFJ=BONE;            /* SET THE ML FLAG       @ZA14724*/
         OI    WPLMCSFJ(@04),B'01000000'                           1782
*         WPLTXT(11:18)=MSGTIME;    /* FILL TIME FIELD       @Z40LB01*/
         MVC   WPLTXT+10(8,@04),MSGTIME                            1783
*       END;                        /*                       @OZ30157*/
*     ELSE                          /* AND IF MSG 1          @OZ30157*/
*       MSG01TXT=MSG01FIL;          /* OVERLAY WITH STORAGE MSG    1785
*                                                            @OZ30157*/
         B     @RC01780                                            1785
@RF01780 L     @04,WPLPTR                                          1785
         MVC   MSG01TXT+36(30,@04),MSG01FIL                        1785
*   ELSE                            /* FOR SYNTAX ERROR MESSAGE    1786
*                                                            @OZ30157*/
*     DO;                           /* MUST FILL IN THE BLANKS     1786
*                                                            @OZ30157*/
         B     @RC01779                                            1786
@RF01779 DS    0H                                                  1787
*       IF DSPRNG=BONE THEN         /* IF BAD SSID RANGE     @OZ30157*/
         L     @04,@CA00041                                        1787
         L     @04,CWBPTR-CWBPTR(,@04)                             1787
         TM    DSPRNG(@04),B'00001000'                             1787
         BNO   @RF01787                                            1787
*         DO;                       /* SET BOTH QUALIFIERS   @OZ30157*/
*           MSG04TXT=MSG04FIL(3);   /* RANGE TEXT            @OZ30157*/
         LA    @04,37                                              1789
         AL    @04,WPLPTR                                          1789
         MVC   MSG04TXT(30,@04),MSG04FIL+60                        1789
*           MSG04RN1=QUAL(1,1:3);   /* FIRST SSID IN RANGE   @OZ30157*/
         MVC   MSG04RN1(3,@04),QUAL                                1790
*           MSG04RN2=QUAL(2,1:3);   /* SECOND IN RANGE       @OZ30157*/
         MVC   MSG04RN2(3,@04),QUAL+11                             1791
*         END;                      /* END RANGE SECTION     @OZ30157*/
*       ELSE                        /* NON-RANGE SECTION     @OZ30157*/
*         IF DSPCPU=BONE THEN       /* IF CPUID REQUEST      @OZ30157*/
         B     @RC01787                                            1793
@RF01787 L     @04,@CA00041                                        1793
         L     @04,CWBPTR-CWBPTR(,@04)                             1793
         TM    DSPCPU(@04),B'00000010'                             1793
         BNO   @RF01793                                            1793
*           DO;                     /* THEN BUILD CPU MSG    @OZ30157*/
*             MSG04TXT=MSG04FIL(1); /* FILL WITH CPU TEXT    @OZ30157*/
         LA    @04,37                                              1795
         AL    @04,WPLPTR                                          1795
         MVC   MSG04TXT(30,@04),MSG04FIL                           1795
*             MSG04CPU=QUAL(1,1:10);/* PUT IN CPUID          @OZ30157*/
         MVC   MSG04CPU(10,@04),QUAL                               1796
*           END;                    /* END FILL CPU MSG      @OZ30157*/
*         ELSE                                                     1798
*           IF DSPSDG=BONE THEN     /* ELSE IF SDGNN, GET BAD      1798
*                                                            @OZ30157*/
         B     @RC01793                                            1798
@RF01793 L     @04,@CA00041                                        1798
         L     @04,CWBPTR-CWBPTR(,@04)                             1798
         TM    DSPSDG(@04),B'00010000'                             1798
         BNO   @RF01798                                            1798
*             DO;                   /* THEN BUILD CPU MSG    @OZ30157*/
*               MSG04TXT=MSG04FIL(4);/* FILL WITH SDG TEXT   @OZ30157*/
         LA    @04,37                                              1800
         AL    @04,WPLPTR                                          1800
         MVC   MSG04TXT(30,@04),MSG04FIL+90                        1800
*               MSG04SDG=QUAL(1,1:2);/* SDG NUMBER           @OZ30157*/
         MVC   MSG04SDG(2,@04),QUAL                                1801
*             END;                  /* END FILL CPU MSG      @OZ30157*/
*           ELSE                                                   1803
*             IF DSPDRC=BONE THEN   /* ELSE IF DRCNN GET BAD @OZ30157*/
         B     @RC01798                                            1803
@RF01798 L     @04,@CA00041                                        1803
         L     @04,CWBPTR-CWBPTR(,@04)                             1803
         TM    DSPDRC(@04),B'10000000'                             1803
         BNO   @RF01803                                            1803
*               DO;                 /* THEN BUILD CPU MSG    @OZ30157*/
*                 MSG04TXT=MSG04FIL(5);/* FILL WITH DRC TEXT @OZ30157*/
         LA    @04,37                                              1805
         AL    @04,WPLPTR                                          1805
         MVC   MSG04TXT(30,@04),MSG04FIL+120                       1805
*                 MSG04DRC=QUAL(1,1:2);/* DRC NUMBER         @OZ30157*/
         MVC   MSG04DRC(2,@04),QUAL                                1806
*               END;                /* END FILL CPU MSG      @OZ30157*/
*             ELSE                                                 1808
*               IF DSPSSID=BONE THEN/* ELSE GET BAD          @OZ30157*/
         B     @RC01803                                            1808
@RF01803 L     @04,@CA00041                                        1808
         L     @04,CWBPTR-CWBPTR(,@04)                             1808
         TM    DSPSSID(@04),B'00000100'                            1808
         BNO   @RF01808                                            1808
*                 DO;               /* THEN BUILD CPU MSG    @OZ30157*/
*                   MSG04TXT=MSG04FIL(2);/* FILL WITH SSID TEXT    1810
*                                                            @OZ30157*/
         LA    @04,37                                              1810
         AL    @04,WPLPTR                                          1810
         MVC   MSG04TXT(30,@04),MSG04FIL+30                        1810
*                   MSG04SSI=QUAL(1,1:3);/* SSID '           @OZ30157*/
         MVC   MSG04SSI(3,@04),QUAL                                1811
*                 END;              /* END FILL CPU MSG      @OZ30157*/
*               ELSE                                               1813
*                 ;                 /*                       @OZ30157*/
@RF01808 DS    0H                                                  1814
*     END;                          /* END MSG05604 LINE 2   @OZ30157*/
@RC01803 DS    0H                                                  1814
@RC01798 DS    0H                                                  1814
@RC01793 DS    0H                                                  1814
@RC01787 DS    0H                                                  1815
*/*********************************************************  @ZA14724*/
*/* SET WPLPTR TO ROUT DESC FIELDS AND FILL THEM.            @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  1815
*   WPLPTR=WPLPTR+WPLLGH;           /* POINT TO DESC ROUT FIELD    1815
*                                                            @Z40LB01*/
@RC01779 L     @04,WPLPTR                                          1815
         LH    @00,WPLLGH(,@04)                                    1815
         ALR   @00,@04                                             1815
         ST    @00,WPLPTR                                          1815
*   WPLFLGS=''B;                    /* CLEAR FLAG FIELD      @Z40LB01*/
         LR    @04,@00                                             1816
         XC    WPLFLGS(8,@04),WPLFLGS(@04)                         1816
*   WPLDESCE=BONE;                  /* IMMED CMD RESPONSE    @Z40LB01*/
*   WPLDESCH=BONE;                  /* OUT-OF-LINE MESSAGE   @ZA14724*/
         LR    @04,@00                                             1818
         OI    WPLDESCE(@04),B'00001001'                           1818
*   WPLDESCI=BONE;                  /* DESCRIPTOR CODE 9     @ZA14724*/
         LR    @04,@00                                             1819
         OI    WPLDESCI(@04),B'10000000'                           1819
*   IF MSGIND=MSG05604×MSGIND=MSG05601 THEN/* IF ERROR MSG   @OZ30157*/
         CLI   MSGIND,20                                           1820
         BE    @RT01820                                            1820
         CLI   MSGIND,17                                           1820
         BNE   @RF01820                                            1820
@RT01820 DS    0H                                                  1821
*     WPLROUTB=BONE;                /* ROUTE MAS CONS INFO   @ZA14724*/
         L     @04,WPLPTR                                          1821
         OI    WPLROUTB(@04),B'01000000'                           1821
*   ELSE                            /* IF MULTI-LINE, THEN   @OZ30157*/
*     DO;                           /* MUST SET UP FOR IT    @OZ30157*/
         B     @RC01820                                            1822
@RF01820 DS    0H                                                  1823
*       WPLPTR=WPLPTR+LENGTH(WPLFLGS)-F4;/* POINT TO LINE TYPE     1823
*                                                            @Z40LB01*/
         L     @04,WPLPTR                                          1823
         SL    @04,@CF03609                                        1823
         ST    @04,WPLPTR                                          1823
*       WPLLTF=''B;                 /* CLEAR FLAG FIELD      @Z40LB01*/
         XC    WPLLTF(2,@04),WPLLTF(@04)                           1824
*       IF MSGIND=MSG05602 THEN     /* SSID MSG SHOULD HAVE A      1825
*                                                            @ZA14724*/
         CLI   MSGIND,18                                           1825
         BNE   @RF01825                                            1825
*         WPLLTFA=BONE;             /* CONTROL LINE FLAG     @ZA14724*/
         OI    WPLLTFA(@04),B'10000000'                            1826
*       ELSE                        /* OTHER LINES SHOULD HAVE A   1827
*                                                            @ZA14724*/
*         WPLLTFC=BONE;             /* DATA LINE FLAG        @OZ30157*/
         B     @RC01825                                            1827
@RF01825 L     @04,WPLPTR                                          1827
         OI    WPLLTFC(@04),B'00100000'                            1827
*       WPLAREA=CWBLA;              /* AREA ID FOR MSG       @Z40LB01*/
@RC01825 L     @04,WPLPTR                                          1828
         L     @15,@CA00041                                        1828
         L     @15,CWBPTR-CWBPTR(,@15)                             1828
         MVC   WPLAREA(1,@04),CWBLA(@15)                           1828
*/*********************************************************  @Z40LB01*/
*/* BUILD FIRST DATA HEADER AND SET MULTI LINE FLAGS         @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  1829
*       WPLPTR=WPLPTR+LENGTH(WPLLS01);/* POINT TO NEXT LINE  @Z40LB01*/
         AL    @04,@CF00045                                        1829
         ST    @04,WPLPTR                                          1829
*       WPLMLLTF=''B;               /* CLEAR FLAG FIELD      @Z40LB01*/
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       1830
*       WPLML0=F0;                  /* CLEAR FILL FIELD      @Z40LB01*/
         MVI   WPLML0(@04),X'00'                                   1831
*     END;                          /* END MULTI-LINE ROUTINE      1832
*                                                            @OZ30157*/
*/*********************************************************  @Z40LB01*/
*/* RESTORE RETURN REG AND RETURN TO ICBMSG56                @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  1833
*   RFY                                                            1833
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
@RC01820 DS    0H                                                  1834
*   R14=MSG56A14;                   /* RESTORE RETURN REG    @Z40LB01*/
         L     R14,MSG56A14                                        1834
*   RFY                                                            1835
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RETURN TO ICBMSG56    @Z40LB01*/
@EL00010 DS    0H                                                  1836
@EF00010 DS    0H                                                  1836
@ER00010 BR    @14                                                 1836
*   END MSG56A;                     /* END MSG56A SUB        @Z40LB01*/
*MSG56CA:                                                          1838
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56CA  DS    0H                                                  1839
*/********************************************************   @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME - MSG56CA                                 @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION - CLEANUP RESIDUAL MESSAGES IN THE WPL BUFFER   @OZ30157*/
*/*           BUILD BLANK LINE FOR OUTPUT AND CALL MSG56C TO @OZ30157*/
*/*           DISPLAY THE MESSAGE BUFFER.                    @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUT: MESSAGES IN BUFFER, BUT BUFFER NOT FULL.          @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUT: MESSAGES WRITTEN.                                @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************   @OZ30157*/
*                                                                  1839
*   DCL                                                            1839
*     MS56CA14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   RFY                                                            1840
*     R14 RSTD;                     /* RESTRICT REG 14       @OZ30157*/
*   MS56CA14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56CA14                                        1841
*   RFY                                                            1842
*     R14 UNRSTD;                   /* FREE REG 14           @OZ30157*/
*   WPLML0=F0;                      /* CLEAR FILL FIELD      @OZ30157*/
         L     @04,WPLPTR                                          1843
         MVI   WPLML0(@04),X'00'                                   1843
*   WPLMLLTF=''B;                   /* CLEAR FLAG FIELD      @OZ30157*/
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       1844
*   WPLMLLTC=BONE;                  /* DATA LINE FLAG        @OZ30157*/
*   WPLMLLTD=BONE;                  /* SET END LINE IND      @OZ30157*/
         OI    WPLMLLTC(@04),B'00110000'                           1846
*   WPLMLLEN=LENGTH(FHALF)+F4;      /* HALF LINE LENGTH      @OZ30157*/
         MVI   WPLMLLEN(@04),X'27'                                 1847
*   MSGCNT=MSGCNT+F1;               /* UP MSG LINE COUNT     @OZ30157*/
         LH    @04,MSGCNT                                          1848
         LA    @04,1(,@04)                                         1848
         STH   @04,MSGCNT                                          1848
*   CALL MSG56C;                    /* WRITE SUBROUTINE      @OZ30157*/
         BAL   @14,MSG56C                                          1849
*/*********************************************************  @OZ30157*/
*/* RESTORE RETURN REG AND RETURN TO ICBMSG56                @OZ30157*/
*/*********************************************************  @OZ30157*/
*                                                                  1850
*   RFY                                                            1850
*     R14 RSTD;                     /* RESTRICT REG 14       @OZ30157*/
*   R14=MS56CA14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56CA14                                        1851
*   RFY                                                            1852
*     R14 UNRSTD;                   /* FREE REG 14           @OZ30157*/
*   RETURN;                         /* RETURN TO ICBMSG56    @OZ30157*/
@EL00011 DS    0H                                                  1853
@EF00011 DS    0H                                                  1853
@ER00011 BR    @14                                                 1853
*   END MSG56CA;                    /* END OF ROUTINE        @OZ30157*/
*MSG56C:                                                           1855
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/
MSG56C   DS    0H                                                  1856
*/********************************************************   @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* PROCEDURE NAME - MSG56C                                  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* FUNCTION - SET REGS AND ISSUE WTO MACRO FOR MULTI-       @Z40LB01*/
*/*            LINE DISPLAY MESSAGES.                        @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* INPUTS - WPLPTR SET TO ML WTO BUFFER                     @Z40LB01*/
*/*          CONSOLE SET TO THE TARGET CONSOLE FROM CWB      @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* OUTPUTS - MESSAGE WRITTEN TO SPECIFIED CONSOLE           @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* MESSAGE ISSUED THIS SUB-ROUTINE                          @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*          ICB056I DISPLAY LINES                           @Z40LB01*/
*/*                                                          @Z40LB01*/
*/********************************************************   @Z40LB01*/
*                                                                  1856
*   DCL                                                            1856
*     MSG56C14 FIXED(31);           /* LOCAL RETURN REG SAVE @Z40LB01*/
*   RFY                                                            1857
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   MSG56C14=R14;                   /* SAVE RETURN REG       @Z40LB01*/
         ST    R14,MSG56C14                                        1858
*   RFY                                                            1859
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*/********************************************************   @Z40LB01*/
*/* SET WPL POINTER AND FILL LINE COUNT FIELD                @Z40LB01*/
*/********************************************************   @Z40LB01*/
*                                                                  1860
*   WPLPSAVE=WPLPTR;                /* SAVE WPLPTR ADDRESS   @ZA14724*/
         MVC   WPLPSAVE(4),WPLPTR                                  1860
*   WPLPTR=ADDR(WPLBUF);            /* SET TO START OF BUF   @Z40LB01*/
         LA    @04,1200                                            1861
         AL    @04,WORKPTR                                         1861
         ST    @04,WPLPTR                                          1861
*   WPLPTR=WPLPTR+WPLLGH-F4+LENGTH(WPLFLGS);/* TO LINE CNT FLD     1862
*                                                            @Z40LB01*/
         LH    @00,WPLLGH(,@04)                                    1862
         ALR   @00,@04                                             1862
         AL    @00,@CF00045                                        1862
         ST    @00,WPLPTR                                          1862
*   WPLLINES=MSGCNT;                /* SET LINE COUNT        @Z40LB01*/
         LR    @04,@00                                             1863
         MVC   WPLLINES(1,@04),MSGCNT+1                            1863
*/********************************************************   @Z40LB01*/
*/* SET CONSOLE ID                                           @Z40LB01*/
*/********************************************************   @Z40LB01*/
*                                                                  1864
*   RFY                                                            1864
*    (R0) RSTD;                     /* RESTRICT R0 AND R1    @Z40LB01*/
*   IF MSGIND=MSG05604 THEN         /* IF ERROR MSG THEN WE  @ZA14724*/
         CLI   MSGIND,20                                           1865
         BNE   @RF01865                                            1865
*     CONSID4=CWBUCMID;             /* SET ORIG CONSODE ID   @ZA14724*/
         L     @04,@CA00041                                        1866
         L     @04,CWBPTR-CWBPTR(,@04)                             1866
         MVC   CONSID4(1),CWBUCMID(@04)                            1866
*   ELSE                            /* OTHERWISE             @ZA14724*/
*     CONSID4=CWBLCC;               /* SET TARGET CONSOLE ID @ZA14724*/
         B     @RC01865                                            1867
@RF01865 L     @04,@CA00041                                        1867
         L     @04,CWBPTR-CWBPTR(,@04)                             1867
         MVC   CONSID4(1),CWBLCC(@04)                              1867
*   R0=CONSOL;                      /* SET R0 FOR ML CONNECT @ZA14724*/
@RC01865 L     R0,CONSOL                                           1868
*   DO;                             /* WTOP MF(E,WPLBUF)             */
*     RFY                                                          1870
*       GPR01P RSTD;                /* RESTRICT REG 1                */
*     GPR01P=ADDR(WPLBUF);          /* ADDRESS CONTROL PROGRAM LIST  */
         LA    GPR01P,1200                                         1871
         AL    GPR01P,WORKPTR                                      1871
*     SVC(35);                      /* ISSUE WTO SVC                 */
         SVC   35                                                  1872
*     RFY                                                          1873
*       GPR01P UNRSTD;              /* RELEASE REG 1                 */
*   END;                            /* WTOP MF(E,WPLBUF) WTO MACRO 1874
*                                                            @Z40LB01*/
*   RFY                                                            1875
*     GPR01P RSTD;                  /* RESTRICT R1           @OZ30157*/
*   SAVDOMID=GPR01P;                /* SAVE DOM FROM REG 1   @ZA14724*/
         ST    GPR01P,@TF00001                                     1876
         MVC   SAVDOMID(3),@TF00001+1                              1876
*   RFY                                                            1877
*     GPR01P UNRSTD;                /* FREE R1               @OZ30157*/
*   RFY                                                            1878
*    (R0) UNRSTD;                   /* FREE R0               @OZ30157*/
*   RFY                                                            1879
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=MSG56C14;                   /* RESTORE CALLER RETURN @Z40LB01*/
         L     R14,MSG56C14                                        1880
*   RFY                                                            1881
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RETURN TO ICBMSG56    @Z40LB01*/
@EL00012 DS    0H                                                  1882
@EF00012 DS    0H                                                  1882
@ER00012 BR    @14                                                 1882
*   END MSG56C;                     /* END OF MSG56C SUB     @Z40LB01*/
*MSG56D:                                                           1884
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/
MSG56D   DS    0H                                                  1885
*/********************************************************   @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* PROCEDURE NAME - MSG56D                                  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* FUNCTION - THIS ROUTINE CHECKS FOR A FULL MULTI-LINE     @OZ30157*/
*/*            WTO BUFFER AND, IF FULL, CLOSES IT OUT,       @OZ30157*/
*/*            CALLS THE ML WTO WRITE SUB (MSG56C),          @OZ30157*/
*/*            CHECKS THE WRITE RESULTS, AND SETS UP         @Z40LB01*/
*/*            REQUIRED POINTERS AND COUNTS FOR THE          @Z40LB01*/
*/*            NEXT BUFFER FILL.                             @Z40LB01*/
*/*            IF NOT FULL, IT CLEANS UP THE CURRENT LINE,   @OZ30157*/
*/*            AND BUILDS THE BASE FOR THE NEXT LINE.        @OZ30157*/
*/*                                                          @Z40LB01*/
*/* INPUTS - INITIALIZED WPL ML BUFFER AND POINTER           @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* OUTPUTS - ML WTO LINES WRITTEN AND POINTERS              @Z40LB01*/
*/*           SET FOR NEXT DATA, OR POINTERS SET FOR         @OZ30157*/
*/*           NEXT DATA LINE.                                @OZ30157*/
*/*                                                          @Z40LB01*/
*/********************************************************   @Z40LB01*/
*                                                                  1885
*   DCL                                                            1885
*     MSG56D14 FIXED(31);           /* LOCAL SAVE AREA       @Z40LB01*/
*   RFY                                                            1886
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   MSG56D14=R14;                   /* SAVE RETURN REG       @Z40LB01*/
         ST    R14,MSG56D14                                        1887
*   RFY                                                            1888
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   WPLMLLTC=BONE;                  /* DATA LINE TYPE FLG    @OZ30157*/
         L     @04,WPLPTR                                          1889
         OI    WPLMLLTC(@04),B'00100000'                           1889
*   WPLML0=F0;                      /* CLEAR FILL FIELD      @OZ30157*/
         MVI   WPLML0(@04),X'00'                                   1890
*   WPLMLLEN=MESGLEN(MSGIND)+F4;    /* LINE LEN              @OZ30157*/
         SLR   @15,@15                                             1891
         IC    @15,MSGIND                                          1891
         MH    @15,@CH03605                                        1891
         LA    @00,4                                               1891
         LA    @14,MESGLEN-76(@15)                                 1891
         MVC   @ZT00003+3(1),0(@14)                                1891
         AL    @00,@ZT00003                                        1891
         STC   @00,WPLMLLEN(,@04)                                  1891
*   FLIPSW=BZERO;                   /*                       @OZ30157*/
         NI    FLIPSW,B'11101111'                                  1892
*   MSGCNT=MSGCNT+F1;               /*                       @OZ30157*/
         LA    @04,1                                               1893
         AH    @04,MSGCNT                                          1893
         STH   @04,MSGCNT                                          1893
*/********************************************************************/
*/*                                                                  */
*/* TEST FOR FULL ML WTO BUFFER, WRITE IF FULL               @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1894
*   IF MSGCNT=F10 THEN              /* IF BUFFER FULL, WRITE @OZ30157*/
         CH    @04,@CH00034                                        1894
         BNE   @RF01894                                            1894
*     DO;                           /*                       @OZ30157*/
*       MSGCNT=MSGCNT-F1;           /* ALL BUT LAST LINE     @ZA14724*/
         BCTR  @04,0                                               1896
         STH   @04,MSGCNT                                          1896
*       CALL MSG56C;                /* CALL WRITE SUB        @Z40LB01*/
         BAL   @14,MSG56C                                          1897
*/* ******************************************************   @Z40LB01*/
*/*  RESET THE ML POINTER TO FIRST DATA LINE, MOVE IN        @Z40LB01*/
*/*  DATA LINE SKELETON AND SET COUNTER.                     @Z40LB01*/
*/* ******************************************************   @Z40LB01*/
*                                                                  1898
*       MSGCNT=F1;                  /* INITIALIZE MESSAGE COUNT    1898
*                                                            @ZA14724*/
         MVC   MSGCNT(2),@CH00047                                  1898
*       WPLPTR=ADDR(WPLBUF);        /* SET UP WPL POINTER    @Z40LB01*/
         LA    @04,1200                                            1899
         AL    @04,WORKPTR                                         1899
         ST    @04,WPLPTR                                          1899
*       WPLTXT=LASMLTXT;            /* COPY TEXT FROM LAST   @ZA14724*/
         L     @15,WPLPSAVE                                        1900
         MVC   WPLTXT(126,@04),LASMLTXT(@15)                       1900
*       WPLLGH=LASMLLEN;            /* COPY LINE LENGTH      @ZA14724*/
         SLR   @00,@00                                             1901
         IC    @00,LASMLLEN(,@15)                                  1901
         STH   @00,WPLLGH(,@04)                                    1901
*       WPLMCSF=''B;                /* CLEAR FLAG FIELD      @Z40LB01*/
         XC    WPLMCSF(2,@04),WPLMCSF(@04)                         1902
*       WPLMCSFA=BONE;              /* ROUT AND DESC CODES FLG     1903
*                                                            @ZA14724*/
*       WPLMCSFB=BONE;              /* QUEUE MESSAGES TO CONS      1904
*                                                            @Z40LB01*/
*       WPLMCSFC=BONE;              /* CMD RESPONSE FLG      @Z40LB01*/
         OI    WPLMCSFA(@04),B'11100000'                           1905
*       WPLMCSFJ=BONE;              /* SET THE ML FLAG       @ZA14724*/
         OI    WPLMCSFJ(@04),B'01000000'                           1906
*       WPLPTR=WPLPTR+WPLLGH;       /* POINT TO DESC ROUT FIELD    1907
*                                                            @Z40LB01*/
         ALR   @04,@00                                             1907
         ST    @04,WPLPTR                                          1907
*       WPLFLGS=''B;                /* CLEAR FLAG FIELD      @ZA14724*/
         XC    WPLFLGS(8,@04),WPLFLGS(@04)                         1908
*       WPLDESCE=BONE;              /* IMMED CMD RESPONSE    @ZA14724*/
*       WPLDESCH=BONE;              /* OUT-OF-LINE MESSAGE   @ZA14724*/
         OI    WPLDESCE(@04),B'00001001'                           1910
*       WPLDESCI=BONE;              /* DESCRIPTOR CODE 9     @ZA14724*/
         OI    WPLDESCI(@04),B'10000000'                           1911
*       WPLPTR=WPLPTR+LENGTH(WPLFLGS)-F4;/* POINT TO LINE TYPE     1912
*                                                            @ZA14724*/
         SL    @04,@CF03609                                        1912
         ST    @04,WPLPTR                                          1912
*       WPLLTF=''B;                 /* CLEAR FLAG FIELD      @ZA14724*/
         XC    WPLLTF(2,@04),WPLLTF(@04)                           1913
*       WPLLTFC=BONE;               /* DATA LINE FLAG        @ZA14724*/
         OI    WPLLTFC(@04),B'00100000'                            1914
*       WPLAREA=CWBLA;              /* AREA ID FOR MSG       @ZA14724*/
         L     @15,@CA00041                                        1915
         L     @15,CWBPTR-CWBPTR(,@15)                             1915
         MVC   WPLAREA(1,@04),CWBLA(@15)                           1915
*       WPLPTR=WPLPTR+LENGTH(WPLLS01);/* POINT TO NEXT LINE  @ZA14724*/
         AL    @04,@CF00045                                        1916
         ST    @04,WPLPTR                                          1916
*     END;                          /*                       @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/* BUFFER NOT FULL, SET POINTERS FOR NEXT DATA              @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1918
*   ELSE                            /* NO WRITE REQUIRED     @OZ30157*/
*     WPLPTR=WPLPTR+WPLMLLEN;       /* NEXT LINE             @OZ30157*/
         B     @RC01894                                            1918
@RF01894 L     @04,WPLPTR                                          1918
         SLR   @00,@00                                             1918
         IC    @00,WPLMLLEN(,@04)                                  1918
         ALR   @00,@04                                             1918
         ST    @00,WPLPTR                                          1918
*   WPLMLLTF=''B;                   /* CLEAR FLAG FIELD      @ZA14724*/
@RC01894 L     @04,WPLPTR                                          1919
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       1919
*   WPLMLTXT=MESGS(MSGIND);         /* BLANK DATA LINE       @ZA14724*/
         MVI   WPLMLTXT+72(@04),C' '                               1920
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                1920
         SLR   @15,@15                                             1920
         IC    @15,MSGIND                                          1920
         MH    @15,@CH03605                                        1920
         LA    @14,MESGS-76(@15)                                   1920
         MVC   WPLMLTXT(72,@04),0(@14)                             1920
*   WPLML0=F0;                      /* ZERO AND FILL         @OZ30157*/
         MVI   WPLML0(@04),X'00'                                   1921
*   WPLMLLEN=MESGLEN(MSGIND)+F4;    /* LENGTH FIELD          @OZ30157*/
         LA    @00,4                                               1922
         LA    @14,MESGLEN-76(@15)                                 1922
         MVC   @ZT00003+3(1),0(@14)                                1922
         AL    @00,@ZT00003                                        1922
         STC   @00,WPLMLLEN(,@04)                                  1922
*   RFY                                                            1923
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=MSG56D14;                   /* RESTORE RETURN REG    @Z40LB01*/
         L     R14,MSG56D14                                        1924
*   RFY                                                            1925
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RETURN TO ICBMSG56    @Z40LB01*/
@EL00013 DS    0H                                                  1926
@EF00013 DS    0H                                                  1926
@ER00013 BR    @14                                                 1926
*   END MSG56D;                     /* END SUBROUTINE        @Z40LB01*/
*MSG56E:                                                           1928
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ24706*/
MSG56E   DS    0H                                                  1929
*/********************************************************   @OZ24706*/
*/*                                                          @OZ24706*/
*/* PROCEDURE NAME - MSG56E                                  @OZ24706*/
*/*                                                          @OZ24706*/
*/* FUNCTION - BUILD AND ISSUE THE DISPLAY 3850 ML START MESSAGE     */
*/*                                                          @OZ24706*/
*/* INPUTS - NONE                                            @OZ24706*/
*/*                                                          @OZ24706*/
*/* OUTPUTS - MESSAGE WRITTEN TO SPECIFIED CONSOLE           @OZ24706*/
*/*                                                          @OZ24706*/
*/* MESSAGE ISSUED THIS SUB-ROUTINE                          @OZ24706*/
*/*                                                          @OZ24706*/
*/*          ICB056I MULTI-LINE START MESSAGE                @OZ24706*/
*/*                                                          @OZ24706*/
*/********************************************************   @OZ24706*/
*                                                                  1929
*   DCL                                                            1929
*     MSG56E14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ24706*/
*   RFY                                                            1930
*     R14 RSTD;                     /* RESTRICT REG 14       @OZ24706*/
*   MSG56E14=R14;                   /* SAVE RETURN REG       @OZ24706*/
         ST    R14,MSG56E14                                        1931
*   RFY                                                            1932
*     R14 UNRSTD;                   /* FREE REG 14           @OZ24706*/
*                                                                  1932
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD AND ISSUE THE DISPLAY 3850 ML START MESSAGE     @OZ24706*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1933
*   MSGIND=MSG05602;                /* SET MSG LINE INDEX    @OZ24706*/
         MVI   MSGIND,X'12'                                        1933
*   CALL MSG56A;                    /* FORMAT CONTROL/LABEL LINES  1934
*                                                            @OZ24706*/
         BAL   @14,MSG56A                                          1934
*   WPLMLLTC=BONE;                  /* DATA LINE FLAG        @OZ24706*/
         L     @04,WPLPTR                                          1935
         OI    WPLMLLTC(@04),B'00100000'                           1935
*   WPLMLTXT=MESGS(MSG05607);       /* CONTROL LINE          @OZ24706*/
         MVI   WPLMLTXT+72(@04),C' '                               1936
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                1936
         MVC   WPLMLTXT(72,@04),MESGS+1672                         1936
*   WPLMLLEN=MESGLEN(MSG05607)+F4;  /* LINE LEN + LIN TYP    @OZ24706*/
         LA    @00,4                                               1937
         MVC   @ZT00003+3(1),MESGLEN+1672                          1937
         AL    @00,@ZT00003                                        1937
         STC   @00,WPLMLLEN(,@04)                                  1937
*/*********************************************************  @OZ24706*/
*/* FILL PHOST AND SECONDARY HOST FIELDS AFTER START LINE    @OZ24706*/
*/*********************************************************  @OZ24706*/
*                                                                  1938
*   UCBPTR=ICBPUCB;                 /* SET UCBPTR            @OZ24706*/
         L     @15,@CA00927                                        1938
         L     @14,CVTPTR                                          1938
         L     @14,CVTEXT2(,@14)                                   1938
         L     @14,CVTICB(,@14)                                    1938
         L     @00,ICBPUCB(,@14)                                   1938
         ST    @00,UCBPTR-UCBPTR(,@15)                             1938
*   WPLTXT(19:21)=UCBNAME;          /* MOVE IN UCB NAME      @OZ24706*/
         LR    @15,@00                                             1939
         MVC   WPLTXT+18(3,@04),UCBNAME(@15)                       1939
*   IF UCBONLI=BZERO THEN           /* IF PRIMARY DEVICE OFFLINE   1940
*                                                            @OZ24706*/
         LR    @15,@00                                             1940
         TM    UCBONLI(@15),B'10000000'                            1940
         BNZ   @RF01940                                            1940
*     WPLTXT(25:31)='OFFLINE';      /*                       @OZ24706*/
         MVC   WPLTXT+24(7,@04),@CC02856                           1941
*   IF ICBAUCB^=F0 THEN             /* IS THERE AN ALT MSC ? @OZ24706*/
@RF01940 L     @04,CVTPTR                                          1942
         L     @04,CVTEXT2(,@04)                                   1942
         L     @04,CVTICB(,@04)                                    1942
         L     @04,ICBAUCB(,@04)                                   1942
         LTR   @04,@04                                             1942
         BZ    @RF01942                                            1942
*     DO;                           /* ALT MSC AVAIL CODE    @OZ24706*/
*       UCBPTR=ICBAUCB;             /* SET UCBPTR TO ALT UCB @FIXLENS*/
         L     @15,@CA00927                                        1944
         ST    @04,UCBPTR-UCBPTR(,@15)                             1944
*       WPLTXT(42:44)=UCBNAME;      /* MOVE IN UCB NAME      @OZ24706*/
         L     @15,WPLPTR                                          1945
         MVC   WPLTXT+41(3,@15),UCBNAME(@04)                       1945
*       IF UCBONLI=BZERO THEN       /* IF SECNDRY DEVICE OFFLINE   1946
*                                                            @OZ24706*/
         TM    UCBONLI(@04),B'10000000'                            1946
         BNZ   @RF01946                                            1946
*         WPLTXT(48:54)='OFFLINE';  /*                       @OZ24706*/
         MVC   WPLTXT+47(7,@15),@CC02856                           1947
*     END;                          /* END ALT MSC CODE      @OZ24706*/
*   ELSE                            /* NO ALT MSC            @OZ24706*/
*     DO;                           /* ALT MSC AVAIL CODE    @OZ24706*/
         B     @RC01942                                            1949
@RF01942 DS    0H                                                  1950
*       WPLTXT(42:54)=BLANK;        /* BLANK OUT PORTION FIRST     1950
*                                                            @OZ24706*/
         L     @04,WPLPTR                                          1950
         MVC   WPLTXT+41(13,@04),@CC02699                          1950
*       WPLTXT(42:45)='NONE';       /* INDICATE NONE FOR ALT MSC   1951
*                                                            @OZ24706*/
         MVC   WPLTXT+41(4,@04),@CC03373                           1951
*     END;                          /* END ALT MSC CODE      @OZ24706*/
*   MSGCNT=MSGCNT+1;                /* INCREMENT LINE COUNT  @OZ24706*/
@RC01942 LH    @04,MSGCNT                                          1953
         LA    @04,1(,@04)                                         1953
         STH   @04,MSGCNT                                          1953
*   WPLPTR=WPLPTR+WPLMLLEN;         /* BUMP WPL POINTER      @OZ24706*/
         L     @04,WPLPTR                                          1954
         SLR   @00,@00                                             1954
         IC    @00,WPLMLLEN(,@04)                                  1954
         ALR   @00,@04                                             1954
         ST    @00,WPLPTR                                          1954
*   WPLMLLTF=''B;                   /* CLEAR FLAGS           @OZ24706*/
         LR    @04,@00                                             1955
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       1955
*   WPLMLLTC=BONE;                  /* SET UP AS DATA LINE   @OZ24706*/
         LR    @04,@00                                             1956
         OI    WPLMLLTC(@04),B'00100000'                           1956
*   WPLMLTXT=MESGS(MSG05606);       /* INSERT BLANK LINE     @OZ24706*/
         LR    @04,@00                                             1957
         MVI   WPLMLTXT+72(@04),C' '                               1957
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                1957
         MVC   WPLMLTXT(72,@04),MESGS+1596                         1957
*   WPLMLLEN=LENGTH(FHALF)+F4;      /* SET UP LINE COUNT     @OZ24706*/
         LR    @04,@00                                             1958
         MVI   WPLMLLEN(@04),X'27'                                 1958
*   WPLML0=F0;                      /* CLEAR FILL FIELD      @OZ24706*/
         LR    @04,@00                                             1959
         MVI   WPLML0(@04),X'00'                                   1959
*   CALL MSG56C;                    /* WRITE START MESSAGE   @OZ24706*/
         BAL   @14,MSG56C                                          1960
*   RFY                                                            1961
*     R14 RSTD;                     /* RESTRICT REG 14       @OZ24706*/
*   R14=MSG56E14;                   /* RESTORE CALLER RETURN @OZ24706*/
         L     R14,MSG56E14                                        1962
*   RFY                                                            1963
*     R14 UNRSTD;                   /* FREE REG 14           @OZ24706*/
*   RETURN;                         /* RETURN TO ICBMSG56    @OZ24706*/
@EL00014 DS    0H                                                  1964
@EF00014 DS    0H                                                  1964
@ER00014 BR    @14                                                 1964
*   END MSG56E;                     /* END OF MSG56C SUB     @OZ24706*/
*MSG56F:                                                           1966
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56F   DS    0H                                                  1967
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56F                                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DO GETMAIN FOR AREA OF REQUESTED SIZE AND      @OZ30157*/
*/*           STORE A POINTER TO THE AREA IN CALLERS PARM    @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: R1 POINTS TO PARAMETER LIST:                     @OZ30157*/
*/*               --------------------------------           @OZ30157*/
*/*              × LENGTH ×  ADDRESS OF POINTER   ×          @OZ30157*/
*/*               --------------------------------           @OZ30157*/
*/*        LENGTH SHOULD BE 00 IF 2K IS DESIRED, OTHERWISE   @OZ30157*/
*/*        ROUTINE WILL GET THE NUMBER OF 8 BYTE AREAS       @OZ30157*/
*/*        SPECIFIED.                                        @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: PLACES ADDRESS OF AREA OBTAINED IN POINTER TO   @OZ30157*/
*/*          WHICH PASSED ADDRESS POINTS. ALSO PLACES IT IN  @OZ30157*/
*/*          A TABLE OF GETMAINS TO BE USED TO FREE ALL      @OZ30157*/
*/*          AREAS AT END OF EXECUTION.                      @OZ30157*/
*/*          ALSO SETS RETURN CODE IN REGISTER 15: 0 - GOOD  @OZ30157*/
*/*                                                4 - ERROR @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  1967
*   DCL                                                            1967
*     MSG56F14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            1968
*     PARMPTR PTR(31);              /* PARAMETER POINTER     @OZ30157*/
*   DCL                                                            1969
*     SVPTR PTR(31);                /* SAVE INADDR HERE      @OZ30157*/
*   DCL                                                            1970
*     1 PARMS BASED(PARMPTR),       /* INPUT PARAMETER PTR   @OZ30157*/
*      2 INLEN FIXED(8),            /* INPUT LENGTH          @OZ30157*/
*      2 INADDR PTR(24);            /* INPUT POINTER ADDRESS @OZ30157*/
*   RFY                                                            1971
*     R14 RSTD;                     /*                       @OZ30157*/
*   MSG56F14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MSG56F14                                        1972
*   RFY                                                            1973
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETC=F0;                        /* INITIALIZE RETURN CODE@OZ30157*/
         SLR   @04,@04                                             1974
         STH   @04,RETC                                            1974
*   RFY                                                            1975
*     R0 RSTD;                      /* RESTRICT R0 FOR LENGTH@OZ30157*/
*   PARMPTR=R1;                     /*                       @OZ30157*/
         ST    R1,PARMPTR                                          1976
*   R0=INLEN;                       /* GET LENGTH            @OZ30157*/
         L     @15,PARMPTR                                         1977
         SLR   R0,R0                                               1977
         IC    R0,INLEN(,@15)                                      1977
*   SVPTR=INADDR;                   /* AND POINTER ADDRESS   @OZ30157*/
         L     @15,INADDR-1(,@15)                                  1978
         LA    @15,0(,@15)                                         1978
         ST    @15,SVPTR                                           1978
*   IF R0=F0 THEN                   /* IF 0 INLEN            @OZ30157*/
         CR    R0,@04                                              1979
         BNE   @RF01979                                            1979
*     R0=F2K;                       /* SET FOR 2K BYTES      @OZ30157*/
         LA    R0,2048                                             1980
*   ELSE                                                           1981
*     R0=(R0*F8);                   /* OR MULTIPLE OF 8      @OZ30157*/
         B     @RC01979                                            1981
@RF01979 SLL   R0,3                                                1981
*   IF GMCUR<GMSTT THEN             /* IS IT FIRST GETMAIN   @OZ30157*/
@RC01979 L     @04,GMCUR                                           1982
         L     @15,GMSTT                                           1982
         CLR   @04,@15                                             1982
         BNL   @RF01982                                            1982
*     IF GMCUR=F0 THEN              /* IS IT FIRST EVER      @OZ30157*/
         LTR   @04,@04                                             1983
         BNZ   @RF01983                                            1983
*       DO;                         /* YES, INIT GMEND       @OZ30157*/
*         GMEND=ADDR(GMTAB(64));    /* TO LAST POSSIBLE ENTRY@OZ30157*/
         LA    @04,GMTAB+252                                       1985
         ST    @04,GMEND                                           1985
*         GMPTR=GMSTT;              /* AND GMCUR TO FIRST    @OZ30157*/
         ST    @15,GMPTR                                           1986
*       END;                        /*                       @OZ30157*/
*     ELSE                          /* FIRST THIS TIME THRU  @OZ30157*/
*       GMPTR=GMSTT;                /* YES, SET FIRST ENTRY  @OZ30157*/
         B     @RC01983                                            1988
@RF01983 MVC   GMPTR(4),GMSTT                                      1988
*   ELSE                            /* NO,                   @OZ30157*/
*     GMPTR=GMCUR+F8;               /* SET FOR NEXT ENTRY    @OZ30157*/
         B     @RC01982                                            1989
@RF01982 LA    @04,8                                               1989
         AL    @04,GMCUR                                           1989
         ST    @04,GMPTR                                           1989
*   GMLEN=R0;                       /* SAVE LENGTH           @OZ30157*/
@RC01982 L     @04,GMPTR                                           1990
         ST    R0,GMLEN(,@04)                                      1990
*   GMSUB=CWBSBPOL;                 /* AND SUBPOOL FROM CWB  @OZ30157*/
         L     @15,@CA00041                                        1991
         L     @15,CWBPTR-CWBPTR(,@15)                             1991
         MVC   GMSUB(1,@04),CWBSBPOL(@15)                          1991
*   RFY                                                            1992
*     R2 RSTD;                      /* RESTRICT R2           @OZ30157*/
*   R2=GMSUB;                       /* GET SUBPOOL NUMBER    @OZ30157*/
         SLR   R2,R2                                               1993
         IC    R2,GMSUB(,@04)                                      1993
*   GEN CODE REFS(R2,R0);                                          1994
*                                   /* GET QUEUE SPACE       @OZ30157*/
GET1     GETMAIN RC,LV=(R0),SP=(R2)
*   RFY                                                            1995
*     R2 UNRSTD;                    /* FREE R2               @OZ30157*/
*   RFY                                                            1996
*     R0 UNRSTD;                    /* FREE R0               @OZ30157*/
*   RFY                                                            1997
*     R15 RSTD;                     /* AND RESTRICT R15      @OZ30157*/
*   RETC=R15;                       /* GET RETURN CODE       @OZ30157*/
         STH   R15,RETC                                            1998
*   RFY                                                            1999
*     R15 UNRSTD;                   /* AND FREE R15          @OZ30157*/
*   IF RETC=0 THEN                  /* IF STORAGE OBTAINED   @OZ30157*/
         LH    @04,RETC                                            2000
         LTR   @04,@04                                             2000
         BNZ   @RF02000                                            2000
*     DO;                           /* THEN REMEMBER IT      @OZ30157*/
*       INADDR=R1;                  /* PUT ADDR IN POINTER   @OZ30157*/
         ST    R1,@TF00001                                         2002
         L     @04,PARMPTR                                         2002
         MVC   INADDR(3,@04),@TF00001+1                            2002
*       GMADR=R1;                   /* AND IN SAVE AREA      @OZ30157*/
         L     @04,GMPTR                                           2003
         ST    R1,GMADR(,@04)                                      2003
*       GMCUR=GMPTR;                /* FIX ENTRY             @OZ30157*/
         ST    @04,GMCUR                                           2004
*     END;                          /*                       @OZ30157*/
*   ELSE                            /* ELSE                  @OZ30157*/
*     DO;                           /*                       @OZ30157*/
         B     @RC02000                                            2006
@RF02000 DS    0H                                                  2007
*       INADDR=F0;                  /* GIVE ZERO ADDRESS     @OZ30157*/
         L     @04,PARMPTR                                         2007
         SLR   @00,@00                                             2007
         ST    @00,@TF00001                                        2007
         MVC   INADDR(3,@04),@TF00001+1                            2007
*       GMCUR=GMPTR-F4;             /* AND GO BACK TO LAST   @OZ30157*/
         L     @04,GMPTR                                           2008
         SL    @04,@CF00045                                        2008
         ST    @04,GMCUR                                           2008
*       RETC=F256;                  /* SET HIGH RET CODE     @OZ30157*/
         MVC   RETC(2),@CH00866                                    2009
*       STORER=BONE;                /* AND STORAGE ERROR SW  @OZ30157*/
         OI    STORER,B'00000001'                                  2010
*     END;                          /* SAVE ENTRY            @OZ30157*/
*   RFY                                                            2012
*     R14 RSTD;                     /*                       @OZ30157*/
@RC02000 DS    0H                                                  2013
*   R14=MSG56F14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MSG56F14                                        2013
*   RFY                                                            2014
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /* BACK TO CALLER        @OZ30157*/
@EL00015 DS    0H                                                  2015
@EF00015 DS    0H                                                  2015
@ER00015 BR    @14                                                 2015
*   END MSG56F;                     /* END GETMAIN ROUTINE   @OZ30157*/
*MSG56G:                                                           2017
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56G   DS    0H                                                  2018
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56G                                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY CPU PATH STATUS ON CALL FROM MSG56PA   @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: CPU PATH STATUS TABLE                            @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE OR MORE WTO LINES WITH CPU PATH STATUS      @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  2018
*   DCL                                                            2018
*     1 CPUMSG BASED(WPLPTR+4),     /* CPU MESSAGE LINE 2    @OZ30157*/
*      2 CMCPUID CHAR(10),          /* CPU IDENTIFIER        @OZ30157*/
*      2 CMCPSTAT CHAR(5),          /* TOTAL CPU STATUS AREA @OZ30157*/
*       3 CMCPST1 CHAR(1),          /* FIRST BYTE OF STATUS  @OZ30157*/
*       3 CMCPST2 CHAR(1),          /* SECOND BYTE           @OZ30157*/
*       3 CMCPST3 CHAR(1),          /* THIRD                 @OZ30157*/
*       3 CMCPST4 CHAR(1),          /* FOURTH                @OZ30157*/
*       3 CMCPST5 CHAR(1),          /* FIFTH                 @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 CMCHAN CHAR(1),            /* CHANNEL               @OZ30157*/
*      2 * CHAR(2),                 /* BLANK                 @OZ30157*/
*      2 CMINTF CHAR(1),            /* INTERFACE             @OZ30157*/
*      2 * CHAR(2),                 /* BLANK                 @OZ30157*/
*      2 CMSANO CHAR(3),            /* SA OR MSF NUMBER      @OZ30157*/
*      2 CMSAST CHAR(6),            /* TOTAL SA STATUS       @OZ30157*/
*       3 CMSAST1 CHAR(2),          /* SPACE FOR /O          @OZ30157*/
*       3 CMSAST2 CHAR(4),          /* SPACE FOR -SUU        @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 CMSDGS CHAR(5),            /* TOTAL SDG NUMBERS     @OZ30157*/
*       3 CMSDG1 CHAR(2),           /* FIRST SDG             @OZ30157*/
*       3 CMSDGSEP CHAR(1),         /* SEPARATOR             @OZ30157*/
*       3 CMSDG2 CHAR(2),           /* SECOND SDG            @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 CMUSTAT CHAR(33),          /* STATUS AREA           @OZ30157*/
*       3 CMUSTON CHAR(31),         /* FOR ONLINE STATUS     @OZ30157*/
*        4 CMUSTOF CHAR(29),        /* FOR OFFLINE STATUS    @OZ30157*/
*         5 CMUSTSU CHAR(25),       /* FOR SUU STATUS        @OZ30157*/
*         5 CMUSUEND CHAR(2),       /* END OF SUU STATUS     @OZ30157*/
*        4 CMUOFEND CHAR(2),        /* END OF OFFLINE STATUS @OZ30157*/
*       3 CMUONEND CHAR(2);         /* END ONLINE STATUS     @OZ30157*/
*   DCL                                                            2019
*     CMSASTO CHAR(4) DEF(CMSAST) POS(1);/* REDEF FOR /OFF   @OZ30157*/
*   DCL                                                            2020
*     CMCPUIDU CHAR(11) DEF(CMCPUID);/* REDEF FOR UNPACK     @OZ30157*/
*   DCL                                                            2021
*     MUONDSP FIXED(15) INIT(LENGTH(CMUSTON));/*             @OZ30157*/
*   DCL                                                            2022
*     MUOFDSP FIXED(15) INIT(LENGTH(CMUSTOF));/*             @OZ30157*/
*   DCL                                                            2023
*     MUSUDSP FIXED(15) INIT(LENGTH(CMUSTSU));/*             @OZ30157*/
*   DCL                                                            2024
*     1 CMUST BASED(STPTR),         /* REDEF FOR STATUS SET  @OZ30157*/
*      2 CMUST1 CHAR(3),            /* FIRST OR ONLY IN GROUP@OZ30157*/
*      2 CMUSEP CHAR(1),            /* SLASH OR COMMA        @OZ30157*/
*      2 CMUST2 CHAR(3),            /* SECOND IN GROUP       @OZ30157*/
*       3 CMUCMA CHAR(1),           /* COMMA WITH ONE VUA    @OZ30157*/
*      2 CMUCMA2 CHAR(1);           /* COMMA WITH 2 VUAS     @OZ30157*/
*   DCL                                                            2025
*     CMUSTX CHAR(6) BASED(STPTR);  /* GROUP STATUS          @OZ30157*/
*   DCL                                                            2026
*     1 CMUSTY DEF(CMUSTX) POS(1),  /* REDEF FOR -SUU        @OZ30157*/
*      2 * CHAR(3),                 /* NOT USED IN THIS DEF  @OZ30157*/
*      2 CMUSTSUU CHAR(4);          /* -SUU SPACE            @OZ30157*/
*   DCL                                                            2027
*     MUEND PTR(32);                /* ADDR OF END           @OZ30157*/
*   DCL                                                            2028
*     MUDSP FIXED(15);              /* DISP OF STATUS FIELD  @OZ30157*/
*   DCL                                                            2029
*     MSTAT CHAR(6);                /* ACTUAL STATUS FIELD   @OZ30157*/
*   DCL                                                            2030
*     MSG56G14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   RFY                                                            2031
*     R14 RSTD;                     /*                       @OZ30157*/
*   MSG56G14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MSG56G14                                        2032
*   RFY                                                            2033
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   WPLPTR=WPLPTR+WPLMLLEN;         /* UP BY HDR 2 LENGTH    @OZ30157*/
         L     @04,WPLPTR                                          2034
         SLR   @00,@00                                             2034
         IC    @00,WPLMLLEN(,@04)                                  2034
         ALR   @00,@04                                             2034
         ST    @00,WPLPTR                                          2034
*   WPLML0=F0;                      /* CLEAR LENGTH HIGH ORD@OZ30157 */
         LR    @04,@00                                             2035
         MVI   WPLML0(@04),X'00'                                   2035
*   WPLMLLTF=''B;                   /* CLEAR FLAG FIELD      @OZ30157*/
         LR    @04,@00                                             2036
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       2036
*   WPLMLLTC=BONE;                  /* SET DATA LINE FLAG    @OZ30157*/
         LR    @04,@00                                             2037
         OI    WPLMLLTC(@04),B'00100000'                           2037
*   WPLMLTXT=MESGS(MSG05606);       /* CLEAR THE LINE        @OZ30157*/
         LR    @04,@00                                             2038
         MVI   WPLMLTXT+72(@04),C' '                               2038
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                2038
         MVC   WPLMLTXT(72,@04),MESGS+1596                         2038
*   WPLMLLEN=MESGLEN(MSG05606)+F4;  /* SET LENGTH            @OZ30157*/
         LA    @04,4                                               2039
         MVC   @ZT00003+3(1),MESGLEN+1596                          2039
         AL    @04,@ZT00003                                        2039
         LR    @15,@00                                             2039
         STC   @04,WPLMLLEN(,@15)                                  2039
*   MSGIND=MSG05606;                /* AND INDICATOR         @OZ30157*/
         MVI   MSGIND,X'16'                                        2040
*   IF CPUPTR^=F0 THEN              /* SHOULD WE DO IT       @OZ30157*/
         L     @04,CPUPTR                                          2041
         LTR   @04,@04                                             2041
         BZ    @RF02041                                            2041
*     DO CPHPTR=CPUPTR TO CPHEND BY CPHLEN;/* LOOP ALL CPUS  @OZ30157*/
         ST    @04,CPHPTR                                          2042
         B     @DE02042                                            2042
@DL02042 DS    0H                                                  2043
*       UNPK(CMCPUIDU,CPHIDP);      /* UNPACK CPUID          @OZ30157*/
         LA    @15,4                                               2043
         AL    @15,WPLPTR                                          2043
         UNPK  CMCPUIDU(11,@15),CPHIDP(6,@04)                      2043
*       IF CPHIN=BONE×CPHPRI=BONE×CPHASC=BONE THEN/* IF ANY STAT   2044
*                                                            @OZ30157*/
         TM    CPHIN(@04),B'11100000'                              2044
         BZ    @RF02044                                            2044
*         DO;                       /* THEN SET SLASH IN     @OZ30157*/
*           CMCPSTAT='/   ';        /* AND CLEAR REST        @OZ30157*/
         MVI   CMCPSTAT+4(@15),C' '                                2046
         MVC   CMCPSTAT(4,@15),@CC03435                            2046
*           K=2;                    /* SET INDEX FOR START   @OZ30157*/
         MVC   K(2),@CH00056                                       2047
*           IF CPHIN=BONE THEN      /* IF INITIALIZED        @OZ30157*/
         TM    CPHIN(@04),B'10000000'                              2048
         BNO   @RF02048                                            2048
*             DO;                   /* SET INIT STATUS       @OZ30157*/
*               CMCPSTAT='/I  ';    /* INTO FIELD AND        @OZ30157*/
         MVI   CMCPSTAT+4(@15),C' '                                2050
         MVC   CMCPSTAT(4,@15),@CC03436                            2050
*               K=3;                /* INDEX TO THIRD POS    @OZ30157*/
         MVC   K(2),@CH00060                                       2051
*             END;                  /*                       @OZ30157*/
*           IF CPHPRI=BONE THEN     /* IF PRIMARY CPU        @OZ30157*/
@RF02048 L     @04,CPHPTR                                          2053
         TM    CPHPRI(@04),B'01000000'                             2053
         BNO   @RF02053                                            2053
*             DO;                   /* THEN SAY SO           @OZ30157*/
*               CMCPSTAT(K:K)='P';  /* WITH P IN STAT        @OZ30157*/
         LH    @04,K                                               2055
         L     @15,WPLPTR                                          2055
         ALR   @15,@04                                             2055
         MVI   CMCPSTAT+3(@15),C'P'                                2055
*               K=K+1;              /* AND BUMP INDEX        @OZ30157*/
         LA    @04,1(,@04)                                         2056
         STH   @04,K                                               2056
*             END;                  /* END PRI STAT          @OZ30157*/
*           IF CPHASC=BONE THEN     /* IF ASSOCIATED,        @OZ30157*/
@RF02053 L     @04,CPHPTR                                          2058
         TM    CPHASC(@04),B'00100000'                             2058
         BNO   @RF02058                                            2058
*             CMCPSTAT(K:K+1)='-A'; /* SAY SO                @OZ30157*/
         LH    @04,K                                               2059
         L     @15,WPLPTR                                          2059
         ALR   @15,@04                                             2059
         MVC   CMCPSTAT+3(2,@15),@CC03438                          2059
*         END;                      /* END CPU STATUS        @OZ30157*/
*       ELSE                                                       2061
*         CMCPSTAT='     ';         /* ELSE CLEAR STATUS     @OZ30157*/
         B     @RC02044                                            2061
@RF02044 L     @04,WPLPTR                                          2061
         MVC   CMCPSTAT+4(5,@04),@CC03439                          2061
*       CMCHAN=CPHCH;               /* SET MSC CHANNEL       @OZ30157*/
@RC02044 LA    @04,4                                               2062
         AL    @04,WPLPTR                                          2062
         L     @15,CPHPTR                                          2062
         MVC   CMCHAN(1,@04),CPHCH(@15)                            2062
*       CMINTF=CPHINT;              /* AND INTERFACE ID      @OZ30157*/
         MVC   CMINTF(1,@04),CPHINT(@15)                           2063
*       CMSANO=CPHMSAD;             /* UNIT ADDRESS          @OZ30157*/
         MVC   CMSANO(3,@04),CPHMSAD(@15)                          2064
*       CALL MSG56D;                /* BUMP MSG POINTERS     @OZ30157*/
         BAL   @14,MSG56D                                          2065
*       CPDPTR=CPHDET;              /* LOCATE FIRST DET ENTRY@OZ30157*/
         L     @04,CPHPTR                                          2066
         L     @04,CPHDET-1(,@04)                                  2066
         LA    @04,0(,@04)                                         2066
         ST    @04,CPDPTR                                          2066
*       CMCPUID=BLANK;              /* NO CPUID HERE         @OZ30157*/
         LA    @15,4                                               2067
         AL    @15,WPLPTR                                          2067
         MVC   CMCPUID(10,@15),@CC02699                            2067
*       CMCPSTAT=BLANK;             /* NO CPU STATUS         @OZ30157*/
         MVC   CMCPSTAT(5,@15),@CC02699                            2068
*       IF CPDPTR^=F0 THEN          /* DO ONLY IF TABLE EX.  @OZ30157*/
         LTR   @04,@04                                             2069
         BZ    @RF02069                                            2069
*         DO UNTIL(CPDPTR=F0);      /* LOOP TO DET END       @OZ30157*/
@DL02070 DS    0H                                                  2071
*           VALFLG=BZERO;           /* START AS INVALID      @OZ30157*/
         NI    VALFLG,B'11011111'                                  2071
*           IF(CPDONL^=F0)&(DSPON=BONE) THEN/* IF ANY VALID LINE   2072
*                                                            @OZ30157*/
         L     @04,CPDPTR                                          2072
         L     @00,CPDONL-1(,@04)                                  2072
         N     @00,@CF03658                                        2072
         LTR   @00,@00                                             2072
         BZ    @RF02072                                            2072
         L     @15,@CA00041                                        2072
         L     @15,CWBPTR-CWBPTR(,@15)                             2072
         TM    DSPON(@15),B'01000000'                              2072
         BNO   @RF02072                                            2072
*             CPDSAVAL=BONE;        /* THEN MUST DISPLAY SA  @OZ30157*/
         OI    CPDSAVAL(@04),B'00100000'                           2073
*           IF(CPDOFF^=F0)&(DSPOFF=BONE) THEN/* OR ANY VAL OFFL    2074
*                                                            @OZ30157*/
@RF02072 L     @04,CPDPTR                                          2074
         L     @00,CPDOFF(,@04)                                    2074
         LTR   @00,@00                                             2074
         BZ    @RF02074                                            2074
         L     @15,@CA00041                                        2074
         L     @15,CWBPTR-CWBPTR(,@15)                             2074
         TM    DSPOFF(@15),B'00100000'                             2074
         BNO   @RF02074                                            2074
*             CPDSAVAL=BONE;        /* MUST DISP ALSO        @OZ30157*/
         OI    CPDSAVAL(@04),B'00100000'                           2075
*           IF CPDSAVAL=BONE THEN   /* IF SA VALID STATUS    @OZ30157*/
@RF02074 L     @04,CPDPTR                                          2076
         TM    CPDSAVAL(@04),B'00100000'                           2076
         BNO   @RF02076                                            2076
*             DO;                   /* FOR DISPLAY, THEN     @OZ30157*/
*               CMSANO=CPDSAAD;     /* SA SSID               @OZ30157*/
         LA    @15,4                                               2078
         AL    @15,WPLPTR                                          2078
         MVC   CMSANO(3,@15),CPDSAAD(@04)                          2078
*               IF CPDSAOF=BONE THEN/* IF SA IS OFFLINE      @OZ30157*/
         TM    CPDSAOF(@04),B'10000000'                            2079
         BNO   @RF02079                                            2079
*                 CMSAST='/OFF  ';  /* SAY SO                @OZ30157*/
         MVC   CMSAST(6,@15),@CC03440                              2080
*               ELSE                /* IF NOT                @OZ30157*/
*                 DO;               /* THEN IS ONLINE        @OZ30157*/
         B     @RC02079                                            2081
@RF02079 DS    0H                                                  2082
*                   CMSAST='/O    ';/* SAY THAT AND          @OZ30157*/
         LA    @04,4                                               2082
         AL    @04,WPLPTR                                          2082
         MVC   CMSAST(6,@04),@CC03441                              2082
*                   IF CPDSARDY=BZERO THEN/* IF NOT READY    @OZ30157*/
         L     @15,CPDPTR                                          2083
         TM    CPDSARDY(@15),B'01000000'                           2083
         BNZ   @RF02083                                            2083
*                     CMSAST2='-SUU';/* THEN IS SUU          @OZ30157*/
         MVC   CMSAST2(4,@04),@CC03442                             2084
*                 END;              /* END SA STATUS SET     @OZ30157*/
@RF02083 DS    0H                                                  2086
*             END;                  /* END VALID SA STATUS   @OZ30157*/
@RC02079 DS    0H                                                  2087
*           CMCHAN=CPDCH;           /* CHANNEL FOR SA        @OZ30157*/
@RF02076 LA    @04,4                                               2087
         AL    @04,WPLPTR                                          2087
         L     @15,CPDPTR                                          2087
         MVC   CMCHAN(1,@04),CPDCH(@15)                            2087
*           TR(CMCHAN,TRANS);       /* TRANSLATE ALPHAS      @OZ30157*/
         TR    CMCHAN(1,@04),TRANS                                 2088
*           CMINTF=CPDINT;          /* INTERFACE FOR SA      @OZ30157*/
         MVC   CMINTF(1,@04),CPDINT(@15)                           2089
*           CMSDG1=CPDSDG1;         /* FIRST OR ONLY SDG     @OZ30157*/
         MVC   CMSDG1(2,@04),CPDSDG1(@15)                          2090
*           IF CPDSDG2^='0000'X THEN/* IF SECOND SDG, THEN   @OZ30157*/
         CLC   CPDSDG2(2,@15),@CB03443                             2091
         BE    @RF02091                                            2091
*             DO;                   /* SET SEPARATOR AND     @OZ30157*/
*               CMSDGSEP=',';       /* ALSO SET              @OZ30157*/
         MVI   CMSDGSEP(@04),C','                                  2093
*               CMSDG2=CPDSDG2;     /* SDG2 FIELD            @OZ30157*/
         MVC   CMSDG2(2,@04),CPDSDG2(@15)                          2094
*             END;                  /* END SDG PRINT         @OZ30157*/
*           IF CPDONL^=F0 THEN      /* ONLINE                @OZ30157*/
@RF02091 L     @04,CPDPTR                                          2096
         L     @15,CPDONL-1(,@04)                                  2096
         LA    @15,0(,@15)                                         2096
         LTR   @15,@15                                             2096
         BZ    @RF02096                                            2096
*             DO;                   /*                       @OZ30157*/
*               TABPTR=CPDONL;      /* SET SCANNING POINTER  @OZ30157*/
         ST    @15,TABPTR                                          2098
*               MUDSP=MUONDSP;      /* END LINE DISPLACEMENT @OZ30157*/
         MVC   MUDSP(2),MUONDSP                                    2099
*               IF CPDFLG1=BZERO THEN/* IF IS ACTUALLY ONLINE      2100
*                                                            @OZ30157*/
         TM    CPDFLG1(@04),B'10000000'                            2100
         BNZ   @RF02100                                            2100
*                 IF DSPON=BONE THEN/* THEN IF ONL OR BOTH   @OZ30157*/
         L     @04,@CA00041                                        2101
         L     @04,CWBPTR-CWBPTR(,@04)                             2101
         TM    DSPON(@04),B'01000000'                              2101
         BNO   @RF02101                                            2101
*                   DO;             /* REQUESTED             @OZ30157*/
*                     MSTAT='/O    ';/* STATUS VALUE         @OZ30157*/
         MVC   MSTAT(6),@CC03441                                   2103
*                     CALL VUAPRT;  /* AND PRINT LINE        @OZ30157*/
         BAL   @14,VUAPRT                                          2104
*                   END;            /* END ACTUAL ONLINE     @OZ30157*/
*                 ELSE                                             2106
*                   ;               /*                       @OZ30157*/
@RF02101 DS    0H                                                  2107
*               ELSE                                               2107
*                 IF CPDSAVAL=BONE THEN/* IF NOT, MUST BE    @OZ30157*/
         B     @RC02100                                            2107
@RF02100 L     @04,CPDPTR                                          2107
         TM    CPDSAVAL(@04),B'00100000'                           2107
         BNO   @RF02107                                            2107
*                   DO;             /* GENERAL - NOT SAME CPU@OZ30157*/
*                     MSTAT='      ';/* STATUS VALUE         @OZ30157*/
         MVC   MSTAT(6),@CC01404                                   2109
*                     CALL VUAPRT;  /* AND PRINT LINE        @OZ30157*/
         BAL   @14,VUAPRT                                          2110
*                   END;            /* END NOT SAME CPU      @OZ30157*/
*             END;                  /*                       @OZ30157*/
@RF02107 DS    0H                                                  2112
@RC02100 DS    0H                                                  2113
*           IF(CPDOFF^=F0)&(DSPOFF=BONE) THEN/* IF ANY VALID @OZ30157*/
@RF02096 L     @04,CPDPTR                                          2113
         L     @04,CPDOFF(,@04)                                    2113
         LTR   @04,@04                                             2113
         BZ    @RF02113                                            2113
         L     @15,@CA00041                                        2113
         L     @15,CWBPTR-CWBPTR(,@15)                             2113
         TM    DSPOFF(@15),B'00100000'                             2113
         BNO   @RF02113                                            2113
*             DO;                   /* DISPLAY THEM          @OZ30157*/
*               TABPTR=CPDOFF;      /* SET SCANNING POINTER  @OZ30157*/
         ST    @04,TABPTR                                          2115
*               MUDSP=MUOFDSP;      /* END LINE DISPLACEMENT @OZ30157*/
         MVC   MUDSP(2),MUOFDSP                                    2116
*               MSTAT='/OFF  ';     /* STATUS VALUE          @OZ30157*/
         MVC   MSTAT(6),@CC03440                                   2117
*               CALL VUAPRT;        /* AND CALL PRT RTN      @OZ30157*/
         BAL   @14,VUAPRT                                          2118
*             END;                  /*                       @OZ30157*/
*           IF CPDSUU^=F0 THEN      /* DO ONLINE FIRST       @OZ30157*/
@RF02113 L     @04,CPDPTR                                          2120
         L     @04,CPDSUU(,@04)                                    2120
         LTR   @04,@04                                             2120
         BZ    @RF02120                                            2120
*             DO;                   /*                       @OZ30157*/
*               TABPTR=CPDSUU;      /* SET SCANNING POINTER  @OZ30157*/
         ST    @04,TABPTR                                          2122
*               MUDSP=MUSUDSP;      /* END LINE DISPLACEMENT @OZ30157*/
         MVC   MUDSP(2),MUSUDSP                                    2123
*               MSTAT='/O-SUU';     /* STATUS VALUE          @OZ30157*/
         MVC   MSTAT(6),@CC03446                                   2124
*               CALL VUAPRT;        /* AND CALL PRT RTN      @OZ30157*/
         BAL   @14,VUAPRT                                          2125
*             END;                  /*                       @OZ30157*/
*           IF VALFLG=BZERO THEN    /* IF NO VUA PRINT DONE  @OZ30157*/
@RF02120 TM    VALFLG,B'00100000'                                  2127
         BNZ   @RF02127                                            2127
*             IF CPDSAVAL=BONE THEN /* BUT SA IS VALID       @OZ30157*/
         L     @04,CPDPTR                                          2128
         TM    CPDSAVAL(@04),B'00100000'                           2128
         BNO   @RF02128                                            2128
*               CALL MSG56D;        /* PRINT SA LINE         @OZ30157*/
         BAL   @14,MSG56D                                          2129
*             ELSE                  /* NONE VALID, WIPE      @OZ30157*/
*               WPLMLTXT=MESGS(MSG05606);/* OUT DATA IN LINE @OZ30157*/
         B     @RC02128                                            2130
@RF02128 L     @04,WPLPTR                                          2130
         MVI   WPLMLTXT+72(@04),C' '                               2130
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                2130
         MVC   WPLMLTXT(72,@04),MESGS+1596                         2130
*           ELSE                                                   2131
*             ;                     /* PRINT WAS DONE        @OZ30157*/
@RF02127 DS    0H                                                  2132
*           CPDPTR=CPDCHN;          /* BUMP TO NEXT DETAIL   @OZ30157*/
@RC02127 L     @04,CPDPTR                                          2132
         L     @04,CPDCHN(,@04)                                    2132
         ST    @04,CPDPTR                                          2132
*         END;                      /* END DETAIL CHAIN LOOP @OZ30157*/
@DE02070 L     @04,CPDPTR                                          2133
         LTR   @04,@04                                             2133
         BNZ   @DL02070                                            2133
*     END;                          /* END CPU LOOP          @OZ30157*/
@RF02069 LA    @04,16                                              2134
         AL    @04,CPHPTR                                          2134
         ST    @04,CPHPTR                                          2134
@DE02042 C     @04,CPHEND                                          2134
         BNH   @DL02042                                            2134
*   VALFLG=BZERO;                   /* RESET FOR LATER       @OZ30157*/
@RF02041 NI    VALFLG,B'11011111'                                  2135
*   RFY                                                            2136
*     R14 RSTD;                     /*                       @OZ30157*/
*   R14=MSG56G14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MSG56G14                                        2137
*   RFY                                                            2138
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /* BACK TO CALLER        @OZ30157*/
@EL00016 DS    0H                                                  2139
@EF00016 DS    0H                                                  2139
@ER00016 BR    @14                                                 2139
*VUAPRT:                                                           2140
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
VUAPRT   DS    0H                                                  2141
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: VUAPRT                                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: SCAN THROUGH ALL VUA TABLE ENTRIES ON ONE CPD  @OZ30157*/
*/*           TABLE CHAIN, FORMAT WTO LINES AND CALL MSG56G  @OZ30157*/
*/*           AS NECESSARY TO WRITE THEM.                    @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: CPU PATH STATUS VUA TABLE                        @OZ30157*/
*/*         TABPTR SET TO ADDR OF FIRST VUA ENTRY            @OZ30157*/
*/*         MUEDISP SET TO DISPLACEMENT OF LAST POSSIBLE     @OZ30157*/
*/*             STATUS FIELD IN THIS LINE                    @OZ30157*/
*/*         MSTAT SET TO STATUS VALUE                        @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE OR MORE WTO LINES WITH CPU PATH STATUS      @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  2141
*   DCL                                                            2141
*     MSG56V14 FIXED(31);           /*                       @OZ30157*/
*   RFY                                                            2142
*     R14 RSTD;                     /*                       @OZ30157*/
*   MSG56V14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MSG56V14                                        2143
*   RFY                                                            2144
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   IF TABPTR^=F0 THEN              /* IF VUA IS VALID       @OZ30157*/
         L     @04,TABPTR                                          2145
         LTR   @04,@04                                             2145
         BZ    @RF02145                                            2145
*     DO;                           /* MUST PRINT DATA       @OZ30157*/
*       VALFLG=BONE;                /* AND SAY THAT WE DID   @OZ30157*/
         OI    VALFLG,B'00100000'                                  2147
*       DO UNTIL(TABPTR=F0);        /* LOOP THROUGH ALL ONL  @OZ30157*/
@DL02148 DS    0H                                                  2149
*         STPTR=ADDR(CMUSTAT);      /* INIT STATUS POINTER   @OZ30157*/
         L     @04,WPLPTR                                          2149
         LA    @04,CMUSTAT+4(,@04)                                 2149
         ST    @04,STPTR                                           2149
*         MUEND=STPTR+MUDSP;        /* POINT TO END OF LINE  @OZ30157*/
         AH    @04,MUDSP                                           2150
         ST    @04,MUEND                                           2150
*         DO K=1 TO VUACNT BY 1;    /* LOOP THROUGH ENTRY    @OZ30157*/
         LA    @04,1                                               2151
         STH   @04,K                                               2151
         B     @DE02151                                            2151
@DL02151 DS    0H                                                  2152
*           I=0;                    /* CLEAR                 @OZ30157*/
         SLR   @00,@00                                             2152
         STH   @00,I                                               2152
*           IF VUAB(K)^='   ' THEN  /* IF TWO VUAS           @OZ30157*/
         MH    @04,@CH00038                                        2153
         L     @15,TABPTR                                          2153
         ALR   @15,@04                                             2153
         CLC   VUAB-6(3,@15),@CC03112                              2153
         BE    @RF02153                                            2153
*             I=4;                  /* ADJUST CHECK LOCATE   @OZ30157*/
         MVC   I(2),@CH00045                                       2154
*           IF STPTR>=MUEND-I THEN  /* IF REACH END OF LINE  @OZ30157*/
@RF02153 L     @04,STPTR                                           2155
         L     @00,MUEND                                           2155
         LH    @15,I                                               2155
         SLR   @00,@15                                             2155
         CLR   @04,@00                                             2155
         BL    @RF02155                                            2155
*             DO;                   /* MUST PLACE PROPER     @OZ30157*/
*               STPTR=STPTR-1;      /* STATUS IN RIGHT POS.  @OZ30157*/
         BCTR  @04,0                                               2157
         ST    @04,STPTR                                           2157
*               CMUSTX=MSTAT;       /* SO DO SO              @OZ30157*/
         MVC   CMUSTX(6,@04),MSTAT                                 2158
*               CALL MSG56D;        /* CALL MSG56D FOR MOVE  @OZ30157*/
         BAL   @14,MSG56D                                          2159
*               STPTR=ADDR(CMUSTAT);/* FOR NEXT LINE         @OZ30157*/
         L     @04,WPLPTR                                          2160
         LA    @04,CMUSTAT+4(,@04)                                 2160
         ST    @04,STPTR                                           2160
*             END;                  /*                       @OZ30157*/
*           CMUST1=VUAA(K);         /* PUT IN FIRST VUA      @OZ30157*/
@RF02155 L     @04,STPTR                                           2162
         L     @15,TABPTR                                          2162
         LH    @14,K                                               2162
         MH    @14,@CH00038                                        2162
         ST    @14,@TF00001                                        2162
         ALR   @14,@15                                             2162
         BCTR  @14,0                                               2162
         BCTR  @14,0                                               2162
         MVC   CMUST1(3,@04),VUAA-4(@14)                           2162
*           IF VUAB(K)^='   ' THEN  /* IF SECOND VUA         @OZ30157*/
         LR    @14,@15                                             2163
         AL    @14,@TF00001                                        2163
         CLC   VUAB-6(3,@14),@CC03112                              2163
         BE    @RF02163                                            2163
*             DO;                   /* PUT IT IN             @OZ30157*/
*               CMUSEP='-';         /* WITH SEPARATOR        @OZ30157*/
         MVI   CMUSEP(@04),C'-'                                    2165
*               CMUST2=VUAB(K);     /* AND VUA               @OZ30157*/
         AL    @15,@TF00001                                        2166
         MVC   CMUST2(3,@04),VUAB-6(@15)                           2166
*               CMUCMA2=',';        /*                       @OZ30157*/
         MVI   CMUCMA2(@04),C','                                   2167
*               STPTR=STPTR+8;      /* BUMP FOR NEXT GROUP   @OZ30157*/
         AH    @04,@CH00036                                        2168
         ST    @04,STPTR                                           2168
*             END;                  /* END VUA GROUP         @OZ30157*/
*           ELSE                    /* ELSE SINGLE VUA       @OZ30157*/
*             DO;                   /* SO SET ONLY ONE       @OZ30157*/
         B     @RC02163                                            2170
@RF02163 DS    0H                                                  2171
*               CMUSEP=',';         /* WITH COMMA FOR SEP    @OZ30157*/
         L     @04,STPTR                                           2171
         MVI   CMUSEP(@04),C','                                    2171
*               STPTR=STPTR+4;      /* VUA NUMBER AND        @OZ30157*/
         AL    @04,@CF00045                                        2172
         ST    @04,STPTR                                           2172
*             END;                  /* END SINGLE VUA        @OZ30157*/
*         END;                      /* END LINE              @OZ30157*/
@RC02163 LA    @04,1                                               2174
         AH    @04,K                                               2174
         STH   @04,K                                               2174
@DE02151 L     @15,TABPTR                                          2174
         MVC   @ZT00003+3(1),VUACNT(@15)                           2174
         C     @04,@ZT00003                                        2174
         BNH   @DL02151                                            2174
*         STPTR=STPTR-1;            /* SET FOR STATUS MOVE   @OZ30157*/
         L     @04,STPTR                                           2175
         BCTR  @04,0                                               2175
         ST    @04,STPTR                                           2175
*         CMUSTX=MSTAT;             /* MOVE STATUS           @OZ30157*/
         MVC   CMUSTX(6,@04),MSTAT                                 2176
*         CALL MSG56D;              /* CALL MSG56D FOR LINE  @OZ30157*/
         BAL   @14,MSG56D                                          2177
*         TABPTR=VUACHN;            /* BUMP TO NEXT ENTRY    @OZ30157*/
         L     @04,TABPTR                                          2178
         L     @04,VUACHN-1(,@04)                                  2178
         LA    @04,0(,@04)                                         2178
         ST    @04,TABPTR                                          2178
*       END;                        /* END ONE VUA ENTRY     @OZ30157*/
@DE02148 L     @04,TABPTR                                          2179
         LTR   @04,@04                                             2179
         BNZ   @DL02148                                            2179
*     END;                          /* END VALID DATA        @OZ30157*/
*   RFY                                                            2181
*     R14 RSTD;                     /*                       @OZ30157*/
@RF02145 DS    0H                                                  2182
*   R14=MSG56V14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MSG56V14                                        2182
*   RFY                                                            2183
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00017 DS    0H                                                  2184
@EF00017 DS    0H                                                  2184
@ER00017 BR    @14                                                 2184
*   END VUAPRT;                     /* END OF PRINT ROUTINE  @OZ30157*/
*   END MSG56G;                     /* END DISP CPU PATHS    @OZ30157*/
*MSG56H:                                                           2187
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56H   DS    0H                                                  2188
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56H                                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY SDG PATH STATUS ON CALL FROM MSG56PA   @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: SDG PATH STATUS TABLE                            @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE OR MORE WTO LINES WITH SDG PATH STATUS      @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  2188
*   DCL                                                            2188
*     1 SDGMSG BASED(SDGMPTR),      /* ONE HALF LINE         @OZ30157*/
*      2 SDMSDGN CHAR(2),           /* SDG NUMBER            @OZ30157*/
*       3 * CHAR(1),                /* FIRST BYTE            @OZ30157*/
*       3 SDMSDGN2 CHAR(1),         /* SECOND BYTE           @OZ30157*/
*      2 * CHAR(3),                 /* BLANKS                @OZ30157*/
*      2 * CHAR(3),                 /* SA SSID               @OZ30157*/
*       3 SDMSA CHAR(1),            /* FIRST BYTE            @OZ30157*/
*       3 SDMSAU CHAR(2),           /* DEF FOR UNPACK        @OZ30157*/
*        4 * CHAR(1),               /* NOT REF'D             @OZ30157*/
*        4 SDMSAX CHAR(1),          /* CLEAR TO 0            @OZ30157*/
*      2 SDMSASUU CHAR(6),          /* SUU STATUS            @OZ30157*/
*       3 SDMSAOFF CHAR(4),         /* OFFLINE STATUS        @OZ30157*/
*        4 SDMSAON CHAR(2),         /* ONLINE STATUS         @OZ30157*/
*      2 * CHAR(1),                 /* BLANK SEPARATOR       @OZ30157*/
*      2 SDMDR CHAR(3),             /* DRC SSID              @OZ30157*/
*      2 SDMDRSUU CHAR(6),          /* SUU STATUS            @OZ30157*/
*       3 SDMDROFF CHAR(4),         /* OFFLINE STATUS        @OZ30157*/
*        4 SDMDRON CHAR(2),         /* ONLINE STATUS         @OZ30157*/
*      2 * CHAR(12);                /* BLANKS                @OZ30157*/
*   DCL                                                            2189
*     1 * CHAR(4) DEF(SDMDR),       /* REDEF FOR UNPACK      @OZ30157*/
*      2 * CHAR(1),                 /* NO REF                @OZ30157*/
*      2 SDMDRU CHAR(3),            /* FOR UNPACK            @OZ30157*/
*       3 SDMDRA CHAR(2),           /* FOR TRANSLATE         @OZ30157*/
*       3 SDMDRX CHAR(1);           /* CLEAR TO 0            @OZ30157*/
*   DCL                                                            2190
*     SDGMPTR PTR(31);              /* HALF LINE BASE        @OZ30157*/
*   DCL                                                            2191
*     MSG56H14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   RFY                                                            2192
*     R14 RSTD;                     /*                       @OZ30157*/
*   MSG56H14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MSG56H14                                        2193
*   RFY                                                            2194
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETC=F0;                        /* INITIALIZE RET CODE   @OZ30157*/
         SLR   @04,@04                                             2195
         STH   @04,RETC                                            2195
*   WPLPTR=WPLPTR+WPLMLLEN;         /* UP BY HDR 2 LENGTH    @OZ30157*/
         L     @15,WPLPTR                                          2196
         SLR   @00,@00                                             2196
         IC    @00,WPLMLLEN(,@15)                                  2196
         ALR   @00,@15                                             2196
         ST    @00,WPLPTR                                          2196
*   MSGIND=MSG05606;                /* SET MESSAGE TYPE      @OZ30157*/
         MVI   MSGIND,X'16'                                        2197
*   WPLMLLTF=''B;                   /* CLEAR FLAG FIELD      @OZ30157*/
         LR    @15,@00                                             2198
         XC    WPLMLLTF(2,@15),WPLMLLTF(@15)                       2198
*   WPLMLLTC=BONE;                  /* SET DATA LINE FLAG    @OZ30157*/
         LR    @15,@00                                             2199
         OI    WPLMLLTC(@15),B'00100000'                           2199
*   WPLMLTXT=MESGS(MSG05606);       /* CLEAR THE LINE        @OZ30157*/
         LR    @15,@00                                             2200
         MVI   WPLMLTXT+72(@15),C' '                               2200
         MVC   WPLMLTXT+73(53,@15),WPLMLTXT+72(@15)                2200
         MVC   WPLMLTXT(72,@15),MESGS+1596                         2200
*   WPLMLLEN=MESGLEN(MSG05606)+F4;  /* SET LENGTH            @OZ30157*/
         LA    @15,4                                               2201
         SLR   @14,@14                                             2201
         IC    @14,MESGLEN+1596                                    2201
         ALR   @14,@15                                             2201
         LR    @03,@00                                             2201
         STC   @14,WPLMLLEN(,@03)                                  2201
*   FLIPSW=BZERO;                   /* START IN FIRST HALF   @OZ30157*/
         NI    FLIPSW,B'11101111'                                  2202
*   TABPTR=SDGPTR;                  /* START OF TABLE        @OZ30157*/
         L     @14,SDGPTR                                          2203
         ST    @14,TABPTR                                          2203
*   SDGMPTR=ADDR(FHALF);            /* INITIAL VALUE         @OZ30157*/
         ALR   @00,@15                                             2204
         ST    @00,SDGMPTR                                         2204
*   ERRFLG=BONE;                    /* SET IN CASE NO VALID  @OZ30157*/
         OI    ERRFLG,B'10000000'                                  2205
*   IF TABPTR=F0 THEN               /* CHECK FOR VALID ENTRY @OZ30157*/
         CR    @14,@04                                             2206
         BNE   @RF02206                                            2206
*     DO;                           /*                       @OZ30157*/
*       RETC=F2;                    /* IF NONE, SAY SO       @OZ30157*/
         MVC   RETC(2),@CH00056                                    2208
*     END;                          /*                       @OZ30157*/
*   ELSE                            /* AT LEAST ONE          @OZ30157*/
*     DO;                           /* SO SCAN ALL SDG ENTRY @OZ30157*/
         B     @RC02206                                            2210
@RF02206 DS    0H                                                  2211
*       RETC=F0;                    /* INSURE GOOD END       @OZ30157*/
         SLR   @04,@04                                             2211
         STH   @04,RETC                                            2211
*       DO UNTIL(TABPTR=F0);        /* EXISTS, SO LOOP       @OZ30157*/
@DL02212 DS    0H                                                  2213
*         DO I=1 TO 2;              /* DO BOTH SAS           @OZ30157*/
         LA    @04,1                                               2213
         STH   @04,I                                               2213
@DL02213 DS    0H                                                  2214
*           IF FLIPSW=BZERO THEN    /* SET PROPER HALF-LINE  @OZ30157*/
         TM    FLIPSW,B'00010000'                                  2214
         BNZ   @RF02214                                            2214
*             SDGMPTR=ADDR(FHALF);  /* INTO LINE POINTER     @OZ30157*/
         LA    @04,4                                               2215
         AL    @04,WPLPTR                                          2215
         ST    @04,SDGMPTR                                         2215
*           ELSE                    /*                       @OZ30157*/
*             SDGMPTR=ADDR(SHALF);  /*                       @OZ30157*/
         B     @RC02214                                            2216
@RF02214 L     @04,WPLPTR                                          2216
         LA    @04,SHALF+4(,@04)                                   2216
         ST    @04,SDGMPTR                                         2216
*           VALFLG=BZERO;           /* SAY LINE NOT VALID    @OZ30157*/
@RC02214 NI    VALFLG,B'11011111'                                  2217
*           IF(DSPON=BONE)&(DSPOFF=BONE) THEN/* IF BOTH      @OZ30157*/
         L     @04,@CA00041                                        2218
         L     @04,CWBPTR-CWBPTR(,@04)                             2218
         TM    DSPON(@04),B'01100000'                              2218
         BNO   @RF02218                                            2218
*             VALFLG=BONE;          /* LINE IS VALID         @OZ30157*/
         OI    VALFLG,B'00100000'                                  2219
*           ELSE                    /* ELSE IF ONLINE ONLY   @OZ30157*/
*             IF DSPON=BONE THEN    /* THEN CK ANY ONLINE    @OZ30157*/
         B     @RC02218                                            2220
@RF02218 L     @04,@CA00041                                        2220
         L     @04,CWBPTR-CWBPTR(,@04)                             2220
         TM    DSPON(@04),B'01000000'                              2220
         BNO   @RF02220                                            2220
*               IF(SDGSAOF(I)=BZERO)×(SDGDCOF(I)=BZERO) THEN/*     2221
*                                                            @OZ30157*/
         L     @04,TABPTR                                          2221
         LH    @15,I                                               2221
         MH    @15,@CH00038                                        2221
         ST    @15,@TF00001                                        2221
         ALR   @15,@04                                             2221
         BCTR  @15,0                                               2221
         TM    SDGSAOF-5(@15),B'10000000'                          2221
         BZ    @RT02221                                            2221
         AL    @04,@TF00001                                        2221
         TM    SDGDCOF-6(@04),B'10000000'                          2221
         BNZ   @RF02221                                            2221
@RT02221 DS    0H                                                  2222
*                 VALFLG=BONE;      /* FOUND AT LEAST ONE ONLINE   2222
*                                                            @OZ30157*/
         OI    VALFLG,B'00100000'                                  2222
*               ELSE                                               2223
*                 ;                 /* NONE ONLINE           @OZ30157*/
@RF02221 DS    0H                                                  2224
*             ELSE                  /* CHECK OFFLINE         @OZ30157*/
*               IF(SDGSAOF(I)=BONE)×(SDGDCOF(I)=BONE) THEN/* @OZ30157*/
         B     @RC02220                                            2224
@RF02220 L     @04,TABPTR                                          2224
         LH    @15,I                                               2224
         MH    @15,@CH00038                                        2224
         ST    @15,@TF00001                                        2224
         ALR   @15,@04                                             2224
         BCTR  @15,0                                               2224
         TM    SDGSAOF-5(@15),B'10000000'                          2224
         BO    @RT02224                                            2224
         AL    @04,@TF00001                                        2224
         TM    SDGDCOF-6(@04),B'10000000'                          2224
         BNO   @RF02224                                            2224
@RT02224 DS    0H                                                  2225
*                 VALFLG=BONE;      /* MUST PRINT LINE       @OZ30157*/
         OI    VALFLG,B'00100000'                                  2225
*           IF VALFLG=BONE THEN     /* IF VALID FOR DISPLAY  @OZ30157*/
@RF02224 DS    0H                                                  2226
@RC02220 DS    0H                                                  2226
@RC02218 TM    VALFLG,B'00100000'                                  2226
         BNO   @RF02226                                            2226
*             DO;                   /* THEN PUT IN LINE      @OZ30157*/
*               CVD(SDGNUM,SDMSAU); /* GET IN DECIMAL        @OZ30157*/
         L     @04,TABPTR                                          2228
         SLR   @00,@00                                             2228
         IC    @00,SDGNUM(,@04)                                    2228
         L     @15,SDGMPTR                                         2228
         CVD   @00,@TS00001                                        2228
         MVC   SDMSAU(2,@15),@TS00001+6                            2228
*               UNPK(SDMSDGN,SDMSAU);/* UNPACK SDG NUMBER    @OZ30157*/
         UNPK  SDMSDGN(2,@15),SDMSAU(2,@15)                        2229
*               SDMSDGN2=SDMSDGN2×'0';/* CLEAR SIGN          @OZ30157*/
         OI    SDMSDGN2(@15),C'0'                                  2230
*               ERRFLG=BZERO;       /* SAY FOUND ONE LINE    @OZ30157*/
         NI    ERRFLG,B'01111111'                                  2231
*               UNPK(SDMSAU,SDGSANOP(I));/* UNPACK IT (1 TO F)     2232
*                                                            @OZ30157*/
         LH    @14,I                                               2232
         MH    @14,@CH00038                                        2232
         ST    @14,@TF00001                                        2232
         ALR   @14,@04                                             2232
         BCTR  @14,0                                               2232
         BCTR  @14,0                                               2232
         UNPK  SDMSAU(2,@15),SDGSANOP-4(2,@14)                     2232
*               TR(SDMSAU,TRANS);   /* TRANSLATE TO PRINT    @OZ30157*/
         TR    SDMSAU(2,@15),TRANS                                 2233
*               SDMSA='8';          /* SET FIRST CHARACTER   @OZ30157*/
         MVI   SDMSA(@15),C'8'                                     2234
*               SDMSAX='0';         /* AND THIRD CHARACTER   @OZ30157*/
         MVI   SDMSAX(@15),C'0'                                    2235
*               IF SDGSAOF(I)=BONE THEN/* IF OFFLINE         @OZ30157*/
         AL    @04,@TF00001                                        2236
         BCTR  @04,0                                               2236
         TM    SDGSAOF-5(@04),B'10000000'                          2236
         BNO   @RF02236                                            2236
*                 SDMSAOFF='/OFF';  /* SAY SO                @OZ30157*/
         MVC   SDMSAOFF(4,@15),@CC03482                            2237
*               ELSE                /* IF NOT, CHECK SUU     @OZ30157*/
*                 IF SDGSARDY(I)=BZERO THEN/* IF SUU, THEN   @OZ30157*/
         B     @RC02236                                            2238
@RF02236 LH    @04,I                                               2238
         MH    @04,@CH00038                                        2238
         L     @15,TABPTR                                          2238
         ALR   @15,@04                                             2238
         BCTR  @15,0                                               2238
         TM    SDGSARDY-5(@15),B'01000000'                         2238
         BNZ   @RF02238                                            2238
*                   SDMSASUU='/O-SUU';/* SAY THAT            @OZ30157*/
         L     @04,SDGMPTR                                         2239
         MVC   SDMSASUU(6,@04),@CC03446                            2239
*                 ELSE              /* IF NOT THAT, MUST     @OZ30157*/
*                   SDMSAON='/O';   /* BE ONLINE             @OZ30157*/
         B     @RC02238                                            2240
@RF02238 L     @04,SDGMPTR                                         2240
         MVC   SDMSAON(2,@04),@CC03483                             2240
*               IF((SDGDCOF(I)=BONE)&(DSPOFF=BONE))×((SDGDCOF(I)=BZERO)
*                   &(DSPON=BONE))×(SDGDCRDY(I)=BZERO) THEN/* IF VLD
*                                      FOR DISPLAY           @OZ30157*/
@RC02238 DS    0H                                                  2241
@RC02236 LH    @04,I                                               2241
         MH    @04,@CH00038                                        2241
         L     @15,TABPTR                                          2241
         ALR   @15,@04                                             2241
         TM    SDGDCOF-6(@15),B'10000000'                          2241
         BNO   @GL00027                                            2241
         L     @04,@CA00041                                        2241
         L     @04,CWBPTR-CWBPTR(,@04)                             2241
         TM    DSPOFF(@04),B'00100000'                             2241
         BO    @RT02241                                            2241
@GL00027 LH    @04,I                                               2241
         MH    @04,@CH00038                                        2241
         L     @15,TABPTR                                          2241
         ALR   @15,@04                                             2241
         TM    SDGDCOF-6(@15),B'10000000'                          2241
         BNZ   @GL00026                                            2241
         L     @04,@CA00041                                        2241
         L     @04,CWBPTR-CWBPTR(,@04)                             2241
         TM    DSPON(@04),B'01000000'                              2241
         BO    @RT02241                                            2241
@GL00026 LH    @04,I                                               2241
         MH    @04,@CH00038                                        2241
         L     @15,TABPTR                                          2241
         ALR   @15,@04                                             2241
         TM    SDGDCRDY-6(@15),B'01000000'                         2241
         BNZ   @RF02241                                            2241
@RT02241 DS    0H                                                  2242
*                 DO;               /* THEN DO IT            @OZ30157*/
*                   SDMDR='400';    /* SET BASE VALUE        @OZ30157*/
         L     @04,SDGMPTR                                         2243
         MVC   SDMDR(3,@04),@CC01484                               2243
*                   SDMDRA=SDGCSFNP(I);/* PUT IN CSF AND DRC @OZ30157*/
         L     @15,TABPTR                                          2244
         LH    @14,I                                               2244
         MH    @14,@CH00038                                        2244
         ST    @14,@TF00001                                        2244
         ALR   @14,@15                                             2244
         MVC   SDMDRA(2,@04),SDGCSFNP-6(@14)                       2244
*                   TR(SDMDRA,NUMBRS);/* TRANSLATE FOR PRINT @OZ30157*/
         TR    SDMDRA(2,@04),NUMBRS                                2245
*                   SDMDRX=' ';     /* CLEAR EXTRA BYTE      @OZ30157*/
         MVI   SDMDRX(@04),C' '                                    2246
*                   IF SDGDCOF(I)=BONE THEN/* IF OFFLINE     @OZ30157*/
         AL    @15,@TF00001                                        2247
         TM    SDGDCOF-6(@15),B'10000000'                          2247
         BNO   @RF02247                                            2247
*                     SDMDROFF='/OFF';/* SAY SO              @OZ30157*/
         MVC   SDMDROFF(4,@04),@CC03482                            2248
*                   ELSE            /*                       @OZ30157*/
*                     IF SDGDCRDY(I)=BONE THEN/* SUU         @OZ30157*/
         B     @RC02247                                            2249
@RF02247 LH    @04,I                                               2249
         MH    @04,@CH00038                                        2249
         L     @15,TABPTR                                          2249
         ALR   @15,@04                                             2249
         TM    SDGDCRDY-6(@15),B'01000000'                         2249
         BNO   @RF02249                                            2249
*                       SDMDRSUU='/O-SUU';/*                 @OZ30157*/
         L     @04,SDGMPTR                                         2250
         MVC   SDMDRSUU(6,@04),@CC03446                            2250
*                     ELSE          /*                       @OZ30157*/
*                       SDMDRON='/O';/* ONLINE               @OZ30157*/
         B     @RC02249                                            2251
@RF02249 L     @04,SDGMPTR                                         2251
         MVC   SDMDRON(2,@04),@CC03483                             2251
*                 END;              /*                       @OZ30157*/
@RC02249 DS    0H                                                  2252
@RC02247 DS    0H                                                  2253
*               IF FLIPSW=BONE THEN /* IF SECOND HALF DONE   @OZ30157*/
@RF02241 TM    FLIPSW,B'00010000'                                  2253
         BNO   @RF02253                                            2253
*                 CALL MSG56D;      /* PRINT MESSAGE         @OZ30157*/
         BAL   @14,MSG56D                                          2254
*               ELSE                /*                       @OZ30157*/
*                 FLIPSW=BONE;      /*                       @OZ30157*/
         B     @RC02253                                            2255
@RF02253 OI    FLIPSW,B'00010000'                                  2255
*             END;                  /* END VALID SA          @OZ30157*/
@RC02253 DS    0H                                                  2257
*         END;                      /* END ONE SA            @OZ30157*/
@RF02226 LA    @04,1                                               2257
         AH    @04,I                                               2257
         STH   @04,I                                               2257
         CH    @04,@CH00056                                        2257
         BNH   @DL02213                                            2257
*         TABPTR=SDGCHN;            /* CHAIN TO NEXT ONE     @OZ30157*/
         L     @04,TABPTR                                          2258
         L     @04,SDGCHN-1(,@04)                                  2258
         LA    @04,0(,@04)                                         2258
         ST    @04,TABPTR                                          2258
*       END;                        /* END SCAN ROUTINE      @OZ30157*/
@DE02212 L     @04,TABPTR                                          2259
         LTR   @04,@04                                             2259
         BNZ   @DL02212                                            2259
*       VALSSID=BONE;               /* INSURE PRINT IT       @OZ30157*/
         OI    VALSSID,B'01000000'                                 2260
*     END;                          /* END GOOD RUN          @OZ30157*/
*   IF ERRFLG=BONE THEN             /* IF NO VALID FOR DISP  @OZ30157*/
@RC02206 TM    ERRFLG,B'10000000'                                  2262
         BNO   @RF02262                                            2262
*     DO;                           /* MUST PRINT ERR MSG    @OZ30157*/
*       IF DSPON=BONE THEN          /* EITHER NO PATHS ONL   @OZ30157*/
         L     @04,@CA00041                                        2264
         L     @04,CWBPTR-CWBPTR(,@04)                             2264
         TM    DSPON(@04),B'01000000'                              2264
         BNO   @RF02264                                            2264
*         SDGMSG='NO PATHS ONLINE'; /* IN MESSAGE            @OZ30157*/
         L     @04,SDGMPTR                                         2265
         MVI   SDGMSG+15(@04),C' '                                 2265
         MVC   SDGMSG+16(20,@04),SDGMSG+15(@04)                    2265
         MVC   SDGMSG(15,@04),@CC03484                             2265
*       ELSE                        /* OR NONE OFFLINE       @OZ30157*/
*         SDGMSG='NO PATHS OFFLINE';/* IN MESSAGE            @OZ30157*/
         B     @RC02264                                            2266
@RF02264 L     @04,SDGMPTR                                         2266
         MVI   SDGMSG+16(@04),C' '                                 2266
         MVC   SDGMSG+17(19,@04),SDGMSG+16(@04)                    2266
         MVC   SDGMSG(16,@04),@CC03486                             2266
*       CALL MSG56D;                /* DISPLAY MESSAGE       @OZ30157*/
@RC02264 BAL   @14,MSG56D                                          2267
*     END;                          /* AND END IT ALL        @OZ30157*/
*   RFY                                                            2269
*     R14 RSTD;                     /*                       @OZ30157*/
@RF02262 DS    0H                                                  2270
*   R14=MSG56H14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MSG56H14                                        2270
*   RFY                                                            2271
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                                                        2272
@EL00018 DS    0H                                                  2272
@EF00018 DS    0H                                                  2272
@ER00018 BR    @14                                                 2272
*   ;                               /*                       @OZ30157*/
*   END MSG56H;                     /* END SDG DISPLAY RTN   @OZ30157*/
*MSG56I:                                                           2275
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56I   DS    0H                                                  2276
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56I                                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY DRC PATH STATUS ON CALL FROM MSG56PA   @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: DRC PATH STATUS TABLE                            @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE OR MORE WTO LINES WITH DRC PATH STATUS      @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  2276
*   DCL                                                            2276
*     1 DRCMSG CHAR(70) BASED(WPLPTR+4),/* DRC PATH MSG      @OZ30157*/
*      2 MDRSA CHAR(3),             /* SA SSID               @OZ30157*/
*      2 MDRSASUU CHAR(6),          /* SUU STATUS            @OZ30157*/
*       3 MDRSAOFF CHAR(4),         /* OFFLINE STATUS        @OZ30157*/
*        4 MDRSAON CHAR(2),         /* ONLINE STATUS         @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 MDRDRC CHAR(3),            /* DRC SSID              @OZ30157*/
*      2 MDRDCUNA CHAR(7),          /* DRC UNAVAILABLE       @OZ30157*/
*       3 MDRDCSUU CHAR(6),         /* DRC SUU               @OZ30157*/
*        4 MDRDCOFF CHAR(4),        /* DRC OFFLINE           @OZ30157*/
*         5 MDRDCON CHAR(2),        /* DRC ONLINE            @OZ30157*/
*      2 MDRDRDS(4) CHAR(12),       /* ARRAY OF 4 DRDS       @OZ30157*/
*       3 * CHAR(2),                /* BLANK                 @OZ30157*/
*       3 MDRDRD CHAR(3),           /* DRD SSID              @OZ30157*/
*       3 MDRDDUNA CHAR(7),         /* UNAVAILABLE STATUS    @OZ30157*/
*        4 MDRDDSUU CHAR(6),        /* SUU STATUS            @OZ30157*/
*         5 MDRDDOFF CHAR(4),       /* OFFLINE STATUS        @OZ30157*/
*          6 MDRDDON CHAR(2);       /* ONLINE STATUS         @OZ30157*/
*   DCL                                                            2277
*     STDEF CHAR(7);                /* SAVE AREA FOR STATUS  @OZ30157*/
*   DCL                                                            2278
*     MSG56I14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   RFY                                                            2279
*     R14 RSTD;                     /*                       @OZ30157*/
*   MSG56I14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MSG56I14                                        2280
*   RFY                                                            2281
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   WPLPTR=WPLPTR+WPLMLLEN;         /* UP BY HDR 2 LENGTH    @OZ30157*/
         L     @04,WPLPTR                                          2282
         SLR   @00,@00                                             2282
         IC    @00,WPLMLLEN(,@04)                                  2282
         ALR   @00,@04                                             2282
         ST    @00,WPLPTR                                          2282
*   WPLMLLTF=''B;                   /* CLEAR FLAG FIELD      @OZ30157*/
         LR    @04,@00                                             2283
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       2283
*   WPLMLLTC=BONE;                  /* SET DATA LINE FLAG    @OZ30157*/
         LR    @04,@00                                             2284
         OI    WPLMLLTC(@04),B'00100000'                           2284
*   WPLMLTXT=MESGS(MSG05606);       /* CLEAR THE LINE        @OZ30157*/
         LR    @04,@00                                             2285
         MVI   WPLMLTXT+72(@04),C' '                               2285
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                2285
         MVC   WPLMLTXT(72,@04),MESGS+1596                         2285
*   WPLMLLEN=MESGLEN(MSG05606)+F4;  /* SET LENGTH            @OZ30157*/
         LA    @04,4                                               2286
         MVC   @ZT00003+3(1),MESGLEN+1596                          2286
         AL    @04,@ZT00003                                        2286
         LR    @15,@00                                             2286
         STC   @04,WPLMLLEN(,@15)                                  2286
*   MSGIND=MSG05606;                /* AND INDICATOR FOR D   @OZ30157*/
         MVI   MSGIND,X'16'                                        2287
*/* START AT DRCPTR AND SCAN WITH TABPTR2 TO LAST DRC ENTRY  @OZ30157*/
*                                                                  2288
*   TABPTR2=DRCPTR;                 /* INITIAL START VALUE   @OZ30157*/
         L     @04,DRCPTR                                          2288
         ST    @04,TABPTR2                                         2288
*   ERRFLG=BONE;                    /* SAY NO VALID ONES     @OZ30157*/
         OI    ERRFLG,B'10000000'                                  2289
*   IF TABPTR2^=F0 THEN             /* IF TABLE BUILT        @OZ30157*/
         LTR   @04,@04                                             2290
         BZ    @RF02290                                            2290
*     DO UNTIL(TABPTR2=0);          /* LOOP TO END OF CHAIN  @OZ30157*/
@DL02291 DS    0H                                                  2292
*       VALFLG=BZERO;               /* NO VALID IN LOOP YET  @OZ30157*/
         NI    VALFLG,B'11011111'                                  2292
*       IF DSPON=BONE&DSPOFF=BONE THEN/* IF ACCEPT ANY       @OZ30157*/
         L     @04,@CA00041                                        2293
         L     @04,CWBPTR-CWBPTR(,@04)                             2293
         TM    DSPON(@04),B'01100000'                              2293
         BNO   @RF02293                                            2293
*         VALFLG=BONE;              /* SAY ONE FOUND         @OZ30157*/
         OI    VALFLG,B'00100000'                                  2294
*       ELSE                        /* IF WANT ONLY          @OZ30157*/
*         IF DSPON=BONE THEN        /* ONLINE, CHECK FOR ONE @OZ30157*/
         B     @RC02293                                            2295
@RF02293 L     @04,@CA00041                                        2295
         L     @04,CWBPTR-CWBPTR(,@04)                             2295
         TM    DSPON(@04),B'01000000'                              2295
         BNO   @RF02295                                            2295
*           IF(DRCSAOF=BZERO)×(DRCDCOF=BZERO) THEN/* IF ANY DRC ON 2296
*                                                            @OZ30157*/
         L     @04,TABPTR2                                         2296
         TM    DRCSAOF(@04),B'10001000'                            2296
         BO    @RF02296                                            2296
*             VALFLG=BONE;          /* THEN LINE VALID       @OZ30157*/
         OI    VALFLG,B'00100000'                                  2297
*           ELSE                    /* IF NOT, MUST CK DRD   @OZ30157*/
*             DO I=1 TO 4;          /* PATHS - ALL FOUR      @OZ30157*/
         B     @RC02296                                            2298
@RF02296 LA    @04,1                                               2298
         STH   @04,I                                               2298
@DL02298 DS    0H                                                  2299
*               IF DRCDRDOF(I)=BZERO THEN/* IF ONLINE, THEN  @OZ30157*/
         SLA   @04,2                                               2299
         L     @15,TABPTR2                                         2299
         ALR   @15,@04                                             2299
         TM    DRCDRDOF-4(@15),B'10000000'                         2299
         BNZ   @RF02299                                            2299
*                 VALFLG=BONE;      /* SET FLAG ON           @OZ30157*/
         OI    VALFLG,B'00100000'                                  2300
*             END;                  /* LOOP THROUGH 4        @OZ30157*/
@RF02299 LA    @04,1                                               2301
         AH    @04,I                                               2301
         STH   @04,I                                               2301
         CH    @04,@CH00045                                        2301
         BNH   @DL02298                                            2301
*         ELSE                      /* MUST BE OFFL REQUEST  @OZ30157*/
*           IF(DRCSAOF=BONE)×(DRCDCOF=BONE) THEN/* IF OFFLINE      2302
*                                                            @OZ30157*/
         B     @RC02295                                            2302
@RF02295 L     @04,TABPTR2                                         2302
         TM    DRCSAOF(@04),B'10001000'                            2302
         BZ    @RF02302                                            2302
*             VALFLG=BONE;          /* THEN VALID DISPLAY    @OZ30157*/
         OI    VALFLG,B'00100000'                                  2303
*           ELSE                    /* IF NOT, CHECK DRDS    @OZ30157*/
*             DO I=1 TO 4;          /* INVALID AND RESET     @OZ30157*/
         B     @RC02302                                            2304
@RF02302 LA    @04,1                                               2304
         STH   @04,I                                               2304
@DL02304 DS    0H                                                  2305
*               IF DRCDCOF=BONE THEN/* IF OFFLINE THEN       @OZ30157*/
         L     @04,TABPTR2                                         2305
         TM    DRCDCOF(@04),B'00001000'                            2305
         BNO   @RF02305                                            2305
*                 VALFLG=BONE;      /* SAY VALID             @OZ30157*/
         OI    VALFLG,B'00100000'                                  2306
*             END;                  /* END LOOP OFFLINE      @OZ30157*/
@RF02305 LA    @04,1                                               2307
         AH    @04,I                                               2307
         STH   @04,I                                               2307
         CH    @04,@CH00045                                        2307
         BNH   @DL02304                                            2307
*       IF VALFLG=BONE THEN         /* IF VALID ENTRY        @OZ30157*/
@RC02302 DS    0H                                                  2308
@RC02295 DS    0H                                                  2308
@RC02293 TM    VALFLG,B'00100000'                                  2308
         BNO   @RF02308                                            2308
*         DO;                       /* MUST DISPLAY IT       @OZ30157*/
*           ERRFLG=BZERO;           /* SAY ONE FOUND         @OZ30157*/
         NI    ERRFLG,B'01111111'                                  2310
*           MDRSA=DRCSAID;          /* GET SA SSID           @OZ30157*/
         LA    @04,4                                               2311
         AL    @04,WPLPTR                                          2311
         L     @15,TABPTR2                                         2311
         MVC   MDRSA(3,@04),DRCSAID(@15)                           2311
*           IF DRCSAOF=BONE THEN    /* IF SA IS OFFLINE      @OZ30157*/
         TM    DRCSAOF(@15),B'10000000'                            2312
         BNO   @RF02312                                            2312
*             DO;                   /* SAY SO, SET DEF TO UNA@OZ30157*/
*               STDEF='/O-UNAV';    /* DEFAULT VALUE         @OZ30157*/
         MVC   STDEF(7),@CC03511                                   2314
*               MDRSAOFF='/OFF';    /* SA IS OFFLINE         @OZ30157*/
         MVC   MDRSAOFF(4,@04),@CC03482                            2315
*             END;                  /*                       @OZ30157*/
*           ELSE                    /*                       @OZ30157*/
*             IF DRCSARDY=BZERO×DRCSANA=BONE THEN/* IF UNAVAILABLE 2317
*                                                            @OZ30157*/
         B     @RC02312                                            2317
@RF02312 L     @04,TABPTR2                                         2317
         TM    DRCSANA(@04),B'00100000'                            2317
         BNZ   @RT02317                                            2317
         TM    DRCSARDY(@04),B'01000000'                           2317
         BO    @RF02317                                            2317
@RT02317 DS    0H                                                  2318
*               DO;                 /* SAME AS ABOVE         @OZ30157*/
*                 STDEF='/O-UNAV';  /* FOR DEFAULT VALUE     @OZ30157*/
         MVC   STDEF(7),@CC03511                                   2319
*                 MDRSASUU='/O-SUU';/* BUT SA IS SUU         @OZ30157*/
         L     @04,WPLPTR                                          2320
         MVC   MDRSASUU+4(6,@04),@CC03446                          2320
*               END;                /* END SASUU             @OZ30157*/
*             ELSE                  /* IF ONLINE             @OZ30157*/
*               DO;                 /* THEN DEFAULT IS ONLINE@OZ30157*/
         B     @RC02317                                            2322
@RF02317 DS    0H                                                  2323
*                 STDEF='/O     ';  /* SET IT                @OZ30157*/
         MVC   STDEF(7),@CC03512                                   2323
*                 MDRSAON='/O';     /* SA STATUS             @OZ30157*/
         L     @04,WPLPTR                                          2324
         MVC   MDRSAON+4(2,@04),@CC03483                           2324
*               END;                /*                       @OZ30157*/
*           MDRDRC=DRCDRSS;         /* DRC SSID              @OZ30157*/
@RC02317 DS    0H                                                  2326
@RC02312 LA    @04,4                                               2326
         AL    @04,WPLPTR                                          2326
         L     @15,TABPTR2                                         2326
         MVC   MDRDRC(3,@04),DRCDRSS(@15)                          2326
*           IF DRCDCOF=BONE THEN    /* IF DRC OFFLINE        @OZ30157*/
         TM    DRCDCOF(@15),B'00001000'                            2327
         BNO   @RF02327                                            2327
*             MDRDCOFF='/OFF';      /* SAY SO                @OZ30157*/
         MVC   MDRDCOFF(4,@04),@CC03482                            2328
*           ELSE                    /* ELSE IF NOT AVAIL     @OZ30157*/
*             IF DRCDCNA=BONE THEN  /* SAY THAT              @OZ30157*/
         B     @RC02327                                            2329
@RF02327 L     @04,TABPTR2                                         2329
         TM    DRCDCNA(@04),B'00000010'                            2329
         BNO   @RF02329                                            2329
*               MDRDCUNA='/O-UNAV'; /* IS UNAVAILABLE        @OZ30157*/
         L     @04,WPLPTR                                          2330
         MVC   MDRDCUNA+4(7,@04),@CC03511                          2330
*             ELSE                  /* OTHERWISE,            @OZ30157*/
*               IF DRCDCRDY=BZERO THEN/* IF NOT READY        @OZ30157*/
         B     @RC02329                                            2331
@RF02329 L     @04,TABPTR2                                         2331
         TM    DRCDCRDY(@04),B'00000100'                           2331
         BNZ   @RF02331                                            2331
*                 MDRDCSUU='/O-SUU';/* SAY IS SUU            @OZ30157*/
         L     @04,WPLPTR                                          2332
         MVC   MDRDCSUU+4(6,@04),@CC03446                          2332
*               ELSE                /* IF NONE OF THE ABOVE  @OZ30157*/
*                 MDRDCON='/O';     /* IT IS ONLINE          @OZ30157*/
         B     @RC02331                                            2333
@RF02331 L     @04,WPLPTR                                          2333
         MVC   MDRDCON+4(2,@04),@CC03483                           2333
*           DO I=1 TO 4;            /* GET ALL 4 DRDS        @OZ30157*/
@RC02331 DS    0H                                                  2334
@RC02329 DS    0H                                                  2334
@RC02327 LA    @04,1                                               2334
         STH   @04,I                                               2334
@DL02334 DS    0H                                                  2335
*             IF((DSPON=BONE)&(DRCDRDOF(I)=BZERO))×((DSPOFF=BONE)&(
*                 DRCDRDOF(I)=BONE))×((DRCDRDOF(I)=BZERO)&(DRCDRDRD(I)=
*                 BZERO)) THEN      /*                       @OZ30157*/
         L     @15,@CA00041                                        2335
         L     @15,CWBPTR-CWBPTR(,@15)                             2335
         TM    DSPON(@15),B'01000000'                              2335
         BNO   @GL00031                                            2335
         SLA   @04,2                                               2335
         L     @15,TABPTR2                                         2335
         ALR   @15,@04                                             2335
         TM    DRCDRDOF-4(@15),B'10000000'                         2335
         BZ    @RT02335                                            2335
@GL00031 L     @04,@CA00041                                        2335
         L     @04,CWBPTR-CWBPTR(,@04)                             2335
         TM    DSPOFF(@04),B'00100000'                             2335
         BNO   @GL00030                                            2335
         LH    @04,I                                               2335
         SLA   @04,2                                               2335
         L     @15,TABPTR2                                         2335
         ALR   @15,@04                                             2335
         TM    DRCDRDOF-4(@15),B'10000000'                         2335
         BO    @RT02335                                            2335
@GL00030 LH    @04,I                                               2335
         SLA   @04,2                                               2335
         L     @15,TABPTR2                                         2335
         ALR   @15,@04                                             2335
         TM    DRCDRDOF-4(@15),B'11000000'                         2335
         BNZ   @RF02335                                            2335
@RT02335 DS    0H                                                  2336
*               DO;                 /* IF IT IS VALID FOR PRINT, GO
*                                      AHEAD                 @OZ30157*/
*                 MDRDRD(I)=DRCDRDAD(I);/* SET DRD SSID      @OZ30157*/
         LH    @04,I                                               2337
         LR    @15,@04                                             2337
         MH    @15,@CH00032                                        2337
         LA    @14,4                                               2337
         AL    @14,WPLPTR                                          2337
         ST    @15,@TF00001                                        2337
         ALR   @15,@14                                             2337
         L     @03,TABPTR2                                         2337
         SLA   @04,2                                               2337
         ST    @04,@TF00002                                        2337
         ALR   @04,@03                                             2337
         MVC   MDRDRD-12(3,@15),DRCDRDAD-4(@04)                    2337
*                 IF DRCDRDOF(I)=BONE THEN/* IF OFFLINE      @OZ30157*/
         AL    @03,@TF00002                                        2338
         TM    DRCDRDOF-4(@03),B'10000000'                         2338
         BNO   @RF02338                                            2338
*                   MDRDDOFF(I)='/OFF';/* SAY SO             @OZ30157*/
         AL    @14,@TF00001                                        2339
         MVC   MDRDDOFF-12(4,@14),@CC03482                         2339
*                 ELSE              /*                       @OZ30157*/
*                   IF DRCDRDNA(I)=BONE THEN/*               @OZ30157*/
         B     @RC02338                                            2340
@RF02338 LH    @04,I                                               2340
         LR    @15,@04                                             2340
         SLA   @15,2                                               2340
         L     @14,TABPTR2                                         2340
         ALR   @14,@15                                             2340
         TM    DRCDRDNA-4(@14),B'00100000'                         2340
         BNO   @RF02340                                            2340
*                     MDRDDUNA(I)='/O-UNAV';/*               @OZ30157*/
         MH    @04,@CH00032                                        2341
         L     @15,WPLPTR                                          2341
         ALR   @15,@04                                             2341
         MVC   MDRDDUNA-8(7,@15),@CC03511                          2341
*                   ELSE            /*                       @OZ30157*/
*                     IF DRCDRDRD(I)=BZERO THEN/*            @OZ30157*/
         B     @RC02340                                            2342
@RF02340 LH    @04,I                                               2342
         LR    @15,@04                                             2342
         SLA   @15,2                                               2342
         L     @14,TABPTR2                                         2342
         ALR   @14,@15                                             2342
         TM    DRCDRDRD-4(@14),B'01000000'                         2342
         BNZ   @RF02342                                            2342
*                       MDRDDSUU(I)='/O-SUU';/*              @OZ30157*/
         MH    @04,@CH00032                                        2343
         L     @15,WPLPTR                                          2343
         ALR   @15,@04                                             2343
         MVC   MDRDDSUU-8(6,@15),@CC03446                          2343
*                     ELSE          /*                       @OZ30157*/
*                       MDRDDUNA(I)=STDEF;/* USE DEFAULT     @OZ30157*/
         B     @RC02342                                            2344
@RF02342 LH    @04,I                                               2344
         MH    @04,@CH00032                                        2344
         L     @15,WPLPTR                                          2344
         ALR   @15,@04                                             2344
         MVC   MDRDDUNA-8(7,@15),STDEF                             2344
*               END;                /* END DISPLAYABLE DRD   @OZ30157*/
@RC02342 DS    0H                                                  2345
@RC02340 DS    0H                                                  2345
@RC02338 DS    0H                                                  2346
*           END;                    /* END OF ONE LINE       @OZ30157*/
@RF02335 LA    @04,1                                               2346
         AH    @04,I                                               2346
         STH   @04,I                                               2346
         CH    @04,@CH00045                                        2346
         BNH   @DL02334                                            2346
*           CALL MSG56D;            /* PRINT IT OR BUMP NEXT @OZ30157*/
         BAL   @14,MSG56D                                          2347
*         END;                      /* END VALID DISPLAY LIN @OZ30157*/
*       TABPTR2=DRCCHN;             /* CHAIN TO NEXT ENTRY   @OZ30157*/
@RF02308 L     @04,TABPTR2                                         2349
         L     @04,DRCCHN(,@04)                                    2349
         ST    @04,TABPTR2                                         2349
*     END;                          /* END OF DRC CHAIN      @OZ30157*/
@DE02291 L     @04,TABPTR2                                         2350
         LTR   @04,@04                                             2350
         BNZ   @DL02291                                            2350
*   IF ERRFLG=BONE THEN             /* IF NO PATHS FOUND     @OZ30157*/
@RF02290 TM    ERRFLG,B'10000000'                                  2351
         BNO   @RF02351                                            2351
*     DO;                           /* MUST PRINT ERR MSG    @OZ30157*/
*       IF DSPON=BONE THEN          /* EITHER NO PATHS ONL   @OZ30157*/
         L     @04,@CA00041                                        2353
         L     @04,CWBPTR-CWBPTR(,@04)                             2353
         TM    DSPON(@04),B'01000000'                              2353
         BNO   @RF02353                                            2353
*         DRCMSG='NO PATHS ONLINE'; /* IN MESSAGE            @OZ30157*/
         L     @04,WPLPTR                                          2354
         MVI   DRCMSG+19(@04),C' '                                 2354
         MVC   DRCMSG+20(54,@04),DRCMSG+19(@04)                    2354
         MVC   DRCMSG+4(15,@04),@CC03484                           2354
*       ELSE                        /* OR NONE OFFLINE       @OZ30157*/
*         DRCMSG='NO PATHS OFFLINE';/* IN MESSAGE            @OZ30157*/
         B     @RC02353                                            2355
@RF02353 L     @04,WPLPTR                                          2355
         MVI   DRCMSG+20(@04),C' '                                 2355
         MVC   DRCMSG+21(53,@04),DRCMSG+20(@04)                    2355
         MVC   DRCMSG+4(16,@04),@CC03486                           2355
*       CALL MSG56D;                /* DISPLAY MESSAGE       @OZ30157*/
@RC02353 BAL   @14,MSG56D                                          2356
*     END;                          /* AND END IT ALL        @OZ30157*/
*   RFY                                                            2358
*     R14 RSTD;                     /*                       @OZ30157*/
@RF02351 DS    0H                                                  2359
*   R14=MSG56I14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MSG56I14                                        2359
*   RFY                                                            2360
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00019 DS    0H                                                  2361
@EF00019 DS    0H                                                  2361
@ER00019 BR    @14                                                 2361
*   END MSG56I;                     /* END DRC STATUS RTN    @OZ30157*/
*MSG56J:                                                           2363
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56J   DS    0H                                                  2364
*/********************************************************** @OZ30157*/
*/*                                                          @OZ30157*/
*/* PROCEDURE NAME: MSG56J                                   @OZ30157*/
*/*                                                          @OZ30157*/
*/* FUNCTION: DISPLAY QCB PATH STATUS ON CALL FROM MSG56QC   @OZ30157*/
*/*                                                          @OZ30157*/
*/* INPUTS: QCB PATH STATUS TABLE                            @OZ30157*/
*/*                                                          @OZ30157*/
*/* OUTPUTS: ONE OR MORE WTO LINES WITH QCB PATH STATUS      @OZ30157*/
*/*                                                          @OZ30157*/
*/********************************************************** @OZ30157*/
*                                                                  2364
*   DCL                                                            2364
*     1 QCBMSG CHAR(35) BASED(QCMPTR),/* QCB MESSAGE         @OZ30157*/
*      2 QCMQCBU CHAR(3),           /* FOR UNPACK            @OZ30157*/
*       3 QCMQCB CHAR(2),           /* QCB NUMBER            @OZ30157*/
*       3 QCMX1 CHAR(1),            /* BLANK                 @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 QCMSDGU CHAR(3),           /* FOR UNPACK            @OZ30157*/
*       3 QCMSDG CHAR(2),           /* SDG NUMBER            @OZ30157*/
*       3 QCMX2 CHAR(1),            /* BLANK                 @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 QCMCART CHAR(6),           /* VOL SER               @OZ30157*/
*       3 * CHAR(3),                /* BLANK IF SSID         @OZ30157*/
*       3 QCMSSID CHAR(3),          /* SSID IF NOT VOLSER    @OZ30157*/
*      2 QCMCDSH CHAR(1),           /* BLANK OR DASH         @OZ30157*/
*      2 QCMCSEQ CHAR(1),           /* CART SEQ NO OR BLANK  @OZ30157*/
*      2 * CHAR(2),                 /* BLANKS                @OZ30157*/
*      2 QCML CHAR(1),              /* L VALUE               @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 QCMX CHAR(3),              /* X VALUE               @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 QCMY CHAR(2),              /* Y VALUE               @OZ30157*/
*      2 * CHAR(1),                 /* BLANK                 @OZ30157*/
*      2 QCMZ CHAR(1),              /* Z VALUE               @OZ30157*/
*      2 * CHAR(2),                 /* BLANKS                @OZ30157*/
*      2 QCMRCOD CHAR(2),           /* RESTART CODE          @OZ30157*/
*      2 * CHAR(3);                 /* BLANKS                @OZ30157*/
*   DCL                                                            2365
*     QCMPTR PTR(31);               /* LOCAL POINTER HALF LN @OZ30157*/
*   DCL                                                            2366
*     QCNMSG CHAR(26) INIT('THERE ARE NO QCBS IN ERROR');/*  @OZ30157*/
*   DCL                                                            2367
*     QCNMSL FIXED(31) CONSTANT(26);/*                       @OZ30157*/
*   DCL                                                            2368
*     MSG56J14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   RFY                                                            2369
*     R14 RSTD;                     /*                       @OZ30157*/
*   MSG56J14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MSG56J14                                        2370
*   RFY                                                            2371
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   FLIPSW=BZERO;                   /* START WITH SWITCH OFF @OZ30157*/
         NI    FLIPSW,B'11101111'                                  2372
*   TABPTR=QCTPTR;                  /* START ADDRESS         @OZ30157*/
         MVC   TABPTR(4),QCTPTR                                    2373
*   IF VALSSID=BZERO THEN           /* CHECK FOR VALID ENTRY @OZ30157*/
         TM    VALSSID,B'01000000'                                 2374
         BNZ   @RF02374                                            2374
*     DO;                           /* IF NONE, SAY SO       @OZ30157*/
*       WPLMLTXT=MESGS(MSG05606);   /* SET BLANK LINE        @OZ30157*/
         L     @04,WPLPTR                                          2376
         MVI   WPLMLTXT+72(@04),C' '                               2376
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                2376
         MVC   WPLMLTXT(72,@04),MESGS+1596                         2376
*       WPLMLLTF=''B;               /* CLEAR FLAGS           @OZ30157*/
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       2377
*       WPLMLTXT(1:QCNMSL)=QCNMSG;  /* SET MESSAGE           @OZ30157*/
         MVC   WPLMLTXT(26,@04),QCNMSG                             2378
*       WPLMLLEN=LENGTH(QCNMSG)+F4; /* WPL BUFFER            @OZ30157*/
         LA    @00,30                                              2379
         STC   @00,WPLMLLEN(,@04)                                  2379
*       WPLMLLTC=BONE;              /* DATA LINE FLAG        @OZ30157*/
         OI    WPLMLLTC(@04),B'00100000'                           2380
*       WPLPTR=WPLPTR+WPLMLLEN;     /* UP BY HDR 2 LENGTH    @OZ30157*/
         ALR   @04,@00                                             2381
         ST    @04,WPLPTR                                          2381
*       VALSSID=BONE;               /* NO ERROR MESSAGE      @OZ30157*/
         OI    VALSSID,B'01000000'                                 2382
*     END;                          /*                       @OZ30157*/
*   ELSE                            /* AT LEAST ONE          @OZ30157*/
*     DO;                           /* SO SCAN ALL SDG ENTRY @OZ30157*/
         B     @RC02374                                            2384
@RF02374 DS    0H                                                  2385
*       RETC=F0;                    /* INSURE GOOD END       @OZ30157*/
         SLR   @04,@04                                             2385
         STH   @04,RETC                                            2385
*       WPLPTR=WPLPTR+WPLMLLEN;     /* POINT TO NEXT LINE    @OZ30157*/
         L     @04,WPLPTR                                          2386
         SLR   @00,@00                                             2386
         IC    @00,WPLMLLEN(,@04)                                  2386
         ALR   @00,@04                                             2386
         ST    @00,WPLPTR                                          2386
*       WPLMLLTF=''B;               /* CLEAR FLAG FIELD      @OZ30157*/
         LR    @04,@00                                             2387
         XC    WPLMLLTF(2,@04),WPLMLLTF(@04)                       2387
*       WPLMLTXT=MESGS(MSG05606);   /* DATA LINE SKELETON    @OZ30157*/
         LR    @04,@00                                             2388
         MVI   WPLMLTXT+72(@04),C' '                               2388
         MVC   WPLMLTXT+73(53,@04),WPLMLTXT+72(@04)                2388
         MVC   WPLMLTXT(72,@04),MESGS+1596                         2388
*       WPLMLLEN=MESGLEN(MSG05606)+F4;/* LENGTH              @OZ30157*/
         LA    @04,4                                               2389
         MVC   @ZT00003+3(1),MESGLEN+1596                          2389
         AL    @04,@ZT00003                                        2389
         LR    @15,@00                                             2389
         STC   @04,WPLMLLEN(,@15)                                  2389
*       MSGIND=MSG05606;            /* INDICATOR             @OZ30157*/
         MVI   MSGIND,X'16'                                        2390
*       MSGCNT=MSGCNT+F1;           /* COUNT A LINE          @OZ30157*/
         LH    @04,MSGCNT                                          2391
         LA    @04,1(,@04)                                         2391
         STH   @04,MSGCNT                                          2391
*       DO UNTIL(TABPTR=F0);        /* EXISTS, SO LOOP       @OZ30157*/
@DL02392 DS    0H                                                  2393
*         IF FLIPSW=BZERO THEN      /* SET PROPER HALF-LINE  @OZ30157*/
         TM    FLIPSW,B'00010000'                                  2393
         BNZ   @RF02393                                            2393
*           QCMPTR=ADDR(FHALF);     /* INTO LINE POINTER     @OZ30157*/
         LA    @04,4                                               2394
         AL    @04,WPLPTR                                          2394
         ST    @04,QCMPTR                                          2394
*         ELSE                      /*                       @OZ30157*/
*           QCMPTR=ADDR(SHALF);     /*                       @OZ30157*/
         B     @RC02393                                            2395
@RF02393 L     @04,WPLPTR                                          2395
         LA    @04,SHALF+4(,@04)                                   2395
         ST    @04,QCMPTR                                          2395
*         UNPK(QCMQCBU,QCTNOP);     /* MESSAGE FIELD         @OZ30157*/
@RC02393 L     @04,QCMPTR                                          2396
         L     @15,TABPTR                                          2396
         UNPK  QCMQCBU(3,@04),QCTNOP(2,@15)                        2396
*         TR(QCMQCB,TRANS);         /* MAKE PRINTABLE        @OZ30157*/
         TR    QCMQCB(2,@04),TRANS                                 2397
*         QCMX1=' ';                /* CLEAR EXTRA BYTE      @OZ30157*/
         MVI   QCMX1(@04),C' '                                     2398
*         UNPK(QCMSDGU,QCTSDGP);    /* MESSAGE FIELD         @OZ30157*/
         UNPK  QCMSDGU(3,@04),QCTSDGP(2,@15)                       2399
*         TR(QCMSDG,TRANS);         /* MAKE PRINTABLE        @OZ30157*/
         TR    QCMSDG(2,@04),TRANS                                 2400
*         QCMX2=' ';                /* CLEAR EXTRA BYTE      @OZ30157*/
         MVI   QCMX2(@04),C' '                                     2401
*         IF QCTSSID=NULLS(1:3) THEN/* IF HAS CART. SER      @OZ30157*/
         CLC   QCTSSID(3,@15),NULLS                                2402
         BNE   @RF02402                                            2402
*           DO;                     /* THEN PUT IN MSG       @OZ30157*/
*             QCMCART=QCTCVOL;      /* GET VOLID,            @OZ30157*/
         MVC   QCMCART(6,@04),QCTCVOL(@15)                         2404
*             QCMCDSH='-';          /* A DASH,               @OZ30157*/
         MVI   QCMCDSH(@04),C'-'                                   2405
*             QCMCSEQ=QCTCSEQ;      /* AND SEQUENCE NUMBER   @OZ30157*/
         MVC   QCMCSEQ(1,@04),QCTCSEQ(@15)                         2406
*             QCML=QCTLVAL;         /* COPY L                @OZ30157*/
         MVC   QCML(1,@04),QCTLVAL(@15)                            2407
*             QCMX=QCTXVAL;         /* X                     @OZ30157*/
         MVC   QCMX(3,@04),QCTXVAL(@15)                            2408
*             QCMY=QCTYVAL;         /* Y                     @OZ30157*/
         MVC   QCMY(2,@04),QCTYVAL(@15)                            2409
*             QCMZ=QCTZVAL;         /* AND Z VALUES          @OZ30157*/
         MVC   QCMZ(1,@04),QCTZVAL(@15)                            2410
*           END;                    /* OTHERWISE,            @OZ30157*/
*         ELSE                      /* PUT                   @OZ30157*/
*           QCMSSID=QCTSSID;        /* SSID                  @OZ30157*/
         B     @RC02402                                            2412
@RF02402 L     @04,QCMPTR                                          2412
         L     @15,TABPTR                                          2412
         MVC   QCMSSID(3,@04),QCTSSID(@15)                         2412
*         QCMRCOD=QCTRCOD;          /* MESSAGE FIELD         @OZ30157*/
@RC02402 L     @04,QCMPTR                                          2413
         L     @15,TABPTR                                          2413
         MVC   QCMRCOD(2,@04),QCTRCOD(@15)                         2413
*         IF FLIPSW=BONE THEN       /* IF SECOND HALF DONE   @OZ30157*/
         TM    FLIPSW,B'00010000'                                  2414
         BNO   @RF02414                                            2414
*           CALL MSG56D;            /* THROUGH MSG56D        @OZ30157*/
         BAL   @14,MSG56D                                          2415
*         ELSE                      /*                       @OZ30157*/
*           FLIPSW=BONE;            /*                       @OZ30157*/
         B     @RC02414                                            2416
@RF02414 OI    FLIPSW,B'00010000'                                  2416
*         TABPTR=QCTCHAIN;          /* CHAIN TO NEXT ENTRY   @OZ30157*/
@RC02414 L     @04,TABPTR                                          2417
         L     @04,QCTCHAIN-1(,@04)                                2417
         LA    @04,0(,@04)                                         2417
         ST    @04,TABPTR                                          2417
*       END;                        /* END SCAN ROUTINE      @OZ30157*/
@DE02392 L     @04,TABPTR                                          2418
         LTR   @04,@04                                             2418
         BNZ   @DL02392                                            2418
*     END;                          /* END GOOD RUN          @OZ30157*/
*   RFY                                                            2420
*     R14 RSTD;                     /*                       @OZ30157*/
@RC02374 DS    0H                                                  2421
*   R14=MSG56J14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MSG56J14                                        2421
*   RFY                                                            2422
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /*                       @OZ30157*/
@EL00020 DS    0H                                                  2423
@EF00020 DS    0H                                                  2423
@ER00020 BR    @14                                                 2423
*   END MSG56J;                     /* END QCB DISPLAY RTN   @OZ30157*/
*MSG56QU:                                                          2425
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @OZ30157*/
MSG56QU  DS    0H                                                  2426
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE NAME: MSG56QU                                          */
*/*                                                                  */
*/* FUNCTION: GET QUALIFIER VALUE(S) AND LENGTH(S) ON CALL           */
*/*                                                                  */
*/* INPUTS: CWB WITH QUALIFIED OPERAND AND DSPQUAL SET               */
*/*         QUALLEN(1) SET TO EXPECTED LENGTH OF FIRST QUAL.         */
*/*         QUALLEN(2) SET TO EXPECTED LENGTH OF SEC. QUAL.          */
*/*                                                                  */
*/* OUTPUTS: QUALLEN(X) SET TO ACTUAL QUALIFIER LENGTH(S)            */
*/*          QUAL(X) SET TO ACTUAL QUALIFIER VALUE(S)                */
*/*          RETURN CODE IN RETC  =0 IF GOT QUALIFIER AS             */
*/*                                  EXPECTED (INCLUDING             */
*/*                                  LENGTH).                        */
*/*                               =4 IF GOT QUALIFIER WITH           */
*/*                                  DIFFERENT LENGTH.               */
*/*                               =8 IF GOT DIFFERENT NUMBER         */
*/*                                  OF QUALIFIERS.                  */
*/*                               =C IF DISASTROUS ERROR     @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  2426
*   DCL                                                            2426
*     MS56QU14 FIXED(31);           /* LOCAL RETURN REG SAVE @OZ30157*/
*   DCL                                                            2427
*     QUINPTR PTR(31);              /* CURRENT INPUT POINTER @OZ30157*/
*   DCL                                                            2428
*     QUSCPTR PTR(31);              /* SCAN POINTER          @OZ30157*/
*   DCL                                                            2429
*     QUNDPTR PTR(31);              /* END POINTER           @OZ30157*/
*   DCL                                                            2430
*     QUALX FIXED(31);              /* INDEX WORK AREA       @OZ30157*/
*   DCL                                                            2431
*     QUALY FIXED(31);              /* INDEX WORK AREA       @OZ30157*/
*   DCL                                                            2432
*     ENDCH CHAR(1) BASED(QUNDPTR); /* LAST CHARACTER        @OZ30157*/
*   DCL                                                            2433
*     CURCH CHAR(1) BASED(QUSCPTR); /* CURRENT CHARACTER     @OZ30157*/
*   DCL                                                            2434
*     CURQUAL CHAR(*) BASED(QUINPTR);/* CURRENT QUALIFIER    @OZ30157*/
*   RFY                                                            2435
*     R14 RSTD;                     /*                       @OZ30157*/
*   MS56QU14=R14;                   /* SAVE RETURN REG       @OZ30157*/
         ST    R14,MS56QU14                                        2436
*   RFY                                                            2437
*     R14 UNRSTD;                   /*                       @OZ30157*/
*/********************************************************************/
*/*                                                                  */
*/*  SET UP POINTERS TO SCAN QUALIFIER                       @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  2438
*   QUINPTR=ADDR(CWBCMND)+DSPOFFS-1;/* GET QUALIFIER START   @OZ30157*/
         L     @04,@CA00041                                        2438
         L     @04,CWBPTR-CWBPTR(,@04)                             2438
         LA    @00,CWBCMND(,@04)                                   2438
         AH    @00,DSPOFFS(,@04)                                   2438
         BCTR  @00,0                                               2438
         ST    @00,QUINPTR                                         2438
*   QUNDPTR=QUINPTR+QUALLEN(1);     /* AND LENGTH            @OZ30157*/
         AH    @00,QUALLEN                                         2439
         ST    @00,QUNDPTR                                         2439
*   IF QUALLEN(2)>F0 THEN           /* IF TWO QUALIFIERS     @OZ30157*/
         LH    @04,QUALLEN+2                                       2440
         LTR   @04,@04                                             2440
         BNP   @RF02440                                            2440
*     DO;                           /* SAY SO                @OZ30157*/
*       QUNDPTR=QUNDPTR+QUALLEN(2)+1;/* SET END PTR TO ACT         2442
*                                      END@OZ30157                   */
         ALR   @00,@04                                             2442
         AL    @00,@CF00047                                        2442
         ST    @00,QUNDPTR                                         2442
*       QUALY=F2;                   /* SET MAX NUMBER        @OZ30157*/
         MVC   QUALY(4),@CF00056                                   2443
*     END;                          /* TO 2                  @OZ30157*/
*   ELSE                                                           2445
*     QUALY=F1;                     /* OTHERWISE, TO 1       @OZ30157*/
         B     @RC02440                                            2445
@RF02440 MVC   QUALY(4),@CF00047                                   2445
*   QUAL(1)=' ';                    /* CLEAR QUALIFIER FIELDS@OZ30157*/
@RC02440 MVI   QUAL+1,C' '                                         2446
         MVC   QUAL+2(9),QUAL+1                                    2446
         MVI   QUAL,C' '                                           2446
*   QUAL(2)=' ';                    /* TO BLANKS             @OZ30157*/
         MVI   QUAL+12,C' '                                        2447
         MVC   QUAL+13(9),QUAL+12                                  2447
         MVI   QUAL+11,C' '                                        2447
*   RETC=F0;                        /* ASSUME GOOD LENGTH    @OZ30157*/
         SLR   @04,@04                                             2448
         STH   @04,RETC                                            2448
*   IF ENDCH^=' '&ENDCH^=','&ENDCH^=')' THEN/* IS BAD LENGTH?      2449
*                                                            @OZ30157*/
         L     @04,QUNDPTR                                         2449
         CLI   ENDCH(@04),C' '                                     2449
         BE    @RF02449                                            2449
         CLI   ENDCH(@04),C','                                     2449
         BE    @RF02449                                            2449
         CLI   ENDCH(@04),C')'                                     2449
         BE    @RF02449                                            2449
*     QUNDPTR=QUINPTR+11;           /* THEN SET TO MAX VALUE @OZ30157*/
         LA    @04,11                                              2450
         AL    @04,QUINPTR                                         2450
         ST    @04,QUNDPTR                                         2450
*   QUALX=F1;                       /* START WITH QUAL 1     @OZ30157*/
@RF02449 MVC   QUALX(4),@CF00047                                   2451
*   ENDSW=BZERO;                    /* STOP SWITCH IF >2     @OZ30157*/
         NI    ENDSW,B'11111011'                                   2452
*   DO QUSCPTR=QUINPTR TO QUNDPTR WHILE(ENDSW=BZERO);/*      @OZ30157*/
         L     @04,QUINPTR                                         2453
         B     @DE02453                                            2453
@DL02453 TM    ENDSW,B'00000100'                                   2453
         BNZ   @DC02453                                            2453
*/********************************************************************/
*/*                                                                  */
*/*  FIND ACTUAL END OF QUALIFIER(S), MOVE AND SET LENGTH    @OZ30157*/
*/*                                                                  */
*/********************************************************************/
*                                                                  2454
*     IF CURCH=' '×CURCH=','×CURCH=')'×CURCH='-' THEN/*      @OZ30157*/
         CLI   CURCH(@04),C' '                                     2454
         BE    @RT02454                                            2454
         CLI   CURCH(@04),C','                                     2454
         BE    @RT02454                                            2454
         CLI   CURCH(@04),C')'                                     2454
         BE    @RT02454                                            2454
         CLI   CURCH(@04),C'-'                                     2454
         BNE   @RF02454                                            2454
@RT02454 DS    0H                                                  2455
*       DO;                         /* GOT ACTUAL END        @OZ30157*/
*         QUALLEN(QUALX)=QUSCPTR-QUINPTR;/* SET LENGTH       @OZ30157*/
         L     @04,QUALX                                           2456
         LR    @15,@04                                             2456
         ALR   @15,@15                                             2456
         L     @14,QUSCPTR                                         2456
         L     @03,QUINPTR                                         2456
         LR    @00,@14                                             2456
         SLR   @00,@03                                             2456
         STH   @00,QUALLEN-2(@15)                                  2456
*         QUAL(QUALX,1:QUALLEN(QUALX))=CURQUAL(1:QUALLEN(QUALX));/*
*                                      MOVE THE QUALIFIER    @OZ30157*/
         LR    @15,@04                                             2457
         MH    @15,@CH00033                                        2457
         LA    @02,QUAL-11(@15)                                    2457
         BCTR  @00,0                                               2457
         LR    @15,@00                                             2457
         EX    @15,@SM03663                                        2457
*         QUINPTR=QUSCPTR+F1;       /* GOT ONE QUALIFIER     @OZ30157*/
         LA    @15,1                                               2458
         LR    @00,@14                                             2458
         ALR   @00,@15                                             2458
         ST    @00,QUINPTR                                         2458
*         QUALX=QUALX+F1;           /* GO TO NEXT QUALIFIER  @OZ30157*/
         ALR   @04,@15                                             2459
         ST    @04,QUALX                                           2459
*         IF QUALX>F2×CURCH^='-' THEN/* OVER 2 OR END        @OZ30157*/
         CH    @04,@CH00056                                        2460
         BH    @RT02460                                            2460
         CLI   CURCH(@14),C'-'                                     2460
         BE    @RF02460                                            2460
@RT02460 DS    0H                                                  2461
*           ENDSW=BONE;             /* STOP HERE             @OZ30157*/
         OI    ENDSW,B'00000100'                                   2461
*         QUSCPTR=QUINPTR;          /* SKIP ONE INCREMENT    @OZ30157*/
@RF02460 MVC   QUSCPTR(4),QUINPTR                                  2462
*       END;                        /* END QUAL SCAN         @OZ30157*/
*   END;                            /* END FETCH QUALIFIERS  @OZ30157*/
@RF02454 LA    @04,1                                               2464
         AL    @04,QUSCPTR                                         2464
@DE02453 ST    @04,QUSCPTR                                         2464
         C     @04,QUNDPTR                                         2464
         BNH   @DL02453                                            2464
@DC02453 DS    0H                                                  2465
*   RFY                                                            2465
*     R14 RSTD;                     /*                       @OZ30157*/
*   R14=MS56QU14;                   /* RESTORE RETURN REG    @OZ30157*/
         L     R14,MS56QU14                                        2466
*   RFY                                                            2467
*     R14 UNRSTD;                   /*                       @OZ30157*/
*   RETURN;                         /* RETURN TO CALLER      @OZ30157*/
@EL00021 DS    0H                                                  2468
@EF00021 DS    0H                                                  2468
@ER00021 BR    @14                                                 2468
*   END MSG56QU;                    /* END DISP CPU PATHS    @OZ30157*/
*ICBMSG46:                                                         2470
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @ZD00086*/
ICBMSG46 DS    0H                                                  2471
*/*  ****************************************************    @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*    THIS SUBROUTINE ISSUES THE FREEMAIN MACRO FOR         @Z40LB01*/
*/*    THE DEQ'D COMTASK CWB.                                @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*  ****************************************************    @Z40LB01*/
*                                                                  2471
*   DCL                                                            2471
*     SBPOL CHAR(1);                /* SUBPOOL               @Z40LB01*/
*   RESPECIFY                                                      2472
*    (R14,                                                         2472
*     R2) RSTD;                     /* RESTRICT REG 2        @Z40LB01*/
*   SAVR1446=R14;                   /* SAVE CALLERS REGISTER FOURTEEN
*                                                            @Z40LB01*/
         L     @15,@CA01321                                        2473
         ST    R14,SAVR1446-SAVR1446(,@15)                         2473
*   RESPECIFY                                                      2474
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   R2=CWBPTR;                      /* SET R2 -> CWB         @Z40LB01*/
         L     @04,@CA00041                                        2475
         L     @04,CWBPTR-CWBPTR(,@04)                             2475
         LR    R2,@04                                              2475
*   SBPOL=CWBSBPOL;                 /* SET SUBPOOL FOR       @Z40LB01
*                                      FREEMAIN              @Z40LB01*/
         MVC   SBPOL(1),CWBSBPOL(@04)                              2476
*/*********************************************************  @Z40LB01*/
*/* ISSUE FREEMAIN FOR COM WORK AREA                         @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  2477
*   GEN REFS(R2,R3,SBPOL);                                         2477
*                                                          /*@XD00086*/
          SR    R3,R3               ZERO REG 3                 @X50AC01
          IC    R3,SBPOL            PUT SBPOL IN LOW BYTE      @X50AC01
IFREEMN1  FREEMAIN R,LV=136,A=(R2),SP=(R3) ISSUE FREEMAIN      @XD00086
*   RESPECIFY                                                      2478
*     R2 UNRSTD;                    /* RELEASE REG 2         @Z40LB01*/
*   RECOVER(3)=BONE;                /* SET RECOVERY BIT      @Z40LB01
*                                      FOR FREED             @Z40LB01*/
         L     @04,@CA01313                                        2479
         OI    RECOVER-RECOVER(@04),B'00100000'                    2479
*   RFY                                                            2480
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=SAVR1446;                   /* RESTORE CALLERS REGISTER    2481
*                                      FOURTEEN              @Z40LB01*/
         L     @04,@CA01321                                        2481
         L     R14,SAVR1446-SAVR1446(,@04)                         2481
*   RFY                                                            2482
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RTN TO CALLER         @Z40LB01*/
@EL00022 DS    0H                                                  2483
@EF00022 DS    0H                                                  2483
@ER00022 BR    @14                                                 2483
*   END ICBMSG46;                   /*                       @Z40LB01*/
*ICBMSG82:                                                         2485
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/
*                                                                  2485
ICBMSG82 DS    0H                                                  2486
*   /*****************************************************************/
*   /*                                                               */
*   /* **************************************************    @Z40LB01*/
*   /* THIS SUBROUTINE IS USED FOR 2 CONVERSION NEEDS:       @Z40LB01*/
*   /* (1)                                                   @Z40LB01*/
*   /* THIS SUBROUTINE IS CALLED WHENEVER AN MSSC MACRO IS   @Z40LB01*/
*   /* IS ISSUED THAT RESULTS WITH FAILURE INDICATION ON     @Z40LB01*/
*   /* RETURN FROM SVC 126.                                  @Z40LB01*/
*   /* ON ERROR SITUATIONS A REASON CODE IS PASSED BACK      @Z40LB01*/
*   /* TO THE CALLED IN REGISTER 0. THIS SUBROUTINE          @Z40LB01*/
*   /* CONVERTS THE REASON CODE TO A 3-BYTE PRINTABLE        @Z40LB01*/
*   /* FIELD. THIS FIELD IS THEN INSERTED INTO A WTO         @Z40LB01*/
*   /* MESSAGE.                                              @Z40LB01*/
*   /* (2)                                                   @Z40LB01*/
*   /* CONVERT 2 BYTE HEX SSID(UNIT)                         @Z40LB01*/
*   /* TO 3 BYTE REAL UNIT IN EBCDIC                         @Z40LB01*/
*   /* SO THAT THE UNIT CAN BE PRINTED                       @Z40LB01*/
*   /* VIA WTO.                                              @Z40LB01*/
*   /* THIS SUBROUTINE IS CALLED FOR THIS REASON IN          @Z40LB01*/
*   /* SUBROUTINES ICBMSG15 AND ICBMSG20                     @Z40LB01*/
*   /* WHEN MESSAGE PROCESSING WARRANTS                      @Z40LB01*/
*   /* ITS USE.                                              @Z40LB01*/
*   /*                                                       @Z40LB01*/
*   /* *************************************                 @Z40LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2486
*   RFY                                                            2486
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   SAVR1482=R14;                   /* SAVE CALLERS REGISTER FOURTEEN
*                                                            @Z40LB01*/
         L     @15,@CA01322                                        2487
         ST    R14,SAVR1482-SAVR1482(,@15)                         2487
*   RFY                                                            2488
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   BYTES234=BYTES234*F16;          /* SHIFT LEFT            @Z40LB01
*                                      FOUR BITS             @Z40LB01*/
         L     @04,@CA01302                                        2489
         L     @00,BYTES234-INTER-1(,@04)                          2489
         N     @00,@CF03658                                        2489
         SLA   @00,4                                               2489
         ST    @00,@TF00001                                        2489
         MVC   BYTES234-INTER(3,@04),@TF00001+1                    2489
*   BYTE4=(BYTE4×HEX0F);            /* OR IN X0F             @Z40LB01*/
         LA    @00,15                                              2490
         MVC   @ZT00003+3(1),BYTE4-INTER(@04)                      2490
         O     @00,@ZT00003                                        2490
         STC   @00,BYTE4-INTER(,@04)                               2490
*   UNPK(INTER,BYTES34);            /* UNPACK                @Z40LB01*/
         UNPK  INTER-INTER(4,@04),BYTES34-INTER(2,@04)             2491
*   TR(BYTES234,TRANS);             /* TRANS TO EBCDIC       @OZ24706*/
*                                                                  2492
         TR    BYTES234-INTER(3,@04),TRANS                         2492
*   /*****************************************************************/
*   /*                                                               */
*   /* *************************************                 @Z40LB01*/
*   /*                                                       @Z40LB01*/
*   /* TRANSLATED TO 3 BYTES                                 @Z40LB01*/
*   /*                                                       @Z40LB01*/
*   /* *************************************                 @Z40LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2493
*   RFY                                                            2493
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=SAVR1482;                   /* RESTORE CALLERS REGISTER    2494
*                                      FOURTEEN              @Z40LB01*/
         L     @04,@CA01322                                        2494
         L     @04,SAVR1482-SAVR1482(,@04)                         2494
         LR    R14,@04                                             2494
*   RFY                                                            2495
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RTN TO CALLER         @Z40LB01*/
@EL00023 DS    0H                                                  2496
@EF00023 DS    0H                                                  2496
@ER00023 BR    @14                                                 2496
*   END ICBMSG82;                   /*                       @Z40LB01*/
*SDGMSGS:                                                          2498
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z40LB01*/
SDGMSGS  DS    0H                                                  2499
*/*********************************************************  @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* PROCEDURE NAME - SDGMSGS                                 @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* FUNCTION - THIS SUB ROUTINE BUILDS SDG DASD MESSAGE      @Z40LB01*/
*/*            DATA LINES AND WHEN THE ML WTO BUFFER         @Z40LB01*/
*/*            BECOMES FULL WILL CALL THE WTO WRITE SUB      @Z40LB01*/
*/*            ROUTINE (MSG56C) TO ISSUE THE ML WTO.         @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* INPUTS - INTERNAL FIELDS INITIALIZED BY ICBMSG56.        @Z40LB01*/
*/*                                                          @Z40LB01*/
*/* OUTPUTS - SDG DASD MESSAGE LINE DATA IN ML WTO BUFFER.   @Z40LB01*/
*/*                                                          @Z40LB01*/
*/*********************************************************  @Z40LB01*/
*                                                                  2499
*   DCL                                                            2499
*     SAV14SDG FIXED(31);           /* LOCAL RETURN REG SAVE AREA  2499
*                                                            @Z40LB01*/
*   RFY                                                            2500
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   SAV14SDG=R14;                   /* SAVE RETURN REG       @Z40LB01*/
         ST    R14,SAV14SDG                                        2501
*   RFY                                                            2502
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   SAVTYP13='SD-';                 /* STAG DRIVE CONST      @OZ30157*/
*                                                                  2503
         MVC   SAVTYP13(3),@CC03574                                2503
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT PRIM TBL PACK TO EBCDIC                       @Z40LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2504
*   INTER=''B;                      /* CLEAR CONV AREA       @Z40LB01*/
         L     @04,@CA01302                                        2504
         XC    INTER-INTER(4,@04),INTER-INTER(@04)                 2504
*   BYTE4C=PRITBL;                  /* MOVE IN SSID VALUE    @Z40LB01*/
         L     @15,@CA01293                                        2505
         L     @15,MSGPTR-MSGPTR(,@15)                             2505
         MVC   BYTE4C-INTER(1,@04),PRITBL+2(@15)                   2505
*   CALL ICBMSG82;                  /* CONV SUB ROUTINE      @Z40LB01*/
         BAL   @14,ICBMSG82                                        2506
*   PRITP=BYTES234;                 /* SAVE PRI TBL SSID     @Z40LB01*/
*                                                                  2507
         L     @04,@CA01302                                        2507
         MVC   PRITP(3),BYTES234-INTER(@04)                        2507
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT SECONDARY TBL PACK TO EBCDIC                  @Z40LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  2508
*   INTER=''B;                      /* CLEAR CONV AREA       @Z40LB01*/
         XC    INTER-INTER(4,@04),INTER-INTER(@04)                 2508
*   BYTE4C=SECTBL;                  /* MOVE IN SSID VALUE    @Z40LB01*/
         L     @15,@CA01293                                        2509
         L     @15,MSGPTR-MSGPTR(,@15)                             2509
         MVC   BYTE4C-INTER(1,@04),SECTBL+2(@15)                   2509
*   CALL ICBMSG82;                  /* CONV SUB ROUTINE      @Z40LB01*/
         BAL   @14,ICBMSG82                                        2510
*   SECTP=BYTES234;                 /* SAVE SEC TBL SSID     @Z40LB01*/
         L     @04,@CA01302                                        2511
         MVC   SECTP(3),BYTES234-INTER(@04)                        2511
*SDG:                               /* DO LOOP START LABEL - END   2512
*                                      LABEL ENDSDG:         @Z40LB01*/
*   DO I=F1 TO F28;                 /* SCAN BY SDG           @Z40LB01*/
SDG      LA    @04,1                                               2512
         STH   @04,I                                               2512
@DL02512 DS    0H                                                  2513
*     IF SDGREQ(I)^=F0 THEN         /* ANY VAL REQ THIS SDG  @Z40LB01*/
         SLR   @00,@00                                             2513
         IC    @00,SDGREQ-1(@04)                                   2513
         CH    @00,@CH00226                                        2513
         BE    @RF02513                                            2513
*VALID:                             /* DO GROUP START LABEL - END  2514
*                                      LABEL ENDVALID:       @Z40LB01*/
*       DO;                         /* PROCESS THE VALID REQUESTS  2514
*                                      THIS SDG              @Z40LB01*/
*                                                                  2514
VALID    DS    0H                                                  2515
*         /***********************************************************/
*         /*                                                         */
*         /* CONVERT I-1 TO SDG # EBCDIC                     @Z40LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  2515
*         INTER=''B;                /* CLEAR CONV AREA       @Z40LB01*/
         L     @04,@CA01302                                        2515
         XC    INTER-INTER(4,@04),INTER-INTER(@04)                 2515
*         BYTE4=I-F1;               /* MOVE IN SDG VALUE     @Z40LB01*/
         LH    @00,I                                               2516
         BCTR  @00,0                                               2516
         STC   @00,BYTE4-INTER(,@04)                               2516
*         CVD(BYTE4,INTER);         /* CONVERT TO DEC        @Z40LB01*/
         CVD   @00,@TS00001                                        2517
         MVC   INTER-INTER(4,@04),@TS00001+4                       2517
*         INTER=INTER/F16;          /* SHIFT OUT SIGN        @Z40LB01*/
         L     @00,INTER-INTER(,@04)                               2518
         SRL   @00,4                                               2518
         ST    @00,INTER-INTER(,@04)                               2518
*         CALL ICBMSG82;            /* CONV SUB ROUTINE      @Z40LB01*/
         BAL   @14,ICBMSG82                                        2519
*         SAVTYP45=BYTES34;         /* SAVE SDG #            @OZ30157*/
         L     @04,@CA01302                                        2520
         MVC   SAVTYP45(2),BYTES34-INTER(@04)                      2520
*SSID:                              /* DO LOOP START LABEL - END   2521
*                                      LABEL ENDSSID:        @Z40LB01*/
*         DO K=F1 TO F8;            /* SCAN SSID WITHIN SDG  @Z40LB01*/
*                                                                  2521
SSID     LA    @04,1                                               2521
         STH   @04,K                                               2521
@DL02521 DS    0H                                                  2522
*           /*********************************************************/
*           /*                                                       */
*           /* LOOP THROUGH THE REQUEST BITS AND PROCESS     @Z40LB01*/
*           /* THE DASD SSID MESSAGE LINES FOR THOSE THAT    @Z40LB01*/
*           /* ARE SET.                                      @Z40LB01*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  2522
*           IF CONFGMSK(K)=(CONFGMSK(K)&SDGREQ(I)) THEN/*    @Z40LB01*/
         L     @15,@CA01312                                        2522
         LH    @14,I                                               2522
         ST    @04,@TF00001                                        2522
         ALR   @04,@15                                             2522
         BCTR  @04,0                                               2522
         MVC   @TS00001(1),CONFGMSK-CONFGMSK(@04)                  2522
         LA    @04,SDGREQ-1(@14)                                   2522
         NC    @TS00001(1),0(@04)                                  2522
         AL    @15,@TF00001                                        2522
         BCTR  @15,0                                               2522
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   2522
         BNE   @RF02522                                            2522
*             DO;                   /*                       @Z40LB01*/
*                                                                  2523
*               /*****************************************************/
*               /*                                                   */
*               /* FILL THE DASD STATUS FIELDS FROM          @Z40LB01*/
*               /* SDG STATUS TABLE.                         @Z40LB01*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  2524
*               IF FLIPSW=BONE THEN /* SECOND HALF MSG LINE ?      2524
*                                                            @Z40LB01*/
         TM    FLIPSW,B'00010000'                                  2524
         BNO   @RF02524                                            2524
*                 DTAPTR=ADDR(SHALF);/* PNT TO SECOND HALF   @OZ30157*/
         L     @04,WPLPTR                                          2525
         LA    @04,SHALF+4(,@04)                                   2525
         ST    @04,DTAPTR                                          2525
*               ELSE                /* FIRST HALF MESSAGE LINE     2526
*                                                            @Z40LB01*/
*                 DTAPTR=ADDR(FHALF);/* POINT TO IT          @OZ30157*/
         B     @RC02524                                            2526
@RF02524 LA    @04,4                                               2526
         AL    @04,WPLPTR                                          2526
         ST    @04,DTAPTR                                          2526
*               STATI=((I-1)*8+K);  /* SAVE SSID INDEX       @Z40LB01*/
@RC02524 LH    @04,K                                               2527
         LH    @15,I                                               2527
         LR    @00,@15                                             2527
         BCTR  @00,0                                               2527
         SLA   @00,3                                               2527
         ALR   @00,@04                                             2527
         STH   @00,STATI                                           2527
*               DTYPE=SAVTYP;       /* MESSAGE TYPE FIELD    @Z40LB01*/
         L     @14,DTAPTR                                          2528
         MVC   DTYPE(5,@14),SAVTYP                                 2528
*               DSSID=SDGSSIDS(STATI);/* SSID FLD            @Z40LB01*/
*                                                                  2529
         MH    @00,@CH00060                                        2529
         LR    @03,@00                                             2529
         LA    @02,SDGSSIDS-3(@03)                                 2529
         MVC   DSSID(3,@14),0(@02)                                 2529
*               /*****************************************************/
*               /*                                                   */
*               /* IF THE STAT TABLE HAS * THEN THE          @Z40LB01*/
*               /* PAB READ FAILED AND MESSAGE HAS           @Z40LB01*/
*               /* TO REFLECT THIS.                          @Z40LB01*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  2530
*               IF STATFLG(STATI)='*' THEN/* TEST PAB READ   @Z40LB01*/
         L     @03,WORKPTR                                         2530
         ALR   @03,@00                                             2530
         CLI   STATFLG+41(@03),C'*'                                2530
         BNE   @RF02530                                            2530
*                 DO;               /* PAB READ ERROR        @Z40LB01*/
*                   IF CONFGMSK(K)=(SDGON(I)&CONFGMSK(K))/*  @Z40LB01*/
*                     THEN          /*                       @Z40LB01*/
         L     @03,@CA01312                                        2532
         L     @02,@CA01293                                        2532
         L     @02,MSGPTR-MSGPTR(,@02)                             2532
         ALR   @02,@15                                             2532
         MVC   @TS00001(1),SDGON+1(@02)                            2532
         ST    @04,@TF00001                                        2532
         ALR   @04,@03                                             2532
         BCTR  @04,0                                               2532
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@04)                  2532
         AL    @03,@TF00001                                        2532
         BCTR  @03,0                                               2532
         CLC   CONFGMSK-CONFGMSK(1,@03),@TS00001                   2532
         BNE   @RF02532                                            2532
*                     DO;           /* MARK ONLINE STATUS    @Z40LB01*/
*                       DSTAT1='O'; /* ONLINE                @OZ30157*/
         MVI   DSTAT1(@14),C'O'                                    2534
*                       DSTAT27='      ';/* CLEAR            @OZ30157*/
         MVC   DSTAT27(6,@14),@CC01404                             2535
*                     END;          /* END ONLINE STATUS     @Z40LB01*/
*                   ELSE            /* NOT ONLINE STATUS     @Z40LB01*/
*                     DSTAT='OFFLINE';/* OFFLINE             @Z40LB01*/
         B     @RC02532                                            2537
@RF02532 L     @04,DTAPTR                                          2537
         MVC   DSTAT(7,@04),@CC02856                               2537
*                   DUSE='********';/* ERROR INDICATOR       @Z40LB01*/
@RC02532 L     @04,DTAPTR                                          2538
         MVC   DUSE(8,@04),@CC03581                                2538
*                 END;              /* END UNSUCCESSFUL PAB READ   2539
*                                      STATUS                @Z40LB01*/
*                                                                  2539
*               /*****************************************************/
*               /*                                                   */
*               /* GOOD PAB DATA AVAILABLE.                  @Z40LB01*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  2540
*               ELSE                /* PAB READ WAS SUCCESSFUL     2540
*                                                            @Z40LB01*/
*                 DO;               /* GOOD STATUS PROCESS   @Z40LB01*/
*                                                                  2540
         B     @RC02530                                            2540
@RF02530 DS    0H                                                  2541
*                   /*************************************************/
*                   /*                                               */
*                   /* DASD STATUS                           @Z40LB01*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  2541
*                   IF STSTAG(STATI)=BONE×STREAL(STATI)=BONE THEN/*
*                                                            @OZ30157*/
         LH    @04,STATI                                           2541
         MH    @04,@CH00060                                        2541
         LA    @15,44                                              2541
         AL    @15,WORKPTR                                         2541
         ST    @04,@TF00001                                        2541
         ALR   @04,@15                                             2541
         AL    @04,@CF03655                                        2541
         TM    STSTAG(@04),B'01100000'                             2541
         BZ    @RF02541                                            2541
*                     DO;           /* SSID ONLINE CODE      @Z40LB01*/
*                       DSTAT1='O'; /* ONLINE CONSTANT       @OZ30157*/
         L     @04,DTAPTR                                          2543
         MVI   DSTAT1(@04),C'O'                                    2543
*                       IF STBIND(STATI)=BONE THEN/*         @OZ30157*/
         AL    @15,@TF00001                                        2544
         AL    @15,@CF03655                                        2544
         TM    STBIND(@15),B'00000100'                             2544
         BNO   @RF02544                                            2544
*                         DSTAT25='/BND';/* BIND CONST       @OZ30157*/
         MVC   DSTAT25(4,@04),@CC03582                             2545
*                       ELSE        /* NOT BOUND             @Z40LB01*/
*                         IF STNEUT(STATI)=BONE THEN/*       @OZ30157*/
         B     @RC02544                                            2546
@RF02544 LH    @04,STATI                                           2546
         MH    @04,@CH00060                                        2546
         L     @15,WORKPTR                                         2546
         ALR   @15,@04                                             2546
         TM    STNEUT+41(@15),B'00000010'                          2546
         BNO   @RF02546                                            2546
*                           DSTAT25='/SUU';/* UNUSABLE       @OZ30157*/
         L     @04,DTAPTR                                          2547
         MVC   DSTAT25(4,@04),@CC03583                             2547
*                     END;          /* END ONLINE CODE       @Z40LB01*/
*                   ELSE            /* CHECK FOR OFFPEND STATUS    2549
*                                                            @ZD00005*/
*                     IF CONFGMSK(K)=(SDGRDY(I)&CONFGMSK(K))/*     2549
*                                                            @Z40LB01*/
*                       THEN        /*                       @Z40LB01*/
         B     @RC02541                                            2549
@RF02541 LH    @04,K                                               2549
         L     @15,@CA01312                                        2549
         LH    @14,I                                               2549
         L     @03,@CA01293                                        2549
         L     @03,MSGPTR-MSGPTR(,@03)                             2549
         ALR   @03,@14                                             2549
         MVC   @TS00001(1),SDGRDY+1(@03)                           2549
         ST    @04,@TF00001                                        2549
         ALR   @04,@15                                             2549
         BCTR  @04,0                                               2549
         NC    @TS00001(1),CONFGMSK-CONFGMSK(@04)                  2549
         AL    @15,@TF00001                                        2549
         BCTR  @15,0                                               2549
         CLC   CONFGMSK-CONFGMSK(1,@15),@TS00001                   2549
         BNE   @RF02549                                            2549
*                       DO;         /* MARK OFFPEND STATUS   @ZD00005*/
*                         DSTAT='OFFPEND';/* OFFLINE PENDING @ZD00005*/
         L     @04,DTAPTR                                          2551
         MVC   DSTAT(7,@04),@CC03584                               2551
*                       END;        /* END OFFPEND STATUS    @ZD00005*/
*                     ELSE          /* MARK OFFLINE STATUS   @Z40LB01*/
*                       DSTAT='OFFLINE';/* SET FIELD OFFLINE @Z40LB01*/
*                                                                  2553
         B     @RC02549                                            2553
@RF02549 L     @04,DTAPTR                                          2553
         MVC   DSTAT(7,@04),@CC02856                               2553
*                   /*************************************************/
*                   /*                                               */
*                   /* DASD USE                              @ZD00005*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  2554
*                   IF STSTAG(STATI)=BONE THEN/* IF STAGING        2554
*                                      DRIVE@OZ30157                 */
@RC02549 DS    0H                                                  2554
@RC02541 LH    @04,STATI                                           2554
         MH    @04,@CH00060                                        2554
         L     @15,WORKPTR                                         2554
         ALR   @15,@04                                             2554
         TM    STSTAG+41(@15),B'01000000'                          2554
         BNO   @RF02554                                            2554
*                     DUSE14='STAG';/* STAGE CONST           @OZ30157*/
         L     @04,DTAPTR                                          2555
         MVC   DUSE14(4,@04),@CC03585                              2555
*                   IF DSSID=PRITP THEN/* IS IT PRI TBL      @Z40LB01*/
@RF02554 L     @04,DTAPTR                                          2556
         CLC   DSSID(3,@04),PRITP                                  2556
         BNE   @RF02556                                            2556
*                     DUSE58='/PRI';/* FILL PRIMARY          @OZ30157*/
         MVC   DUSE58(4,@04),@CC03586                              2557
*                   ELSE            /* NOT PRIMARY           @Z40LB01*/
*                     IF DSSID=SECTP THEN/* IS IT SEC TBL    @Z40LB01*/
         B     @RC02556                                            2558
@RF02556 L     @04,DTAPTR                                          2558
         CLC   DSSID(3,@04),SECTP                                  2558
         BNE   @RF02558                                            2558
*                       DUSE58='/SEC';/* FILL SEC            @OZ30157*/
         MVC   DUSE58(4,@04),@CC03587                              2559
*                     ELSE          /* NOT PRI OR SEC        @Z40LB01*/
*                       IF CONFGMSK(5)=/*                    @Z40LB01*/
*                           (STATFLG(STATI)&CONFGMSK(5))/*   @Z40LB01*/
*                         THEN      /* ALT TBL PACK ?        @Z40LB01*/
         B     @RC02558                                            2560
@RF02558 L     @04,@CA01312                                        2560
         LH    @15,STATI                                           2560
         MH    @15,@CH00060                                        2560
         L     @14,WORKPTR                                         2560
         ALR   @14,@15                                             2560
         MVC   @TS00001(1),STATFLG+41(@14)                         2560
         NC    @TS00001(1),CONFGMSK-CONFGMSK+4(@04)                2560
         CLC   CONFGMSK-CONFGMSK+4(1,@04),@TS00001                 2560
         BNE   @RF02560                                            2560
*                         DUSE58='/ALT';/* ALT CONST         @OZ30157*/
*                                                                  2561
         L     @04,DTAPTR                                          2561
         MVC   DUSE58(4,@04),@CC03588                              2561
*                   /*************************************************/
*                   /*                                               */
*                   /* UNIQUE STAGING USE                    @Z40LB01*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  2562
*                   IF STCONV(STATI)=BONE THEN/* IF CONVERTIBLE    2562
*                                                            @OZ30157*/
@RF02560 DS    0H                                                  2562
@RC02558 DS    0H                                                  2562
@RC02556 LH    @04,STATI                                           2562
         MH    @04,@CH00060                                        2562
         L     @15,WORKPTR                                         2562
         ALR   @15,@04                                             2562
         TM    STCONV+41(@15),B'00000001'                          2562
         BNO   @RF02562                                            2562
*                     DUSE58='/CNV';/* CONVERTABLE           @OZ30157*/
         L     @04,DTAPTR                                          2563
         MVC   DUSE58(4,@04),@CC03589                              2563
*                   IF STREAL(STATI)=BONE THEN/* IF REAL DRIVE     2564
*                                                            @OZ30157*/
@RF02562 LH    @04,STATI                                           2564
         MH    @04,@CH00060                                        2564
         L     @15,WORKPTR                                         2564
         ALR   @15,@04                                             2564
         TM    STREAL+41(@15),B'00100000'                          2564
         BNO   @RF02564                                            2564
*                     DUSE14='REAL';/* REAL CONST            @OZ30157*/
         L     @04,DTAPTR                                          2565
         MVC   DUSE14(4,@04),@CC03590                              2565
*                   IF STNEUT(STATI)=BONE THEN/* IF NEUTRAL STAT   2566
*                                                            @OZ30157*/
@RF02564 LH    @04,STATI                                           2566
         MH    @04,@CH00060                                        2566
         L     @15,WORKPTR                                         2566
         ALR   @15,@04                                             2566
         TM    STNEUT+41(@15),B'00000010'                          2566
         BNO   @RF02566                                            2566
*                     DUSE14='NEUT';/* NEUTRAL CONST         @OZ30157*/
         L     @04,DTAPTR                                          2567
         MVC   DUSE14(4,@04),@CC03591                              2567
*                   IF STCUA1(STATI)=BONE×STCUA2(STATI)=BONE THEN/*
*                                                            @OZ30157*/
@RF02566 LH    @04,STATI                                           2568
         MH    @04,@CH00060                                        2568
         L     @15,WORKPTR                                         2568
         ALR   @15,@04                                             2568
         TM    STCUA1+41(@15),B'11000000'                          2568
         BZ    @RF02568                                            2568
*                     DUSE14='TEST';/* TEST CONSTANT         @OZ30157*/
*                                                                  2569
         L     @04,DTAPTR                                          2569
         MVC   DUSE14(4,@04),@CC03592                              2569
*                   /*************************************************/
*                   /*                                               */
*                   /* DASD CONFIG                           @Z40LB01*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  2570
*                   STCUA(STATI)=   /*                       @Z40LB01*/
*                       (STCUA(STATI)&HEX1F);/* CLEAR BITS   @Z40LB01*/
@RF02568 LH    @04,STATI                                           2570
         MH    @04,@CH00060                                        2570
         LA    @15,44                                              2570
         AL    @15,WORKPTR                                         2570
         ST    @04,@TF00001                                        2570
         ALR   @04,@15                                             2570
         BCTR  @04,0                                               2570
         NI    STCUA-2(@04),X'1F'                                  2570
*                   INTER=''B;      /* CLEAR CONV AREA       @Z40LB01*/
         L     @04,@CA01302                                        2571
         XC    INTER-INTER(4,@04),INTER-INTER(@04)                 2571
*                   BYTE4C=STCUA(STATI);/* MOVE IN CUA DATA  @Z40LB01*/
         AL    @15,@TF00001                                        2572
         BCTR  @15,0                                               2572
         MVC   BYTE4C-INTER(1,@04),STCUA-2(@15)                    2572
*                   CALL ICBMSG82;  /* CALL CONV SUB         @Z40LB01*/
         BAL   @14,ICBMSG82                                        2573
*                   DCONF12=BYTES34;/* FILL CUR RUA FLD      @OZ30157*/
         L     @04,DTAPTR                                          2574
         L     @15,@CA01302                                        2574
         MVC   DCONF12(2,@04),BYTES34-INTER(@15)                   2574
*                   IF STATOUA1(STATI)=BONE THEN/*           @OZ30157*/
         LH    @04,STATI                                           2575
         MH    @04,@CH00060                                        2575
         LA    @14,44                                              2575
         AL    @14,WORKPTR                                         2575
         ST    @04,@TF00001                                        2575
         ALR   @04,@14                                             2575
         BCTR  @04,0                                               2575
         BCTR  @04,0                                               2575
         TM    STATOUA1-1(@04),B'10000000'                         2575
         BNO   @RF02575                                            2575
*                     DO;           /* ORIG RUA CODE         @Z40LB01*/
*                       STATOUA(STATI)=/*                    @Z40LB01*/
*                           (STATOUA(STATI)&HEX1F);/* CLR BITS     2577
*                                                            @Z40LB01*/
         LR    @04,@14                                             2577
         AL    @04,@TF00001                                        2577
         BCTR  @04,0                                               2577
         BCTR  @04,0                                               2577
         NI    STATOUA-1(@04),X'1F'                                2577
*                       INTER=''B;  /* CLEAR CONV AREA       @Z40LB01*/
         XC    INTER-INTER(4,@15),INTER-INTER(@15)                 2578
*                       BYTE4C=STATOUA(STATI);/* MOVE IN OUA DATA  2579
*                                                            @Z40LB01*/
         AL    @14,@TF00001                                        2579
         BCTR  @14,0                                               2579
         BCTR  @14,0                                               2579
         MVC   BYTE4C-INTER(1,@15),STATOUA-1(@14)                  2579
*                       CALL ICBMSG82;/* CALL CONV SUB       @Z40LB01*/
         BAL   @14,ICBMSG82                                        2580
*                       DCONF45=BYTES34;/* FILL ORIG RUA     @OZ30157*/
         L     @04,DTAPTR                                          2581
         L     @15,@CA01302                                        2581
         MVC   DCONF45(2,@04),BYTES34-INTER(@15)                   2581
*                     END;          /* END ORIG RUA CODE     @Z40LB01*/
*                 END;              /* GOOD PAB READ STATUS CODE   2583
*                                                            @Z40LB01*/
*                                                                  2583
@RF02575 DS    0H                                                  2584
*               /*****************************************************/
*               /*                                                   */
*               /* ONE MESSAGE LINE CONTAINS THE STATUS      @Z40LB01*/
*               /* OF TWO SSIDS. SWITCH FIELD (FLIPSW)       @Z40LB01*/
*               /* IS USED TO KEEP TRACK OF THIS SO WHEN     @Z40LB01*/
*               /* THE TWO SSIDS HAVE BEEN PUT IN THE        @Z40LB01*/
*               /* LINE, THE LINE CAN BE MOVED TO THE        @Z40LB01*/
*               /* ML WTO BUFFER AREA. FLIPSW = 0 FOR        @Z40LB01*/
*               /* FIRST SSID AND FLIPSW = 1 FOR 2ND         @Z40LB01*/
*               /* SSID STATUS.                              @Z40LB01*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  2584
*               IF FLIPSW=BONE THEN /*                       @Z40LB01*/
*                                                                  2584
@RC02530 TM    FLIPSW,B'00010000'                                  2584
         BNO   @RF02584                                            2584
*                 /***************************************************/
*                 /*                                                 */
*                 /* FILL PART TWO MESSAGE FIELDS            @Z40LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  2585
*                 CALL MSG56D;      /*                       @Z40LB01*/
         BAL   @14,MSG56D                                          2585
*               ELSE                /* FIRST HALF MESSAGE LINE     2586
*                                                            @Z40LB01*/
*                                                                  2586
*                 /***************************************************/
*                 /*                                                 */
*                 /* FILL PART ONE MESSAGE FIELDS            @Z40LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  2586
*                 FLIPSW=BONE;      /* SET SWITCH FOR SEC HALF     2586
*                                                            @Z40LB01*/
         B     @RC02584                                            2586
@RF02584 OI    FLIPSW,B'00010000'                                  2586
*             END;                  /* END MESSAGE BUILD     @Z40LB01*/
@RC02584 DS    0H                                                  2588
*ENDSSID:                           /* END OF THE SSID SCAN DO LOOP
*                                                            @Z40LB01*/
*         END;                      /* END SSID SCAN         @Z40LB01*/
@RF02522 DS    0H                                                  2588
ENDSSID  LA    @04,1                                               2588
         AH    @04,K                                               2588
         STH   @04,K                                               2588
         CH    @04,@CH00036                                        2588
         BNH   @DL02521                                            2588
*ENDVALID:                          /* END OF THE VALID SDG REQUEST
*                                      CODE                  @Z40LB01*/
*       END;                        /* END VALID REQUEST CODE FOR SDG
*                                                            @Z40LB01*/
ENDVALID DS    0H                                                  2590
*ENDSDG:                            /* END OF THE SDG SCAN DO LOOP 2590
*                                                            @Z40LB01*/
*   END;                            /* END SDG SCAN          @Z40LB01*/
@RF02513 DS    0H                                                  2590
ENDSDG   LA    @04,1                                               2590
         AH    @04,I                                               2590
         STH   @04,I                                               2590
         CH    @04,@CH01339                                        2590
         BNH   @DL02512                                            2590
*   RFY                                                            2591
*     R14 RSTD;                     /* RESTRICT REG 14       @Z40LB01*/
*   R14=SAV14SDG;                   /* RESTORE RETURN REG    @Z40LB01*/
         L     R14,SAV14SDG                                        2592
*   RFY                                                            2593
*     R14 UNRSTD;                   /* FREE REG 14           @Z40LB01*/
*   RETURN;                         /* RETURN ICBMSG56       @Z40LB01*/
@EL00024 DS    0H                                                  2594
@EF00024 DS    0H                                                  2594
@ER00024 BR    @14                                                 2594
*   END SDGMSGS;                    /* END SUB ROUTINE       @Z40LB01*/
*   END ICBMSG56                    /*                       @Z40LB01*/
*                                                                  2596
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEZCWB  )                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*/*%INCLUDE SYSLIB  (IEZVVICB)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*                                                                  2596
*       ;                                                          2596
@DATA    DS    0H
@CH00226 DC    H'0'
@CH00060 DC    H'3'
@CH00038 DC    H'6'
@CH00036 DC    H'8'
@CH00034 DC    H'10'
@CH00033 DC    H'11'
@CH00032 DC    H'12'
@CH01227 DC    H'16'
@CH00049 DC    H'24'
@CH01339 DC    H'28'
@CH01342 DC    H'36'
@CH01344 DC    H'40'
@CH01372 DC    H'44'
@CH03605 DC    H'76'
@CH00866 DC    H'256'
@CH01353 DC    H'296'
@CH01355 DC    H'320'
@CH03055 DC    H'388'
@CH03211 DC    H'1512'
@CH03604 DC    H'1744'
@CH03110 DC    H'2047'
@CH03603 DC    H'-688'
@SM03659 MVC   MVREC(0,@14),MVSRC(@02)
@SM03663 MVC   0(0,@02),CURQUAL(@03)
         DS    0F
@SA00001 DS    18F
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00002 DC    F'0'
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
         DS    0F
@CF00047 DC    F'1'
@CH00047 EQU   @CF00047+2
@CF00056 DC    F'2'
@CH00056 EQU   @CF00056+2
@CF00045 DC    F'4'
@CH00045 EQU   @CF00045+2
@CF00291 DC    F'32'
@CF01346 DC    F'64'
@CH01346 EQU   @CF01346+2
@CF03298 DC    F'100'
@CF03658 DC    F'16777215'
@CF03654 DC    F'-8'
@CF03609 DC    F'-4'
@CF03655 DC    F'-3'
@CF03336 DC    XL4'00070100'
@CA00041 DC    A(CWBPTR)
@CA00927 DC    A(UCBPTR)
@CA01293 DC    A(MSGPTR)
@CA01294 DC    A(BITSW)
@CA01302 DC    A(INTER)
@CA01311 DC    A(CMDQUE)
@CA01312 DC    A(CONFGMSK)
@CA01313 DC    A(RECOVER)
@CA01321 DC    A(SAVR1446)
@CA01322 DC    A(SAVR1482)
@CA01310 DC    A(CMDPTR)
         DS    0D
WPLPTR   DS    A
VVIPTR   DS    A
WORKPTR  DC    AL4(WORK)
SDGPTR   DS    A
DRCPTR   DS    A
CPUPTR   DS    A
CPHPTR   DS    A
CPDPTR   DS    A
VUAPTR   DS    A
STPTR    DS    A
CPHEND   DS    A
SDGEND   DS    A
DRCEND   DS    A
QCBPTR   DS    A
TABPTR   DS    A
TABPTR1  DS    A
TABPTR2  DS    A
QCTPTR   DS    A
CONDPTR  DS    A
PWCS7X   DS    A
PABPTR   DS    A
PTHPTR   DS    A
VERPTR   DS    A
CELPTR   DS    A
DTAPTR   DS    A
QCTEND   DS    A
WPLPSAVE DS    A
GMSTT    DC    AL4(GMTAB)
GMCUR    DC    A(0)
GMEND    DC    AL4(GMTAB)
GMPTR    DS    A
SDGLEN   DC    AL4(16)
DRCLEN   DC    AL4(30)
LVUPTR   DS    A
CONSOL   DC    F'0'
MS56AL14 DS    F
MS56MS14 DS    F
MS56PA14 DS    F
CONXPTR  DS    A
PWCS0F   DS    A
PKPTR    DS    A
LASTENT  DS    A
ENDPTR   DS    A
TESTVAL  DC    F'32768'
MS56QC14 DS    F
QCBLST   DS    A
QCBEPTR  DS    A
MHPTR    DS    A
MHSAPTR  DS    A
MS56TR14 DS    F
QWPTR    DS    A
MVPTR    DS    A
MAPPTR   DS    A
QCNT     DS    F
MS56GQ14 DS    F
QBCHRF   DS    FL4
         ORG   QBCHRF
@NM00153 DS    FL1
QBPCYL   DS    FL1
QBPHD    DS    FL1
QBPREC   DS    FL1
         ORG   QBCHRF+4
QPEND    DS    A
MSG56B14 DS    F
MS56AA14 DS    F
MSG56A14 DS    F
MS56CA14 DS    F
MSG56C14 DS    F
MSG56D14 DS    F
MSG56E14 DS    F
MSG56F14 DS    F
PARMPTR  DS    A
SVPTR    DS    A
MUEND    DS    A
MSG56G14 DS    F
MSG56V14 DS    F
SDGMPTR  DS    A
MSG56H14 DS    F
MSG56I14 DS    F
QCMPTR   DS    A
MSG56J14 DS    F
MS56QU14 DS    F
QUINPTR  DS    A
QUSCPTR  DS    A
QUNDPTR  DS    A
QUALX    DS    F
QUALY    DS    F
SAV14SDG DS    F
CPDLEN   DC    AL2(28)
CWBIX    DS    H
I        DS    H
I2       DS    H
J        DS    H
K        DS    H
K1       DS    H
K2       DS    H
K3       DS    H
IEND     DS    H
RETC     DS    H
SDGNO    DS    H
STARTI   DS    H
ENDI     DS    H
MSGCNT   DS    H
STATI    DS    H
SATST    DS    H
TCYLCNT  DC    H'608'
THDCNT   DC    H'32'
TRNXCC   DS    H
TRNXHH   DS    H
TRNXRR   DS    H
TRCRECS  DS    H
TRCTOT   DS    H
QENT     DS    H
QI       DS    H
QMI      DS    H
MFB      DS    H
MFE      DS    H
M2B      DS    H
M2E      DS    H
QMCT     DS    H
MUONDSP  DC    AL2(31)
MUOFDSP  DC    AL2(29)
MUSUDSP  DC    AL2(25)
MUDSP    DS    H
MSGIND   DS    FL1
CURSTAT  DS    FL1
PRVSTAT  DS    FL1
         DS    0D
@TS00001 DS    CL8
@CC03486 DC    C'NO PATHS OFFLINE'
@CC03484 DC    C'NO PATHS ONLINE'
@CC02699 DC    C'             '
@CC02912 DC    C'REASON CODE '
@CC02909 DC    C'NOT INIT '
@CC02908 DC    C'UNUSABLE'
@CC02919 DC    C'DISABLED'
@CC02921 DC    C'ENABLED '
@CC03294 DC    C'ACTIVE  '
@CC03296 DC    C'INACTIVE'
@CC03581 DC    C'********'
@CC02856 DC    C'OFFLINE'
@CC02906 DC    C'O/     '
@CC03511 DC    C'/O-UNAV'
@CC03512 DC    C'/O     '
@CC03584 DC    C'OFFPEND'
@CC01404 EQU   @CC02699
@CC02850 DC    C'/SUU  '
@CC02905 DC    C'ALTMSC'
@CC02911 DC    C'USABLE'
@CC03440 DC    C'/OFF  '
@CC03441 EQU   @CC03512
@CC03446 DC    C'/O-SUU'
@CC02855 DC    C' */* '
@CC02907 DC    C'READY'
@CC03439 EQU   @CC02699
@CC01402 DC    C'0000'
@CC02848 DC    C'MSF-'
@CC02858 DC    C'DRD-'
@CC02859 DC    C'DRC-'
@CC02860 DC    C'SA  '
@CC03373 DC    C'NONE'
@CC03435 DC    C'/   '
@CC03436 DC    C'/I  '
@CC03442 DC    C'-SUU'
@CC03482 EQU   @CC03440
@CC03582 DC    C'/BND'
@CC03583 EQU   @CC02850
@CC03585 DC    C'STAG'
@CC03586 DC    C'/PRI'
@CC03587 DC    C'/SEC'
@CC03588 DC    C'/ALT'
@CC03589 DC    C'/CNV'
@CC03590 DC    C'REAL'
@CC03591 DC    C'NEUT'
@CC03592 DC    C'TEST'
@CC01468 DC    C'800'
@CC01484 DC    C'400'
@CC01500 EQU   @CC01402
@CC02854 DC    C'/1 '
@CC03112 EQU   @CC02699
@CC03116 DC    C'20X'
@CC03117 DC    C'21X'
@CC03216 DC    C'00X'
@CC03217 DC    C'4XX'
@CC03218 DC    C'2XX'
@CC03219 DC    C'1XX'
@CC03574 DC    C'SD-'
@CC02853 DC    C' 2'
@CC02904 EQU   @CC03486
@CC03438 DC    C'-A'
@CC03483 EQU   @CC03511
@CB03443 DC    X'0000'
NULLS    DC    X'000000000000'
         DS    CL2
WORK     DS    CL2000
QBTAB    DS    CL268
         ORG   QBTAB
QBCNT    DS    FL4
QBENT    DS    CL44
         ORG   QBENT+0
QBECNT   DS    FL1
QBMAP    DS    AL3
QBINDX   DS    FL1
QBORD    DS    CL1
QBPARM   DS    CL4
         ORG   QBPARM+0
QBSECT   DS    CL1
         ORG   QBSECT+0
QBTID    DS    CL1
         ORG   QBPARM+1
QBFLAGS  DS    CL1
QBVAR1   DS    CL1
QBVAR2   DS    CL1
         ORG   QBENT+10
QBREC    DS    FL1
@NM00017 DS    CL1
QBRSV    DC    XL32'0'
         ORG   QBTAB+268
QBTBL    DS    CL156
         ORG   QBTBL
QBCIX    DS    CL12
         ORG   QBCIX
QBCIECNT DC    AL1(1)
QBCIMAD  DC    AL3(QMCIX)
QBCIINDX DC    AL1(1)
QBCIORD  DC    X'05'
QBCIPRM  DS    CL4
         ORG   QBCIPRM
QBCITID  DC    X'70'
QBCIFLGS DC    X'01'
QBCIVAR1 DC    XL1'0'
QBCIVAR2 DC    XL1'0'
         ORG   QBCIX+10
QBCIRSV  DC    XL2'0'
         ORG   QBTBL+12
QBW0F    DS    CL12
         ORG   QBW0F
QB0FECNT DC    AL1(1)
QB0FMAD  DC    AL3(QMW0F)
QB0FINDX DC    AL1(2)
QB0FORD  DC    X'0B'
QB0FPRM  DS    CL4
         ORG   QB0FPRM
QB0FSEC  DC    X'0F'
QB0FFLGS DC    X'00'
QB0FVAR1 DC    XL1'0'
QB0FVAR2 DC    XL1'0'
         ORG   QBW0F+10
QB0FRSV  DC    XL2'0'
         ORG   QBTBL+24
QBCTB    DS    CL12
         ORG   QBCTB
QBCTECNT DC    AL1(4)
QBCTMAD  DC    AL3(QMCTB)
QBCTINDX DC    AL1(1)
QBCTORD  DC    X'05'
QBCTPRM  DS    CL4
         ORG   QBCTPRM
QBCTTID  DC    X'70'
QBCTFLGS DC    X'01'
QBCTVAR1 DC    X'00'
QBCTVAR2 DC    X'FF'
         ORG   QBCTB+10
QBCTRSV  DC    XL2'0'
         ORG   QBTBL+36
QBW7C    DS    CL12
         ORG   QBW7C
QB7CECNT DC    AL1(4)
QB7CMAD  DC    AL3(QMW7C)
QB7CINDX DC    AL1(1)
QB7CORD  DC    X'0B'
QB7CPRM  DS    CL4
         ORG   QB7CPRM
QB7CSEC  DC    X'7C'
QB7CFLGS DC    X'00'
QB7CVAR1 DC    XL1'0'
QB7CVAR2 DC    XL1'0'
         ORG   QBW7C+10
QB7CRSV  DC    XL2'0'
         ORG   QBTBL+48
QBW6A    DS    CL12
         ORG   QBW6A
QB6AECNT DC    AL1(2)
QB6AMAD  DC    AL3(QMW6A)
QB6AINDX DC    AL1(1)
QB6AORD  DC    X'0B'
QB6APRM  DS    CL4
         ORG   QB6APRM
QB6ASEC  DC    X'6A'
QB6AFLGS DC    X'00'
QB6AVAR1 DC    XL1'0'
QB6AVAR2 DC    XL1'0'
         ORG   QBW6A+10
QB6ARSV  DC    XL2'0'
         ORG   QBTBL+60
QBW04    DS    CL12
         ORG   QBW04
QB04ECNT DC    AL1(1)
QB04MAD  DC    AL3(QMW04)
QB04INDX DC    AL1(1)
QB04ORD  DC    X'0B'
QB04PRM  DS    CL4
         ORG   QB04PRM
QB04SEC  DC    X'04'
QB04FLGS DC    X'01'
QB04VAR1 DC    XL1'0'
QB04VAR2 DC    XL1'0'
         ORG   QBW04+10
QB04RSV  DC    XL2'0'
         ORG   QBTBL+72
QBW4C    DS    CL12
         ORG   QBW4C
QB4CECNT DC    AL1(1)
QB4CMAD  DC    AL3(QMW4C)
QB4CINDX DC    AL1(2)
QB4CORD  DC    X'0B'
QB4CPRM  DS    CL4
         ORG   QB4CPRM
QB4CSEC  DC    X'4C'
QB4CFLGS DC    X'01'
QB4CVAR1 DC    XL1'0'
QB4CVAR2 DC    XL1'0'
         ORG   QBW4C+10
QB4CRSV  DC    XL2'0'
         ORG   QBTBL+84
QBW57    DS    CL12
         ORG   QBW57
QB57ECNT DC    AL1(1)
QB57MAD  DC    AL3(QMW57)
QB57INDX DC    AL1(1)
QB57ORD  DC    X'0B'
QB57PRM  DS    CL4
         ORG   QB57PRM
QB57SEC  DC    X'57'
QB57FLGS DC    X'00'
QB57VAR1 DC    XL1'0'
QB57VAR2 DC    XL1'0'
         ORG   QBW57+10
QB57RSV  DC    XL2'0'
         ORG   QBTBL+96
QBVER1   DS    CL12
         ORG   QBVER1
QBV1ECNT DC    AL1(1)
QBV1MAD  DC    AL3(QMVE1)
QBV1INDX DC    AL1(2)
QBV1ORD  DC    X'05'
QBV1PRM  DS    CL4
         ORG   QBV1PRM
QBV1TID  DC    X'F0'
QBV1FLGS DC    X'11'
QBV1VAR1 DC    XL1'0'
QBV1VAR2 DC    XL1'0'
         ORG   QBVER1+10
QBV1REC  DC    AL1(1)
@NM00018 DC    XL1'0'
         ORG   QBTBL+108
QBVER2   DS    CL12
         ORG   QBVER2
QBV2ECNT DC    AL1(1)
QBV2MAD  DC    AL3(QMVE2)
QBV2INDX DC    AL1(1)
QBV2ORD  DC    X'05'
QBV2PRM  DS    CL4
         ORG   QBV2PRM
QBV2TID  DC    X'F0'
QBV2FLGS DC    X'11'
QBV2VAR1 DC    XL1'0'
QBV2VAR2 DC    XL1'0'
         ORG   QBVER2+10
QBV2REC  DC    AL1(2)
@NM00019 DC    XL1'0'
         ORG   QBTBL+120
QBVER3   DS    CL12
         ORG   QBVER3
QBV3ECNT DC    AL1(2)
QBV3MAD  DC    AL3(QMVE3)
QBV3INDX DC    AL1(2)
QBV3ORD  DC    X'05'
QBV3PRM  DS    CL4
         ORG   QBV3PRM
QBV3TID  DC    X'F0'
QBV3FLGS DC    X'11'
QBV3VAR1 DC    XL1'0'
QBV3VAR2 DC    XL1'0'
         ORG   QBVER3+10
QBV3REC  DC    AL1(3)
@NM00020 DC    XL1'0'
         ORG   QBTBL+132
QBDSQ    DS    CL12
         ORG   QBDSQ
QBDSECNT DC    AL1(1)
QBDSMAD  DC    AL3(QMDSQ)
QBDSINDX DC    AL1(2)
QBDSORD  DC    X'05'
QBDSPRM  DS    CL4
         ORG   QBDSPRM
QBDSTID  DC    X'C0'
QBDSFLGS DC    X'01'
QBDSVAR1 DC    X'00'
QBDSVAR2 DC    X'FF'
         ORG   QBDSQ+10
QBDSRSV  DC    XL2'0'
         ORG   QBTBL+144
QBCEL    DS    CL12
         ORG   QBCEL
QBCEECNT DC    AL1(1)
QBCEMAD  DC    AL3(QMCEL)
QBCEINDX DC    AL1(1)
QBCEORD  DC    X'07'
QBCEPRM  DS    CL4
         ORG   QBCEPRM
QBCETID  DC    X'EA'
QBCEFLGS DC    X'00'
QBCEVAR1 DC    X'00'
QBCEVAR2 DC    X'00'
         ORG   QBCEL+10
QBCERSV  DC    XL2'0'
         ORG   QBTBL+156
QMCIX    DS    CL6
         ORG   QMCIX
@NM00021 DC    H'1'
@NM00022 DC    H'0'
         DC    H'256'
         ORG   QMCIX+6
QMW0F    DS    CL26
         ORG   QMW0F
@NM00023 DC    H'6'
@NM00024 DC    H'1'
         DC    H'1'
         DC    H'3'
         DC    H'1'
         DC    H'50'
         DC    H'1'
         DC    H'54'
         DC    H'1'
         DC    H'58'
         DC    H'1'
         DC    H'62'
         DC    H'1'
         ORG   QMW0F+26
QMCTB    DS    CL6
         ORG   QMCTB
@NM00025 DC    H'1'
         DC    H'0'
         DC    H'256'
         ORG   QMCTB+6
QMW7C    DS    CL10
         ORG   QMW7C
@NM00026 DC    H'2'
@NM00027 DC    H'96'
         DC    H'64'
         DC    H'208'
         DC    H'16'
         ORG   QMW7C+10
QMW6A    DS    CL6
         ORG   QMW6A
@NM00028 DC    H'1'
@NM00029 DC    H'0'
         DC    H'256'
         ORG   QMW6A+6
QMW04    DS    CL2
         ORG   QMW04
@NM00030 DC    H'0'
         ORG   QMW04+2
QMW4C    DS    CL6
         ORG   QMW4C
@NM00031 DC    H'1'
@NM00032 DC    H'0'
         DC    H'1'
         ORG   QMW4C+6
QMW57    DS    CL6
         ORG   QMW57
@NM00033 DC    H'1'
@NM00034 DC    H'0'
         DC    H'16'
         ORG   QMW57+6
QMVE1    DS    CL10
         ORG   QMVE1
@NM00035 DC    H'2'
@NM00036 DC    H'80'
         DC    H'64'
         DC    H'220'
         DC    H'16'
         ORG   QMVE1+10
QMVE2    DS    CL6
         ORG   QMVE2
@NM00037 DC    H'1'
@NM00038 DC    H'96'
         DC    H'16'
         ORG   QMVE2+6
QMVE3    DS    CL6
         ORG   QMVE3
@NM00039 DC    H'1'
@NM00040 DC    H'20'
         DC    H'16'
         ORG   QMVE3+6
QMDSQ    DS    CL6
         ORG   QMDSQ
@NM00041 DC    H'1'
@NM00042 DC    H'0'
         DC    H'256'
         ORG   QMDSQ+6
QMCEL    DS    CL6
         ORG   QMCEL
@NM00043 DC    H'1'
@NM00044 DC    H'34'
         DC    H'1'
         ORG   QMCEL+6
TABPARM  DS    CL20
         ORG   TABPARM
TABID    DC    X'10'
TABRD    DC    X'01'
TABSECT  DC    X'08'
TABSDG   DS    FL1
TABFIL   DC    XL16'0'
         ORG   TABPARM+20
MAP      DC    XL32'0'
CMPSSID1 DS    CL3
CMPSSID2 DS    CL3
SAVTYP   DS    CL5
         ORG   SAVTYP
SAVTYP13 DS    CL3
SAVTYP45 DS    CL2
         ORG   SAVTYP+5
PRITP    DS    CL3
SECTP    DS    CL3
CONE     DC    X'01'
FLAGS    DS    BL1
         ORG   FLAGS
ERRFLG   DS    BL1
VALSSID  EQU   FLAGS+0
VALFLG   EQU   FLAGS+0
FLIPSW   EQU   FLAGS+0
VALCODE  EQU   FLAGS+0
ENDSW    EQU   FLAGS+0
NEWVUA   EQU   FLAGS+0
STORER   EQU   FLAGS+0
         ORG   FLAGS+1
REQFLG   DS    BL1
         ORG   REQFLG
SDGFLG   DS    BL1
MSFFLG   EQU   REQFLG+0
DRDFLG   EQU   REQFLG+0
DRCFLG   EQU   REQFLG+0
SAFLG    EQU   REQFLG+0
@NM00078 EQU   REQFLG+0
         ORG   REQFLG+1
         DS    CL2
TMESTAMP DS    CL4
         DS    CL4
TIMEFLD  DS    CL8
         ORG   TIMEFLD
@NM00079 DS    CL1
HH       DS    CL2
MM       DS    CL2
SS       DS    CL2
@NM00080 DS    CL1
         ORG   TIMEFLD+8
MSGTIME  DS    CL8
         ORG   MSGTIME
HRS      DS    CL2
PER1     DC    CL1'.'
MINS     DS    CL2
PER2     DC    CL1'.'
SECS     DS    CL2
         ORG   MSGTIME+8
REQBIT   DS    BL40
OFFMASK  DS    BL40
MSG01FIL DC    CL30'INSUFFICIENT STORAGE'
PTCHAREA DS    CL400
         ORG   PTCHAREA
@NM00088 DC    CL256'ICBMSG56 PATCH AREA'
         DC    CL144' '
         ORG   PTCHAREA+400
TRANS    DS    CL256
         ORG   TRANS
FILL1    DC    CL193' '
ALPHAS   DC    X'FAFBFCFDFEFF'
FILL2    DC    CL41' '
NUMBRS   DC    CL16'0123456789ABCDEF'
         ORG   TRANS+256
         DS    CL2
CURSTR   DS    CL12
         ORG   CURSTR
@NM00114 DS    BL1
ONLPTR   DS    AL3
@NM00115 DS    BL1
OFFPTR   DS    AL3
@NM00116 DS    BL1
SUUPTR   DS    AL3
         ORG   CURSTR+12
         DS    CL4
PTHWK    DS    CL12
         ORG   PTHWK
PCHAN    DS    FL4
         ORG   PCHAN
@NM00119 DS    CL3
PCHANCX  DS    CL1
         ORG   PCHANCX
BITWK1   DS    BL1
         ORG   PTHWK+4
PCNTL    DS    FL4
         ORG   PCNTL
@NM00120 DS    CL3
PCNTLCX  DS    CL1
         ORG   PCNTLCX
BITWK2   DS    BL1
         ORG   PTHWK+8
PUNIT    DS    FL4
         ORG   PUNIT
@NM00121 DS    CL1
PUNIT3   DS    CL3
         ORG   PUNIT3
@NM00122 DS    CL1
PUNITCY  DS    CL2
         ORG   PUNITCY
PUNITCX  DS    CL1
         ORG   PUNITCX
BITWK3   DS    BL1
         ORG   PTHWK+12
CURRCPUW DS    CL11
         ORG   CURRCPUW
CPXIDC   DS    CL6
CPXMODC1 DS    CL5
         ORG   CPXMODC1
CPXMODC  DS    CL4
         ORG   CURRCPUW+11
CURCPUP  DS    CL5
COMPAREA DS    CL6
         ORG   COMPAREA
CMPCPUX  DS    CL6
         ORG   CMPCPUX
CMPCPU   DS    CL5
         ORG   COMPAREA+6
VUA00    DC    X'000000'
VUA3F    DC    X'00030F'
LZYXCALC DS    CL8
         ORG   LZYXCALC
LCALC    DS    FL2
         ORG   LCALC
LCALCC   DS    CL2
         ORG   LCALCC
@NM00134 DS    CL1
LCALCC2  DS    CL1
         ORG   LCALCC2
@NM00135 DS    BL1
LCALCB7  EQU   LCALCC2+0
         ORG   LZYXCALC+2
ZCALC    DS    FL2
         ORG   ZCALC
ZCALCC   DS    CL2
         ORG   ZCALCC
@NM00136 DS    CL1
ZCALCC2  DS    CL1
         ORG   LZYXCALC+4
YCALC    DS    FL2
         ORG   YCALC
YCALCC   DS    CL2
         ORG   YCALCC
@NM00137 DS    CL1
YCALCC2  DS    CL1
         ORG   LZYXCALC+6
XCALC    DS    FL2
         ORG   XCALC
XCALCC   DS    CL2
         ORG   XCALCC
@NM00138 DS    CL1
XCALCC2  DS    CL1
         ORG   LZYXCALC+8
TRCCALC  DS    CL22
         ORG   TRCCALC
TRNXC    DS    FL2
TRNXH    DS    FL2
TRNXR    DS    FL2
TRCTREC  DS    FL2
TRCTHDS  DS    FL2
TRCTCYL  DS    FL2
TRCUREC  DS    FL2
TRCUHDS  DS    FL2
TRCUCYL  DS    FL2
TRCUSE   DS    FL2
TRCPCT   DS    FL2
         ORG   TRCCALC+22
TRCWORK  DS    CL3
         ORG   TRCWORK
TRCWORKA DS    CL1
TRCWORKB DS    CL2
         ORG   TRCWORK+3
CZEROS   DC    CL3'000'
QBPRMAR  DS    CL36
         ORG   QBPRMAR
QBPSUB   DS    CL4
         ORG   QBPSUB
QBPTID   DS    FL1
QBPTRD   DS    CL1
QBPTVAR1 DS    CL1
QBPTVAR2 DS    FL1
         ORG   QBPRMAR+4
QBPTFIL  DC    XL16'0'
QBPCHR   DS    CL4
@NM00154 DC    XL8'0'
QBPBUF   DS    AL4
         ORG   QBPRMAR+36
QBPORD   DS    CL1
MSTAT    DS    CL6
STDEF    DS    CL7
QCNMSG   DC    CL26'THERE ARE NO QCBS IN ERROR'
SBPOL    DS    CL1
SSIDS    DC    CL3'200'
         DC    CL3'201'
         DC    CL3'202'
         DC    CL3'203'
         DC    CL3'204'
         DC    CL3'205'
         DC    CL3'206'
         DC    CL3'207'
         DC    CL3'210'
         DC    CL3'211'
         DC    CL3'212'
         DC    CL3'213'
         DC    CL3'214'
         DC    CL3'215'
         DC    CL3'216'
         DC    CL3'217'
         DC    CL3'220'
         DC    CL3'221'
         DC    CL3'222'
         DC    CL3'223'
         DC    CL3'224'
         DC    CL3'225'
         DC    CL3'226'
         DC    CL3'227'
         DC    CL3'230'
         DC    CL3'231'
         DC    CL3'232'
         DC    CL3'233'
         DC    CL3'234'
         DC    CL3'235'
         DC    CL3'236'
         DC    CL3'237'
         DC    CL3'800'
         DC    CL3'810'
         DC    CL3'820'
         DC    CL3'830'
         DC    CL3'840'
         DC    CL3'850'
         DC    CL3'860'
         DC    CL3'870'
         DC    CL3'880'
         DC    CL3'890'
         DC    CL3'8A0'
         DC    CL3'8B0'
         DC    CL3'8C0'
         DC    CL3'8D0'
         DC    CL3'8E0'
         DC    CL3'8F0'
         DC    CL3'400'
         DC    CL3'401'
         DC    CL3'402'
         DC    CL3'403'
         DC    CL3'410'
         DC    CL3'411'
         DC    CL3'412'
         DC    CL3'413'
         DC    CL3'420'
         DC    CL3'421'
         DC    CL3'422'
         DC    CL3'423'
         DC    CL3'430'
         DC    CL3'431'
         DC    CL3'432'
         DC    CL3'433'
         DC    CL3'000'
         DC    CL3'001'
         DC    CL3'002'
         DC    CL3'003'
         DC    CL3'004'
         DC    CL3'005'
         DC    CL3'006'
         DC    CL3'007'
         DC    CL3'008'
         DC    CL3'009'
         DC    CL3'00A'
         DC    CL3'00B'
         DC    CL3'00C'
         DC    CL3'00D'
         DC    CL3'00E'
         DC    CL3'00F'
         DC    CL3'010'
         DC    CL3'011'
         DC    CL3'012'
         DC    CL3'013'
         DC    CL3'014'
         DC    CL3'015'
         DC    CL3'016'
         DC    CL3'017'
         DC    CL3'018'
         DC    CL3'019'
         DC    CL3'01A'
         DC    CL3'01B'
         DC    CL3'01C'
         DC    CL3'01D'
         DC    CL3'01E'
         DC    CL3'01F'
         DC    CL3'020'
         DC    CL3'021'
         DC    CL3'022'
         DC    CL3'023'
         DC    CL3'024'
         DC    CL3'025'
         DC    CL3'026'
         DC    CL3'027'
         DC    CL3'028'
         DC    CL3'029'
         DC    CL3'02A'
         DC    CL3'02B'
         DC    CL3'02C'
         DC    CL3'02D'
         DC    CL3'02E'
         DC    CL3'02F'
         DC    CL3'030'
         DC    CL3'031'
         DC    CL3'032'
         DC    CL3'033'
         DC    CL3'034'
         DC    CL3'035'
         DC    CL3'036'
         DC    CL3'037'
         DC    CL3'038'
         DC    CL3'039'
         DC    CL3'03A'
         DC    CL3'03B'
         DC    CL3'03C'
         DC    CL3'03D'
         DC    CL3'03E'
         DC    CL3'03F'
         DC    CL3'040'
         DC    CL3'041'
         DC    CL3'042'
         DC    CL3'043'
         DC    CL3'044'
         DC    CL3'045'
         DC    CL3'046'
         DC    CL3'047'
         DC    CL3'048'
         DC    CL3'049'
         DC    CL3'04A'
         DC    CL3'04B'
         DC    CL3'04C'
         DC    CL3'04D'
         DC    CL3'04E'
         DC    CL3'04F'
         DC    CL3'050'
         DC    CL3'051'
         DC    CL3'052'
         DC    CL3'053'
         DC    CL3'054'
         DC    CL3'055'
         DC    CL3'056'
         DC    CL3'057'
         DC    CL3'058'
         DC    CL3'059'
         DC    CL3'05A'
         DC    CL3'05B'
         DC    CL3'05C'
         DC    CL3'05D'
         DC    CL3'05E'
         DC    CL3'05F'
         DC    CL3'060'
         DC    CL3'061'
         DC    CL3'062'
         DC    CL3'063'
         DC    CL3'064'
         DC    CL3'065'
         DC    CL3'066'
         DC    CL3'067'
         DC    CL3'068'
         DC    CL3'069'
         DC    CL3'06A'
         DC    CL3'06B'
         DC    CL3'06C'
         DC    CL3'06D'
         DC    CL3'06E'
         DC    CL3'06F'
         DC    CL3'070'
         DC    CL3'071'
         DC    CL3'072'
         DC    CL3'073'
         DC    CL3'074'
         DC    CL3'075'
         DC    CL3'076'
         DC    CL3'077'
         DC    CL3'078'
         DC    CL3'079'
         DC    CL3'07A'
         DC    CL3'07B'
         DC    CL3'07C'
         DC    CL3'07D'
         DC    CL3'07E'
         DC    CL3'07F'
         DC    CL3'080'
         DC    CL3'081'
         DC    CL3'082'
         DC    CL3'083'
         DC    CL3'084'
         DC    CL3'085'
         DC    CL3'086'
         DC    CL3'087'
         DC    CL3'088'
         DC    CL3'089'
         DC    CL3'08A'
         DC    CL3'08B'
         DC    CL3'08C'
         DC    CL3'08D'
         DC    CL3'08E'
         DC    CL3'08F'
         DC    CL3'090'
         DC    CL3'091'
         DC    CL3'092'
         DC    CL3'093'
         DC    CL3'094'
         DC    CL3'095'
         DC    CL3'096'
         DC    CL3'097'
         DC    CL3'098'
         DC    CL3'099'
         DC    CL3'09A'
         DC    CL3'09B'
         DC    CL3'09C'
         DC    CL3'09D'
         DC    CL3'09E'
         DC    CL3'09F'
         DC    CL3'0A0'
         DC    CL3'0A1'
         DC    CL3'0A2'
         DC    CL3'0A3'
         DC    CL3'0A4'
         DC    CL3'0A5'
         DC    CL3'0A6'
         DC    CL3'0A7'
         DC    CL3'0A8'
         DC    CL3'0A9'
         DC    CL3'0AA'
         DC    CL3'0AB'
         DC    CL3'0AC'
         DC    CL3'0AD'
         DC    CL3'0AE'
         DC    CL3'0AF'
         DC    CL3'0B0'
         DC    CL3'0B1'
         DC    CL3'0B2'
         DC    CL3'0B3'
         DC    CL3'0B4'
         DC    CL3'0B5'
         DC    CL3'0B6'
         DC    CL3'0B7'
         DC    CL3'0B8'
         DC    CL3'0B9'
         DC    CL3'0BA'
         DC    CL3'0BB'
         DC    CL3'0BC'
         DC    CL3'0BD'
         DC    CL3'0BE'
         DC    CL3'0BF'
         DC    CL3'0C0'
         DC    CL3'0C1'
         DC    CL3'0C2'
         DC    CL3'0C3'
         DC    CL3'0C4'
         DC    CL3'0C5'
         DC    CL3'0C6'
         DC    CL3'0C7'
         DC    CL3'0C8'
         DC    CL3'0C9'
         DC    CL3'0CA'
         DC    CL3'0CB'
         DC    CL3'0CC'
         DC    CL3'0CD'
         DC    CL3'0CE'
         DC    CL3'0CF'
         DC    CL3'0D0'
         DC    CL3'0D1'
         DC    CL3'0D2'
         DC    CL3'0D3'
         DC    CL3'0D4'
         DC    CL3'0D5'
         DC    CL3'0D6'
         DC    CL3'0D7'
         DC    CL3'0D8'
         DC    CL3'0D9'
         DC    CL3'0DA'
         DC    CL3'0DB'
         DC    CL3'0DC'
         DC    CL3'0DD'
         DC    CL3'0DE'
         DC    CL3'0DF'
         DC    CL3'0E0'
         DC    CL3'0E1'
         DC    CL3'0E2'
         DC    CL3'0E3'
         DC    CL3'0E4'
         DC    CL3'0E5'
         DC    CL3'0E6'
         DC    CL3'0E7'
         DC    CL3'0E8'
         DC    CL3'0E9'
         DC    CL3'0EA'
         DC    CL3'0EB'
         DC    CL3'0EC'
         DC    CL3'0ED'
         DC    CL3'0EE'
         DC    CL3'0EF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'FFF'
         DC    CL3'102'
         DC    CL3'101'
         DC    CL3'112'
         DC    CL3'111'
         DC    CL3'122'
         DC    CL3'121'
         DC    CL3'132'
         DC    CL3'131'
         DS    CL3
QAPTR    DS    28A
GMTAB    DS    64F
QUAL     DS    CL11
         ORG   QUAL+0
QUAL10   DS    CL10
         ORG   QUAL10+0
QUAL7    DS    CL7
         ORG   QUAL7+0
QUAL3    DS    CL3
         ORG   QUAL3+0
QUAL2    DS    CL2
         ORG   QUAL2+0
QUAL1    DS    CL1
         ORG   QUAL+22
QUALLEN  DS    2H
         DS    CL2
MSGS     DS    CL76
         ORG   MSGS+0
@NM00087 DS    CL1
MCDE     DS    CL2
         ORG   MCDE+0
MESGCODE DC    XL1'80'
MESGLINE DC    XL1'01'
         ORG   MSGS+3
MESGLEN  DC    AL1(47)
MESGS    DS    CL72
         ORG   MESGS+0
MESGID   DC    CL10'  ICB080I '
MESGTXT  DC    CL62'- CARTRIDGE ENTERED MSF*, XYZ XXXYYZ '
         ORG   MSGS+76
         ORG   MSGS+76
         DS    CL1
         ORG   MCDE+76
         DC    XL1'81'
         DC    XL1'01'
         ORG   MSGS+79
         DC    AL1(68)
         ORG   MESGS+76
         DC    CL10'  ICB081I '
         DC    CL62'- ************ ENTERED AS UNASSIGNED CSN MSF*, XYZ C
               XXXYYZ '
         ORG   MSGS+152
         ORG   MSGS+152
         DS    CL1
         ORG   MCDE+152
         DC    XL1'82'
         DC    XL1'01'
         ORG   MSGS+155
         DC    AL1(71)
         ORG   MESGS+152
         DC    CL10'  ICB082I '
         DC    CL62'- ****** ENTERED AS CE VOL MSF*, XYZ XXXYYZ,CSN=***C
               ********* '
         ORG   MSGS+228
         ORG   MSGS+228
         DS    CL1
         ORG   MCDE+228
         DC    XL1'83'
         DC    XL1'01'
         ORG   MSGS+231
         DC    AL1(72)
         ORG   MESGS+228
         DC    CL10'  ICB083I '
         DC    CL62' VOLID ******, CSN(*)************ ENTERED IN MSF * C
               LOC ******,'
         ORG   MSGS+304
         ORG   MSGS+304
         DS    CL1
         ORG   MCDE+304
         DC    XL1'83'
         DC    XL1'02'
         ORG   MSGS+307
         DC    AL1(56)
         ORG   MESGS+304
         DC    CL10'  ICB083I '
         DC    CL62' VOLID ******, CSN(*)************ **** IN MSF.'
         ORG   MSGS+380
         ORG   MSGS+380
         DS    CL1
         ORG   MCDE+380
         DC    XL1'84'
         DC    XL1'01'
         ORG   MSGS+383
         DC    AL1(30)
         ORG   MESGS+380
         DC    CL10'  ICB084I '
         DC    CL62'- MSC TRACE STARTED '
         ORG   MSGS+456
         ORG   MSGS+456
         DS    CL1
         ORG   MCDE+456
         DC    XL1'85'
         DC    XL1'01'
         ORG   MSGS+459
         DC    AL1(38)
         ORG   MESGS+456
         DC    CL10'  ICB085I '
         DC    CL62'- MSC TRACE * NOW RECORDING '
         ORG   MSGS+532
         ORG   MSGS+532
         DS    CL1
         ORG   MCDE+532
         DC    XL1'86'
         DC    XL1'01'
         ORG   MSGS+535
         DC    AL1(30)
         ORG   MESGS+532
         DC    CL10'  ICB086I '
         DC    CL62'- MSC TRACE * ENDED '
         ORG   MSGS+608
         ORG   MSGS+608
         DS    CL1
         ORG   MCDE+608
         DC    XL1'93'
         DC    XL1'01'
         ORG   MSGS+611
         DC    AL1(58)
         ORG   MESGS+608
         DC    CL10'  ICB093I '
         DC    CL62'- PACK CHANGE INTERRUPT ON SSID XXX, STATUS YYY '
         ORG   MSGS+684
         ORG   MSGS+684
         DS    CL1
         ORG   MCDE+684
         DC    XL1'8F'
         DC    XL1'01'
         ORG   MSGS+687
         DC    AL1(48)
         ORG   MESGS+684
         DC    CL10'  ICB100I '
         DC    CL62'- VOLUME ****** NOW AVAILABLE FOR USE '
         ORG   MSGS+760
         ORG   MSGS+760
         DS    CL1
         ORG   MCDE+760
         DC    XL1'95'
         DC    XL1'01'
         ORG   MSGS+763
         DC    AL1(56)
         ORG   MESGS+760
         DC    CL10'  ICB095A '
         DC    CL62'- MSS DASD I/O ERROR ON SSID AAA, BBBB '
         ORG   MSGS+836
         ORG   MSGS+836
         DS    CL1
         ORG   MCDE+836
         DC    XL1'96'
         DC    XL1'01'
         ORG   MSGS+839
         DC    AL1(65)
         ORG   MESGS+836
         DC    CL10'  ICB096D '
         DC    CL62'- MSS AAAAAAA ERROR, RP BB ON SSID CCC MARKED UNUSAC
               BLE '
         ORG   MSGS+912
         ORG   MSGS+912
         DS    CL1
         ORG   MCDE+912
         DC    XL1'96'
         DC    XL1'02'
         ORG   MSGS+915
         DC    AL1(63)
         ORG   MESGS+912
         DC    CL10'  ICB096D '
         DC    CL62'- (CONT''D) VIRT CYL XXX, REAL CYL YYY, VOLID ZZZZZC
               Z '
         ORG   MSGS+988
         ORG   MSGS+988
         DS    CL1
         ORG   MCDE+988
         DC    XL1'97'
         DC    XL1'01'
         ORG   MSGS+991
         DC    AL1(47)
         ORG   MESGS+988
         DC    CL10'  ICB097I '
         DC    CL62'- MSC SSID RECONFIGURE DDD,EEE,AA,BB '
         ORG   MSGS+1064
         ORG   MSGS+1064
         DS    CL1
         ORG   MCDE+1064
         DC    XL1'98'
         DC    XL1'01'
         ORG   MSGS+1067
         DC    AL1(64)
         ORG   MESGS+1064
         DC    CL10'  ICB098I '
         DC    CL62'- MSC DATA REUSE OVERRIDE VVVVVV,DDD,AA,BB,CCCCCCCCC
               CC '
         ORG   MSGS+1140
         ORG   MSGS+1140
         DS    CL1
         ORG   MCDE+1140
         DC    XL1'9A'
         DC    XL1'01'
         ORG   MSGS+1143
         DC    AL1(67)
         ORG   MESGS+1140
         DC    CL10'  ICB101I '
         DC    CL62'- MSS UNIDENTIFIABLE PACK CHANGE INTERRUPT SA X, UNC
               IT YY '
         ORG   MSGS+1216
         ORG   MSGS+1216
         DS    CL1
         ORG   MCDE+1216
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+1219
         DC    AL1(59)
         ORG   MESGS+1216
         DC    CL10'  ICB056I '
         DC    CL62'DISPLAY 3850 FAILED - INITIALIZE REASON CODE AAA '
         ORG   MSGS+1292
         ORG   MSGS+1292
         DS    CL1
         ORG   MCDE+1292
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+1295
         DC    AL1(30)
         ORG   MESGS+1292
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS MSC  STATUS'
         ORG   MSGS+1368
         ORG   MSGS+1368
         DS    CL1
         ORG   MCDE+1368
         DC    XL1'56'
         DC    XL1'03'
         ORG   MSGS+1371
         DC    AL1(30)
         ORG   MESGS+1368
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS SSID STATUS'
         ORG   MSGS+1444
         ORG   MSGS+1444
         DS    CL1
         ORG   MCDE+1444
         DC    XL1'56'
         DC    XL1'04'
         ORG   MSGS+1447
         DC    AL1(64)
         ORG   MESGS+1444
         DC    CL10'  ICB056I '
         DC    CL62'3850 STATUS - NO VALID SSIDS FOUND'
         ORG   MSGS+1520
         ORG   MSGS+1520
         DS    CL1
         ORG   MCDE+1520
         DC    XL1'56'
         DC    XL1'05'
         ORG   MSGS+1523
         DC    AL1(70)
         ORG   MESGS+1520
         DC    CL10'SSID TYPE '
         DC    CL62' STATUS  USE      CONFIG SSID TYPE  STATUS  USE    C
                 CONFIG '
         ORG   MSGS+1596
         ORG   MSGS+1596
         DS    CL1
         ORG   MCDE+1596
         DC    XL1'56'
         DC    XL1'06'
         ORG   MSGS+1599
         DC    AL1(72)
         ORG   MESGS+1596
         DC    CL10'          '
         DC    CL62'                                                   C
                          '
         ORG   MSGS+1672
         ORG   MSGS+1672
         DS    CL1
         ORG   MCDE+1672
         DC    XL1'56'
         DC    XL1'07'
         ORG   MSGS+1675
         DC    AL1(54)
         ORG   MESGS+1672
         DC    CL10'          '
         DC    CL62'PRI MSC AAA -  ONLINE, ALT MSC BBB -  ONLINE'
         ORG   MSGS+1748
         ORG   MSGS+1748
         DS    CL1
         ORG   MCDE+1748
         DC    XL1'94'
         DC    XL1'01'
         ORG   MSGS+1751
         DC    AL1(69)
         ORG   MESGS+1748
         DC    CL10'  ICB194E '
         DC    CL62'MSS VOLUME ****** CART * UNAVAILABLE - MSC RESTART C
               CODE ** '
         ORG   MSGS+1824
         ORG   MSGS+1824
         DS    CL1
         ORG   MCDE+1824
         DC    XL1'99'
         DC    XL1'01'
         ORG   MSGS+1827
         DC    AL1(72)
         ORG   MESGS+1824
         DC    CL10'  ICB099I '
         DC    CL62'MSS INVALID PATCH SSID AAA,ADDR BBBB,VER CCCCCCCC,CC
               UR DDDDDDDD'
         ORG   MSGS+1900
         ORG   MSGS+1900
         DS    CL1
         ORG   MCDE+1900
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+1903
         DC    AL1(28)
         ORG   MESGS+1900
         DC    CL10'  ICB010I '
         DC    CL62'****** *********** '
         ORG   MSGS+1976
         ORG   MSGS+1976
         DS    CL1
         ORG   MCDE+1976
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+1979
         DC    AL1(55)
         ORG   MESGS+1976
         DC    CL10'  ICB012I '
         DC    CL62'MSS INOPERATIVE. READY FAILED, REAS CODE=XXX '
         ORG   MSGS+2052
         ORG   MSGS+2052
         DS    CL1
         ORG   MCDE+2052
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2055
         DC    AL1(51)
         ORG   MESGS+2052
         DC    CL10'  ICB013I '
         DC    CL62'- VARY SNNN OFF *********** POST CODE=XX '
         ORG   MSGS+2128
         ORG   MSGS+2128
         DS    CL1
         ORG   MCDE+2128
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2131
         DC    AL1(36)
         ORG   MESGS+2128
         DC    CL10'  ICB014I '
         DC    CL62'3850 TYPE COMMAND INVALID '
         ORG   MSGS+2204
         ORG   MSGS+2204
         DS    CL1
         ORG   MCDE+2204
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2207
         DC    AL1(39)
         ORG   MESGS+2204
         DC    CL10'  ICB090I '
         DC    CL62'- SNNN EXISTS BUT IS OFFLINE '
         ORG   MSGS+2280
         ORG   MSGS+2280
         DS    CL1
         ORG   MCDE+2280
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2283
         DC    AL1(45)
         ORG   MESGS+2280
         DC    CL10'  ICB092E '
         DC    CL62'- SNNN IS ONLINE BUT NOT AVAILABLE '
         ORG   MSGS+2356
         ORG   MSGS+2356
         DS    CL1
         ORG   MCDE+2356
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2359
         DC    AL1(64)
         ORG   MESGS+2356
         DC    CL10'  ICB094I '
         DC    CL62'MSC PRIMARY TABLE PACK IS ON SCUU,SECONDARY IS ON SC
               CUU'
         ORG   MSGS+2432
         ORG   MSGS+2432
         DS    CL1
         ORG   MCDE+2432
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2435
         DC    AL1(28)
         ORG   MESGS+2432
         DC    CL10'  ICB302I '
         DC    CL62' SNNN NOW ***LINE '
         ORG   MSGS+2508
         ORG   MSGS+2508
         DS    CL1
         ORG   MCDE+2508
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2511
         DC    AL1(32)
         ORG   MESGS+2508
         DC    CL10'  ICB303I '
         DC    CL62' SNNN ALREADY ***LINE '
         ORG   MSGS+2584
         ORG   MSGS+2584
         DS    CL1
         ORG   MCDE+2584
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2587
         DC    AL1(49)
         ORG   MESGS+2584
         DC    CL10'  ICB311I '
         DC    CL62' VARY SNNN ***LINE FAILED,REAS CODE=XXX'
         ORG   MSGS+2660
         ORG   MSGS+2660
         DS    CL1
         ORG   MCDE+2660
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2663
         DC    AL1(42)
         ORG   MESGS+2660
         DC    CL10'  ICB314I '
         DC    CL62' SYNTAX ERROR IN HALT S COMMAND '
         ORG   MSGS+2736
         ORG   MSGS+2736
         DS    CL1
         ORG   MCDE+2736
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2739
         DC    AL1(42)
         ORG   MESGS+2736
         DC    CL10'  ICB315I '
         DC    CL62' SYNTAX ERROR IN VARY S COMMAND '
         ORG   MSGS+2812
         ORG   MSGS+2812
         DS    CL1
         ORG   MCDE+2812
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2815
         DC    AL1(59)
         ORG   MESGS+2812
         DC    CL10'  ICB316I '
         DC    CL62'HOSTID MISSING IN PURGE COMMAND, COMMAND REJECTED'
         ORG   MSGS+2888
         ORG   MSGS+2888
         DS    CL1
         ORG   MCDE+2888
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2891
         DC    AL1(62)
         ORG   MESGS+2888
         DC    CL10'  ICB985I '
         DC    CL62'NO 3850. GETMAIN FAILURE DURING MSSC INITIALIZATIONC
                '
         ORG   MSGS+2964
         ORG   MSGS+2964
         DS    CL1
         ORG   MCDE+2964
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+2967
         DC    AL1(56)
         ORG   MESGS+2964
         DC    CL10'  ICB987I '
         DC    CL62'GETMAIN FAILURE. NO MSS CONFIGURATION MESSAGES'
         ORG   MSGS+3040
         ORG   MSGS+3040
         DS    CL1
         ORG   MCDE+3040
         DC    XL1'00'
         DC    XL1'01'
         ORG   MSGS+3043
         DC    AL1(55)
         ORG   MESGS+3040
         DC    CL10'  ICB533I '
         DC    CL62'MSS INOPERATIVE. ICBMSG05 LOAD FAILED, ABEND CODE=XC
               XX'
         ORG   MSGS+3116
         ORG   MSGS+3116
         DS    CL1
         ORG   MCDE+3116
         DC    XL1'9C'
         DC    XL1'01'
         ORG   MSGS+3119
         DC    AL1(65)
         ORG   MESGS+3116
         DC    CL10'  ICB102E '
         DC    CL62'FFFFFFFFFFFF,SS                                    C
                  '
         ORG   MSGS+3192
         ORG   MSGS+3192
         DS    CL1
         ORG   MCDE+3192
         DC    XL1'9C'
         DC    XL1'02'
         ORG   MSGS+3195
         DC    AL1(62)
         ORG   MESGS+3192
         DC    CL10'  ICB102E '
         DC    CL62'                                                   C
                 '
         ORG   MSGS+3268
         ORG   MSGS+3268
         DS    CL1
         ORG   MCDE+3268
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+3271
         DC    AL1(34)
         ORG   MESGS+3268
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS CPU PATH STATUS'
         ORG   MSGS+3344
         ORG   MSGS+3344
         DS    CL1
         ORG   MCDE+3344
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+3347
         DC    AL1(66)
         ORG   MESGS+3344
         DC    CL10'CPUID/STAT'
         DC    CL62'US   CH INT SA/STATUS  SDG  UNIT ADDRESS(VIRTUAL)/SC
               TATUS'
         ORG   MSGS+3420
         ORG   MSGS+3420
         DS    CL1
         ORG   MCDE+3420
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+3423
         DC    AL1(34)
         ORG   MESGS+3420
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS SDG PATH STATUS'
         ORG   MSGS+3496
         ORG   MSGS+3496
         DS    CL1
         ORG   MCDE+3496
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+3499
         DC    AL1(64)
         ORG   MESGS+3496
         DC    CL10'SDG SA/STA'
         DC    CL62'TUS DRC/STATUS            SDG SA/STATUS DRC/STATUS C
                 '
         ORG   MSGS+3572
         ORG   MSGS+3572
         DS    CL1
         ORG   MCDE+3572
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+3575
         DC    AL1(34)
         ORG   MESGS+3572
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS DRC PATH STATUS'
         ORG   MSGS+3648
         ORG   MSGS+3648
         DS    CL1
         ORG   MCDE+3648
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+3651
         DC    AL1(66)
         ORG   MESGS+3648
         DC    CL10'SA        '
         DC    CL62' DRC         DRD-00      DRD-01      DRD-10      DRC
               D-11'
         ORG   MSGS+3724
         ORG   MSGS+3724
         DS    CL1
         ORG   MCDE+3724
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+3727
         DC    AL1(33)
         ORG   MESGS+3724
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS ERR QCB STATUS'
         ORG   MSGS+3800
         ORG   MSGS+3800
         DS    CL1
         ORG   MCDE+3800
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+3803
         DC    AL1(68)
         ORG   MESGS+3800
         DC    CL10'QCB SDG CA'
         DC    CL62'RT/SSID L XXX YY Z RSTT  QCB SDG CART/SSID L XXX YYC
                Z RSTT'
         ORG   MSGS+3876
         ORG   MSGS+3876
         DS    CL1
         ORG   MCDE+3876
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+3879
         DC    AL1(30)
         ORG   MESGS+3876
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS MSVC STATUS'
         ORG   MSGS+3952
         ORG   MSGS+3952
         DS    CL1
         ORG   MCDE+3952
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+3955
         DC    AL1(31)
         ORG   MESGS+3952
         DC    CL10'MSVI XXXXX'
         DC    CL62'XX , JOURNAL XXXXXXXX'
         ORG   MSGS+4028
         ORG   MSGS+4028
         DS    CL1
         ORG   MCDE+4028
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+4031
         DC    AL1(31)
         ORG   MESGS+4028
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS TRACE STATUS'
         ORG   MSGS+4104
         ORG   MSGS+4104
         DS    CL1
         ORG   MCDE+4104
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+4107
         DC    AL1(34)
         ORG   MESGS+4104
         DC    CL10'TRACE INAC'
         DC    CL62'TIVE - AREA X - XX% FULL'
         ORG   MSGS+4180
         ORG   MSGS+4180
         DS    CL1
         ORG   MCDE+4180
         DC    XL1'56'
         DC    XL1'01'
         ORG   MSGS+4183
         DC    AL1(36)
         ORG   MESGS+4180
         DC    CL10'  ICB056I '
         DC    CL62'HH.MM.SS STATUS OF ALT MSC'
         ORG   MSGS+4256
         ORG   MSGS+4256
         DS    CL1
         ORG   MCDE+4256
         DC    XL1'56'
         DC    XL1'02'
         ORG   MSGS+4259
         DC    AL1(52)
         ORG   MESGS+4256
         DC    CL10'ALT MSC XX'
         DC    CL62'X IS                                      '
         ORG   MSGS+4332
MSG04FIL DC    CL30'CPU XXXXXXXXXX FOUND'
         DC    CL30'SSID XXX FOUND'
         DC    CL30'SSIDS (XXX-XXX) FOUND'
         DC    CL30'SSIDS IN SDG XX FOUND'
         DC    CL30'DRC SSID 4XX FOUND'
LZYXCP   DS    4CL2
LZYXCU   DS    4CL4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R14      EQU   @14
R15      EQU   @15
GPR01P   EQU   @01
QUERR1   EQU   @01
         ENTRY MSGS
         ENTRY SSIDS
         EXTRN CWBPTR
         EXTRN UCBPTR
         EXTRN MSGPTR
         EXTRN BITSW
         EXTRN INTER
         EXTRN CMDQUE
         EXTRN CONFGMSK
         EXTRN RECOVER
         EXTRN SAVR1446
         EXTRN SAVR1482
         EXTRN CMDPTR
CVTPTR   EQU   16
CWB      EQU   0
CWBFREE  EQU   CWB+4
CWBSBPOL EQU   CWBFREE
CWBCMND  EQU   CWB+9
CWBCOMQ  EQU   CWB+135
CWBUCMID EQU   CWB+136
CWBLCC   EQU   CWB+139
CWBLA    EQU   CWB+140
CWBRESV  EQU   CWB+141
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLLGH   EQU   WPL
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSFA EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSF2 EQU   WPLMCSF+1
WPLMCSFJ EQU   WPLMCSF2
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESCE EQU   WPLDESC1
WPLDESCH EQU   WPLDESC1
WPLDESC2 EQU   WPLDESC+1
WPLDESCI EQU   WPLDESC2
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUTB EQU   WPLROUT1
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLLTFA  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLAREA  EQU   WPLLS01+2
WPLLINES EQU   WPLLS01+3
WPLML    EQU   0
WPLML0   EQU   WPLML
WPLMLLEN EQU   WPLML+1
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
WPLMLLTC EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLTXT EQU   WPLML+4
VVICB    EQU   0
VVIFLGA  EQU   VVICB+15
VVIFLG0  EQU   VVIFLGA
VVIFLG1  EQU   VVIFLGA
VVIFLG2  EQU   VVIFLGA
VVIUCB   EQU   VVICB+60
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ICB2SSCB EQU   0
ICBPUCB  EQU   ICB2SSCB+28
ICBAUCB  EQU   ICB2SSCB+32
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBVVICB EQU   ICB2SSCB+76
ICBTRACE EQU   ICB2SSCB+148
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBONLI  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBNOTRD EQU   UCBNRY
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00008 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
GMENT    EQU   0
GMLEN    EQU   GMENT
GMSUB    EQU   GMLEN
GMADR    EQU   GMENT+4
CPHTAB   EQU   0
CPHENT   EQU   0
CPHID    EQU   CPHENT
CPHPTI   EQU   CPHENT+5
CPHPTA   EQU   CPHENT+6
CPHFLGS  EQU   CPHENT+7
CPHVALID EQU   CPHFLGS
CPHFASC  EQU   CPHFLGS
CPHINTF  EQU   CPHFLGS
CPHALTP  EQU   CPHFLGS
CPHALTF1 EQU   CPHALTP
CPHALTF2 EQU   CPHALTP
CPHSTAT  EQU   CPHENT+8
CPHIN    EQU   CPHSTAT
CPHPRI   EQU   CPHSTAT
CPHASC   EQU   CPHSTAT
CPHFPOT  EQU   CPHSTAT
CPHFALT  EQU   CPHSTAT
CPHMBUF  EQU   CPHSTAT
CPHMSOF  EQU   CPHSTAT
CPHDET   EQU   CPHENT+9
CPHMSAD  EQU   CPHENT+12
CPHCH    EQU   CPHMSAD
CPHINT   EQU   CPHENT+15
CPDTAB   EQU   0
CPDET    EQU   0
CPDSAAD  EQU   CPDET
CPDSAST  EQU   CPDET+3
CPDSAOF  EQU   CPDSAST
CPDSARDY EQU   CPDSAST
CPDSAVAL EQU   CPDSAST
CPDVUA   EQU   CPDSAST
CPDCHN   EQU   CPDET+4
CHNPTRS  EQU   CPDET+8
CPDFLGS  EQU   CHNPTRS
CPDFLG1  EQU   CPDFLGS
CPDONL   EQU   CHNPTRS+1
CPDOFF   EQU   CHNPTRS+4
CPDSUU   EQU   CHNPTRS+8
CPDINT   EQU   CPDET+20
CPDCH    EQU   CPDET+21
CPDSDG1  EQU   CPDET+22
CPDSDG12 EQU   CPDSDG1+1
CPDSDG2  EQU   CPDET+24
CPDSDG22 EQU   CPDSDG2+1
VUATAB   EQU   0
VUACNT   EQU   VUATAB
VUACHN   EQU   VUATAB+1
VUALST   EQU   VUATAB+4
VUAA     EQU   VUALST
VUAB     EQU   VUALST+3
SDGENT   EQU   0
SDGNUM   EQU   SDGENT
SDGCHN   EQU   SDGENT+1
SDGVALS  EQU   SDGENT+4
SDGSANOP EQU   SDGVALS
SDGSANO  EQU   SDGSANOP
SDGSAST  EQU   SDGSANOP+1
SDGSAOF  EQU   SDGSAST
SDGSARDY EQU   SDGSAST
SDGSAVAL EQU   SDGSAST
SDGSAP   EQU   SDGSAST
SDGCSFNP EQU   SDGVALS+2
SDGCSFNO EQU   SDGCSFNP
SDGDCCNO EQU   SDGCSFNP+1
SDGDCCST EQU   SDGVALS+4
SDGDCOF  EQU   SDGDCCST
SDGDCRDY EQU   SDGDCCST
DRCTAB   EQU   0
DRCCHN   EQU   DRCTAB
DRCSAID  EQU   DRCTAB+4
DRCSAID2 EQU   DRCSAID+1
DRCSAST  EQU   DRCTAB+7
DRCSAOF  EQU   DRCSAST
DRCSARDY EQU   DRCSAST
DRCSANA  EQU   DRCSAST
DRCSAVAL EQU   DRCSAST
DRCDCOF  EQU   DRCSAST
DRCDCRDY EQU   DRCSAST
DRCDCNA  EQU   DRCSAST
DRCDRNO  EQU   DRCTAB+8
DRCSANO  EQU   DRCTAB+9
DRCDRSS  EQU   DRCTAB+10
DRCDRSS2 EQU   DRCDRSS+1
DRCDRSS3 EQU   DRCDRSS+2
DRCCSNO  EQU   DRCTAB+13
DRCDRD   EQU   DRCTAB+14
DRCDRDAD EQU   DRCDRD
DRCDRDST EQU   DRCDRD+3
DRCDRDOF EQU   DRCDRDST
DRCDRDRD EQU   DRCDRDST
DRCDRDNA EQU   DRCDRDST
QCTENT   EQU   0
QCTNOP   EQU   QCTENT
QCTNO    EQU   QCTNOP
QCTSDG   EQU   QCTNOP+1
QCTCVOL  EQU   QCTENT+2
QCTCSEQ  EQU   QCTENT+8
QCTSSID  EQU   QCTENT+9
QCTLVAL  EQU   QCTENT+12
QCTXVAL  EQU   QCTENT+13
QCTYVAL  EQU   QCTENT+16
QCTZVAL  EQU   QCTENT+18
QCTRCOD  EQU   QCTENT+19
QCTCHAIN EQU   QCTENT+21
CHAIN    EQU   0
CHNADR   EQU   CHAIN+1
STATTAB  EQU   0
STATFLG  EQU   STATTAB
STSTAG   EQU   STATFLG
STREAL   EQU   STATFLG
STBIND   EQU   STATFLG
STNEUT   EQU   STATFLG
STCONV   EQU   STATFLG
STATUNIT EQU   STATTAB+1
STATOUA  EQU   STATUNIT
STATOUA1 EQU   STATOUA
STCUA    EQU   STATUNIT+1
STCUA1   EQU   STCUA
STCUA2   EQU   STCUA
PABMAP   EQU   0
PABSTAT  EQU   PABMAP+192
PABFLG   EQU   PABSTAT
PABRI    EQU   PABSTAT+1
PABUNIT  EQU   PABSTAT+2
BYTE022  EQU   0
ACC2BIT  EQU   BYTE022
ACC1BIT  EQU   BYTE022
LASTLINE EQU   0
LASMLLEN EQU   LASTLINE+1
LASMLTXT EQU   LASTLINE+4
MSG04TXT EQU   0
MSG04CPU EQU   MSG04TXT+4
MSG04RNG EQU   MSG04CPU+3
MSG04RN1 EQU   MSG04RNG
MSG04RN2 EQU   MSG04RNG+4
DATAFLDS EQU   0
DSSID    EQU   DATAFLDS
DSSID2   EQU   DSSID+1
DTYPE    EQU   DATAFLDS+5
DTYPE14  EQU   DTYPE
DTYPE5   EQU   DTYPE+4
DSTAT    EQU   DATAFLDS+11
DSTAT1   EQU   DSTAT
DSTAT27  EQU   DSTAT+1
DSTAT25  EQU   DSTAT27
DUSE     EQU   DATAFLDS+19
DUSE14   EQU   DUSE
DUSE58   EQU   DUSE+4
DCONF    EQU   DATAFLDS+28
DCONF12  EQU   DCONF
DCONF35  EQU   DCONF+2
DCONF45  EQU   DCONF35+1
DATALINE EQU   0
FHALF    EQU   DATALINE
SHALF    EQU   DATALINE+35
CONFARY  EQU   0
PRITBL   EQU   CONFARY
SECTBL   EQU   CONFARY+1
EXISTARY EQU   CONFARY+2
ONLINARY EQU   CONFARY+42
AVAILARY EQU   CONFARY+82
MSG01TXT EQU   0
REQCHAR  EQU   0
RNGCHAR  EQU   0
DSPSSIDS EQU   0
QUBUF1   EQU   0
QUBUF3   EQU   0
QUERYAR  EQU   0
QULEN    EQU   QUERYAR
QUORD    EQU   QUERYAR+4
QUCODE   EQU   QUERYAR+6
QUSECT   EQU   QUERYAR+7
QUXADDR  EQU   QUSECT
QUFLAG   EQU   QUXADDR
QUPARM   EQU   QUERYAR+8
QUPTR    EQU   QUERYAR+40
WPLBUF   EQU   0
MSGBMAP  EQU   0
ALMSCAD  EQU   MSGBMAP+8
ALTMONOF EQU   MSGBMAP+15
ALTMRDYO EQU   ALTMONOF+2
ALTMUNUS EQU   MSGBMAP+25
ALTMUS   EQU   ALTMUNUS
ALTMRCD  EQU   MSGBMAP+36
ALTMNIML EQU   ALTMRCD
ALTMRSNU EQU   MSGBMAP+49
ALTMRSN  EQU   ALTMRSNU
ALTMRSNY EQU   ALTMRSNU+2
WCS4C    EQU   0
WC4CRSNP EQU   WCS4C
WC4CRSN  EQU   WC4CRSNP
MSGBDS   EQU   0
MSGBVIST EQU   MSGBDS+5
MSGBJRST EQU   MSGBDS+23
CONFXTBL EQU   0
CONFXTAB EQU   CONFXTBL
MIDCTAB  EQU   CONFXTBL+128
MIDCPUID EQU   MIDCTAB
MIDCPAIR EQU   MIDCTAB+5
MIDCFLG1 EQU   MIDCTAB+6
MIDCFPOT EQU   MIDCFLG1
MIDCFALT EQU   MIDCFLG1
MIDCFIF  EQU   MIDCFLG1
MIDCFLG2 EQU   MIDCTAB+7
MIDCFVAL EQU   MIDCFLG2
MIDCFASC EQU   MIDCFLG2
MIDCFCBF EQU   MIDCFLG2
MIDCFAIF EQU   MIDCFLG2
MIDCFAI1 EQU   MIDCFAIF
MIDCFAI2 EQU   MIDCFAIF
CONFXENT EQU   0
CXCSCON  EQU   CONFXENT
CXCSCCS  EQU   CXCSCON
CXCSCS0  EQU   CXCSCON
CXCSCS1  EQU   CXCSCON
CXSAIF   EQU   CONFXENT+2
CXSACPU  EQU   CXSAIF
CXSACUCH EQU   CXSAIF+1
CONFDATA EQU   0
CONDCONF EQU   CONFDATA
CONDALTP EQU   CONFDATA+1
WCS7X    EQU   0
DRCSA    EQU   WCS7X
DRCCON   EQU   DRCSA
DRCUCB   EQU   WCS7X+16
DRDUCB   EQU   WCS7X+32
DRDFLGS  EQU   DRDUCB
SAUCB    EQU   WCS7X+64
SAFLGS   EQU   SAUCB
SAFVAL   EQU   SAFLGS
SAFONL   EQU   SAFLGS
SAFRDY   EQU   SAFLGS
DRCPUCB  EQU   0
DRCFLGS  EQU   DRCPUCB
DRCFONL  EQU   DRCFLGS
DRCFUSA  EQU   DRCFLGS
WCS0F    EQU   0
WC0FINIT EQU   WCS0F
WC0FINA  EQU   WC0FINIT
WC0FINB  EQU   WC0FINIT
WC0FINC  EQU   WC0FINIT
WC0FIND  EQU   WC0FINIT
WC0FP    EQU   WCS0F+1
WC0FAP   EQU   WCS0F+2
WC0FAPCK EQU   WC0FAP
VUCBAD   EQU   0
VERTAB   EQU   0
VESDGNDX EQU   VERTAB
VESDG1   EQU   VESDGNDX
VESDG2   EQU   VESDGNDX+1
QCBAR    EQU   0
QCB      EQU   0
QCBFLG1  EQU   QCB
QCBERR   EQU   QCBFLG1
QCBFLG2  EQU   QCB+2
QCBCSEQ  EQU   QCBFLG2
QCBRCOD  EQU   QCB+3
QCBRCE   EQU   QCBRCOD
QCBRCC   EQU   QCBRCOD
QCBRMC   EQU   QCBRCOD
QCBRDA   EQU   QCBRCOD
QCBRSA   EQU   QCBRCOD
QCBRDC   EQU   QCBRCOD
QCBRDD   EQU   QCBRCOD
QCBRCS   EQU   QCBRCOD
QCBEXT   EQU   0
SQTENT   EQU   0
SQTBFLG  EQU   SQTENT
SQTMHPTR EQU   SQTENT+1
SQTBFLG1 EQU   SQTENT+2
SQTBFLG2 EQU   SQTENT+3
SQTSA1   EQU   SQTENT+4
SQTDRDAD EQU   SQTENT+14
SQTCVOL  EQU   SQTENT+16
SQTLZYX  EQU   SQTENT+22
SQLZYXC1 EQU   SQTLZYX
SQLZYXC2 EQU   SQTLZYX+1
MHDR     EQU   0
MHF1     EQU   MHDR+1
MHF1B1   EQU   MHF1
MHF1B6   EQU   MHF1
MHF1B7   EQU   MHF1
MHIOLUA  EQU   MHDR+8
MHPLNDX  EQU   MHDR+14
MHSALUA  EQU   0
TRCCHK   EQU   0
TRCCHKA  EQU   TRCCHK
TRCACT   EQU   TRCCHKA
TRCXACT  EQU   TRCCHKA
TRCCHR   EQU   TRCCHK+1
TRCNC    EQU   TRCCHR
TRCNH    EQU   TRCCHR+1
TRCNR    EQU   TRCCHR+2
TRCCHRS  EQU   0
@NM00140 EQU   TRCCHRS+64
TRCEXC   EQU   @NM00140+1
TRCEXH   EQU   @NM00140+2
TRCEXR   EQU   @NM00140+3
@NM00142 EQU   TRCCHRS+68
TRCEYC   EQU   @NM00142+1
TRCEYH   EQU   @NM00142+2
TRCEYR   EQU   @NM00142+3
@NM00144 EQU   TRCCHRS+72
TRCSXC   EQU   @NM00144+1
TRCSXH   EQU   @NM00144+2
TRCSXR   EQU   @NM00144+3
@NM00146 EQU   TRCCHRS+76
TRCSYC   EQU   @NM00146+1
TRCSYH   EQU   @NM00146+2
TRCSYR   EQU   @NM00146+3
MSGTRB   EQU   0
MTRACTIN EQU   MSGTRB+6
MTRCLR   EQU   MSGTRB+14
MTRAREA  EQU   MTRCLR+8
MTRPCT   EQU   MTRCLR+11
MTRPCTB  EQU   MTRPCT+1
MVSRC    EQU   0
MVREC    EQU   0
MOVEMAP  EQU   0
PARMS    EQU   0
INLEN    EQU   PARMS
INADDR   EQU   PARMS+1
CPUMSG   EQU   0
CMCPUID  EQU   CPUMSG
CMCPSTAT EQU   CPUMSG+10
CMCHAN   EQU   CPUMSG+16
CMINTF   EQU   CPUMSG+19
CMSANO   EQU   CPUMSG+22
CMSAST   EQU   CPUMSG+25
CMSAST2  EQU   CMSAST+2
CMSDGS   EQU   CPUMSG+32
CMSDG1   EQU   CMSDGS
CMSDGSEP EQU   CMSDGS+2
CMSDG2   EQU   CMSDGS+3
CMUSTAT  EQU   CPUMSG+38
CMUSTON  EQU   CMUSTAT
CMUSTOF  EQU   CMUSTON
CMUSTSU  EQU   CMUSTOF
CMUST    EQU   0
CMUST1   EQU   CMUST
CMUSEP   EQU   CMUST+3
CMUST2   EQU   CMUST+4
CMUCMA2  EQU   CMUST+7
CMUSTX   EQU   0
SDGMSG   EQU   0
SDMSDGN  EQU   SDGMSG
SDMSDGN2 EQU   SDMSDGN+1
@NM00163 EQU   SDGMSG+5
SDMSA    EQU   @NM00163
SDMSAU   EQU   @NM00163+1
SDMSAX   EQU   SDMSAU+1
SDMSASUU EQU   SDGMSG+8
SDMSAOFF EQU   SDMSASUU
SDMSAON  EQU   SDMSAOFF
SDMDR    EQU   SDGMSG+15
SDMDRSUU EQU   SDGMSG+18
SDMDROFF EQU   SDMDRSUU
SDMDRON  EQU   SDMDROFF
DRCMSG   EQU   0
MDRSA    EQU   DRCMSG
MDRSASUU EQU   DRCMSG+3
MDRSAOFF EQU   MDRSASUU
MDRSAON  EQU   MDRSAOFF
MDRDRC   EQU   DRCMSG+10
MDRDCUNA EQU   DRCMSG+13
MDRDCSUU EQU   MDRDCUNA
MDRDCOFF EQU   MDRDCSUU
MDRDCON  EQU   MDRDCOFF
MDRDRDS  EQU   DRCMSG+20
MDRDRD   EQU   MDRDRDS+2
MDRDDUNA EQU   MDRDRDS+5
MDRDDSUU EQU   MDRDDUNA
MDRDDOFF EQU   MDRDDSUU
QCBMSG   EQU   0
QCMQCBU  EQU   QCBMSG
QCMQCB   EQU   QCMQCBU
QCMX1    EQU   QCMQCBU+2
QCMSDGU  EQU   QCBMSG+4
QCMSDG   EQU   QCMSDGU
QCMX2    EQU   QCMSDGU+2
QCMCART  EQU   QCBMSG+8
QCMSSID  EQU   QCMCART+3
QCMCDSH  EQU   QCBMSG+14
QCMCSEQ  EQU   QCBMSG+15
QCML     EQU   QCBMSG+18
QCMX     EQU   QCBMSG+20
QCMY     EQU   QCBMSG+24
QCMZ     EQU   QCBMSG+27
QCMRCOD  EQU   QCBMSG+30
ENDCH    EQU   0
CURCH    EQU   0
CURQUAL  EQU   0
PACK2    EQU   0
QUBUF2   EQU   0
SDGTAB   EQU   0
UCBBGN   EQU   0
EXITSW   EQU   BITSW
BYTES234 EQU   INTER+1
BYTES34  EQU   BYTES234+1
BYTE4    EQU   BYTES34+1
BYTE4C   EQU   BYTE4
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00007 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
CPHIDP   EQU   CPHENT
CHNPTR   EQU   CHNPTRS
QCTSDGP  EQU   QCTSDG
QCTRCODU EQU   QCTRCOD
MSG0402  EQU   MSG04TXT
MSG04SSI EQU   MSG0402+5
MSG04DRC EQU   MSG0402+10
MSG04SDG EQU   MSG0402+13
DEFSSIDS EQU   SSIDS
SRTDRDS  EQU   DEFSSIDS
DRDSSIDS EQU   SRTDRDS
SRTSAS   EQU   DEFSSIDS+96
SASSIDS  EQU   SRTSAS
SRTDRCS  EQU   DEFSSIDS+144
DRCSSIDS EQU   SRTDRCS
SDGSSIDS EQU   DEFSSIDS+192
SRTMSFS  EQU   DEFSSIDS+936
MSFSSIDS EQU   SRTMSFS
SRTSDAS  EQU   SDGSSIDS
SRTSDA1  EQU   SRTSDAS
SRTSDA2  EQU   SRTSDAS+224
SRTSDA3  EQU   SRTSDAS+448
CONSID   EQU   CONSOL
SAVDOMID EQU   CONSID
CONSID4  EQU   CONSID+3
INTFC    EQU   NUMBRS+10
DSPFLG   EQU   CWBCOMQ
DSPALL   EQU   DSPFLG
DSPON    EQU   DSPFLG
DSPOFF   EQU   DSPFLG
DSPSDG   EQU   DSPFLG
DSPRNG   EQU   DSPFLG
DSPSSID  EQU   DSPFLG
DSPCPU   EQU   DSPFLG
DSPPATH  EQU   DSPFLG
DSPADDS  EQU   CWBRESV
DSPFLG2  EQU   DSPADDS
DSPDRC   EQU   DSPFLG2
DSPNEW   EQU   DSPFLG2
DSPQUAL  EQU   DSPFLG2
DSPMSVC  EQU   DSPFLG2
DSPTRC   EQU   DSPFLG2
DSPQCB   EQU   DSPFLG2
DSPALTM  EQU   DSPFLG2
DSPINP   EQU   DSPFLG2
DSPOFFS  EQU   CWBRESV+1
EXIST    EQU   EXISTARY
DRCXST   EQU   EXIST+6
SDGXST   EQU   EXIST+8
ONLINE   EQU   ONLINARY
DRDON    EQU   ONLINE
SAON     EQU   ONLINE+4
DRCON    EQU   ONLINE+6
SDGON    EQU   ONLINE+8
MSFON    EQU   ONLINE+39
READY    EQU   AVAILARY
DRDRDY   EQU   READY
SARDY    EQU   READY+4
DRCRDY   EQU   READY+6
SDGRDY   EQU   READY+8
MSFRDY   EQU   READY+39
RBIT     EQU   REQBIT
REQBITB  EQU   REQBIT
DRDREQ   EQU   REQBITB
SAREQ    EQU   REQBITB+4
DRCREQ   EQU   REQBITB+6
SDGREQ   EQU   REQBITB+8
MSFREQ   EQU   REQBITB+39
REQCHARB EQU   REQCHAR
DRDCHRA  EQU   REQCHARB
SACHRA   EQU   REQCHARB+32
DRCCHRA  EQU   REQCHARB+48
SDGCHRA  EQU   REQCHARB+64
SDGCHR   EQU   SDGCHRA
MSFCHRA  EQU   REQCHARB+312
RNGCHARB EQU   RNGCHAR
SDGRNGA  EQU   RNGCHARB
MSFRNGA  EQU   RNGCHARB+224
DRDRNGA  EQU   RNGCHARB+232
DRCRNGA  EQU   RNGCHARB+264
SARNGA   EQU   RNGCHARB+280
DSPSSTB  EQU   DSPSSIDS
DTBDA    EQU   DSPSSTB
DTBDA1   EQU   DTBDA
DTBDA2   EQU   DTBDA+224
DTBDA3   EQU   DTBDA+448
DTBMSF   EQU   DSPSSTB+672
DTBDRD   EQU   DSPSSTB+696
DTBDRC   EQU   DSPSSTB+792
DTBSA    EQU   DSPSSTB+840
QWPARM   EQU   QUPARM
QWRES1   EQU   QWPARM
QWFLAG   EQU   QWPARM+2
QTPARM   EQU   QUPARM
QTID     EQU   QTPARM
QLPARM   EQU   QUPARM
QCPARM   EQU   QUPARM
CURPTRS  EQU   CURSTR
@NM00117 EQU   CURPTRS
USEADB   EQU   @NM00117
CURPTR   EQU   CURPTRS+1
CPXWK    EQU   PTHWK
CPXMODP1 EQU   CPXWK+4
CPYWK    EQU   PTHWK
CPXIDP1  EQU   CPYWK+1
CPXCPU   EQU   PTHWK+1
CURRCPU  EQU   CURRCPUW
CPXIDC1  EQU   CURRCPU
QCBRCODP EQU   QCBRCOD
LZYXFX   EQU   LZYXCALC
QBCHRC   EQU   QBCHRF
CMCPUIDU EQU   CMCPUID
CMUSTY   EQU   CMUSTX
@NM00167 EQU   SDMDR
SDMDRU   EQU   @NM00167+1
SDMDRA   EQU   SDMDRU
SDMDRX   EQU   SDMDRU+2
CMSASTO  EQU   CMSAST
RCHAR    EQU   REQCHAR
RGCHAR   EQU   RNGCHAR
*                                      START UNREFERENCED COMPONENTS
@NM00168 EQU   @NM00167
CMUSTSUU EQU   CMUSTY+3
@NM00160 EQU   CMUSTY
@NM00124 EQU   CPYWK
CPXMODP  EQU   CPXMODP1
CPXIDP   EQU   CPXWK+1
@NM00123 EQU   CPXWK
@NM00118 EQU   @NM00117
QCMAD3Z1 EQU   QCPARM+28
QCMAD3Z0 EQU   QCPARM+24
QCMAD2Z1 EQU   QCPARM+20
QCMAD2Z0 EQU   QCPARM+16
QCMAD1Z1 EQU   QCPARM+12
QCMAD1Z0 EQU   QCPARM+8
QCMAD0Z1 EQU   QCPARM+4
QCMAD0Z0 EQU   QCPARM
QLRES    EQU   QLPARM+2
QLZYX    EQU   QLPARM
QTRES    EQU   QTPARM+24
QTDASCHR EQU   QTPARM+20
QTDATA   EQU   QTPARM+2
QTFLAG   EQU   QTPARM+1
QTTABID  EQU   QTID
QWRES2   EQU   QWPARM+3
QWALTMSC EQU   QWFLAG
@NM00091 EQU   QWFLAG
QWMEM    EQU   QWFLAG
QWSSID   EQU   QWRES1
@NM00090 EQU   RNGCHARB+296
SARNG    EQU   SARNGA
DRCRNG   EQU   DRCRNGA
DRDRNG   EQU   DRDRNGA
MSFRNG   EQU   MSFRNGA
SDGRNG   EQU   SDGRNGA
MSFCHR   EQU   MSFCHRA
@NM00089 EQU   REQCHARB+304
DRCCHR   EQU   DRCCHRA
SACHR    EQU   SACHRA
DRDCHR   EQU   DRDCHRA
@NM00086 EQU   REQBITB+38
@NM00085 EQU   READY+38
@NM00084 EQU   ONLINE+38
MSFXST   EQU   EXIST+39
@NM00083 EQU   EXIST+38
@NM00082 EQU   EXIST+7
SAXST    EQU   EXIST+4
@NM00081 EQU   EXIST+2
DRDXST   EQU   EXIST
CWBOFFS  EQU   DSPADDS+1
@NM00069 EQU   DEFSSIDS+864
@NM00068 EQU   MSG0402+12
@NM00067 EQU   MSG0402+8
@NM00066 EQU   MSG0402
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00007
UCBSKPFG EQU   @NM00007
UCBRIPND EQU   @NM00007
UCBRTIAC EQU   @NM00007
UCBRSV79 EQU   @NM00007
UCBRSV78 EQU   @NM00007
UCBRSV77 EQU   @NM00007
UCBOLTEP EQU   @NM00007
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00006 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00016 EQU   RECOVER
@NM00015 EQU   RECOVER
@NM00014 EQU   RECOVER
@NM00013 EQU   RECOVER
@NM00012 EQU   RECOVER
@NM00011 EQU   RECOVER
@NM00010 EQU   RECOVER
BYTE3    EQU   BYTES34
BYTE2    EQU   BYTES234
BYTE1    EQU   INTER
@NM00009 EQU   BITSW
DSPERR   EQU   BITSW
LOOPEND  EQU   BITSW
LINETWO  EQU   BITSW
DSTGERR  EQU   BITSW
MSG92FLG EQU   BITSW
@NM00179 EQU   QCBMSG+32
@NM00178 EQU   QCBMSG+28
@NM00177 EQU   QCBMSG+26
@NM00176 EQU   QCBMSG+23
@NM00175 EQU   QCBMSG+19
@NM00174 EQU   QCBMSG+16
@NM00173 EQU   QCMCART
@NM00172 EQU   QCBMSG+7
@NM00171 EQU   QCBMSG+3
MDRDDON  EQU   MDRDDOFF
@NM00170 EQU   MDRDRDS
@NM00169 EQU   DRCMSG+9
@NM00166 EQU   SDGMSG+24
@NM00165 EQU   SDGMSG+14
@NM00164 EQU   SDMSAU
@NM00162 EQU   SDGMSG+2
@NM00161 EQU   SDMSDGN
CMUCMA   EQU   CMUST2
CMUONEND EQU   CMUSTAT+31
CMUOFEND EQU   CMUSTON+29
CMUSUEND EQU   CMUSTOF+25
@NM00159 EQU   CPUMSG+37
@NM00158 EQU   CPUMSG+31
CMSAST1  EQU   CMSAST
@NM00157 EQU   CPUMSG+20
@NM00156 EQU   CPUMSG+17
@NM00155 EQU   CPUMSG+15
CMCPST5  EQU   CMCPSTAT+4
CMCPST4  EQU   CMCPSTAT+3
CMCPST3  EQU   CMCPSTAT+2
CMCPST2  EQU   CMCPSTAT+1
CMCPST1  EQU   CMCPSTAT
@NM00152 EQU   MTRCLR+14
@NM00151 EQU   MTRPCT
@NM00150 EQU   MTRCLR+9
@NM00149 EQU   MTRCLR
@NM00148 EQU   MSGTRB
@NM00147 EQU   @NM00146
@NM00145 EQU   @NM00144
@NM00143 EQU   @NM00142
@NM00141 EQU   @NM00140
@NM00139 EQU   TRCCHRS
TRCXX1   EQU   TRCCHKA
@NM00133 EQU   MHDR+9
@NM00132 EQU   MHDR+2
@NM00131 EQU   MHF1
MHF1B0   EQU   MHF1
MHSEQ    EQU   MHDR
SQTMHDRS EQU   SQTENT+32
SQTNU    EQU   SQTENT+24
SQTQCBPT EQU   SQTENT+15
SQTQCB   EQU   SQTENT+8
SQTVVA   EQU   SQTENT+6
SQTSA2   EQU   SQTENT+5
SQTSDG   EQU   SQTBFLG2
@NM00130 EQU   SQTBFLG2
SQT2RCL  EQU   SQTBFLG2
@NM00129 EQU   SQTBFLG
SQTBFSA2 EQU   SQTBFLG
@NM00128 EQU   SQTBFLG
QCBXXXX  EQU   QCBEXT
@NM00127 EQU   QCBFLG2
QCBF2RS  EQU   QCBFLG2
@NM00126 EQU   QCBFLG2
QCBDSQ0  EQU   QCBFLG2
QCBMVTP  EQU   QCB+1
QCBFMVTP EQU   QCBFLG1
@NM00125 EQU   QCBFLG1
QCBEXC   EQU   QCBFLG1
@NM00113 EQU   VESDGNDX+2
WC0FMPPR EQU   WC0FAPCK
@NM00112 EQU   WC0FAPCK
WC0FAPVL EQU   WC0FAPCK
@NM00111 EQU   WC0FAPCK
@NM00110 EQU   WC0FP
WC0FPHIF EQU   WC0FP
@NM00109 EQU   WC0FP
@NM00108 EQU   WC0FINIT
DRCFADR  EQU   DRCFLGS
DRCFAPR  EQU   DRCFLGS
DRCFVAL  EQU   DRCFLGS
@NM00107 EQU   SAUCB+1
@NM00106 EQU   SAFLGS
SAFBSY   EQU   SAFLGS
@NM00105 EQU   DRDUCB+1
DRDDRC3  EQU   DRDFLGS
DRDDRC2  EQU   DRDFLGS
DRDDRC1  EQU   DRDFLGS
DRDDRC0  EQU   DRDFLGS
DRDFAPR  EQU   DRDFLGS
DRDFRDY  EQU   DRDFLGS
DRDFONL  EQU   DRDFLGS
DRDFVAL  EQU   DRDFLGS
@NM00104 EQU   DRCSA+2
CONDMVTP EQU   CONFDATA+2
CONA2D   EQU   CONDALTP
CONA2C   EQU   CONDALTP
CONA2B   EQU   CONDALTP
CONA2NU  EQU   CONDALTP
CONA1D   EQU   CONDALTP
CONA1C   EQU   CONDALTP
CONA1B   EQU   CONDALTP
CONA1NU  EQU   CONDALTP
CONDSDG  EQU   CONDCONF
CONDDTYP EQU   CONDCONF
CONDVINU EQU   CONDCONF
CONDNSHR EQU   CONDCONF
CXSACH   EQU   CXSACUCH
@NM00103 EQU   CXSACUCH
CXSACU   EQU   CXSACUCH
@NM00102 EQU   CONFXENT+1
@NM00101 EQU   CXCSCON
@NM00100 EQU   CXCSCON
MIDCFZZZ EQU   MIDCFLG2
MIDCFIF2 EQU   MIDCFIF
MIDCFIF1 EQU   MIDCFIF
MIDCFZZ1 EQU   MIDCFLG1
@NM00099 EQU   MIDCFLG1
@NM00098 EQU   MSGBDS+13
@NM00097 EQU   MSGBDS
@NM00096 EQU   MSGBMAP+48
@NM00095 EQU   MSGBMAP+33
@NM00094 EQU   MSGBMAP+22
ALTMONON EQU   ALTMONOF
@NM00093 EQU   MSGBMAP+11
ALMSCCU  EQU   ALMSCAD+1
ALMSCCH  EQU   ALMSCAD
@NM00092 EQU   MSGBMAP
QURES1   EQU   QUFLAG
QULIB    EQU   QUCODE
QURES    EQU   QUERYAR+5
ABIT     EQU   AVAILARY
OBIT     EQU   ONLINARY
EBIT     EQU   EXISTARY
@NM00077 EQU   DATAFLDS+33
@NM00076 EQU   DCONF35
@NM00075 EQU   DATAFLDS+27
@NM00074 EQU   DATAFLDS+18
@NM00073 EQU   DATAFLDS+10
DTYPE13  EQU   DTYPE14
@NM00072 EQU   DATAFLDS+3
@NM00071 EQU   DSSID+2
@NM00070 EQU   DSSID
@NM00065 EQU   MSG04TXT+14
@NM00064 EQU   MSG04RNG+3
@NM00063 EQU   MSG04CPU
@NM00062 EQU   MSG04TXT
LASMLLTF EQU   LASTLINE+2
LASTML0  EQU   LASTLINE
@NM00061 EQU   BYTE022
@NM00060 EQU   PABMAP
STTABL   EQU   STATFLG
@NM00059 EQU   STATFLG
@NM00058 EQU   STATFLG
@NM00057 EQU   CHAIN
@NM00056 EQU   DRCDRDST
DRCCSNOC EQU   DRCCSNO
@NM00055 EQU   DRCDRSS
@NM00054 EQU   DRCSAST
@NM00053 EQU   DRCSAID+2
@NM00052 EQU   DRCSAID
@NM00051 EQU   SDGVALS+5
SDGSDRU  EQU   SDGDCCST
SDGDCNA  EQU   SDGDCCST
SDGSANU  EQU   SDGSAST
SDGSANA  EQU   SDGSAST
@NM00050 EQU   CPDET+26
@NM00049 EQU   CPDSDG2
@NM00048 EQU   CPDSDG1
@NM00047 EQU   CPDFLGS
@NM00046 EQU   CPDSAST
CPDENTRY EQU   CPDTAB
CPHMSRDY EQU   CPHSTAT
@NM00045 EQU   CPHFLGS
CPHINTF2 EQU   CPHINTF
CPHINTF1 EQU   CPHINTF
CPHENTRY EQU   CPHTAB
GMLNG    EQU   GMLEN+1
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00008
UCBHALI  EQU   @NM00008
UCBRSV09 EQU   @NM00008
UCBRSV08 EQU   @NM00008
UCBRSV07 EQU   @NM00008
UCBRSV06 EQU   @NM00008
UCBRSV05 EQU   @NM00008
UCBRSV04 EQU   @NM00008
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00005 EQU   UCB
ICBLORD  EQU   ICBTRACE+256
ICBOTRC  EQU   ICBTRACE
ICBRESV  EQU   ICB2SSCB+128
ICBVOLST EQU   ICB2SSCB+124
ICBVSCRA EQU   ICB2SSCB+120
ICBSAMP  EQU   ICB2SSCB+118
ICBRESVD EQU   ICB2SSCB+117
ICBCPUID EQU   ICB2SSCB+112
ICBFAB   EQU   ICB2SSCB+108
ICBMSSC  EQU   ICB2SSCB+104
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBVVIC  EQU   ICB2SSCB+72
ICBSIOP  EQU   ICB2SSCB+68
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBFG3   EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00004 EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBI     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBQHEAD EQU   ICB2SSCB+36
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00003 EQU   CVTFIX+248
@NM00002 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
VVIUNUSD EQU   VVICB+116
VVINUSDC EQU   VVICB+112
VVITPFCH EQU   VVICB+108
VVIDVMEL EQU   VVICB+104
VVIVBSTF EQU   VVICB+100
VVISSOBA EQU   VVICB+96
VVIVSCRA EQU   VVICB+92
VVISTPTB EQU   VVICB+88
VVIDVMTA EQU   VVICB+84
VVIJUCB  EQU   VVICB+80
VVIIUCB  EQU   VVICB+76
VVIRES6  EQU   VVICB+72
VVIRES5  EQU   VVICB+68
VVIRES4  EQU   VVICB+64
VVIVJL   EQU   VVICB+56
VVIVRR   EQU   VVICB+52
VVIQLSPL EQU   VVICB+48
VVIQRPL2 EQU   VVICB+44
VVIQRPL1 EQU   VVICB+40
VVIVTRK  EQU   VVICB+37
VVIOPCD  EQU   VVICB+36
VVIVQMP  EQU   VVICB+32
VVIECB1  EQU   VVICB+28
VVICATAD EQU   VVICB+24
VVIDCBAD EQU   VVICB+20
VVIACBAD EQU   VVICB+16
VVIFLG7  EQU   VVIFLGA
VVIFLG6  EQU   VVIFLGA
VVIFLG5  EQU   VVIFLGA
VVIFLG4  EQU   VVIFLGA
VVIFLG3  EQU   VVIFLGA
VVIALCON EQU   VVICB+14
VVICPUID EQU   VVICB+12
VVIUCAT  EQU   VVICB+4
VVICID   EQU   VVICB
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00001 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
CWBAUTH  EQU   CWB+137
CWBVBCDE EQU   CWB+8
CWBFLGTH EQU   CWBFREE+1
CWBCHAIN EQU   CWB
*                                      END UNREFERENCED COMPONENTS
@RC00270 EQU   @RC00255
@RC00268 EQU   @RC00255
@RC00258 EQU   @RC00255
@RC00477 EQU   @RC00474
@RC00486 EQU   @RC00474
@RF00521 EQU   @RC00518
@RF00575 EQU   @RC00572
@RF00558 EQU   @RC00452
@RF00603 EQU   @RC00589
@RC00804 EQU   @RC00798
@RC00972 EQU   @RC00967
@RF00988 EQU   @RC00967
@RF01018 EQU   @RC01006
@RF01105 EQU   @RC01100
@RF01181 EQU   @RC01176
@RC01428 EQU   @RC01427
@RC01542 EQU   @RC01538
@RC01613 EQU   @RC01597
@RF01617 EQU   @RC01597
@RF01621 EQU   @RC01597
@RF01668 EQU   @RC01663
@RC01780 EQU   @RC01779
@RF01946 EQU   @RC01942
@RC01983 EQU   @RC01982
@RF02058 EQU   @RC02044
@RC02128 EQU   @RC02127
@RC02296 EQU   @RC02295
@RF02546 EQU   @RC02541
@RC02544 EQU   @RC02541
@RF00278 EQU   @RC00270
@RF00491 EQU   @RC00486
@RF00815 EQU   @RC00804
@ENDDATA EQU   *
         END   ICBMSG56,(C'PLS1109',0701,78180)
