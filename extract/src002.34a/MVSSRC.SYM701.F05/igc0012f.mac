         TITLE 'IGC0012F - MSSC SVC                                    *
                        '
*        /* DATE MACRO */
         MACRO
         DATEM
         LCLC  &FILL
&FILL    SETC  'CL8'.''''.'&SYSDATE'.''''
         DC    &FILL
         MEND
IGC0012F CSECT ,                                                   0002
@PROLOG  BALR  @08,0                                               0002
@PSTART  LA    @11,4095(,@08)                                      0002
         LA    @12,4095(,@11)                                      0002
         USING @PSTART,@08                                         0002
         USING @PSTART+4095,@11                                    0002
         USING @PSTART+8190,@12                                    0002
         LR    @09,@01                                             0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @10,@01                                             0002
         USING @DATD,@10                                           0002
         LR    @01,@09                                             0002
         ST    @13,@SA00001+4                                      0002
         LR    @13,@10                                             0002
IICBACRE DS    0H                                                  0009
IICBMCRT DS    0H                                                  0012
IICBDEFV DS    0H                                                  0014
IICBMODC DS    0H                                                  0016
IICBCOVV DS    0H                                                  0018
IICBCOVC DS    0H                                                  0020
IICBCOTB DS    0H                                                  0021
IICBVARF DS    0H                                                  0023
IICBVARN DS    0H                                                  0025
IICBMNT  DS    0H                                                  0026
IICBMNTD DS    0H                                                  0029
IICBPAIP DS    0H                                                  0031
IICBPAIR DS    0H                                                  0033
IICBASDA DS    0H                                                  0034
IICBTUNE DS    0H                                                  0036
IICBSUSP DS    0H                                                  0038
IICBTRAC DS    0H                                                  0040
IICBQUER DS    0H                                                  0042
IICBNULL DS    0H                                                  0048
*                                                                  0180
*                                                          /*@Y30LB00*/
         B     SSCSVC             BR AROUND EYE CATCHER        @Y30LB00
         DC    C'IGC0012F'        EYE CATCHER                  @Y30LB00
         DATEM
SSCSVC   EQU   *                  END OF EYE CATCHER           @Y30LB00
         ST    R14,TWELVE(R13)    SAVE REGISTER 14             @Y30LB00
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE THE INPUT BLOCK POINTER AND BASE REGS            @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*   R6=R1;                          /* SAVE ADDR OF INPUT BLK      0181
*                                                            @Y30LB00*/
         LR    R6,R1                                               0181
*   SAVBAS08=R8;                    /*                       @ZA27588*/
         ST    R8,SAVBAS08                                         0182
*   SAVBAS11=R11;                   /*                       @Y30LB00*/
         ST    R11,SAVBAS11                                        0183
*   SAVBAS12=R12;                   /*                       @Y30LB00*/
*                                                                  0184
         ST    R12,SAVBAS12                                        0184
*   /*****************************************************************/
*   /*                                                               */
*   /* ****************************************************  @Y30LB00*/
*   /*                                                       @Y30LB00*/
*   /* ZERO THE REASON CODE TO THE USER                      @Y30LB00*/
*   /*                                                       @Y30LB00*/
*   /* ****************************************************  @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*   RETNCODE=ZERO;                  /*                       @Y30LB00*/
*                                                                  0185
         SLR   @09,@09                                             0185
         ST    @09,RETNCODE                                        0185
*   /*****************************************************************/
*   /*                                                               */
*   /* ZERO THE INTERNAL SWITCHES AND STORAGE POINTERS       @Y30LB00*/
*   /* OF THE SVC                                            @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*   TCBPT=R4;                       /*                       @ZA27588*/
         ST    R4,TCBPT                                            0186
*   ASCBPTR=R7;                     /*                       @ZA27588*/
         ST    R7,ASCBPTR                                          0187
*   SWITCHES=ZERO;                  /*                       @Y30LB00*/
         ST    @09,SWITCHES                                        0188
*   IODATAPT=ZERO;                  /*                       @Y30LB00*/
         ST    @09,IODATAPT                                        0189
*   NEWELPTR=ZERO;                  /*                       @Y30LB00*/
         ST    @09,NEWELPTR                                        0190
*   INPUTREQ=ZERO;                  /*                       @Y30LB00*/
         ST    @09,INPUTREQ                                        0191
*   SSCDATAP=ZERO;                  /*                       @ZA11664*/
         ST    @09,SSCDATAP                                        0192
*   SAVETCBP=TCBPT;                 /*                       @Y30LB00*/
         L     @07,TCBPT                                           0193
         ST    @07,SAVETCBP                                        0193
*   SAVASCBP=ASCBPTR;               /*                       @Y30LB00*/
         L     @07,ASCBPTR                                         0194
         ST    @07,SAVASCBP                                        0194
*   ICBPTR=CVTICB;                  /* SET SSCB POINTER      @G24LB01*/
         L     @07,CVTPTR                                          0195
         L     @07,CVTEXT2(,@07)                                   0195
         L     @07,CVTICB(,@07)                                    0195
         ST    @07,ICBPTR                                          0195
*   RFY                                                            0196
*     ICB2SSCB BASED(ICBPTR);       /* SET BASE POINTER      @G24LB01*/
*/*   DETERMINE IF THE MSC IS AVAILABLE FOR USE.             @Y30LB00
*     IF THE POINTER IN THE CVT TO ICB CONTROL               @Y30LB00
*     BLOCK IS ZERO, THE MSC IS NOT AVAILABLE - SET          @Y30LB00
*     REASON CODE TO INDICATE MSC NOT AVAILABLE.  IF THE     @Y30LB00
*     CVT POINTER IS NOT ZERO, INITIALIZE THE SVC INTERNAL   @Y30LB00
*     POINTER TO THE ICB CONTROL BLOCK                       @Y30LB00*/
*                                                                  0197
*   IF CVTICB=ZERO THEN             /* IS ADDR OF ICB CONTROL      0197
*                                                            @Y30LB00
*                                      BLOCK IN CVT ZERO     @Y30LB00*/
         CR    @07,@09                                             0197
         BNE   @RF00197                                            0197
*     DO;                           /* SET ERROR CODE        @Y30LB00*/
*       VVICERR=B1ONE;              /*                       @Y30LB00*/
         OI    VVICERR,B'00010000'                                 0199
*       IF REQCODE=ACQUIRE×REQCODE=RELINQ THEN/*             @Y30LB00
*                                      IS ACQUIRE OR REL     @Y30LB00
*                                      REQUEST               @Y30LB00*/
         CLI   REQCODE(R6),2                                       0200
         BE    @RT00200                                            0200
         CLI   REQCODE(R6),4                                       0200
         BNE   @RF00200                                            0200
@RT00200 DS    0H                                                  0201
*         DO;                       /* GO SET COMPLETION CODE      0201
*                                                            @Y30LB00
*                                      IN EACH REQUEST       @Y30LB00*/
*           ARERRCD=CODE373;        /*                       @Y30LB00*/
         MVC   ARERRCD(4),@CF00788                                 0202
*           CALL ARERR2;            /* GO TO ROUTINE WHICH   @Y30LB00
*                                      INSERTS COMPLETION CODE     0203
*                                                            @Y30LB00
*                                      IN EACH REQUEST OF    @Y30LB00
*                                      CHAIN                 @Y30LB00*/
         BAL   @14,ARERR2                                          0203
*         END;                      /*                       @Y30LB00*/
*       ELSE                        /* NO ACQ/REL REQUEST    @Y30LB00*/
*         RETNCODE=CODE373;         /* SET REASON CODE       @Y30LB00*/
         B     @RC00200                                            0205
@RF00200 MVC   RETNCODE(4),@CF00788                                0205
*     END;                          /*                       @Y30LB00*/
@RC00200 DS    0H                                                  0207
*   IF RETNCODE=ZERO THEN           /* HAS ERROR BEEN DETECTED     0207
*                                                            @Y30LB00*/
@RF00197 L     @09,RETNCODE                                        0207
         LTR   @09,@09                                             0207
         BNZ   @RF00207                                            0207
*     DO;                           /* 1ST CODE CHECK PROCESS      0208
*                                                            @ZM31012*/
*                                                                  0208
*       /*************************************************************/
*       /*                                                           */
*       /* ****************************************************      */
*       /*                                                   @Y30LB00*/
*       /*                                                   @Y30LB00*/
*       /* ISSUE ESTAE MACRO FOR RECOVERY IN THE MSSC SVC    @Y30LB00*/
*       /*                                                   @Y30LB00*/
*       /* ****************************************************      */
*       /*                                                   @Y30LB00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0209
*       GEN REFS(R10,IESTAE);                                      0209
*                                                                  0209
*                                                          /*@Y30LB00*/
* ISSUE THE ESTAE MACRO TO GET RECOVERY FOR THE SSC SVC        @Y30LB00
         XC    IESTAE(ESTAPLEN),IESTAE CLEAR ESTAE PARM LIST   @Y30LB00
         MVI   IESTAE,TWENTY       SET FLAG BYTE               @Y30LB00
IESTAE00 ESTAE SVCESTAE,CT,PARAM=(R10),XCTL=YES,ESTAR=NO,      @Y30LB00*
               PURGE=QUIESCE,ASYNCH=YES,TERM=YES,RECORD=YES,   @Y30LB00*
               MF=(E,IESTAE)                                   @Y30LB00
*       /*************************************************************/
*       /*                                                           */
*       /* ****************************************************      */
*       /*                                                   @ZM31012*/
*       /*                                                   @ZM31012*/
*       /* DETERMINE IF THE HOST INTERFACE TO THE MSC HAS    @ZM31012*/
*       /* BEEN INITIALIZED BEFORE PROCESSING ANY REQUEST    @ZM31012*/
*       /* OTHER THAN AN INITIALIZE ORDER. IF THE INTERFACE  @ZM31012*/
*       /* HAS NOT BEEN INITIALIZED, THE SVC SETS AN REASON  @ZM31012*/
*       /* CODE INDICATING SUCH.                             @ZM31012*/
*       /* ****************************************************      */
*       /*                                                   @ZM31012*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0210
*       IF REQCODE^=INITCODE THEN   /* IS INITIALIZE REQ     @ZM31012
*                                      BEING PROCESSED       @ZM31012*/
         CLI   REQCODE(R6),16                                      0210
         BE    @RF00210                                            0210
*         DO;                       /* REQ IS NOT INIT       @ZM31012*/
*           IF ICBI^=B1ONE THEN     /* IS INTERFACE          @ZM31012
*                                      INITIALIZED           @ZM31012*/
         L     @09,ICBPTR                                          0212
         TM    ICBI(@09),B'10000000'                               0212
         BO    @RF00212                                            0212
*             DO;                   /* NO, SET ERROR CODE    @ZM31012*/
*               IF REQCODE=SEL×REQCODE=TRM THEN                    0214
         CLI   REQCODE(R6),137                                     0214
         BE    @RT00214                                            0214
         CLI   REQCODE(R6),138                                     0214
         BNE   @RF00214                                            0214
@RT00214 DS    0H                                                  0215
*                 DO;               /*                       @ZA24770*/
*                   R0=ZERO;        /* INDICATE 1ST ENTRY    @ZA24770
*                                      INTO MSVC FOR REQUEST @ZA24770*/
         SLR   R0,R0                                               0216
*                   R1=R6;          /* ADDRESS REQUEST       @ZA24770*/
         LR    R1,R6                                               0217
*                   RFY                                            0218
*                    (R13) RESTRICTED;/*                     @ZA24770*/
*                   R13=ADDR(SAVAREA);/*                     @ZA24770
*                                      SUPPLY REG SAVEAREA   @ZA24770*/
*                                                                  0219
         LA    R13,SAVAREA                                         0219
*                   /*************************************************/
*                   /*                                               */
*                   /* SEL& TRM REQUESTS GO TO SCREENING RTN @ZA24770*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0220
*                   R15=ICBVSCRA;   /* MSVC SCREENING RTN    @ZA24770*/
         L     @09,ICBPTR                                          0220
         L     R15,ICBVSCRA(,@09)                                  0220
*                   GEN REFS(R14,R15);                             0221
*                                                          /*@ZA24770*/
         BALR R14,R15             BRANCH TO MSVC               @ZA24770
*                   R13=R10;        /* RESTORE SVC SAVEAREA  @ZA24770*/
         LR    R13,R10                                             0222
*                   RFY                                            0223
*                    (R13) UNRESTRICTED;/*                   @ZA24770*/
*                   GO TO EXIT;     /* DONE WITH SVC THIS TRIP     0224
*                                                            @ZA24770*/
         B     EXIT                                                0224
*                 END;              /*                       @ZA24770*/
*               ELSE                                               0226
*                 DO;               /*                       @ZA24770*/
@RF00214 DS    0H                                                  0227
*                   VVICERR=B1ONE;  /*                       @ZM31012*/
         OI    VVICERR,B'00010000'                                 0227
*                   IF REQCODE=ACQUIRE×REQCODE=RELINQ/* IS ACQUIRE 0228
*                                                            @ZM31012*/
*                                                                  0228
*                   /*************************************************/
*                   /*                                               */
*                   /* OR RELINQUISH REQUEST                 @ZM31012*/
*                   /* BEING PROCESSED                       @ZM31012*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0228
*                     THEN          /* THIS IS ACQUIRE OR RELINQUISH
*                                                            @ZM31012*/
         CLI   REQCODE(R6),2                                       0228
         BE    @RT00228                                            0228
         CLI   REQCODE(R6),4                                       0228
         BNE   @RF00228                                            0228
@RT00228 DS    0H                                                  0229
*                     DO;           /* GO SET COMPLETION     @ZM31012
*                                      CODE IN EACH REQUEST  @ZM31012*/
*                       ARERRCD=CODE371;/*                   @ZM31012*/
         MVC   ARERRCD(4),@CF00792                                 0230
*                       CALL ARERR2;/* GO TO ROUTINE WHICH   @ZM31012
*                                      INSERTS COMPETION CODE      0231
*                                                            @ZM31012
*                                      IN EACH REQ OF CHAIN  @ZM31012*/
         BAL   @14,ARERR2                                          0231
*                     END;          /*                       @ZM31012*/
*                   ELSE            /* NOT ACQ/REL REQUEST   @ZM31012*/
*                     RETNCODE=CODE371;/* SET REASON CODE    @ZM31012*/
         B     @RC00228                                            0233
@RF00228 MVC   RETNCODE(4),@CF00792                                0233
*                 END;              /*                       @ZA24770*/
@RC00228 DS    0H                                                  0235
*             END;                  /*                       @ZM31012*/
*         END;                      /*                       @ZM31012*/
@RF00212 DS    0H                                                  0237
*       IF RETNCODE=ZERO THEN       /* HAS ERROR BEEN DETECTED     0237
*                                                            @ZM31012*/
@RF00210 L     @09,RETNCODE                                        0237
         LTR   @09,@09                                             0237
         BNZ   @RF00237                                            0237
*         DO;                       /* NO, CONTINUE PROCESSING     0238
*                                                            @ZM31012*/
*                                                                  0238
*           /*********************************************************/
*           /*                                                       */
*           /* ****************************************************  */
*           /*                                               @ZM31012*/
*           /*                                               @ZM31012*/
*           /* DETERMINE IF REQUEST IS FOR MSVC ONLY         @ZM31012*/
*           /*                                               @ZM31012*/
*           /* ****************************************************  */
*           /*                                               @ZM31012*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0239
*           IF VVICREQ=B1ONE THEN   /* IS MSVC REQUEST       #Y30LB00*/
         TM    VVICREQ(R6),B'10000000'                             0239
         BNO   @RF00239                                            0239
*             DO;                   /* REQUEST IS FOR MSVC   #Y30LB00*/
*               CALL MSVCONLY;      /* CALL SUB TO PROCESS   @G24LB01*/
         BAL   @14,MSVCONLY                                        0241
*             END;                  /*                       #Y30LB00*/
*           ELSE                    /* NOT MSVC REQUEST      #Y30LB00*/
*             DO;                   /* BEGIN TO PROCESSES    #Y30LB00
*                                      MSC REQUEST           #Y30LB00*/
*                                                                  0243
         B     @RC00239                                            0243
@RF00239 DS    0H                                                  0244
*               /*****************************************************/
*               /*                                                   */
*               /* ***************************************************/
*               /* **                                        #Y30LB00*/
*               /*                                           #Y30LB00*/
*               /* CHECK MOVE, DEFINE, COPY TABLES, COPY VOLUME,     */
*               /*                                           #Y30LB00*/
*               /* COPY CARTRIDGE, DEMOUNT AND ACQUIRE AND RELINQUISH*/
*               /*                                           @Y30LB00*/
*               /* IF DELAYED RESPONSE IS SPECIFIED, AND VARY OFF IF */
*               /*                                           @Y30LB00*/
*               /* VIRTUAL IS SPECIFIED AND TUNE WITH DISPLAY MODE   */
*               /*                                           @Y30LB00*/
*               /* TO INSURE THAT THE ECB IS VALID AND THAT THE      */
*               /* LENGTH                                    @Y30LB00*/
*               /* FOR ANY REQUEST IS CORRECT                @Y30LB00*/
*               /*                                           @Y30LB00*/
*               /* ***************************************************/
*               /* **                                        @Y30LB00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0244
*               CALL SYNCHK;        /* CALL SUBROUTINE WHICH @Y30LB00
*                                      SYNTAX CHECKS REQUEST @Y30LB00*/
         BAL   @14,SYNCHK                                          0244
*               IF RETNCODE=ZERO THEN/* IS REASON CODE ZERO  @Y30LB00*/
         L     @09,RETNCODE                                        0245
         LTR   @09,@09                                             0245
         BNZ   @RF00245                                            0245
*                 DO;               /* DO PREPARATION TO     @Y30LB00
*                                      ISSUE THE I/O         @Y30LB00*/
*                   CALL IOSTORG;   /* GET STORAGE FOR I/O   @ZM31012*/
*                                                                  0247
         BAL   @14,IOSTORG                                         0247
*                   /*************************************************/
*                   /*                                               */
*                   /* CHECK THE RETNCODE TO SEE IF THE STORAGE      */
*                   /* REQUIRED                              #Y30LB00*/
*                   /* FOR THE CHANNEL PROGRAM AND THE I/O CONTROL   */
*                   /* BLOCKS                                #Y30LB00*/
*                   /* COULD BE OBTAINED.                    @Y30LB00*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0248
*                   IF RETNCODE=ZERO THEN/* IS REASON CODE ZERO    0248
*                                                            @ZDR2048*/
         L     @09,RETNCODE                                        0248
         LTR   @09,@09                                             0248
         BNZ   @RF00248                                            0248
*                     DO;           /* CONTINUE I/O PREP     @ZDR2048*/
*                       IF REQCODE=DEMOUNT&/* TEST FOR DEMOUNT     0250
*                                                            @ZDR2048*/
*                           DMVUAVAL=B1ONE THEN/* AND VUA VALID    0250
*                                                            @ZDR2048*/
         CLI   REQCODE(R6),6                                       0250
         BNE   @RF00250                                            0250
         TM    DMVUAVAL(R6),B'00100000'                            0250
         BNO   @RF00250                                            0250
*                         DO;       /* DEMOUNT REQUEST       @ZDR2048*/
*                           DMTID=DMTIDCD;/* SET IOBX DEMOUNT CODE 0252
*                                                            @ZDR2048*/
         L     @09,SSCDATAP                                        0252
         MVC   DMTID(2,@09),DMTIDCD                                0252
*                           DMTCNT=ONE;/* SET DEMOUNT COUNT  @ZDR2048*/
         MVI   DMTCNT,X'01'                                        0253
*                         END;      /* END DEMOUNT GROUP     @ZDR2048*/
*                       ELSE        /* NOT DEMOUNT REQUEST   @ZDR2048*/
*                         DO;       /* NON DEMOUNT           @ZDR2048*/
         B     @RC00250                                            0255
@RF00250 DS    0H                                                  0256
*                           DMTID=DMTIDBL;/* BLANK IOBX DMT CODE   0256
*                                                            @ZDR2048*/
         L     @09,SSCDATAP                                        0256
         MVC   DMTID(2,@09),DMTIDBL                                0256
*                           DMTCNT=ZERO;/* CLEAR DEMOUNT COUNT     0257
*                                                            @ZDR2048*/
         MVI   DMTCNT,X'00'                                        0257
*                         END;      /* END NON DEMOUNT GROUP @ZDR2048*/
*                       DO UNTIL DMTCNT=ZERO;/* TWICE FOR DMT FAILS
*                                                            @ZDR2048*/
@RC00250 DS    0H                                                  0259
@DL00259 DS    0H                                                  0260
*                         IF DMTCNT=TWO THEN/* ON LAST DEMOUNT ?   0260
*                                                            @ZDR2048*/
         CLI   DMTCNT,2                                            0260
         BNE   @RF00260                                            0260
*                           DMTCNT=ZERO;/* SET COUNT TO EXIT VAL   0261
*                                                            @ZDR2048*/
         MVI   DMTCNT,X'00'                                        0261
*                         CALL REQSTLU;/* CALL SUB TO PROCESS REQ  0262
*                                                            @ZDR2048*/
@RF00260 BAL   @14,REQSTLU                                         0262
*                         IF VVICERR=B1ZERO THEN/* WAS SITUATION   0263
*                                      DETECTED              @ZDR2048
*                                      SUCH THAT MSVC SHOULD @ZDR2048
*                                      NOT BE CALLED         @ZDR2048*/
         TM    VVICERR,B'00010000'                                 0263
         BNZ   @RF00263                                            0263
*                           DO;     /* NO CHECK IF MSVC SHOULD     0264
*                                                            @ZDR2048
*                                      BE CALLED             @ZDR2048*/
*                             IF(REQCODE=MOUNT&MDVISMNT=B1ZERO)×/* 0265
*                                                            @ZDR2048*/
*                                 REQCODE=DEMOUNT×REQCODE=NULLCART×/*
*                                                            @ZDR2048*/
*                                 REQCODE=DEFINE×REQCODE=MOVE×/*   0265
*                                                            @ZDR2048*/
*                                 REQCODE=COPYV×REQCODE=COPYC×/*   0265
*                                                            @ZDR2048*/
*                                 REQCODE=PURGE×/*           @ZDR2048*/
*                                 (REQCODE=SUSPEND&SUPPRSW=B1ZERO)×/*
*                                                            @ZDR2048*/
*                                 (REQCODE=ACQUIRE&ARSEC=B1ONE)×/* 0265
*                                                            @G24LB01*/
*                                 (REQCODE=ASSOCIAT&(ASASSOC=B1ONE×/*
*                                                            @ZDR2048*/
*                                 ASDASSOC=B1ONE×ASDMNT=B1ONE×ASDEINT=
*                                 B1ONE))/*                  @ZDR2048*/
*                               THEN/*                       @ZDR2048
*                                      IS REQUEST ONE WHICH  @ZDR2048
*                                      REQUIRES A CALL TO MSVC     0265
*                                                            @ZDR2048
*                                      BEFORE EXITING THE SVC      0265
*                                                            @ZDR2048*/
         CLI   REQCODE(R6),8                                       0265
         BNE   @GL00014                                            0265
         TM    MDVISMNT(R6),B'01000000'                            0265
         BZ    @RT00265                                            0265
@GL00014 CLI   REQCODE(R6),6                                       0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),9                                       0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),24                                      0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),14                                      0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),42                                      0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),40                                      0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),20                                      0265
         BE    @RT00265                                            0265
         CLI   REQCODE(R6),34                                      0265
         BNE   @GL00006                                            0265
         TM    SUPPRSW(R6),B'00100000'                             0265
         BZ    @RT00265                                            0265
@GL00006 CLI   REQCODE(R6),2                                       0265
         BNE   @GL00005                                            0265
         L     @09,ARPTR                                           0265
         TM    ARSEC(@09),B'00010000'                              0265
         BO    @RT00265                                            0265
@GL00005 CLI   REQCODE(R6),44                                      0265
         BNE   @RF00265                                            0265
         TM    ASASSOC(R6),B'11000110'                             0265
         BZ    @RF00265                                            0265
@RT00265 DS    0H                                                  0266
*                               DO; /* CALL MSVC             @ZDR2048*/
*                                 SECVVIC=B1ONE;/* INDICATE SECOND 0267
*                                      ENTRY                 @ZDR2048
*                                      INTO MSVC FOR REQ     @ZDR2048*/
         OI    SECVVIC,B'10000000'                                 0267
*                                 R0=RETNCODE;/* SUPPLY REASON CODE
*                                      FOR                   @ZDR2048
*                                      REQUEST               @ZDR2048*/
         L     R0,RETNCODE                                         0268
*                                 R1=R6;/* ADDRESS REQUEST   @ZDR2048*/
         LR    R1,R6                                               0269
*                                 RFY                              0270
*                                  (R13) RESTRICTED;/*       @ZDR2048*/
*                                 R13=ADDR(SAVAREA);/* SUPPLY REG  0271
*                                      SAVEAREA              @ZDR2048*/
*                                                                  0271
         LA    R13,SAVAREA                                         0271
*                                 /***********************************/
*                                 /*                                 */
*                                 /* MSVC ACQ REQUESTS GO TO         */
*                                 /* SCREENING RTN           @G24LB01*/
*                                 /* OTHERS TO QUEUE MGR.    @G24LB01*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  0272
*                                 IF REQCODE=ACQUIRE THEN/*  @G24LB01*/
         CLI   REQCODE(R6),2                                       0272
         BNE   @RF00272                                            0272
*                                   R15=ICBVSCRA;/* MSVC SCREENING 0273
*                                      RTN                   @ZA24770*/
         L     @09,ICBPTR                                          0273
         L     R15,ICBVSCRA(,@09)                                  0273
*                                 ELSE/* SEND REQ TO QUEUE MGR     0274
*                                                            @G24LB01*/
*                                   R15=ICBVVIC;/* GET ADDRESS OF  0274
*                                      MSVC                  @G24LB01*/
         B     @RC00272                                            0274
@RF00272 L     @09,ICBPTR                                          0274
         L     R15,ICBVVIC(,@09)                                   0274
*                                 VVICERR=B1ONE;/* TO KEEP FROM    0275
*                                      CALLING               @ZDR2048
*                                      MSVC MORE THAN ONCE   @ZDR2048
*                                      AFTER A REQUEST       @ZDR2048*/
@RC00272 OI    VVICERR,B'00010000'                                 0275
*                                 GEN REFS(R14,R15);               0276
*                                                          /*@ZDR2048*/
                 BALR R14,R15              BRANCH TO MSVC      @ZDR2048
*                                 R13=R10;/* RESTORE SVC SAVEAREA  0277
*                                                            @ZDR2048*/
         LR    R13,R10                                             0277
*                                 SECVVIC=B1ZERO;/* INDICATE MSVC  0278
*                                      CALLED                @ZDR2048
*                                      SECOND TIME           @ZDR2048*/
         NI    SECVVIC,B'01111111'                                 0278
*                                 IF R15^=ZERO THEN/* DID MSVC RETURN
*                                      WITH                  @ZDR2048
*                                      ERROR                 @ZDR2048*/
         LTR   R15,R15                                             0279
         BZ    @RF00279                                            0279
*                                   RETNCODE=R0;/* REASON CODE IS SET
*                                      TO                    @ZDR2048
*                                      MSVC RETURN CODE      @ZDR2048*/
         ST    R0,RETNCODE                                         0280
*                                 RFY                              0281
*                                  (R13) UNRESTRICTED;/*     @ZDR2048*/
@RF00279 DS    0H                                                  0282
*                               END;/*                       @ZDR2048*/
*                           END;    /*                       @ZDR2048*/
@RF00265 DS    0H                                                  0284
*                         IF REQCODE=DEMOUNT THEN/* TEST FOR DEMOUNT
*                                                            @ZDR2048*/
@RF00263 CLI   REQCODE(R6),6                                       0284
         BNE   @RF00284                                            0284
*                           IF DMTCNT=ONE THEN/* TEST FOR FIRST DMNT
*                                                            @ZDR2048*/
         CLI   DMTCNT,1                                            0285
         BNE   @RF00285                                            0285
*                             IF RETNCODE=HEXC1 THEN/* C1 REASON CODE
*                                                            @ZDR2048*/
         CLC   RETNCODE(4),@CF02513                                0286
         BNE   @RF00286                                            0286
*                               DO; /* REISSUE DEMOUNT       @ZDR2048*/
*                                 DMVOL=DMTVOL;/* SENSE VOL TO ORDER
*                                                            @ZDR2048*/
         L     @09,SSCDATAP                                        0288
         MVC   DMVOL(6,R6),DMTVOL(@09)                             0288
*                                 DMTCNT=TWO;/* SET FOR DEMOUNT LOOP
*                                                            @ZDR2048*/
*                                                                  0289
         MVI   DMTCNT,X'02'                                        0289
*                                 /***********************************/
*                                 /*                                 */
*                                 /* CLEAR NECESSARY SWITCHES FOR    */
*                                 /* REENTRY                 @ZDR2048*/
*                                 /* TO REQSTLU CODE.        @ZDR2048*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  0290
*                                 VVICERR=B1ZERO;/*          @ZDR2048*/
         NI    VVICERR,B'11101111'                                 0290
*                                 IOCMP=B1ZERO;/*            @ZDR2048*/
*                                 IO=B1ZERO;/*               @ZDR2048*/
*                                 ELEMINV=B1ZERO;/*          @ZDR2048*/
         NI    IOCMP,B'11100110'                                   0293
*                                 ELEMSW=B1ZERO;/*           @ZDR2048*/
         NI    ELEMSW,B'01111111'                                  0294
*                                 ELEMQUE=B1ZERO;/*          @ZDR2048*/
         NI    ELEMQUE,B'11011111'                                 0295
*                                 RETNCODE=ZERO;/*           @ZDR2048*/
         SLR   @09,@09                                             0296
         ST    @09,RETNCODE                                        0296
*                               END;/* END REISSUE SETUP     @ZDR2048*/
*                             ELSE  /* NOT C1 REASON CODE    @ZDR2048*/
*                               DMTCNT=ZERO;/* END DEMOUNT LOOP    0298
*                                                            @ZDR2048*/
         B     @RC00286                                            0298
@RF00286 MVI   DMTCNT,X'00'                                        0298
*                       END;        /* END DEMOUNT DO UNTIL  @ZDR2048*/
@RC00286 DS    0H                                                  0299
@RF00285 DS    0H                                                  0299
@RF00284 DS    0H                                                  0299
@DE00259 CLI   DMTCNT,0                                            0299
         BNE   @DL00259                                            0299
*                       IF REQCODE=MSCREAD×REQCODE=MSCDUMP×/* QUERY
*                                      FUNCTIONS             @ZA13482*/
*                           REQCODE=CAUDIT THEN/* QUERY FUNCTIONS  0300
*                                                            @ZA13482*/
         CLI   REQCODE(R6),5                                       0300
         BE    @RT00300                                            0300
         CLI   REQCODE(R6),11                                      0300
         BE    @RT00300                                            0300
         CLI   REQCODE(R6),7                                       0300
         BNE   @RF00300                                            0300
@RT00300 DS    0H                                                  0301
*                         DO;       /* SET FREEMAIN LENGTH   @ZA13482*/
*                           IF RETNCODE=ZERO THEN/* GOOD RETURN TEST
*                                                            @ZA13482*/
         L     @09,RETNCODE                                        0302
         LTR   @09,@09                                             0302
         BNZ   @RF00302                                            0302
*                             DO;   /* MOVE DATA TO USER AREA      0303
*                                                            @ZA13482*/
*                               USER1=BUFF1;/* MOVE FIRST HALF DATA
*                                                            @ZA13482*/
         L     @09,QUPTR(,R6)                                      0304
         L     @07,BUFFPTR                                         0304
         MVC   USER1(256,@09),BUFF1(@07)                           0304
*                               USER2=BUFF2;/* MOVE SECOND HALF DATA
*                                                            @ZA13482*/
         MVC   USER2(256,@09),BUFF2(@07)                           0305
*                             END;  /* END MOVE DATA CODE    @ZA13482*/
*                           R0=IOLENGTH+ORDLENG+LENGTH(BUFFER);/* SET
*                                      FREEMAIN LEN          @ZA13482*/
@RF00302 L     R0,IOLENGTH                                         0307
         AL    R0,ORDLENG                                          0307
         AL    R0,@CF02475                                         0307
*                         END;      /* END FREEMAIN LENGTH CODE    0308
*                                                            @ZA13482*/
*                       ELSE        /* TEST FOR ACQ/REL REQUEST    0309
*                                                            @ZA13482*/
*                         IF ARSW=B1ONE THEN/* IS ACQ/REL REQUEST  0309
*                                                            @Y30LB00
*                                      BEING PROCESSED       @Y30LB00*/
         B     @RC00300                                            0309
@RF00300 TM    ARSW,B'00100000'                                    0309
         BNO   @RF00309                                            0309
*                           R0=IOLENGTH+(LISTLEN-EIGHT);/*   @Y30LB00
*                                      CALCULATE LENGTH OF I/O     0310
*                                                            @Y30LB00
*                                      AREA TO BE FREED      @Y30LB00*/
         L     R0,LISTLEN(,R6)                                     0310
         SL    R0,@CF00033                                         0310
         AL    R0,IOLENGTH                                         0310
*                         ELSE      /* NO ACQ/REL REQUEST    @Y30LB00*/
*                           R0=IOLENGTH+ORDLENG;/* CALCULATE LENGTH
*                                      OF I/O                @Y30LB00
*                                      AREA TO BE FREED      @Y30LB00*/
         B     @RC00309                                            0311
@RF00309 L     R0,IOLENGTH                                         0311
         AL    R0,ORDLENG                                          0311
*                       R1=ADDR(IFREEMAI);/*                 @Y30LB00*/
@RC00309 DS    0H                                                  0312
@RC00300 LA    R1,IFREEMAI                                         0312
*                       GEN REFS(R1,R0,IODATAPT);                  0313
*                                                          /*@Y30LB00*/
* FREE THE STORAGE FOR THE I/O CONTROL BLOCKS                  @Y30LB00
IFREEM10 FREEMAIN E,MF=(E,(R1)),LV=(R0),A=IODATAPT,SP=245,     @Y30LB00*
               RELATED=(SP245,IGC0012F(IGETMA10))              @Y30LB00
*                       IODATAPT=ZERO;/* CLEAR ADDR OF I/O BLKS    0314
*                                                            @Y30LB00*/
         SLR   @09,@09                                             0314
         ST    @09,IODATAPT                                        0314
*                       IOBLKSW=B1ZERO;/* INDICATE I/O BLKS FREED  0315
*                                                            @Y30LB00*/
         NI    IOBLKSW,B'11110111'                                 0315
*                     END;          /*                       @Y30LB00*/
*                 END;              /*                       @Y30LB00*/
@RF00248 DS    0H                                                  0318
*             END;                  /*                       @Y30LB00*/
@RF00245 DS    0H                                                  0319
*         END;                      /*                       @Y30LB00*/
@RC00239 DS    0H                                                  0320
*     END;                          /*                       @ZM31012*/
@RF00237 DS    0H                                                  0321
*EXIT:                                                             0321
*   IF ARSW=B1ONE THEN              /* IS ACQ/REL REQUEST    @ZA24770
*                                      BEING PROCESSED       @Y30LB00*/
@RF00207 DS    0H                                                  0321
EXIT     TM    ARSW,B'00100000'                                    0321
         BNO   @RF00321                                            0321
*     DO;                           /* SET EXIT FLAG         @Y30LB00*/
*       IF RELSW=B1ONE&RELERRSW=B1ONE THEN/*                 @Y30LB00
*                                      IS REL CHAIN WITH AN  @Y30LB00
*                                      ERROR                 @Y30LB00*/
         TM    RELSW,B'00001000'                                   0323
         BNO   @RF00323                                            0323
         TM    RELERRSW,B'10000000'                                0323
         BNO   @RF00323                                            0323
*         RETNCODE=FOUR;            /* SET RETURN CODE       @Y30LB00*/
         MVC   RETNCODE(4),@CF00076                                0324
*       RFY                                                        0325
*        (R2,                                                      0325
*         R9,                                                      0325
*         R13) RESTRICTED;          /*                       @ZA27588*/
@RF00323 DS    0H                                                  0326
*       R2=FOXFOX;                  /* SET EXIT FLAG         @Y30LB00*/
         LA    R2,255                                              0326
*     END;                          /*                       @Y30LB00*/
*   ELSE                            /* NOT ACQ/REL REQUEST   @Y30LB00*/
*     R2=ZERO;                      /* CLEAR ACQ/REL EXIT FLAG     0328
*                                                            @Y30LB00*/
         B     @RC00321                                            0328
@RF00321 SLR   R2,R2                                               0328
*   R9=RETNCODE;                    /* SAVE THE REASON CODE  @Y30LB00*/
@RC00321 L     R9,RETNCODE                                         0329
*   GEN REFS(R9,R13,R0,R1,R10,R2,R15,R14,R6);                      0330
*                                                          /*@ZA27588*/
         L     R13,TWELVE(R13)       SAVE RETURN ADDRESS       @ZA27588
         L     R0,@SIZDATD          LOAD SIZE OF DYNAMIC AREA  @Y30LB00
         LR    R1,R10               LOAD ADDR DYNAMIC AREA     @Y30LB00
IFREEM00 FREEMAIN R,LV=(R0),A=(R1)  FREE DYNAMIC AREA          @Y30LB00
         LTR   R2,R2                TEST FLAG REGISTER         @Y30LB00
         BZ    NOTAR                BRANCH IF NOT ACQ/REL      @Y30LB00
         SR    R0,R0                CLEAR REGISTER 0           @Y30LB00
         LR    R15,R9               LOAD RETURN CODE           @Y30LB00
         B     LOADREG              BR TO RESTORE R14          @Y30LB00
NOTAR    LR    R0,R9                LOAD REASON CODE           @Y30LB00
         SR    R15,R15              CLEAR REGISTER 15          @Y30LB00
         LTR   R0,R0                TEST ERROR CODE            @Y30LB00
         BZ    LOADREG              BR IF ERROR CODE 0         @Y30LB00
         LA    R15,FOUR             LOAD ERROR RETURN CODE     @Y30LB00
LOADREG  LR    R14,R13              RESTORE REGISTER 14        @ZA27588
         LR    R1,R6                RESTORE REGISTER 1 TO      @Y30LB00
*                                   THE ADDRESS OF THE         @Y30LB00
*                                   INPUT REQUEST              @Y30LB00
SVCEXIT  BR    R14                  BRANCH R14 - RETURN        @Y30LB00
FEDIAG   EQU   *                    FE DIAG WORDS              @ZDR2048
         DS    8F                   DIAG WORK AREA             @ZDR2048
*   RFY                                                            0331
*    (R2,                                                          0331
*     R9,                                                          0331
*     R13) UNRESTRICTED;            /*                       @ZA27588*/
*                                                                  0332
*/*  START OF SPECIFICATIONS ****                            @ZM31012
*                                                            @ZM31012
*01*  MODULE-NAME = IOSTORG                                  @ZM31012
*                                                            @ZM31012
*01*  FUNCTION =  THIS SUBROUTINE OBTAINS STORAGE NEEDED FOR @ZM31012
*     I/O TO THE MSC FOR THE REQUEST(S) BEING PROCESSED      @ZM31012
*     THE AMOUNT OF STORAGE NEEDED IS CALCULATED, AND        @ZM31012
*     IF THE GETMAIN IS UNSUCCESSFUL, THE APPROPRIATE        @ZM31012
*     REASON CODE IS INSERTED INTO EACH REQUEST.             @ZM31012
*                                                            @ZM31012
*02*    INPUT = THE FOLLOWING --                             @ZM31012
*              ACQUIRE OR RELINQUISH SWITCH SET              @ZM31012
*              ADDRESS OF REQUEST                            @ZM31012
*                                                            @ZM31012
*02*    OUTPUT = RETNCODE                                    @ZM31012
*           174 -- GETMAIN REQUEST FOR I/O BLOCKS FAILED     @ZM31012
*                                                            @ZM31012
*                                                            @ZM31012
**** END OF SPECIFICATIONS **                                @ZM31012*/
*                                                                  0332
*IOSTORG:                                                          0332
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* I/O STORAGE           @ZM31012*/
         B     @PB00002                                            0332
IOSTORG  DS    0H                                                  0333
*   DCL                                                            0333
*     R14IO POINTER(31);            /* TO SAVE REG 14 ON ENTRY     0333
*                                                            @ZM31012*/
*   R14IO=R14;                      /* SAVE INPUT REG 14     @ZM31012*/
         ST    R14,R14IO                                           0334
*/*   FOR MOUNT AND DEMOUNT, CALL SUB TO PUT PRIMARY UNIT    @ZDR2048
*     ADDRESS IN THE REQUEST BLOCK.                          @ZDR2048*/
*                                                                  0335
*   IF(REQCODE=MOUNT×(REQCODE=DEMOUNT&DMVUAVAL=B1ONE))&MDHOST=C5ZEROS
*     THEN                          /* ZA17173                       */
         CLI   REQCODE(R6),8                                       0335
         BE    @GL00022                                            0335
         CLI   REQCODE(R6),6                                       0335
         BNE   @RF00335                                            0335
         TM    DMVUAVAL(R6),B'00100000'                            0335
         BNO   @RF00335                                            0335
@GL00022 CLC   MDHOST(5,R6),C5ZEROS                                0335
         BNE   @RF00335                                            0335
*     CALL VUACK;                   /*                       @ZDR2048*/
*                                                                  0336
         BAL   @14,VUACK                                           0336
*   /*****************************************************************/
*   /*                                                               */
*   /* ****************************************************  @ZM31012*/
*   /*                                                       @ZM31012*/
*   /* CALCULATE THE LENGTH OF THE ORDER TO BE TRANSFERRED   @ZM31012*/
*   /*                                                       @ZM31012*/
*   /* ****************************************************  @ZM31012*/
*   /* IF REQUEST IS AN ACQ                                  @ZM31012*/
*   /* RELINQUISH, DEFINE,                                   @ZM31012*/
*   /* QUERY(MSCREAD,CAUDIT,                                 @Z40LB01*/
*   /* MSCDUMP),NULLC,                                       @Z40LB01*/
*   /* MOVE,COPYV CALCULATE                                  @ZM31012*/
*   /* THE LENGTH OF THE                                     @ZM31012*/
*   /* ORDER                                                 @ZM31012*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0337
*   IF REQCODE=ACQUIRE×REQCODE=RELINQ×/*                     @ZM31012*/
*       REQCODE=DEFINE×REQCODE=MOVE×/*                       @ZM31012*/
*       REQCODE=MSCREAD×REQCODE=CAUDIT×REQCODE=NULLCART×/*   @Z40LB01*/
*       REQCODE=MSCDUMP×            /*                       @Z40LB01*/
*       REQCODE=COPYV THEN          /*                       @ZM31012*/
@RF00335 CLI   REQCODE(R6),2                                       0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),4                                       0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),24                                      0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),14                                      0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),5                                       0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),7                                       0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),9                                       0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),11                                      0337
         BE    @RT00337                                            0337
         CLI   REQCODE(R6),42                                      0337
         BNE   @RF00337                                            0337
@RT00337 DS    0H                                                  0338
*     ORDLENG=LISTLEN-EIGHT;        /* CALCULATE LEN OF ORDER      0338
*                                                            @ZM31012*/
         L     @09,LISTLEN(,R6)                                    0338
         SL    @09,@CF00033                                        0338
         ST    @09,ORDLENG                                         0338
*   ELSE                            /* NOT ACQ, REL, DEFINE, @ZM31012
*                                      QUERY(MSCREAD,CAUDIT, @Z40LB01
*                                      MSCDUMP), NULLC,      @Z40LB01
*                                      MOVE, OR COPY VOLUME  @ZM31012
*                                      REQUEST               @ZM31012*/
*     IF REQCODE=MOUNT THEN         /* IS MOUNT REQUEST      @ZM31012*/
         B     @RC00337                                            0339
@RF00337 CLI   REQCODE(R6),8                                       0339
         BNE   @RF00339                                            0339
*       ORDLENG=LISTLEN-ELEVEN;     /* CALCULATE LEN OF ORDER      0340
*                                                            @ZM31012*/
         L     @09,LISTLEN(,R6)                                    0340
         SL    @09,@CF00034                                        0340
         ST    @09,ORDLENG                                         0340
*     ELSE                          /* NOT SPECIAL LENGTH    @ZD00155*/
*       ORDLENG=LISTLEN-FOUR;       /*                       @ZM31012
*                                      CALCULATE THE LENGTH  @ZM31012
*                                      OF THE OTHER ORDERS   @ZM31012*/
*                                                                  0341
         B     @RC00339                                            0341
@RF00339 L     @09,LISTLEN(,R6)                                    0341
         SL    @09,@CF00076                                        0341
         ST    @09,ORDLENG                                         0341
*   /*****************************************************************/
*   /*                                                               */
*   /* GET STORAGE FROM SQA FOR THE CHANNEL PROGRAM,         @ZM31012*/
*   /* THE I/O CONTROL BLOCKS - SRB, IOSB, MSSC DATA AREA,   @ZM31012*/
*   /* AND THE ORDER TO BE PASSED TO THE MSC. A              @ZM31012*/
*   /* CONDITIONAL GETMAIN IS ISSUED, IF STORAGE CAN NOT BE  @ZM31012*/
*   /* OBTAINED THE SVC SETS AN ERROR CODE INDICATING        @ZM31012*/
*   /* THAT STORAGE COULD NOT BE OBTAINED.                   @ZM31012*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0342
*   IOLENGTH=LENGTH(SRB)+LENGTH(IOSB)+LENGTH(SSCDATA)/*      @ZD00155*/
*       +LENGTH(CCWS)+LENGTH(NOOP1E);/*                      @ZD00155*/
@RC00339 DS    0H                                                  0342
@RC00337 MVC   IOLENGTH(4),@CF03059                                0342
*/*   FOR QUERY REQUESTS ADD BUFFER AREA TO GETMAIN LENGTH   @ZA13482*/
*                                                                  0343
*   IF REQCODE=MSCREAD×REQCODE=MSCDUMP×REQCODE=CAUDIT THEN/* @ZA13482*/
         CLI   REQCODE(R6),5                                       0343
         BE    @RT00343                                            0343
         CLI   REQCODE(R6),11                                      0343
         BE    @RT00343                                            0343
         CLI   REQCODE(R6),7                                       0343
         BNE   @RF00343                                            0343
@RT00343 DS    0H                                                  0344
*     R0=IOLENGTH+ORDLENG+LENGTH(BUFFER);/*                  @ZA13482*/
         L     R0,IOLENGTH                                         0344
         AL    R0,ORDLENG                                          0344
         AL    R0,@CF02475                                         0344
*   ELSE                            /* CALC LENGTH FOR NON QUERY   0345
*                                                            @ZA13482*/
*     R0=IOLENGTH+ORDLENG;          /*                       @ZM31012*/
         B     @RC00343                                            0345
@RF00343 L     R0,IOLENGTH                                         0345
         AL    R0,ORDLENG                                          0345
*   R1=ADDR(IGETMAIN);              /*                       @ZM31012*/
@RC00343 LA    R1,IGETMAIN                                         0346
*   GEN REFS(R1,R0,IODATAPT);                                      0347
*                                                          /*@ZM31012*/
* GETMAIN FOR THE IOB CONTROL BLOCKS                           @ZM31012
IGETMA10 GETMAIN EC,MF=(E,(R1)),LV=(R0),A=IODATAPT,SP=245,     @ZM31012*
               BNDRY=PAGE,                                     @ZA13482*
               RELATED=(SP245,IGC0012F(IFREEM10),              @ZM31012*
               SP245,IGC0012F(IFREEM11))                       @ZM31012
*   IF R15^=ZERO THEN               /* WAS STORAGE OBTAINED  @ZM31012*/
         LTR   R15,R15                                             0348
         BZ    @RF00348                                            0348
*     DO;                           /* SET REASON CODE       @ZM31012*/
*       VVICERR=B1ONE;              /*                       @ZM31012*/
         OI    VVICERR,B'00010000'                                 0350
*       IF ARSW=B1ONE THEN          /* IS ACQ/REL REQUEST    @ZM31012
*                                      BEING PROCESSED       @ZM31012*/
         TM    ARSW,B'00100000'                                    0351
         BNO   @RF00351                                            0351
*         DO;                       /* GO TO ROUTINE TO SET  @ZM31012
*                                      COMPLETION CODE IN EACH     0352
*                                                            @ZM31012
*                                      REQUEST IN CHAIN      @ZM31012*/
*           ARERRCD=CODE372;        /*                       @ZM31012*/
         MVC   ARERRCD(4),@CF00790                                 0353
*           CALL ARERR2;            /* GO TO ROUTINE TO SET  @ZM31012
*                                      COMPLETION CODE IN EACH     0354
*                                                            @ZM31012
*                                      REQUEST IN CHAIN      @ZM31012*/
         BAL   @14,ARERR2                                          0354
*         END;                      /*                       @ZM31012*/
*       ELSE                        /* NOT ACQ/REL REQUEST   @ZM31012*/
*         RETNCODE=CODE372;         /* SET THE REASON CODE   @ZM31012*/
         B     @RC00351                                            0356
@RF00351 MVC   RETNCODE(4),@CF00790                                0356
*     END;                          /*                       @ZM31012*/
*   ELSE                            /* STORAGE OBTAINED FOR  @ZM31012
*                                      THE I/O CONTROL BLKS  @ZM31012*/
*     DO;                           /* SET THE ADDRESSES OF  @ZM31012
*                                      I/O CONTROL BLKS      @ZM31012*/
*                                                                  0358
         B     @RC00348                                            0358
@RF00348 DS    0H                                                  0359
*       /*************************************************************/
*       /*                                                           */
*       /* GET ADDRESS OF CCW, SRB, IOSB, MSSC DATA AREA,    @ZM31012*/
*       /* I/O ECB AND ORDER AREA IN GETMAIN STORAGE         @ZM31012*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0359
*       CCWPTR=IODATAPT;            /*                       @ZM31012*/
         L     @09,IODATAPT                                        0359
         ST    @09,CCWPTR                                          0359
*       SRBPTR=IODATAPT+LENGTH(CCWS);/* POSITION OF SRB      @ZD00155*/
         LA    @07,24                                              0360
         ALR   @07,@09                                             0360
         ST    @07,SRBPTR                                          0360
*       IOSBPTR=IODATAPT+LENGTH(CCWS)+LENGTH(SRB);/*         @ZD00155*/
         LA    @07,68                                              0361
         ALR   @07,@09                                             0361
         ST    @07,IOSBPTR                                         0361
*       SSCDATAP=IODATAPT+LENGTH(CCWS)+LENGTH(SRB)+/*        @ZD00155*/
*           LENGTH(IOSB);           /*                       @ZM31012*/
         LA    @07,176                                             0362
         ALR   @07,@09                                             0362
         ST    @07,SSCDATAP                                        0362
*       IOECB=ZERO;                 /*                       @ZM31012*/
         SLR   @04,@04                                             0363
         ST    @04,IOECB(,@07)                                     0363
*       ORDPTR=IODATAPT+LENGTH(CCWS)+LENGTH(SRB)+/*          @ZD00155*/
*           LENGTH(IOSB)+LENGTH(SSCDATA);/*                  @ZM31012*/
         AL    @09,@CF03058                                        0364
         ST    @09,ORDPTR                                          0364
*       IF(REQCODE=SUSPEND&SUPPRSW=B1ONE) THEN/* SUSPEND     @ZD00155
*                                      PREP-TO-SWAP ?        @ZD00155*/
         CLI   REQCODE(R6),34                                      0365
         BNE   @RF00365                                            0365
         TM    SUPPRSW(R6),B'00100000'                             0365
         BNO   @RF00365                                            0365
*         NOOPPTR=IODATAPT+LENGTH(CCWS)+/*                   @ZD00155*/
*             LENGTH(SRB)+LENGTH(IOSB)+LENGTH(SSCDATA)/*     @ZD00155*/
*             +ORDLENG;             /*                       @ZD00155*/
         AL    @09,ORDLENG                                         0366
         ST    @09,NOOPPTR                                         0366
*       BUFFPTR=ORDPTR+LENGTH(NOOP1E)+ORDLENG;/* DATA AREA PTR     0367
*                                                            @ZA13482*/
@RF00365 LA    @09,4                                               0367
         AL    @09,ORDPTR                                          0367
         AL    @09,ORDLENG                                         0367
         ST    @09,BUFFPTR                                         0367
*     END;                          /*                       @ZM31012*/
*   R14=R14IO;                      /* RESTORE INPUT REG 14  @ZM31012*/
@RC00348 L     R14,R14IO                                           0369
*   RETURN;                         /*                       @ZM31012*/
@EL00002 DS    0H                                                  0370
@EF00002 DS    0H                                                  0370
@ER00002 BR    @14                                                 0370
*   END IOSTORG;                    /*                       @ZM31012*/
*                                                                  0372
*/*  START OF SPECIFICATIONS ****                            @ZM31012
*                                                            @ZM31012
*01*  MODULE-NAME = REQSTLU                                  @ZM31012
*                                                            @ZM31012
*01*  FUNCTION = THIS IS THE MAIN REQUEST PROCESSING LOOP OF @ZM31012
*     THIS MODULE                                            @ZM31012
*                                                            @ZM31012
*       FOR REQUESTS WHICH SPECIFY MORE THAN ONE MSC         @ZM31012
*       COMMUNICATION, THE LOOP IS EXECUTED AS MANY TIMES    @ZM31012
*       AS NECESSARY.  (ACQUIRE OR RELINQUISH REQUESTS MAY   @ZM31012
*       BE CHAINED, BUT NOT MIXED, BY PRESENT DESIGN).       @ZM31012
*                                                            @ZM31012
*       FOR OTHER REQUESTS, THE LOOP IS EXECUTED ONCE        @ZM31012
*                                                            @ZM31012
*       IF THE REQUEST ANTICIPATES A DELAYED RESPONSE        @ZM31012
*       FROM THE MSC, THE ROUTINE QUEELM IS CALLED           @ZM31012
*                                                            @ZM31012
*       MSVC IS CALLED FOR REQUESTS WHICH IT PROCESSES       @ZM31012
*                                                            @ZM31012
*       THE CONTROL BLOCKS FOR THE I/O ARE BUILT BY THE      @ZM31012
*       ROUTINE CCWBUILD                                     @ZM31012
*       THE ORDER FOR THE I/O IS BUILT BY ROUTINE MOVORDER   @ZM31012
*       THE CPU ID IS ADDED BY ROUTINE CPUID, IF REQUIRED    @ZM31012
*       THE ASID IS ADDED BY ROUTINE ASID, IF REQUIRED       @ZM31012
*                                                            @ZM31012
*       THIS ROUTINE BRANCHES TO THE FRONT END OF THE MSSC   @ZM31012
*       I/O DRIVER (ICB2SIOF) FOR EACH REQUEST TO BE ISSUED  @ZM31012
*       TO THE MSC AND WAITS FOR COMPLETION OF THAT REQUEST  @ZM31012
*       (DEVICE END AND CHANNEL END RETURNED BY THE MSC)     @ZM31012
*       -- NOTIFIED BY POSTING VIA THE MSSC I/O DRIVER       @ZM31012
*       TERMINATION ROUTINE (OR BACK END), ICB2SIOB          @ZM31012
*                                                            @ZM31012
*       AFTER COMPLETION OF THE I/O, THIS ROUTINE SETS THE   @ZM31012
*       APPROPRIATE REASON CODE IN EACH REQUEST              @ZM31012
*       IF NECESSARY, THE DELAYED RESPONSE QUEUE ELEMENT     @ZM31012
*       IS INVALIDATED (IN CASE OF MSVC OR I/O ERROR)        @ZM31012
*                                                            @ZM31012
*02*    INPUT = ADDRESS OF REQUEST BLOCK                     @ZM31012
*             INDICATION IF ACQUIRE OR RELINQUISH REQUEST    @ZM31012
*             ADDRESS OF STORAGE FOR I/O                     @ZM31012
*             ASSORTED ADDRESSES FROM MSSC CTL BLK           @ZM31012
*                                                            @ZM31012
*02*    OUTPUT = RETNCODE                                    @ZM31012
*             I/O TO MSC                                     @ZM31012
*                                                            @ZM31012
**** END OF SPECIFICATIONS **                                @X04AC00*/
*                                                                  0372
*REQSTLU:                                                          0372
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* REQUEST LOOP          @ZM31012*/
REQSTLU  DS    0H                                                  0373
*   DCL                                                            0373
*     R14LU POINTER(31);            /* SAVE INPUT R14        @ZM31012*/
*   DCL                                                            0374
*     IGC0112F ENTRY;               /* NEW MODULE FOR ACQUIRES     0374
*                                                            @ZA27588*/
*   R14LU=R14;                      /* SAVE CALLERS REG 14   @ZM31012*/
         ST    R14,R14LU                                           0375
*   IF ARSW=B1ONE THEN              /* IS ACQ/REL SWITCH ON  @ZM31012*/
         TM    ARSW,B'00100000'                                    0376
         BNO   @RF00376                                            0376
*     ARPTR=R6;                     /* ADDRESS FIRST REQUEST @ZM31012
*                                      IN CHAIN              @ZM31012*/
         ST    R6,ARPTR                                            0377
*   LOOPSW=B1ONE;                   /*                       @ZM31012*/
@RF00376 OI    LOOPSW,B'01000000'                                  0378
*   DO WHILE LOOPSW=B1ONE;          /* LOOP THRU REQUEST(S)  @ZM31012
*                                      ISSUING THE I/O       @ZM31012*/
         B     @DE00379                                            0379
@DL00379 DS    0H                                                  0380
*     IF ARSW=B1ONE THEN            /* IS ACQ/REL SWITCH ON  @ZM31012*/
         TM    ARSW,B'00100000'                                    0380
         BNO   @RF00380                                            0380
*       DO;                         /* CHECK IF DELAYED      @ZM31012
*                                      RESPONSE REQUEST      @ZM31012*/
*         ESTAEFLG=C2ZEROS;         /*                       @ZM31012*/
         SLR   @09,@09                                             0382
         STH   @09,ESTAEFLG                                        0382
*         ORDLENG=(ADDR(AREXT)-ADDR(AROP))+/*                @ZM31012*/
*             (ARNMEXT*FOUR);       /*                       @ZM31012
*                                      CALCULATE LENGTH OF   @ZM31012
*                                      ACQ/REL ORDER         @ZM31012*/
         L     @09,ARPTR                                           0383
         SLR   @07,@07                                             0383
         IC    @07,ARNMEXT(,@09)                                   0383
         SLA   @07,2                                               0383
         AL    @07,@CF00487                                        0383
         ST    @07,ORDLENG                                         0383
*         IF ACQSW=B1ONE THEN       /* IS ACQ SWITCH ON      @ZM31012*/
         TM    ACQSW,B'00010000'                                   0384
         BNO   @RF00384                                            0384
*           DO;                     /* CHECK FOR DELAYED     @ZM31012
*                                      RESPONSE REQUEST      @ZM31012*/
*             IF ARDRES=B1ONE THEN  /*                       @ZM31012
*                                      IS DELAYED RESPONSE   @ZM31012
*                                      FLAG ON               @ZM31012*/
         TM    ARDRES(@09),B'01000000'                             0386
         BNO   @RF00386                                            0386
*               DO;                 /* SAVE ECB ADDRESS      @ZM31012*/
*                 DRSWITCH=B1ONE;   /*                       @ZM31012
*                                      INDICATE DELAYED      @ZM31012
*                                      RESPONSE REQUEST      @ZM31012*/
         OI    DRSWITCH,B'10000000'                                0388
*                 DELRECB=ARECB;    /*                       @ZM31012
*                                      SAVE ECB ADDR         @ZM31012*/
         L     @09,ARECB(,@09)                                     0389
         ST    @09,DELRECB                                         0389
*               END;                /*                       @ZM31012*/
*           END;                    /*                       @ZM31012*/
*         ELSE                      /* RELINQUISH REQUEST    @ZM31012*/
*           DO;                     /* CHECK FOR DELAYED     @ZM31012
*                                      RESPONSE REQUEST      @ZM31012*/
         B     @RC00384                                            0392
@RF00384 DS    0H                                                  0393
*             IF ARCOMPC=ZERO THEN  /*                       @ZM31012
*                                      DOES REQUEST HAVE ZERO      0393
*                                                            @ZM31012
*                                      COMPLETION CODE       @ZM31012*/
         L     @09,ARPTR                                           0393
         LH    @07,ARCOMPC(,@09)                                   0393
         N     @07,@CF03081                                        0393
         LTR   @07,@07                                             0393
         BNZ   @RF00393                                            0393
*               DO;                 /* CHECK FOR DELAYED     @ZM31012
*                                      RESPONSE REQUEST      @ZM31012*/
*                 IF ARDRES=B1ONE THEN/*                     @ZM31012
*                                      IS DELAYED RESPONSE   @ZM31012
*                                      FLAG ON               @ZM31012*/
         TM    ARDRES(@09),B'01000000'                             0395
         BNO   @RF00395                                            0395
*                   DO;             /* SAVE ECB ADDRESS      @ZM31012*/
*                     DRSWITCH=B1ONE;/*                      @ZM31012
*                                      INDICATE DELAYED RESP @ZM31012
*                                      REQUEST               @ZM31012*/
         OI    DRSWITCH,B'10000000'                                0397
*                     DELRECB=ARECB;/*                       @ZM31012
*                                      SAVE ECB ADDR         @ZM31012*/
         L     @09,ARECB(,@09)                                     0398
         ST    @09,DELRECB                                         0398
*                   END;            /*                       @ZM31012*/
*               END;                /*                       @ZM31012*/
*             ELSE                  /* REQUEST IN ERROR      @ZM31012*/
*               RETNCODE=FOUR;      /*                       @ZM31012
*                                      SET REASON CODE TO 4  @ZM31012*/
         B     @RC00393                                            0401
@RF00393 MVC   RETNCODE(4),@CF00076                                0401
*           END;                    /*                       @ZM31012*/
@RC00393 DS    0H                                                  0403
*       END;                        /*                       @ZM31012*/
@RC00384 DS    0H                                                  0404
*/*  ******************************************************  @ZM31012*/
*/*                                                          @ZM31012*/
*/*   IF THE REQUEST HAS AN IMPLIED OR REQUESTED DELAYED     @ZM31012*/
*/*   RESPONSE, CREATE A QUEUE ELEMENT IN SQA AND QUEUE      @ZM31012*/
*/*   THE ELEMENT AT THE HEAD OF THE CHAIN                   @ZM31012*/
*/*                                                          @ZM31012*/
*/*  ******************************************************  @ZM31012*/
*                                                                  0404
*     IF DRSWITCH=B1ONE THEN        /* IS DELAYED RESPONSE   @ZM31012
*                                      REQUEST               @ZM31012*/
@RF00380 TM    DRSWITCH,B'10000000'                                0404
         BNO   @RF00404                                            0404
*       CALL QUEELM;                /* QUEUE DELAYED RESPONSE      0405
*                                                            @ZM31012
*                                      ELEMENT               @ZM31012*/
         BAL   @14,QUEELM                                          0405
*     IF RETNCODE=ZERO THEN         /* IS REASON CODE ZERO   @ZM31012*/
@RF00404 L     @09,RETNCODE                                        0406
         LTR   @09,@09                                             0406
         BNZ   @RF00406                                            0406
*       DO;                         /* SET UP I/O BLKS, ISSUE      0407
*                                                            @ZM31012
*                                      THE I/O               @ZM31012*/
*         INPUTREQ=ADDR(SAVEREQ);   /*                       @ZM31012*/
         LA    @09,SAVEREQ                                         0408
         ST    @09,INPUTREQ                                        0408
*         SAVEREQ(1:LISTLEN)=INPTLIST(1:LISTLEN);/*          @ZM31012*/
         L     @09,LISTLEN(,R6)                                    0409
         BCTR  @09,0                                               0409
         EX    @09,@SM03082                                        0409
*         IF(REQCODE=MOUNT&MDVISMNT=B1ZERO)/*                @ZM31012*/
*             ×REQCODE=DEMOUNT×     /*                       @ZM31012*/
*             REQCODE=NULLCART×     /*                       @Z40LB01*/
*             REQCODE=DEFINE×REQCODE=MOVE×/*                 @ZM31012*/
*             REQCODE=COPYV×REQCODE=COPYC×/*                 @ZM31012*/
*             (REQCODE=ACQUIRE&ARSEC=B1ONE)×/*               @G24LB01*/
*             (REQCODE=SUSPEND&SUPPRSW=B1ZERO)×REQCODE=PURGE×/*    0410
*                                                            @ZD00155*/
*             (REQCODE=ASSOCIAT&(ASASSOC=B1ONE×/*            @ZA05118*/
*             ASDASSOC=B1ONE×ASDMNT=B1ONE×ASDEINT=/*         @ZA05118*/
*             B1ONE))               /*                       @ZA05118*/
*           THEN                    /*                       @ZM31012
*                                      IS REQUEST ONE THAT   @ZM31012
*                                      MUST BE SENT TO MSVC  @ZM31012*/
         CLI   REQCODE(R6),8                                       0410
         BNE   @GL00045                                            0410
         TM    MDVISMNT(R6),B'01000000'                            0410
         BZ    @RT00410                                            0410
@GL00045 CLI   REQCODE(R6),6                                       0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),9                                       0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),24                                      0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),14                                      0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),42                                      0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),40                                      0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),2                                       0410
         BNE   @GL00038                                            0410
         L     @09,ARPTR                                           0410
         TM    ARSEC(@09),B'00010000'                              0410
         BO    @RT00410                                            0410
@GL00038 CLI   REQCODE(R6),34                                      0410
         BNE   @GL00037                                            0410
         TM    SUPPRSW(R6),B'00100000'                             0410
         BZ    @RT00410                                            0410
@GL00037 CLI   REQCODE(R6),20                                      0410
         BE    @RT00410                                            0410
         CLI   REQCODE(R6),44                                      0410
         BNE   @RF00410                                            0410
         TM    ASASSOC(R6),B'11000110'                             0410
         BZ    @RF00410                                            0410
@RT00410 DS    0H                                                  0411
*           DO;                     /* SEND REQUEST TO MSVC  @ZM31012*/
*             R0=ZERO;              /* INDICATE 1ST ENTRY    @ZM31012
*                                      INTO MSVC FOR REQUEST @ZM31012*/
         SLR   R0,R0                                               0412
*             R1=R6;                /* ADDRESS REQUEST       @ZM31012*/
         LR    R1,R6                                               0413
*             RFY                                                  0414
*              (R13) RESTRICTED;    /*                       @ZM31012*/
*             R13=ADDR(SAVAREA);    /*                       @ZM31012
*                                      SUPPLY REG SAVEAREA   @ZM31012*/
*                                                                  0415
         LA    R13,SAVAREA                                         0415
*             /*******************************************************/
*             /*                                                     */
*             /* MSVC ACQ REQUESTS GO TO SCREENING RTN       @G24LB01*/
*             /* OTHERS TO QUEUE MGR.                        @G24LB01*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0416
*             IF REQCODE=ACQUIRE THEN/*                      @G24LB01*/
         CLI   REQCODE(R6),2                                       0416
         BNE   @RF00416                                            0416
*               R15=ICBVSCRA;       /* MSVC SCREENING RTN    @ZA24770*/
         L     @09,ICBPTR                                          0417
         L     R15,ICBVSCRA(,@09)                                  0417
*             ELSE                  /* SEND REQ TO QUEUE MGR @G24LB01*/
*               R15=ICBVVIC;        /*                       @G24LB01
*                                      GET ADDR OF MSVC      @ZM31012*/
         B     @RC00416                                            0418
@RF00416 L     @09,ICBPTR                                          0418
         L     R15,ICBVVIC(,@09)                                   0418
*             VVICCALL=B1ONE;       /*                       @ZM31012*/
@RC00416 OI    VVICCALL,B'01000000'                                0419
*             GEN REFS(R14,R15);                                   0420
*                                                          /*@ZM31012*/
         BALR R14,R15             BRANCH TO MSVC               @ZM31012
*             R13=R10;              /* RESTORE SVC SAVEAREA  @ZM31012*/
         LR    R13,R10                                             0421
*             RFY                                                  0422
*              (R13) UNRESTRICTED;  /*                       @ZM31012*/
*             IF R15^=ZERO THEN     /*                       @ZM31012
*                                      DID MSVC DETECT AN    @ZM31012
*                                      ERROR                 @ZM31012*/
         LTR   R15,R15                                             0423
         BZ    @RF00423                                            0423
*               DO;                 /* SAVE MSVC ERROR       @ZM31012*/
*                 VVICERR=B1ONE;    /*                       @ZM31012
*                                      INDICATE MSVC DETECTED      0425
*                                                            @ZM31012
*                                      ERROR                 @ZM31012*/
         OI    VVICERR,B'00010000'                                 0425
*                 LOOPSW=B1ZERO;    /*                       @ZM31012
*                                      INDICATE GET OUT OF I/O     0426
*                                                            @ZM31012
*                                      LOOP                  @ZM31012*/
         NI    LOOPSW,B'10111111'                                  0426
*                 RETNCODE=R0;      /*                       @ZM31012
*                                      SAVE MSVC ERROR CODE  @ZM31012*/
         ST    R0,RETNCODE                                         0427
*                 IF DRSWITCH=B1ONE THEN/*                   @ZM31012
*                                      DID REQUEST HAVE      @ZM31012
*                                      A DELAYED RESPONSE    @ZM31012*/
         TM    DRSWITCH,B'10000000'                                0428
         BNO   @RF00428                                            0428
*                   DO;             /* INVALIDATE ELEMENT    @ZM31012*/
*                     QELFLG3=FOXFOX;/*                      @ZM31012*/
         L     @09,NEWELPTR                                        0430
         MVI   QELFLG3(@09),X'FF'                                  0430
*                     ELEMINV=B1ONE;/*                       @ZM31012
*                                      INDICATE QUEUE ELEMENT      0431
*                                                            @ZM31012
*                                      INVALIDATED FOR REQUEST     0431
*                                                            @ZM31012*/
         OI    ELEMINV,B'00000001'                                 0431
*                   END;            /*                       @ZM31012*/
*               END;                /*                       @ZM31012*/
*             ELSE                  /* MSVC DID NOT          @ZM31012
*                                      DETECT AN ERROR       @ZM31012*/
*               RETNCODE=ZERO;      /*                       @ZM31012
*                                      ZERO REASON CODE -    @ZM31012
*                                      NO ERROR INDICATION   @ZM31012*/
         B     @RC00423                                            0434
@RF00423 SLR   @09,@09                                             0434
         ST    @09,RETNCODE                                        0434
*           END;                    /*                       @ZM31012*/
@RC00423 DS    0H                                                  0436
*         IF RETNCODE=ZERO THEN     /*                       @ZM31012
*                                      HAS AN ERROR BEEN     @ZM31012
*                                      FOUND                 @ZM31012*/
@RF00410 L     @09,RETNCODE                                        0436
         LTR   @09,@09                                             0436
         BNZ   @RF00436                                            0436
*           DO;                     /* NO, CONTINUE WITH I/O @ZM31012*/
*             CALL IOBLKBLD;        /* SET UP IO BLOCKS      @ZM31012*/
         BAL   @14,IOBLKBLD                                        0438
*             CALL CCWBUILD;        /* BUILD THE CCWS        @ZM31012*/
         BAL   @14,CCWBUILD                                        0439
*             CALL MOVORDER;        /* MOVE ORDER INTO I/O BLK     0440
*                                                            @ZM31012
*                                      AREA                  @ZM31012*/
         BAL   @14,MOVORDER                                        0440
*             IF RETNCODE=ZERO THEN /* IF NON-ZERO THEN WAS QUERY LT
*                                      MSC AND NONE WAS AVAILABLE    */
         L     @09,RETNCODE                                        0441
         LTR   @09,@09                                             0441
         BNZ   @RF00441                                            0441
*               DO;                 /* CONTINUE OTHERWISE    @ZA27590*/
*                 CALL CPUID;       /* PUT CPUID INTO ORDER  @ZM31012*/
         BAL   @14,CPUID                                           0443
*                 IF DRSWITCH=B1ONE THEN/*                   @ZM31012
*                                      DOES THE REQUEST HAVE @ZM31012
*                                      A DELAYED RESPONSE    @ZM31012*/
         TM    DRSWITCH,B'10000000'                                0444
         BNO   @RF00444                                            0444
*                   CALL ASID;      /* GO INSERT ASID INTO   @ZM31012
*                                      THE ORDER             @ZM31012*/
*                                                                  0445
         BAL   @14,ASID                                            0445
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF ICBMSSC AND USERX1 ARE NOT ZERO THEN @G24LB01*/
*                 /* BRANCH TO TRAP EXIT ROUTINE.            @G24LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0446
*                 IF ICBMSSC^=ZERO&USERX1^=ZERO THEN/*       @G24LB01*/
@RF00444 SLR   @09,@09                                             0446
         L     @07,ICBPTR                                          0446
         L     @07,ICBMSSC(,@07)                                   0446
         CR    @07,@09                                             0446
         BE    @RF00446                                            0446
         C     @09,USERX1(,@07)                                    0446
         BE    @RF00446                                            0446
*                   DO;             /*                       @G24LB01*/
*                     R1=IOSBPTR;   /* SET R1 PTR TO IOSB    @G24LB01*/
         L     R1,IOSBPTR                                          0448
*                     RETNCODE=CODE377;/* SET SPECIAL RETCODE      0449
*                                                            @G24LB01*/
         MVC   RETNCODE(4),@CF00798                                0449
*                     GEN(STM  0,15,SAVAREA);/* SAVE REGS    @ZA17151*/
         STM  0,15,SAVAREA
*                     R15=USERX1;   /* SET BRANCH ENTRY      @ZA17151*/
         L     @09,ICBPTR                                          0451
         L     @09,ICBMSSC(,@09)                                   0451
         L     R15,USERX1(,@09)                                    0451
*                     GEN(BALR  14,15);/* BRANCH TRAP CODE   @G24LB01*/
         BALR  14,15
*                     GEN(LM   0,15,SAVAREA);/* RESTORE REGS @ZA17151*/
         LM   0,15,SAVAREA
*                     RETNCODE=ZERO;/* RESET RETURN CODE     @G24LB01*/
         SLR   @09,@09                                             0454
         ST    @09,RETNCODE                                        0454
*                   END;            /* END TRAP CODE         @G24LB01*/
*                                                                  0455
*                 /***************************************************/
*                 /*                                                 */
*                 /* OBTAIN THE ADDRESS OF THE SRB AND BRANCH        */
*                 /*                                         @ZM31012*/
*                 /* I/O DRIVER. WAIT FOR THE I/O TO BE POSTED.      */
*                 /*                                         @ZM31012*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0456
*                 IF REQCODE=ACQUIRE&ICBVOLST^=ZERO THEN/* CALL    0456
*                                      IGC0112F ?                    */
@RF00446 CLI   REQCODE(R6),2                                       0456
         BNE   @RF00456                                            0456
         L     @09,ICBPTR                                          0456
         L     @09,ICBVOLST(,@09)                                  0456
         LTR   @09,@09                                             0456
         BZ    @RF00456                                            0456
*                   DO;             /* YES , CALL TO SEE IF CAN ELIM
*                                      THIS ACQUIRE          @ZA27588*/
*                     RFY                                          0458
*                      (R13) RSTD;  /* SAVE MY SAVE AREA ADDR      0458
*                                                            @ZA27588*/
*                     R13=ADDR(SAVAREA);/*                   @ZA27588*/
         LA    R13,SAVAREA                                         0459
*                     RECOVERY=C7ZEROS;/* CLEAR ENQ AREA     @ZA27588*/
         MVC   RECOVERY(7),C7ZEROS                                 0460
*                     CALL IGC0112F(ICBPTR,ORDPTR,'BIO',RECOVERY);/*
*                                      BIO CALL                      */
         LA    @09,ICBPTR                                          0461
         ST    @09,@AL00001                                        0461
         LA    @09,ORDPTR                                          0461
         ST    @09,@AL00001+4                                      0461
         LA    @09,@CC02570                                        0461
         ST    @09,@AL00001+8                                      0461
         LA    @09,RECOVERY                                        0461
         ST    @09,@AL00001+12                                     0461
         L     @15,@CV02563                                        0461
         LA    @01,@AL00001                                        0461
         BALR  @14,@15                                             0461
*                     R13=R10;      /* RESET DATA AREA ADDR  @ZA27588*/
         LR    R13,R10                                             0462
*                     RFY                                          0463
*                      (R13) UNRSTD;/* RELEASE R13 TO COMPILER     0463
*                                                            @ZA27588*/
*                     IF R15=FOUR THEN/* CAN I ELIM THIS ACQUIRE ? 0464
*                                                            @ZA27588*/
         C     R15,@CF00076                                        0464
         BNE   @RF00464                                            0464
*                       DO;         /* YES. SET UP TO LOOK LIKE I/O
*                                      DONE                  @ZA27588*/
*                         R15=ZERO; /* SET GOOD RETURN CODE  @ZA27588*/
         SLR   R15,R15                                             0466
*                         ECBCODE=C7FH;/* SET GOOD POST CODE @ZA27588*/
         L     @09,SSCDATAP                                        0467
         MVI   ECBCODE(@09),X'7F'                                  0467
*                         IO=B1ONE; /* INDICATE I/O ISSUED   @ZA27588*/
         OI    IO,B'00010000'                                      0468
*                         GO TO BYPASSIO;/* NOW SKIP I/O     @ZA27588*/
         B     BYPASSIO                                            0469
*                       END;        /*                       @ZA27588*/
*                   END;            /*                       @ZA27588*/
@RF00464 DS    0H                                                  0472
*                 R1=SRBPTR;        /* ADDRESS OF THE SRB    @ZM31012*/
@RF00456 L     R1,SRBPTR                                           0472
*                 RFY                                              0473
*                  (R13) RESTRICTED;/*                       @ZM31012*/
*                 R13=ADDR(SAVAREA);/*                       @ZM31012
*                                      SUPPLY REG SAVEAREA   @ZM31012*/
         LA    R13,SAVAREA                                         0474
*                 R15=ICBSIOP;      /* GET ADDR OF FRONT END @ZM31012
*                                      OF I/O DRIVER         @ZM31012*/
         L     @09,ICBPTR                                          0475
         L     R15,ICBSIOP(,@09)                                   0475
*                 GENERATE REFS(R14,R15);                          0476
*                                                          /*@ZM31012*/
         BALR  R14,R15            BRANCH TO I/O DRIVER         @ZM31012
*                 IO=B1ONE;         /* INDICATE I/O ISSUED   @ZM31012*/
         OI    IO,B'00010000'                                      0477
*                 R13=R10;          /* RESTORE SVC SAVE AREA @ZM31012*/
         LR    R13,R10                                             0478
*                 RFY                                              0479
*                  (R13) UNRESTRICTED;/*                     @ZM31012*/
*                 IF R15=ZERO THEN  /*                       @ZM31012
*                                      DID I/O DRIVER ISSUE  @ZM31012
*                                      THE I/O               @ZM31012*/
         LTR   R15,R15                                             0480
         BNZ   @RF00480                                            0480
*                   DO;             /* YES, WAIT TO COMPLETE @ZM31012*/
*                     RFY                                          0482
*                      (R9) RESTRICTED;/*                    @ZA27588*/
*                     R9=ADDR(IOECB);/* ADDRESS OF THE I/O ECB     0483
*                                                            @ZA27588*/
         L     R9,SSCDATAP                                         0483
*                     GENERATE REFS(R9);                           0484
*                                                          /*@ZA27588*/
IWAIT    WAIT  ECB=(R9)           WAIT FOR I/O TO COMPLETE     @ZA27588
*                     RFY                                          0485
*                      (R9) UNRESTRICTED;/*                  @ZA27588*/
*                     R15=ZERO;     /*                       @ZM31012*/
         SLR   R15,R15                                             0486
*                   END;            /*                       @ZM31012*/
*                                                                  0487
*                 /***************************************************/
*                 /*                                                 */
*                 /* *************************************************/
*                 /* ****                                    @ZA30410*/
*                 /* UPDATE AND SHIFT THE ORDER TRACE AREA DATA, THEN*/
*                 /*                                         @ZA30410*/
*                 /* MOVE INTO THE LAST ORDER FIELD THE PARAMETERS IN*/
*                 /*                                         @ZA30410*/
*                 /* THE INPUT REQUEST BLOCK STARTING WITH BYTE 4.   */
*                 /*                                         @ZA30410*/
*                 /* INSERT THE IOERRCD INTO THE SECOND BYTE OF THE  */
*                 /*                                         @ZA30410*/
*                 /* LAST ORDER FIELD(IMMEDIATELY FOLLOWING THE ORDER*/
*                 /*                                         @ZA30410*/
*                 /* CODE.)                                  @ZA30410*/
*                 /* *************************************************/
*                 /* ****                                    @ZA30410*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0488
*                 RFY                                              0488
*                  (R9) RESTRICTED; /*                       @ZA30410*/
@RF00480 DS    0H                                                  0489
*                 IF ARSW=B1ONE THEN/* IS ACQ/REL REQ BEING  @ZA30410
*                                      PROCESSED             @ZA30410*/
         TM    ARSW,B'00100000'                                    0489
         BNO   @RF00489                                            0489
*                   R9=ARPTR;       /* SAVE REQ BLK POINTER  @ZA30410*/
         L     R9,ARPTR                                            0490
*                 ELSE              /* NOT ACQ/REL REQUEST   @ZA30410*/
*                   R9=R6;          /* SAVE ADDR OF REQUEST  @ZA30410*/
         B     @RC00489                                            0491
@RF00489 LR    R9,R6                                               0491
*                 ICBOTRC=ICBTRACE(TRCENTLN+1:TRCENTLN+LENGTH(ICBOTRC))
*                     ;             /*                       @ZA30410*/
@RC00489 L     @07,ICBPTR                                          0492
         MVC   @TS00001(256),ICBTRACE+16(@07)                      0492
         MVC   ICBOTRC(256,@07),@TS00001                           0492
*                 ICBLORD=''B;      /*                       @ZA30410*/
         XC    ICBLORD(128,@07),ICBLORD(@07)                       0493
*                 IF LISTLEN<=ONE32 THEN/* MOVE COMPLETE PARM LIST 0494
*                                                            @ZA30410*/
         L     @04,LISTLEN(,R6)                                    0494
         C     @04,@CF02521                                        0494
         BH    @RF00494                                            0494
*                   ICBLORD(1:LISTLEN-4)=R9->DATAAREA(5:LISTLEN);/*
*                                                            @ZA30410*/
         SL    @04,@CF00084                                        0495
         EX    @04,@SM03086                                        0495
*                 ELSE              /* PARM GREATER THAN 132 BYTES 0496
*                                                            @ZA30410*/
*                   ICBLORD=R9->DATAAREA(5:ONE32);/* LIMIT TO 128  0496
*                                      BYTES                 @ZA30410*/
         B     @RC00494                                            0496
@RF00494 L     @07,ICBPTR                                          0496
         MVC   ICBLORD(128,@07),DATAAREA+4(R9)                     0496
*                 ICBLORD(2:2)=IOERRCD;/* INSERT ERROR CODE  @ZA30410*/
@RC00494 L     @07,SSCDATAP                                        0497
         LH    @07,IOERRCD(,@07)                                   0497
         L     @04,ICBPTR                                          0497
         STC   @07,ICBLORD+1(,@04)                                 0497
*                 RFY                                              0498
*                  (R9) UNRESTRICTED;/*                      @Y30LB00*/
*BYPASSIO:                          /*                       @ZA27588*/
*                 IOCMP=B1ONE;      /*                       @ZM31085*/
*                                                                  0499
BYPASSIO OI    IOCMP,B'00001000'                                   0499
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF ICBMSSC AND USERX2 ARE NOT ZERO THEN @G24LB01*/
*                 /* BRANCH TO TRAP EXIT ROUTINE.            @G24LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0500
*                 IF ICBMSSC^=ZERO&USERX2^=ZERO THEN/*       @G24LB01*/
         SLR   @09,@09                                             0500
         L     @07,ICBPTR                                          0500
         L     @07,ICBMSSC(,@07)                                   0500
         CR    @07,@09                                             0500
         BE    @RF00500                                            0500
         C     @09,USERX2(,@07)                                    0500
         BE    @RF00500                                            0500
*                   DO;             /*                       @G24LB01*/
*                     R1=IOSBPTR;   /* POINT TO IOB          @G24LB01*/
         L     R1,IOSBPTR                                          0502
*                     GEN(STM  0,15,SAVAREA);/* SAVE REGS    @ZA17151*/
         STM  0,15,SAVAREA
*                     R15=USERX2;   /* SET BRANCH ENTRY      @G24LB01*/
         L     @09,ICBPTR                                          0504
         L     @09,ICBMSSC(,@09)                                   0504
         L     R15,USERX2(,@09)                                    0504
*                     GEN(BALR  14,15);/* BRANCH TRAP CODE   @G24LB01*/
         BALR  14,15
*                     GEN(LM   0,15,SAVAREA);/* RESTORE REGS @ZA17151*/
         LM   0,15,SAVAREA
*                   END;            /* END TRAP CODE         @G24LB01*/
*                                                                  0507
*                 /***************************************************/
*                 /*                                                 */
*                 /* TEST TO DETERMINE IF I/O PROCESSING OF THE MSC  */
*                 /*                                         @Y30LB00*/
*                 /* REQUEST COMPLETED WITHOUT ERROR.        @ZM31012*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0508
*                 IF ECBCODE^=C7FH×R15^=ZERO THEN/*          @ZM31012
*                                      DID I/O HAVE ERROR    @ZM31012*/
@RF00500 L     @09,SSCDATAP                                        0508
         CLI   ECBCODE(@09),127                                    0508
         BNE   @RT00508                                            0508
         LTR   R15,R15                                             0508
         BZ    @RF00508                                            0508
@RT00508 DS    0H                                                  0509
*                   DO;             /* SAVE ERROR CODE       @ZM31012*/
*                     IOBAD=B1ONE;  /*                       @ZM31012*/
         OI    IOBAD,B'00000010'                                   0510
*                     IF ARSW=B1ONE THEN/*                   @ZM31012
*                                      IS ACQ/REL SWITCH ON  @ZM31012*/
         TM    ARSW,B'00100000'                                    0511
         BNO   @RF00511                                            0511
*                       DO;         /* SET ERROR IN REQUEST  @ZM31012*/
*                         ARCOMPC=IOERRCD;/*                 @ZM31012*/
         L     @09,SSCDATAP                                        0513
         LH    @09,IOERRCD(,@09)                                   0513
         L     @07,ARPTR                                           0513
         STH   @09,ARCOMPC(,@07)                                   0513
*                         IF ACQSW=B1ONE THEN/*              @ZM31012
*                                      IS ACQ SWITCH ON      @ZM31012*/
         TM    ACQSW,B'00010000'                                   0514
         BNO   @RF00514                                            0514
*                           DO;     /* GO SET NO-FURTHER     @ZM31012
*                                      PROCESSING IN REST OF @ZM31012
*                                      REQUESTS IN CHAIN     @ZM31012*/
*                             ARERRCD=CODE368;/*             @ZM31012*/
         MVC   ARERRCD(4),@CF00796                                 0516
*                             CALL ARERR1;/*                 @ZM31012
*                                      GO SET NO-FURTHER-    @ZM31012
*                                      PROCESSING COMP CODE  @ZM31012
*                                      IN SUBSEQUENT REQS IN @ZM31012
*                                      CHAIN                 @ZM31012*/
         BAL   @14,ARERR1                                          0517
*                             IF ICBVOLST^=ZERO THEN/* CALL IGC0112F
*                                      ?                     @ZA27588*/
         L     @09,ICBPTR                                          0518
         L     @09,ICBVOLST(,@09)                                  0518
         LTR   @09,@09                                             0518
         BZ    @RF00518                                            0518
*                               DO; /* YES , CALL TO RESET CYLINDERS
*                                      ACQUIRED INDICATORS           */
*                                 RFY                              0520
*                                  (R13) RSTD;/* SAVE MY SAVE AREA 0520
*                                      ADDR                  @ZA27588*/
*                                 R13=ADDR(SAVAREA);/*       @ZA27588*/
         LA    R13,SAVAREA                                         0521
*                                 RECOVERY=C7ZEROS;/* CLEAR ENQ AREA
*                                                            @ZA27588*/
         MVC   RECOVERY(7),C7ZEROS                                 0522
*                                 CALL IGC0112F(ICBPTR,ORDPTR,'EIO',
*                                     RECOVERY);/* EIO CALL          */
         LA    @09,ICBPTR                                          0523
         ST    @09,@AL00001                                        0523
         LA    @09,ORDPTR                                          0523
         ST    @09,@AL00001+4                                      0523
         LA    @09,@CC02575                                        0523
         ST    @09,@AL00001+8                                      0523
         LA    @09,RECOVERY                                        0523
         ST    @09,@AL00001+12                                     0523
         L     @15,@CV02563                                        0523
         LA    @01,@AL00001                                        0523
         BALR  @14,@15                                             0523
*                                 R13=R10;/* RESET DATA AREA ADDR  0524
*                                                            @ZA27588*/
         LR    R13,R10                                             0524
*                                 RFY                              0525
*                                  (R13) UNRSTD;/* RELEASE R13 TO  0525
*                                      COMPILER              @ZA27588*/
*                               END;/*                       @ZA27588*/
*                           END;    /*                       @ZM31012*/
*                         ELSE      /* RELINQUISH REQUEST    @ZM31012*/
*                           RELERRSW=B1ONE;/*                @ZM31012
*                                      SET REL ERROR SWITCH ON     0528
*                                                            @ZM31012*/
         B     @RC00514                                            0528
@RF00514 OI    RELERRSW,B'10000000'                                0528
*                       END;        /*                       @ZM31012*/
*                     ELSE          /* NOT ACQ/REL REQUEST   @ZM31012*/
*                       RETNCODE=IOERRCD;/*                  @ZM31012
*                                      SET REASON CODE TO    @ZM31012
*                                      ERROR                 @ZM31012*/
*                                                                  0530
         B     @RC00511                                            0530
@RF00511 L     @09,SSCDATAP                                        0530
         LH    @09,IOERRCD(,@09)                                   0530
         ST    @09,RETNCODE                                        0530
*                     /***********************************************/
*                     /*                                             */
*                     /* IF THE REQUEST HAS AN IMPLIED OR REQUESTED  */
*                     /* DELAYED                             @ZM31012*/
*                     /* RESPONSE, THE ELEMENT QUEUED FOR THE REQUEST*/
*                     /* MUST                                @ZM31012*/
*                     /* BE MARKED INVALID                   @ZM31012*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0531
*                     IF DRSWITCH=B1ONE THEN/*               @ZM31012
*                                      DID REQUEST HAVE A    @ZM31012
*                                      DELAYED RESPONSE      @ZM31012*/
@RC00511 TM    DRSWITCH,B'10000000'                                0531
         BNO   @RF00531                                            0531
*                       DO;         /* INVALIDATE DELAYED    @ZM31012
*                                      RESPONSE ELEMENT ON   @ZM31012
*                                      QUEUE                 @ZM31012*/
*                         QELFLG3=FOXFOX;/*                  @ZM31012*/
         L     @09,NEWELPTR                                        0533
         MVI   QELFLG3(@09),X'FF'                                  0533
*                         ELEMINV=B1ONE;/*                   @ZM31012
*                                      INDICATE QUEUE ELEMENT      0534
*                                                            @ZM31012
*                                      INVALIDATED FOR REQ   @ZM31012*/
         OI    ELEMINV,B'00000001'                                 0534
*                       END;        /*                       @ZM31012*/
*                   END;            /*                       @ZM31012*/
*                 ELSE              /* I/O DID NOT HAVE ERROR      0537
*                                                            @ZM31012*/
*                   DO;             /* CHECK OF VARY REQUEST @ZM31012*/
         B     @RC00508                                            0537
@RF00508 DS    0H                                                  0538
*                     IF ICBVOLST^=ZERO&(REQCODE=DEMOUNT×REQCODE=PURGE×
*                                   /*                       @ZA27588*/
*                         REQCODE=SUSPEND×REQCODE=ASSOCIAT×REQCODE=
*                         RELINQ) THEN/*                     @ZA27588*/
         L     @09,ICBPTR                                          0538
         L     @09,ICBVOLST(,@09)                                  0538
         LTR   @09,@09                                             0538
         BZ    @RF00538                                            0538
         CLI   REQCODE(R6),6                                       0538
         BE    @RT00538                                            0538
         CLI   REQCODE(R6),20                                      0538
         BE    @RT00538                                            0538
         CLI   REQCODE(R6),34                                      0538
         BE    @RT00538                                            0538
         CLI   REQCODE(R6),44                                      0538
         BE    @RT00538                                            0538
         CLI   REQCODE(R6),4                                       0538
         BNE   @RF00538                                            0538
@RT00538 DS    0H                                                  0539
*                       DO;         /* PERFORM MAINTENANCE ON VOLUME
*                                      LIST                  @ZA27588*/
*                         RFY                                      0540
*                          (R13) RSTD;/* SAVE MY SAVE AREA ADDR    0540
*                                                            @ZA27588*/
*                         R13=ADDR(SAVAREA);/*               @ZA27588*/
         LA    R13,SAVAREA                                         0541
*                         RECOVERY=C7ZEROS;/* CLEAR ENQ AREA @ZA27588*/
         MVC   RECOVERY(7),C7ZEROS                                 0542
*                         CALL IGC0112F(ICBPTR,ORDPTR,'AIO',RECOVERY);
         LA    @09,ICBPTR                                          0543
         ST    @09,@AL00001                                        0543
         LA    @09,ORDPTR                                          0543
         ST    @09,@AL00001+4                                      0543
         LA    @09,@CC02576                                        0543
         ST    @09,@AL00001+8                                      0543
         LA    @09,RECOVERY                                        0543
         ST    @09,@AL00001+12                                     0543
         L     @15,@CV02563                                        0543
         LA    @01,@AL00001                                        0543
         BALR  @14,@15                                             0543
*                                   /* AIO CALL                      */
*                         R13=R10;  /* RESET DATA AREA ADDR  @ZA27588*/
         LR    R13,R10                                             0544
*                         RFY                                      0545
*                          (R13) UNRSTD;/* RELEASE R13 TO COMPILER 0545
*                                                            @ZA27588*/
*                       END;        /*                       @ZA27588*/
*                     IOOK=B1ONE;   /*                       @ZM31012*/
@RF00538 OI    IOOK,B'00000100'                                    0547
*                     RETNCODE=CODE00;/*                     @ZM31012
*                                      SET GOOD REASON CODE  @ZM31012*/
         SLR   @09,@09                                             0548
         ST    @09,RETNCODE                                        0548
*                     IF REQCODE=VARYOFF×REQCODE=VARYON/*    @ZM31012*/
*                       THEN        /* IS VARY REQUEST       @ZM31012*/
         CLI   REQCODE(R6),12                                      0549
         BE    @RT00549                                            0549
         CLI   REQCODE(R6),10                                      0549
         BNE   @RF00549                                            0549
@RT00549 DS    0H                                                  0550
*                       CALL RECRDVRY;/*                     @ZM31012
*                                      RECORD IN SMF AND     @ZM31012
*                                      POSSIBLY CALL SVC 91  @ZM31012*/
         BAL   @14,RECRDVRY                                        0550
*                   END;            /*                       @ZM31012*/
@RF00549 DS    0H                                                  0552
*               END;                /*                       @ZM31012*/
@RC00508 DS    0H                                                  0553
*           END;                    /* END OF ZA27590 MSC ERROR    0553
*                                                            @ZA27590*/
@RF00441 DS    0H                                                  0554
*       END;                        /*                       @ZM31012*/
@RF00436 DS    0H                                                  0555
*     IF ARSW=B1ONE THEN            /*                       @ZM31012
*                                      IS ACQ/REL SWITCH ON  @ZM31012*/
@RF00406 TM    ARSW,B'00100000'                                    0555
         BNO   @RF00555                                            0555
*       DO;                         /* CHECK FOR ANOTHER REQ @ZM31012*/
*         IF ACQSW=B1ONE&RETNCODE^=ZERO/*                    @ZM31012*/
*           THEN                    /* IS ACQ REQ IN ERROR   @ZM31012*/
         TM    ACQSW,B'00010000'                                   0557
         BNO   @RF00557                                            0557
         L     @09,RETNCODE                                        0557
         LTR   @09,@09                                             0557
         BZ    @RF00557                                            0557
*           LOOPSW=B1ZERO;          /*                       @ZM31012
*                                      RESET THE LOOP SWITCH @ZM31012
*                                      IN ORDER TO EXIT THE  @ZM31012
*                                      SVC                   @ZM31012*/
         NI    LOOPSW,B'10111111'                                  0558
*         ELSE                      /* REQLINQUISH REQUEST OR      0559
*                                                            @ZM31012
*                                      ACQ NOT IN ERROR      @ZM31012*/
*           IF ARNEDB^=ZERO THEN    /*                       @ZM31012
*                                      IS THERE ANOTHER REQ  @ZM31012*/
         B     @RC00557                                            0559
@RF00557 SLR   @09,@09                                             0559
         L     @07,ARPTR                                           0559
         L     @07,ARNEDB(,@07)                                    0559
         CR    @07,@09                                             0559
         BE    @RF00559                                            0559
*             DO;                   /* ADDRESS NEXT REQUEST  @ZM31012*/
*               RETNCODE=ZERO;      /*                       @ZM31012
*                                      ZERO THE REASON CODE  @ZM31012*/
         ST    @09,RETNCODE                                        0561
*               ARPTR=ARNEDB;       /*                       @ZM31012
*                                      ADDRESS NEXT REQ IN   @ZM31012
*                                      ACQ/REL CHAIN         @ZM31012*/
         ST    @07,ARPTR                                           0562
*             END;                  /*                       @ZM31012*/
*           ELSE                    /* NO MORE REQUESTS      @ZM31012*/
*             LOOPSW=B1ZERO;        /*                       @ZM31012
*                                      GET OUT OF LOOP       @ZM31012*/
         B     @RC00559                                            0564
@RF00559 NI    LOOPSW,B'10111111'                                  0564
*       END;                        /*                       @ZM31012*/
*     ELSE                          /* NOT ACQ/REL REQUEST   @ZM31012*/
*       LOOPSW=B1ZERO;              /*                       @ZM31012
*                                      GET OUT OF LOOP       @ZM31012*/
         B     @RC00555                                            0566
@RF00555 NI    LOOPSW,B'10111111'                                  0566
*   END;                            /*                       @ZM31012*/
@RC00555 DS    0H                                                  0567
@DE00379 TM    LOOPSW,B'01000000'                                  0567
         BO    @DL00379                                            0567
*   R14=R14LU;                      /* RESTORE CALLERS REG 14      0568
*                                                            @ZM31012*/
         L     R14,R14LU                                           0568
*   RETURN;                         /* RETURN TO CALLER      @ZM31012*/
@EL00003 DS    0H                                                  0569
@EF00003 DS    0H                                                  0569
@ER00003 BR    @14                                                 0569
*   END REQSTLU;                    /* END REQUEST LOOP      @ZM31012*/
*                                                                  0571
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = QUEELM                                   @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = QUEUES A DELAYED RESPONSE           @Y30LB00
*                        ELEMENT                             @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE QUEUES A DELAYED            @Y30LB00
*                RESPONSE ELEMENT IF THE REQUEST             @Y30LB00
*                HAS AN IMPLIED OR REQUESTED                 @Y30LB00
*                DELAYED RESPONSE                            @Y30LB00
*                                                            @Y30LB00
*01*  NOTES = LOCKS, LOCAL AND CMS, ARE OBTAINED             @Y30LB00
*             BEFORE SCANNING THE QUEUE, TO INSURE           @Y30LB00
*             THAT THE SVC AND MESSAGE TASK DO NOT           @Y30LB00
*             OBSTRUCT EACH OTHERS PROCESSING.               @Y30LB00
*             STORAGE FOR THE DELAYED RESPONSE               @Y30LB00
*             ELEMENT IS OBTAINED FROM SQA. ELEMENTS         @Y30LB00
*             ARE ADDED AT THE HEAD OF THE QUEUE.            @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE CREATES AND QUEUES         @Y30LB00
*                 A DELAYED RESPONSE ELEMENT IF              @Y30LB00
*                 A REQUEST HAS AN IMPLIED OR REQUESTED      @Y30LB00
*                 DELAYED RESPONSE.                          @Y30LB00
*                                                            @Y30LB00
*                 CALLS THE FOLLOWING MSSC SVC SUBROUTINE:   @Y30LB00
*                                                            @Y30LB00
*                     ARERR1                                 @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = TCBPT                                        @Y30LB00
*               DELRECB                                      @Y30LB00
*               ASCBPTR                                      @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = RETNCODE                                    @Y30LB00
*                   0 - DELAYED RESPONSE ELEMENT             @Y30LB00
*                       QUEUED                               @Y30LB00
*                   243 - GETMAIN FAILURE FOR DELAYED        @Y30LB00
*                       RESPONSE ELEMENT                     @Y30LB00
*                   244 - AN ELEMENT ALREADY QUEUED HAS      @Y30LB00
*                       THE SAME ASID, TCB AND ECB           @Y30LB00
*                       ADDRESSES                            @Y30LB00
*                NEWELPTR - ADDRESS OF ELEMENT IF            @Y30LB00
*                       RETNCODE IS 0                        @Y30LB00
*                DELAYED RESPONSE ELEMENT QUEUED             @Y30LB00
*                FOR THE REQUEST - IF RETNCODE IS 0          @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0571
*                                                                  0571
*   /*****************************************************************/
*   /*                                                               */
*   /* THE SUBROUTINE WHICH CREATES A DELAYED RESPONSE       @Y30LB00*/
*   /* ELEMENT AND QUEUES IT. ELEMENTS ARE ADDED AT          @Y30LB00*/
*   /* THE HEAD OF THE QUEUE.                                @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0571
*QUEELM:                                                           0571
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
*                                                                  0571
QUEELM   DS    0H                                                  0572
*   /*****************************************************************/
*   /*                                                               */
*   /* GET STORAGE FOR THE DELAYED RESPONSE ELEMENT          @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0572
*   SAVE14=R14;                     /*                       @Y30LB00*/
         ST    R14,SAVE14                                          0572
*   ELEMOBT=B1ONE;                  /*                       @Y30LB00*/
         OI    ELEMOBT,B'01000000'                                 0573
*   R0=LENGTH(NEWELMT);             /*                       @Y30LB00*/
         LA    R0,20                                               0574
*   R1=ADDR(IGETMAIN);              /*                       @Y30LB00*/
         LA    R1,IGETMAIN                                         0575
*   GEN REFS(R0,R1,NEWELPTR);                                      0576
*                                                          /*@Y30LB00*/
* GETMAIN FOR THE DELAYED RESPONSE ELEMENT                     @Y30LB00
IGETMA20 GETMAIN EC,MF=(E,(R1)),LV=(R0),A=NEWELPTR,SP=245,     @Y30LB00*
               RELATED=(SP245,IGC0012F(IFREEM20),              @Y30LB00*
               SP245,ICB2MSG(IFREEMN2),                        @Y30LB00*
               SP245,IGC0012F(IFREEM21))                       @Y30LB00
*   IF R15^=ZERO THEN               /* WAS STORAGE OBTAINED  @Y30LB00*/
         LTR   R15,R15                                             0577
         BZ    @RF00577                                            0577
*     DO;                           /* SET REASON CODE       @Y30LB00*/
*       VVICERR=B1ONE;              /*                       @Y30LB00*/
         OI    VVICERR,B'00010000'                                 0579
*       IF ARSW=B1ONE THEN          /* IS ACQ/REL REQUEST    @Y30LB00
*                                      BEING PROCESSED       @Y30LB00*/
         TM    ARSW,B'00100000'                                    0580
         BNO   @RF00580                                            0580
*         DO;                       /* SET COMPLETION CODE   @Y30LB00
*                                      IN REQUEST            @Y30LB00*/
*           ARCOMPC=CODE243;        /*                       @Y30LB00*/
         L     @09,ARPTR                                           0582
         MVC   ARCOMPC(2,@09),@CH00782                             0582
*           IF ACQSW=B1ONE THEN     /*                       @Y30LB00
*                                      IS ACQUIRE BEING      @Y30LB00
*                                      PROCESSED             @Y30LB00*/
         TM    ACQSW,B'00010000'                                   0583
         BNO   @RF00583                                            0583
*             DO;                   /* GO TO ROUTINE WHICH   @Y30LB00
*                                      SETS NO-FURTHER-      @Y30LB00
*                                      PROCESSING OF REQ     @Y30LB00
*                                      COMPLETION CODE IN    @Y30LB00
*                                      SUBSEQUENT ACQS IN    @Y30LB00
*                                      CHAIN                 @Y30LB00*/
*               ARERRCD=CODE368;    /*                       @Y30LB00*/
         MVC   ARERRCD(4),@CF00796                                 0585
*               CALL ARERR1;        /* GO TO ROUTINE WHICH   @Y30LB00
*                                      INDICATES REST OF ACQS      0586
*                                                            @Y30LB00
*                                      NOT PROCESSED         @Y30LB00*/
         BAL   @14,ARERR1                                          0586
*             END;                  /*                       @Y30LB00*/
*           ELSE                    /* RELINQUISH REQUEST    @Y30LB00*/
*             RELERRSW=B1ONE;       /* SET REL ERROR SWITCH  @Y30LB00*/
         B     @RC00583                                            0588
@RF00583 OI    RELERRSW,B'10000000'                                0588
*           ARERRSW=B1ONE;          /* SET ACQ/REL ERROR     @Y30LB00
*                                      SWITCH ON             @Y30LB00*/
@RC00583 OI    ARERRSW,B'00000100'                                 0589
*           RETNCODE=FOUR;          /* SET THE REASON CODE   @Y30LB00*/
         MVC   RETNCODE(4),@CF00076                                0590
*         END;                      /*                       @Y30LB00*/
*       ELSE                        /* NOT ACQ/REL REQUEST   @Y30LB00*/
*         RETNCODE=CODE243;         /* SET REASON CODE       @Y30LB00*/
         B     @RC00580                                            0592
@RF00580 MVC   RETNCODE(4),@CF00782                                0592
*     END;                          /*                       @Y30LB00*/
*   ELSE                            /* STORAGE OBTAINED FOR  @Y30LB00
*                                      THE DELAYED RESPONSE  @Y30LB00
*                                      ELEMENT               @Y30LB00*/
*     DO;                           /* QUEUE THE ELEMENT     @Y30LB00*/
         B     @RC00577                                            0594
@RF00577 DS    0H                                                  0595
*/*   FILL IN THE DELAYED RESPONSE ELEMENT WITH THE          @Y30LB00
*     THE SUBPOOL NUMBER OF THE STORAGE FOR THE              @Y30LB00
*     ELEMENT, THE TCB ADDRESS OF THE REQUESTER, THE         @Y30LB00
*     ECB ADDRESS OF THE REQUEST, THE ASID, AND ZERO OUT     @Y30LB00
*     FLAGS AND RESERVED FIELDS                              @Y30LB00*/
*                                                                  0595
*       NEWELMT=''B;                /*                       @Y30LB00*/
         L     @09,NEWELPTR                                        0595
         XC    NEWELMT(20,@09),NEWELMT(@09)                        0595
*       QELSP=TWO45;                /*                       @Y30LB00*/
         MVI   QELSP(@09),X'F5'                                    0596
*       QELTCBPR=TCBPT;             /*                       @Y30LB00*/
         MVC   QELTCBPR(3,@09),TCBPT+1                             0597
*       QELECB=DELRECB;             /*                       @Y30LB00*/
         L     @07,DELRECB                                         0598
         ST    @07,QELECB(,@09)                                    0598
*       QELASID=ASCBASID;           /*                       @Y30LB00*/
         L     @07,ASCBPTR                                         0599
         LH    @07,ASCBASID(,@07)                                  0599
         N     @07,@CF03081                                        0599
         STH   @07,QELASID(,@09)                                   0599
*       GEN;                                                       0600
*                                                          /*@Y30LB00*/
* OBTAIN THE LOCAL LOCK IN ORDER TO QUEUE THE                  @Y30LB00
* DELAYED RESPONSE ELEMENT                                     @Y30LB00
ISETLK10 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @Y30LB00*
               RELATED=(LOCAL,IGC0012F(ISETLK11),              @Y30LB00*
               LOCAL,IGC0012F(ISETLK31),                       @Y30LB00*
               LOCAL,IGC0012F(ISETLK12),                       @Y30LB00*
               LOCAL,IGC0012F(ISETLK13))                       @Y30LB00
*       LOCLOCK=B1ONE;              /*                       @Y30LB00*/
         OI    LOCLOCK,B'00000010'                                 0601
*       GEN;                                                       0602
*                                                          /*@Y30LB00*/
* OBTAIN THE CMS LOCK INORDER TO QUEUE THE                     @Y30LB00
* DELAYED RESPONSE ELEMENT                                     @Y30LB00
ISETLK20 SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=USE,         @Y30LB00*
               RELATED=(CMS,IGC0012F(ISETLK21),                @Y30LB00*
               CMS,IGC0012F(ISETLK41),                         @Y30LB00*
               CMS,IGC0012F(ISETLK22),                         @Y30LB00*
               CMS,IGC0012F(ISETLK23))                         @Y30LB00
*       CMSLOCK=B1ONE;              /*                       @Y30LB00*/
         OI    CMSLOCK,B'00000001'                                 0603
*       IF ICBQHEAD=ZERO THEN       /* IS DELAYED RESPONSE   @Y30LB00
*                                      QUEUE EMPTY           @Y30LB00*/
         L     @09,ICBPTR                                          0604
         L     @07,ICBQHEAD(,@09)                                  0604
         LTR   @07,@07                                             0604
         BNZ   @RF00604                                            0604
*         DO;                       /* QUEUE ELEMENT AS FIRST      0605
*                                                            @Y30LB00
*                                      ON QUEUE              @Y30LB00*/
*           ICBQHEAD=NEWELPTR;      /* QUEUE ELEM AT HEAD OF @Y30LB00
*                                      QUEUE                 @Y30LB00*/
         L     @07,NEWELPTR                                        0606
         ST    @07,ICBQHEAD(,@09)                                  0606
*           ELEMSW=B1ONE;           /* INDICATE SCAN OF QUEUE      0607
*                                                            @Y30LB00
*                                      COMPLETE              @Y30LB00*/
         OI    ELEMSW,B'10000000'                                  0607
*           ELEMQUE=B1ONE;          /* INDICATE ELEM QUEUED  @Y30LB00*/
         OI    ELEMQUE,B'00100000'                                 0608
*         END;                      /*                       @Y30LB00*/
*       ELSE                        /* DELAYED RESPONSE QUEUE      0610
*                                                            @Y30LB00
*                                      NOT EMPTY, ADDRESS    @Y30LB00
*                                      FIRST ELEMENT ON QUEUE      0610
*                                                            @Y30LB00*/
*         QELEMPTR=ICBQHEAD;        /*                       @Y30LB00*/
         B     @RC00604                                            0610
@RF00604 L     @09,ICBPTR                                          0610
         L     @09,ICBQHEAD(,@09)                                  0610
         ST    @09,QELEMPTR                                        0610
*       DO WHILE ELEMSW=B1ZERO;     /* SCAN FOR LAST ELEMENT @Y30LB00
*                                      ON THE QUEUE          @Y30LB00*/
@RC00604 B     @DE00611                                            0611
@DL00611 DS    0H                                                  0612
*         IF ELMTCB=TCBPT&ELMECB=DELRECB/*                   @Y30LB00*/
*             &ELMASID=ASCBASID&MSGFLG^=FOXFOX/*             @Y30LB00*/
*             &INVALFLG^=FOXFOX THEN/*                       @Y30LB00
*                                      IS QUEUED ELEMENT TCB @Y30LB00
*                                      AND ECB ADDRESS AND   @Y30LB00
*                                      ASID EQUAL TO TCB AND @Y30LB00
*                                      ECB ADDRESSES AND ASID      0612
*                                                            @Y30LB00
*                                      OF THIS REQUESTER AND @Y30LB00
*                                      THE REQUEST IS NOT    @Y30LB00
*                                      FROM THE MESSAGE TASK @Y30LB00
*                                      AND THE QUEUED ELEMENT      0612
*                                                            @Y30LB00
*                                      IS NOT FLAGGED AS     @Y30LB00
*                                      INVALID BY THE SVC    @Y30LB00*/
         L     @09,QELEMPTR                                        0612
         L     @07,ELMTCB-1(,@09)                                  0612
         LA    @07,0(,@07)                                         0612
         C     @07,TCBPT                                           0612
         BNE   @RF00612                                            0612
         CLC   ELMECB(4,@09),DELRECB                               0612
         BNE   @RF00612                                            0612
         L     @07,ASCBPTR                                         0612
         CLC   ELMASID(2,@09),ASCBASID(@07)                        0612
         BNE   @RF00612                                            0612
         CLI   MSGFLG,255                                          0612
         BE    @RF00612                                            0612
         CLI   INVALFLG(@09),255                                   0612
         BE    @RF00612                                            0612
*           DO;                     /* SET ERROR CODE        @Y30LB00*/
*             IF ARSW=B1ONE THEN    /* IS ACQ/REL REQUEST    @Y30LB00
*                                      BEING PROCESSED       @Y30LB00*/
         TM    ARSW,B'00100000'                                    0614
         BNO   @RF00614                                            0614
*               DO;                 /* SET COMPLETION CODE   @Y30LB00*/
*                 ARCOMPC=CODE244;  /*                       @Y30LB00
*                                      SET ACQ/REL REASON CODE     0616
*                                                            @Y30LB00*/
         L     @09,ARPTR                                           0616
         MVC   ARCOMPC(2,@09),@CH00784                             0616
*                 IF ACQSW=B1ONE THEN/*                      @Y30LB00
*                                      IS ACQUIRE BEING      @Y30LB00
*                                      PROCESSED             @Y30LB00*/
         TM    ACQSW,B'00010000'                                   0617
         BNO   @RF00617                                            0617
*                   DO;             /* GO TO ROUTINE WHICH   @Y30LB00
*                                      SETS NOT-FURTHER-     @Y30LB00
*                                      PROCESSED CODE IN     @Y30LB00
*                                      SUBSEQUENT ACUIRES IN @Y30LB00
*                                      CHAIN                 @Y30LB00*/
*                     ARERRCD=CODE368;/*                     @Y30LB00
*                                      SET ACQ/REL REASON CODE     0619
*                                                            @Y30LB00*/
         MVC   ARERRCD(4),@CF00796                                 0619
*                     CALL ARERR1;  /* GO TO ROUTINE WHICH   #Y30LB00
*                                      INDICATES REST OF ACQS      0620
*                                                            #Y30LB00
*                                      NOT PROCESSED         @Y30LB00*/
         BAL   @14,ARERR1                                          0620
*                   END;            /*                       @Y30LB00*/
*                 ELSE              /* RELINQUISH REQUEST    @Y30LB00*/
*                   RELERRSW=B1ONE; /*                       @Y30LB00
*                                      SET REL ERROR SWITCH ON     0622
*                                                            @Y30LB00*/
         B     @RC00617                                            0622
@RF00617 OI    RELERRSW,B'10000000'                                0622
*                 ARERRSW=B1ONE;    /* SET ACQ/REL ERROR SWITCH    0623
*                                                            @Y30LB00
*                                      ON                    @Y30LB00*/
@RC00617 OI    ARERRSW,B'00000100'                                 0623
*                 RETNCODE=FOUR;    /* SET REASON CODE       @Y30LB00*/
         MVC   RETNCODE(4),@CF00076                                0624
*               END;                /*                       #Y30LB00*/
*             ELSE                  /* NOT ACQ/REL REQUEST   #Y30LB00*/
*               RETNCODE=CODE244;   /* SET REASON CODE       #Y30LB00*/
         B     @RC00614                                            0626
@RF00614 MVC   RETNCODE(4),@CF00784                                0626
*             ELEMSW=B1ONE;         /* INDICATE SCAN OF QUEUE      0627
*                                                            @Y30LB00
*                                      COMPLETE              @Y30LB00*/
@RC00614 OI    ELEMSW,B'10000000'                                  0627
*           END;                    /*                       #Y30LB00*/
*         ELSE                      /* TCB AND ECB ADDRS     @Y30LB00
*                                      AND ASID DID NOT MATCH,     0629
*                                                            @Y30LB00
*                                      OR THEY MATCHED BUT   @Y30LB00
*                                      THE REQUEST IS FROM THE     0629
*                                                            @Y30LB00
*                                      MESSAGE TASK, OR THE  @Y30LB00
*                                      QUEUED ELEMENT WAS    @Y30LB00
*                                      FLAGGED INVALID BY THE      0629
*                                                            @Y30LB00
*                                      SVC                   @Y30LB00*/
*           IF ELMHEAD=ZERO THEN    /* IS ELEMENT LAST ON Q  @Y30LB00*/
         B     @RC00612                                            0629
@RF00612 L     @09,QELEMPTR                                        0629
         L     @09,ELMHEAD-1(,@09)                                 0629
         LA    @09,0(,@09)                                         0629
         LTR   @09,@09                                             0629
         BNZ   @RF00629                                            0629
*             DO;                   /* QUEUE NEW ELEMENT AT  @Y30LB00
*                                      HEAD OF QUEUE         @Y30LB00*/
*                                                                  0630
*               /*****************************************************/
*               /*                                                   */
*               /* POINT NEW ELEMENT TO FIRST ON QUEUE,      @Y30LB00*/
*               /* POINT FIRST ELEMENT ON QUEUE TO NEW       @Y30LB00*/
*               /* ELEMENT, QUEUE THE NEW ELEMENT AT THE     @Y30LB00*/
*               /* HEAD OF THE QUEUE. INDICATE SCAN OF       @Y30LB00*/
*               /* QUEUE COMPLETE AND THAT THE ELEMENT HAS   @Y30LB00*/
*               /* BEEN QUEUED                               @Y30LB00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0631
*               QELAHEAD=ICBQHEAD;  /*                       @Y30LB00*/
         L     @09,NEWELPTR                                        0631
         L     @07,ICBPTR                                          0631
         L     @04,ICBQHEAD(,@07)                                  0631
         STCM  @04,7,QELAHEAD(@09)                                 0631
*               HEADBACK=NEWELPTR;  /*                       @Y30LB00*/
         STCM  @09,7,HEADBACK(@04)                                 0632
*               ICBQHEAD=NEWELPTR;  /*                       @Y30LB00*/
         ST    @09,ICBQHEAD(,@07)                                  0633
*               ELEMSW=B1ONE;       /*                       @Y30LB00*/
         OI    ELEMSW,B'10000000'                                  0634
*               ELEMQUE=B1ONE;      /*                       @Y30LB00*/
         OI    ELEMQUE,B'00100000'                                 0635
*             END;                  /*                       @Y30LB00*/
*           ELSE                    /* NOT LAST ELEMENT ON Q @Y30LB00*/
*             QELEMPTR=ELMHEAD;     /* ADDRESS NEXT ELEM ON Q      0637
*                                                            @Y30LB00*/
         B     @RC00629                                            0637
@RF00629 L     @09,QELEMPTR                                        0637
         L     @09,ELMHEAD-1(,@09)                                 0637
         LA    @09,0(,@09)                                         0637
         ST    @09,QELEMPTR                                        0637
*       END;                        /*                       @Y30LB00*/
@RC00629 DS    0H                                                  0638
@RC00612 DS    0H                                                  0638
@DE00611 TM    ELEMSW,B'10000000'                                  0638
         BZ    @DL00611                                            0638
*       CMSLOCK=B1ZERO;             /*                       @Y30LB00*/
         NI    CMSLOCK,B'11111110'                                 0639
*       GEN;                                                       0640
*                                                          /*@Y30LB00*/
* RELEASE THE CMS LOCK AFTER QUEUING THE DELAYED               @Y30LB00
* RESPONSE ELEMENT OR SEARCHING THE QUEUE                      @Y30LB00
ISETLK21  SETLOCK  RELEASE,TYPE=CMS,REGS=USE,                  @Y30LB00*
               RELATED=(CMS,IGC0012F(ISETLK20))                @Y30LB00
*       LOCLOCK=B1ZERO;             /*                       @Y30LB00*/
         NI    LOCLOCK,B'11111101'                                 0641
*       GEN;                                                       0642
*                                                          /*@Y30LB00*/
* RELEASE THE LOCAL LOCK AFTER QUEUING THE DELAYED RESPONSE    @Y30LB00
* ELEMENT OR SEARCHING THE QUEUE                               @Y30LB00
ISETLK11  SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                 @Y30LB00*
               RELATED=(LOCAL,IGC0012F(ISETLK10))              @Y30LB00
*       ELEMSW=B1ZERO;              /*                       @Y30LB00*/
         NI    ELEMSW,B'01111111'                                  0643
*       IF RETNCODE^=ZERO THEN      /* IS ERROR CODE NON ZERO      0644
*                                                            @Y30LB00*/
         L     @09,RETNCODE                                        0644
         LTR   @09,@09                                             0644
         BZ    @RF00644                                            0644
*         DO;                       /* FREE STORAGE FOR      @Y30LB00
*                                      ELEMENT               @Y30LB00*/
*           VVICERR=B1ONE;          /*                       @Y30LB00*/
         OI    VVICERR,B'00010000'                                 0646
*           R0=LENGTH(NEWELMT);     /*                       @Y30LB00*/
         LA    R0,20                                               0647
*           R1=ADDR(IFREEMAI);      /*                       @Y30LB00*/
         LA    R1,IFREEMAI                                         0648
*           GEN REFS(R0,R1,NEWELPTR);                              0649
*                                                          /*@Y30LB00*/
* FREE THE DELAYED RESPONSE ELEMENT IF THE ELEMENT             @Y30LB00
* COULD NOT BE QUEUED                                          @Y30LB00
IFREEM20 FREEMAIN E,MF=(E,(R1)),LV=(R0),A=NEWELPTR,SP=245,     @Y30LB00*
               RELATED=(SP245,IGC0012F(IGETMA20))              @Y30LB00
*           ELEMFREE=B1ONE;         /* INDICATE ELEMENT FREED      0650
*                                                            @Y30LB00*/
         OI    ELEMFREE,B'10000000'                                0650
*           NEWELPTR=ZERO;          /* CLEAR ELEMENT ADDRESS @Y30LB00*/
         SLR   @09,@09                                             0651
         ST    @09,NEWELPTR                                        0651
*         END;                      /*                       @Y30LB00*/
*     END;                          /*                       @Y30LB00*/
@RF00644 DS    0H                                                  0654
*QUEEXIT:                           /*                       @Y30LB00*/
*   R14=SAVE14;                     /*                       @Y30LB00*/
@RC00577 DS    0H                                                  0654
QUEEXIT  L     R14,SAVE14                                          0654
*   RETURN;                         /* RETURN TO CALLER - WITH     0655
*                                                            @Y30LB00
*                                      ZERO REASON CODE AND  @Y30LB00
*                                      ELEMENT QUEUED, OR    @Y30LB00
*                                      NON-ZERO REASON CODE  @Y30LB00
*                                      AND ELEMENT NOT QUEUED      0655
*                                                            @Y30LB00*/
@EL00004 DS    0H                                                  0655
@EF00004 DS    0H                                                  0655
@ER00004 BR    @14                                                 0655
*   END QUEELM;                     /*                       @Y30LB00*/
*                                                                  0657
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = CCWBUILD                                 @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = CONSTRUCT THE CCWS                  @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE BUILDS THE CCWS FOR         @Y30LB00
*                THE I/O.                                    @Y30LB00
*                                                            @Y30LB00
*01*  NOTES = THE CHANNEL PROGRAM WHICH IS CONSTRUCTED FOR   @Z40LB01
*             SUSPEND WITH PREPARE TO SWAP OPTION CONSISTS   @Z40LB01
*             CHANNEL COMMAND CODE 87 (EXECUTE) CHAINED TO   @Z40LB01
*             CHANNEL COMMAND CODE 87 (EXECUTE-NOOP) CHAINED @Z40LB01
*             CHANNEL COMMAND CODE 03 (NOOP).                @Z40LB01
*                                                            @Z40LB01
*             THE CHANNEL PROGRAM WHICH IS CONSTRUCTED FOR   @Z40LB01
*             QUERY AND CAUDIT CONSISTS OF CHANNEL COMMAND   @Z40LB01
*             CODE 27 (INTERROGATE) CHAINED TO CHANNEL       @Z40LB01
*             COMMAND CODE 42 (DIAGNOSTIC READ) CHAINED TO   @Z40LB01
*             CHANNEL COMMAND CODE 03 (NOOP).                @Z40LB01
*                                                            @Z40LB01
*             THE CHANNEL PROGRAM WHICH IS CONSTRUCTED FOR   @Z40LB01
*             NULLIFYC CONSISTS OF CHANNEL COMMAND CODE      @Z40LB01
*             27 (INTERROGATE) CHAINED TO CHANNEL COMMAND    @Z40LB01
*             CODE 03 (NOOP).                                @Z40LB01
*                                                            @Z40LB01
*             THE CHANNEL PROGRAM FOR ALL OTHER FUNCTIONS    @Z40LB01
*             CONSISTS OF A CHANNEL COMMAND 87 (EXECUTE)     @Z40LB01
*             CHAINED TO CHANNEL COMMAND 03 (NOOP).          @Z40LB01
*                                                            #Y30LB00
*02*    CHARACTER-CODE-DEPENDENCIES = NONE                   #Y30LB00
*                                                            #Y30LB00
*02*    DEPENDENCIES = NONE                                  #Y30LB00
*                                                            @Y30LB00
*02*    RESTRICTIONS = NONE                                  @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-TYPE = MODULE                                   @Y30LB00
*                                                            @Y30LB00
*02*    PROCESSOR = PLS2                                     @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE BUILD THE CHANNEL          @Y30LB00
*                 PROGRAM (CCWS) USED TO TRANSFER THE        @Y30LB00
*                 ORDER TO THE MSC.                          @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = CCWPTR                                       @Y30LB00
*               ORDLENG                                      @Y30LB00
*               ORDPTR                                       @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = CCWS INITIALIZED                            @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0657
*                                                                  0657
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE BUILDS THE CCWS NECESSARY TO          @Y30LB00*/
*   /* TRANSFER THE ORDER TO MSC FOR PROCESSING              @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0657
*CCWBUILD:                                                         0657
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
CCWBUILD DS    0H                                                  0658
*/*   THE FIRST CCW IN THE CHANNEL PROGRAM FOR MSC           @Z40LB01*/
*/*   INTERROGATE FUNCTIONS QUERY AND NULLIFYC MUST          @Z40LB01*/
*/*   BE A CHANNEL COMMAND CODE OF 27. ALL OTHER             @Z40LB01*/
*/*   FUNCTIONS REQUIRE A CHANNEL CMD CODE OF 87. THE REST   @Z40LB01*/
*/*   OF THE CCW FIELDS ARE THE SAME FOR ALL FUNCTIONS.      @Z40LB01*/
*                                                                  0658
*   IF REQCODE=MSCREAD×REQCODE=CAUDIT×/*                     @Z40LB01*/
*       REQCODE=NULLCART×REQCODE=MSCDUMP THEN/*              @Z40LB01*/
         CLI   REQCODE(R6),5                                       0658
         BE    @RT00658                                            0658
         CLI   REQCODE(R6),7                                       0658
         BE    @RT00658                                            0658
         CLI   REQCODE(R6),9                                       0658
         BE    @RT00658                                            0658
         CLI   REQCODE(R6),11                                      0658
         BNE   @RF00658                                            0658
@RT00658 DS    0H                                                  0659
*     CCW1CC=QUERY;                 /*                       @Z40LB01*/
         L     @09,CCWPTR                                          0659
         MVI   CCW1CC(@09),X'27'                                   0659
*   ELSE                            /*                       @Z40LB01*/
*     CCW1CC=EXECUTE;               /*                       @Z40LB01*/
         B     @RC00658                                            0660
@RF00658 L     @09,CCWPTR                                          0660
         MVI   CCW1CC(@09),X'87'                                   0660
*   CCW1DATA=ORDPTR;                /*                       @ZD00155*/
@RC00658 L     @09,CCWPTR                                          0661
         MVC   CCW1DATA(3,@09),ORDPTR+1                            0661
*   CCW1FLGS=COMNDCHN;              /*                       @ZD00155*/
         MVI   CCW1FLGS(@09),X'40'                                 0662
*   CCW1CNT=ORDLENG;                /*                       @ZD00155*/
         L     @07,ORDLENG                                         0663
         STH   @07,CCW1CNT(,@09)                                   0663
*   IF(REQCODE=SUSPEND&SUPPRSW=B1ONE) THEN/* SUSPEND WITH    @ZD00155
*                                      PREP-TO-SWAP ATTRIBUTE?     0664
*                                                            @ZD00155*/
         CLI   REQCODE(R6),34                                      0664
         BNE   @RF00664                                            0664
         TM    SUPPRSW(R6),B'00100000'                             0664
         BNO   @RF00664                                            0664
*     DO;                           /* YES,SPECIAL DEFINE CCWS     0665
*                                                            @ZD00155*/
*       CCW2CC=EXECUTE;             /*                       @ZD00155*/
         MVI   CCW2CC(@09),X'87'                                   0666
*       CCW2DATA=NOOPPTR;           /*                       @ZD00155*/
         MVC   CCW2DATA(3,@09),NOOPPTR+1                           0667
*       CCW2FLGS=COMNDCHN;          /*                       @ZD00155*/
         MVI   CCW2FLGS(@09),X'40'                                 0668
*       CCW2CNT=LENGTH(NOOP1E);     /*                       @ZD00155*/
         MVC   CCW2CNT(2,@09),@CH00076                             0669
*       CCW3CC=NOOP;                /*                       @ZD00155*/
         MVI   CCW3CC(@09),X'03'                                   0670
*       CCW3DATA=ZERO;              /*                       @ZD00155*/
         SLR   @07,@07                                             0671
         STCM  @07,7,CCW3DATA(@09)                                 0671
*       CCW3FLGS=C1ZERO;            /*                       @ZD00155*/
         MVI   CCW3FLGS(@09),X'00'                                 0672
*       CCW3CNT=ONE;                /*                       @ZD00155*/
         MVC   CCW3CNT(2,@09),@CH00061                             0673
*     END;                          /*                       @ZD00155*/
*   ELSE                            /*                       @Z40LB01*/
*/*  IF QUERY BUILD SPECIAL CHANNEL PROGRAM                  @Z40LB01*/
*                                                                  0675
*     IF REQCODE=MSCREAD×REQCODE=CAUDIT×/*                   @Z40LB01*/
*         REQCODE=MSCDUMP THEN      /*                       @Z40LB01*/
         B     @RC00664                                            0675
@RF00664 CLI   REQCODE(R6),5                                       0675
         BE    @RT00675                                            0675
         CLI   REQCODE(R6),7                                       0675
         BE    @RT00675                                            0675
         CLI   REQCODE(R6),11                                      0675
         BNE   @RF00675                                            0675
@RT00675 DS    0H                                                  0676
*       DO;                         /*                       @Z40LB01*/
*         CCW2CC=QREAD;             /*                       @Z40LB01*/
         L     @09,CCWPTR                                          0677
         MVI   CCW2CC(@09),X'42'                                   0677
*         CCW2DATA=BUFFPTR;         /*                       @ZA13482*/
         MVC   CCW2DATA(3,@09),BUFFPTR+1                           0678
*         CCW2FLGS=COMNDCHN;        /*                       @Z40LB01*/
         MVI   CCW2FLGS(@09),X'40'                                 0679
*         CCW2CNT=FIVE12;           /*                       @Z40LB01*/
         MVC   CCW2CNT(2,@09),@CH02475                             0680
*         CCW3CC=NOOP;              /*                       @Z40LB01*/
         MVI   CCW3CC(@09),X'03'                                   0681
*         CCW3DATA=ZERO;            /*                       @Z40LB01*/
         SLR   @07,@07                                             0682
         STCM  @07,7,CCW3DATA(@09)                                 0682
*         CCW3FLGS=C1ZERO;          /*                       @Z40LB01*/
         MVI   CCW3FLGS(@09),X'00'                                 0683
*         CCW3CNT=ONE;              /*                       @Z40LB01*/
         MVC   CCW3CNT(2,@09),@CH00061                             0684
*       END;                        /*                       @Z40LB01*/
*     ELSE                          /* SET UP REGULAR CCWS   @ZD00155*/
*       DO;                         /*                       @ZD00155*/
         B     @RC00675                                            0686
@RF00675 DS    0H                                                  0687
*         CCW2CC=NOOP;              /*                       @ZD00155*/
         L     @09,CCWPTR                                          0687
         MVI   CCW2CC(@09),X'03'                                   0687
*         CCW2DATA=ZERO;            /*                       @ZD00155*/
         SLR   @07,@07                                             0688
         STCM  @07,7,CCW2DATA(@09)                                 0688
*         CCW2FLGS=C1ZERO;          /*                       @ZD00155*/
         MVI   CCW2FLGS(@09),X'00'                                 0689
*         CCW2CNT=ONE;              /*                       @ZD00155*/
         MVC   CCW2CNT(2,@09),@CH00061                             0690
*       END;                        /*                       @ZD00155*/
*CCWEXIT:                           /*                       #Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER -    #Y30LB00
*                                      WITH CCWS INITIALIZED #Y30LB00*/
@EL00005 DS    0H                                                  0692
@EF00005 DS    0H                                                  0692
@ER00005 BR    @14                                                 0692
*   END CCWBUILD;                   /*                       #Y30LB00*/
         B     @EL00005                                            0693
*                                                                  0694
*/*  START OF SPECIFICATIONS ****                            @X70AC01
*                                                            @X70AC01
*01* MODULE-NAME = MSVCONLY                                  @G24LB01
*                                                            @G24LB01
*01* DESCRIPTIVE-NAME = BRANCH ENTER MSVC CODE FOR MSVC      @G24LB01
*                       ONLY ORDERS.                         @G24LB01
*                                                            @G24LB01
*01* FUNCTION = THIS ROUTINE DETERMINES WHICH MSVC MODULE    @G24LB01
*               SHOULD BE BRANCHED TO, SETS UP INTERFACE     @G24LB01
*               REGS, AND DOES THE BRANCH.                   @G24LB01
*                                                            @G24LB01
*02*  INPUT = R6 POINTING TO PARM LIST                       @G24LB01
*                                                            @G24LB01
*02*  OUTPUT TO MSVC MODULE = R1 POINTING TO PARM LIST       @G24LB01
*                             R13 POINTING TO SAVE AREA      @G24LB01
*                             R15 POINTING TO MSVC ENTRY     @G24LB01
*                                                            @G24LB01
*02*  OUTPUT TO CALLER = MSVC RETURN CODE IN R15             @G24LB01
*                        MSVC REASON CODE IN R0              @G24LB01
*                        OTHER REGS RESTORED                 @G24LB01
*                                                            @G24LB01
**** END OF SPECIFICATIONS **                                @G24LB01*/
*                                                                  0694
*MSVCONLY:                                                         0694
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G24LB01*/
MSVCONLY DS    0H                                                  0695
*   DCL                                                            0695
*     MSVC14 FIXED(31);             /* RETURN REG SAVE AREA  @G24LB01*/
*   MSVC14=R14;                     /* SAVE RETURN           @G24LB01*/
         ST    R14,MSVC14                                          0696
*   IF ICBVVICB=ZERO THEN           /* IF NO POINTER TO VVIC CTL BLK
*                                                            @G24LB01*/
         SLR   @09,@09                                             0697
         L     @07,ICBPTR                                          0697
         C     @09,ICBVVICB(,@07)                                  0697
         BNE   @RF00697                                            0697
*     DO;                           /*                       @G24LB01*/
*       RETNCODE=ZERO;              /* SET RETURN CODE TO ZERO     0699
*                                                            @G24LB01*/
         ST    @09,RETNCODE                                        0699
*       RETURN;                     /*                       @G24LB01*/
@EL00006 DS    0H                                                  0700
@EF00006 DS    0H                                                  0700
@ER00006 BR    @14                                                 0700
*     END;                          /*                       @G24LB01*/
*   INPUTREQ=ADDR(SAVEREQ);         /*                       @G24LB01*/
@RF00697 LA    @09,SAVEREQ                                         0702
         ST    @09,INPUTREQ                                        0702
*   SAVEREQ(1:LISTLEN)=INPTLIST(1:LISTLEN);/*                @G24LB01
*                                      SAVE REQUEST IN SUBPOOL     0703
*                                                            @G24LB01
*                                      245 INCASE OF ABNORMAL      0703
*                                                            @G24LB01
*                                      TERMINATION           @G24LB01*/
         L     @09,LISTLEN(,R6)                                    0703
         BCTR  @09,0                                               0703
         EX    @09,@SM03082                                        0703
*   R0=ZERO;                        /* CLEAR R0 TO INDICATE  @G24LB01
*                                      1ST ENTRY IN MSVC FOR @G24LB01
*                                      REQUEST               @G24LB01*/
         SLR   R0,R0                                               0704
*   R1=R6;                          /* ADDRESS REQUEST       @G24LB01*/
         LR    R1,R6                                               0705
*   RFY                                                            0706
*    (R13) RESTRICTED;              /*                       @G24LB01*/
*   R13=ADDR(SAVAREA);              /* SUPPLY REG SAVE AREA  @G24LB01*/
*                                                                  0707
         LA    R13,SAVAREA                                         0707
*   /*****************************************************************/
*   /*                                                               */
*   /* SET MSVC ENTRY POINT IN R15 BASED ON REQUEST CODE     @G24LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0708
*   IF REQCODE=SEL×REQCODE=TRM THEN /*                       @G24LB01*/
         CLI   REQCODE(R6),137                                     0708
         BE    @RT00708                                            0708
         CLI   REQCODE(R6),138                                     0708
         BNE   @RF00708                                            0708
@RT00708 DS    0H                                                  0709
*     R15=ICBVSCRA;                 /* MSVC SCREENING ROUTINE      0709
*                                                            @ZA24770*/
         L     @09,ICBPTR                                          0709
         L     R15,ICBVSCRA(,@09)                                  0709
*   ELSE                            /*                       @G24LB01*/
*     R15=ICBVVIC;                  /* MSVC QUEUE MGR ROUTINE      0710
*                                                            @G24LB01*/
         B     @RC00708                                            0710
@RF00708 L     @09,ICBPTR                                          0710
         L     R15,ICBVVIC(,@09)                                   0710
*   VVICCALL=B1ONE;                 /*                       @G24LB01*/
@RC00708 OI    VVICCALL,B'01000000'                                0711
*   IF R15^=ZERO THEN               /* IS MSVC MOD FOUND     @G24LB02*/
         LTR   R15,R15                                             0712
         BZ    @RF00712                                            0712
*     DO;                           /* BRANCH TO MSVC        @G24LB02*/
*       GEN REFS(R14,R15);                                         0714
*                                                          /*@G24LB01*/
       BALR  R14,R15                 BRANCH TO MSVC            @G24LB01
*     END;                          /* END BRANCH TO MSVC    @G24LB02*/
*   R13=R10;                        /*                       @G24LB01*/
@RF00712 LR    R13,R10                                             0716
*   RFY                                                            0717
*    (R13) UNRESTRICTED;            /*                       @G24LB01*/
*   IF R15^=ZERO THEN               /* DOES MSVC REQUEST HAVE      0718
*                                                            @G24LB01
*                                      AN ERROR              @G24LB01*/
         LTR   R15,R15                                             0718
         BZ    @RF00718                                            0718
*     RETNCODE=R0;                  /* YES SET REASON CODE   @G24LB01*/
         ST    R0,RETNCODE                                         0719
*   ELSE                            /* NO MSVC ERROR         @G24LB01*/
*     RETNCODE=ZERO;                /* SET REAS CODE NO ERR  @G24LB01*/
         B     @RC00718                                            0720
@RF00718 SLR   @09,@09                                             0720
         ST    @09,RETNCODE                                        0720
*   R14=MSVC14;                     /* RESTORE RETURN REG    @G24LB01*/
@RC00718 L     R14,MSVC14                                          0721
*   RETURN;                         /* RETURN TO CALLER      @G24LB01*/
         B     @EL00006                                            0722
*   END MSVCONLY;                   /* END SUB - ROUTINE     @G24LB01*/
*                                                                  0724
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = IOBLKBLD                                 @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = CONSTRUCT THE I/O BLOCKS - IOSB,    @Y30LB00
*                        SRB, MSSC DATA AREA                 @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE CONSTRUCTS THE I/O          @Y30LB00
*                CONTROL BLOCKS USED TO TRANSFER             @Y30LB00
*                THE ORDER TO THE MSC.                       @Y30LB00
*                                                            @Y30LB00
*01*  NOTES = THIS I/O REQUIRES A DATA AREA (MSSC DATA       @Y30LB00
*             AREA) WHICH IS USED BY THE I/O DRIVER          @Y30LB00
*             AND AE APPENDAGE. THE AREA IS POINTED          @Y30LB00
*             TO BY THE IOSUSE FIELD IN THE IOSB.            @Y30LB00
*             THE AREA IS MAPPED AS FOLLOWS:                 @Y30LB00
*                                                            @Y30LB00
*                 4 BYTES FOR THE I/O ECB                    @Y30LB00
*                 4 BYTES FOR THE TCB ADDRESS                @Y30LB00
*                 2 BYTE ERROR CODE FIELD                    @Y30LB00
*                 2 BYTES FOR APPENDAGE SWITCHES             @Y30LB00
*                 64 BYTE REGISTER SAVE AREA FOR THE AE      @Y30LB00
*                    APPENDAGE                               @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE CONSTRUCTS THE I/O         @Y30LB00
*                 CONTROL BLOCKS USED TO TRANSFER THE        @Y30LB00
*                 ORDER TO THE MSC.                          @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = SRBPTR                                       @Y30LB00
*               IOSBPTR                                      @Y30LB00
*               SSCDATAP                                     @Y30LB00
*               ASCBPTR                                      @Y30LB00
*               TCBPT                                        @Y30LB00
*               CCWPTR                                       @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = I/O CONTROL BLOCKS - IOSB, SRB,             @Y30LB00
*                MSSC DATA AREA INITIALIZED                  @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0724
*                                                                  0724
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE FILLS IN THE I/O BLOCKS - IOSB,       @Y30LB00*/
*   /* SRB AND MSSC DATA AREA USED IN THE I/O TO THE MSC     @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0724
*IOBLKBLD:                                                         0724
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
*                                                                  0724
IOBLKBLD DS    0H                                                  0725
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN THE I/O CONTROL BLOCKS. INITIALIZE            @Y30LB00*/
*   /* THE IOSB, THE SRB, AND THE MSSC DATA AREA             @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0725
*   SRB=''B;                        /* ZERO THE SRB          @Y30LB00*/
         L     @09,SRBPTR                                          0725
         XC    SRB(44,@09),SRB(@09)                                0725
*   SRBID=SRBEBCDC;                 /* EBCDIC OF SRB         @Y30LB00*/
         MVC   SRBID(4,@09),SRBEBCDC                               0726
*   SRBASCB=ASCBPTR;                /* ASCB ADDRESS          @Y30LB00*/
         L     @07,ASCBPTR                                         0727
         ST    @07,SRBASCB(,@09)                                   0727
*   SRBPARM=IOSBPTR;                /* IOSB POINTER          @Y30LB00*/
         L     @04,IOSBPTR                                         0728
         ST    @04,SRBPARM(,@09)                                   0728
*   IOSB=''B;                       /* ZERO THE IOSB         @Y30LB00*/
         XC    IOSB(108,@04),IOSB(@04)                             0729
*   IOSFLA=C40H;                    /* COMMAND CHAIN FLAG    @Y30LB00*/
         MVI   IOSFLA(@04),X'40'                                   0730
*   IOSASID=ASCBASID;               /* ASID OF CALLER        @Y30LB00*/
         MVC   IOSASID(2,@04),ASCBASID(@07)                        0731
*   IOSSRB=SRBPTR;                  /* SRB ADDRESS           @Y30LB00*/
         ST    @09,IOSSRB(,@04)                                    0732
*   IOSUSE=SSCDATAP;                /* MSSC DATA AREA ADDR   @Y30LB00*/
         L     @09,SSCDATAP                                        0733
         ST    @09,IOSUSE(,@04)                                    0733
*   IOSVST=CCWPTR;                  /* ADDRESS OF THE CCWS   @Y30LB00*/
         L     @07,CCWPTR                                          0734
         ST    @07,IOSVST(,@04)                                    0734
*/*   CLEAR AND SET SSCDATA AREA FIELDS AS REQUIRED          @ZDR2048*/
*                                                                  0735
*   IOECB=''B;                      /* CLEAR IO ECB          @ZDR2048*/
         SLR   @07,@07                                             0735
         ST    @07,IOECB(,@09)                                     0735
*   IOERRCD=''B;                    /* CLEAR IO ERROR CODE   @ZDR2048*/
         STH   @07,IOERRCD(,@09)                                   0736
*   APPSW=''B;                      /* CLEAR APPENDAGE             0737
*                                      SWITCHES@ZDR2048              */
         STH   @07,APPSW(,@09)                                     0737
*   TCBADDR=TCBPT;                  /* TCB ADDRESS           @Y30LB00*/
         L     @07,TCBPT                                           0738
         ST    @07,TCBADDR(,@09)                                   0738
*IOBLKEXT:                          /*                       @Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER WITH @Y30LB00
*                                      SRB, IOSB, AND MSSC   @Y30LB00
*                                      DATA AREA INITIALIZED @Y30LB00*/
@EL00007 DS    0H                                                  0739
@EF00007 DS    0H                                                  0739
@ER00007 BR    @14                                                 0739
*   END IOBLKBLD;                   /*                       @Y30LB00*/
         B     @EL00007                                            0740
*                                                                  0741
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = MOVORDER                                 @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = MOVE INPUT PARAMETERS INTO          @Y30LB00
*                        ORDER AREA                          @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE MOVES THE INPUT             @Y30LB00
*                INTO THE STORAGE OBTAINED FOR THE           @Y30LB00
*                ORDER                                       @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE CONSTRUCTS THE ORDER       @Y30LB00
*                 TO BE TRANSFERRED FROM THE INPUT           @Y30LB00
*                 PARAMETERS. FOR SUSPEND WITH PREPARE-TO-   @ZD00155
*                 SWAP ATTRIBUTE: BUILDS NO-OP ORDER ALSO.   @ZD00155
*                                                            @Y30LB00
*02*    INPUT = ORDPTR                                       @Y30LB00
*               R6 - ADDRESS OF INPUT PARAMETER LIST/        @Y30LB00
*                 ARPTR - ADDRESS OF THE ACQUIRE/            @Y30LB00
*                 RELINQUISH REQUEST BEING PROCESSED         @Y30LB00
*               ORDLENG                                      @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = PARAMETERS MOVED INTO ORDER AREA.  FOR      @ZD00155
*                SUSPEND WITH PREPARE-TO-SWAP ATTRIBUTE:     @ZD00155
*                BUILDS NO-OP ORDER ALSO.                    @ZD00155
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0741
*                                                                  0741
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE MOVES THE REQUEST INTO THE            @Y30LB00*/
*   /* ORDER AREA                                            @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0741
*MOVORDER:                                                         0741
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
*                                                                  0741
MOVORDER DS    0H                                                  0742
*   /*****************************************************************/
*   /*                                                               */
*   /* ****************************************************  #Y30LB00*/
*   /* AFTER SETTING UP A POINTER TO THE INPUT REQUEST,      @ZD00046*/
*   /* MOVE INTO THE I/O ORDER AREA THE PARAMETERS IN        #Y30LB00*/
*   /* THE INPUT REQUEST BLOCK.                              #Y30LB00*/
*   /* ****************************************************  #Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0742
*   RFY                                                            0742
*    (R9) RESTRICTED;               /*                       #Y30LB00*/
*   IF ARSW=B1ONE THEN              /* IS ACQ/REL REQ BEING  #Y30LB00
*                                      PROCESSED             #Y30LB00*/
         TM    ARSW,B'00100000'                                    0743
         BNO   @RF00743                                            0743
*     R9=ARPTR;                     /* SAVE REQ BLK POINTER  #Y30LB00*/
         L     R9,ARPTR                                            0744
*   ELSE                            /* NOT ACQ/REL REQUEST   #Y30LB00*/
*     R9=R6;                        /* SAVE ADDR OF REQUEST  #Y30LB00*/
         B     @RC00743                                            0745
@RF00743 LR    R9,R6                                               0745
*   R9=R9+4;                        /* SET POINTER PAST LENGTH FIELD
*                                                            @ZA13482*/
@RC00743 AL    R9,@CF00076                                         0746
*   ORDLIST(1:ORDLENG)=R9->DATAAREA(1:ORDLENG);/*            @ZD00046*/
         L     @07,ORDPTR                                          0747
         L     @04,ORDLENG                                         0747
         BCTR  @04,0                                               0747
         EX    @04,@SM03094                                        0747
*   IF(REQCODE=SUSPEND&SUPPRSW=B1ONE) THEN/* SUSPEND WITH    @ZD00155
*                                      PREP-TO-SWAP ATTRIBUTE?     0748
*                                                            @ZD00155*/
         CLI   REQCODE(R6),34                                      0748
         BNE   @RF00748                                            0748
         TM    SUPPRSW(R6),B'00100000'                             0748
         BNO   @RF00748                                            0748
*     NOOP1E=NOOPORDR;              /* YES,SET UP NO-OP DATA @ZD00155
*                                      AREA                  @ZD00155*/
         L     @07,NOOPPTR                                         0749
         MVC   NOOP1E(4,@07),NOOPORDR                              0749
*   IF REQCODE=MSCDUMP&QWALTMSC=ON THEN/* DUMP OF ALT MSC ?  @ZA27590*/
@RF00748 CLI   REQCODE(R6),11                                      0750
         BNE   @RF00750                                            0750
         TM    QWALTMSC(R6),B'00000001'                            0750
         BNO   @RF00750                                            0750
*     DO;                           /*                       @ZA27590*/
*       QWALTMSC=OFF;               /* DON'T WANT TO LEAVE BIT ON  0752
*                                                            @ZA27590*/
         NI    QWALTMSC(R6),B'11111110'                            0752
*       IOSUCB=ICBAUCB;             /* IS ALT SO SET ALT MSC UCB FOR
*                                      SIOF                          */
         L     @07,ICBPTR                                          0753
         L     @07,ICBAUCB(,@07)                                   0753
         L     @04,IOSBPTR                                         0753
         ST    @07,IOSUCB(,@04)                                    0753
*       IF IOSUCB=ZERO THEN         /* IS THERE ALT MSC ?    @ZA27590*/
         LTR   @07,@07                                             0754
         BNZ   @RF00754                                            0754
*         RETNCODE=CF0H;            /* NO, SET F0 RETURN CODE      0755
*                                                            @ZA27590*/
         MVC   RETNCODE(4),@CF02507                                0755
*     END;                          /*                       @ZA27590*/
*MOVEEXIT:                          /*                       @ZD00155*/
*   RETURN;                         /* RETURN TO CALLER -    @ZD00155
*                                      THE INPUT REQUEST     @ZD00155
*                                      PARAMETERS TO BE SENT @ZD00155
*                                      TO THE MSC HAVE BEEN  @ZD00155
*                                      MOVED INTO THE ORDER  @ZD00155
*                                      AREA                  @ZD00155*/
@EL00008 DS    0H                                                  0757
@EF00008 DS    0H                                                  0757
@ER00008 BR    @14                                                 0757
*   RFY                                                            0758
*    (R9) UNRESTRICTED;             /*                       @Y30LB00*/
*   END MOVORDER;                   /*                       @Y30LB00*/
         B     @EL00008                                            0759
*                                                                  0760
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = ARERR1                                   @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = GIVES REQUESTS WITHIN AN ACQUIRE/   @Y30LB00
*                        RELINQUISH CHAIN A COMPLETION CODE  @Y30LB00
*                        WHICH INDICATES THAT THE REQUEST    @Y30LB00
*                        WAS NOT PROCESSED ANY FURTHER AFTER @Y30LB00
*                        AN ERROR WAS DETECTED IN A          @Y30LB00
*                        PREVIOUS REQUEST                    @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE GIVES ACQUIRE/              @Y30LB00
*                RELINQUISH REQUESTS A COMPLETION            @Y30LB00
*                CODE INDICATING THAT THE REQUEST WAS        @Y30LB00
*                NOT PROCESSED ANY FURTHER                   @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE GIVES REQUESTS WITHIN      @Y30LB00
*                 A CHAIN OF ACQUIRES/RELINQUISHES A         @Y30LB00
*                 COMPLETION CODE INDICATING THAT THE        @Y30LB00
*                 REQUEST WAS NOT PROCESSED ANY FURTHER.     @Y30LB00
*                 THIS SUBROUTINE KEYS OFF THE LAST          @Y30LB00
*                 REQUEST PROCESSED IN THE MAINLINE -        @Y30LB00
*                 ALL SUBSEQUENT REQUESTS ARE GIVEN THE      @Y30LB00
*                 COMPLETION CODE.                           @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = ARPTR                                        @Y30LB00
*               ARERRCD                                      @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = ALL ACQUIRE/RELINQUISH REQUESTS             @Y30LB00
*                FOLLOWING THE REQUEST ADDRESSED BY ARPTR    @Y30LB00
*                CONTAIN THE COMPLETION CODE WHICH           @Y30LB00
*                INDICATES THAT THE REQUEST(S) WAS           @Y30LB00
*                (WERE) NOT PROCESSED FURTHER.               @Y30LB00
*                                                            @Y30LB00
*                ARPTR ADDRESS THE LAST ACQUIRE/RELINQUISH   @Y30LB00
*                REQUEST IN THE CHAIN                        @Y30LB00
*                                                            @Y30LB00
*                RETNCODE = 4                                @Y30LB00
*                ARERRSW IS ON                               @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0760
*                                                                  0760
*   /*****************************************************************/
*   /*                                                               */
*   /* THE SUBROUTINE WHICH INDICATES IN ANY ACQUIRE OR      @Y30LB00*/
*   /* RELINQUISH REQUEST AFTER THE ONE THAT HAS AN ERROR    @Y30LB00*/
*   /* THAT THIS REQUEST WAS NOT PROCESSED ANY FURTHER       @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0760
*ARERR1:                                                           0760
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
ARERR1   DS    0H                                                  0761
*   ARERRLP=B1ONE;                  /* SET THE LOOP SWITCH ON      0761
*                                                            #Y30LB00*/
         OI    ARERRLP,B'00000010'                                 0761
*   DO WHILE ARERRLP=B1ONE;         /* LOOP THRU REST OF     #Y30LB00
*                                      ACQ/REL REQUEST IN CHN      0762
*                                                            #Y30LB00
*                                      PUTTING COMPLETION CODE     0762
*                                                            #Y30LB00
*                                      OF NOT-PROCESSED-     #Y30LB00
*                                      FURTHER               #Y30LB00*/
         B     @DE00762                                            0762
@DL00762 DS    0H                                                  0763
*     IF ARNEDB=ZERO THEN           /* ARE THERE ANY MORE REQS     0763
*                                                            #Y30LB00
*                                      IN THE CHAIN          #Y30LB00*/
         L     @09,ARPTR                                           0763
         L     @09,ARNEDB(,@09)                                    0763
         LTR   @09,@09                                             0763
         BNZ   @RF00763                                            0763
*       ARERRLP=B1ZERO;             /* NO, GET OUT OF LOOP   #Y30LB00*/
         NI    ARERRLP,B'11111101'                                 0764
*     ELSE                          /* ANOTHER REQUEST IN CHN      0765
*                                                            #Y30LB00*/
*       DO;                         /* INSERT COMPLETION CODE      0765
*                                                            #Y30LB00
*                                      IN NEXT REQUEST BLOCK #Y30LB00*/
         B     @RC00763                                            0765
@RF00763 DS    0H                                                  0766
*         ARPTR=ARNEDB;             /* ADDRESS NEXT REQUEST  #Y30LB00*/
         L     @09,ARPTR                                           0766
         L     @09,ARNEDB(,@09)                                    0766
         ST    @09,ARPTR                                           0766
*         ARCOMPC=ARERRCD;          /* SET REASON CODE IN REQ      0767
*                                                            #Y30LB00*/
         L     @07,ARERRCD                                         0767
         STH   @07,ARCOMPC(,@09)                                   0767
*       END;                        /*                       #Y30LB00*/
*   END;                            /*                       #Y30LB00*/
@RC00763 DS    0H                                                  0769
@DE00762 TM    ARERRLP,B'00000010'                                 0769
         BO    @DL00762                                            0769
*   ARERRSW=B1ONE;                  /*                       #Y30LB00*/
         OI    ARERRSW,B'00000100'                                 0770
*   RETNCODE=FOUR;                  /*                       #Y30LB00*/
         MVC   RETNCODE(4),@CF00076                                0771
*ERR1EXIT:                          /*                       #Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER -    #Y30LB00
*                                      ALL REQUESTS SUBSEQUENT     0772
*                                                            #Y30LB00
*                                      TO THE ONE IN ERROR   #Y30LB00
*                                      CONTAIN NOT-PROCESSED-      0772
*                                                            #Y30LB00
*                                      FURTHER ERROR CODE    #Y30LB00*/
@EL00009 DS    0H                                                  0772
@EF00009 DS    0H                                                  0772
@ER00009 BR    @14                                                 0772
*   END ARERR1;                     /*                       #Y30LB00*/
         B     @EL00009                                            0773
*                                                                  0774
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = ARERR2                                   @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = GIVES REQUESTS WITHIN AN ACQUIRE/   @Y30LB00
*                        RELINQUISH CHAIN A COMPLETION CODE  @Y30LB00
*                        THAT APPLIES TO ALL THE REQUESTS    @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE GIVES ALL ACQUIRE/          @Y30LB00
*                RELINQUISH REQUESTS WITHIN A CHAIN          @Y30LB00
*                A COMPLETION CODE WHICH APPLIES             @Y30LB00
*                TO ALL THE REQUESTS.                        @Y30LB00
*                                                            @Y30LB00
*                IF A COMPLETION CODE FOR A REQUEST          @Y30LB00
*                INDICATES IT IS ALREADY IN ERROR,           @Y30LB00
*                THE CODE IS NOT BE CHANGED.                 @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE IS CALLED WHEN             @Y30LB00
*                 ALL REQUESTS WITHIN AN ACQUIRE/            @Y30LB00
*                 RELINQUISH CHAIN ARE TO HAVE THE SAME      @Y30LB00
*                 COMPLETION CODE. THIS SUBROUTINE           @Y30LB00
*                 KEYS OFF THE FIRST REQUEST IN THE          @Y30LB00
*                 CHAIN - ALL REQUESTS BUT THOSE             @Y30LB00
*                 ALREADY IN ERROR ARE GIVEN THE             @Y30LB00
*                 COMPLETION CODE.                           @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = ARERRCD                                      @Y30LB00
*               R6 - ADDR OF FIRST ACQUIRE/RELINQUISH        @Y30LB00
*                    IN THE CHAIN                            @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = ALL ACQUIRE/RELINQUISH REQUESTS             @Y30LB00
*                THAT DO NOT HAVE AN ERROR CONTAIN           @Y30LB00
*                THE COMPLETION CODE WHICH APPLIES           @Y30LB00
*                TO ALL THE REQUESTS IN THE                  @Y30LB00
*                CHAIN.                                      @Y30LB00
*                                                            @Y30LB00
*                ARPTR ADDRESS THE LAST ACQUIRE/RELINQUISH   @Y30LB00
*                REQUEST IN THE CHAIN                        @Y30LB00
*                                                            @Y30LB00
*                RETNCODE = 4                                @Y30LB00
*                ARERRSW IS ON                               @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0774
*                                                                  0774
*   /*****************************************************************/
*   /*                                                               */
*   /* THE SUBROUTINE WHICH INDICATES IN ALL ACQUIRE OR      @Y30LB00*/
*   /* RELINQUISH REQUESTS EXCEPT THOSE ALREADY IN ERROR,    @Y30LB00*/
*   /* THE ERROR THAT APPLIES TO ALL THE REQUESTS            @Y30LB00*/
*   /* WITHIN THE CHAIN                                      @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0774
*ARERR2:                                                           0774
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
ARERR2   DS    0H                                                  0775
*   ARPTR=R6;                       /* ADDRESS 1ST ACQ/REL REQ     0775
*                                                            @Y30LB00
*                                      IN CHAIN              @Y30LB00*/
         ST    R6,ARPTR                                            0775
*   ARERRLP=B1ONE;                  /* SET LOOP SWITCH ON    @Y30LB00*/
         OI    ARERRLP,B'00000010'                                 0776
*   DO WHILE ARERRLP=B1ONE;         /* LOOP THRU CHAIN OF REQS     0777
*                                                            @Y30LB00
*                                      INSERTING COMPLETION  @Y30LB00
*                                      CODE IN THOSE THAT ARE      0777
*                                                            @Y30LB00
*                                      NOT IN ERROR          @Y30LB00*/
         B     @DE00777                                            0777
@DL00777 DS    0H                                                  0778
*     IF ARCOMPC=ZERO THEN          /* IS REQUEST IN ERROR   @Y30LB00*/
         L     @09,ARPTR                                           0778
         LH    @07,ARCOMPC(,@09)                                   0778
         N     @07,@CF03081                                        0778
         LTR   @07,@07                                             0778
         BNZ   @RF00778                                            0778
*       ARCOMPC=ARERRCD;            /* NO, INSERT ERROR CODE @Y30LB00*/
         L     @07,ARERRCD                                         0779
         STH   @07,ARCOMPC(,@09)                                   0779
*     IF ARNEDB=ZERO THEN           /* IS THERE ANOTHER REQ  @Y30LB00
*                                      IN THE CHAIN          @Y30LB00*/
@RF00778 L     @09,ARPTR                                           0780
         L     @09,ARNEDB(,@09)                                    0780
         LTR   @09,@09                                             0780
         BNZ   @RF00780                                            0780
*       ARERRLP=B1ZERO;             /* NO, SET LOOP SWITCH OFF     0781
*                                                            @Y30LB00*/
         NI    ARERRLP,B'11111101'                                 0781
*     ELSE                          /* THERE IS ANOTHER REQ  @Y30LB00*/
*       ARPTR=ARNEDB;               /* ADDR NEXT REQ BLOCK   @Y30LB00*/
         B     @RC00780                                            0782
@RF00780 L     @09,ARPTR                                           0782
         L     @09,ARNEDB(,@09)                                    0782
         ST    @09,ARPTR                                           0782
*   END;                            /*                       @Y30LB00*/
@RC00780 DS    0H                                                  0783
@DE00777 TM    ARERRLP,B'00000010'                                 0783
         BO    @DL00777                                            0783
*   ARERRSW=B1ONE;                  /* INDICATE ACQ/REL ERROR      0784
*                                                            @Y30LB00*/
         OI    ARERRSW,B'00000100'                                 0784
*   RETNCODE=FOUR;                  /* SET REASON CODE       @Y30LB00*/
         MVC   RETNCODE(4),@CF00076                                0785
*ERR2EXIT:                          /*                       @Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER -    @Y30LB00
*                                      ALL REQS NOT ALREADY  @Y30LB00
*                                      IN ERROR CONTAIN THE  @Y30LB00
*                                      COMPLETION            @Y30LB00*/
@EL00010 DS    0H                                                  0786
@EF00010 DS    0H                                                  0786
@ER00010 BR    @14                                                 0786
*   END ARERR2;                     /*                       @Y30LB00*/
         B     @EL00010                                            0787
*                                                                  0788
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = CPUID                                    @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = IF NECESSARY GETS AND INSERTS       @Y30LB00
*                        THE CPUID INTO THE ORDER            @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE GETS AND INSERTS            @Y30LB00
*                THE CPUID OF THE MACHINE INTO               @Y30LB00
*                THOSE ORDERS WHICH REQUIRE IT               @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE CHECKS FOR AN              @Y30LB00
*                 ACQUIRE, RELINQUISH, MOUNT, DEMOUNT,       @Y30LB00
*                 VARY OFF, OR PURGE REQUEST                 @Y30LB00
*                 WITH A CPUID FIELD OF ZERO.  IF ANY        @Y30LB00
*                 OF THE ABOVE REQUESTS HAS A ZERO           @Y30LB00
*                 CPUID, THE MACHINE CPUID IS STORED         @Y30LB00
*                 AND INSERTED INTO THE ORDER.               @Y30LB00
*                 FOR DISASSOCIATE THE ICBCPUID              @G24LB05
*                 FIELD IS UPDATED FROM ASDACPU              @G24LB05
*                 FIELD OF DISASSOCIATE ORDER                @G24LB05
*                                                            @Y30LB00
*02*    INPUT = ORDPTR                                       @Y30LB00
*               R6 - ADDRESS OF INPUT REQUEST                @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = POSSIBLY, ORDERPT AND                       @Y30LB00
*                MACHINE CPUID INSERTED INTO THE             @Y30LB00
*                  ORDER                                     @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0788
*                                                                  0788
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THE UNIQUE IDENTIFIER OF THE CPU NEEDS   @Y30LB00*/
*   /* TO BE INSERTED INTO THE INPUT BLOCK. IF THE INPUT     @Y30LB00*/
*   /* BLOCK INDICATES THAT THE REQUEST IS ACQUIRE,          @Y30LB00*/
*   /* RELINQUISH, PURGE, MOUNT, DEMOUNT, OR                 @Y30LB00*/
*   /* VARY OFF AND THE CPUID FIELD IS ZEROS THEN INSERT     @Y30LB00*/
*   /* THE UNIQUE CPUID INTO THE ORDER FROM ICBCPUID FIELD   @G24LB05*/
*   /* FOR DISASSOCIATE THE ICBCPUID FIELD IS UPDATED        @G24LB05*/
*   /* FROM THE ASDACPU FIELD OF DISASSOCIATE ORDER.         @G24LB05*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0788
*CPUID:                                                            0788
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
CPUID    DS    0H                                                  0789
*   IF(REQCODE=ACQUIRE&ARHOST=C5ZEROS)×/*                    #Y30LB00*/
*       (REQCODE=RELINQ&ARHOST=C5ZEROS)×/*                   #Y30LB00*/
*       (REQCODE=MOUNT&MDHOST=C5ZEROS)×/*                    #Y30LB00*/
*       (REQCODE=DEMOUNT&DMHOST=C5ZEROS)×/*                  #Y30LB00*/
*       (REQCODE=VARYOFF&VOFTEST=B1ONE&/*                    #Y30LB00*/
*       VOFHOST=C5ZEROS)×(REQCODE=PURGE&/*                   #Y30LB00*/
*       PURGHOST=C5ZEROS)×(REQCODE=ASSOCIAT&/*               @G24LB05*/
*       (ASDASSOC=ON×ASDEINT=ON)&   /*                       @G24LB05*/
*       ICBMSCA=OFF) THEN           /* IS CPUID FIELD ZERO   @G24LB05*/
         CLI   REQCODE(R6),2                                       0789
         BNE   @GL00079                                            0789
         L     @09,ARPTR                                           0789
         CLC   ARHOST(5,@09),C5ZEROS                               0789
         BE    @RT00789                                            0789
@GL00079 CLI   REQCODE(R6),4                                       0789
         BNE   @GL00078                                            0789
         L     @09,ARPTR                                           0789
         CLC   ARHOST(5,@09),C5ZEROS                               0789
         BE    @RT00789                                            0789
@GL00078 CLI   REQCODE(R6),8                                       0789
         BNE   @GL00077                                            0789
         CLC   MDHOST(5,R6),C5ZEROS                                0789
         BE    @RT00789                                            0789
@GL00077 CLI   REQCODE(R6),6                                       0789
         BNE   @GL00076                                            0789
         CLC   DMHOST(5,R6),C5ZEROS                                0789
         BE    @RT00789                                            0789
@GL00076 CLI   REQCODE(R6),12                                      0789
         BNE   @GL00075                                            0789
         TM    VOFTEST(R6),B'00010000'                             0789
         BNO   @GL00075                                            0789
         CLC   VOFHOST(5,R6),C5ZEROS                               0789
         BE    @RT00789                                            0789
@GL00075 CLI   REQCODE(R6),20                                      0789
         BNE   @GL00074                                            0789
         CLC   PURGHOST(5,R6),C5ZEROS                              0789
         BE    @RT00789                                            0789
@GL00074 CLI   REQCODE(R6),44                                      0789
         BNE   @RF00789                                            0789
         TM    ASDASSOC(R6),B'01000100'                            0789
         BZ    @RF00789                                            0789
         L     @09,ICBPTR                                          0789
         TM    ICBMSCA(@09),B'00000010'                            0789
         BNZ   @RF00789                                            0789
@RT00789 DS    0H                                                  0790
*     DO;                           /* STORE CPUID INTO REQ  #Y30LB00*/
*       RFY                                                        0791
*        (ARLIST,                                                  0791
*         VOFLIST,                                                 0791
*         MNTLIST,                                                 0791
*         DMTLIST,                                                 0791
*         PURGLIST)                 /*                       #Y30LB00*/
*             BASED(ORDERPT);       /*                       #Y30LB00*/
*       ORDERPT=ADDR(ORDLIST)-FOUR; /*                       #Y30LB00
*                                      ADDRESS THE ORDER AREA      0792
*                                                            #Y30LB00
*                                      MINUS FOUR BYTES      #Y30LB00*/
         L     @09,ORDPTR                                          0792
         SL    @09,@CF00076                                        0792
         ST    @09,ORDERPT                                         0792
*       IF REQCODE=ACQUIRE×REQCODE=RELINQ THEN/*             #Y30LB00
*                                      IS ACQ/REL REQUEST    #Y30LB00*/
         CLI   REQCODE(R6),2                                       0793
         BE    @RT00793                                            0793
         CLI   REQCODE(R6),4                                       0793
         BNE   @RF00793                                            0793
@RT00793 DS    0H                                                  0794
*         ARHOST=ICBCPUID;          /* STORE CPUID           @G24LB05*/
         L     @09,ORDERPT                                         0794
         L     @07,ICBPTR                                          0794
         MVC   ARHOST(5,@09),ICBCPUID(@07)                         0794
*       ELSE                        /* NOT ACQ/REL REQUEST   #Y30LB00*/
*         IF REQCODE=MOUNT THEN     /* IS MOUNT REQUEST      #Y30LB00*/
         B     @RC00793                                            0795
@RF00793 CLI   REQCODE(R6),8                                       0795
         BNE   @RF00795                                            0795
*           MDHOST=ICBCPUID;        /* STORE CPUID           @G24LB05*/
         L     @09,ORDERPT                                         0796
         L     @07,ICBPTR                                          0796
         MVC   MDHOST(5,@09),ICBCPUID(@07)                         0796
*         ELSE                      /* NOT MOUNT REQUEST     #Y30LB00*/
*           IF REQCODE=DEMOUNT THEN /*                       #Y30LB00
*                                      IS DEMOUNT REQUEST    #Y30LB00*/
         B     @RC00795                                            0797
@RF00795 CLI   REQCODE(R6),6                                       0797
         BNE   @RF00797                                            0797
*             DMHOST=ICBCPUID;      /* STORE CPUID           @G24LB05*/
         L     @09,ORDERPT                                         0798
         L     @07,ICBPTR                                          0798
         MVC   DMHOST(5,@09),ICBCPUID(@07)                         0798
*           ELSE                    /* NOT DEMOUNT REQUEST   #Y30LB00*/
*             IF REQCODE=VARYOFF THEN/*                      #Y30LB00
*                                      IS VARY OFF REQUEST   #Y30LB00*/
         B     @RC00797                                            0799
@RF00797 CLI   REQCODE(R6),12                                      0799
         BNE   @RF00799                                            0799
*               VOFHOST=ICBCPUID;   /* STORE CPUID           @G24LB05*/
         L     @09,ORDERPT                                         0800
         L     @07,ICBPTR                                          0800
         MVC   VOFHOST(5,@09),ICBCPUID(@07)                        0800
*             ELSE                  /* NOT VARY OFF REQUEST  #Y30LB00*/
*               IF REQCODE=PURGE THEN/*                      #Y30LB00
*                                      IS PURGE REQUEST      @Y30LB00*/
         B     @RC00799                                            0801
@RF00799 CLI   REQCODE(R6),20                                      0801
         BNE   @RF00801                                            0801
*                 PURGHOST=ICBCPUID;/* STORE CPUID           @G24LB05*/
         L     @09,ORDERPT                                         0802
         L     @07,ICBPTR                                          0802
         MVC   PURGHOST(5,@09),ICBCPUID(@07)                       0802
*               ELSE                /*                       @G24LB05*/
*                 IF REQCODE=ASSOCIAT THEN/*                 @G24LB05*/
         B     @RC00801                                            0803
@RF00801 CLI   REQCODE(R6),44                                      0803
         BNE   @RF00803                                            0803
*                   ICBCPUID=ASDACPU;/*                      @G24LB05*/
         L     @09,ICBPTR                                          0804
         MVC   ICBCPUID(5,@09),ASDACPU(R6)                         0804
*       RFY                                                        0805
*        (VOFLIST,                                                 0805
*         MNTLIST,                                                 0805
*         DMTLIST,                                                 0805
*         PURGLIST)                 /*                       @Y30LB00*/
*             BASED(R6);            /*                       @Y30LB00*/
@RF00803 DS    0H                                                  0805
@RC00801 DS    0H                                                  0805
@RC00799 DS    0H                                                  0805
@RC00797 DS    0H                                                  0805
@RC00795 DS    0H                                                  0805
@RC00793 DS    0H                                                  0806
*       RFY                                                        0806
*        (ARLIST) BASED(ARPTR);     /*                       @Y30LB00*/
*     END;                          /*                       @Y30LB00*/
*IDEXIT:                            /*                       @Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER -    @Y30LB00
*                                      IF REQUIRED FOR THE   @Y30LB00
*                                      ORDER, THE CPUID OF   @Y30LB00
*                                      MACHINE HAS BEEN      @Y30LB00
*                                      INSERTED INTO THE     @Y30LB00
*                                      ORDER                 @Y30LB00*/
@EL00011 DS    0H                                                  0808
@EF00011 DS    0H                                                  0808
@ER00011 BR    @14                                                 0808
*   END CPUID;                      /*                       @Y30LB00*/
         B     @EL00011                                            0809
*                                                                  0810
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = RECRDVRY                                 @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = INITIATES THE WRITING OF A          @Y30LB00
*                        SMF RECORD FOR VARY ON/OFF          @Y30LB00
*                        REQUESTS. CALLS SVC 91 FOR A        @Y30LB00
*                        VARY OFF REQUEST.                   @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE INITIATES THE               @Y30LB00
*                THE WRITING OF A SMF RECORD FOR VARY        @Y30LB00
*                REQUESTS AND CALLS SVC 91 TO                @Y30LB00
*                OFFLOAD THE BUFFERED LOG DATA FOR VARY      @Y30LB00
*                OFF REQUESTS.                               @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE CONSTRUCTS                 @Y30LB00
*                 THE SMF RECORD FOR THE VARY AND            @Y30LB00
*                 INITIATES THE WRITING OF THE RECORD.       @Y30LB00
*                 FOR A VARY OFF REQUEST SVC 91 IS           @Y30LB00
*                 CALLED TO OFFLOAD THE BUFFERED             @Y30LB00
*                 LOG DATA FOR THE DEVICE.                   @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = R6 - INPUT REQUEST ADDRESS                   @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = SMF RECORD WRITTEN                          @Y30LB00
*                POSSIBLY, BUFFERED LOG DATA COLLECTED       @Y30LB00
*                  FOR THE DEVICE                            @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0810
*                                                                  0810
*/* THE SUBROUTINE BUILDS A SMF RECORD AND CALLS SVC 83      @Y30LB00
*   INORDER TO HAVE IT WRITTEN. IF THE REQUEST IS AN         @Y30LB00
*   VARY OFF SVC 91 IS CALLED TO OFFLOAD THE BUFFERED LOG    @Y30LB00
*   DATA FOR THE DEVICE                                      @Y30LB00*/
*                                                                  0810
*RECRDVRY:                                                         0810
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
RECRDVRY DS    0H                                                  0811
*   SAVE14=R14;                     /* SAVE RETURN ADDRESS   #Y30LB00*/
         ST    R14,SAVE14                                          0811
*   IF SVC83=B1ZERO THEN            /* HAS SVC 83 BEEN CALLED      0812
*                                                            #Y30LB00
*                                      FOR VARY              #Y30LB00*/
         TM    SVC83,B'00100000'                                   0812
         BNZ   @RF00812                                            0812
*     DO;                           /* CALL SVC 83           #Y30LB00*/
*                                                                  0813
*       /*************************************************************/
*       /*                                                           */
*       /* GET STORAGE FOR THE SMF RECORD FROM SUBPOOL 0     #Y30LB00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0814
*       RFY                                                        0814
*         SMF22VON BASED(SMF22PTR+LENGTH(SMFRCD22));/*       @ZDR2048*/
*       RFY                                                        0815
*         SMF22VOF BASED(SMF22PTR+LENGTH(SMFRCD22));/*       @ZDR2048*/
*       R0=LENGTH(SMFRCD22)+LENGTH(SMF22VON);/*              @ZDR2048*/
         LA    R0,28                                               0816
*       R1=ADDR(IGETMAIN);          /*                       #Y30LB00*/
         LA    R1,IGETMAIN                                         0817
*       GEN REFS(R1,R0,SMF22PTR);                                  0818
*                                                          /*@ZDR2048*/
* GET STORAGE FOR THE SMF RECORD                               #Y30LB00
IGETMA30 GETMAIN EC,MF=(E,(R1)),LV=(R0),A=SMF22PTR,SP=0,       @ZDR2048*
               RELATED=(SP0,IGC0012F(IFREEM30))                #Y30LB00
*       IF R15=ZERO THEN            /* WAS STORAGE OBTAINED  #Y30LB00
*                                      FOR THE SMF RECORD    #Y30LB00*/
         SLR   @09,@09                                             0819
         CR    R15,@09                                             0819
         BNE   @RF00819                                            0819
*         DO;                       /* INITIALIZE RECORD     #Y30LB00*/
*           SMFRCD22=''B;           /* CLEAR RECORD          @ZDR2048*/
         L     @07,SMF22PTR                                        0821
         XC    SMFRCD22(22,@07),SMFRCD22(@07)                      0821
*           SMF22LEN=LENGTH(SMFRCD22)+LENGTH(SMF22VON);/* LENGTH   0822
*                                                            @ZDR2048*/
         MVC   SMF22LEN(2,@07),@CH00162                            0822
*           SMF22RTY=TWENTY2;       /* RECORD TYPE - 22      @ZDR2048*/
         MVI   SMF22RTY(@07),X'16'                                 0823
*           SMF22ECT=ONE;           /* COUNT                 @ZDR2048*/
*                                                                  0824
         MVC   SMF22ECT(2,@07),@CH00061                            0824
*           /*********************************************************/
*           /*                                                       */
*           /* CONVERT THE SSID IN THE REQUEST TO EBCDIC     #Y30LB00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0825
*           CONVERTA=ZERO;          /*                       #Y30LB00*/
         STCM  @09,15,CONVERTA                                     0825
*           BYTES34=VOFSSID;        /*                       #Y30LB00*/
         MVC   BYTES34(2),VOFSSID(R6)                              0826
*           BYTES234=BYTES234*SIXTEEN;/*                     #Y30LB00*/
         SLR   @09,@09                                             0827
         ICM   @09,7,BYTES234                                      0827
         SLA   @09,4                                               0827
         STCM  @09,7,BYTES234                                      0827
*           SIGN=B4ONES;            /*                       #Y30LB00*/
         OI    SIGN,B'00001111'                                    0828
*           UNPK(CONVERTA,BYTES34); /*                       #Y30LB00*/
         UNPK  CONVERTA(4),BYTES34(2)                              0829
*           IF BYTE2>TWO49 THEN     /* DOES BYTE 2 NEED TO BE      0830
*                                                            #Y30LB00
*                                      CONVERTED?            #Y30LB00*/
         CLI   BYTE2,249                                           0830
         BNH   @RF00830                                            0830
*             BYTE2=BYTE2-FIFTY7;   /* YES                   #Y30LB00*/
         SLR   @09,@09                                             0831
         IC    @09,BYTE2                                           0831
         SL    @09,@CF02471                                        0831
         STC   @09,BYTE2                                           0831
*           IF BYTE3>TWO49 THEN     /* DOES BYTE 3 NEED TO   #Y30LB00
*                                      BE CONVERTED?         #Y30LB00*/
@RF00830 CLI   BYTE3,249                                           0832
         BNH   @RF00832                                            0832
*             BYTE3=BYTE3-FIFTY7;   /* YES                   #Y30LB00*/
         SLR   @09,@09                                             0833
         IC    @09,BYTE3                                           0833
         SL    @09,@CF02471                                        0833
         STC   @09,BYTE3                                           0833
*           IF BYTE4>TWO49 THEN     /* DOES BYTE 4 NEED TO BE      0834
*                                                            #Y30LB00
*                                      CONVERTED?            #Y30LB00*/
@RF00832 CLI   BYTE4,249                                           0834
         BNH   @RF00834                                            0834
*             BYTE4=BYTE4-FIFTY7;   /* YES                   #Y30LB00*/
         SLR   @09,@09                                             0835
         IC    @09,BYTE4                                           0835
         SL    @09,@CF02471                                        0835
         STC   @09,BYTE4                                           0835
*           IF REQCODE=VARYON THEN  /* IS REQ FOR VARY ON    #Y30LB00*/
@RF00834 CLI   REQCODE(R6),10                                      0836
         BNE   @RF00836                                            0836
*             DO;                   /* YES, SET ID TO VARYON #Y30LB00*/
*               SMF22VON=''B;       /* CLEAR ELEMENT         @ZDR2048*/
         L     @09,SMF22PTR                                        0838
         LA    @07,22                                              0838
         ALR   @07,@09                                             0838
         XC    SMF22VON(6,@07),SMF22VON(@07)                       0838
*               SMF22IND=SMFVON;    /* CREATOR INDICATOR     @ZDR2048*/
         MVC   SMF22IND(2,@09),@CH00084                            0839
*               SMF22NID=SMFVON;    /* ELEMENT ID 05         @ZDR2048*/
         MVI   SMF22NID(@07),X'05'                                 0840
*               SMF22NSI=BYTES234;  /* PUT SSID INTO RECORD  @ZDR2048*/
         MVC   SMF22NSI(3,@07),BYTES234                            0841
*             END;                  /*                       #Y30LB00*/
*           ELSE                    /* VARY OFF REQUEST      #Y30LB00*/
*             DO;                   /* SET ID TO VARY OFF    #Y30LB00*/
         B     @RC00836                                            0843
@RF00836 DS    0H                                                  0844
*               SMF22VOF=''B;       /* CLEAR ELEMENT         @ZDR2048*/
         L     @09,SMF22PTR                                        0844
         LA    @07,22                                              0844
         ALR   @07,@09                                             0844
         XC    SMF22VOF(6,@07),SMF22VOF(@07)                       0844
*               SMF22IND=SMFVOF;    /* CREATOR INDICATOR     @ZDR2048*/
         MVC   SMF22IND(2,@09),@CH00079                            0845
*               SMF22FID=SMFVOF;    /* ELEMENT ID 06         @ZDR2048*/
         MVI   SMF22FID(@07),X'06'                                 0846
*               SMF22FSI=BYTES234;  /* PUT SSID INTO RECORD  @ZDR2048*/
         MVC   SMF22FSI(3,@07),BYTES234                            0847
*             END;                  /*                       #Y30LB00*/
*           R1=SMF22PTR;            /* ADDRESS RECORD        @ZDR2048*/
@RC00836 L     R1,SMF22PTR                                         0849
*           GEN;                                                   0850
*                                                          /*@Y30LB00*/
* CALL SVC 83 TO WRITE THE SMF RECORD                          @Y30LB00
ISVC83   SVC   83                                              @Y30LB00
*           SVC83=B1ONE;            /* INDICATE SVC83 CALLED @Y30LB00*/
         OI    SVC83,B'00100000'                                   0851
*/*   FREE THE STORAGE FOR THE SMF RECORD                    @Y30LB00*/
*                                                                  0852
*           R0=LENGTH(SMFRCD22)+LENGTH(SMF22VON);/*          @ZDR2048*/
         LA    R0,28                                               0852
*           R1=ADDR(IFREEMAI);      /*                       @Y30LB00*/
         LA    R1,IFREEMAI                                         0853
*           GEN REFS(R1,R0,SMF22PTR);                              0854
*                                                          /*@ZDR2048*/
* FREE THE STORAGE FOR THE SMF RECORD                          @Y30LB00
IFREEM30 FREEMAIN E,MF=(E,(R1)),LV=(R0),A=SMF22PTR,SP=0,       @ZDR2048*
               RELATED=(SP0,IGC0012F(IGETMA30))                @Y30LB00
*         END;                      /*                       @Y30LB00*/
*     END;                          /*                       @Y30LB00*/
@RF00819 DS    0H                                                  0857
*   IF REQCODE=VARYOFF&SVC91=B1ZERO THEN/*                   @Y30LB00
*                                      IS VARY OFF REQUEST   @Y30LB00*/
@RF00812 CLI   REQCODE(R6),12                                      0857
         BNE   @RF00857                                            0857
         TM    SVC91,B'00010000'                                   0857
         BNZ   @RF00857                                            0857
*     DO;                           /* YES, CALL SVC 91      @Y30LB00*/
*       R0=ICBPUCB;                 /* GET ADDRESS OF PRIMARY      0859
*                                                            @Y30LB00
*                                      UCB FOR MSC           @Y30LB00*/
         L     @09,ICBPTR                                          0859
         L     R0,ICBPUCB(,@09)                                    0859
*       GEN REFS(R0);                                              0860
*                                                          /*@Y30LB00*/
         LCR   R0,R0              GET 2S COMPLEMENT OF         @Y30LB00
*                                 DSM UCB ADDRESS              @Y30LB00
*       R1=VOFSSID;                 /* GET SSID OF DEV VARIED      0861
*                                                            @Y30LB00*/
         LH    R1,VOFSSID(,R6)                                     0861
*       GEN;                                                       0862
*                                                          /*@Y30LB00*/
* CALL SVC 91 TO OFFLOAD THE BUFFERED LOG DATA FOR THE         @Y30LB00
* DEVICE VARIED OFF                                            @Y30LB00
ISVC91   SVC   91                                              @Y30LB00
*       SVC91=B1ONE;                /* INDICATE SVC91 CALLED @Y30LB00*/
         OI    SVC91,B'00010000'                                   0863
*     END;                          /*                       @Y30LB00*/
*RCRDEXIT:                          /*                       @Y30LB00*/
*   R14=SAVE14;                     /* RESTORE RETURN ADDRESS      0865
*                                                            @Y30LB00*/
@RF00857 DS    0H                                                  0865
RCRDEXIT L     R14,SAVE14                                          0865
*   RETURN;                         /* RETURN TO CALLER -    @Y30LB00
*                                      POSSIBLY, SMF RECORD  @Y30LB00
*                                      WRITTEN AND BUFFERED  @Y30LB00
*                                      LOG DATA COLLECTED FOR      0866
*                                                            @Y30LB00
*                                      THE DEVICE            @Y30LB00*/
@EL00012 DS    0H                                                  0866
@EF00012 DS    0H                                                  0866
@ER00012 BR    @14                                                 0866
*   END RECRDVRY;                   /*                       @Y30LB00*/
*                                                                  0868
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = SYNCHK                                   @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = SYNTAX CHECKS A REQUEST TO          @Y30LB00
*                        MSSC SVC.                           @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE SYNTAX CHECKS REQUESTS      @Y30LB00
*                WITH IMPLIED OR REQUESTED DELAYED           @Y30LB00
*                RESPONSE FOR CORRECT LENGTH,                @Y30LB00
*                A NON-ZERO ECB ADDRESS, AND POSSIBLY,       @Y30LB00
*                VALID NUMBER OF EXTENTS IF AN               @Y30LB00
*                ACQUIRE/RELINQUISH REQUEST.                 @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE SYNTAX CHECKS REQUESTS     @Y30LB00
*                 WITH AN IMPLIED OR REQUESTED DELAYED       @Y30LB00
*                 RESPONSE TO INSURE THAT THE LENGTH         @Y30LB00
*                 SPECIFIED IN THE REQUEST IS CORRECT.       @Y30LB00
*                 THE ECB ADDRESS IS CHECKED TO INSURE       @Y30LB00
*                 THAT IT IS NOT ZERO.  FOR ACQUIRE/         @Y30LB00
*                 RELINQUISH REQUEST, THE NUMBER OF EXTENTS  @Y30LB00
*                 IS CHECKED TO INSURE THAT IT IS WITHIN     @Y30LB00
*                 THE RANGE OF 1 AND 16 (INCLUSIVE)          @Y30LB00
*                                                            @Y30LB00
*                 CALLS THE FOLLOWING MSSC SVC SUBROUTINE:   @Y30LB00
*                                                            @Y30LB00
*                     LENCHK                                 @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = R6 - INPUT REQUEST ADDRESS                   @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = RETNCODE                                    @Y30LB00
*                  0 - NO ERROR                              @Y30LB00
*                  370 - PARAMETER NOT AS EXPECTED           @Y30LB00
*                        (INCORRECT LENGTH, ECB ADDRESS      @Y30LB00
*                        ZERO, OR INVALID EXTENTS)           @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  0868
*                                                                  0868
*/* SUBROUTINE WHICH SYNTAX CHECKS THOSE INPUT REQUESTS      @Y30LB00*/
*/* TO THE SVC WITH AN IMPLIED OR REQUESTED DELAYED RESPONSE @Y30LB00*/
*/* TO INSURE THAT THE LENGTH OF THE REQUEST IS CORRECT,     @Y30LB00*/
*/* THAT THE ECB ADDRESS IS NOT ZERO, AND THAT THE NUMBER    @Y30LB00*/
*/* OF EXTS FOR AN ACQUIRE/RELINQUISH REQUEST IS BETWEEN     @Y30LB00*/
*/* 1 AND 16 (INCLUSIVE)                                     @Y30LB00*/
*                                                                  0868
*SYNCHK:                                                           0868
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
SYNCHK   DS    0H                                                  0869
*   SAVE14=R14;                     /*                       #Y30LB00*/
         ST    R14,SAVE14                                          0869
*   IF REQCODE=MOVE THEN            /* IF MOVE REQUEST       #Y30LB00*/
         CLI   REQCODE(R6),14                                      0870
         BNE   @RF00870                                            0870
*     DO;                           /* CHECK THE ECB ADDR AND      0871
*                                                            #Y30LB00
*                                      REQUEST LENGTH        #Y30LB00*/
*       IF MCRTECB=ZERO×LISTLEN^=LENGTH(MVLIST) THEN/*       #Y30LB00
*                                      IS ECB ADDR ZERO OR   #Y30LB00
*                                      LENGTH INCORRECT      #Y30LB00*/
         L     @09,MCRTECB(,R6)                                    0872
         LTR   @09,@09                                             0872
         BZ    @RT00872                                            0872
         CLC   LISTLEN(4,R6),@CF03063                              0872
         BE    @RF00872                                            0872
@RT00872 DS    0H                                                  0873
*         DO;                       /* SET REASON CODE       #Y30LB00*/
*                                                                  0873
*           /*********************************************************/
*           /*                                                       */
*           /* INDICATE ERROR DETECTED BEFORE MSVC CALLED AND        */
*           /*                                               #Y30LB00*/
*           /* SET REASON CODE                               #Y30LB00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0874
*           VVICERR=B1ONE;          /*                       #Y30LB00*/
         OI    VVICERR,B'00010000'                                 0874
*           RETNCODE=CODE370;       /*                       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                0875
*         END;                      /*                       #Y30LB00*/
*       ELSE                        /* ECB ADDR NOT ZERO AND #Y30LB00
*                                      LENGTH CORRECT        #Y30LB00*/
*         DO;                       /* SAVE ECB ADDR         #Y30LB00*/
*                                                                  0877
         B     @RC00872                                            0877
@RF00872 DS    0H                                                  0878
*           /*********************************************************/
*           /*                                                       */
*           /* SET DELAYED RESPONSE SWITCH AND SAVE ECB ADDR #Y30LB00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0878
*           DRSWITCH=B1ONE;         /*                       #Y30LB00*/
         OI    DRSWITCH,B'10000000'                                0878
*           DELRECB=MCRTECB;        /*                       #Y30LB00*/
         L     @09,MCRTECB(,R6)                                    0879
         ST    @09,DELRECB                                         0879
*         END;                      /*                       #Y30LB00*/
*     END;                          /*                       #Y30LB00*/
*   ELSE                            /* IF NOT MOVE           #Y30LB00*/
*     IF REQCODE=DEFINE THEN        /* IS DEFINE REQUEST     #Y30LB00*/
         B     @RC00870                                            0882
@RF00870 CLI   REQCODE(R6),24                                      0882
         BNE   @RF00882                                            0882
*       DO;                         /* CHECK THE ECB ADDR AND      0883
*                                                            #Y30LB00
*                                      REQUEST LENGTH        #Y30LB00*/
*         IF DEFVECB=ZERO×LISTLEN^=LENGTH(DEFLIST)/*         #Y30LB00*/
*           THEN                    /* IS ECB ADDR ZERO OR   #Y30LB00
*                                      LENGTH INCORRECT      #Y30LB00*/
         L     @09,DEFVECB(,R6)                                    0884
         LTR   @09,@09                                             0884
         BZ    @RT00884                                            0884
         CLC   LISTLEN(4,R6),@CF02521                              0884
         BE    @RF00884                                            0884
@RT00884 DS    0H                                                  0885
*           DO;                     /* SET REASON CODE       #Y30LB00*/
*                                                                  0885
*             /*******************************************************/
*             /*                                                     */
*             /* INDICATE ERROR DETECTED BEFORE MSVC CALLED  #Y30LB00*/
*             /* AND SET REASON CODE                         #Y30LB00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0886
*             VVICERR=B1ONE;        /*                       @Y30LB00*/
         OI    VVICERR,B'00010000'                                 0886
*             RETNCODE=CODE370;     /*                       @Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                0887
*           END;                    /*                       @Y30LB00*/
*         ELSE                      /* ECB ADDR NOT ZERO AND @Y30LB00
*                                      LENGTH CORRECT        @Y30LB00*/
*           DO;                     /* SAVE ECB ADDRESS      @Y30LB00*/
*                                                                  0889
         B     @RC00884                                            0889
@RF00884 DS    0H                                                  0890
*             /*******************************************************/
*             /*                                                     */
*             /* SET DELAYED RESPONSE SWITCH AND SAVE ECB    @Y30LB00*/
*             /* ADDRESS                                     @Y30LB00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0890
*             DRSWITCH=B1ONE;       /*                       @Y30LB00*/
         OI    DRSWITCH,B'10000000'                                0890
*             DELRECB=DEFVECB;      /*                       @Y30LB00*/
         L     @09,DEFVECB(,R6)                                    0891
         ST    @09,DELRECB                                         0891
*           END;                    /*                       @Y30LB00*/
*       END;                        /*                       @Y30LB00*/
*     ELSE                          /* IF NOT DEFINE         @Y30LB00*/
*                                                                  0894
*       /*************************************************************/
*       /*                                                           */
*       /* IS COPY VOLUME REQ                                @Y30LB00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0894
*       IF REQCODE=COPYV THEN       /*                       @Y30LB00*/
         B     @RC00882                                            0894
@RF00882 CLI   REQCODE(R6),42                                      0894
         BNE   @RF00894                                            0894
*         DO;                       /* CHECK ECB ADDR AND    @Y30LB00
*                                      REQUEST LENGTH        @Y30LB00*/
*           IF CVOLECB=ZERO×LISTLEN^=LENGTH(CVLIST)/*        @Y30LB00*/
*             THEN                  /* IS ECB ADDR ZERO OR   @Y30LB00
*                                      LENGTH INCORRECT      @Y30LB00*/
         L     @09,CVOLECB(,R6)                                    0896
         LTR   @09,@09                                             0896
         BZ    @RT00896                                            0896
         CLC   LISTLEN(4,R6),@CF00766                              0896
         BE    @RF00896                                            0896
@RT00896 DS    0H                                                  0897
*             DO;                   /* SET REASON CODE       @Y30LB00*/
*                                                                  0897
*               /*****************************************************/
*               /*                                                   */
*               /* INDICATE ERROR DETECTED BEFORE MSVC       @Y30LB00*/
*               /* CALLED AND SET REASON CODE                @Y30LB00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0898
*               VVICERR=B1ONE;      /*                       @Y30LB00*/
         OI    VVICERR,B'00010000'                                 0898
*               RETNCODE=CODE370;   /*                       @Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                0899
*             END;                  /*                       @Y30LB00*/
*           ELSE                    /* ECB ADDR NOT ZERO AND @Y30LB00
*                                      LENGTH CORRECT        @Y30LB00*/
*             DO;                   /* SAVE ECB ADDRESS      @Y30LB00*/
*                                                                  0901
         B     @RC00896                                            0901
@RF00896 DS    0H                                                  0902
*               /*****************************************************/
*               /*                                                   */
*               /* SET DELAYED RESPONSE SWITCH ON AND SAVE   @Y30LB00*/
*               /* ECB ADDRESS                               @Y30LB00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0902
*               DRSWITCH=B1ONE;     /*                       @Y30LB00*/
         OI    DRSWITCH,B'10000000'                                0902
*               DELRECB=CVOLECB;    /*                       @Y30LB00*/
         L     @09,CVOLECB(,R6)                                    0903
         ST    @09,DELRECB                                         0903
*             END;                  /*                       @Y30LB00*/
*         END;                      /*                       @Y30LB00*/
*       ELSE                        /* NOT COPY VOLUME REQ   @Y30LB00*/
*         IF REQCODE=COPYC THEN     /* IS COPY CARTRIDGE REQ @Y30LB00*/
         B     @RC00894                                            0906
@RF00894 CLI   REQCODE(R6),40                                      0906
         BNE   @RF00906                                            0906
*           DO;                     /* CHECK ECB ADDR AND    @Y30LB00
*                                      REQUEST LENGTH        @Y30LB00*/
*             IF CCRTECB=ZERO×LISTLEN^=LENGTH(CCLIST)/*      @Y30LB00*/
*               THEN                /* IS ECB ADDR ZERO OR   @Y30LB00
*                                      LENGTH INCORRECT      @Y30LB00*/
         L     @09,CCRTECB(,R6)                                    0908
         LTR   @09,@09                                             0908
         BZ    @RT00908                                            0908
         CLC   LISTLEN(4,R6),@CF00430                              0908
         BE    @RF00908                                            0908
@RT00908 DS    0H                                                  0909
*               DO;                 /* SET REASON CODE       @Y30LB00*/
*                                                                  0909
*                 /***************************************************/
*                 /*                                                 */
*                 /* INDICATE ERROR DETECTED BEFORE MSVC     @Y30LB00*/
*                 /* CALLED AND SET REASON CODE              @Y30LB00*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0910
*                 VVICERR=B1ONE;    /*                       @Y30LB00*/
         OI    VVICERR,B'00010000'                                 0910
*                 RETNCODE=CODE370; /*                       @Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                0911
*               END;                /*                       @Y30LB00*/
*             ELSE                  /* ECB ADDR NOT ZERO AND @Y30LB00
*                                      LENGTH CORRECT        @Y30LB00*/
*               DO;                 /* SAVE ECB ADDRESS      @Y30LB00*/
*                                                                  0913
         B     @RC00908                                            0913
@RF00908 DS    0H                                                  0914
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET DELAYED RESPONSE SWITCH ON AND SAVE @Y30LB00*/
*                 /* ECB ADDRESS                             @Y30LB00*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0914
*                 DRSWITCH=B1ONE;   /*                       @Y30LB00*/
         OI    DRSWITCH,B'10000000'                                0914
*                 DELRECB=CCRTECB;  /*                       @Y30LB00*/
         L     @09,CCRTECB(,R6)                                    0915
         ST    @09,DELRECB                                         0915
*               END;                /*                       @Y30LB00*/
*           END;                    /*                       @Y30LB00*/
*         ELSE                      /* NOT COPY CARTRIDGE REQ      0918
*                                                            @Y30LB00*/
*           IF REQCODE=COPYTB THEN  /* IS COPY TABLES REQUEST      0918
*                                                            @Y30LB00*/
         B     @RC00906                                            0918
@RF00906 CLI   REQCODE(R6),22                                      0918
         BNE   @RF00918                                            0918
*             DO;                   /* CHECK ECB ADDR AND    @Y30LB00
*                                      REQUEST LENGTH        @Y30LB00*/
*               IF LISTLEN^=LENGTH(CTLIST) THEN/* LEN ERROR  @Z40LB01*/
         CLC   LISTLEN(4,R6),@CF00487                              0920
         BE    @RF00920                                            0920
*                 RETNCODE=CODE370; /* SET ERROR CODE        @Z40LB01*/
         MVC   RETNCODE(4),@CF00794                                0921
*               ELSE                /* LENGTH CORRECT        @Z40LB01*/
*                 DO;               /*                       @Z40LB01*/
*                                                                  0922
         B     @RC00920                                            0922
@RF00920 DS    0H                                                  0923
*                   /*************************************************/
*                   /*                                               */
*                   /* NO ECB CHECK FOR INTERNAL COPY TABLES @Z40LB01*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0923
*                   IF COTBFLG^=(COTBFLG&BIT0800) THEN/*     @Z40LB01*/
         MVC   @TS00001(2),COTBFLG(R6)                             0923
         NC    @TS00001(2),@CB02510                                0923
         CLC   COTBFLG(2,R6),@TS00001                              0923
         BE    @RF00923                                            0923
*                     DO;           /* CHECK ECB             @Z40LB01*/
*                       IF COTBECB=ZERO THEN/* ECB ERROR?    @Z40LB01*/
         L     @09,COTBECB(,R6)                                    0925
         LTR   @09,@09                                             0925
         BNZ   @RF00925                                            0925
*                         RETNCODE=CODE370;/* YES SET ERROR  @Z40LB01*/
         MVC   RETNCODE(4),@CF00794                                0926
*                       ELSE        /* NO ERROR              @Z40LB01*/
*                         DO;       /* SET FLAGS             @Z40LB01*/
         B     @RC00925                                            0927
@RF00925 DS    0H                                                  0928
*                           DRSWITCH=B1ONE;/* DEL RESP SW    @Z40LB01*/
         OI    DRSWITCH,B'10000000'                                0928
*                           DELRECB=COTBECB;/* SAVE ECB TR   @Z40LB01*/
         L     @09,COTBECB(,R6)                                    0929
         ST    @09,DELRECB                                         0929
*                         END;      /* END ECB CHECK         @Z40LB01*/
*                     END;          /* END ECB VAL CHK       @Z40LB01*/
*                 END;              /* END GOOD LEN          @Z40LB01*/
*             END;                  /* END COTB CODE         @Z40LB01*/
*           ELSE                    /* IF NOT COPY TABLES    @Y30LB00*/
*                                                                  0934
*             /*******************************************************/
*             /*                                                     */
*             /* IS ACQUIRE OR                               @Y30LB00*/
*             /* RELINQUISH REQUEST                          @Y30LB00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0934
*             IF((REQCODE=ACQUIRE)×(REQCODE=RELINQ))/*       @Y30LB00*/
*               THEN                /*                       @Y30LB00*/
         B     @RC00918                                            0934
@RF00918 CLI   REQCODE(R6),2                                       0934
         BE    @RT00934                                            0934
         CLI   REQCODE(R6),4                                       0934
         BNE   @RF00934                                            0934
@RT00934 DS    0H                                                  0935
*               DO;                 /* CHECK ECB ADDRESS FOR @Y30LB00
*                                      EACH DELAYED RESPONSE #Y30LB00
*                                      REQUEST AS WELL AS THE      0935
*                                                            #Y30LB00
*                                      NUMBER OF EXTENTS IN  #Y30LB00
*                                      EACH REQUEST          #Y30LB00*/
*                 IF REQCODE=ACQUIRE THEN/*                  #Y30LB00
*                                      IS ACQUIRE REQUEST    #Y30LB00*/
         CLI   REQCODE(R6),2                                       0936
         BNE   @RF00936                                            0936
*                   ACQSW=B1ONE;    /* SET ACQUIRE SWITCH    #Y30LB00*/
         OI    ACQSW,B'00010000'                                   0937
*                 ELSE              /* RELINQUISH REQUEST    #Y30LB00*/
*                   DO;             /* SET REL SWITCHES      #Y30LB00*/
         B     @RC00936                                            0938
@RF00936 DS    0H                                                  0939
*                     RELSW=B1ONE;  /*                       #Y30LB00*/
*                     RELERRS=B1ONE;/*                       #Y30LB00*/
         OI    RELSW,B'00001001'                                   0940
*                   END;            /*                       #Y30LB00*/
*                 ARSW=B1ONE;       /* SET ACQ - REL SWITCH ON     0942
*                                                            #Y30LB00*/
@RC00936 DS    0H                                                  0943
*                 LOOPSW=B1ONE;     /* SET LOOP SWITCH ON    #Y30LB00*/
         OI    ARSW,B'01100000'                                    0943
*                 ARPTR=R6;         /* ADDRESS FIRST ACQ/REL #Y30LB00
*                                      IN CHAIN OF REQS      #Y30LB00*/
         ST    R6,ARPTR                                            0944
*                 DO WHILE LOOPSW=B1ONE;/*                   #Y30LB00
*                                      LOOP THRU ACQ/REL CHAIN     0945
*                                                            #Y30LB00
*                                      CHECKING THE PARAMETERS     0945
*                                                            #Y30LB00
*                                      PASSED AS INPUT       #Y30LB00*/
         B     @DE00945                                            0945
@DL00945 DS    0H                                                  0946
*                   IF ACQSW=B1ONE THEN/*                    #Y30LB00
*                                      IS ACQUIRE CHAIN      #Y30LB00*/
         TM    ACQSW,B'00010000'                                   0946
         BNO   @RF00946                                            0946
*                     DO;           /* CHECK IF THIS REQUEST #Y30LB00
*                                      IS AN ACQUIRE         #Y30LB00*/
*                       IF AROP^=ACQUIRE THEN/*              #Y30LB00
*                                      IS THIS REQ AN ACQ    #Y30LB00*/
         L     @09,ARPTR                                           0948
         CLI   AROP(@09),2                                         0948
         BE    @RF00948                                            0948
*                         DO;       /* NOT ACQ, SET ERROR    #Y30LB00
*                                      SWITCHES AND ERROR CODE     0949
*                                                            #Y30LB00*/
*                           INTMIXSW=B1ONE;/*                #Y30LB00*/
         OI    INTMIXSW,B'00100000'                                0950
*                           ARERRSW=B1ONE;/*                 #Y30LB00*/
         OI    ARERRSW,B'00000100'                                 0951
*                         END;      /*                       #Y30LB00*/
*                     END;          /*                       #Y30LB00*/
*                   ELSE            /* RELINQUISH REQUEST    #Y30LB00*/
*                     DO;           /* IS THIS REQ AN REL    #Y30LB00*/
         B     @RC00946                                            0954
@RF00946 DS    0H                                                  0955
*                       IF AROP^=RELINQ THEN/*               #Y30LB00
*                                      THIS REQ NOT A REL    #Y30LB00*/
         L     @09,ARPTR                                           0955
         CLI   AROP(@09),4                                         0955
         BE    @RF00955                                            0955
*                         DO;       /* SET ERROR SWITCHES    #Y30LB00*/
*                                                                  0956
*                           /*****************************************/
*                           /*                                       */
*                           /* SET SWITCHES WHICH INDICATE   #Y30LB00*/
*                           /* INTERMIXED CHAIN OF RELS,     #Y30LB00*/
*                           /* ACQ/REL ERROR, REL CHAIN IS   #Y30LB00*/
*                           /* NOT TO BE PROCESSED FURTHER   #Y30LB00*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  0957
*                           INTMIXSW=B1ONE;/*                #Y30LB00*/
         OI    INTMIXSW,B'00100000'                                0957
*                           ARERRSW=B1ONE;/*                 #Y30LB00*/
         OI    ARERRSW,B'00000100'                                 0958
*                           RELNOGOS=B1ONE;/*                #Y30LB00*/
         OI    RELNOGOS,B'01000000'                                0959
*                         END;      /*                       #Y30LB00*/
*                     END;          /*                       #Y30LB00*/
@RF00955 DS    0H                                                  0962
*                   IF ARERRSW^=B1ONE THEN/*                 #Y30LB00
*                                      HAS AN ERROR BEEN     #Y30LB00
*                                      DETECTED              #Y30LB00*/
@RC00946 TM    ARERRSW,B'00000100'                                 0962
         BO    @RF00962                                            0962
*                     DO;           /* NO, CHECK ECB ADDR,   #Y30LB00
*                                      REQUEST LENGTH, AND   #Y30LB00
*                                      # OF EXTENTS          #Y30LB00*/
*                       IF(ARDRES=B1ONE&ARECB=ZERO)×/*       #Y30LB00*/
*                           ARLL^=LENGTH(ARLIST) THEN/*      #Y30LB00
*                                      DOES REQ HAVE DELAYED #Y30LB00
*                                      RESPONSE WITH AN ECB  #Y30LB00
*                                      OF ZERO OR IS LENGTH  #Y30LB00
*                                      INCORRECT             #Y30LB00*/
         L     @09,ARPTR                                           0964
         TM    ARDRES(@09),B'01000000'                             0964
         BNO   @GL00096                                            0964
         L     @09,ARECB(,@09)                                     0964
         LTR   @09,@09                                             0964
         BZ    @RT00964                                            0964
@GL00096 L     @09,ARPTR                                           0964
         CLC   ARLL(4,@09),@CF01880                                0964
         BE    @RF00964                                            0964
@RT00964 DS    0H                                                  0965
*                         ARERRSW=B1ONE;/*                   #Y30LB00
*                                      SET ERROR SWITCH      #Y30LB00*/
         OI    ARERRSW,B'00000100'                                 0965
*                       ELSE        /* DELAYED RESPONSE CHECK      0966
*                                                            #Y30LB00
*                                      HAD NO ERROR AND      #Y30LB00
*                                      LENGTH CORRECT        #Y30LB00*/
*                         IF ARNMEXT<ONE×/*                  #Y30LB00*/
*                             ARNMEXT>SIXTEEN THEN/*         #Y30LB00
*                                      IS NUMBER OF EXTENTS  #Y30LB00
*                                      LESS THAN 1 OR GREATER      0966
*                                                            #Y30LB00
*                                      THAN SIXTEEN          #Y30LB00*/
         B     @RC00964                                            0966
@RF00964 L     @09,ARPTR                                           0966
         CLI   ARNMEXT(@09),1                                      0966
         BL    @RT00966                                            0966
         CLI   ARNMEXT(@09),16                                     0966
         BNH   @RF00966                                            0966
@RT00966 DS    0H                                                  0967
*                           ARERRSW=B1ONE;/*                 #Y30LB00
*                                      SET ERROR SWITCH      #Y30LB00*/
         OI    ARERRSW,B'00000100'                                 0967
*                     END;          /*                       #Y30LB00*/
@RF00966 DS    0H                                                  0968
@RC00964 DS    0H                                                  0969
*                   IF ARERRSW=B1ONE THEN/*                  #Y30LB00
*                                      IS ERROR SWITCH ON    #Y30LB00*/
@RF00962 TM    ARERRSW,B'00000100'                                 0969
         BNO   @RF00969                                            0969
*                     DO;           /* ERROR SWITCH IS ON    #Y30LB00*/
*                       IF INTMIXSW=B1ONE THEN/*             #Y30LB00
*                                      IS ERROR INTER MIXED  #Y30LB00
*                                      CHAIN                 #Y30LB00*/
         TM    INTMIXSW,B'00100000'                                0971
         BNO   @RF00971                                            0971
*                         ARCOMPC=CODE374;/*                 #Y30LB00
*                                      SET ERROR CODE IN REQ #Y30LB00*/
         L     @09,ARPTR                                           0972
         MVC   ARCOMPC(2,@09),@CH00786                             0972
*                       ELSE        /* NOT INTER MIXED ERROR #Y30LB00*/
*                         ARCOMPC=CODE370;/*                 #Y30LB00*/
         B     @RC00971                                            0973
@RF00971 L     @09,ARPTR                                           0973
         MVC   ARCOMPC(2,@09),@CH00794                             0973
*                       IF ACQSW=B1ONE×RELNOGOS=B1ONE/*      #Y30LB00*/
*                         THEN      /* IS ACQ REQ OR REL WITH      0974
*                                                            #Y30LB00
*                                      NO GO INDICATION      #Y30LB00*/
@RC00971 TM    ACQSW,B'00010000'                                   0974
         BO    @RT00974                                            0974
         TM    RELNOGOS,B'01000000'                                0974
         BNO   @RF00974                                            0974
@RT00974 DS    0H                                                  0975
*                         DO;       /* GO GET NO-FURTHER-    #Y30LB00
*                                      PROCESSING COMPLETION #Y30LB00
*                                      PUT IN OTHER REQUESTS #Y30LB00
*                                      IN CHAIN              #Y30LB00*/
*                           ARERRCD=CODE368;/*               #Y30LB00*/
         MVC   ARERRCD(4),@CF00796                                 0976
*                           CALL ARERR1;/*                   #Y30LB00
*                                      GO INSERT NO-FURTHER- #Y30LB00
*                                      PROCESSING COMPLETION #Y30LB00
*                                      CODE IN OTHER REQS IN #Y30LB00
*                                      CHAIN                 #Y30LB00*/
         BAL   @14,ARERR1                                          0977
*                           LOOPSW=B1ZERO;/*                 #Y30LB00*/
         NI    LOOPSW,B'10111111'                                  0978
*                         END;      /*                       #Y30LB00*/
*                       ELSE        /* REL PARAMETER ERROR   #Y30LB00*/
*                         RELERRSW=B1ONE;/*                  #Y30LB00
*                                      SET REL ERROR SWITCH  #Y30LB00*/
         B     @RC00974                                            0980
@RF00974 OI    RELERRSW,B'10000000'                                0980
*                     END;          /*                       #Y30LB00*/
@RC00974 DS    0H                                                  0982
*                   IF((ACQSW=B1ONE)&(ARERRSW^=B1ONE))×/*    #Y30LB00*/
*                       ((RELSW=B1ONE)&(RELNOGOS^=B1ONE))/*  #Y30LB00*/
*                     THEN          /*                       #Y30LB00
*                                      IS ACQ REQUEST WITHOUT      0982
*                                                            #Y30LB00
*                                      ERROR OR A REL REQ    #Y30LB00
*                                      WITHOUT NO-GO         #Y30LB00
*                                      INDICATION            #Y30LB00*/
@RF00969 TM    ACQSW,B'00010000'                                   0982
         BNO   @GL00100                                            0982
         TM    ARERRSW,B'00000100'                                 0982
         BZ    @RT00982                                            0982
@GL00100 TM    RELSW,B'00001000'                                   0982
         BNO   @RF00982                                            0982
         TM    RELNOGOS,B'01000000'                                0982
         BO    @RF00982                                            0982
@RT00982 DS    0H                                                  0983
*                     DO;           /* CHECK FOR ANOTHER REQ #Y30LB00*/
*                       IF RELSW=B1ONE THEN/*                #Y30LB00
*                                      IS RELINQUISH REQUEST #Y30LB00*/
         TM    RELSW,B'00001000'                                   0984
         BNO   @RF00984                                            0984
*                         DO;       /* RESET ERROR SWITCH(ES)      0985
*                                                            #Y30LB00*/
*                           ARERRSW=B1ZERO;/*                #Y30LB00*/
         NI    ARERRSW,B'11111011'                                 0986
*                           IF ARCOMPC=ZERO THEN/*           #Y30LB00
*                                      IS COMPLETION CODE FOR      0987
*                                                            #Y30LB00
*                                      THIS REQUEST ZERO     #Y30LB00*/
         L     @09,ARPTR                                           0987
         LH    @09,ARCOMPC(,@09)                                   0987
         N     @09,@CF03081                                        0987
         LTR   @09,@09                                             0987
         BNZ   @RF00987                                            0987
*                             RELERRS=B1ZERO;/*              #Y30LB00
*                                      SET SWITCH OFF THAT   #Y30LB00
*                                      INDICATES ALL RELS    #Y30LB00
*                                      HAD AN ERROR          #Y30LB00*/
         NI    RELERRS,B'11111110'                                 0988
*                         END;      /*                       #Y30LB00*/
@RF00987 DS    0H                                                  0990
*                       IF ARNEDB^=ZERO THEN/*               #Y30LB00
*                                      IS THERE ANOTHER REQ  #Y30LB00*/
@RF00984 L     @09,ARPTR                                           0990
         L     @09,ARNEDB(,@09)                                    0990
         LTR   @09,@09                                             0990
         BZ    @RF00990                                            0990
*                         ARPTR=ARNEDB;/*                    #Y30LB00
*                                      ADDRESS NEXT REQ      #Y30LB00*/
         ST    @09,ARPTR                                           0991
*                       ELSE        /* NO MORE REQUESTS      #Y30LB00*/
*                         LOOPSW=B1ZERO;/*                   #Y30LB00
*                                      SET THE LOOP SWITCH OFF     0992
*                                                            #Y30LB00*/
         B     @RC00990                                            0992
@RF00990 NI    LOOPSW,B'10111111'                                  0992
*                     END;          /*                       #Y30LB00*/
@RC00990 DS    0H                                                  0994
*                 END;              /*                       #Y30LB00*/
@RF00982 DS    0H                                                  0994
@DE00945 TM    LOOPSW,B'01000000'                                  0994
         BO    @DL00945                                            0994
*                 IF RELERRS=B1ONE THEN/*                    #Y30LB00
*                                      DID ALL RELS HAVE ERR #Y30LB00*/
         TM    RELERRS,B'00000001'                                 0995
         BNO   @RF00995                                            0995
*                   RETNCODE=FOUR;  /* ALL RELS HAD AN ERROR #Y30LB00
*                                      SET RETURN CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00076                                0996
*               END;                /*                       #Y30LB00*/
*             ELSE                  /* NOT ACQ/REL REQUEST   #Y30LB00*/
*               IF REQCODE=VARYOFF THEN/*                    #Y30LB00
*                                      IS VARY OFF REQUEST   #Y30LB00*/
         B     @RC00934                                            0998
@RF00934 CLI   REQCODE(R6),12                                      0998
         BNE   @RF00998                                            0998
*                 DO;               /* CHECK ECB ADDR AND    #Y30LB00
*                                      REQUEST LENGTH        #Y30LB00*/
*                   IF LISTLEN^=LENGTH(VOFLIST) THEN/*       #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00487                              1000
         BE    @RF01000                                            1000
*                     RETNCODE=CODE370;/*                    #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1001
*                   ELSE            /* LENGTH CORRECT        #Y30LB00*/
*                     IF VOFSTAG=B1ONE THEN/*                #Y30LB00
*                                      IS STAGE ATTRIBUTE    #Y30LB00
*                                      SET                   #Y30LB00*/
         B     @RC01000                                            1002
@RF01000 TM    VOFSTAG(R6),B'10000000'                             1002
         BNO   @RF01002                                            1002
*                       DO;         /* CHECK ECB ADDR        #Y30LB00*/
*                         IF VOFECB=ZERO THEN/*              #Y30LB00
*                                      IS ECB ADDR ZERO      #Y30LB00*/
         L     @09,VOFECB(,R6)                                     1004
         LTR   @09,@09                                             1004
         BNZ   @RF01004                                            1004
*                           DO;     /* SET REASON CODE       #Y30LB00*/
*                             RETNCODE=CODE370;/*            #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1006
*                           END;    /*                       #Y30LB00*/
*                         ELSE      /* ECB ADDR NOT ZERO     #Y30LB00*/
*                           DO;     /* SAVE ECB ADDRESS      #Y30LB00*/
*                                                                  1008
         B     @RC01004                                            1008
@RF01004 DS    0H                                                  1009
*                             /***************************************/
*                             /*                                     */
*                             /* SET DELAYED RESPONSE SWITCH ON AND  */
*                             /*                             #Y30LB00*/
*                             /* SAVE ECB ADDRESS            #Y30LB00*/
*                             /*                                     */
*                             /***************************************/
*                                                                  1009
*                             DRSWITCH=B1ONE;/*              #Y30LB00*/
         OI    DRSWITCH,B'10000000'                                1009
*                             DELRECB=VOFECB;/*              #Y30LB00*/
         L     @09,VOFECB(,R6)                                     1010
         ST    @09,DELRECB                                         1010
*                           END;    /*                       #Y30LB00*/
*                       END;        /*                       #Y30LB00*/
*                 END;              /*                       #Y30LB00*/
*               ELSE                /* NOT VARY OFF REQUEST  #Y30LB00*/
*                 IF REQCODE=TUNE THEN/*                     #Y30LB00
*                                      IS TUNE REQUEST       #Y30LB00*/
         B     @RC00998                                            1014
@RF00998 CLI   REQCODE(R6),28                                      1014
         BNE   @RF01014                                            1014
*                   DO;             /* CHECK THE ECB ADDR AND      1015
*                                                            #Y30LB00
*                                      REQUEST LENGTH        #Y30LB00*/
*                     IF LISTLEN^=LENGTH(TUNELIST) THEN/*    #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00758                              1016
         BE    @RF01016                                            1016
*                       RETNCODE=CODE370;/*                  #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1017
*                     ELSE          /* LENGTH CORRECT        #Y30LB00*/
*                       IF TUNMODE=B1ZERO THEN/*             #Y30LB00
*                                      IS DISPLAY ATTRIBUTE  #Y30LB00
*                                      SPECIFIED             #Y30LB00*/
         B     @RC01016                                            1018
@RF01016 TM    TUNMODE(R6),B'10000000'                             1018
         BNZ   @RF01018                                            1018
*                         DO;       /* CHECK ECB ADDR        #Y30LB00*/
*                           IF TUNEECB=ZERO THEN/*           #Y30LB00
*                                      IS ECB ADDR ZERO      #Y30LB00*/
         L     @09,TUNEECB(,R6)                                    1020
         LTR   @09,@09                                             1020
         BNZ   @RF01020                                            1020
*                             DO;   /* SET REASON CODE       #Y30LB00*/
*                               RETNCODE=CODE370;/*          #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1022
*                             END;  /*                       #Y30LB00*/
*                           ELSE    /* ECB ADDR NOT ZERO     #Y30LB00*/
*                             DO;   /* SAVE ECB ADDRESS      #Y30LB00*/
*                                                                  1024
         B     @RC01020                                            1024
@RF01020 DS    0H                                                  1025
*                               /*************************************/
*                               /*                                   */
*                               /* SET DELAYED RESPONSE SWITCH ON    */
*                               /*                           #Y30LB00*/
*                               /* AND SAVE ECB ADDRESS      #Y30LB00*/
*                               /*                                   */
*                               /*************************************/
*                                                                  1025
*                               DRSWITCH=B1ONE;/*            #Y30LB00*/
         OI    DRSWITCH,B'10000000'                                1025
*                               DELRECB=TUNEECB;/*           #Y30LB00*/
         L     @09,TUNEECB(,R6)                                    1026
         ST    @09,DELRECB                                         1026
*                             END;  /*                       #Y30LB00*/
*                         END;      /*                       #Y30LB00*/
*                   END;            /*                       #Y30LB00*/
*                 ELSE              /* NOT VARY OFF WITH     #Y30LB00
*                                      STAGING ATTRIBUTE     #Y30LB00*/
*                   IF REQCODE=DEMOUNT THEN/*                #Y30LB00
*                                      IS DEMOUNT REQUEST    #Y30LB00*/
         B     @RC01014                                            1030
@RF01014 CLI   REQCODE(R6),6                                       1030
         BNE   @RF01030                                            1030
*                     DO;           /* CHECK ECB ADDR AND    #Y30LB00
*                                      REQUEST LENGTH        #Y30LB00*/
*                       IF LISTLEN^=LENGTH(DMTLIST) THEN/*   #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00162                              1032
         BE    @RF01032                                            1032
*                         RETNCODE=CODE370;/*                #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1033
*                       ELSE        /* LENGTH CORRECT        #Y30LB00*/
*                         IF DMDELRSP=B1ONE THEN/*           #Y30LB00
*                                      IS DELAYED RESPONSE   #Y30LB00
*                                      SPECIFIED             #Y30LB00*/
         B     @RC01032                                            1034
@RF01032 TM    DMDELRSP(R6),B'01000000'                            1034
         BNO   @RF01034                                            1034
*                           DO;     /* CHECK ECB ADDR        #Y30LB00*/
*                             IF DMNTECB=ZERO THEN/*         #Y30LB00
*                                      IS ECB ADDR ZERO      #Y30LB00*/
         L     @09,DMNTECB(,R6)                                    1036
         LTR   @09,@09                                             1036
         BNZ   @RF01036                                            1036
*                               DO; /* SET REASON CODE       #Y30LB00*/
*                                                                  1037
*                                 /***********************************/
*                                 /*                                 */
*                                 /* INDICATE ERROR DETECTED BEFORE  */
*                                 /*                         #Y30LB00*/
*                                 /* MSVC CALLED AND SET REASON CODE */
*                                 /*                         #Y30LB00*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  1038
*                                 VVICERR=B1ONE;/*           #Y30LB00*/
         OI    VVICERR,B'00010000'                                 1038
*                                 RETNCODE=CODE370;/*        #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1039
*                               END;/*                       #Y30LB00*/
*                             ELSE  /* ECB ADDR NOT ZERO     #Y30LB00*/
*                               DO; /* SAVE ECB ADDRESS      #Y30LB00*/
*                                                                  1041
         B     @RC01036                                            1041
@RF01036 DS    0H                                                  1042
*                                 /***********************************/
*                                 /*                                 */
*                                 /* SET DELAYED RESPONSE SWITCH ON  */
*                                 /*                         #Y30LB00*/
*                                 /* AND SAVE ECB ADDRESS    #Y30LB00*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  1042
*                                 DRSWITCH=B1ONE;/*          #Y30LB00*/
         OI    DRSWITCH,B'10000000'                                1042
*                                 DELRECB=DMNTECB;/*         #Y30LB00*/
         L     @09,DMNTECB(,R6)                                    1043
         ST    @09,DELRECB                                         1043
*                               END;/*                       #Y30LB00*/
*                           END;    /*                       #Y30LB00*/
*                     END;          /*                       #Y30LB00*/
*                   ELSE            /* NOT DEMOUNT REQUEST   @Z40LB01*/
*                     IF REQCODE=NULLCART THEN/*             @Z40LB01*/
         B     @RC01030                                            1047
@RF01030 CLI   REQCODE(R6),9                                       1047
         BNE   @RF01047                                            1047
*                       DO;         /* CHECK NULLIFYC ECB AND LENGTH
*                                                            @Z40LB01*/
*                         IF NULECB=ZERO×/*                  @Z40LB01*/
*                             LISTLEN^=LENGTH(NULLLIST) THEN/*     1049
*                                                            @Z40LB01*/
         L     @09,NULECB(,R6)                                     1049
         LTR   @09,@09                                             1049
         BZ    @RT01049                                            1049
         CLC   LISTLEN(4,R6),@CF00770                              1049
         BE    @RF01049                                            1049
@RT01049 DS    0H                                                  1050
*                           DO;     /* ERROR DETECTED        @Z40LB01*/
*                             VVICERR=B1ONE;/*               @Z40LB01*/
         OI    VVICERR,B'00010000'                                 1051
*                             RETNCODE=CODE370;/*            @Z40LB01*/
         MVC   RETNCODE(4),@CF00794                                1052
*                           END;    /*                       @Z40LB01*/
*                         ELSE      /*                       @Z40LB01*/
*                           DO;     /* NO ERROR FOUND        @Z40LB01*/
         B     @RC01049                                            1054
@RF01049 DS    0H                                                  1055
*                             DRSWITCH=B1ONE;/*              @Z40LB01*/
         OI    DRSWITCH,B'10000000'                                1055
*                             DELRECB=NULECB;/*              @Z40LB01*/
         L     @09,NULECB(,R6)                                     1056
         ST    @09,DELRECB                                         1056
*                           END;    /*                       @Z40LB01*/
*                       END;        /*                       @Z40LB01*/
*                     ELSE          /* NOT NULLIFY REQUEST   @Z40LB01*/
*                       IF REQCODE=MSCREAD×/* QUERY READ     @Z40LB01*/
*                           REQCODE=CAUDIT×/* QUERY CELL AUDIT     1059
*                                                            @Z40LB01*/
*                           REQCODE=MSCDUMP THEN/* QUERY DUMP      1059
*                                                            @Z40LB01*/
         B     @RC01047                                            1059
@RF01047 CLI   REQCODE(R6),5                                       1059
         BE    @RT01059                                            1059
         CLI   REQCODE(R6),7                                       1059
         BE    @RT01059                                            1059
         CLI   REQCODE(R6),11                                      1059
         BNE   @RF01059                                            1059
@RT01059 DS    0H                                                  1060
*                         DO;       /* QUERY MSC REQUEST     @Z40LB01*/
*                           IF LISTLEN^=LENGTH(QUERLIST)×/*  @ZA13482*/
*                               QUPTR=ZERO THEN/*            @ZA13482*/
         CLC   LISTLEN(4,R6),@CF00770                              1061
         BNE   @RT01061                                            1061
         L     @09,QUPTR(,R6)                                      1061
         LTR   @09,@09                                             1061
         BNZ   @RF01061                                            1061
@RT01061 DS    0H                                                  1062
*                             RETNCODE=CODE370;/* SET ERROR CODE   1062
*                                                            @Z40LB01*/
         MVC   RETNCODE(4),@CF00794                                1062
*                         END;      /* END OF QUERY REQUEST SYNTAX CK
*                                                            @Z40LB01*/
*                       ELSE        /* NOT QUERY REQUEST     @Z40LB01*/
*                         CALL LENCHK;/* CALL SUBROUTINE TO  #Y30LB00
*                                      CHECK JUST THE LENGTH #Y30LB00
*                                      OF THE REQUEST        #Y30LB00*/
         B     @RC01059                                            1064
@RF01059 BAL   @14,LENCHK                                          1064
*   R14=SAVE14;                     /*                       #Y30LB00*/
@RC01059 DS    0H                                                  1065
@RC01047 DS    0H                                                  1065
@RC01030 DS    0H                                                  1065
@RC01014 DS    0H                                                  1065
@RC00998 DS    0H                                                  1065
@RC00934 DS    0H                                                  1065
@RC00918 DS    0H                                                  1065
@RC00906 DS    0H                                                  1065
@RC00894 DS    0H                                                  1065
@RC00882 DS    0H                                                  1065
@RC00870 L     R14,SAVE14                                          1065
*SYNEXIT:                           /*                       #Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER WITH #Y30LB00
*                                      REQUEST SYNTAX CHECKED,     1066
*                                                            #Y30LB00
*                                      AND POSSIBLY THE REASON     1066
*                                                            #Y30LB00
*                                      CODE SET              #Y30LB00*/
@EL00013 DS    0H                                                  1066
@EF00013 DS    0H                                                  1066
@ER00013 BR    @14                                                 1066
*   END SYNCHK;                     /*                       #Y30LB00*/
         B     @EL00013                                            1067
*                                                                  1068
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = LENCHK                                   @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = CHECKS LENGTH A REQUEST TO          @Y30LB00
*                        MSSC SVC.                           @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE CHECKS THE LENGTH OF        @Y30LB00
*                THOSE REQUESTS WITHOUT AN IMPLIED           @Y30LB00
*                OR REQUESTED DELAYED RESPONSE FOR           @Y30LB00
*                CORRECT LENGTH.                             @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE CHECKS THOSE REQUESTS      @Y30LB00
*                 WITHOUT AN IMPLIED OR REQUESTED DELAYED    @Y30LB00
*                 RESPONSE TO INSURE THAT THE LENGTH         @Y30LB00
*                 SPECIFIED IN THE REQUEST IS CORRECT.       @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = R6 - INPUT REQUEST ADDRESS                   @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = RETNCODE                                    @Y30LB00
*                  0 - NO ERROR                              @Y30LB00
*                  370 - PARAMETER NOT AS EXPECTED           @Y30LB00
*                        (INCORRECT LENGTH, OR UNKNOWN       @Y30LB00
*                        REQUEST)                            @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  1068
*                                                                  1068
*/* SUBROUTINE WHICH CHECKS THE LENGTH OF A REQUEST TO       @Y30LB00*/
*/* INSURE THAT IT IS CORRECT                                @Y30LB00*/
*                                                                  1068
*LENCHK:                                                           1068
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
LENCHK   DS    0H                                                  1069
*   IF REQCODE=MOUNT THEN           /*                       #Y30LB00
*                                      IS MOUNT REQUEST      #Y30LB00*/
         CLI   REQCODE(R6),8                                       1069
         BNE   @RF01069                                            1069
*     DO;                           /* CHECK REQUEST LENGTH  #Y30LB00*/
*       IF LISTLEN^=LENGTH(MNTLIST) THEN/*                   #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00162                              1071
         BE    @RF01071                                            1071
*         RETNCODE=CODE370;         /*                       #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1072
*     END;                          /*                       #Y30LB00*/
*   ELSE                            /* NOT MOUNT REQUEST     #Y30LB00*/
*     IF REQCODE=PURGE THEN         /*                       #Y30LB00
*                                      IS PURGE REQUEST      #Y30LB00*/
         B     @RC01069                                            1074
@RF01069 CLI   REQCODE(R6),20                                      1074
         BNE   @RF01074                                            1074
*       DO;                         /* CHECK REQUEST LENGTH  #Y30LB00*/
*         IF LISTLEN^=LENGTH(PURGLIST)/*                     #Y30LB00*/
*           THEN                    /* IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00323                              1076
         BE    @RF01076                                            1076
*           RETNCODE=CODE370;       /*                       #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1077
*       END;                        /*                       #Y30LB00*/
*     ELSE                          /* NOT PURGE REQUEST     #Y30LB00*/
*       IF REQCODE=ASSIGNPH×        /*                       #Y30LB00*/
*           REQCODE=INITCODE×       /*                       #Y30LB00*/
*           REQCODE=READY THEN      /*                       #Y30LB00
*                                      IS ASSIGN PRIMARY HOST      1079
*                                                            #Y30LB00
*                                      INITIALIZE OR READY   #Y30LB00
*                                      REQUEST               #Y30LB00*/
         B     @RC01074                                            1079
@RF01074 CLI   REQCODE(R6),18                                      1079
         BE    @RT01079                                            1079
         CLI   REQCODE(R6),16                                      1079
         BE    @RT01079                                            1079
         CLI   REQCODE(R6),32                                      1079
         BNE   @RF01079                                            1079
@RT01079 DS    0H                                                  1080
*         DO;                       /* CHECK REQUEST LENGTH  #Y30LB00*/
*           IF LISTLEN^=LENGTH(AIRLIST)/*                    #Y30LB00*/
*             THEN                  /* IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00033                              1081
         BE    @RF01081                                            1081
*             RETNCODE=CODE370;     /*                       #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1082
*         END;                      /*                       #Y30LB00*/
*       ELSE                        /* NOT ASSIGN PRIMARY HOST     1084
*                                                            #Y30LB00
*                                      INITIALIZE OR READY   #Y30LB00
*                                      REQUEST               #Y30LB00*/
*         IF REQCODE=SUSPEND THEN   /*                       #Y30LB00
*                                      IS SUSPEND REQUEST    #Y30LB00*/
         B     @RC01079                                            1084
@RF01079 CLI   REQCODE(R6),34                                      1084
         BNE   @RF01084                                            1084
*           DO;                     /* CHECK REQUEST LENGTH  #Y30LB00*/
*             IF LISTLEN^=          /*                       #Y30LB00*/
*                 LENGTH(SUSPLIST) THEN/*                    #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00033                              1086
         BE    @RF01086                                            1086
*               RETNCODE=CODE370;   /*                       #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1087
*           END;                    /*                       #Y30LB00*/
*         ELSE                      /* NOT SUSPEND REQUEST   #Y30LB00*/
*           IF REQCODE=TRACE THEN   /*                       #Y30LB00
*                                      IS TRACE REQUEST      #Y30LB00*/
         B     @RC01084                                            1089
@RF01084 CLI   REQCODE(R6),36                                      1089
         BNE   @RF01089                                            1089
*             DO;                   /*                       #Y30LB00
*                                      CHECK REQUEST LENGTH  #Y30LB00*/
*               IF LISTLEN^=        /*                       #Y30LB00*/
*                   LENGTH(TRACLIST) THEN/*                  #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00088                              1091
         BE    @RF01091                                            1091
*                 RETNCODE=CODE370; /*                       #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1092
*             END;                  /*                       #Y30LB00*/
*           ELSE                    /* NOT TRACE REQUEST     #Y30LB00*/
*             IF REQCODE=ASSOCIAT THEN/*                     #Y30LB00
*                                      IS ASSOCIATE/         #Y30LB00
*                                      DISASSOCIATE REQUEST  #Y30LB00*/
         B     @RC01089                                            1094
@RF01089 CLI   REQCODE(R6),44                                      1094
         BNE   @RF01094                                            1094
*               DO;                 /*                       #Y30LB00
*                                      CHECK REQUEST LENGTH  #Y30LB00*/
*                 IF LISTLEN^=      /*                       #Y30LB00*/
*                     LENGTH(ASDSLIST)/*                     #Y30LB00*/
*                   THEN            /*                       #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00088                              1096
         BE    @RF01096                                            1096
*                   RETNCODE=CODE370;/*                      #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         MVC   RETNCODE(4),@CF00794                                1097
*               END;                /*                       #Y30LB00*/
*             ELSE                  /*                       #Y30LB00
*                                      NOT ASSOCIATE/        #Y30LB00
*                                      DISASSOCIATE REQUEST  #Y30LB00*/
*               IF REQCODE=VARYON THEN/*                     #Y30LB00
*                                      IS VARYON REQUEST     #Y30LB00*/
         B     @RC01094                                            1099
@RF01094 CLI   REQCODE(R6),10                                      1099
         BNE   @RF01099                                            1099
*                 DO;               /*                       #Y30LB00
*                                      CHECK REQUEST LENGTH  #Y30LB00*/
*                   IF LISTLEN^=    /*                       #Y30LB00*/
*                       LENGTH(VONLIST)/*                    #Y30LB00*/
*                     THEN          /*                       #Y30LB00
*                                      IS LENGTH CORRECT     #Y30LB00*/
         CLC   LISTLEN(4,R6),@CF00035                              1101
         BE    @RF01101                                            1101
*                     RETNCODE=CODE370;/*                    #Y30LB00*/
*                                                                  1102
         MVC   RETNCODE(4),@CF00794                                1102
*                   /*************************************************/
*                   /*                                               */
*                   /* SET REASON CODE                       #Y30LB00*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  1103
*                 END;              /*                       #Y30LB00*/
*               ELSE                /* NOT VARYON            @G24LB01*/
*                                                                  1104
*                 /***************************************************/
*                 /*                                                 */
*                 /* CHECH LENGTH FOR MODC                   @G24LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1104
*                 IF REQCODE=MODC THEN/*                     @G24LB01*/
         B     @RC01099                                            1104
@RF01099 CLI   REQCODE(R6),17                                      1104
         BNE   @RF01104                                            1104
*                   IF LISTLEN^=    /*                       @G24LB01*/
*                       LENGTH(MODCLIST) THEN/*              @G24LB01*/
         CLC   LISTLEN(4,R6),@CF03064                              1105
         BE    @RF01105                                            1105
*                     RETNCODE=CODE370;/*                    @G24LB01*/
         MVC   RETNCODE(4),@CF00794                                1106
*                   ELSE                                           1107
*                     ;             /*                       @G24LB01*/
@RF01105 DS    0H                                                  1108
*                 ELSE              /*                       #Y30LB00
*                                      UNKNOWN REQUEST       #Y30LB00*/
*                   RETNCODE=CODE370;/*                      #Y30LB00
*                                      SET REASON CODE       #Y30LB00*/
         B     @RC01104                                            1108
@RF01104 MVC   RETNCODE(4),@CF00794                                1108
*LENEXIT:                           /*                       #Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER WITH #Y30LB00
*                                      LENGTH OF REQUEST     #Y30LB00
*                                      CHECKED, AND POSSIBLY,      1109
*                                                            #Y30LB00
*                                      THE REASON CODE SET   #Y30LB00*/
@EL00014 DS    0H                                                  1109
@EF00014 DS    0H                                                  1109
@ER00014 BR    @14                                                 1109
*   END LENCHK;                     /*                       #Y30LB00*/
         B     @EL00014                                            1110
*                                                                  1111
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = ASID                                     @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = INSERTS THE ASID OF THE             @Y30LB00
*                        CALLER INTO THE ORDER               @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE INSERTS THE ASID            @Y30LB00
*                OF THE CALLER INTO THOSE ORDERS WHICH       @Y30LB00
*                HAVE A DELAYED RESPONSE                     @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE INSERTS THE ASID           @Y30LB00
*                 OF THE CALLER INTO THE MOVE, DEFINE,       @Y30LB00
*                 COPY VOLUME, COPY CARTRIDGE, COPY          @Y30LB00
*                 TABLES, VARY OFF, ACQUIRE, DEMOUNT,        @Y30LB00
*                 RELINQUISH, NULLIFYC AND TUNE ORDERS.      @Z40LB01
*                                                            @Y30LB00
*02*    INPUT = R6 - INPUT REQUEST ADDRESS                   @Y30LB00
*               R7 = ASCB ADDRESS                            @Y30LB00
*               ORDPTR                                       @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = ORDERPT AND, POSSIBLY,                      @Y30LB00
*                ASID INSERTED INTO THE ORDER                @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  1111
*                                                                  1111
*/* THIS SUBROUTINE INSERTS THE ASID OF THE CALLER INTO      @Y30LB00
*   THOSE ORDERS WITH A DELAYED RESPONSE                     @Y30LB00*/
*                                                                  1111
*ASID:                                                             1111
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
ASID     DS    0H                                                  1112
*   RFY                                                            1112
*    (ARLIST,                                                      1112
*     MVLIST,                                                      1112
*     DEFLIST,                                                     1112
*     CVLIST,                                                      1112
*     CTLIST,                                                      1112
*     VOFLIST,                      /*                       #Y30LB00*/
*     TUNELIST,                                                    1112
*     CCLIST,                                                      1112
*     DMTLIST,                                                     1112
*     NULLLIST) BASED(ORDERPT);     /*                       @Z40LB01*/
*   ORDERPT=ADDR(ORDLIST)-FOUR;     /*                       #Y30LB00*/
         L     @09,ORDPTR                                          1113
         SL    @09,@CF00076                                        1113
         ST    @09,ORDERPT                                         1113
*   IF REQCODE=MOVE THEN            /* IS MOVE REQUEST?      #Y30LB00*/
         CLI   REQCODE(R6),14                                      1114
         BNE   @RF01114                                            1114
*     MCRTASID=ASCBASID;            /* INSERT THE ASID INTO  #Y30LB00
*                                      MOVE ORDER            #Y30LB00*/
         L     @07,ASCBPTR                                         1115
         MVC   MCRTASID(2,@09),ASCBASID(@07)                       1115
*   ELSE                            /* NOT MOVE REQUEST      #Y30LB00*/
*     IF REQCODE=DEFINE THEN        /* IS DEFINE REQUEST     #Y30LB00*/
         B     @RC01114                                            1116
@RF01114 CLI   REQCODE(R6),24                                      1116
         BNE   @RF01116                                            1116
*       DEFVASID=ASCBASID;          /* INSERT ASID INTO THE  #Y30LB00
*                                      DEFINE ORDER          #Y30LB00*/
         L     @09,ORDERPT                                         1117
         L     @07,ASCBPTR                                         1117
         MVC   DEFVASID(2,@09),ASCBASID(@07)                       1117
*     ELSE                          /* NOT DEFINE REQUEST    #Y30LB00*/
*       IF REQCODE=COPYV THEN       /* IS COPY VOLUME REQ    #Y30LB00*/
         B     @RC01116                                            1118
@RF01116 CLI   REQCODE(R6),42                                      1118
         BNE   @RF01118                                            1118
*         CVOLASID=ASCBASID;        /* INSERT THE ASID INTO  #Y30LB00
*                                      THE COPY VOLUME ORDER #Y30LB00*/
         L     @09,ORDERPT                                         1119
         L     @07,ASCBPTR                                         1119
         MVC   CVOLASID(2,@09),ASCBASID(@07)                       1119
*       ELSE                        /* NOT COPY VOLUME REQ   #Y30LB00*/
*         IF REQCODE=COPYC THEN     /*                       #Y30LB00
*                                      IS COPY CARTRIDGE REQ #Y30LB00*/
         B     @RC01118                                            1120
@RF01118 CLI   REQCODE(R6),40                                      1120
         BNE   @RF01120                                            1120
*           CCRTASID=ASCBASID;      /* INSERT ASID INTO      #Y30LB00
*                                      COPY CARTRIDGE ORDER  #Y30LB00*/
         L     @09,ORDERPT                                         1121
         L     @07,ASCBPTR                                         1121
         MVC   CCRTASID(2,@09),ASCBASID(@07)                       1121
*         ELSE                      /* NOT COPY VOLUME OR    #Y30LB00
*                                      COPY CARTRIDGE REQUEST      1122
*                                                            #Y30LB00*/
*           IF REQCODE=COPYTB THEN  /*                       #Y30LB00
*                                      IS COPY TABLES REQUEST      1122
*                                                            #Y30LB00*/
         B     @RC01120                                            1122
@RF01120 CLI   REQCODE(R6),22                                      1122
         BNE   @RF01122                                            1122
*             COTBASID=ASCBASID;    /* INSERT ASID INTO THE  #Y30LB00
*                                      COPY TABLES ORDER     #Y30LB00*/
         L     @09,ORDERPT                                         1123
         L     @07,ASCBPTR                                         1123
         MVC   COTBASID(2,@09),ASCBASID(@07)                       1123
*           ELSE                    /* NOT COPY TABLE REQUEST      1124
*                                                            #Y30LB00*/
*             IF REQCODE=VARYOFF THEN/*                      #Y30LB00
*                                      IS VARY OFF REQUEST   #Y30LB00*/
         B     @RC01122                                            1124
@RF01122 CLI   REQCODE(R6),12                                      1124
         BNE   @RF01124                                            1124
*               VOFASID=ASCBASID;   /* INSERT THE ASID INTO  #Y30LB00
*                                      THE VARY OFF ORDER    #Y30LB00*/
         L     @09,ORDERPT                                         1125
         L     @07,ASCBPTR                                         1125
         MVC   VOFASID(2,@09),ASCBASID(@07)                        1125
*             ELSE                  /* NOT VARY OFF REQUEST  #Y30LB00*/
*               IF((REQCODE=ACQUIRE)×/*                      #Y30LB00*/
*                   (REQCODE=RELINQ)) THEN/*                 #Y30LB00
*                                      IS ACQUIRE OR         #Y30LB00
*                                      RELINQUISH REQUEST    #Y30LB00*/
         B     @RC01124                                            1126
@RF01124 CLI   REQCODE(R6),2                                       1126
         BE    @RT01126                                            1126
         CLI   REQCODE(R6),4                                       1126
         BNE   @RF01126                                            1126
@RT01126 DS    0H                                                  1127
*                 ARASID=ASCBASID;  /*                       #Y30LB00
*                                      INSERT THE ASID INTO  #Y30LB00
*                                      ACQUIRE OR RELINQUISH #Y30LB00
*                                      ORDER                 #Y30LB00*/
         L     @09,ORDERPT                                         1127
         L     @07,ASCBPTR                                         1127
         MVC   ARASID(2,@09),ASCBASID(@07)                         1127
*               ELSE                /* NOT ACQ/REL REQUEST   #Y30LB00*/
*                 IF REQCODE=TUNE THEN/*                     #Y30LB00
*                                      IS TUNE REQUEST       #Y30LB00*/
         B     @RC01126                                            1128
@RF01126 CLI   REQCODE(R6),28                                      1128
         BNE   @RF01128                                            1128
*                   TUNEASID=ASCBASID;/*                     #Y30LB00
*                                      INSERT ASID INTO TUNE #Y30LB00
*                                      ORDER                 #Y30LB00*/
         L     @09,ORDERPT                                         1129
         L     @07,ASCBPTR                                         1129
         MVC   TUNEASID(2,@09),ASCBASID(@07)                       1129
*                 ELSE              /* NOT TUNE REQUEST      #Y30LB00*/
*                   IF REQCODE=DEMOUNT THEN/*                #Y30LB00
*                                      IS DEMOUNT REQUEST    #Y30LB00*/
         B     @RC01128                                            1130
@RF01128 CLI   REQCODE(R6),6                                       1130
         BNE   @RF01130                                            1130
*                     DMNTASID=ASCBASID;/*                   #Y30LB00
*                                      INSERT ASID INTO      #Y30LB00
*                                      DEMOUNT ORDER         #Y30LB00*/
         L     @09,ORDERPT                                         1131
         L     @07,ASCBPTR                                         1131
         MVC   DMNTASID(2,@09),ASCBASID(@07)                       1131
*                   ELSE            /* NOT DEMOUNT REQUEST   @Z40LB01*/
*                     IF REQCODE=NULLCART THEN/* NULLIFY     @Z40LB01*/
         B     @RC01130                                            1132
@RF01130 CLI   REQCODE(R6),9                                       1132
         BNE   @RF01132                                            1132
*                       NULASID=ASCBASID;/* SET ASID         @Z40LB01*/
         L     @09,ORDERPT                                         1133
         L     @07,ASCBPTR                                         1133
         MVC   NULASID(2,@09),ASCBASID(@07)                        1133
*   RFY                                                            1134
*    (MVLIST,                                                      1134
*     DEFLIST,                                                     1134
*     CVLIST,                                                      1134
*     CTLIST,                                                      1134
*     VOFLIST,                                                     1134
*     TUNELIST,                     /*                       #Y30LB00*/
*     CCLIST,                                                      1134
*     DMTLIST,                                                     1134
*     NULLLIST)                     /*                       @Z40LB01*/
*         BASED(R6);                /*                       #Y30LB00*/
*   RFY                                                            1135
*    (ARLIST) BASED(ARPTR);         /*                       #Y30LB00*/
*ASIDEXIT:                          /*                       #Y30LB00*/
*   RETURN;                         /* RETURN TO CALLER -    #Y30LB00
*                                      POSSIBLY, ASID INSERTED     1136
*                                                            #Y30LB00
*                                      IN TO THE ORDER       #Y30LB00*/
@EL00015 DS    0H                                                  1136
@EF00015 DS    0H                                                  1136
@ER00015 BR    @14                                                 1136
*   END ASID;                       /*                       #Y30LB00*/
         B     @EL00015                                            1137
*                                                                  1138
*/*  START OF SPECIFICATIONS ****                              @ZM31085
*                                                              @ZM31085
*01* MODULE-NAME = VUACK                                       @ZM31085
*                                                              @ZM31085
*01* DESCRIPTIVE-NAME = PLACES THE PRIMARY VUA IN THE          @ZM31085
*                       MNT/DMT REQUEST                        @ZDR2048
*                                                              @ZM31085
*01* FUNCTION = THIS ROUTINE GETS CONTROL FOR MNT/DMT REQUESTS.@ZDR2048
*               IT USES THE UCB LOOK UP TABLES TO LOCATE THE   @ZM31085
*               PRIMARY UCB ADDRESS. IF THE UCBACDRESS         @ZM31085
*               IS VALID THE UCBNAME WILL BE CONVERTED         @ZM31085
*               TO HEX AND PLACED THE THE MNT/DMT REQUEST.     @ZDR2048
*                                                              @ZM31085
*01* PURPOSE = THIS ROUTINE WILL GET THE PRIMARY VUA AND       @ZM31085
*              PLACE IT IN THE MNT/DMT REQUEST PARAMETER LIST  @ZDR2048
*                                                              @ZM31085
*01* INPUT = MNT/DMT PARAMETER LIST                            @ZDR2048
*                                                              @ZM31085
*01* OUTPUT = MNT/DMT PARAMETER LIST WITH CORRECT VUA          @ZDR2048
*                                                              @ZM31085
*                                                              @ZM31085
**** END OF SPECIFICATIONS **                                @ZM31085*/
*                                                                  1138
*VUACK:                             /*                       @ZM31085*/
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* CHECK THE VUA         @ZM31085*/
*                                                                  1138
VUACK    DS    0H                                                  1139
*   /*****************************************************************/
*   /*                                                               */
*   /* STRUCTURE TO LOCATE THE UCB LOOK UP ROUTINE           @ZM31085*/
*   /* LOOK UP ROUTINE                                       @ZM31085*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1139
*   DCL                             /*                       @ZM31085*/
*     SAV1UCBL CHAR(64) BDY(WORD);  /* SAVE AREA FOR REGS    @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     SAV2UCBL CHAR(12) BDY(WORD);  /* SAVE AREA FOR REGS    @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     SAV3UCBL CHAR(8) BDY(WORD);   /* SAVE AREA FOR REGS    @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     SAVR15 FIXED(32);             /* SAVE AREA FOR REG15   @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     UCBPTR PTR(31);               /* UCB POINTER           @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     UCBDCPTR PTR(31);             /* DUMMY PTR TO USE MAPPING    1144
*                                                            @ZM31085
*                                      MACRO                 @ZM31085*/
*/* **************************************************************** */
*/*                                                                  */
*/*            U N I T   C O N T R O L   B L O C K                   */
*/*                                                                  */
*/* **************************************************************** */
*/*                                                                  */
*/*  STATUS                                                          */
*/*                                                                  */
*/*      OS/VS2 RELEASE 3, 10/31/74, LEVEL=13                        */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*                                                                  */
*/*   -MULTIPROCESSING PREFIX, COMMON AND DEVICE DEPENDENT SEGMENTS, */
*/*    AND DEVICE DEPENDENT EXTENSIONS.                              */
*/*     THE UCB ADDRESS LOCATED FROM THE UCB LOOK UP TABLE POINTS    */
*/*     TO THE COMMON SEGMENT.  THIS ADDRESS MUST HAVE THE PREFIX    */
*/*     ADDRESSABILITY CONSTANT SUBTRACTED FROM IT IN ORDER TO MAP   */
*/*     THE PREFIX FIELDS AND STANDARD FIELDS VIA THIS MACRO.        */
*/*                                                                  */
*/*      PL/S - DCL UCBPTR PTR                                       */
*/*      BAL  - PREFIX=YES                                           */
*/*             A DSECT STATEMENT LABELED UCB IS PROVIDED.  A        */
*/*             USING STATEMENT ON THE SYMBOL UCB WILL PROVIDE       */
*/*             ADDRESSABILITY TO ALL PORTIONS OF THIS MAPPING       */
*/*             MACRO EXCEPT THE EXTENSIONS.  ADDITIONAL USING       */
*/*             STATEMENTS ARE NECESSARY TO OBTAIN ADDRESSING        */
*/*             TO THESE EXTENSIONS.  THESE ARE AS FOLLOWS -         */
*/*                                                                  */
*/*             COMMON EXTENSION                  UCBCMEXT           */
*/*             MAGNETIC TAPE EXTENSION           UCBMT              */
*/*             OPTICAL CHARACTER READER EXT      UCBOCR             */
*/*             3540 DEVICE EXTENSION             UCB3540X   @Z30OP9A*/
*/*             UNIT RECORD WITH UCS EXTENSION    UCBUCS             */
*/*                                                                  */
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */
*/*             DSECT A SYMBOL IS IN BY USING THE STATEMENT NUMBER   */
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */
*/*             STATEMENT NUMBERS FOR UCBMT AND UCBOCR IS IN THE     */
*/*             UCBMT DSECT.                                         */
*/*                                                                  */
*/*   -ALL PORTIONS EXCEPT THE MP PREFIX.                            */
*/*                                                                  */
*/*      BAL  - PREFIX=NO OR THE PREFIX PARAMETER OMITTED OR EQUAL   */
*/*             TO ANY STRING OTHER THAN YES.                        */
*/*             A DSECT STATEMENT SHOULD PRECEDE THE MACRO CALL.     */
*/*             SYMBOLS IN THE COMMON SECTION AND DEVICE DEPENDENT   */
*/*             SEGMENTS ARE ADDRESSABLE BY A USING ON UCBOB.        */
*/*             THE ABOVE COMMENTS ON THE EXTENSIONS APPLY HERE.     */
*/*                                                                  */
*/*  F.E.'S                                                          */
*/*                                                                  */
*/*      MICROFICHE LISTING - IEFUCBOB                               */
*/*                                                                  */
*/*  DEVELOPERS                                                      */
*/*                                                                  */
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */
*/*                                                                  */
*/*                                                                  */
*/*  FUNCTION                                                        */
*/*                                                                  */
*/*      A UNIT CONTROL BLOCK INCORPORATING A SYSTEM RESOURCE TABLE  */
*/*      RECORDS THE STATUS OF A PHYSICAL INPUT OUTPUT DEVICE        */
*/*      ADDRESS AND IS CREATED AND INITIALIZED DURING SYSTEM        */
*/*      GENERATION.  THE UNIT CONTROL BLOCK RESIDES IN THE NUCLEUS  */
*/*      BELOW 64K AND MAY POINT TO A DEVICE TYPE DEPENDENT          */
*/*      EXTENSION RESIDING HIGHER IN THE NUCLEUS.                   */
*/*      THE COMMON SEGMENT OF THE UCB IS POINTED TO BY              */
*/*      THE UCB LOOKUP TABLE WHICH IS INDEXED BY                    */
*/*      A FUNCTION OF THE CHANNEL CONTROL UNIT DEVICE ADDRESS.      */
*/*      THE UCB MAY BE POINTED TO BY TASK INPUT/OUTPUT TABLES       */
*/*      AND DATA EXTENT BLOCKS.  THE UCB WILL CONTAIN INDICES       */
*/*      INTO DEVICE STATISTICS, ATTENTION AND LOGICAL CHANNEL       */
*/*      TABLES.                                                     */
*/*                                                                  */
*/*  OUTPUT                                                          */
*/*      MULTIPROCESSING PREFIX                                      */
*/*      SYSGEN INDEPENDENT COMMON SECTION                           */
*/*        INCLUDING UCBTYP WORD                                     */
*/*      DEVICE DEPENDENT SEGMENT (ONE OF THE FOLLOWING)             */
*/*        DIRECT ACCESS                                             */
*/*        MAGNETIC TAPE                                             */
*/*        UNIT RECORD WITH UCS OR 3886 OR 3540              @Z30OP9A*/
*/*        GRAPHICS EXCEPT 3270                                      */
*/*        3270 GRAPHICS                                             */
*/*        3704, 3705 TELEPROCESSING DEVICE                          */
*/*      COMMON EXTENSION                                            */
*/*      UCB EXTENSION (ONE OF THE FOLLOWING)                        */
*/*        MAGNETIC TAPE                                             */
*/*        OPTICAL CHARACTER READER                                  */
*/*        3540 DEVICE                                       @Z30OP9A*/
*/*        UNIT RECORD WITH UNIVERSAL CHARACTER SET                  */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  1145
*                                                                  1145
*/* **************************************************************** */
*/*                                                                  */
*/*      MULTIPROCESSING UCB PREFIX                                  */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  1145
*   DECLARE                                                        1145
*     1 UCB BASED(UCBPTR-512) BDY(WORD),/* UCB PREFIX          YM0450*/
*      2 * CHAR(504),               /* RESERVED                      */
*      2 UCBPXST CHAR(0),           /* START OF USED FIELDS IN PREFIX
*                                      MDC187                        */
*      2 UCBLOCK FIXED(31),         /* DEVICE LOCK MDC238            */
*      2 UCBIOQ PTR(31),            /* ADDRESS OF LAST QUEUING     1145
*                                      ELEMENT USED FOR THIS DEVICE.
*                                      ADDRESS OF ERP WORK AREA    1145
*                                      DURING INTERCEPT AND        1145
*                                      ASYNCHRONOUS ATTENTION/DEVICE
*                                      END WITH UNIT CHECK         1145
*                                      CONDITIONS. WHEN DIRECT ACCESS
*                                      VOLUME VERIFICATION (DAVV) IS
*                                      WAITING FOR A VOLUME MOUNT, 1145
*                                      THIS FIELD WILL POINT TO THE
*                                      DAVV SRB. MDC197              */
*      2 UCBPFXND CHAR(0);          /* END OF PREFIX           YM0450*/
*/* **************************************************************** */
*/*                                                                  */
*/*     SYSGEN-INDEPENDENT                                           */
*/*     COMMON SECTION                                               */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  1146
*   DECLARE                                                        1146
*     1 UCBOB BASED(UCBPTR) BDY(WORD),                             1146
*      2 UCBCMSEG CHAR(0),          /* START OF COMMON SECTION MDC168*/
*      2 UCBJBNR BIT(8) BDY(WORD),  /* FLAG BYTE (OS/VS2) MDC012     */
*       3 UCBVRDEV BIT(1),          /* UCB FOR VIRTUAL DEVICE MDC012 */
*       3 UCBJES3 BIT(1),           /* ALL VOLUME MOUNTING AND DEVICE
*                                      MANAGEMENT FOR THIS DEVICE IS
*                                      CONTROLLED BY JES3 MDC246     */
*       3 UCBRV002 BIT(1),          /* RESERVED                      */
*       3 UCBRV003 BIT(1),          /* RESERVED                      */
*       3 UCBOLDSM BIT(1),          /* OLTEP COMMUNICATING DIRECTLY
*                                      WITH THE MASS STORAGE CONTROL
*                                      (MSC), NOT THROUGH THE MASS 1146
*                                      STORAGE SYSTEM COMMUNICATOR 1146
*                                      (MSSC) (MDC301)       @Z30LP9A*/
*       3 UCBRSV02 BIT(1),          /* RESERVED                      */
*       3 UCBRV011 BIT(1),          /* RESERVED MDC013               */
*       3 UCBMONT BIT(1),           /* VOLUME TO BE MOUNTED IS TO BE
*                                      RETAINED OR CONTAIN A PASSED
*                                      DATA SET. (SET BY DEVICE    1146
*                                      ALLOCATION OR DATA MANAGEMENT
*                                      FOR OS/VS2) MDC014            */
*      2 UCBFL5 BIT(8),             /* FLAGS                         */
*       3 UCBDCC BIT(1),            /* DISCONNECT COMMAND CHAIN    1146
*                                      DEVICE MDC098                 */
*       3 UCBAF BIT(1),             /* ATTENTION FOR THIS CONSOLE  1146
*                                      DEVICE IS TO BE PROCESSED BY
*                                      THE COMMUNICATIONS TASK ICB321*/
*        4 UCBAMV BIT(1),           /* SUCCESSFUL COMPARISON CHECKING
*                                      OF THE ACCESS METHOD CATALOG
*                                      AND THE VTOC (VSAM DIRECT   1146
*                                      ACCESS DEVICES ONLY) ICB437   */
*       3 UCBSASK BIT(1),           /* DEVICE REQUIRES STAND ALONE 1146
*                                      SEEK MDC099                   */
*       3 UCBVSDR BIT(1),           /* DEVICE HAS VARIABLE LENGTH  1146
*                                      SDR'S                         */
*       3 UCBENVRD BIT(1),          /* DEVICE RETURNS ENVIRONMENTAL
*                                      DATA MDC100                   */
*       3 UCBNALOC BIT(1),          /* THIS OFFLINE DEVICE IS BEING
*                                      USED BY A SYSTEM COMPONENT. 1146
*                                      THE DEVICE STATUS MUST NOT  1146
*                                      CHANGE TO ONLINE NOR WILL IT
*                                      BE ALLOCATED. THE LAST PATH/
*                                      CHANNEL/CPU TO THE DEVICE MUST
*                                      NOT BE VARY'ED OFFLINE. THE 1146
*                                      DEVICE IS UNAVAILABLE FOR   1146
*                                      USAGE BY ANOTHER SYSTEM     1146
*                                      COMPONENT WHICH PROCESSES   1146
*                                      OFFLINE DEVICES. TO SET THIS
*                                      INDICATOR ON, A COMPONENT MUST
*                                      OBTAIN VIA ENQ, EXCLUSIVE,  1146
*                                      SYSTEM LEVEL CONTROL OF     1146
*                                      RESOURCE SYSIEFSD, Q4.      1146
*                                      SERIALIZATION IS NOT REQUIRED
*                                      TO TURN THIS INDICATOR OFF. 1146
*                                      MDC027                        */
*       3 UCBALTCU BIT(1),          /* DEVICE HAS AN ALTERNATE     1146
*                                      CONTROL UNIT ADDRESS          */
*       3 UCBALTPH BIT(1),          /* DEVICE HAS AN ALTERNATE PATH  */
*      2 UCBID CHAR(1),             /* UCB IDENTIFICATION (FF)       */
*      2 UCBSTAT BIT(8),            /* DEVICE STATUS                 */
*       3 UCBONLI BIT(1),           /* DEVICE IS ONLINE              */
*       3 UCBCHGS BIT(1),           /* DEVICE STATUS IS TO BE CHANGED
*                                      FROM ONLINE TO OFFLINE, AND 1146
*                                      EITHER ALLOCATION IS ENQUEUED
*                                      ON DEVICES OR THE DEVICE IS 1146
*                                      ALLOCATED. (BIT 0 IS ALSO ON.)*/
*       3 UCBRESV BIT(1),           /* THE MOUNT STATUS OF THE VOLUME
*                                      ON THIS DEVICE IS RESERVED    */
*       3 UCBUNLD BIT(1) ABNORMAL,  /* UNLOAD OPERATOR COMMAND HAS 1146
*                                      BEEN ADDRESSED TO THIS DEVICE.
*                                      THE DEVICE IS NOT YET       1146
*                                      UNLOADED. MDC167              */
*       3 UCBALOC BIT(1),           /* DEVICE IS ALLOCATED           */
*       3 UCBPRES BIT(1),           /* THE MOUNT STATUS OF THE VOLUME
*                                      ON THIS DEVICE IS PERMANENTLY
*                                      RESIDENT                      */
*       3 UCBSYSR BIT(1),           /* SYSTEM RESIDENCE DEVICE OR  1146
*                                      PRIMARY CONSOLE OR ACTIVE   1146
*                                      CONSOLE                       */
*       3 UCBDADI BIT(1),           /* STANDARD TAPE LABELS HAVE BEEN
*                                      VERIFIED FOR THIS TAPE VOLUME
*                                      OR SECONDARY CONSOLE OR     1146
*                                      CONSOLE STATUS CHANGING       */
*      2 UCBCHAN CHAR(2),           /* BINARY CHANNEL/UNIT ADDRESS 1146
*                                      MDC102                        */
*       3 UCBCHA PTR(8),            /* BINARY CHANNEL ADDRESS OF LAST
*                                      STARTED I/O OPERATION         */
*       3 UCBUA PTR(8),             /* BINARY UNIT ADDRESS           */
*      2 UCBSFLS CHAR(2),           /* DEVICE STATUS FLAGS MDC103    */
*       3 UCBFLA BIT(8),            /* I/O SUPERVISOR FLAG BYTE A  1146
*                                      MDC104                        */
*        4 UCBFL1 BIT(8),           /* ALIAS                         */
*         5 UCBBSY BIT(1),          /* DEVICE IS BUSY MDC105         */
*          6 UCBBUSYD BIT(1),       /* ALIAS                         */
*         5 UCBNRY BIT(1),          /* DEVICE NOT READY MDC106       */
*          6 UCBNOTRD BIT(1),       /* ALIAS                         */
*         5 UCBPST BIT(1),          /* POST FLAG (ASSOC IOQE) MDC107 */
*          6 UCBUSING BIT(1),       /* ALIAS                         */
*         5 UCBPSNS BIT(1),         /* PENDING SENSE OPERATION MDC108*/
*         5 UCBCUB BIT(1),          /* CONTROL UNIT BUSY MDC109      */
*          6 UCBNOTRC BIT(1),       /* ALIAS                         */
*         5 UCBSAP BIT(1),          /* STAND ALONE PROCESS ON DEVICE
*                                      ACTIVE (EG., RESERVE) MDC110  */
*         5 UCBACTV BIT(1),         /* CHANNEL PROGRAM ACTIVE ON   1146
*                                      DEVICE MDC111                 */
*         5 UCBQISCE BIT(1),        /* DEVICE QUIESCED MDC112        */
*       3 UCBFLB BIT(8),            /* I/O SUPERVISOR FLAG BYTE B  1146
*                                      MDC113                        */
*        4 UCBIORST BIT(1),         /* I/O RESTART VIA ALTERNATE CPU
*                                      RECOVERY HAS FACTORED DEVICE
*                                      OUT OF CONFIGURATION BECAUSE
*                                      OF NON-ACCESSABILITY. ALL   1146
*                                      INCOMING I/O REQUESTS ARE   1146
*                                      INTERCEPTED AND MARKED IN   1146
*                                      PERMANENT ERROR WITH A      1146
*                                      COMPLETION CODE OF X'51'.   1146
*                                      HOWEVER, IF CHANNEL         1146
*                                      RECONFIGURATION HARDWARE (CRH)
*                                      IS ACTIVE AND CRH WILL BE USED
*                                      TO ACCESS THE DEVICE        1146
*                                      ASSOCIATED WITH THE UCB, THIS
*                                      BIT WILL BE ON IN EVERY UCB 1146
*                                      THAT HAS OUTSTANDING I/O    1146
*                                      ACROSS A CRH PATH. (MDC320) 1146
*                                                            @Z30CQ9A*/
*        4 UCBASNS BIT(1),          /* SENSE ACTIVE ON DEVICE MDC115 */
*        4 UCBSPST BIT(1),          /* SENSE POST INDICATOR MDC116   */
*        4 UCBRESVH BIT(1),         /* DEVICE RESERVED INDICATOR   1146
*                                      MDC157                        */
*        4 UCBCRHRV BIT(1),         /* RESERVED PATH THROUGH A     1146
*                                      CHANNEL RECONFIGURATION     1146
*                                      HARDWARE (CRH) CONNECTION   1146
*                                      (MDC303)              @Z30CQ9A*/
*        4 UCBCRHSN BIT(1),         /* IF 1, SENSE PENDING FROM    1146
*                                      INOPERATIVE CPU. IF 0, SENSE
*                                      PENDING FROM OPERATIVE CPU. 1146
*                                      BIT IS SET ONLY WHEN CHANNEL
*                                      RECONFIGURATION HARDWARE (CRH)
*                                      IS ACTIVE. (MDC332)   @Z30CQ9A*/
*        4 UCBVALPH BIT(1),         /* PATH VALIDATION (MDC337)    1146
*                                                            @ZA00078*/
*        4 UCBFLB7 BIT(1),          /* RESERVED                      */
*      2 UCBCHM BIT(8),             /* PATH STATUS MASK FOR THIS   1146
*                                      DEVICE MDC198                 */
*       3 UCBCHM1 BIT(8),           /* SAME AS UCBCHM MDC199         */
*        4 UCBPTH0 BIT(2),          /* PATHS FROM CPU 0 MDC200       */
*         5 UCBPPA BIT(1),          /* PRIMARY PATH CPU 0 MDC201     */
*         5 UCBSPA BIT(1),          /* SECONDARY PATH CPU 0 MDC202   */
*        4 UCBPTH1 BIT(2),          /* PATHS FROM CPU 1 MDC203       */
*         5 UCBPPB BIT(1),          /* PRIMARY PATH CPU 1 MDC204     */
*         5 UCBSPB BIT(1),          /* SECONDARY PATH CPU 1 MDC205   */
*        4 UCBRV014 BIT(1),         /* RESERVED                      */
*        4 UCBRV015 BIT(1),         /* RESERVED                      */
*        4 UCBRV016 BIT(1),         /* RESERVED                      */
*        4 UCBRV017 BIT(1),         /* RESERVED                      */
*      2 UCBCNT PTR(8),             /* COUNT OF QUEUED REQUESTS    1146
*                                      WAITING FOR DEVICE MDC206     */
*      2 UCBLCI PTR(8),             /* INCREMENT WHICH, WHEN       1146
*                                      MULTIPLIED BY 8, BECOMES AN 1146
*                                      INDEX TO THE LOGICAL CHANNEL
*                                      TABLE (LCHTAB)                */
*      2 UCBCPU CHAR(1),            /* LAST SIO TO DEVICE ISSUED FROM
*                                      THIS CPUID MDC207             */
*      2 UCBWGT BIT(8) BDY(WORD),   /* FLAGS                         */
*       3 UCBIN BIT(1),             /* SYSIN                         */
*       3 UCBOUT BIT(1),            /* SYSOUT                        */
*       3 UCBPUB BIT(1),            /* ASSUMED THAT THIS DEVICE WILL
*                                      BE ALLOCATED FOR A PUBLIC   1146
*                                      VOLUME REQUEST                */
*       3 UCBREW BIT(1),            /* REWIND COMMAND HAS BEEN     1146
*                                      ADDRESSED TO THIS MAGNETIC  1146
*                                      TAPE DEVICE BY I/O SUPPORT    */
*       3 UCBMTPXP BIT(1),          /* MULTIPLE EXPOSURE DEVICE    1146
*                                      MDC117                        */
*       3 UCBVORSN BIT(1),          /* VARY COMMAND OPERATOR REASON
*                                      INDICATOR MDC118              */
*       3 UCBVHRSN BIT(1),          /* VARY COMMAND HIERARCHY REASON
*                                      INDICATOR MDC119              */
*       3 UCBRV029 BIT(1),          /* RESERVED MDC028               */
*      2 UCBNAME CHAR(3) BDY(WORD,2),/* UNIT NAME (EBCDIC)           */
*      2 UCBTYP CHAR(4) BDY(WORD),  /* DEVICE TYPE                   */
*       3 UCBTBYT1 BIT(8),          /* MODEL BITS                    */
*        4 UCB1FEA0 BIT(1),         /* BIT 0                         */
*        4 UCB1FEA1 BIT(1),         /* BIT 1                         */
*        4 UCB1FEA2 BIT(1),         /* BIT 2                         */
*        4 UCB1FEA3 BIT(1),         /* BIT 3                         */
*        4 UCB1FEA4 BIT(1),         /* BIT 4                         */
*        4 UCB1FEA5 BIT(1),         /* BIT 5                         */
*         5 UCBD1600 BIT(1),        /* 1600 BPI ICB475               */
*        4 UCB1FEA6 BIT(1),         /* BIT 6                         */
*         5 UCBD6250 BIT(1),        /* 6250 BPI ICB475               */
*        4 UCB1FEA7 BIT(1),         /* BIT 7                         */
*       3 UCBTBYT2 BIT(8),          /* OPTION FLAGS                  */
*        4 UCB2OPT0 BIT(1),         /* FLAG 0                        */
*        4 UCB2OPT1 BIT(1),         /* FLAG 1                        */
*        4 UCB2OPT2 BIT(1),         /* FLAG 2                        */
*         5 UCBDUDN1 BIT(1),        /* DUAL DENSITY 800/1600 BPI   1146
*                                      ICB475                        */
*          6 UCBRR BIT(1),          /* THIS DEVICE IS SHARABLE     1146
*                                      BETWEEN TWO CPU'S (DIRECT   1146
*                                      ACCESS) MDC159                */
*        4 UCB2OPT3 BIT(1),         /* FLAG 3                        */
*         5 UCBDUDN2 BIT(1),        /* DUAL DENSITY 1600/6250 BPI  1146
*                                      ICB475                        */
*          6 UCBRPS BIT(1),         /* ROTATIONAL POSITION SENSING 1146
*                                      (RPS) DEVICE (DIRECT ACCESS)
*                                      MDC120                        */
*        4 UCB2OPT4 BIT(1),         /* FLAG 4                        */
*         5 UCBRWTAU BIT(1),        /* READ/WRITE TAPE CONTROL MDC166*/
*          6 UCBRVDEV BIT(1),       /* IF 0, REAL DEVICE. IF 1,    1146
*                                      VIRTUAL DEVICE. (DIRECT     1146
*                                      ACCESS) (MDC300)      @Z30LP9A*/
*        4 UCB2OPT5 BIT(1),         /* FLAG 5                        */
*        4 UCB2OPT6 BIT(1),         /* FLAG 6                        */
*         5 UCBVLPWR BIT(1),        /* VOLUME REQUIRES ALTERNATE   1146
*                                      POWER SOURCE DEVICE (MDC322)
*                                                            @Z30AQ9A*/
*        4 UCB2OPT7 BIT(1),         /* FLAG 7                        */
*         5 UCBDVPWR BIT(1),        /* DEVICE HAS ALTERNATE POWER  1146
*                                      SOURCE (MDC323)       @Z30AQ9A*/
*       3 UCBTBYT3 BIT(8),          /* CLASS BITS                    */
*        4 UCBDVCLS BIT(8),         /* SAME AS UCBTBYT3 MDC169       */
*         5 UCB3TAPE BIT(1),        /* TAPE                          */
*         5 UCB3COMM BIT(1),        /* COMMUNICATIONS                */
*         5 UCB3DACC BIT(1),        /* DIRECT ACCESS                 */
*         5 UCB3DISP BIT(1),        /* DISPLAY                       */
*         5 UCB3UREC BIT(1),        /* UNIT RECORD                   */
*         5 UCB3CHAR BIT(1),        /* CHARACTER READER              */
*         5 UCBRSV10 BIT(1),        /* RESERVED                      */
*         5 UCBRSV11 BIT(1),        /* RESERVED                      */
*       3 UCBTBYT4 CHAR(1),         /* DEVICE CODE                   */
*        4 UCBUNTYP CHAR(1),        /* SAME AS UCBTBYT4 MDC170       */
*      2 UCBEXTPT PTR(31),          /* ADDRESS OF COMMON UCB       1146
*                                      EXTENSION MDC227              */
*       3 UCBFLC BIT(8),            /* I/O SUPERVISOR FLAG BYTE C  1146
*                                      MDC228                        */
*        4 UCBATTP BIT(1),          /* ATTENTION PENDING MDC229      */
*        4 UCBWAA BIT(1),           /* WORK AREA APPENDED MDC230     */
*        4 UCBUDE BIT(1),           /* UNSOLICITED DEVICE END      1146
*                                      RECEIVED MDC231               */
*        4 UCBITF BIT(1),           /* INTERCEPT CONDITION MDC232    */
*        4 UCBIVRS BIT(1),          /* INTERVENTION REQUIRED MESSAGE
*                                      ISSUED MDC233                 */
*        4 UCBIVRR BIT(1),          /* INTERVENTION REQUIRED MESSAGE
*                                      IS NEEDED MDC234              */
*        4 UCBTICBT BIT(1),         /* CHANNEL END AND/OR DEVICE END
*                                      OR MOUNT CONDITION PENDING. 1146
*                                      MDC235                        */
*        4 UCBDDRSW BIT(1),         /* DDR SWITCH PENDING ON THIS  1146
*                                      DEVICE MDC236                 */
*       3 UCBEXTP PTR(24),          /* ADDRESS OF COMMON UCB       1146
*                                      EXTENSION MDC237              */
*/*                                                                  */
*/* **************************************************************** */
*/*                                                                  */
*/*      DEVICE-DEPENDENT UCB SEGMENTS                               */
*/*                                                                  */
*                                                                  1146
*      2 UCBDEV CHAR(0) BDY(WORD);                                 1146
*                                                                  1146
*/*                                                                  */
*/* **************************************************************** */
*/*                                                                  */
*/*           DIRECT ACCESS                                          */
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*/*      UCBVOLI, UCBSTAB AND UCBDMCT ARE SAME IN TAPE SEGMENT AS    */
*/*      IN DIRECT ACCESS SEGMENT.                                   */
*/*                                                                  */
*                                                                  1147
*   DECLARE                                                        1147
*     1 UCBOBS01 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT   */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1147
*      2 UCBVTOC CHAR(4) BDY(WORD), /* RELATIVE ADDRESS OF VTOC FOR
*                                      THIS VOLUME, IN FORM TTR0   1147
*                                      MDC085                        */
*      2 UCBVOLI CHAR(6) BDY(WORD), /* VOLUME SERIAL NUMBER          */
*      2 UCBSTAB BIT(8),            /* VOLUME STATUS                 */
*       3 UCBBSVL BIT(1),           /* VOLUME DEMOUNTABLE BY DATA  1147
*                                      MANAGEMENT (DIRECT ACCESS)  1147
*                                      (OS/VS2) MDC008               */
*        4 UCBDVSHR BIT(1),         /* DEVICE NOT SHARABLE AMONG   1147
*                                      SEVERAL CPU'S (3420 MAGNETIC
*                                      TAPE DEVICES ONLY) (MDC245) 1147
*                                                             XA03017*/
*       3 UCBPGFL BIT(1),           /* UCB IS OPEN AND IS BEING USED
*                                      AS A PAGE FILE ICB338         */
*       3 UCBPRSRS BIT(1),          /* DURING VOLUME ATTRIBUTE     1147
*                                      PROCESSING THIS BIT IS USED 1147
*                                      BOTH TO DENOTE UCB'S THAT WERE
*                                      MARKED PERMANENTLY RESIDENT 1147
*                                      PRIOR TO GETTING CONTROL AND
*                                      TO IDENTIFY DEVICES THAT WERE
*                                      SELECTED BY THE OPERATOR FOR
*                                      MOUNTING VOLUMES (DIRECT    1147
*                                      ACCESS) MDC162                */
*        4 UCBBALB BIT(1),          /* ADDITIONAL VOLUME LABEL     1147
*                                      PROCESSING (TAPE)             */
*       3 UCBBPRV BIT(1),           /* PRIVATE - VOLUME USE STATUS   */
*       3 UCBBPUB BIT(1),           /* PUBLIC - VOLUME USE STATUS    */
*       3 UCBBSTR BIT(1),           /* STORAGE - VOLUME USE STATUS 1147
*                                      (DIRECT ACCESS) THE VOLUME  1147
*                                      MOUNTED HAS AN AMERICAN     1147
*                                      NATIONAL STANDARD LABEL (TAPE)*/
*       3 UCBSHAR BIT(1),           /* VOLUME SHAREABLE AMONG JOB  1147
*                                      STEPS (OS/VS2) MDC020         */
*       3 UCBBNUL BIT(1),           /* CONTROL VOLUME - A CATALOG  1147
*                                      DATA SET IS ON THIS VOLUME  1147
*                                      (DIRECT ACCESS) IF THE      1147
*                                      MULTIPLE CONSOLE SUPPORT    1147
*                                      OPTION IS IN THE SYSTEM,    1147
*                                      DEMOUNT OR MOUNT MESSAGES HAVE
*                                      BEEN ISSUED AND THE MESSAGE 1147
*                                      ID'S ARE AT OFFSETS 40 THROUGH
*                                      45. OPEN WILL DELETE THE    1147
*                                      MESSAGES AND TURN THIS BIT  1147
*                                      OFF. (TAPE)                   */
*      2 UCBDMCT CHAR(1),           /* VOLUME USE BYTE               */
*       3 UCBMOUNT BIT(1),          /* MOUNTED OR REQUEST ISSUED (OFF
*                                      MEANS MOUNT VERIFIED)         */
*       3 UCBDMC BIT(7),            /* NUMBER OF DCB'S OPEN FOR THIS
*                                      VOLUME                        */
*      2 UCBDATP CHAR(0) BDY(WORD), /* END OF COMMON DIRECT ACCESS/
*                                      TAPE AREA                     */
*      2 UCBSQC PTR(8),             /* NUMBER OF RESERVE MACRO     1147
*                                      INSTRUCTIONS ISSUED MDC086    */
*      2 UCBFL4 BIT(8),             /* DIRECT ACCESS FLAG BYTE MDC087*/
*       3 UCBDAVV BIT(1),           /* DIRECT ACCESS VOLUME        1147
*                                      VERIFICATION IN CONTROL (DAVV)
*                                      MDC127                        */
*       3 UCBWDAV BIT(1),           /* DAVV WAITING FOR MOUNT MDC128 */
*       3 UCBRV028 BIT(1),          /* RESERVED MDC157               */
*       3 UCBDSS BIT(1),            /* READ HOME ADDRESS AND READ  1147
*                                      RECORD ZERO OPERATIONS HAVE 1147
*                                      BEEN PERFORMED BY DYNAMIC   1147
*                                      SUPPORT SYSTEM (DSS) MDC088   */
*       3 UCBRV065 BIT(1),          /* RESERVED (MDC302)             */
*       3 UCBFL45 BIT(1),           /* RESERVED                      */
*       3 UCBFL46 BIT(1),           /* RESERVED                      */
*       3 UCBFL47 BIT(1),           /* RESERVED                      */
*      2 UCBUSER PTR(8),            /* NUMBER OF CURRENT USERS MDC089*/
*      2 UCBRES1A CHAR(1),          /* RESERVED                      */
*      2 UCBBASE PTR(31),           /* ADDRESS OF BASE EXPOSURE UCB
*                                      MDC130                        */
*      2 UCBNEXP PTR(31);           /* BASE - ADDRESS OF LAST STARTED
*                                      EXPOSURE NON-BASE - ADDRESS OF
*                                      NEXT EXPOSURE IN THE RING THIS
*                                      ADDRESS POINTS TO THE       1147
*                                      MULTIPROCESSING PREFIX MDC131 */
*/* **************************************************************** */
*/*                                                                  */
*/*    MAGNETIC TAPE UCB SEGMENT                                     */
*/*                                                                  */
*/*      UCBVOLI, UCBSTAB AND UCBDMCT ARE SAME IN TAPE SEGMENT AS    */
*/*      IN DIRECT ACCESS SEGMENT.                                   */
*/*                                                                  */
*                                                                  1148
*   DECLARE                                                        1148
*     1 UCBOBS02 DEF(UCBDEV) BDY(WORD),                            1148
*                                                                  1148
*/* **************************************************************** */
*                                                                  1148
*      2 UCBFSCT FIXED(15),         /* DATA SET SEQUENCE COUNT MDC090*/
*      2 UCBFSEQ FIXED(15),         /* DATA SET SEQUENCE NUMBER    1148
*                                      MDC091                        */
*      2 * CHAR(8),                 /* UCBVOLI, UCBSTAB AND UCBDMCT
*                                      AS IN DIRECT ACCESS SEGMENT   */
*      2 UCBFSER CHAR(6),           /* BEFORE OPEN, MESSAGE ID'S. SEE
*                                      UCBSTAB BIT 7. AFTER OPEN,  1148
*                                      DATA SET SERIAL NUMBER MDC092 */
*      2 UCBRES1B CHAR(1),          /* RESERVED                      */
*      2 UCBTFL1 BIT(8),            /* FLAG BYTE (TAPE DEVICES ONLY)
*                                      MDC015                        */
*       3 UCBNLTP BIT(1),           /* TAPE VOLUME DOES NOT CONTAIN
*                                      LABELS MDC016                 */
*       3 UCBNSLTP BIT(1),          /* TAPE CONTAINS NON-STANDARD  1148
*                                      LABELS MDC017                 */
*       3 UCBRV038 BIT(1),          /* RESERVED MDC164               */
*       3 UCBRV005 BIT(1),          /* RESERVED                      */
*       3 UCBRV006 BIT(1),          /* RESERVED                      */
*       3 UCBRV007 BIT(1),          /* RESERVED                      */
*       3 UCBRV008 BIT(1),          /* RESERVED                      */
*       3 UCBRV009 BIT(1),          /* RESERVED                      */
*      2 UCBXTN PTR(31),            /* ADDRESS OF THE MAGNETIC TAPE
*                                      UCB EXTENSION MDC093          */
*       3 UCBVOPT BIT(8),           /* VOLUME STATISTICS OPTION BITS
*                                      MDC094                        */
*        4 UCBESV BIT(1),           /* ERROR STATISTICS BY VOLUME  1148
*                                      (ESV) RECORDS KEPT MDC094     */
*        4 UCBEVA BIT(1),           /* ERROR VOLUME ANALYSIS (EVA) 1148
*                                      RECORDS KEPT MDC094           */
*        4 UCBESVC BIT(1),          /* IF 0, ESV RECORDS SENT TO   1148
*                                      SYS1.MAN (X OR Y) DATA SET. IF
*                                      1, ESV RECORDS SENT TO      1148
*                                      CONSOLE. MDC094               */
*        4 UCBERPC BIT(1),          /* AN ERROR RECOVERY PROCEDURE 1148
*                                      HAS CONTROL MDC094            */
*        4 UCBESVE BIT(1),          /* AN ESV RECORD HAS BEEN ISSUED
*                                      FOR THIS VOLUME BECAUSE OF AN
*                                      EOV CONDITION MDC094          */
*        4 UCBRSV20 BIT(1),         /* RESERVED MDC094               */
*        4 UCBRSV21 BIT(1),         /* RESERVED MDC094               */
*        4 UCBRSV22 BIT(1),         /* RESERVED MDC094               */
*       3 UCBXTNB PTR(24);          /* ADDRESS OF THE MAGNETIC TAPE
*                                      UCB EXTENSION MDC095          */
*/* **************************************************************** */
*/*                                                                  */
*/*           UNIT RECORD WITH                                       */
*/*           UNIVERSAL CHARACTER SET (1403, 3211)                   */
*/*           OR OPTICAL CHARACTER READER (3886)                     */
*/*           OR 3540 DEVICE                                 @Z30OP9A*/
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*                                                                  1149
*   DECLARE                                                        1149
*     1 UCBOBS03 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT   */
*/* **************************************************************** */
*                                                                  1149
*      2 UCBXTADR PTR(31);          /* ADDRESS OF UCS UCB EXTENSION
*                                      (1403 OR 3211) OR ADDRESS OF
*                                      OPTICAL CHARACTER READER UCB
*                                      EXTENSION (3886) OR ADDRESS OF
*                                      3540 DEVICE UCB EXTENSION   1149
*                                      (3540) (MDC324)       @Z30OP9A*/
*/* **************************************************************** */
*/*                                                                  */
*/*           GRAPHICS EXCEPT 3270                                   */
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*                                                                  1150
*   DECLARE                                                        1150
*     1 UCBOBS04 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT   */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1150
*      2 UCBSTART PTR(15),          /* LAST START ADDRESS (MDC247) 1150
*                                                              YM4067*/
*      2 UCBOPEN PTR(8),            /* NUMBER OF DCB'S THAT ARE    1150
*                                      CURRENTLY OPEN FOR THIS DEVICE*/
*      2 UCBGCB CHAR(1),            /* GRAPHIC CONTROL BYTE USED FOR
*                                      ATTENTION HANDLING            */
*      2 UCBTEB PTR(31),            /* ADDRESS OF TASK ENTRY (TE)  1150
*                                      BLOCK                         */
*      2 UCBSNS CHAR(4) BDY(WORD),  /* SENSE INFORMATION (MDC248)  1150
*                                                              YM4067*/
*      2 UCBBTA PTR(31),            /* ADDRESS OF BUFFER TABLE       */
*       3 UCBDI PTR(8),             /* DEVICE OR DEVICES ON A CONTROL
*                                      UNIT TO WHICH BUFFER SECTIONS
*                                      ARE ASSIGNED                  */
*       3 UCBBTB PTR(24);           /* ADDRESS OF BUFFER TABLE       */
*/* **************************************************************** */
*/*                                                                  */
*/*           3270 GRAPHICS                                          */
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*                                                                  1151
*   DECLARE                                                        1151
*     1 UCBOBS06 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT 1151
*                                      ICB480                        */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1151
*      2 UCBAOF CHAR(2),            /* ADDITIONAL OPTIONAL FEATURES.
*                                      AN EXTENSION OF THE OPTIONAL
*                                      FEATURES BYTE OF THE UCBTYP 1151
*                                      FIELD. ICB480                 */
*       3 UCBAOF1 BIT(8),           /* FIRST BYTE OF UCBAOF ICB480   */
*        4 UCBOFMCR BIT(1),         /* MAGNETIC CARD READER ADAPTER -
*                                      FOR 3277 ONLY ICB480          */
*        4 UCBOFSP BIT(1),          /* SELECTOR PEN - FOR 3277 ONLY
*                                      ICB480                        */
*        4 UCBOFNL BIT(1),          /* NUMERIC LOCK - FOR 3277 ONLY
*                                      ICB480                        */
*        4 UCBRSV64 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV65 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV66 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV67 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV68 BIT(1),         /* RESERVED ICB480               */
*       3 UCBAOF2 BIT(8),           /* SECOND BYTE OF UCBAOF ICB480  */
*        4 UCBRSV69 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV70 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV71 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV72 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV73 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV74 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV75 BIT(1),         /* RESERVED ICB480               */
*        4 UCBRSV76 BIT(1),         /* RESERVED ICB480               */
*      2 UCBATNCT PTR(8),           /* ATTENTION COUNT. THE NUMBER OF
*                                      ATTENTIONS NOT SERVICED IN THE
*                                      LINE GROUP. PRESENT ONLY IF 1151
*                                      THE DEVICE INDEX FIELD IS 1.
*                                      OTHERWISE, THIS FIELD IS    1151
*                                      RESERVED. ICB480              */
*      2 * BIT(8),                  /* UCBGCB - CONTROL BYTE. USED 1151
*                                      FOR ATTENTION HANDLING FLAGS.
*                                      ICB480                        */
*       3 UCBOLTEP BIT(1),          /* OLTEP IN CONTROL OF THE DEVICE
*                                      ICB480                        */
*       3 UCBRSV77 BIT(1),          /* RESERVED ICB480               */
*       3 UCBRSV78 BIT(1),          /* RESERVED ICB480               */
*       3 UCBRSV79 BIT(1),          /* RESERVED ICB480               */
*       3 UCBRTIAC BIT(1),          /* READ TI ACTIVE MDC171         */
*       3 UCBRIPND BIT(1),          /* READ INITIAL PENDING ICB480   */
*       3 UCBSKPFG BIT(1),          /* SKIP FLAG ICB480              */
*       3 UCBATRCD BIT(1),          /* ATTENTION RECEIVED FROM THE 1151
*                                      DEVICE ICB480                 */
*      2 UCBIRB PTR(31),            /* ADDRESS OF THE IRB USED FOR 1151
*                                      SCHEDULING THE SECOND LEVEL 1151
*                                      ATTENTION ROUTINE ICB480      */
*       3 UCBGRAF BIT(8),           /* GRAPHICS STATUS FLAGS (BTAM)
*                                      MDC172                        */
*        4 UCBOIP BIT(1),           /* OPEN IS IN PROGRESS MDC173    */
*        4 UCBDRO BIT(1),           /* DEVICE READY IN OPEN MDC174   */
*        4 UCBDRNO BIT(1),          /* DEVICE READY - NOT IN OPEN  1151
*                                      MDC175                        */
*        4 UCBBTAM BIT(1),          /* USE BTAM - IGG019UP MDC176    */
*        4 UCBUPM BIT(1),           /* USE PROVIDED MODULE MDC177    */
*        4 UCBRPND BIT(1),          /* READY PROCESSING NOT DONE   1151
*                                      MDC178                        */
*        4 UCBDWNR BIT(1),          /* DEVICE WENT NOT READY MDC179  */
*        4 UCBRV039 BIT(1),         /* RESERVED - BTAM MDC180        */
*       3 UCBIRBA PTR(24),          /* ADDRESS OF THE IRB USED FOR 1151
*                                      SCHEDULING THE SECOND LEVEL 1151
*                                      ATTENTION ROUTINE MDC181      */
*      2 UCBLDNCA PTR(31),          /* ADDRESS OF 3270 WORK AREA   1151
*                                      ESTABLISHED BY VTAM MDC132    */
*       3 UCBRDYQ PTR(31),          /* ASYNCHRONOUS READY          1151
*                                      NOTIFICATION IRB ADDRESS    1151
*                                      (BTAM) MDC182                 */
*        4 UCBIRLN PTR(8),          /* INITIALIZED RLN. THE RELATIVE
*                                      LINE NUMBER (RLN) OF THE IOB
*                                      INITIALIZED FOR A READ      1151
*                                      INITIAL. IF 0, NO READ INITIAL
*                                      IS OUTSTANDING. PRESENT ONLY
*                                      IF THE DEVICE INDEX FIELD IS
*                                      1. OTHERWISE, THIS FIELD IS 1151
*                                      RESERVED. ICB480              */
*         5 UCBINRLN PTR(8),        /* SAME AS UCBIRLN MDC183        */
*        4 UCBLDNCB PTR(24),        /* ADDRESS OF 3270 WORK AREA   1151
*                                      ESTABLISHED BY VTAM MDC133    */
*         5 UCBRDYQA PTR(24),       /* ASYNCHRONOUS READY          1151
*                                      NOTIFICATION IRB ADDRESS    1151
*                                      (BTAM) MDC184                 */
*      2 UCBCTLNK PTR(31),          /* SAME AS UCBCTLNA BELOW ICB480 */
*       3 UCBRLN PTR(8),            /* DEVICE INDEX. INDEX TO THE DEB
*                                      UCB ADDRESS FIELD FOR THIS  1151
*                                      DEVICE. THIS VALUE IS ALSO THE
*                                      RELATIVE LINE NUMBER. ICB480  */
*       3 UCBCTLNA PTR(24);         /* CONTROL BLOCK LINK. IF THE  1151
*                                      DEVICE INDEX FIELD IS 1, THIS
*                                      FIELD CONTAINS THE ADDRESS OF
*                                      THE DEB FOR THE LINE GROUP. IF
*                                      THE DEVICE INDEX FIELD IS   1151
*                                      BETWEEN 2 AND 255 INCLUSIVE,
*                                      THIS FIELD CONTAINS THE     1151
*                                      ADDRESS OF THE UCB WITH A   1151
*                                      DEVICE INDEX OF 1. ICB480     */
*/* **************************************************************** */
*/*                                                                  */
*/*           3704, 3705 TELEPROCESSING DEVICE                       */
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*                                                                  1152
*   DECLARE                                                        1152
*     1 UCBOBS07 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT   */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1152
*      2 UCBRV040 PTR(31),          /* RESERVED FOR USE AS         1152
*                                      TELEPROCESSING EXTENSION    1152
*                                      POINTER MDC185                */
*      2 UCBICNCB PTR(31);          /* POINTER TO VTAM'S ICNCB MDC186*/
*/* **************************************************************** */
*/*                                                                  */
*/*           CHANNEL-TO-CHANNEL (CTC) DEVICE                        */
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*                                                                  1153
*   DECLARE                                                        1153
*     1 UCBOBS08 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT   */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1153
*      2 UCBCTCAD PTR(31),          /* ADDRESS OF AN SRB/IOSB TO BE
*                                      USED FOR SENSE COMMAND BYTE BY
*                                      IECTCATN MDC240               */
*      2 UCBCTCF1 BIT(8),           /* CHANNEL-TO-CHANNEL (CTC)    1153
*                                      DEVICE FLAG BYTE MDC241       */
*      2 UCBRV042 CHAR(3);          /* RESERVED MDC242               */
*/* **************************************************************** */
*/*                                                                  */
*/*           3851 DEVICE                                            */
*/*           UCB SEGMENT                                            */
*/*                                                                  */
*                                                                  1154
*   DECLARE                                                        1154
*     1 UCBOBS09 DEF(UCBDEV) BDY(WORD),/* DEVICE-DEPENDENT SEGMENT   */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1154
*      2 UCBIOSBA PTR(31),          /* ADDRESS OF IOSB. SET BY IOS 1154
*                                      FOR ERROR CONDITIONS. (MDC330)
*                                                            @Z30LP9A*/
*      2 UCBRV066 PTR(31);          /* RESERVED (MDC331)     @Z30LP9A*/
*/* **************************************************************** */
*/*                                                                  */
*/*     UNIT CONTROL BLOCK EXTENSIONS                                */
*/*                                                                  */
*/* **************************************************************** */
*/* **************************************************************** */
*/*                                                                  */
*/*           COMMON UCB EXTENSION                                   */
*/*                                                                  */
*/*      THIS EXTENSION IS POINTED TO BY THE UCBEXTPT FIELD IN THE   */
*/*      COMMON SEGMENT AND IS NOT CONTIGUOUS TO THE UCB.            */
*/*                                                                  */
*                                                                  1155
*   DECLARE                                                        1155
*     1 UCBCMEXT BASED(UCBEXTPT) BDY(WORD),/* MDC225                 */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1155
*      2 UCBETI PTR(8) BDY(WORD),   /* A BINARY NUMBER USED BY THE 1155
*                                      EXIT EFFECTOR ROUTINE TO    1155
*                                      COMPLETE THE 8-BYTE NAME OF AN
*                                      IBM-SUPPLIED ERROR ROUTINE FOR
*                                      THIS DEVICE MDC209            */
*      2 UCBSTI PTR(8),             /* INCREMENT WHICH, WHEN       1155
*                                      MULTIPLIED BY 10, BECOMES AN
*                                      INDEX TO THE STATISTICS TABLE
*                                      (STATAB) MDC210               */
*      2 UCBDTI PTR(8),             /* INDEX TO THE DEVICE TABLE   1155
*                                      MDC211                        */
*      2 UCBATI PTR(8),             /* INDEX TO THE ATTENTION TABLE
*                                      (ANTAB) MDC212                */
*       3 * BIT(8),                 /* OPTIONAL JOB ENTRY SUBSYSTEM
*                                      (JES) FLAG BYTE ICB455        */
*        4 UCBRSV04 BIT(1),         /* RESERVED                      */
*        4 UCBRSV05 BIT(1),         /* RESERVED                      */
*        4 UCBRSV06 BIT(1),         /* RESERVED                      */
*        4 UCBRSV07 BIT(1),         /* RESERVED                      */
*        4 UCBRSV08 BIT(1),         /* RESERVED                      */
*        4 UCBRSV09 BIT(1),         /* RESERVED                      */
*        4 UCBHALI BIT(1),          /* OPTIONAL JOB ENTRY SUBSYSTEM
*                                      (JES) ALLOCATION INDICATOR  1155
*                                      MDC213                        */
*        4 UCBHPDV BIT(1),          /* OPTIONAL JOB ENTRY SUBSYSTEM
*                                      (JES) PSEUDO-DEVICE MDC214    */
*      2 UCBSNSCT PTR(8),           /* COUNT OF SENSE BYTES PRESENTED
*                                      BY THIS DEVICE MDC215         */
*      2 UCBFLP1 BIT(8),            /* FLAG BYTE MDC216              */
*       3 UCBNSRCH BIT(1),          /* THE CURRENTLY ALLOCATED VOLUME
*                                      WAS SPECIFICALLY REQUESTED BY
*                                      VOLUME SERIAL NUMBER. IT IS 1155
*                                      NOT AVAILABLE FOR ASSIGNMENT
*                                      BY OPEN/EOV FOR A NON-SPECIFIC
*                                      VOLUME REQUEST. MDC217        */
*       3 UCBSHRUP BIT(1),          /* SHAREABLE WHEN IN UNIPROCESSOR
*                                      MODE (MDC333)         @ZA00805*/
*       3 UCBRV031 BIT(1),          /* RESERVED MDC163               */
*       3 UCBRV032 BIT(1),          /* RESERVED MDC163               */
*       3 UCBRV033 BIT(1),          /* RESERVED MDC163               */
*       3 UCBRV034 BIT(1),          /* RESERVED MDC163               */
*       3 UCBRV035 BIT(1),          /* RESERVED MDC163               */
*       3 UCBRV036 BIT(1),          /* RESERVED MDC163               */
*      2 UCBRV041 CHAR(2),          /* RESERVED MDC226               */
*      2 UCBCCWOF FIXED(15),        /* OFFSET TO CCW PREFIX MDC218   */
*      2 UCBPMSK BIT(16),           /* PATH MASK FOR MESSAGES ISSUED
*                                      MDC219                        */
*      2 UCBMFCNT FIXED(15),        /* MEASUREMENT FACILITIES TOTAL
*                                      DEVICE SIO COUNT. DURING NIP
*                                      UCB INITIALIZATION, USED FOR
*                                      PREVIOUSLY TESTED INDICATOR.
*                                      MDC220                        */
*      2 UCBASID FIXED(15),         /* ASID OF THE MEMORY TO WHICH 1155
*                                      THIS DEVICE IS ALLOCATED    1155
*                                      MDC221                        */
*      2 UCBRV043 CHAR(1),          /* RESERVED (MDC249)       YM6828*/
*      2 UCBWTOID CHAR(3);          /* WTO MESSAGE IDENTIFIER      1155
*                                      (MDC250)                YM6828*/
*/* **************************************************************** */
*/*                                                                  */
*/*           MAGNETIC TAPE                                          */
*/*           UCB EXTENSION                                          */
*/*                                                                  */
*/*      THIS EXTENSION IS POINTED TO BY THE UCBXTN FIELD OF THE     */
*/*      UCB AND IS NOT CONTIGUOUS TO THE UCB.                       */
*/*                                                                  */
*                                                                  1156
*   DECLARE                                                        1156
*     1 UCBMT BASED(UCBXTN) BDY(WORD),                             1156
*                                                                  1156
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1156
*      2 UCBCTD FIXED(15),          /* SERIAL NUMBER IN BINARY OF  1156
*                                      TAPE DRIVE UPON WHICH THE   1156
*                                      VOLUME WAS CREATED MDC097     */
*      2 UCBTRT PTR(8),             /* TEMPORARY READ ERROR THRESHOLD
*                                      (IF 0, EVA IS NOT IN EFFECT).
*                                      A BINARY NUMBER FROM 1 THROUGH
*                                      255 AS SELECTED AT SYSGEN TIME
*                                      ON THE SCHEDULR MACRO BY    1156
*                                      EVA=(N1,N2) WHERE N1 =      1156
*                                      TEMPORARY READ ERROR        1156
*                                      THRESHOLD. MDC097             */
*      2 UCBTWT PTR(8),             /* TEMPORARY WRITE ERROR       1156
*                                      THRESHOLD (IF 0, EVA IS NOT IN
*                                      EFFECT). A BINARY NUMBER FROM
*                                      1 THROUGH 255 AS SELECTED AT
*                                      SYSGEN TIME ON THE SCHEDULR 1156
*                                      MACRO BY EVA=(N1,N2) WHERE N2
*                                      = TEMPORARY WRITE ERROR     1156
*                                      THRESHOLD. MDC097             */
*      2 UCBTR PTR(8) BDY(WORD),    /* THE NUMBER (BINARY) OF      1156
*                                      TEMPORARY READ ERRORS THAT  1156
*                                      HAVE OCCURRED MDC097          */
*      2 UCBTW PTR(8),              /* THE NUMBER (BINARY) OF      1156
*                                      TEMPORARY WRITE ERRORS THAT 1156
*                                      HAVE OCCURRED MDC097          */
*      2 UCBSIO FIXED(15),          /* THE NUMBER (BINARY) OF START
*                                      I/O OPERATIONS THAT HAVE    1156
*                                      OCCURRED MDC097               */
*      2 UCBPR PTR(8) BDY(WORD),    /* THE NUMBER (BINARY) OF      1156
*                                      PERMANENT READ ERRORS THAT  1156
*                                      HAVE OCCURRED MDC097          */
*      2 UCBPW PTR(8),              /* THE NUMBER (BINARY) OF      1156
*                                      PERMANENT WRITE ERRORS THAT 1156
*                                      HAVE OCCURRED MDC097          */
*      2 UCBNB PTR(8),              /* THE NUMBER (BINARY) OF NOISE
*                                      BLOCKS THAT HAVE BEEN       1156
*                                      ENCOUNTERED MDC097            */
*      2 UCBMS CHAR(1),             /* MODE SET OPERATION CODE FOR 1156
*                                      DATA BLOCKS ON A 3420 MAGNETIC
*                                      TAPE UNIT MDC097              */
*      2 UCBERG FIXED(15) BDY(WORD),/* THE NUMBER (BINARY) OF ERASE
*                                      GAPS THAT HAVE BEEN         1156
*                                      ENCOUNTERED MDC097            */
*      2 UCBCLN FIXED(15);          /* THE NUMBER (BINARY) OF CLEANER
*                                      ACTIONS THAT HAVE OCCURRED  1156
*                                      MDC097                        */
*/* **************************************************************** */
*/*                                                                  */
*/*          OPTICAL CHARACTER READER (3886)                         */
*/*          UCB EXTENSION                                           */
*/*                                                                  */
*/*      THIS EXTENSION IS POINTED TO BY THE UCBXTADR FIELD OF THE   */
*/*      UCB AND IS NOT CONTIGUOUS TO THE UCB.                       */
*/*                                                                  */
*                                                                  1157
*   DECLARE                                                        1157
*     1 UCBOCR BASED(UCBXTADR) BDY(WORD),/* MDC024                   */
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1157
*      2 UCBFRID CHAR(4) BDY(WORD), /* CURRENT FORMAT RECORD ID    1157
*                                      (FRID) LOADED MDC025          */
*      2 UCBRDATA CHAR(4) BDY(WORD);/* COMMAND DATA MDC026           */
*/* **************************************************************** */
*/*                                                                  */
*/*          3450 DEVICE                                     @Z30OP9A*/
*/*          UCB EXTENSION                                   @Z30OP9A*/
*/*                                                                  */
*/*      THIS EXTENSION IS POINTED TO BY THE UCBXTADR FIELD OF THE   */
*/*      UCB AND IS NOT CONTIGUOUS TO THE UCB.               @Z30OP9A*/
*/*                                                                  */
*                                                                  1158
*   DECLARE                                                        1158
*     1 UCB3540X BASED(UCBXTADR) BDY(WORD),/* (MDC325)       @Z30OP9A*/
*/* **************************************************************** */
*/*                                                                  */
*                                                                  1158
*      2 UCBVLSER CHAR(6),          /* 3540 VOLID (MDC326)   @Z30OP9A*/
*      2 UCBDKBYT BIT(8),           /* FLAG BYTE (MDC334)    @Z30OP9A*/
*       3 UCBDKAMX BIT(1),          /* IBM-SUPPLIED DISKETTE READER,
*                                      DISKETTE WRITER OR          1158
*                                      COPY/RESTORE UTILITIES ARE  1158
*                                      USING THIS 3540 DEVICE      1158
*                                      (MDC335)              @Z30OP9A*/
*       3 UCBVLVER BIT(1),          /* VOLUME VERIFICATION IS      1158
*                                      REQUIRED FOR CERTAIN        1158
*                                      INTERVENTION REQUIRED       1158
*                                      CONDITIONS WHILE 3540 DISKETTE
*                                      UTILITIES ARE USING THE DEVICE
*                                      (MDC336)              @Z30OP9A*/
*       3 UCBRV067 BIT(1),          /* RESERVED              @Z30OP9A*/
*       3 UCBRV068 BIT(1),          /* RESERVED              @Z30OP9A*/
*       3 UCBRV069 BIT(1),          /* RESERVED              @Z30OP9A*/
*       3 UCBRV070 BIT(1),          /* RESERVED              @Z30OP9A*/
*       3 UCBRV071 BIT(1),          /* RESERVED              @Z30OP9A*/
*       3 UCBRV072 BIT(1),          /* RESERVED              @Z30OP9A*/
*      2 UCBRV073 CHAR(1);          /* RESERVED              @Z30OP9A*/
*/* **************************************************************** */
*/*                                                                  */
*/*            UNIT RECORD WITH                                      */
*/*            UNIVERSAL CHARACTER SET (1403, 3211)                  */
*/*            UCB EXTENSION                                         */
*/*                                                                  */
*/*      THIS EXTENSION IS POINTED TO BY THE UCBXTADR FIELD OF THE   */
*/*      UCB AND IS NOT CONTIGUOUS TO THE UCB.                       */
*/*                                                                  */
*                                                                  1159
*   DECLARE                                                        1159
*     1 UCBUCS BASED(UCBXTADR) BDY(WORD),/* DEVICE DEPENDENT SEGMENT */
*/* **************************************************************** */
*                                                                  1159
*      2 UCBUCSID CHAR(4) BDY(WORD),/* UCS IMAGE IDENTIFICATION IN 1159
*                                      BUFFER                        */
*      2 UCBUCSOP BIT(8),           /* FORMAT OF UCS IMAGE IN BUFFER
*                                      (O FOR OPTION)                */
*       3 UCBUCSO1 BIT(1),          /* UCS IMAGE IS A DEFAULT IMAGE  */
*       3 UCBUCSO2 BIT(1),          /* UCS IMAGE IS IN FOLD MODE     */
*       3 UCBRSV39 BIT(1),          /* RESERVED                      */
*       3 UCBRSV40 BIT(1),          /* RESERVED                      */
*       3 UCBRSV41 BIT(1),          /* RESERVED                      */
*       3 UCBRSV42 BIT(1),          /* RESERVED                      */
*       3 UCBRSV43 BIT(1),          /* RESERVED                      */
*       3 UCBUCSPE BIT(1),          /* UCS IMAGE HAS PARITY ERROR  1159
*                                      (3211)                        */
*      2 UCBFCBOP BIT(8),           /* RESERVED (1403) OR FCB OPTIONS
*                                      (3211) (O FOR OPTION)         */
*       3 UCBFCBO1 BIT(1),          /* FCB IMAGE IS A DEFAULT IMAGE  */
*       3 UCBRSV44 BIT(1),          /* RESERVED                      */
*       3 UCBRSV45 BIT(1),          /* RESERVED                      */
*       3 UCBRSV46 BIT(1),          /* RESERVED                      */
*       3 UCBRSV47 BIT(1),          /* RESERVED                      */
*       3 UCBRSV48 BIT(1),          /* RESERVED                      */
*       3 UCBRSV49 BIT(1),          /* RESERVED                      */
*       3 UCBRSV50 BIT(1),          /* RESERVED                      */
*      2 UCBRSV51 PTR(8),           /* RESERVED                      */
*      2 UCBERCNT PTR(8),           /* CONTAINS A COUNT OF THE ERRORS
*                                      THAT HAVE OCCURRED. THE COUNT,
*                                      WHICH MAY WRAP AROUND, IS   1159
*                                      WRITTEN IN STANDARD OBR     1159
*                                      RECORDS (ONE PER ERROR) AND IN
*                                      NEW DEVICE-DEPENDENT OBR    1159
*                                      RECORDS (0 TO 3 PER ERROR) AND
*                                      SERVE TO RELATE TO EACH OTHER
*                                      THE STANDARD AND            1159
*                                      DEVICE-DEPENDENT OBR RECORDS
*                                      THAT PERTAIN TO EACH ERROR  1159
*                                      (3211)                        */
*      2 UCBFCBID CHAR(4) BDY(WORD),/* THE FCB IMAGE IDENTIFICATION  */
*      2 UCBERADR PTR(31);          /* THE ADDRESS OF THE ERP LOGOUT
*                                      AREA                          */
*   DECLARE                                                        1160
*     UCBBGN BASED(UCBPTR-512) CHAR(536) BDY(WORD);                1160
*                                                                  1161
*   /*****************************************************************/
*   /*                                                               */
*   /* MACROS REQUIRED FOR IOSGEN MACRO                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1161
*                                   /*                       @ZM31085*/
*   GEN DATA;                                                      1161
*                                                                  1161
*   /*****************************************************************/
*   /*                                                               */
*   /* WORK AREA FOR UCB NAME                                @ZM31085*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1162
*   DCL                                                            1162
*     1 SAVPACK CHAR(4) BDY(WORD,2),/* SAVE AREA FOR UCB NAME      1162
*                                                            @ZM31085*/
*      2 SAVUNAME CHAR(3),          /* SAVE AREA FOR UCB NAME      1162
*                                                            @ZM31085*/
*       3 SAVCHF FIXED(8),          /* CHANNEL ADDRESS       @ZM31085*/
*       3 SAVADD FIXED(15),         /* PACKED ADDRESS        @ZM31085*/
*        4 SAVADD1 FIXED(8),        /* CU ADDRESS            @ZM31085*/
*        4 SAVADD2 FIXED(8),        /* DEV ADDRESS           @ZM31085*/
*      2 SAVSPARE FIXED(8);         /* EXTRA CHAR FOR PACK   @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     F0 FIXED(8) CONSTANT(240);    /* CHAR ZERO             @ZM31085*/
*   DCL                             /*                       @ZM31085*/
*     CONVCHAR FIXED(8) CONSTANT(57);/* CHAR USED TO         @ZM31085
*                                      CONVERT CHANNEL ADDRESS     1164
*                                                            @ZM31085*/
*   RFY                                                            1165
*    (R7) RSTD;                     /* RESTRICT R7           @ZA27588*/
*   R7=ASCBPTR;                     /* SET ASCBPTR TO REG    @ZA27588*/
*                                                                  1166
         L     R7,ASCBPTR                                          1166
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE THE REGISTERS, GET THE VUA ADDRESS, SAVE         @ZM31085*/
*   /* THE REQUIRED INFO AND RESTORE THE                     @ZM31085*/
*   /* REGISTERS AS SOON AS POSSIBLE                         @ZM31085*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1167
*   STM(R13,R15,SAV2UCBL);          /* SAVE REGISTERS        @ZM31085*/
         STM   R13,R15,SAV2UCBL                                    1167
*   STM(R6,R7,SAV3UCBL);            /* SAVE REGISTERS        @ZA27588*/
         STM   R6,R7,SAV3UCBL                                      1168
*   RFY                                                            1169
*     R13 RSTD;                     /* RESTRICT REG 13       @ZDR2048*/
*   R13=ADDR(SAV1UCBL);             /* SAVE AREA             @ZDR2048*/
         LA    R13,SAV1UCBL                                        1170
*   RFY                                                            1171
*     R13 UNRSTD;                   /* FREE REG 13           @ZDR2048*/
*   IF REQCODE=DEMOUNT THEN         /* IS REQUEST DMT ?      @ZDR2048*/
         CLI   REQCODE(R6),6                                       1172
         BNE   @RF01172                                            1172
*     R6=DMNTVUA;                   /* PUT DMT VUA IN SRCH REG     1173
*                                                            @ZDR2048*/
         LH    R6,DMNTVUA(,R6)                                     1173
*   ELSE                            /* REQUEST MUST BE MOUNT @ZDR2048*/
*     R6=MDVUA;                     /* PUT MNT VUA IN SRCH REG     1174
*                                                            @ZDR2048*/
         B     @RC01172                                            1174
@RF01172 LH    R6,MDVUA(,R6)                                       1174
*   GEN REFS(CVTILK1,CVTILK2,CVTIXAVL,CVTMAP,/*              @ZM31085*/
*       CVTPTR);                                                   1175
@RC01172 DS    0H                                                  1175
*                                                          /*@ZM31085*/
           IOSGEN UCBLOOK                                      @ZM31085
*   GEN REFS(UCBPTR,SAVR15,R7,R10,R15);                            1176
*                                                         /* @ZA27588*/
           ST    R7,UCBPTR               SAVE THE UCB ADDRESS  @ZA27588
           ST    R15,SAVR15              SAVE THE RETURN CODE  @ZM31085
*   LM(R13,R15,SAV2UCBL);           /* RESTORE THE REGISTERS @ZM31085*/
         LM    R13,R15,SAV2UCBL                                    1177
*   LM(R6,R7,SAV3UCBL);             /* RESTORE THE REGISTERS @ZA27588*/
         LM    R6,R7,SAV3UCBL                                      1178
*   RFY                                                            1179
*    (R7) UNRSTD;                   /* FREE R7               @ZA27588*/
*   IF SAVR15=ZERO THEN             /* WAS THE UCB FOUND     @ZM31085*/
         L     @09,SAVR15                                          1180
         LTR   @09,@09                                             1180
         BNZ   @RF01180                                            1180
*     DO;                           /*                       @ZM31085*/
*       SAVUNAME=UCBNAME;           /* GET THE UCB NAME      @ZM31085*/
         L     @09,UCBPTR                                          1182
         MVC   SAVUNAME(3),UCBNAME(@09)                            1182
*       IF SAVCHF<F0 THEN           /* HIGH CHANNEL ADDRESS  @ZM31085*/
         CLI   SAVCHF,240                                          1183
         BNL   @RF01183                                            1183
*         SAVCHF=SAVCHF+CONVCHAR;   /* CONVERT THE           @ZM31085
*                                      ADDRESS               @ZM31085*/
         IC    @09,SAVCHF                                          1184
         LA    @09,57(,@09)                                        1184
         STC   @09,SAVCHF                                          1184
*       IF SAVADD1<F0 THEN          /* CONVERT CU            @ZM31085*/
@RF01183 CLI   SAVADD1,240                                         1185
         BNL   @RF01185                                            1185
*         SAVADD1=SAVADD1+CONVCHAR; /* CONV CU               @ZM31085*/
         IC    @09,SAVADD1                                         1186
         LA    @09,57(,@09)                                        1186
         STC   @09,SAVADD1                                         1186
*       IF SAVADD2<F0 THEN          /* CONV THE DEV          @ZM31085*/
@RF01185 CLI   SAVADD2,240                                         1187
         BNL   @RF01187                                            1187
*         SAVADD2=SAVADD2+CONVCHAR; /* CON DEV               @ZM31085*/
         IC    @09,SAVADD2                                         1188
         LA    @09,57(,@09)                                        1188
         STC   @09,SAVADD2                                         1188
*       SAVSPARE=F0;                /* INITIALIZE THE CHARACTER    1189
*                                                            @ZM31085*/
@RF01187 MVI   SAVSPARE,X'F0'                                      1189
*       PACK(SAVPACK,SAVPACK);      /* PACK HTE ADDRESS      @ZM31085*/
         PACK  SAVPACK(4),SAVPACK(4)                               1190
*       IF REQCODE=DEMOUNT THEN     /* REQUEST DMT ?         @ZDR2048*/
         CLI   REQCODE(R6),6                                       1191
         BNE   @RF01191                                            1191
*         DMNTVUA=SAVADD;           /* PRIM ADDR IN DMT REQ  @ZDR2048*/
         LH    @09,SAVADD                                          1192
         STH   @09,DMNTVUA(,R6)                                    1192
*       ELSE                        /* REQUEST MUST BE MOUNT @ZDR2048*/
*         MDVUA=SAVADD;             /* PUT ADDRESS IN MNT REQ      1193
*                                                            @ZDR2048*/
         B     @RC01191                                            1193
@RF01191 LH    @09,SAVADD                                          1193
         STH   @09,MDVUA(,R6)                                      1193
*     END;                          /*                       @ZM31085*/
*   END VUACK;                      /*                       @ZM31085*/
@EL00016 DS    0H                                                  1195
@EF00016 DS    0H                                                  1195
@ER00016 BR    @14                                                 1195
*                                                                  1196
*/*  START OF SPECIFICATIONS ****                            @Y30LB00
*                                                            @Y30LB00
*01*  MODULE-NAME = SVCESTAE                                 @Y30LB00
*                                                            @Y30LB00
*01*  DESCRIPTIVE-NAME = INVALIDATES AND FREES RESOURCES     @Y30LB00
*                        OBTAINED AND USED BY THE            @Y30LB00
*                        MAINLINE SVC.                       @Y30LB00
*                                                            @Y30LB00
*01*  FUNCTION = THIS SUBROUTINE GETS CONTROL                @Y30LB00
*                WHEN THE SVC ABNORMALLY TERMINATES.         @Y30LB00
*                QUEUED DELAYED RESPONSE ELEMENTS            @Y30LB00
*                MAY BE INVALIDATED/FREED AND                @Y30LB00
*                WORKAREA(S) OBTAINED BY THE SVC IS          @Y30LB00
*                FREED. ANY LOCKS HELD ARE FREED.            @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    PURPOSE = THIS SUBROUTINE MAY INVALIDATE OR          @Y30LB00
*                 FREE THE DELAYED RESPONSE QUEUE            @Y30LB00
*                 ELEMENT FOR A DELAYED RESPONSE             @Y30LB00
*                 REQUEST.  THE DYNAMIC AREAS OBTAINED       @Y30LB00
*                 BY THE SVC ARE FREED IF NECESSARY.         @Y30LB00
*                 IF THE LOCAL AND/OR CMS LOCKS ARE          @Y30LB00
*                 HELD, THEY ARE FREED.                      @Y30LB00
*                                                            @Y30LB00
*                 CALLS THE FOLLOWING MSSC SVC SUBROUTINE:   @Y30LB00
*                                                            @Y30LB00
*                     RECRDVRY                               @Y30LB00
*                                                            @Y30LB00
*02*    INPUT = R0 - I/O INDICATOR                           @Y30LB00
*                      0 - ACTIVE I/O QUIESCED               @Y30LB00
*                      4 - ACTIVE I/O HALTED                 @Y30LB00
*                      8 - NO ACTIVE I/O                     @Y30LB00
*                                                            @Y30LB00
*               R1 - WORKAREA ADDRESS                        @Y30LB00
*               R13 - SAVE ADDRESS                           @Y30LB00
*               R14 - RETURN ADDRESS                         @Y30LB00
*               R15 - ADDRESS OF EXIT ROUTINE                @Y30LB00
*                                                            @Y30LB00
*               OR                                           @Y30LB00
*                                                            @Y30LB00
*               R0 - 12 (WORKAREA NOT OBTAINED)              @Y30LB00
*               R1 = ABEND COMPLETION CODE                   @Y30LB00
*               R2 - PARAMETER LIST ADDRESS                  @Y30LB00
*               R13 - UNPREDICTABLE                          @Y30LB00
*                                                            @Y30LB00
*02*    OUTPUT = R0 AND R1 DESTROYED                         @Y30LB00
*                R15 - 0 (CONTINUE WITH TERMINATION)         @Y30LB00
*                ALL OTHER REGISTERS RESTORED                @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
*02*    DATA-AREA = INPUT REQUEST                            @Y30LB00
*                   ESTAE PARAMETER LIST                     @Y30LB00
*                   DELAYED RESPONSE ELEMENT                 @Y30LB00
*                   I/O CONTROL BLOCK AREA                   @Y30LB00
*                   SDWA                                     @Y30LB00
*                                                            @Y30LB00
*                                                            @Y30LB00
**** END OF SPECIFICATIONS **                                @Y30LB00*/
*                                                                  1196
*                                                                  1196
*   /*****************************************************************/
*   /*                                                               */
*   /* ****************************************************  @Y30LB00*/
*   /*                                                       @Y30LB00*/
*   /* THE ESTAE ROUTINE FOR THE MSSC SVC RECOVERY           @Y30LB00*/
*   /*                                                       @Y30LB00*/
*   /* ****************************************************  @Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1196
*SVCESTAE:                                                         1196
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30LB00*/
SVCESTAE DS    0H                                                  1197
*   GEN REFS(R8,R11,R12,R15,R2,R10);                               1197
*                                                          /*@ZA27588*/
         DROP  R8                   DROP BASE REG 8            @ZA27588
         DROP  R11                   DROP BASE REG 11          #Y30LB00
         DROP  R12                   DROP BASE REG 12          #Y30LB00
         DROP  R10                   DROP DATA REG 10          #Y30LB00
         USING @DATD,R2              SET ADDRESSIBILITY FOR    #Y30LB00
*                                    DATA AREA                 #Y30LB00
         USING *,R15                 SET ADDRESSIBILITY        #Y30LB00
*   RFY                                                            1198
*    (R2) RESTRICTED;               /*                       #Y30LB00*/
*   IF R0^=TWELVE THEN              /* IS SDWA AVAILABLE     #Y30LB00*/
         C     R0,@CF00035                                         1199
         BE    @RF01199                                            1199
*     DO;                           /* SAVE REGS             #Y30LB00*/
*       GEN REFS(R14,R12,R13);                                     1201
*                                                          /*#Y30LB00*/
         STM   R14,R12,TWELVE(R13)  SAVE ESTAE INPUT REGS      #Y30LB00
*       R10=SDWAPARM;               /* GET ADDR OF PARMLIST  #Y30LB00
*                                      PASSED                #Y30LB00*/
         L     R10,SDWAPARM(,SDWAPTR)                              1202
*       SDWAMODN=SVC126;            /* FILL IN MODULE NAME   #Y30LB00
*                                      OF RECORDING AREA     #Y30LB00*/
         MVC   SDWAMODN(8,SDWAPTR),SVC126                          1203
*       SDWACSCT=SVC126;            /* FILL IN CSECT NAME OF #Y30LB00
*                                      RECORDING AREA        #Y30LB00*/
         MVC   SDWACSCT(8,SDWAPTR),SVC126                          1204
*       SDWAREXN=RECV126;           /* FILL IN RECOVERY      #Y30LB00
*                                      ROUTINE CSECT NAME IN #Y30LB00
*                                      RECORDING AREA        #Y30LB00*/
         MVC   SDWAREXN(8,SDWAPTR),RECV126                         1205
*     END;                          /*                       #Y30LB00*/
*   ELSE                            /* SWDA NOT AVAILABLE    #Y30LB00*/
*     DO;                           /* SAVE REGS             #Y30LB00*/
         B     @RC01199                                            1207
@RF01199 DS    0H                                                  1208
*       GEN REFS(R14,R12,ESTAEREG);                                1208
*                                                          /*#Y30LB00*/
         STM   R14,R12,ESTAEREG      SAVE ESTAE INPUT REGS     #Y30LB00
*       R10=R2;                     /* GET ADDR OF PARMLIST  #Y30LB00
*                                      PASSED                #Y30LB00*/
         LR    R10,R2                                              1209
*     END;                          /*                       #Y30LB00*/
*   RFY                                                            1211
*    (R2) UNRESTRICTED;             /*                       #Y30LB00*/
@RC01199 DS    0H                                                  1212
*   GEN REFS(R2,R10);                                              1212
*                                                          /*#Y30LB00*/
         DROP  R2                    DROP DATA AREA REG        #Y30LB00
         USING @DATD,R10             SET ADDRESSIBILITY FOR    #Y30LB00
*                                    DATA AREA                 #Y30LB00
*   R8=SAVBAS08;                    /* RESTORE MAIN BASE REG @ZA27588*/
         L     R8,SAVBAS08                                         1213
*   R11=SAVBAS11;                   /* RESTORE MAIN BASE REG #Y30LB00*/
         L     R11,SAVBAS11                                        1214
*   R12=SAVBAS12;                   /* RESTORE MAIN BASE REG #Y30LB00*/
         L     R12,SAVBAS12                                        1215
*   GEN REFS(R15,R11,R12);                                         1216
*                                                          /*#Y30LB00*/
         DROP  R15                   DROP PREVIOUS BASE REG    #Y30LB00
         USING @PSTART,R8            SET ADDRESSIBILITY        @ZA27588
         USING @PSTART+FOUR095,R11   SET ADDRESSIBILITY        @ZA27588
         USING @PSTART+8190,R12      SET ADDRESSIBILITY        @ZA27588
*   RFY                                                            1217
*    (R13) RESTRICTED;              /*                       #Y30LB00*/
*   SAVE13=R13;                     /* SAVE REGISTER 13      #Y30LB00*/
         ST    R13,SAVE13                                          1218
*   RFY                                                            1219
*    (R13) UNRESTRICTED;            /*                       #Y30LB00*/
*   SAVE0=R0;                       /* SAVE REGISTER ZERO    #Y30LB00*/
         ST    R0,SAVE0                                            1220
*   IF DRSWITCH=B1ONE THEN          /* IS DELAYED RESPONSE REQ     1221
*                                                            #Y30LB00*/
         TM    DRSWITCH,B'10000000'                                1221
         BNO   @RF01221                                            1221
*     DO;                           /* YES CHECK FOR QUEUED  #Y30LB00
*                                      ELEMENT               #Y30LB00*/
*       IF ELEMOBT=B1ONE THEN       /* HAS DELAYED RESPONSE  #Y30LB00
*                                      ELEMENT BEEN          #Y30LB00
*                                      OBTAINED              #Y30LB00*/
         TM    ELEMOBT,B'01000000'                                 1223
         BNO   @RF01223                                            1223
*         DO;                       /* YES, CHECK IF QUEUED  #Y30LB00*/
*           IF NEWELPTR^=ZERO THEN  /*                       #Y30LB00
*                                      WAS THE STORAGE REALLY      1225
*                                                            #Y30LB00
*                                      OBTAINED              #Y30LB00*/
         L     @09,NEWELPTR                                        1225
         SLR   @07,@07                                             1225
         CR    @09,@07                                             1225
         BE    @RF01225                                            1225
*             DO;                   /* YES CHECK IF QUEUED   #Y30LB00*/
*               IF ELEMQUE^=B1ONE THEN/*                     #Y30LB00
*                                      HAS ELEMENT BEEN QUEUED     1227
*                                                            #Y30LB00*/
         TM    ELEMQUE,B'00100000'                                 1227
         BO    @RF01227                                            1227
*                 DO;               /* NO, IS FREED          #Y30LB00*/
*                   IF ELEMFREE^=B1ONE THEN/*                @Y30LB00
*                                      HAS ELEMENT BEEN FREED      1229
*                                                            #Y30LB00*/
         TM    ELEMFREE,B'10000000'                                1229
         BO    @RF01229                                            1229
*                     DO;           /* NO, HAS IT PARTIALLY  #Y30LB00
*                                      OR COMPLETELY BEEN    #Y30LB00
*                                      QUEUED                @Y30LB00*/
*                       IF ICBQHEAD^=ZERO THEN/*             @Y30LB00
*                                      IS QUEUE EMPTY        @Y30LB00*/
         L     @04,ICBPTR                                          1231
         L     @04,ICBQHEAD(,@04)                                  1231
         CR    @04,@07                                             1231
         BE    @RF01231                                            1231
*                         DO;       /* NO CHECK FIRST ELEMENT      1232
*                                                            @Y30LB00
*                                      ON THE QUEUE          @Y30LB00*/
*                           IF ICBQHEAD^=NEWELPTR THEN/*     @Y30LB00
*                                      IS FIRST ELEMENT THIS @Y30LB00
*                                      REQUESTS              @Y30LB00*/
         CR    @04,@09                                             1233
         BE    @RF01233                                            1233
*                             DO;   /* NO, CHECK IF PARTIALLY      1234
*                                                            @Y30LB00
*                                      QUEUED                @Y30LB00*/
*                               IF LOCLOCK=B1ZERO THEN/*     @Y30LB00
*                                      IS LOCAL LOCK HELD    @Y30LB00*/
         TM    LOCLOCK,B'00000010'                                 1235
         BNZ   @RF01235                                            1235
*                                 DO;/* OBTAIN LOCAL LOCK    @Y30LB00*/
*                                   GEN;                           1237
*                                                          /*@Y30LB00*/
* OBTAIN THE LOCAL LOCK IN ORDER TO SCAN THE DELAYED           @Y30LB00
* RESPONSE QUEUE                                               @Y30LB00
ISETLK30 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @Y30LB00*
               RELATED=(LOCAL,IGC0012F(ISETLK31))              @Y30LB00
*                                   LOCLOCK=B1ONE;/*         @Y30LB00*/
         OI    LOCLOCK,B'00000010'                                 1238
*                                 END;/*                     #Y30LB00*/
*                               IF CMSLOCK=B1ZERO THEN/*     #Y30LB00
*                                      IS CMS LOCK HELD      #Y30LB00*/
@RF01235 TM    CMSLOCK,B'00000001'                                 1240
         BNZ   @RF01240                                            1240
*                                 DO;/* OBTAIN CMS LOCK      #Y30LB00*/
*                                   GEN;                           1242
*                                                          /*#Y30LB00*/
* OBTAIN THE CMS LOCK IN ORDER TO SCAN THE DELAYED             #Y30LB00
* RESPONSE QUEUE                                               #Y30LB00
ISETLK40 SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=USE,         #Y30LB00*
               RELATED=(CMS,IGC0012F(ISETLK41))                #Y30LB00
*                                   CMSLOCK=B1ONE;/*         #Y30LB00*/
         OI    CMSLOCK,B'00000001'                                 1243
*                                 END;/*                     #Y30LB00*/
*                               QELEMPTR=ICBQHEAD;/*         #Y30LB00*/
@RF01240 L     @09,ICBPTR                                          1245
         L     @07,ICBQHEAD(,@09)                                  1245
         ST    @07,QELEMPTR                                        1245
*                               IF ELMBACK=NEWELPTR THEN/*   #Y30LB00
*                                      DOES FIRST ELEMENT    #Y30LB00
*                                      POINT BACK TO THIS    #Y30LB00
*                                      REQUESTS ELEMENT      #Y30LB00*/
         L     @04,NEWELPTR                                        1246
         L     @07,ELMBACK-1(,@07)                                 1246
         LA    @07,0(,@07)                                         1246
         CR    @04,@07                                             1246
         BNE   @RF01246                                            1246
*                                 DO;/* YES, ELEMENT PARTIALLY     1247
*                                                            #Y30LB00
*                                      QUEUED                #Y30LB00*/
*                                                                  1247
*                                   /*********************************/
*                                   /*                               */
*                                   /* PUT ELEMENT ON HEAD OF        */
*                                   /*                       #Y30LB00*/
*                                   /* QUEUE, INVALIDATE ELEMENT     */
*                                   /*                       #Y30LB00*/
*                                   /* INDICATE ELEM QUEUED AND      */
*                                   /*                       #Y30LB00*/
*                                   /* INVALIDATED           #Y30LB00*/
*                                   /*                               */
*                                   /*********************************/
*                                                                  1248
*                                   ICBQHEAD=NEWELPTR;/*     #Y30LB00*/
         ST    @04,ICBQHEAD(,@09)                                  1248
*                                   QELFLG3=FOXFOX;/*        #Y30LB00*/
         MVI   QELFLG3(@04),X'FF'                                  1249
*                                   ELEMQUE=B1ONE;/*         #Y30LB00*/
*                                   ELEMINV=B1ONE;/*         #Y30LB00*/
         OI    ELEMQUE,B'00100001'                                 1251
*                                 END;/*                     #Y30LB00*/
*                               GEN;                               1253
@RF01246 DS    0H                                                  1253
*                                                          /*#Y30LB00*/
* RELEASE THE CMS LOCK OBTAINED IN ORDER TO SCAN THE           #Y30LB00
* DELAYED RESPONSE QUEUE                                       #Y30LB00
ISETLK41 SETLOCK RELEASE,TYPE=CMS,REGS=USE,                    #Y30LB00*
               RELATED=(CMS,IGC0012F(ISETLK20),                #Y30LB00*
               CMS,IGC0012F(ISETLK40))                         #Y30LB00
*                               CMSLOCK=B1ZERO;/*            #Y30LB00*/
         NI    CMSLOCK,B'11111110'                                 1254
*                               GEN;                               1255
*                                                          /*#Y30LB00*/
* RELEASE THE LOCAL LOCK OBTAINED IN ORDER TO SCAN THE         #Y30LB00
* DELAYED RESPONSE QUEUE                                       #Y30LB00
ISETLK31 SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  #Y30LB00*
               RELATED=(LOCAL,IGC0012F(ISETLK10),              #Y30LB00*
               LOCAL,IGC0012F(ISETLK30))                       #Y30LB00
*                               LOCLOCK=B1ZERO;/*            #Y30LB00*/
         NI    LOCLOCK,B'11111101'                                 1256
*                             END;  /*                       #Y30LB00*/
*                           ELSE    /* ELEMENT QUEUED        #Y30LB00*/
*                             DO;   /* INVALIDATE ELEMENT    #Y30LB00*/
*                                                                  1258
         B     @RC01233                                            1258
@RF01233 DS    0H                                                  1259
*                               /*************************************/
*                               /*                                   */
*                               /* INVALIDATE QUEUE ELEMENT, #Y30LB00*/
*                               /* INDICATE ELEM QUEUED AND  #Y30LB00*/
*                               /* INVALIDATED               #Y30LB00*/
*                               /*                                   */
*                               /*************************************/
*                                                                  1259
*                               QELFLG3=FOXFOX;/*            #Y30LB00*/
         L     @09,NEWELPTR                                        1259
         MVI   QELFLG3(@09),X'FF'                                  1259
*                               ELEMQUE=B1ONE;/*             #Y30LB00*/
*                               ELEMINV=B1ONE;/*             #Y30LB00*/
         OI    ELEMQUE,B'00100001'                                 1261
*                             END;  /*                       #Y30LB00*/
*                         END;      /*                       #Y30LB00*/
@RC01233 DS    0H                                                  1264
*                       IF CMSLOCK=B1ONE THEN/*              #Y30LB00
*                                      IS CMS LOCK HELD      #Y30LB00*/
@RF01231 TM    CMSLOCK,B'00000001'                                 1264
         BNO   @RF01264                                            1264
*                         DO;       /* RELEASE THE CMS LOCK  #Y30LB00*/
*                           GEN;                                   1266
*                                                          /*#Y30LB00*/
* RELEASE THE CMS LOCK OBTAINED IN ORDER TO SCAN THE           #Y30LB00
* DELAYED RESPONSE QUEUE                                       #Y30LB00
ISETLK22 SETLOCK RELEASE,TYPE=CMS,REGS=USE,                    #Y30LB00*
               RELATED=(CMS,IGC0012F(ISETLK20))                #Y30LB00
*                           CMSLOCK=B1ZERO;/*                #Y30LB00*/
         NI    CMSLOCK,B'11111110'                                 1267
*                         END;      /*                       #Y30LB00*/
*                       IF LOCLOCK=B1ONE THEN/*              #Y30LB00
*                                      IS LOCAL LOCK HELD    #Y30LB00*/
@RF01264 TM    LOCLOCK,B'00000010'                                 1269
         BNO   @RF01269                                            1269
*                         DO;       /* RELEASE LOCAL LOCK    #Y30LB00*/
*                           GEN;                                   1271
*                                                          /*#Y30LB00*/
* RELEASE THE LOCAL LOCK OBTAINED IN ORDER TO SCAN THE         #Y30LB00
* DELAYED RESPONSE QUEUE                                       #Y30LB00
ISETLK12 SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  #Y30LB00*
               RELATED=(LOCAL,IGC0012F(ISETLK10))              #Y30LB00
*                           LOCLOCK=B1ZERO;/*                #Y30LB00*/
         NI    LOCLOCK,B'11111101'                                 1272
*                         END;      /*                       #Y30LB00*/
*                       IF ELEMQUE^=B1ONE THEN/*             #Y30LB00
*                                      HAS ELEMENT BEEN QUEUED     1274
*                                                            #Y30LB00*/
@RF01269 TM    ELEMQUE,B'00100000'                                 1274
         BO    @RF01274                                            1274
*                         DO;       /* NO FREE STORAGE       #Y30LB00*/
*                                                                  1275
*                           /*****************************************/
*                           /*                                       */
*                           /* FREE THE DELAYED RESPONSE ELEM        */
*                           /*                               @Y30LB00*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  1276
*                           R0=LENGTH(NEWELMT);/*            #Y30LB00*/
         LA    R0,20                                               1276
*                           R1=ADDR(IFREEMAI);/*             #Y30LB00*/
         LA    R1,IFREEMAI                                         1277
*                           GEN REFS(R1,R0,NEWELPTR);              1278
*                                                          /*#Y30LB00*/
* FREE THE DELAYED RESPONSE QUEUE ELEMENT                      #Y30LB00
IFREEM21 FREEMAIN E,MF=(E,(R1)),LV=(R0),A=NEWELPTR,SP=245,     #Y30LB00*
               RELATED=(SP245,IGC0012F(IGETMA20))              #Y30LB00
*                           ELEMFREE=B1ONE;/*                @Y30LB00
*                                      INDICATE ELEM FREED   @Y30LB00*/
         OI    ELEMFREE,B'10000000'                                1279
*                           NEWELPTR=ZERO;/*                 @Y30LB00
*                                      CLEAR ELEM ADDR       @Y30LB00*/
         SLR   @09,@09                                             1280
         ST    @09,NEWELPTR                                        1280
*                         END;      /*                       #Y30LB00*/
*                     END;          /*                       #Y30LB00*/
*                 END;              /*                       #Y30LB00*/
*               ELSE                /* ELEMENT QUEUED        #Y30LB00*/
*                 CHKIOSW=B1ONE;    /* SET SWITCH INDICATING #Y30LB00
*                                      TO CHECK THE COMPLETION     1284
*                                                            #Y30LB00
*                                      OF IO                 #Y30LB00*/
         B     @RC01227                                            1284
@RF01227 OI    CHKIOSW,B'00001000'                                 1284
*             END;                  /*                       #Y30LB00*/
@RC01227 DS    0H                                                  1286
*         END;                      /*                       #Y30LB00*/
@RF01225 DS    0H                                                  1287
*     END;                          /*                       #Y30LB00*/
*                                                                  1287
@RF01223 DS    0H                                                  1288
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE THE CMS LOCK                                  #Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1288
*   GEN;                                                           1288
@RF01221 DS    0H                                                  1288
*                                                          /*#Y30LB00*/
ISETLK23 SETLOCK RELEASE,TYPE=CMS,REGS=USE,                    #Y30LB00*
               RELATED=(CMS,IGC0012F(ISETLK20))                #Y30LB00
*   CMSLOCK=B1ZERO;                 /*                       #Y30LB00*/
*                                                                  1289
         NI    CMSLOCK,B'11111110'                                 1289
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE LOCAL LOCK                                    #Y30LB00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1290
*   GEN;                                                           1290
*                                                          /*#Y30LB00*/
ISETLK13 SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  #Y30LB00*
               RELATED=(LOCAL,IGC0012F(ISETLK10))              #Y30LB00
*   LOCLOCK=B1ZERO;                 /*                       #Y30LB00*/
         NI    LOCLOCK,B'11111101'                                 1291
*   IF ENQSW=ON THEN                /* WAS VOLID LEFT ENQUED BY    1292
*                                      IGC0112F ?                    */
         TM    ENQSW,B'10000000'                                   1292
         BNO   @RF01292                                            1292
*     DO;                           /* YES, SO MUST DEQ IT   @ZA27588*/
*       RFY                                                        1294
*        (R0,                                                      1294
*         R1,                                                      1294
*         R14,                                                     1294
*         R15) RSTD;                /*                       @ZA27588*/
*       GEN REFS(QNAME,ENQVOLID,ENQDEQ) SETS(ENQDEQ);              1295
*                                                          /*@ZA27588*/
         B     EQDQEND
DEQLIST  DEQ   (,,6,SYSTEM),MF=L
DEQEND   EQU   *
DEQL     EQU   DEQEND-DEQLIST
EQDQEND  DS    0H
         MVC   ENQDEQ(DEQL),DEQLIST
         DEQ   (QNAME,ENQVOLID),MF=(E,ENQDEQ)
*       RFY                                                        1296
*        (R0,                                                      1296
*         R1,                                                      1296
*         R14,                                                     1296
*         R15) UNRSTD;              /*                       @ZA27588*/
*     END;                          /*                       @ZA27588*/
*   IF IOBAD^=B1ONE THEN            /* DID I/O FAIL          #Y30LB00*/
@RF01292 TM    IOBAD,B'00000010'                                   1298
         BO    @RF01298                                            1298
*     DO;                           /* NO                    #Y30LB00*/
*       IF IOOK^=B1ONE THEN         /* DID I/O COMPLETE OK   #Y30LB00*/
         TM    IOOK,B'00000100'                                    1300
         BO    @RF01300                                            1300
*         DO;                       /* NO                    #Y30LB00*/
*           IF SAVE0^=TWELVE THEN   /*                       #Y30LB00
*                                      IS SWDA AVAILABLE     #Y30LB00*/
         L     @09,SAVE0                                           1302
         C     @09,@CF00035                                        1302
         BE    @RF01302                                            1302
*             DO;                   /* YES                   #Y30LB00*/
*               IF SAVE0=ZERO THEN  /*                       #Y30LB00
*                                      WAS I/O QUIESCED      #Y30LB00*/
         LTR   @09,@09                                             1304
         BNZ   @RF01304                                            1304
*                 DO;               /* YES CHECK THE ECB CODE      1305
*                                                            #Y30LB00*/
*                   IF ECBCODE^=C7FH THEN/*                  #Y30LB00
*                                      WAS I/O OK            #Y30LB00*/
         L     @09,SSCDATAP                                        1306
         CLI   ECBCODE(@09),127                                    1306
         BE    @RF01306                                            1306
*                     DO;           /* NO, I/O FAILED        #Y30LB00*/
*                       IOBAD=B1ONE;/*                       #Y30LB00*/
         OI    IOBAD,B'00000010'                                   1308
*                       IF CHKIOSW=B1ONE THEN/*              #Y30LB00
*                                      SHOULD ELEMENT BE     #Y30LB00
*                                      INVALIDATED           #Y30LB00*/
         TM    CHKIOSW,B'00001000'                                 1309
         BNO   @RF01309                                            1309
*                         DO;       /* INVALIDATE ELEMENT    #Y30LB00*/
*                                                                  1310
*                           /*****************************************/
*                           /*                                       */
*                           /* INVALIDATE ELEM AND           @Y30LB00*/
*                           /* INDICATE ELEM INVALIDATED     @Y30LB00*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  1311
*                           QELFLG3=FOXFOX;/*                #Y30LB00*/
         L     @09,NEWELPTR                                        1311
         MVI   QELFLG3(@09),X'FF'                                  1311
*                           ELEMINV=B1ONE;/*                 #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1312
*                         END;      /*                       #Y30LB00*/
*                     END;          /*                       #Y30LB00*/
*                   ELSE            /* I/O OK                #Y30LB00*/
*                     IOOK=B1ONE;   /*                       #Y30LB00
*                                      SET SWITCH INDICATING #Y30LB00
*                                      IO OK                 #Y30LB00*/
         B     @RC01306                                            1315
@RF01306 OI    IOOK,B'00000100'                                    1315
*                 END;              /*                       #Y30LB00*/
*               ELSE                /* I/O NOT QUIESCED      #Y30LB00*/
*                 IF SAVE0=FOUR THEN/*                       #Y30LB00
*                                      WAS I/O HALTED        #Y30LB00*/
         B     @RC01304                                            1317
@RF01304 CLC   SAVE0(4),@CF00076                                   1317
         BNE   @RF01317                                            1317
*                   DO;             /* I/O WAS HALTED        #Y30LB00*/
*                     IOBAD=B1ONE;  /*                       #Y30LB00*/
         OI    IOBAD,B'00000010'                                   1319
*                     IF CHKIOSW=B1ONE THEN/*                #Y30LB00
*                                      SHOULD ELEMENT BE     #Y30LB00
*                                      INVALIDATED           #Y30LB00*/
         TM    CHKIOSW,B'00001000'                                 1320
         BNO   @RF01320                                            1320
*                       DO;         /* INVALIDATE ELEMENT    #Y30LB00*/
*                                                                  1321
*                         /*******************************************/
*                         /*                                         */
*                         /* INVALIDATE ELEM AND INDICATE    @Y30LB00*/
*                         /* ELEM INVALIDATED                @Y30LB00*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  1322
*                         QELFLG3=FOXFOX;/*                  #Y30LB00*/
         L     @09,NEWELPTR                                        1322
         MVI   QELFLG3(@09),X'FF'                                  1322
*                         ELEMINV=B1ONE;/*                   #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1323
*                       END;        /*                       #Y30LB00*/
*                   END;            /*                       #Y30LB00*/
*                 ELSE              /* I/O NOT ACTIVE        #Y30LB00*/
*                   DO;             /* CHECK IF DELAYED RESP #Y30LB00
*                                      QUEUED                #Y30LB00*/
         B     @RC01317                                            1326
@RF01317 DS    0H                                                  1327
*                     IF IODATAPT^=ZERO THEN/*               #Y30LB00
*                                      HAVE I/O BLOCK BEEN   #Y30LB00
*                                      OBTAINED              #Y30LB00*/
         L     @09,IODATAPT                                        1327
         LTR   @09,@09                                             1327
         BZ    @RF01327                                            1327
*                       DO;         /* YES, CHECK COMPLETION #Y30LB00
*                                      OF I/O                #Y30LB00*/
*                         IF ECBCODE=C1ZERO THEN/*           #Y30LB00
*                                      WAS I/O REALLY ISSUED #Y30LB00*/
         L     @09,SSCDATAP                                        1329
         CLI   ECBCODE(@09),0                                      1329
         BNE   @RF01329                                            1329
*                           DO;     /* I/O NOT ACTIVE        #Y30LB00*/
*                             NOIO=B1ONE;/*                  #Y30LB00
*                                      INDICATE NO ACTIVE I/O      1331
*                                                            #Y30LB00*/
         OI    NOIO,B'00000100'                                    1331
*                             IF CHKIOSW=B1ONE THEN/*        #Y30LB00
*                                      IS QUEUE ELEMENT TO BE      1332
*                                                            #Y30LB00
*                                      INVALIDATED           #Y30LB00*/
         TM    CHKIOSW,B'00001000'                                 1332
         BNO   @RF01332                                            1332
*                               DO; /* INVALIDATE ELEMENT    #Y30LB00*/
*                                                                  1333
*                                 /***********************************/
*                                 /*                                 */
*                                 /* INVALIDATE ELEM AND     @Y30LB00*/
*                                 /* INDICATE ELEM INVALIDATED       */
*                                 /*                         @Y30LB00*/
*                                 /*                                 */
*                                 /***********************************/
*                                                                  1334
*                                 QELFLG3=FOXFOX;/*          #Y30LB00*/
         L     @09,NEWELPTR                                        1334
         MVI   QELFLG3(@09),X'FF'                                  1334
*                                 ELEMINV=B1ONE;/*           #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1335
*                               END;/*                       #Y30LB00*/
*                           END;    /*                       #Y30LB00*/
*                         ELSE      /* I/O GOOD OR BAD       #Y30LB00*/
*                           IF ECBCODE^=C7FH THEN/*          #Y30LB00
*                                      WAS I/O BAD           #Y30LB00*/
         B     @RC01329                                            1338
@RF01329 L     @09,SSCDATAP                                        1338
         CLI   ECBCODE(@09),127                                    1338
         BE    @RF01338                                            1338
*                             DO;   /* I/O WAS BAD           #Y30LB00*/
*                               IOBAD=B1ONE;/*               #Y30LB00
*                                      I/O WAS BAD           #Y30LB00*/
         OI    IOBAD,B'00000010'                                   1340
*                               IF CHKIOSW=B1ONE THEN/*      #Y30LB00
*                                      IS QUEUE ELEMENT TO BE      1341
*                                                            #Y30LB00
*                                      INVALIDATED           #Y30LB00*/
         TM    CHKIOSW,B'00001000'                                 1341
         BNO   @RF01341                                            1341
*                                 DO;/*                      @Y30LB00
*                                      INVALIDATE ELEMENT    @Y30LB00*/
*                                                                  1342
*                                   /*********************************/
*                                   /*                               */
*                                   /* INVALIDATE ELEM AND   @Y30LB00*/
*                                   /* INDICATE ELEM         @Y30LB00*/
*                                   /* INVALIDATED           @Y30LB00*/
*                                   /*                               */
*                                   /*********************************/
*                                                                  1343
*                                   QELFLG3=FOXFOX;/*        #Y30LB00*/
         L     @09,NEWELPTR                                        1343
         MVI   QELFLG3(@09),X'FF'                                  1343
*                                   ELEMINV=B1ONE;/*         #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1344
*                                 END;/*                     #Y30LB00*/
*                             END;  /*                       #Y30LB00*/
*                           ELSE    /* I/O WAS NOT BAD       #Y30LB00*/
*                             IOOK=B1ONE;/*                  #Y30LB00
*                                      I/O WAS OK            #Y30LB00*/
         B     @RC01338                                            1347
@RF01338 OI    IOOK,B'00000100'                                    1347
*                       END;        /*                       #Y30LB00*/
*                     ELSE          /* I/O BLOCKS NOT OBTAINED     1349
*                                                            #Y30LB00
*                                                            #Y30LB00*/
*                       NOIO=B1ONE; /* SET NO I/O ISSUED FLAG      1349
*                                                            #Y30LB00*/
         B     @RC01327                                            1349
@RF01327 OI    NOIO,B'00000100'                                    1349
*                   END;            /*                       #Y30LB00*/
*             END;                  /*                       #Y30LB00*/
*           ELSE                    /* SWDA NOT AVAILABLE    #Y30LB00*/
*             IF IODATAPT^=ZERO THEN/*                       #Y30LB00
*                                      WAS I/O BLOCKS OBTAINED     1352
*                                                            #Y30LB00*/
         B     @RC01302                                            1352
@RF01302 L     @09,IODATAPT                                        1352
         LTR   @09,@09                                             1352
         BZ    @RF01352                                            1352
*               DO;                 /* CHECK ECB OF I/O      #Y30LB00*/
*                 IF ECBCODE=C1ZERO THEN/*                   #Y30LB00
*                                      WAS I/O ISSUED        #Y30LB00*/
         L     @09,SSCDATAP                                        1354
         CLI   ECBCODE(@09),0                                      1354
         BNE   @RF01354                                            1354
*                   DO;             /* CHECK FOR DELAYED     #Y30LB00
*                                      RESPONSE ELEMENT      #Y30LB00*/
*                     NOIO=B1ONE;   /* I/O NOT ISSUED        #Y30LB00*/
         OI    NOIO,B'00000100'                                    1356
*                     IF CHKIOSW=B1ONE THEN/*                #Y30LB00
*                                      IS THERE A DELAYED    #Y30LB00
*                                      RESPONSE ELEMENT      #Y30LB00*/
         TM    CHKIOSW,B'00001000'                                 1357
         BNO   @RF01357                                            1357
*                       DO;         /* YES, INVALIDATE ELEMENT     1358
*                                                            #Y30LB00*/
*                                                                  1358
*                         /*******************************************/
*                         /*                                         */
*                         /* INVALIDATE ELEM AND INDICATE    @Y30LB00*/
*                         /* ELEM INVALIDATED                @Y30LB00*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  1359
*                         QELFLG3=FOXFOX;/*                  #Y30LB00*/
         L     @09,NEWELPTR                                        1359
         MVI   QELFLG3(@09),X'FF'                                  1359
*                         ELEMINV=B1ONE;/*                   #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1360
*                       END;        /*                       #Y30LB00*/
*                   END;            /*                       #Y30LB00*/
*                 ELSE              /* I/O WAS ISSUED        #Y30LB00*/
*                   IF ECBCODE^=C7FH THEN/*                  #Y30LB00
*                                      WAS I/O OK            #Y30LB00*/
         B     @RC01354                                            1363
@RF01354 L     @09,SSCDATAP                                        1363
         CLI   ECBCODE(@09),127                                    1363
         BE    @RF01363                                            1363
*                     DO;           /* NO, INVALIDATE THE    #Y30LB00
*                                      QUEUE ELEMENT         #Y30LB00*/
*                       IOBAD=B1ONE;/*                       #Y30LB00*/
         OI    IOBAD,B'00000010'                                   1365
*                       IF CHKIOSW=B1ONE THEN/*              #Y30LB00
*                                      SHOULD ELEMENT BE     #Y30LB00
*                                      INVALIDATED           #Y30LB00*/
         TM    CHKIOSW,B'00001000'                                 1366
         BNO   @RF01366                                            1366
*                         DO;       /* INVALIDATE ELEMENT    #Y30LB00*/
*                                                                  1367
*                           /*****************************************/
*                           /*                                       */
*                           /* INVALIDATE ELEM AND INDICATE  @Y30LB00*/
*                           /* ELEM INVALIDATED              @Y30LB00*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  1368
*                           QELFLG3=FOXFOX;/*                #Y30LB00*/
         L     @09,NEWELPTR                                        1368
         MVI   QELFLG3(@09),X'FF'                                  1368
*                           ELEMINV=B1ONE;/*                 #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1369
*                         END;      /*                       #Y30LB00*/
*                     END;          /*                       #Y30LB00*/
*                   ELSE            /* I/O OK, SET SWITCH    #Y30LB00*/
*                     IOOK=B1ONE;   /*                       #Y30LB00
*                                      SET SWITCH INDICATING #Y30LB00
*                                      THAT THE I/O WAS OK   #Y30LB00*/
         B     @RC01363                                            1372
@RF01363 OI    IOOK,B'00000100'                                    1372
*               END;                /*                       #Y30LB00*/
*             ELSE                  /* I/O BLKS NOT OBTAINED #Y30LB00*/
*               DO;                 /* I/O NOT ISSUED        #Y30LB00*/
         B     @RC01352                                            1374
@RF01352 DS    0H                                                  1375
*                 NOIO=B1ONE;       /*                       #Y30LB00*/
         OI    NOIO,B'00000100'                                    1375
*               END;                /*                       #Y30LB00*/
*         END;                      /*                       #Y30LB00*/
*     END;                          /*                       #Y30LB00*/
*   ELSE                            /* I/O IS BAD            #Y30LB00*/
*     IF CHKIOSW=B1ONE THEN         /* INVALIDATE THE QUEUE  #Y30LB00
*                                      ELEMENT               #Y30LB00*/
         B     @RC01298                                            1379
@RF01298 TM    CHKIOSW,B'00001000'                                 1379
         BNO   @RF01379                                            1379
*       DO;                         /* INVALIDATE ELEMENT    @Y30LB00*/
*                                                                  1380
*         /***********************************************************/
*         /*                                                         */
*         /* INVALIDATE ELEMENT AND INDICATE ELEM            @Y30LB00*/
*         /* INVALIDATED                                     @Y30LB00*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1381
*         QELFLG3=FOXFOX;           /*                       #Y30LB00*/
         L     @09,NEWELPTR                                        1381
         MVI   QELFLG3(@09),X'FF'                                  1381
*         ELEMINV=B1ONE;            /*                       #Y30LB00*/
         OI    ELEMINV,B'00000001'                                 1382
*       END;                        /*                       #Y30LB00*/
*   R6=INPUTREQ;                    /* ADDRESS THE INPUT REQ #Y30LB00*/
@RF01379 DS    0H                                                  1384
@RC01298 L     R6,INPUTREQ                                         1384
*   IF REQCODE=VARYON×REQCODE=VARYOFF THEN/*                 #Y30LB00
*                                      IS INPUT REQ VARY ON  #Y30LB00
*                                      OR VARY OFF           #Y30LB00*/
         CLI   REQCODE(R6),10                                      1385
         BE    @RT01385                                            1385
         CLI   REQCODE(R6),12                                      1385
         BNE   @RF01385                                            1385
@RT01385 DS    0H                                                  1386
*     DO;                           /* CHECK IF I/O OK       #Y30LB00*/
*       IF IOOK=B1ONE THEN          /* DID I/O COMPLETE OK   #Y30LB00*/
         TM    IOOK,B'00000100'                                    1387
         BNO   @RF01387                                            1387
*         DO;                       /* YES, CHECK TO SEE IF  #Y30LB00
*                                      SVC 83 & SVC 91 WERE  #Y30LB00
*                                      CALLED                #Y30LB00*/
*           IF SVC83=B1ZERO THEN    /* HAS SVC 83 BEEN ISSUED      1389
*                                                            #Y30LB00
*                                      FOR THE VARY          #Y30LB00*/
         TM    SVC83,B'00100000'                                   1389
         BNZ   @RF01389                                            1389
*             CALL RECRDVRY;        /* NO CALL SUBROUTINE    #Y30LB00
*                                      TO ISSUE SVC83        #Y30LB00*/
         BAL   @14,RECRDVRY                                        1390
*           ELSE                    /* SVC 83 HAS BEEN CALLED      1391
*                                                            #Y30LB00*/
*             IF REQCODE=VARYOFF&SVC91=B1ZERO THEN/*         #Y30LB00
*                                      IS REQUEST VARYOFF AND      1391
*                                                            #Y30LB00
*                                      SVC 91 HAS NOT BEEN   #Y30LB00
*                                      CALLED                #Y30LB00*/
         B     @RC01389                                            1391
@RF01389 CLI   REQCODE(R6),12                                      1391
         BNE   @RF01391                                            1391
         TM    SVC91,B'00010000'                                   1391
         BNZ   @RF01391                                            1391
*               CALL RECRDVRY;      /* CALL SUBROUTINE TO    #Y30LB00
*                                      ISSUE SVC91 FOR VARYOFF     1392
*                                                            #Y30LB00*/
         BAL   @14,RECRDVRY                                        1392
*         END;                      /*                       #Y30LB00*/
@RF01391 DS    0H                                                  1393
@RC01389 DS    0H                                                  1394
*     END;                          /*                       #Y30LB00*/
@RF01387 DS    0H                                                  1395
*   IF VVICCALL=B1ONE&VVICERR=B1ZERO THEN/*                  #Y30LB00
*                                      WAS MSVC CALLED FOR THE     1395
*                                                            @Y30LB00
*                                      REQUEST WITHOUT MSVC  @Y30LB00
*                                      DETECTING AN ERROR    #Y30LB00*/
@RF01385 TM    VVICCALL,B'01000000'                                1395
         BNO   @RF01395                                            1395
         TM    VVICERR,B'00010000'                                 1395
         BNZ   @RF01395                                            1395
*     DO;                           /* YES, CALL MSVC        @Y30LB00*/
*       R1=INPUTREQ;                /* ADDRESS INPUT REQUEST @Y30LB00*/
         L     R1,INPUTREQ                                         1397
*       TCBPT=SAVETCBP;             /* GET TCB ADDRESS       @Y30LB00*/
         L     @09,SAVETCBP                                        1398
         ST    @09,TCBPT                                           1398
*       ASCBPTR=SAVASCBP;           /* GET ASCB ADDRESS      @Y30LB00*/
         L     @09,SAVASCBP                                        1399
         ST    @09,ASCBPTR                                         1399
*       RFY                                                        1400
*        (R13) RESTRICTED;          /*                       #Y30LB00*/
*       R13=ADDR(SAVAREA);          /* SUPPLY REG SAVEAREA   @Y30LB00*/
         LA    R13,SAVAREA                                         1401
*       IF REQCODE=ACQUIRE THEN     /* ACQUIRES GO TO SCR RTN      1402
*                                                            @G24LB01*/
         CLI   REQCODE(R6),2                                       1402
         BNE   @RF01402                                            1402
*         R15=ICBVSCRA;             /* SET FOR ICBSCR00      @ZA24770*/
         L     @09,ICBPTR                                          1403
         L     R15,ICBVSCRA(,@09)                                  1403
*       ELSE                        /* NON ACQUIRE           @G24LB01*/
*         R15=ICBVVIC;              /* SET FOR ICBVQM00      @G24LB01*/
         B     @RC01402                                            1404
@RF01402 L     @09,ICBPTR                                          1404
         L     R15,ICBVVIC(,@09)                                   1404
*       IF NOIO=B1ONE THEN          /* WAS THERE ACTIVE I/O  #Y30LB00
*                                      FOR THE REQUEST       #Y30LB00*/
@RC01402 TM    NOIO,B'00000100'                                    1405
         BNO   @RF01405                                            1405
*         DO;                       /* YES, SET UP REGISTER 0      1406
*                                                            #Y30LB00*/
*                                                                  1406
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP REASON CODE FOR MSVC INDICATING        @Y30LB00*/
*           /* ABEND IN PROGRESS                             @Y30LB00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1407
*           RETNCODE=ZERO;          /*                       #Y30LB00*/
         SLR   @09,@09                                             1407
         ST    @09,RETNCODE                                        1407
*           ABNDNOIO=B1ONE;         /*                       #Y30LB00*/
         OI    ABNDNOIO,B'00100000'                                1408
*           R0=RETNCODE;            /*                       #Y30LB00*/
         L     R0,RETNCODE                                         1409
*         END;                      /*                       #Y30LB00*/
*       ELSE                        /* I/O WAS PERFORMED     #Y30LB00*/
*         IF IOOK=B1ONE THEN        /* WAS I/O OK            #Y30LB00*/
         B     @RC01405                                            1411
@RF01405 TM    IOOK,B'00000100'                                    1411
         BNO   @RF01411                                            1411
*           DO;                     /* YES, SET UP REG 0     #Y30LB00*/
*                                                                  1412
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP REASON CODE FOR MSVC INDICATING      @Y30LB00*/
*             /* ABEND IN PROGRESS                           @Y30LB00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1413
*             RETNCODE=ZERO;        /*                       #Y30LB00*/
         SLR   @09,@09                                             1413
         ST    @09,RETNCODE                                        1413
*             ABNDIO=B1ONE;         /*                       #Y30LB00*/
         OI    ABNDIO,B'01000000'                                  1414
*             R0=RETNCODE;          /*                       #Y30LB00*/
         L     R0,RETNCODE                                         1415
*           END;                    /*                       #Y30LB00*/
*         ELSE                      /* I/O WAS NOT OK        #Y30LB00*/
*           IF IOBAD=B1ONE THEN     /* WAS I/O BAD           @Y30LB00*/
         B     @RC01411                                            1417
@RF01411 TM    IOBAD,B'00000010'                                   1417
         BNO   @RF01417                                            1417
*             DO;                   /* YES, SET UP REG 0     @Y30LB00*/
*                                                                  1418
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP REASON CODE FOR MSVC INDICATING    @Y30LB00*/
*               /* ABEND IN PROGRESS                         @Y30LB00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1419
*               IF SSCDATAP^=ZERO THEN/*                     @ZA11664*/
         L     @09,SSCDATAP                                        1419
         LTR   @09,@09                                             1419
         BZ    @RF01419                                            1419
*                 RETNCODE=IOERRCD; /*                       @Y30LB00*/
         LH    @09,IOERRCD(,@09)                                   1420
         ST    @09,RETNCODE                                        1420
*               ELSE                                               1421
*                 RETNCODE=ZERO;    /*                       @ZA11664*/
         B     @RC01419                                            1421
@RF01419 SLR   @09,@09                                             1421
         ST    @09,RETNCODE                                        1421
*               ABNDIO=B1ONE;       /*                       @Y30LB00*/
@RC01419 OI    ABNDIO,B'01000000'                                  1422
*               R0=RETNCODE;        /*                       @Y30LB00*/
         L     R0,RETNCODE                                         1423
*             END;                  /*                       @Y30LB00*/
*       IF R15^=ZERO THEN           /* MSVC MOD FOUND        @G24LB02*/
@RF01417 DS    0H                                                  1425
@RC01411 DS    0H                                                  1425
@RC01405 LTR   R15,R15                                             1425
         BZ    @RF01425                                            1425
*         DO;                       /* BALR TO MSVC          @G24LB02*/
*           GEN REFS(R14,R15);                                     1427
*                                                          /*@Y30LB00*/
         BALR  R14,R15               BRANCH TO MSVC            @Y30LB00
*         END;                      /* END BALR TO MSVC      @G24LB02*/
*     END;                          /*                       @Y30LB00*/
@RF01425 DS    0H                                                  1430
*   IF IODATAPT^=ZERO THEN          /* HAS THE I/O BLOCKS    @Y30LB00
*                                      DATA AREA BEEN FREED  @Y30LB00*/
@RF01395 L     @09,IODATAPT                                        1430
         LTR   @09,@09                                             1430
         BZ    @RF01430                                            1430
*     DO;                           /* NO FREE THE STORAGE   @Y30LB00*/
*       IF REQCODE=MSCREAD×REQCODE=MSCDUMP×/* QUERY FUNCTIONS      1432
*                                                            @ZA13482*/
*           REQCODE=CAUDIT THEN     /* QUERY FUNCTION        @ZA13482*/
         CLI   REQCODE(R6),5                                       1432
         BE    @RT01432                                            1432
         CLI   REQCODE(R6),11                                      1432
         BE    @RT01432                                            1432
         CLI   REQCODE(R6),7                                       1432
         BNE   @RF01432                                            1432
@RT01432 DS    0H                                                  1433
*         R0=IOLENGTH+ORDLENG+LENGTH(BUFFER);/* SET LENGTH   @ZA13482*/
         L     R0,IOLENGTH                                         1433
         AL    R0,ORDLENG                                          1433
         AL    R0,@CF02475                                         1433
*       ELSE                        /* NOT QUERY, CHECK ACQ/REL    1434
*                                                            @ZA13482*/
*         IF ARSW=B1ONE THEN        /* IS ACQ/REL REQUEST    @Y30LB00
*                                      BEING PROCESSED       @Y30LB00*/
         B     @RC01432                                            1434
@RF01432 TM    ARSW,B'00100000'                                    1434
         BNO   @RF01434                                            1434
*           R0=IOLENGTH+(LISTLEN-EIGHT);/*                   @Y30LB00*/
         L     R0,LISTLEN(,R6)                                     1435
         SL    R0,@CF00033                                         1435
         AL    R0,IOLENGTH                                         1435
*         ELSE                      /* NOT ACQ/REL REQUEST   @Y30LB00*/
*           R0=IOLENGTH+ORDLENG;    /*                       @Y30LB00*/
*                                                                  1436
         B     @RC01434                                            1436
@RF01434 L     R0,IOLENGTH                                         1436
         AL    R0,ORDLENG                                          1436
*       /*************************************************************/
*       /*                                                           */
*       /* FREE STORAGE FOR THE I/O BLOCKS                   @Y30LB00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1437
*       R1=ADDR(IFREEMAI);          /*                       @Y30LB00*/
@RC01434 DS    0H                                                  1437
@RC01432 LA    R1,IFREEMAI                                         1437
*       GEN REFS(R1,R0,IODATAPT);                                  1438
*                                                          /*@Y30LB00*/
* FREE THE I/O BLOCKS STORAGE                                  @Y30LB00
IFREEM11 FREEMAIN E,MF=(E,(R1)),LV=(R0),A=IODATAPT,SP=245,     @Y30LB00*
               RELATED=(SP245,IGC0012F(IGETMA10))              @Y30LB00
*       IOBLKSW=B1ZERO;             /*                       @Y30LB00*/
         NI    IOBLKSW,B'11110111'                                 1439
*     END;                          /*                       @Y30LB00*/
*   R13=SAVE13;                     /*                       @Y30LB00*/
@RF01430 L     R13,SAVE13                                          1441
*   R1=R10;                         /*                       @Y30LB00*/
         LR    R1,R10                                              1442
*   GEN REFS(R0,R8,R11,R12,R15);                                   1443
*                                                          /*@ZA27588*/
         L     R0,@SIZDATD           GET SIZE DYNAMIC AREA     @Y30LB00
         DROP  8                     DROP BASE REG 8           @ZA27588
         DROP  11                    DROP BASE REG 11          @Y30LB00
         DROP  12                    DROP BASE REG 12          @Y30LB00
         BALR  R15,ZERO              SET UP ADDRESSIBILITY     @Y30LB00
*                                    WITH REG 15               @Y30LB00
         USING *,R15                 USE 15 BASE REG           @Y30LB00
*   IF SAVE0=TWELVE THEN            /* IS SDWA AVAILABLE     @Y30LB00*/
         CLC   SAVE0(4),@CF00035                                   1444
         BNE   @RF01444                                            1444
*     DO;                           /* NO, RESTORE INPUT REGS      1445
*                                                            @Y30LB00*/
*                                                                  1445
*       /*************************************************************/
*       /*                                                           */
*       /* RESTORE THE INPUT REGISTERS                       @Y30LB00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1446
*       GEN REFS(R14,R2,R12,ESTAEREG);                             1446
*                                                          /*#Y30LB00*/
         L     R14,ESTAEREG          RESTORE REG 14            #Y30LB00
         LM    R2,R12,ESTAEREG+SIXTEEN   RESTORE REGS          #Y30LB00
*                                    2 THRU 12                 #Y30LB00
*     END;                          /*                       #Y30LB00*/
*   ELSE                            /* SDWA IS AVAILABLE     #Y30LB00*/
*     DO;                           /* RESTORE INPUT REGS    #Y30LB00*/
*                                                                  1448
         B     @RC01444                                            1448
@RF01444 DS    0H                                                  1449
*       /*************************************************************/
*       /*                                                           */
*       /* RESTORE THE INPUT REGISTERS                       @Y30LB00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1449
*       GEN REFS(R14,R13,R2,R12);                                  1449
*                                                          /*#Y30LB00*/
         L     R14,TWELVE(R13)       RESTORE REG 14            #Y30LB00
         LM    R2,R12,TWENTY8(R13)   RESTORE REGS 2 THRU 12    #Y30LB00
*     END;                          /*                       #Y30LB00*/
*/*   FREE STORAGE SVC DYNAMIC AREA                          @Y30LB00*/
*                                                                  1451
*   GEN REFS(R0,R1,R15,R14);                                       1451
@RC01444 DS    0H                                                  1451
*                                                          /*#Y30LB00*/
IFREEM01 FREEMAIN R,LV=(R0),A=(R1)   FREE DYNAMIC AREA         #Y30LB00
         SR    R15,R15               CLEAR REGISTER 15 TO      #Y30LB00
*                                    INDICATE CONTINUE WITH    #Y30LB00
*                                    TERMINATION               #Y30LB00
         BR    R14                   RETURN                    #Y30LB00
*   END SVCESTAE;                   /*                       @ZM31085*/
@EL00017 DS    0H                                                  1452
@EF00017 DS    0H                                                  1452
@ER00017 BR    @14                                                 1452
@PB00017 DS    0H                                                  1452
*   GEN;                                                           1453
*                                                          /*@Y30LB00*/
*                                                              @Y30LB00
* PATCH AREA                                                   @Y30LB00
*                                                              @Y30LB00
*                                                              @Y30LB00
CB2SVCP EQU  *                                                 @Y30LB00
         DS   50F                   PATCH AREA                 @ZA30410
*   END IGC0012F                    /*                       @Y30LB00*/
*                                                                  1454
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICBRQUE )                                       */
*/*%INCLUDE SYSLIB  (IFASMFR )                                       */
*/*%INCLUDE SYSLIB  (IFASMFR1)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR2)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR3)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR4)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR5)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR6)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR7)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR8)                                       */
*/*%INCLUDE SYSLIB  (IFASMFR9)                                       */
*/*%INCLUDE SYSLIB  (IFASMFRA)                                       */
*/*%INCLUDE SYSLIB  (IFASMFRB)                                       */
*/*%INCLUDE SYSLIB  (IFASMFRC)                                       */
*/*%INCLUDE SYSLIB  (IFASMFRD)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (ICB2IOBX)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*                                                                  1454
*       ;                                                          1454
@DATA    DS    0H
@CH00061 DC    H'1'
@CH00079 DC    H'6'
@CH00786 DC    H'374'
@SM03082 MVC   SAVEREQ(0),INPTLIST(R6)
@SM03086 MVC   ICBLORD(0,@07),DATAAREA+4(R9)
@SM03094 MVC   ORDLIST(0,@07),DATAAREA(R9)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    4A
IGC0012F CSECT
         DS    0F
@CF00076 DC    F'4'
@CH00076 EQU   @CF00076+2
@CF00084 DC    F'5'
@CH00084 EQU   @CF00084+2
@CF00033 DC    F'8'
@CF00034 DC    F'11'
@CF00035 DC    F'12'
@CF00323 DC    F'13'
@CF00088 DC    F'16'
@CF00758 DC    F'20'
@CF00487 DC    F'24'
@CF00162 DC    F'28'
@CH00162 EQU   @CF00162+2
@CF00430 DC    F'32'
@CF00766 DC    F'40'
@CF00770 DC    F'44'
@CF03063 DC    F'48'
@CF03064 DC    F'52'
@CF02471 DC    F'57'
@CF01880 DC    F'96'
@CF02521 DC    F'132'
@CF02513 DC    F'193'
@CF02507 DC    F'240'
@CF00782 DC    F'243'
@CH00782 EQU   @CF00782+2
@CF00784 DC    F'244'
@CH00784 EQU   @CF00784+2
@CF03058 DC    F'260'
@CF03059 DC    F'264'
@CF00796 DC    F'368'
@CF00794 DC    F'370'
@CH00794 EQU   @CF00794+2
@CF00792 DC    F'371'
@CF00790 DC    F'372'
@CF00788 DC    F'373'
@CF00798 DC    F'377'
@CF02475 DC    F'512'
@CH02475 EQU   @CF02475+2
@CF03081 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
TCBPT    DS    A
ASCBPTR  DS    A
ARPTR    DS    A
ORDERPT  DS    A
QELEMPTR DS    A
NEWELPTR DS    A
DELRECB  DS    AL4
         ORG   DELRECB
MSGFLG   DS    CL1
         ORG   DELRECB+4
SMF22PTR DS    A
SWITCHES DS    FL4
         ORG   SWITCHES
ELEMSW   DS    BL1
LOOPSW   EQU   SWITCHES+0
ARSW     EQU   SWITCHES+0
ACQSW    EQU   SWITCHES+0
RELSW    EQU   SWITCHES+0
ARERRSW  EQU   SWITCHES+0
ARERRLP  EQU   SWITCHES+0
RELERRS  EQU   SWITCHES+0
RELERRSW DS    BL1
RELNOGOS EQU   SWITCHES+1
INTMIXSW EQU   SWITCHES+1
VVICERR  EQU   SWITCHES+1
IOBLKSW  EQU   SWITCHES+1
PGFXFLG  EQU   SWITCHES+1
@NM00049 EQU   SWITCHES+1
ESTAEFLG DS    CL2
         ORG   ESTAEFLG
DRSWITCH DS    BL1
ELEMOBT  EQU   ESTAEFLG+0
ELEMQUE  EQU   ESTAEFLG+0
IO       EQU   ESTAEFLG+0
IOCMP    EQU   ESTAEFLG+0
IOOK     EQU   ESTAEFLG+0
IOBAD    EQU   ESTAEFLG+0
ELEMINV  EQU   ESTAEFLG+0
ELEMFREE DS    BL1
VVICCALL EQU   ESTAEFLG+1
SVC83    EQU   ESTAEFLG+1
SVC91    EQU   ESTAEFLG+1
CHKIOSW  EQU   ESTAEFLG+1
NOIO     EQU   ESTAEFLG+1
LOCLOCK  EQU   ESTAEFLG+1
CMSLOCK  EQU   ESTAEFLG+1
         ORG   SWITCHES+4
RETNCODE DS    FL4
         ORG   RETNCODE
SECVVIC  DS    BL1
ABNDIO   EQU   RETNCODE+0
ABNDNOIO EQU   RETNCODE+0
         ORG   RETNCODE+4
ARERRCD  DS    FL4
         ORG   ARERRCD
@NM00050 DS    CL4
         ORG   ARERRCD+4
SAVE14   DS    F
SAVE13   DS    F
SAVE0    DS    F
SAVBAS08 DS    F
SAVBAS11 DS    F
SAVBAS12 DS    F
BUFFPTR  DS    A
ORDLENG  DS    F
IODATAPT DS    A
CCWPTR   DS    A
SRBPTR   DS    A
IOSBPTR  DS    A
SSCDATAP DS    A
ORDPTR   DS    A
NOOPPTR  DS    A
ICBPTR   DS    A
IOLENGTH DS    F
SAVETCBP DS    F
INPUTREQ DS    F
SAVASCBP DS    F
R14IO    DS    A
R14LU    DS    A
MSVC14   DS    F
SAVR15   DS    F
UCBPTR   DS    A
UCBDCPTR DS    A
DMTCNT   DS    AL1
@TS00001 DS    CL256
CONVERTA DS    CL4
         ORG   CONVERTA
BYTE1    DS    FL1
BYTES234 DS    CL3
         ORG   BYTES234
BYTE2    DS    FL1
BYTES34  DS    CL2
         ORG   BYTES34
BYTE3    DS    FL1
BYTE4    DS    FL1
         ORG   BYTE4
@NM00048 DS    BL1
SIGN     EQU   BYTE4+0
         ORG   CONVERTA+4
SAVEREQ  DS    CL150
RECOVERY DS    CL7
         ORG   RECOVERY
@NM00139 DS    CL1
         ORG   @NM00139
ENQSW    DS    BL1
@NM00140 EQU   @NM00139+0
         ORG   RECOVERY+1
ENQVOLID DS    CL6
         ORG   RECOVERY+7
         DS    CL2
ENQDEQ   DS    CL12
SAV1UCBL DS    CL64
SAV2UCBL DS    CL12
SAV3UCBL DS    CL8
         DS    CL1
SAVPACK  DS    CL4
         ORG   SAVPACK
SAVUNAME DS    CL3
         ORG   SAVUNAME
SAVCHF   DS    FL1
SAVADD   DS    FL2
         ORG   SAVADD
SAVADD1  DS    FL1
SAVADD2  DS    FL1
         ORG   SAVPACK+3
SAVSPARE DS    FL1
         ORG   SAVPACK+4
         DS    CL3
SAVAREA  DS    18A
ESTAEREG DS    16A
IGC0012F CSECT
         DS    0F
@SIZDATD DC    AL1(245)
         DC    AL3(@ENDDATD-@DATD)
@CV02563 DC    V(IGC0112F)
         DS    0D
@CC02570 DC    C'BIO'
@CC02575 DC    C'EIO'
@CC02576 DC    C'AIO'
@CB02510 DC    B'0000100000000000'
C4ZERO   DC    X'00000000'
C5ZEROS  DC    X'0000000000'
C7ZEROS  DC    X'00000000000000'
C8ZEROS  DC    X'0000000000000000'
SRBEBCDC DC    CL4'SRB '
SVC126   DC    CL8'IGC0012F'
RECV126  DC    CL8'SVCESTAE'
DMTIDCD  DC    CL2'DM'
DMTIDBL  DC    CL2'  '
NOOPORDR DC    X'1E000000'
QNAME    DC    CL8'SYSMSSVT'
@DATD    DSECT
*                                                          /*@Y30LB00*/
*                                                              @Y30LB00
* PARAMETER LIST USED TO GET STORAGE FOR THE CHANNEL           @Y30LB00
* PROGRAM, THE I/O CONTROL BLOCKS, THE SMF RECORD, AND         @Y30LB00
* THE ELEMENT TO BE QUEUED                                     @Y30LB00
*                                                              @Y30LB00
IGETMAIN GETMAIN EC,MF=L                                       @Y30LB00
*                                                              @Y30LB00
* PARAMETER LIST USED TO FREE STORAGE FOR THE CHANNEL          @Y30LB00
* PROGRAM, THE I/O CONTROL BLOCKS, THE SMF RECORD, AND         @Y30LB00
* THE ELEMENT TO BE QUEUED                                     @Y30LB00
*                                                              @Y30LB00
IFREEMAI FREEMAIN E,MF=L                                       @Y30LB00
*                                                              @Y30LB00
* PARAMETER LIST USED FOR THE ESTAE                            @Y30LB00
IESTAE   ESTAE MF=L                                            @Y30LB00
ESTAPEND EQU   *                     END OF ESTAE PARM LIST    @Y30LB00
ESTAPLEN EQU   ESTAPEND-IESTAE       LENGTH OF ESTAE PARM      @Y30LB00
*                                    LIST                      @Y30LB00
*                                                              @Y30LB00
ZERO     EQU   0                  VALUE OF ZERO                @Y30LB00
FOUR     EQU   4                  VALUE OF FOUR                @Y30LB00
TWELVE   EQU   12                 VALUE OF TWELVE              @Y30LB00
SIXTEEN  EQU   16                 VALUE OF 16                  @Y30LB00
TWENTY   EQU   20                 VALUE OF 20                  @Y30LB00
TWENTY8  EQU   28                 VALUE OF 28                  @Y30LB00
FOUR095  EQU   4095               VALUE OF 4095                @Y30LB00
@DATD    DSECT
*                                                          /*@ZM31085*/
           IECDIOCM                                            @ZM31085
           IECDIOCX                                            @ZM31085
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGC0012F CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
SDWAPTR  EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
ARR1     EQU   @01
ASDAR1   EQU   @01
COTBR1   EQU   @01
CVOLR1   EQU   @01
DEFVR1   EQU   @01
ICBR1    EQU   @01
MCR1     EQU   @01
MDREG1   EQU   @01
MODBR1   EQU   @01
NULBR1   EQU   @01
PAIRR1   EQU   @01
QUERR1   EQU   @01
SUSPR1   EQU   @01
TRACR1   EQU   @01
TUNER1   EQU   @01
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
INPTLIST EQU   0
LISTLEN  EQU   INPTLIST
REQCODE  EQU   INPTLIST+4
VVICREQ  EQU   REQCODE
ARLIST   EQU   0
ARLL     EQU   ARLIST
AROP     EQU   ARLIST+4
ARFLG    EQU   ARLIST+6
ARDRES   EQU   ARFLG
ARSEC    EQU   ARFLG
ARNMEXT  EQU   ARLIST+7
ARASID   EQU   ARLIST+14
ARECB    EQU   ARLIST+16
ARHOST   EQU   ARLIST+20
ARCOMPC  EQU   ARLIST+26
AREXT    EQU   ARLIST+28
ARNEDB   EQU   ARLIST+92
MVLIST   EQU   0
MCRTFLG  EQU   MVLIST+6
MCRTLIB  EQU   MVLIST+7
MCRTASID EQU   MVLIST+38
MCRTECB  EQU   MVLIST+40
DEFLIST  EQU   0
DEFVFLG  EQU   DEFLIST+6
DEFVLIB  EQU   DEFLIST+7
DEFVVFLG EQU   DEFLIST+14
DEFVASID EQU   DEFLIST+50
DEFVECB  EQU   DEFLIST+52
DEFVDATA EQU   DEFLIST+56
MODCLIST EQU   0
MODFUNC  EQU   MODCLIST+6
MODLOCAT EQU   MODCLIST+7
MODVFLG  EQU   MODCLIST+48
CVLIST   EQU   0
CVOLFLG  EQU   CVLIST+6
CVOLASID EQU   CVLIST+14
CVOLECB  EQU   CVLIST+16
CCLIST   EQU   0
CCRTFLG  EQU   CCLIST+6
CCRTASID EQU   CCLIST+14
CCRTECB  EQU   CCLIST+16
CTLIST   EQU   0
COTBFLG  EQU   CTLIST+6
COTBASID EQU   CTLIST+18
COTBECB  EQU   CTLIST+20
VOFLIST  EQU   0
VOFFLG   EQU   VOFLIST+6
VOFSTAG  EQU   VOFFLG
VOFTEST  EQU   VOFFLG
VOFSSID  EQU   VOFLIST+8
VOFHOST  EQU   VOFLIST+12
VOFASID  EQU   VOFLIST+18
VOFECB   EQU   VOFLIST+20
VONLIST  EQU   0
VONFLG   EQU   VONLIST+6
MNTLIST  EQU   0
MDLEN    EQU   MNTLIST
MDOPCD   EQU   MNTLIST+4
MDFLG    EQU   MNTLIST+6
MDVISMNT EQU   MDFLG
MDVOL    EQU   MNTLIST+8
MDVUA    EQU   MNTLIST+14
MDHOST   EQU   MNTLIST+16
MNTEXTP  EQU   MNTLIST+24
MDJFCB   EQU   MNTEXTP
DMTLIST  EQU   0
DMLEN    EQU   DMTLIST
DMOPCD   EQU   DMTLIST+4
DMNTFLAG EQU   DMTLIST+6
DMDELRSP EQU   DMNTFLAG
DMVUAVAL EQU   DMNTFLAG
DMVOL    EQU   DMTLIST+8
DMNTASID EQU   DMTLIST+14
DMNTECB  EQU   DMTLIST+16
DMHOST   EQU   DMTLIST+20
DMNTVUA  EQU   DMTLIST+26
PURGLIST EQU   0
PURGFLG  EQU   PURGLIST+6
PURGHOST EQU   PURGLIST+8
AIRLIST  EQU   0
AIRFLAG  EQU   AIRLIST+6
ASDSLIST EQU   0
ASDAFLG  EQU   ASDSLIST+6
ASASSOC  EQU   ASDAFLG
ASDASSOC EQU   ASDAFLG
ASDEINT  EQU   ASDAFLG
ASDMNT   EQU   ASDAFLG
ASDACPU  EQU   ASDSLIST+8
TUNELIST EQU   0
TUNEFLAG EQU   TUNELIST+6
TUNMODE  EQU   TUNEFLAG
TUNEASID EQU   TUNELIST+10
TUNEECB  EQU   TUNELIST+12
SUSPLIST EQU   0
SUSPFLG  EQU   SUSPLIST+6
SUPPRSW  EQU   SUSPFLG
TRACLIST EQU   0
TRACFLG  EQU   TRACLIST+6
QUERLIST EQU   0
QUCODE   EQU   QUERLIST+6
QUSECT   EQU   QUERLIST+7
QUXADDR  EQU   QUSECT
QUFLAG   EQU   QUXADDR
QUPARM   EQU   QUERLIST+8
QUPTR    EQU   QUERLIST+40
NULLLIST EQU   0
NULFLAGA EQU   NULLLIST+6
NULASID  EQU   NULLLIST+14
NULECB   EQU   NULLLIST+16
QELM     EQU   0
ELMTCB   EQU   QELM+1
ELMECB   EQU   QELM+4
ELMHEAD  EQU   QELM+9
INVALFLG EQU   QELM+12
ELMBACK  EQU   QELM+13
ELMASID  EQU   QELM+16
NEWELMT  EQU   0
QELSP    EQU   NEWELMT
QELTCBPR EQU   NEWELMT+1
QELECB   EQU   NEWELMT+4
QELFLG2  EQU   NEWELMT+8
QELAHEAD EQU   NEWELMT+9
QELFLG3  EQU   NEWELMT+12
QELBACK  EQU   NEWELMT+13
QELASID  EQU   NEWELMT+16
HEADELM  EQU   0
HEADBACK EQU   HEADELM+13
SMFRCD22 EQU   0
SMF22LEN EQU   SMFRCD22
SMF22RTY EQU   SMFRCD22+5
SMF22IND EQU   SMFRCD22+18
SMF22ECT EQU   SMFRCD22+20
SMF22CPU EQU   0
SMF22CHL EQU   0
SMF22STR EQU   0
SMF22IPL EQU   0
SMF22VON EQU   0
SMF22NID EQU   SMF22VON+1
SMF22NSI EQU   SMF22VON+3
SMF22VOF EQU   0
SMF22FID EQU   SMF22VOF+1
SMF22FSI EQU   SMF22VOF+3
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
BUFFER   EQU   0
BUFF1    EQU   BUFFER
BUFF2    EQU   BUFFER+256
USERDATA EQU   0
USER1    EQU   USERDATA
USER2    EQU   USERDATA+256
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBPARM  EQU   SRB+28
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSASID  EQU   IOSB+6
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00054 EQU   IOSB+20
IOSCSW   EQU   @NM00054+1
IOSTATUS EQU   IOSCSW+3
IOSSRB   EQU   IOSB+28
IOSUSE   EQU   IOSB+32
IOSIPIB  EQU   IOSB+44
IOSVST   EQU   IOSB+76
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
SSCDATA  EQU   0
IOECB    EQU   SSCDATA
ECBCODE  EQU   IOECB
TCBADDR  EQU   SSCDATA+4
IOERRCD  EQU   SSCDATA+8
APPSW    EQU   SSCDATA+10
APGAREA  EQU   SSCDATA+12
DMTID    EQU   SSCDATA+76
DMTVOL   EQU   SSCDATA+78
CCWS     EQU   0
CCW1     EQU   CCWS
CCW1CC   EQU   CCW1
CCW1DATA EQU   CCW1+1
CCW1FLGS EQU   CCW1+4
CCW1CNT  EQU   CCW1+6
CCW2     EQU   CCWS+8
CCW2CC   EQU   CCW2
CCW2DATA EQU   CCW2+1
CCW2FLGS EQU   CCW2+4
CCW2CNT  EQU   CCW2+6
CCW3     EQU   CCWS+16
CCW3CC   EQU   CCW3
CCW3DATA EQU   CCW3+1
CCW3FLGS EQU   CCW3+4
CCW3CNT  EQU   CCW3+6
ORDLIST  EQU   0
NOOP1E   EQU   0
CVTMAP   EQU   0
CVTILK1  EQU   CVTMAP+36
CVTILK2  EQU   CVTMAP+40
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIXAVL EQU   CVTMAP+124
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ICB2SSCB EQU   0
ICBPUCB  EQU   ICB2SSCB+28
ICBAUCB  EQU   ICB2SSCB+32
ICBQHEAD EQU   ICB2SSCB+36
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBI     EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBSIOP  EQU   ICB2SSCB+68
ICBVVIC  EQU   ICB2SSCB+72
ICBVVICB EQU   ICB2SSCB+76
ICBMSSC  EQU   ICB2SSCB+104
ICBCPUID EQU   ICB2SSCB+112
ICBVSCRA EQU   ICB2SSCB+120
ICBVOLST EQU   ICB2SSCB+124
ICBTRACE EQU   ICB2SSCB+148
ICBOTRC  EQU   ICBTRACE
ICBLORD  EQU   ICBTRACE+256
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
USERCB   EQU   0
USERX1   EQU   USERCB
USERX2   EQU   USERCB+4
DATAAREA EQU   0
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00144 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
UCBBGN   EQU   0
QWPARM   EQU   QUPARM
QWRES1   EQU   QWPARM
QWFLAG   EQU   QWPARM+2
QWALTMSC EQU   QWFLAG
QTPARM   EQU   QUPARM
QTID     EQU   QTPARM
QLPARM   EQU   QUPARM
QCPARM   EQU   QUPARM
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00143 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
ARFLAG   EQU   ARFLG
ARLEN    EQU   ARLL
ARNMEXTS EQU   ARNMEXT
DMHOSTID EQU   DMHOST
DMNTLEN  EQU   DMLEN
DMOPCODE EQU   DMOPCD
DMVOLID  EQU   DMVOL
FLC      EQU   PSA
MNTFLAGS EQU   MDFLG
MNTHOSTD EQU   MDHOST
MNTJFCB  EQU   MDJFCB
MNTLEN   EQU   MDLEN
MNTOPCD  EQU   MDOPCD
MNTVOLID EQU   MDVOL
MNTVUA   EQU   MDVUA
*                                      START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00143
UCBSKPFG EQU   @NM00143
UCBRIPND EQU   @NM00143
UCBRTIAC EQU   @NM00143
UCBRSV79 EQU   @NM00143
UCBRSV78 EQU   @NM00143
UCBRSV77 EQU   @NM00143
UCBOLTEP EQU   @NM00143
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00142 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00059 EQU   IOSPCISC+4
@NM00058 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00057 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
QCMAD3Z1 EQU   QCPARM+28
QCMAD3Z0 EQU   QCPARM+24
QCMAD2Z1 EQU   QCPARM+20
QCMAD2Z0 EQU   QCPARM+16
QCMAD1Z1 EQU   QCPARM+12
QCMAD1Z0 EQU   QCPARM+8
QCMAD0Z1 EQU   QCPARM+4
QCMAD0Z0 EQU   QCPARM
QLRES    EQU   QLPARM+2
QLZYX    EQU   QLPARM
QTRES    EQU   QTPARM+24
QTDASCHR EQU   QTPARM+20
QTDATA   EQU   QTPARM+2
QTFLAG   EQU   QTPARM+1
QTTABID  EQU   QTID
QWRES2   EQU   QWPARM+3
@NM00041 EQU   QWFLAG
QWMEM    EQU   QWFLAG
QWSSID   EQU   QWRES1
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00144
UCBHALI  EQU   @NM00144
UCBRSV09 EQU   @NM00144
UCBRSV08 EQU   @NM00144
UCBRSV07 EQU   @NM00144
UCBRSV06 EQU   @NM00144
UCBRSV05 EQU   @NM00144
UCBRSV04 EQU   @NM00144
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00141 EQU   UCB
USERX5   EQU   USERCB+16
USERX4   EQU   USERCB+12
USERX3   EQU   USERCB+8
@NM00138 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00137 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00136 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00135 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00134 EQU   SDWADDAT+3
@NM00133 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00132 EQU   SDWADDAT+1
@NM00131 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00130 EQU   SDWADUMP+2
@NM00129 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00128 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
@NM00127 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00126 EQU   SDWAACF3
@NM00125 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00124 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00123 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWARCDE EQU   SDWAPARQ
SDWALCPU EQU   SDWACPUA+2
@NM00122 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00121 EQU   SDWA+239
@NM00120 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00119 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00118 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00117 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00116 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00115 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00114 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00113 EQU   SDWAINC2
@NM00112 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00111 EQU   SDWAILC2
@NM00110 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00109 EQU   SDWANXT2
@NM00108 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00107 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00106 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00105 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00104 EQU   SDWAINC1
@NM00103 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00102 EQU   SDWAILC1
@NM00101 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00100 EQU   SDWANXT1
@NM00099 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00098 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00097 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00096 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00095 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00094 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00093 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00092 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00091 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
ICBRESV  EQU   ICB2SSCB+128
ICBSAMP  EQU   ICB2SSCB+118
ICBRESVD EQU   ICB2SSCB+117
ICBFAB   EQU   ICB2SSCB+108
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBFG3   EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00066 EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00065 EQU   CVTFIX+248
@NM00064 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00063 EQU   CCW3+5
@NM00062 EQU   CCW2+5
@NM00061 EQU   CCW1+5
APPSAV   EQU   APGAREA
@NM00060 EQU   APPSW
ATTNSW   EQU   APPSW
POSTSW   EQU   APPSW
ERPSW    EQU   APPSW
SSCDERR  EQU   IOERRCD
TCBPTR   EQU   TCBADDR
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00056 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00055 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00054
IOSOPT2X EQU   IOSOPT2
IOSIGP   EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00053 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSNOTRS EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
@NM00052 EQU   SRB+40
@NM00051 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBFLNK  EQU   SRB+4
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
SMF22RVB EQU   SMF22VOF+2
SMF22RV6 EQU   SMF22VOF
SMF22RVA EQU   SMF22VON+2
SMF22RV5 EQU   SMF22VON
SMF22ION EQU   SMF22IPL+2
SMF22IID EQU   SMF22IPL+1
SMF22RV4 EQU   SMF22IPL
SMF22NPG EQU   SMF22STR+4
SMF22PGL EQU   SMF22STR+2
SMF22TID EQU   SMF22STR+1
SMF22RV3 EQU   SMF22STR
SMF22CPD EQU   SMF22CHL+5
SMF22CHA EQU   SMF22CHL+4
SMF22CHN EQU   SMF22CHL+2
SMF22CID EQU   SMF22CHL+1
SMF22RV2 EQU   SMF22CHL
SMF22CPA EQU   SMF22CPU+5
SMF22RV1 EQU   SMF22CPU+4
SMF22CPN EQU   SMF22CPU+2
SMF22PID EQU   SMF22CPU+1
SMF22RV0 EQU   SMF22CPU
SMF22SID EQU   SMFRCD22+14
SMF22DTE EQU   SMFRCD22+10
SMF22TME EQU   SMFRCD22+6
SMF22FLG EQU   SMFRCD22+4
SMF22SEG EQU   SMFRCD22+2
@NM00047 EQU   HEADELM
@NM00046 EQU   NEWELMT+18
PRGASID  EQU   QELASID
CHNBACK  EQU   QELBACK
SVCINVAL EQU   QELFLG3
CHNHEAD  EQU   QELAHEAD
FLAG1    EQU   QELFLG2
QELECBPR EQU   QELECB+1
QELFLG1  EQU   QELECB
@NM00045 EQU   QELM+18
ABENDFLG EQU   QELM+8
@NM00044 EQU   QELM
NULRES2  EQU   NULLLIST+32
NULCSN   EQU   NULLLIST+20
NULVOLID EQU   NULLLIST+8
@NM00043 EQU   NULFLAGA
NULCART2 EQU   NULFLAGA
NULCART1 EQU   NULFLAGA
@NM00042 EQU   NULFLAGA
NULSCRC  EQU   NULFLAGA
NULTRAN  EQU   NULFLAGA
NULVOL   EQU   NULFLAGA
NULRES1  EQU   NULLLIST+5
NULORDER EQU   NULLLIST+4
NULENGTH EQU   NULLLIST
QURES1   EQU   QUFLAG
QULIB    EQU   QUCODE
QURES    EQU   QUERLIST+5
QUORD    EQU   QUERLIST+4
QULEN    EQU   QUERLIST
TRACTIM  EQU   TRACLIST+8
@NM00040 EQU   TRACFLG
TRACEON  EQU   TRACFLG
@NM00039 EQU   TRACLIST+5
TRACOPC  EQU   TRACLIST+4
TRACLEN  EQU   TRACLIST
@NM00038 EQU   SUSPFLG
SUPRCON  EQU   SUSPFLG
SUPIMED  EQU   SUSPFLG
@NM00037 EQU   SUSPLIST+5
SUSPOP   EQU   SUSPLIST+4
SUSPLEN  EQU   SUSPLIST
TUNEDATA EQU   TUNELIST+16
TUNERES2 EQU   TUNELIST+9
TUNESDGN EQU   TUNELIST+8
TUNRES2  EQU   TUNEFLAG+1
TUNCLOCK EQU   TUNEFLAG+1
TUNSLICE EQU   TUNEFLAG+1
TUNTHRES EQU   TUNEFLAG+1
TUNRES1  EQU   TUNEFLAG
TUNERES1 EQU   TUNELIST+5
TUNEOPCD EQU   TUNELIST+4
TUNELEN  EQU   TUNELIST
ASDA002  EQU   ASDSLIST+13
@NM00036 EQU   ASDAFLG
@NM00035 EQU   ASDAFLG
ASDA001  EQU   ASDSLIST+5
ASDAOPC  EQU   ASDSLIST+4
ASDALEN  EQU   ASDSLIST
@NM00034 EQU   AIRFLAG
AIRCPUS  EQU   AIRFLAG
AIRRESV  EQU   AIRFLAG
@NM00033 EQU   AIRLIST+5
AIROP    EQU   AIRLIST+4
AIRLL    EQU   AIRLIST
@NM00032 EQU   PURGFLG
PURGMPP  EQU   PURGFLG
@NM00031 EQU   PURGLIST+5
PURGOP   EQU   PURGLIST+4
PURGLL   EQU   PURGLIST
DMNTRES2 EQU   DMTLIST+25
DMBITRES EQU   DMNTFLAG
DMBITRE1 EQU   DMNTFLAG
DMNTRES1 EQU   DMTLIST+5
MNTRES2  EQU   MNTLIST+21
@NM00030 EQU   MDFLG
MDMEXT   EQU   MDFLG
MDSRTCH  EQU   MDFLG
MDVSVRQ  EQU   MDFLG
@NM00029 EQU   MDFLG
MNTRES1  EQU   MNTLIST+5
VONRES2  EQU   VONLIST+10
VONSSID  EQU   VONLIST+8
@NM00028 EQU   VONFLG
VONREAL  EQU   VONFLG
VONSTAG  EQU   VONFLG
VONRES1  EQU   VONLIST+5
VONOPCD  EQU   VONLIST+4
VONLEN   EQU   VONLIST
@NM00027 EQU   VOFLIST+17
VOFRUA   EQU   VOFLIST+10
@NM00026 EQU   VOFFLG
VOFNEUT  EQU   VOFFLG
VOFREAL  EQU   VOFFLG
VOFRES1  EQU   VOFLIST+5
VOFOPCD  EQU   VOFLIST+4
VOFLEN   EQU   VOFLIST
COTBVOL  EQU   CTLIST+12
COTBEXTS EQU   CTLIST+8
@NM00025 EQU   COTBFLG+1
COTBTRI  EQU   COTBFLG+1
COTBTRA  EQU   COTBFLG+1
COTBTRY  EQU   COTBFLG+1
COTBTRX  EQU   COTBFLG+1
@NM00024 EQU   COTBFLG
COTBTID  EQU   COTBFLG
@NM00023 EQU   CTLIST+5
COTBOP   EQU   CTLIST+4
COTBLL   EQU   CTLIST
CCRTCSN  EQU   CCLIST+20
CCRTVOL  EQU   CCLIST+8
@NM00022 EQU   CCRTFLG
CCRTCRT2 EQU   CCRTFLG
CCRTCRT1 EQU   CCRTFLG
CCRTRES1 EQU   CCLIST+5
CCRTOPCD EQU   CCLIST+4
CCRTLEN  EQU   CCLIST
CVOLVEXT EQU   CVLIST+36
CVOLRES2 EQU   CVLIST+34
CVOLRUA  EQU   CVLIST+32
CVOLCSN  EQU   CVLIST+20
CVOLID   EQU   CVLIST+8
@NM00021 EQU   CVOLFLG
CVOCRCRV EQU   CVOLFLG
CVOCRCR  EQU   CVOLFLG
CVOCRDAS EQU   CVOLFLG
CVODASCR EQU   CVOLFLG
CVOLRES1 EQU   CVLIST+5
CVOLOPCD EQU   CVLIST+4
CVOLLEN  EQU   CVLIST
@NM00020 EQU   MODCLIST+50
MODSEQNO EQU   MODCLIST+49
@NM00019 EQU   MODVFLG
MODWINH  EQU   MODVFLG
MODBIND  EQU   MODVFLG
MODSCR   EQU   MODVFLG
MODEXCL  EQU   MODVFLG
MODSECUR EQU   MODVFLG
@NM00018 EQU   MODVFLG
MODNCSN  EQU   MODCLIST+36
MODNLXYZ EQU   MODCLIST+34
MODNVOL  EQU   MODCLIST+28
MODCSN   EQU   MODCLIST+16
MODLXYZ  EQU   MODCLIST+14
MODVOLID EQU   MODCLIST+8
@NM00017 EQU   MODLOCAT
MODLSEQ2 EQU   MODLOCAT
MODLSEQ1 EQU   MODLOCAT
MODLLXYZ EQU   MODLOCAT
MODLVOL  EQU   MODLOCAT
MODLCSN  EQU   MODLOCAT
@NM00016 EQU   MODFUNC
MODMOVE  EQU   MODFUNC
MODCREAT EQU   MODFUNC
MODUPDTE EQU   MODFUNC
MODRES1  EQU   MODCLIST+5
MODORDER EQU   MODCLIST+4
MODLEN   EQU   MODCLIST
DEFVVEXT EQU   DEFLIST+128
DEFTLAB  EQU   DEFVDATA+71
DEFR60   EQU   DEFVDATA+43
DEFOWNID EQU   DEFVDATA+29
DEFR55   EQU   DEFVDATA+3
DEFACSEC EQU   DEFVDATA+2
DEFR50   EQU   DEFVDATA
@NM00015 EQU   DEFLIST+48
DEFVCSN2 EQU   DEFLIST+36
DEFVCSN1 EQU   DEFLIST+24
@NM00014 EQU   DEFLIST+22
DEFVNVOL EQU   DEFLIST+16
@NM00013 EQU   DEFLIST+15
@NM00012 EQU   DEFVVFLG
DEFVWINH EQU   DEFVVFLG
DEFVBIND EQU   DEFVVFLG
@NM00011 EQU   DEFVVFLG
DEFVEXCL EQU   DEFVVFLG
DEFVSEC  EQU   DEFVVFLG
@NM00010 EQU   DEFVVFLG
DEFVCECT EQU   DEFVVFLG
DEFVOLD  EQU   DEFLIST+8
DEFVLID  EQU   DEFVLIB
@NM00009 EQU   DEFVLIB
DEFVDACT EQU   DEFVFLG
DEFVACT  EQU   DEFVFLG
DEFVRNTR EQU   DEFVFLG
DEFVELTR EQU   DEFVFLG
DEFVREP  EQU   DEFVFLG
DEFVRNM  EQU   DEFVFLG
DEFVELM  EQU   DEFVFLG
DEFVCR   EQU   DEFVFLG
@NM00008 EQU   DEFLIST+5
DEFVOPCD EQU   DEFLIST+4
DEFVLEN  EQU   DEFLIST
MCRTVEXT EQU   MVLIST+44
MCRTRES4 EQU   MVLIST+36
MCRTCSN  EQU   MVLIST+24
MCRTRES3 EQU   MVLIST+16
MCRTRES2 EQU   MVLIST+8
MCRTLD   EQU   MCRTLIB
@NM00007 EQU   MCRTLIB
@NM00006 EQU   MCRTFLG
MCRTSCT  EQU   MCRTFLG
MCRTTRAN EQU   MCRTFLG
@NM00005 EQU   MCRTFLG
MCRTRES1 EQU   MVLIST+5
MCRTOPCD EQU   MVLIST+4
MCRTLEN  EQU   MVLIST
@NM00004 EQU   AREXT
@NM00003 EQU   ARLIST+25
ARVOL    EQU   ARLIST+8
@NM00002 EQU   ARFLG
ARINH    EQU   ARFLG
ARBDUBD  EQU   ARFLG
@NM00001 EQU   ARLIST+5
@NM00090 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00089 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00088 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00087 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00086 EQU   FLCFSA
@NM00085 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00084 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00083 EQU   FLCIOA
@NM00082 EQU   FLCMCLA+15
@NM00081 EQU   FLCMCLA+14
@NM00080 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00079 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00078 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00077 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00076 EQU   FLCPER
@NM00075 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00074 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00073 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00072 EQU   FLCPIILC
@NM00071 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00070 EQU   FLCSVILC
@NM00069 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00068 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00067 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RC00351 EQU   @RC00348
@RF00386 EQU   @RC00384
@RF00395 EQU   @RC00393
@RF00428 EQU   @RC00423
@RC00514 EQU   @RC00511
@RF00531 EQU   @RC00508
@RC00559 EQU   @RC00555
@RC00557 EQU   @RC00555
@RC00580 EQU   @RC00577
@RC00675 EQU   @EL00005
@RC00664 EQU   @EL00005
CCWEXIT  EQU   @EL00005
IOBLKEXT EQU   @EL00007
@RF00750 EQU   @EL00008
MOVEEXIT EQU   @EL00008
@RF00754 EQU   @EL00008
ERR1EXIT EQU   @EL00009
ERR2EXIT EQU   @EL00010
@RF00789 EQU   @EL00011
IDEXIT   EQU   @EL00011
@RC00872 EQU   @RC00870
@RC00884 EQU   @RC00882
@RC00896 EQU   @RC00894
@RC00908 EQU   @RC00906
@RC00920 EQU   @RC00918
@RF00923 EQU   @RC00918
@RC00925 EQU   @RC00918
@RF00948 EQU   @RC00946
@RF00995 EQU   @RC00934
@RF01002 EQU   @RC00998
@RC01000 EQU   @RC00998
@RC01004 EQU   @RC00998
@RF01018 EQU   @RC01014
@RC01016 EQU   @RC01014
@RC01020 EQU   @RC01014
@RF01034 EQU   @RC01030
@RC01032 EQU   @RC01030
@RC01036 EQU   @RC01030
@RC01049 EQU   @RC01047
@RF01061 EQU   @RC01059
SYNEXIT  EQU   @EL00013
@RC01104 EQU   @EL00014
@RC01099 EQU   @EL00014
@RC01094 EQU   @EL00014
@RC01089 EQU   @EL00014
@RC01084 EQU   @EL00014
@RC01079 EQU   @EL00014
@RC01074 EQU   @EL00014
@RC01069 EQU   @EL00014
LENEXIT  EQU   @EL00014
ASIDEXIT EQU   @EL00015
@RF01132 EQU   @EL00015
@RC01130 EQU   @EL00015
@RC01128 EQU   @EL00015
@RC01126 EQU   @EL00015
@RC01124 EQU   @EL00015
@RC01122 EQU   @EL00015
@RC01120 EQU   @EL00015
@RC01118 EQU   @EL00015
@RC01116 EQU   @EL00015
@RC01114 EQU   @EL00015
@RF01180 EQU   @EL00016
@RC01191 EQU   @EL00016
@PB00016 EQU   @PB00017
@RF01229 EQU   @RC01227
@RF01274 EQU   @RC01227
@RF01300 EQU   @RC01298
@RC01352 EQU   @RC01298
@RC01302 EQU   @RC01298
@RF00518 EQU   @RC00514
@RF01071 EQU   @RC01069
@RF01076 EQU   @RC01074
@RF01081 EQU   @RC01079
@RF01086 EQU   @RC01084
@RF01091 EQU   @RC01089
@RF01096 EQU   @RC01094
@RF01101 EQU   @RC01099
@PB00015 EQU   @PB00016
@RC01317 EQU   @RC01302
@RC01304 EQU   @RC01302
@RC01327 EQU   @RC01302
@RC01363 EQU   @RC01352
@RC01354 EQU   @RC01352
@PB00014 EQU   @PB00015
@RC01306 EQU   @RC01304
@RF01320 EQU   @RC01317
@RC01338 EQU   @RC01327
@RC01329 EQU   @RC01327
@RF01357 EQU   @RC01354
@RF01366 EQU   @RC01363
@PB00013 EQU   @PB00014
@RF01309 EQU   @RC01306
@RF01332 EQU   @RC01329
@RF01341 EQU   @RC01338
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGC0012F,(C'PLS1237',0701,78166)
