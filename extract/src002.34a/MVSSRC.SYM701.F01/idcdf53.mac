 /********************************************************************/
 /*                                                          @Y30LB11*/
 /* PROCEDURE NAME - SCRCOPY                                 @Y30LB11*/
 /*                                                          @Y30LB11*/
 /* FUNCTION - THE PRINCIPLE FUNCTION OF THIS ROUTINE IS TO  @Y30LB11*/
 /*            SCRATCH AN MSS COPY VOLUME.                   @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*            IDC0088I CARTRIDGES CSN (CSN) SCRATCHED FOR   @Y30LB11*/
 /*            COPY YYDDD.                                   @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*            IDC0098I ** LOCATION OF VOLUME: (LOCATION)    @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*            IDC2076I ** CART CSN (CSN) NOT IN MSF FOR     @Y30LB11*/
 /*            COPY YYDDD.                                   @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*            IDC2087I ** CART CSN (CSN) NOT SCRATCHED FOR  @Y30LB11*/
 /*            COPY YYDDD.                                   @Y30LB11*/
 /*                                                          @Y30LB11*/
 /* INPUT - A PARAMETER CONSISTING OF A SINGLE BYTE.  THE    @Y30LB11*/
 /*         FIRST BIT OF THE BYTE IS SET TO '1' BY SCRCOPY   @Y30LB11*/
 /*         AN ERROR OCCURS UPDATING THE INVENTORY.          @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*         THE COPY RECORD MUST HAVE BEEN READ AND THE      @Y30LB11*/
 /*         COPYV MAPPING MACRO BASED ON THE RECORD PRIOR TO @Y30LB11*/
 /*         THE CALL TO SCRCOPY.   FURTHER, THE DEFLIST      @Y30LB11*/
 /*         MUST HAVE BEEN INCLUDED PRIOR TO THE CALL TO     @Y30LB11*/
 /*         SCRCOPY.                                         @Y30LB11*/
 /*                                                          @Y30LB11*/
 /* OUTPUT - FIRST BIT OF INPUT BYTE SET IF INVENTORY ERROR. @Y30LB11*/
 /*          RETURN CODE IN REGISTER 15                      @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*          0 - CARTRIDGE OR CARTRIDGES FOR COPY VOLUME     @Y30LB11*/
 /*              SCRATCHED SUCCESSFULLY.                     @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*          4 - CARTRIDGES NOT IN LIBRARY, OR DSM FAILURE   @Y30LB11*/
 /*              OCCURRED.                                   @Y30LB11*/
 /*                                                          @Y30LB11*/
 /*          8 - USSC UMACRO COULD NOT OBTAIN STORAGE        @Y30LB11*/
 /*              FOR ECB/MESSAGE AREA.                       @Y30LB11*/
 /*                                                          @Y30LB11*/
 /********************************************************************/

 SCRCOPY:                                                  /*@Y30LB11*/
    PROCEDURE(SCINPUT);                                    /*@Y30LB11*/
    DCL SCCMPTR PTR(31);            /* PTR TO ECB/MSG AREA   @Y30LB11*/
    DCL SCECBCD FIXED(8);           /* SCRCOPY ECB CODE      @Y30LB11*/
    DCL SCRCOND FIXED(15);          /* SCRCOPY COND CODE     @Y30LB11*/
    DCL SCMSGCD PTR(31);            /* SSCMSG REASON CODE    @Y30LB11*/
    DCL SCMSGPTR PTR(31);           /* MESSAGE AREA POINTER  @Y30LB11*/
    DCL SCDEFLST CHAR(LENGTH(DEFLIST));/* SCRCOPY DEFLIST    @Y30LB11*/
    DCL SCDEFPTR PTR(31);           /* DEFLIST POINTER       @Y30LB11*/
    DCL SCDDSTRU PTR(31);           /* DARGLIST POINTER      @Y30LB11*/
                            /* DARGLIST WITH UP TO 3 INSERTS @Y30LB11*/
    DCL SCDARG CHAR(LENGTH(DARGLIST)+2*(LENGTH(DARGARY))); /*@Y30LB11*/

    DCL 1 SCINPUT BIT(8),           /* PARAMETER LIST        @Y30LB11*/
      2 SCERRFLG BIT(1),            /* RETURNED FLAG         @Y30LB11*/
      2 * BIT(7);                   /* UNUSED                @Y30LB11*/

    /* CONSTANT SECTION DECLARATIONS FOR SCRCOPY             @Y30LB11*/

    DCL 1 SCBLANKS CHAR(30) STATIC LOCAL,/* BLANK FIELD      @Y30LB11*/
      2 * (30) CHAR(1) INIT((30)'40'X);                    /*@Y30LB11*/

    DCL SCCSN2# FIXED(15) CONSTANT(1);/* CSN2 INSERT         @Y30LB11*/
    DCL SCDATE# FIXED(15) CONSTANT(2);/* DATE INSERT         @Y30LB11*/
    DCL SCECBLEN FIXED(15) CONSTANT(4);/* ECB LENGTH         @Y30LB11*/
    DCL SCNOCSNS BIT(8) CONSTANT('23'X);/* NEITHER CSN FOUND @Y30LB11*/
    DCL SCNOCSN1 BIT(8) CONSTANT('26'X);/* CSN1 NOT FOUND    @Y30LB11*/
    DCL SCNOCSN2 BIT(8) CONSTANT('2A'X);/* CSN2 NOT FOUND    @Y30LB11*/
    DCL SCCOMMSG CHAR(3) CONSTANT('CM0');/* STATIC TEST MOD  @Y30LB11*/
    DCL SCM0088I PTR(8) CONSTANT(18);/* CARTS SCRATCHED      @Y30LB11*/
    DCL SCM0098I PTR(8) CONSTANT(2);/* LOCATION OF VOLUME    @Y30LB11*/
    DCL SCM2076I PTR(8) CONSTANT(30);/* CART NOT SCRATCHED   @Y30LB11*/
    DCL SCM2087I PTR(8) CONSTANT(19);/* CARTS NOT IN LIBRARY @Y30LB11*/
 @EJECT;                                                   /*@Y30LB11*/

    /* TRACE AT ENTRY TO SCRCOPY PROCEDURE                   @Y30LB11*/

    UTRACE='SCSC';                                         /*@Y30LB11*/

    /* INITIALIZATION CONSISTS OF ZEROING THE RETURN CODE, ZEROING
       THE DEFLIST, AND THE PRINT ARGUMENT LIST.             @Y30LB11*/

    SCRCOND=0;                                             /*@Y30LB11*/

    SCDDSTRU=ADDR(SCDARG);                                 /*@Y30LB11*/
    SCDEFPTR=ADDR(SCDEFLST);                               /*@Y30LB11*/
    SCDEFLST=NULLAREA;                                     /*@Y30LB11*/
    SCDARG=NULLAREA;                                       /*@Y30LB11*/
    SCDDSTRU->DARGSMOD=SCCOMMSG;/* COMMON MESSAGE MODULE     @Y30LB11*/

    /* INDICATE AN INACTIVE VOLUME IS TO BE SCRATCHED AND PICK
       UP THE CSN1 FROM THE COPY RECORD.                     @Y30LB11*/

    SCDEFPTR->DEFVELTR=ON;                                 /*@Y30LB11*/
    SCDEFPTR->DEFVCSN1=COPCSN1;                            /*@Y30LB11*/

    /* FULL REGION DUMP BEFORE EXECUTING THE ICBDEFV MACRO.  @Y30LB11*/

    UDUMP(GDTTBL,'SCDF');                                  /*@Y30LB11*/

    /* THE USSC MACRO IS ISSUED TO EXECUTE THE ICBDEFV MACRO @Y30LB11
       TO SCRATCH THE COPY.                                  @Y30LB11*/

    USSC(GDTTBL,DEFINE,SCDEFPTR,SCMSGCD,SCECBCD,SCMSGPTR); /*@Y30LB11*/
    USAVERC;                                               /*@Y30LB11*/

 @EJECT;                                                   /*@Y30LB11*/
    /* A RETURN CODE OF 0 OR 12 INDICATES THAT THE MACRO WAS EXECUTED
       SUCCESSFULLY.                                         @Y30LB11*/

    IF TESTRC=RCOK×TESTRC=RCVVIERR THEN                    /*@Y30LB11*/
      DO;                                                  /*@Y30LB11*/

        /* IF A RETURN CODE OF 12 IS PASSED, SCERRFLG IS SET ON
           TO INDICATE THAT THE INVENTORY RECORD WAS NOT UPDATED.
                                                             @Y30LB11*/

        IF TESTRC=RCVVIERR THEN                            /*@Y30LB11*/
          SCERRFLG=ON;                                     /*@Y30LB11*/

        /* THE MESSAGE: CARTRIDGES CSN (CSN) SCRATCHED FOR COPY YYDDD,
           IS ISSUED.                                        @Y30LB11*/

        SCCMPTR=SCMSGPTR+SCECBLEN;                         /*@Y30LB11*/
        SCDDSTRU->DARGSENT=SCM0088I;                       /*@Y30LB11*/
        SCDDSTRU->DARGDBP=ADDR(SCCMPTR->CMCSN1);           /*@Y30LB11*/
        SCDDSTRU->DARGILP=LENGTH(CMCSN1);                  /*@Y30LB11*/
        SCDDSTRU->DARGCNT=2;                               /*@Y30LB11*/
        SCDDSTRU->DARGINS(1)=SCCSN2#;                      /*@Y30LB11*/
        SCDDSTRU->DARGINL(1)=LENGTH(CMCSN2);               /*@Y30LB11*/
        SCDDSTRU->DARGDTM(1)=ADDR(SCCMPTR->CMCSN2);        /*@Y30LB11*/
        SCDDSTRU->DARGINS(2)=SCDATE#;                      /*@Y30LB11*/
        SCDDSTRU->DARGINL(2)=LENGTH(COPDATE);              /*@Y30LB11*/
        SCDDSTRU->DARGDTM(2)=ADDR(COPDATE);                /*@Y30LB11*/
        UPRINT(GDTTBL,PRTFILE,SCDDSTRU);                   /*@Y30LB11*/

        /* BECAUSE THE MESSAGE AREA POINTER IS SET, AND THE ICBDEFV
           MACRO IS SUCCESSFUL, THE UFSPACE IS ISSUED TO FREE THE
           ECB/MESSAGE AREA GOTTEN BY THE ICBDEFV MACRO.     @Y30LB11*/

        UFSPACE(GDTTBL,SCMSGPTR);                          /*@Y30LB11*/
      END;                                                 /*@Y30LB11*/

 @EJECT;                                                   /*@Y30LB11*/
    /* A RETURN CODE OF 4 OR 8 INDICATES THAT THE MACRO WAS NOT
       EXECUTED SUCCESSFULLY.                                @Y30LB11*/

    ELSE                                                   /*@Y30LB11*/
      DO;                                                  /*@Y30LB11*/

          /* A RETURN CODE OF 8 FROM THE ICBDEFV MACRO INDICATES
             THAT NO CORE WAS AVAILABLE FOR THE ECB/MESSAGE AREA.
             THE MESSAGE: ** CART CSN (CSN) NOT SCRATCHED COPY
             YYDDD, IS ISSUED AND THE RETURN CODE IS SET TO 8.
                                                             @Y30LB11*/

        IF TESTRC=RCNOCOR THEN                             /*@Y30LB11*/
          DO;                                              /*@Y30LB11*/
            SCDDSTRU->DARGSENT=SCM2087I;                   /*@Y30LB11*/
            SCDDSTRU->DARGDBP=ADDR(COPCSN1);               /*@Y30LB11*/
            SCDDSTRU->DARGILP=LENGTH(COPCSN1);             /*@Y30LB11*/
            SCDDSTRU->DARGCNT=2;                           /*@Y30LB11*/
            SCDDSTRU->DARGINS(1)=SCCSN2#;                  /*@Y30LB11*/
            SCDDSTRU->DARGINL(1)=LENGTH(COPCSN2);          /*@Y30LB11*/
            SCDDSTRU->DARGDTM(1)=ADDR(COPCSN2);            /*@Y30LB11*/
            SCDDSTRU->DARGINS(2)=SCDATE#;                  /*@Y30LB11*/
            SCDDSTRU->DARGINL(2)=LENGTH(COPDATE);          /*@Y30LB11*/
            SCDDSTRU->DARGDTM(2)=ADDR(COPDATE);            /*@Y30LB11*/
            UPRINT(GDTTBL,PRTFILE,SCDDSTRU);               /*@Y30LB11*/

            /* SET THE RETURN CODE TO 8 INDICATING THAT THE USSC
               UMACRO COULD NOT OBTAIN STORAGE FOR THE ECB/MESSAGE
               AREA.                                         @Y30LB11*/

            SCRCOND=RCNOCOR;                               /*@Y30LB11*/
          END;                                             /*@Y30LB11*/

        /* A RETURN CODE OF 4 INDICATES THAT THE ICBDEFV MACRO WAS
           EXECUTED, BUT FAILED.                             @Y30LB11*/

        ELSE                                               /*@Y30LB11*/
          DO;                                              /*@Y30LB11*/

          /* THE SSCMSG ROUTINE IS CALLED TO PRINT COMMON MESSAGES
             FROM IDCTSSS0 AND IDCTSSS1 AS DIRECTED BY THE REASON
             CODE PASSED BACK FROM THE ICBDEFV MACRO.        @Y30LB11*/

            CALL SSCMSG(SCMSGCD);                          /*@Y30LB11*/

            /* IF EITHER OR BOTH CARTRIDGES ARE NOT IN THE MSF
             A MESSAGE INDICATING THAT SITUATION IS PRINTED. @Y30LB11*/

            IF SCMSGCD=SCNOCSN1 ×                          /*@Y30LB11*/
               SCMSGCD=SCNOCSN2 ×                          /*@Y30LB11*/
               SCMSGCD=SCNOCSNS THEN                       /*@Y30LB11*/
              DO;                                          /*@Y30LB11*/

                /* SET UP TO ISSUE MESSAGE THAT CARTS ARE OUT
.                  OF THE MSF.                               @Y30LB11*/

                SCDDSTRU->DARGSENT=SCM2076I;               /*@Y30LB11*/

                /* INSERT COPYDATE FROM COPY RECORD          @Y30LB11*/

                SCDDSTRU->DARGINS(1)=SCDATE#;              /*@Y30LB11*/
                SCDDSTRU->DARGINL(1)=LENGTH(COPDATE);      /*@Y30LB11*/
                SCDDSTRU->DARGDTM(1)=ADDR(COPDATE);        /*@Y30LB11*/

                /* IF 2 CARTS OUT OF LIBRARY, INSERT 2 CSNS  @Y30LB11*/

                IF SCMSGCD=SCNOCSNS THEN
                  DO;                                      /*@Y30LB11*/
                    SCDDSTRU->DARGDBP=ADDR(COPCSN1);       /*@Y30LB11*/
                    SCDDSTRU->DARGILP=LENGTH(COPCSN1);     /*@Y30LB11*/
                    SCDDSTRU->DARGCNT=2;                   /*@Y30LB11*/
                    SCDDSTRU->DARGINS(2)=SCCSN2#;          /*@Y30LB11*/
                    SCDDSTRU->DARGINL(2)=LENGTH(COPCSN2);  /*@Y30LB11*/
                    SCDDSTRU->DARGDTM(2)=ADDR(COPCSN2);    /*@Y30LB11*/
                  END;                                     /*@Y30LB11*/

                /* IF CSN1 OUT OF LIBRARY, INSERT CSN1      @Y30LB11*/

                IF SCMSGCD=SCNOCSN1 THEN
                  DO;                                      /*@Y30LB11*/
                    SCDDSTRU->DARGDBP=ADDR(COPCSN1);       /*@Y30LB11*/
                    SCDDSTRU->DARGILP=LENGTH(COPCSN1);     /*@Y30LB11*/
                    SCDDSTRU->DARGCNT=1;                   /*@Y30LB11*/
                  END;                                     /*@Y30LB11*/

                /* IF CSN2 OUT OF LIBRARY, INSERT CSN2      @Y30LB11*/

                IF SCMSGCD=SCNOCSN2 THEN
                  DO;                                      /*@Y30LB11*/
                    SCDDSTRU->DARGDBP=ADDR(COPCSN2);       /*@Y30LB11*/
                    SCDDSTRU->DARGILP=LENGTH(COPCSN2);     /*@Y30LB11*/
                    SCDDSTRU->DARGCNT=1;                   /*@Y30LB11*/
                  END;                                     /*@Y30LB11*/

                /* ISSUE THE UPRINT MACRO TO PRINT THE MESSAGE       */
                                                           /*@Y30LB11*/

                UPRINT(GDTTBL,PRTFILE,SCDDSTRU);           /*@Y30LB11*/

                /* IF THE LOCATION OF THE VOLUME HAS BEEN DETERMINED
                   THE MESSAGE: ** LOCATION OF VOLUME: (LOCATION), IS
                   ISSUED.                                   @Y30LB11*/

                IF COPDEST^=SCBLANKS THEN                  /*@Y30LB11*/
                  DO;                                      /*@Y30LB11*/
                    SCDARG=NULLAREA;                       /*@Y30LB11*/
                    SCDDSTRU->DARGSENT=SCM0098I;           /*@Y30LB11*/
                    SCDDSTRU->DARGSMOD=SCCOMMSG;           /*@Y30LB11*/
                    SCDDSTRU->DARGDBP=ADDR(COPDEST);       /*@Y30LB11*/
                    SCDDSTRU->DARGILP=LENGTH(COPDEST);     /*@Y30LB11*/
                    UPRINT(GDTTBL,PRTFILE,SCDDSTRU);       /*@Y30LB11*/
                  END;                                     /*@Y30LB11*/
          END;                                             /*@Y30LB11*/

        /* A RETURN CODE OF 4 FROM THE ICBDEFV MACRO INDICATES
           THAT THE ICBDEFV MACRO FAILED.  A MESSAGE INDICATING
           THAT COPY VOLUMES WERE NOT SCRATCHED, IS PRINTED. @Y30LB11*/

        ELSE
          DO;                                              /*@Y30LB11*/
            SCDDSTRU->DARGSENT=SCM2087I;                   /*@Y30LB11*/
            SCDDSTRU->DARGDBP=ADDR(COPCSN1);               /*@Y30LB11*/
            SCDDSTRU->DARGILP=LENGTH(COPCSN1);             /*@Y30LB11*/
            SCDDSTRU->DARGCNT=2;                           /*@Y30LB11*/
            SCDDSTRU->DARGINS(1)=SCCSN2#;                  /*@Y30LB11*/
            SCDDSTRU->DARGINL(1)=LENGTH(COPCSN2);          /*@Y30LB11*/
            SCDDSTRU->DARGDTM(1)=ADDR(COPCSN2);            /*@Y30LB11*/
            SCDDSTRU->DARGINS(2)=SCDATE#;                  /*@Y30LB11*/
            SCDDSTRU->DARGINL(2)=LENGTH(COPDATE);          /*@Y30LB11*/
            SCDDSTRU->DARGDTM(2)=ADDR(COPDATE);            /*@Y30LB11*/
            UPRINT(GDTTBL,PRTFILE,SCDDSTRU);               /*@Y30LB11*/
          END;                                             /*@Y30LB11*/

        /* INDICATE THAT SCRCOPY FAILED WITH A RETURN CODE OF 4.     */
                                                           /*@Y30LB11*/

        SCRCOND=RCFAIL;                                    /*@Y30LB11*/
        END;                                               /*@Y30LB11*/
      END;                                                 /*@Y30LB11*/

    /* RETURN TO SCRCOPY CALLER                              @Y30LB11*/

    RETURN CODE(SCRCOND);                                  /*@Y30LB11*/
    END SCRCOPY;                                           /*@Y30LB11*/
