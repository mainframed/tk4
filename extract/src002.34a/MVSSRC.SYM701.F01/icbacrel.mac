* %/* START OF SPECIFICATIONS****
         MACRO
&SYMBOL  ICBACREL &MF=,&TYPE=,&FLAGS=,&VOLID=,&ECB=,&EXTS=,            *
               &HOSTID=,&NMEXTS=
.************************************************************  @ZA28964
.*                                                             @Y30LB02
.* MODULE-NAME = ICBACREL                                      @Y30LB02
.*                                                             @Y30LB02
.* DESCRIPTIVE-NAME = ACQUIRE/RELINQUISH MACRO                 @Y30LB02
.*                                                             @Y30LB02
.* COPYRIGHT = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.* STATUS = OPERATING SYSTEM = VS/2 REL 3                      @ZA28964
.*                                                             @Y30LB02
.* FUNCTION = THE ACQUIRE REQUEST IS ISSUED IF THE CALLER      @Y30LB02
.*            WISHES TO HAVE DASD SPACE ALLOCATED FOR A        @Y30LB02
.*            DATA RESOURCE AND, OPTIONALLY, IF THE DATA       @Y30LB02
.*            EXTENTS ARE TO BE STAGED. THE RELINQUISH         @Y30LB02
.*            REQUEST IS ISSUED WHEN A DATA RESOURCE IS TO     @Y30LB02
.*            HAVE ITS DASD SPACE MADE AVAILABLE FOR           @Y30LB02
.*            REALLOCATION AND, OPTIONALLY, IF ITS DASD        @Y30LB02
.*            EXTENTS ARE TO BE DESTAGED FROM THE              @Y30LB02
.*            REAL DASD.                                       @Y30LB02
.*                                                             @Y30LB02
.* NOTES =                                                     @Y30LB02
.*                                                             @Y30LB02
.*   CODE = MACRO IS BILINGUALLY CODED. IN THE ORIGINAL        @ZA28964
.*          VERSION OF THIS MACRO, THE BAL AND PL/S SECTIONS   @ZA28964
.*          ASSIGNED DIFFERENT LABELS TO THE SAME REQUEST      @ZA28964
.*          BLOCK STRUCTURE. TO MAINTAIN COMPATABILITY, THE    @ZA28964
.*          ALTERNATE PL/S LABELS HAVE BEEN ADDED TO THE BAL   @ZA28964
.*          REQUEST BLOCKS, AND THE ALTERNATE BAL LABELS       @ZA28964
.*          ADDED TO THE PL/S REQUEST BLOCKS.                  @ZA28964
.*                                                             @Y30LB02
.*   DEPENDENCIES = NONE                                       @Y30LB02
.*                                                             @Y30LB02
.*   RESTRICTIONS = THE PREFIXES ICB AND AR SHOULD BE          @Y30LB02
.*                  AVOIDED IN THE INVOKING MODULE LABELS.     @ZA28964
.*                  SVC 126, WHICH IS INVOKED BY THIS MACRO,   @ZA28964
.*                  REQUIRES THAT THE CALLER BE APF-           @ZA28964
.*                  AUTHORIZED, IN PROTECTION KEY 0 OR         @ZA28964
.*                  IN SUPERVISOR STATE.                       @ZA28964
.*                                                             @Y30LB02
.*   REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS    @Y30LB02
.*                          BY MACROS: R0,R1,R14 AND R15       @Y30LB02
.*                                                             @Y30LB02
.*   PATCH-LABEL = NONE                                        @Y30LB02
.*                                                             @Y30LB02
.* MODULE-TYPE = MACRO                                         @Y30LB02
.*                                                             @Y30LB02
.*   PROCESSOR = ASSEM                                         @Y30LB02
.*               PL/S                                          @Y30LB02
.*                                                             @Y30LB02
.*   ATTRIBUTES = REUSABLE                                     @Y30LB02
.*                REENTRANT (EXECUTE FORM)                     @Y30LB02
.*                                                             @Y30LB02
.* ENTRY-POINT = ICBACREL                                      @Y30LB02
.*                                                             @Y30LB02
.*   PURPOSE = SEE FUNCTION                                    @Y30LB02
.*                                                             @Y30LB02
.*   LINKAGE = SEE INPUT                                       @ZA28964
.*                                                             @ZA28964
.* INPUT = CODE THE ICBACREL MACRO USING ONE OF THE            @Y30LB02
.*     FOLLOWING SYNTAX FORMS (THE '(R)' REGISTER PARAMETER    @Y30LB02
.*     FORM IS VALID ONLY IN THE BAL VERSIONS).                @Y30LB02
.*                                                             @Y30LB02
.*   LIST FORMS =                                              @Y30LB02
.*                                                             @Y30LB02
.*     BAL - ICBACREL MF=(L,MAP),TYPE=ACQ×REL                  @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF=L,TYPE                       @Y30LB02
.*                                                             @Y30LB02
.*     PL/S- ICBACREL MF(L,NAME,ATTR) TYPE(ACQ×REL)            @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF(L,NAME) TYPE                 @Y30LB02
.*                                                             @Y30LB02
.*   STANDARD FORMS =                                          @Y30LB02
.*                                                             @Y30LB02
.*     BAL - ICBACREL TYPE=ACQ×REL,EXTS=NAME×(R),              @Y30LB02
.*                    NMEXTS=NAME×(R),VOLID=NAME×(R),          @Y30LB02
.*                    ECB=NAME×(R),FLAGS=NAME×(R),             @Y30LB02
.*                    HOSTID=NAME×(R)                          @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - TYPE,EXTS,NMEXTS,VOLID          @Y30LB02
.*                                                             @Y30LB02
.*     PL/S- ICBACREL TYPE(ACQ×REL) EXTS(NAME) NMEXTS(NAME)    @Y30LB02
.*                    VOLID(NAME) ECB(NAME) FLAGS(NAME)        @Y30LB02
.*                    HOSTID(NAME)                             @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - TYPE EXTS NMEXTS VOLID          @Y30LB02
.*                                                             @Y30LB02
.*   EXECUTE FORMS =                                           @Y30LB02
.*                                                             @Y30LB02
.*     BAL - ICBACREL MF=(E,NAME×(R))                          @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF=(E,NAME×(R))                 @Y30LB02
.*                                                             @Y30LB02
.*     PL/S- ICBACREL MF(E,NAME)                               @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF(E,NAME)                      @Y30LB02
.*                                                             @Y30LB02
.*   KEYWORD PARAMETERS =                                      @Y30LB02
.*                                                             @Y30LB02
.*     MF = MACRO FORMAT                                       @Y30LB02
.*                                                             @Y30LB02
.*       L = LIST FORM. THE EXPANSION OF THE LIST FORM         @Y30LB02
.*           PROVIDES ONLY THE PARAMETER REQUEST BLOCK.        @Y30LB02
.*           THE OPCODE AND BLOCK LENGTH FIELDS ARE            @Y30LB02
.*           FILLED IN BY THE MACRO AND THE REMAINING          @Y30LB02
.*           FIELDS ARE SET TO ZERO. IF ANY PARAMETERS         @Y30LB02
.*           BESIDES 'MF' AND 'TYPE' ARE SPECIFIED, THEY       @Y30LB02
.*           ARE IGNORED. (A WARNING IS ISSUED)                @Y30LB02
.*                                                             @ZA28964
.*         MAP = SPECIFIES THAT AN ASSEMBLER VERSION           @Y30LB02
.*             INVOCATION WILL PRODUCE A MAPPING DSECT         @Y30LB02
.*             LABELED 'ICBACREL'.                             @Y30LB02
.*                                                             @ZA28964
.*         NAME = LABEL ASSIGNED TO THE REQUEST BLOCK          @Y30LB02
.*             IN PL/S (REQUIRED IN PL/S VERSION).             @Y30LB02
.*                                                             @ZA28964
.*         ATTR = A PL/S ATTRIBUTE THAT WILL BE PLACED IN      @Y30LB02
.*             AN UNINITIALIZED REQUEST BLOCK DEFINITION.      @Y30LB02
.*             SOME ATTRIBUTE EXAMPLES ARE:                    @Y30LB02
.*                STATIC LOCAL, NONLOCAL, BASED(*), ETC        @Y30LB02
.*                                                             @Y30LB02
.*       NULL = STANDARD FORM IS INVOKED. THE EXPANSION        @Y30LB02
.*           OF THIS FORM CONSISTS OF A REQUEST BLOCK          @Y30LB02
.*           (ONLY IN THE FIRST INVOCATION OF THIS FORM        @Y30LB02
.*           IN ANY MODULE) LABELED 'ARLIST' IN THE PL/S       @ZA28964
.*           VERSION, A LINKAGE INSTRUCTION AND POSSIBLY       @ZA28964
.*           PARAMETER BINDING INSTRUCTIONS. ONLY A            @ZA28964
.*           SINGLE VOLUME REQUEST FOR UP TO 16 EXTENTS        @ZA28964
.*           MAY BE REQUESTED WITH A SINGLE STANDARD           @ZA28964
.*           FORM INVOCATION.                                  @ZA28964
.*                                                             @Y30LB02
.*       E = EXECUTE FORM. THE EXPANSION OF THIS FORM          @Y30LB02
.*           CONSISTS OF A LINKAGE INSTRUCTION AND             @Y30LB02
.*           POSSIBLY PARAMETER BINDING INSTRUCTIONS.          @Y30LB02
.*                                                             @ZA28964
.*         NAME = LABEL OF THE REQUEST BLOCK TO USE.           @Y30LB02
.*                                                             @Y30LB02
.*     TYPE = INDICATES WHETHER THE REQUEST IS FOR AN          @Y30LB02
.*         ACQUIRE (ACQ) OR RELINQUISH (REL).                  @Y30LB02
.*                                                             @Y30LB02
.*     EXTS = EXTENTS. LABEL OF THE AREA WHICH CONTAINS        @Y30LB02
.*         THE LIST OF EXTENTS OF THE RESOURCE. THE DATA       @Y30LB02
.*         FOR THIS AREA CAN BE EXTRACTED FROM EITHER          @Y30LB02
.*         THE DATA EXTENT BLOCK (DEB) OR THE DATA SET         @Y30LB02
.*         CONTROL BLOCK(S) (DSCB). THIS AREA IS COPIED        @Y30LB02
.*         INTO THE REQUEST BLOCK. THE FORMAT OF               @Y30LB02
.*         AREA POINTED TO BY THIS PARAMETER IS:               @Y30LB02
.*                                                             @ZA28964
.*          OFFSETS    LENGTH   DESCRIPTION                    @Y30LB02
.*          DEC HEX    (BYTES)                                 @Y30LB02
.*          -------    -------  -----------                    @Y30LB02
.*           0    (0)     2     BEGIN CC - EXTENT 1            @Y30LB02
.*           2    (2)     2     END CC - EXTENT 1              @Y30LB02
.*           4    (4)     2     BEGIN CC - EXTENT 2            @Y30LB02
.*             ...       ...          ...                      @Y30LB02
.*           60 (3C)      2     BEGIN CC - EXTENT 16           @Y30LB02
.*           62 (3E)      2     END CC - EXTENT 16             @Y30LB02
.*                                                             @Y30LB02
.*     NMEXTS = NUMBER OF EXTENTS. LABEL OF A ONE-BYTE FIELD   @Y30LB02
.*         WHICH CONTAINS THE NUMBER OF EXTENTS                @Y30LB02
.*         (FROM 1 TO 16) RECORDED IN THE AREA POINTED         @Y30LB02
.*         TO BY THE 'EXTS' PARAMETER. THE FIRST EXTENT        @Y30LB02
.*         IS RECORDED AT THE 'EXTS' ADDRESS.                  @Y30LB02
.*                                                             @Y30LB02
.*     VOLID = LABEL OF A 6-BYTE VOLUME IDENTIFIER OF THE      @ZA28964
.*         VOLUME ON WHICH THE DATA RESOURCE RESIDES.          @ZA28964
.*                                                             @Y30LB02
.*     ECB = LABEL OF THE EVENT CONTROL BLOCK. SPECIFIED IF A  @Y30LB02
.*         DELAYED RESPONSE IS INDICATED IN THE 'FLAGS'        @Y30LB02
.*         PARAMETER. A POST CODE IN THE RANGE X'70' -         @Y30LB02
.*         X'7F' WILL BE PLACED IN THE LOW-ORDER BYTE          @Y30LB02
.*         OF THE ECB ON COMPLETION OF THE REQUEST (X'7F'      @Y30LB02
.*         IS THE SUCCESSFUL COMPLETION CODE). THE ECB         @Y30LB02
.*         SHOULD BE SET TO BINARY ZERO BEFORE INVOKING        @Y30LB02
.*         THE MACRO. THE 'ARASID' FIELD OF THE REQUEST        @Y30LB02
.*         BLOCK IS USED BY SVC 126 TO RECORD THE              @Y30LB02
.*         ADDRESS SPACE ID OF THE INVOKING MODULE SO          @Y30LB02
.*         THAT THE CORRECT ECB MAY BE LOCATED FOR             @Y30LB02
.*         POSTING.                                            @Y30LB02
.*                                                             @Y30LB02
.*     FLAGS = LABEL OF A ONE-BYTE FIELD SPECIFYING THE        @Y30LB02
.*         ATTRIBUTES TO BE ASSOCIATED WITH THE REQUEST:       @Y30LB02
.*                                                             @Y30LB02
.*       ACQUIRE REQUESTS =                                    @Y30LB02
.*                                                             @Y30LB02
.*         1... ....    BIND. FORCES SPACE TO BE ALLOCATED     @Y30LB02
.*                        AND PREVENTS DE-ALLOCATION OF THAT   @ZA28964
.*                        SPACE UNTIL THE DATA IS RELINQUISHED @ZA28964
.*                        WITH THE UNBIND OPTION OR THE        @ZA28964
.*                        VOLUME IS DEMOUNTED.                 @ZA28964
.*         .1.. ....    DELAYED RESPONSE. FORCES SPACE TO BE   @Y30LB02
.*                        ALLOCATED AND THE CALLER NOTIFIED    @ZA28964
.*                        WHEN THE STAGING IS COMPLETE.        @ZA28964
.*         ..1. ....    INHIBIT STAGING. AFTER DASD SPACE IS   @Y30LB02
.*                        ALLOCATED, THE STAGING OF CYLINDERS  @ZA28964
.*                        OF THE DATA RESOURCE TO THE REAL     @ZA28964
.*                        DASD IS PREVENTED.                   @ZA28964
.*         ...1 ....    NEWLY ALLOCATED SECONDARY EXTENT.      @Y30LB02
.*                        CAUSES MSVC TO UPDATE THE RUNNING-   @ZA28964
.*                        SPACE COUNT FOR GENERAL-USE GROUP    @ZA28964
.*                        VOLUMES.                             @ZA28964
.*         .... 0000    RESERVED - MUST BE ZERO                @Y30LB02
.*                                                             @Y30LB02
.*       RELINQUISH REQUESTS =                                 @Y30LB02
.*                                                             @Y30LB02
.*         1... ....    UNBIND. RESETS THE BIND AND PERMITS    @Y30LB02
.*                        NORMAL DESTAGING TO RESUME. USED IN  @ZA28964
.*                        CONJUNCTION WITH THE ACQUIRE         @ZA28964
.*                        'BIND' FLAG.                         @ZA28964
.*         .1.. ....    DELAYED RESPONSE. CAUSES THE           @Y30LB02
.*                        DESTAGING OF ALL WRITTEN CYLINDERS   @ZA28964
.*                        (UNLESS THE 'INHIBIT DESTAGING'      @ZA28964
.*                        FLAG IS USED) AND THE CALLER         @ZA28964
.*                        NOTIFIED USING THE ECB BLOCK.        @ZA28964
.*         ..1. ....    INHIBIT DESTAGING. FREES THE DASD      @Y30LB02
.*                        SPACE WITHOUT DESTAGING THE DATA.    @ZA28964
.*         ..0. ....    DESTAGE. ALL CYLINDERS OF THE DATA     @Y30LB02
.*                        RESOURCE ON REAL DASD ARE MADE       @ZA28964
.*                        AVAILABLE FOR REALLOCATION. WHEN     @ZA28964
.*                        THE SPACE IS REQUIRED FOR            @ZA28964
.*                        ALLOCATION, ANY NECESSARY DESTAGING  @ZA28964
.*                        WILL BE DONE. IF 'DELAYED RESPONSE'  @ZA28964
.*                        IS SPECIFIED, THESE CYLINDERS ARE    @ZA28964
.*                        SCHEDULED FOR DESTAGING.             @ZA28964
.*         ...0 0000    RESERVED - MUST BE ZERO.               @Y30LB02
.*                                                             @Y30LB02
.*     HOSTID = LABEL OF A 5-BYTE FIELD WHICH CONTAINS THE     @Y30LB02
.*         MANUFACTURER'S CPU IDENTIFICATION. IF SET TO        @Y30LB02
.*         ZERO, SVC126 WILL FILL IN THE ID OF THE CALLING     @Y30LB02
.*         CPU.                                                @Y30LB02
.*                                                             @Y30LB02
.*   REQUEST BLOCK DESCRIPTION =                               @Y30LB02
.*                                                             @Y30LB02
.*     'ARLEN' = REQUEST BLOCK LENGTH FILLED IN BY THE         @Y30LB02
.*         MACRO(STANDARD AND LIST FORMS). 96 DEC BYTES.       @ZA28964
.*                                                             @Y30LB02
.*     'AROP' = OPCODE FILLED IN BY THE MACRO(STANDARD         @Y30LB02
.*         AND LIST FORMS). ACQUIRE = '02'X AND RELINQUISH =   @Y30LB02
.*         '04'X.                                              @Y30LB02
.*                                                             @Y30LB02
.*     'ARRES0' = RESERVED - MUST BE ZERO.                     @Y30LB02
.*                                                             @Y30LB02
.*     'ARFLAG' = FLAGS. CAN BE SET BY MACRO PARAMETER.        @Y30LB02
.*                                                             @Y30LB02
.*     'ARNMEXTS' = NUMBER OF EXTENTS. CAN BE SET BY           @Y30LB02
.*         MACRO PARAMETER.                                    @Y30LB02
.*                                                             @Y30LB02
.*     'ARVOL' = VOLID. CAN BE SET BY MACRO PARAMETER.         @Y30LB02
.*                                                             @Y30LB02
.*     'ARASID' = ADDRESS SPACE ID. SET BY SVC 126.            @Y30LB02
.*                                                             @Y30LB02
.*     'ARECB' = ECB. CAN BE SET BY MACRO PARAMETER.           @Y30LB02
.*                                                             @Y30LB02
.*     'ARHOST' = HOSTID. CAN BE SET BY SVC126 OR              @Y30LB02
.*         MACRO PARAMETER.                                    @Y30LB02
.*                                                             @Y30LB02
.*     'ARRES3' = RESERVED - MUST BE ZERO.                     @Y30LB02
.*                                                             @Y30LB02
.*     'ARCOMPC' = COMPLETION CODE. A 2-BYTE AREA WHICH        @Y30LB02
.*         IS FILLED IN BY SVC126 (MUST BE ZERO ON CALLING     @Y30LB02
.*         THE SVC). DETAILED COMPLETION CODE MESSAGES         @Y30LB02
.*         ARE EXPLAINED IN THE MSSC MESSAGES MANUAL, BUT      @Y30LB02
.*         THE FOLLOWING SITUATIONS CAN OCCUR WHEN             @Y30LB02
.*         CHAINED REQUESTS ARE MADE:                          @Y30LB02
.*                                                             @Y30LB02
.*       ACQUIRE CHAIN COMPLETION CODES =                      @Y30LB02
.*                                                             @Y30LB02
.*         FOR GENERAL ERRORS, THE SAME COMPLETION CODE        @Y30LB02
.*         WILL BE IN EACH REQUEST BLOCK IN THE CHAIN:         @Y30LB02
.*             X'173' = MSSC CONTROL BLOCK INDICATES THAT      @Y30LB02
.*                       THE MSC WAS NOT INITIALIZED           @Y30LB02
.*             X'174' = GETMAIN FAILURE FOR I/O BLOCKS         @Y30LB02
.*             X'175' = MSSC CONTROL BLOCK NOT AVAILABLE       @Y30LB02
.*                       (VS/2 ONLY)                           @Y30LB02
.*                                                             @Y30LB02
.*         FOR ERROR COMPLETION CODES IN THE RANGE X'000'      @Y30LB02
.*         TO X'0FF', THE REQUEST IN ERROR CONTAINS THE        @Y30LB02
.*         APPROPRIATE COMPLETION CODE. REQUESTS PRIOR TO      @Y30LB02
.*         THE ONE IN ERROR CONTAIN A COMPLETION CODE OF       @Y30LB02
.*         X'000', AND THE REQUESTED MSS ACTIVITY HAS BEEN     @Y30LB02
.*         INITIATED. IF APPROPRIATE FOR ANY OF THESE          @Y30LB02
.*         REQUESTS, WAIT FOR ITS DELAYED RESPONSE. EACH       @Y30LB02
.*         REQUEST SUBSEQUENT TO THE ONE IN ERROR CONTAINS     @Y30LB02
.*         A COMPLETION CODE OF X'170', WHICH MEANS THAT       @Y30LB02
.*         THE REQUEST WAS NOT PROCESSED ANY FURTHER. THERE    @Y30LB02
.*         WILL *NOT* BE ANY DELAYED RESPONSE FOR THESE        @Y30LB02
.*         REQUEST BLOCKS SINCE MSS ACTIVITY HAS NOT BEEN      @Y30LB02
.*         INITIATED.                                          @Y30LB02
.*                                                             @Y30LB02
.*         FOR THE ERROR CODES:                                @Y30LB02
.*             X'172' = PARAMETER NOT AS EXPECTED. EITHER      @Y30LB02
.*                       THE ECB ADDRESS WAS 0 WHEN A          @Y30LB02
.*                       DELAYED RESPONSE WAS REQUESTED, THE   @Y30LB02
.*                       THE LENGTH OF THE PARAMETER LIST      @Y30LB02
.*                       WAS INCORRECT, OR A WRONG NUMBER      @Y30LB02
.*                       OF EXTENTS WAS SPECIFIED.             @Y30LB02
.*             X'176' = INTERMIXED CHAIN FOR AN ACQUIRE.       @Y30LB02
.*         THE REQUEST IN ERROR CONTAINS THE APPROPRIATE       @Y30LB02
.*         COMPLETION CODE. REQUESTS PRIOR TO THE ONE IN       @Y30LB02
.*         ERROR CONTAIN A COMPLETION CODE OF X'000', BUT      @Y30LB02
.*         THE MSS ACTIVITY HAS *NOT* BEEN INITIATED -         @Y30LB02
.*         DO NOT WAIT FOR A DELAYED RESPONSE. EACH REQUEST    @Y30LB02
.*         SUBSEQUENT TO THE ONE IN ERROR CONTAINS A           @Y30LB02
.*         X'170' COMPLETION CODE - DO NOT WAIT FOR A          @Y30LB02
.*         DELAYED RESPONSE FROM THESE REQUESTS EITHER.        @Y30LB02
.*                                                             @Y30LB02
.*       RELINQUISH CHAIN COMPLETION CODES =                   @Y30LB02
.*                                                             @Y30LB02
.*         FOR GENERAL ERRORS, THE SAME COMPLETION CODE        @Y30LB02
.*         WILL BE IN EACH REQUEST BLOCK IN THE CHAIN:         @Y30LB02
.*             X'173' = MSSC CONTROL BLOCK INDICATES THAT      @Y30LB02
.*                       THE MSC WAS NOT INITIALIZED           @Y30LB02
.*             X'174' = GETMAIN FAILURE FOR I/O BLOCKS         @Y30LB02
.*             X'175' = MSSC CONTROL BLOCK NOT AVAILABLE       @Y30LB02
.*                       (VS/2 ONLY)                           @Y30LB02
.*                                                             @Y30LB02
.*         FOR THE ERROR COMPLETION CODE                       @Y30LB02
.*             X'176' = INTERMIXED CHAIN FOR RELINQUISH.       @Y30LB02
.*         THE REQUEST IN ERROR CONTAINS THE COMPLETION        @Y30LB02
.*         CODE. REQUESTS PRIOR TO THE ONE IN ERROR CONTAIN    @Y30LB02
.*         A COMPLETION CODE OF X'000', BUT THE MSS            @Y30LB02
.*         ACTIVITY HAS *NOT* BEEN INITIATED - DO NOT WAIT     @Y30LB02
.*         FOR A DELAYED RESPONSE. EACH REQUEST SUBSEQUENT     @Y30LB02
.*         TO THE ONE IN ERROR CONTAINS A COMPLETION CODE      @Y30LB02
.*         OF X'170' - DO *NOT* WAIT FOR A DELAYED RESPONSE    @Y30LB02
.*         FROM THESE REQUESTS.                                @Y30LB02
.*                                                             @Y30LB02
.*         IF THE FIRST ERROR COMPLETION CODE FOUND IN A       @Y30LB02
.*         RELINQUISH CHAIN IS NOT ONE OF THE CODES            @Y30LB02
.*         DESCRIBED ABOVE, EACH REQUEST IN THE CHAIN MUST     @Y30LB02
.*         BE INTERROGATED TO DETERMINE IF IT HAS FAILED       @Y30LB02
.*         AND THE REASON FOR THE FAILURE (SOME OR ALL OF      @Y30LB02
.*         THE REQUESTS MAY HAVE FAILED,EACH FOR A DIFFERENT   @Y30LB02
.*         REASON). IN THIS SITUATION, WAIT FOR A DELAYED      @Y30LB02
.*         RESPONSE ONLY IF THE COMPLETION CODE IS X'000'      @Y30LB02
.*         AND A DELAYED RESPONSE WAS REQUESTED.               @Y30LB02
.*                                                             @Y30LB02
.*     'AREXT' = EXTENTS. MAY BE SET BY MACRO PARAMETER.       @Y30LB02
.*                                                             @Y30LB02
.*     'ARNEDB' = ADDR OF THE NEXT EXTENT BLOCK. THROUGH       @ZA28964
.*         THE USE OF THIS POINTER, MULTIPLE ACQUIRES OR       @ZA28964
.*         RELINQUISHES MAY BE LINKED TOGETHER AND             @ZA28964
.*         EXECUTED WITH ONE CALL TO SVC 126. POINTS TO        @ZA28964
.*         AN AUXILLARY REQUEST BLOCK CONTAINING RELATED       @Y30LB02
.*         INFORMATION FOR THE SAME OR DIFFERENT VOLUME(S)     @Y30LB02
.*         AND DIFFERENT EXTENTS. ANY CHAIN OF REQUESTS MUST   @Y30LB02
.*         CONTAIN ONLY ACQUIRE REQUESTS OR ONLY               @Y30LB02
.*         RELINQUISH REQUESTS (NO MIXTURE). ALL INFORMATION   @Y30LB02
.*         REQUIRED MUST BE SPECIFIED IN EACH REQUEST BLOCK.   @Y30LB02
.*         A POINTER OF ZERO INDICATES THAT NO MORE            @Y30LB02
.*         REQUESTS ARE TO BE PROCESSED IN THIS CALL.          @Y30LB02
.*                                                             @Y30LB02
.* OUTPUT =                                                    @Y30LB02
.*                                                             @Y30LB02
.*   INLINE PL/S OR BAL STATEMENTS THAT PERFORM THE REQUESTED  @Y30LB02
.*   FUNCTION AND ERROR MESSAGES AS COMMENTS AT THE POINT      @Y30LB02
.*   OF INVOCATION.                                            @Y30LB02
.*                                                             @Y30LB02
.*   SVC126 REQUEST BLOCK (LIST AND STANDARD FORMS):           @Y30LB02
.*                                                             @Y30LB02
.*     OFFSETS  LENGTH    BAL    DESCRIPTION                   @Y30LB02
.*     DEC HEX  (BYTES)  LABEL                                 @Y30LB02
.*     -------  ------  -------  -----------                   @Y30LB02
.*      0  (0)     4    ARLEN    REQUEST BLOCK LENGTH          @Y30LB02
.*      4  (4)     1    AROP     OPCODE                        @Y30LB02
.*      5  (5)     1    ARRES0   RESERVED                      @Y30LB02
.*      6  (6)     1    ARFLAG   FLAGS                         @Y30LB02
.*      7  (7)     1    ARNMEXTS NUMBER OF EXTENTS             @Y30LB02
.*      8  (8)     6    ARVOL    VOLID                         @Y30LB02
.*     14  (E)     2    ARASID   ADDR SPACE ID                 @Y30LB02
.*     16  (10)    4    ARECB    EVENT CONTROL BLOCK ADDR      @Y30LB02
.*     20  (14)    5    ARHOST   HOSTID                        @Y30LB02
.*     25  (19)    1    ARRES3   RESERVED                      @Y30LB02
.*     26  (1A)    2    ARCOMPC  COMPLETION CODE               @Y30LB02
.*     28  (1C)   64DEC AREXT    EXTENTS                       @Y30LB02
.*     92  (5C)    4    ARNEDB   ADDR OF NEXT REQ BLK          @Y30LB02
.*                                                             @Y30LB02
.* EXIT-NORMAL = VALID INVOCATION                              @Y30LB02
.*                                                             @Y30LB02
.*   CONDITION = RETURN CODE = 0 × 4                           @Y30LB02
.*                                                             @Y30LB02
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS GENERATED. IF PL/S  @ZA28964
.*       WARNING MESSAGES ARE GENERATED (RETCODE=4), THEY WILL @ZA28964
.*       ONLY APPEAR AS COMMENTS WHEN THE 'MSOURCE' PARAMETER  @ZA28964
.*       IS USED IN THE PL/S COMPILATION. IF THE ACQUIRE/      @ZA28964
.*       RELINQUISH REQUEST GENERATES A RUN-TIME ERROR, THE    @ZA28964
.*       MSSC SVC 126 WILL EXIT WITH R15 = 4 AND R0 = 0. IN    @ZA28964
.*       THIS CASE, THE USER MUST SCAN THE COMPLETION CODES    @ZA28964
.*       IN THE CHAIN OF REQUESTS TO DETERMINE THE REQUESTS    @ZA28964
.*       IN ERROR.                                             @ZA28964
.*                                                             @ZA28964
.*   MESSAGES =                                                @Y30LB02
.*                                                             @Y30LB02
.*     ICB603I:  WARNING-ONLY MF AND TYPE PARAMETERS ARE       @Y30LB02
.*               VALID FOR LIST FORM                           @Y30LB02
.*                                                             @Y30LB02
.* EXIT-ERROR = INVALID INVOCATION                             @Y30LB02
.*                                                             @Y30LB02
.*   CONDITION = RETURN CODE = 12                              @Y30LB02
.*                                                             @Y30LB02
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS NOT GENERATED. PL/S @ZA28964
.*       ERROR MESSAGES WILL ONLY APPEAR AS COMMENTS WHEN THE  @ZA28964
.*       'MSOURCE' PARAMETER IS USED IN THE PL/S COMPILATION.  @ZA28964
.*       IF THE ACQUIRE/RELINQUISH REQUEST GENERATES AN ERROR  @ZA28964
.*       AT RUN-TIME, THE MSSC SVC 126 WILL EXIT WITH R15 = 4  @ZA28964
.*       AND R0 = 0. IN THIS CASE, THE USER MUST SCAN THE      @ZA28964
.*       THE COMPLETION CODES IN THE CHAIN OF REQUESTS TO      @ZA28964
.*       DETERMINE THE REQUESTS IN ERROR.                      @ZA28964
.*                                                             @ZA28964
.*   MESSAGES =                                                @Y30LB02
.*                                                             @Y30LB02
.*     ICB600I:  TYPE MUST BE SPECIFIED                        @Y30LB02
.*     ICB601I:  TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02
.*               SPECIFIED IN MF(2)                            @Y30LB02
.*     ICB606I:  EXTS MUST BE SPECIFIED FOR THE STANDARD FORM  @Y30LB02
.*               MACRO                                         @Y30LB02
.*     ICB609I:  NMEXTS MUST BE SPECIFIED FOR STANDARD         @Y30LB02
.*               FORM MACRO                                    @Y30LB02
.*     ICB610I:  VOLID MUST BE SPECIFIED FOR STANDARD          @Y30LB02
.*               FORM MACRO                                    @Y30LB02
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME               @Y30LB02
.*               IF EXEC MACRO FORM REQUESTED                  @Y30LB02
.*     ICB613I:  MISSING REQ BLK NAME OR                       @Y30LB02
.*               MORE THAN 2 SUBPARAMETERS FOR MF              @Y30LB02
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST          @Y30LB02
.*               BE L, E, OR NULL                              @Y30LB02
.*                                                             @Y30LB02
.* EXTERNAL REFERENCES =                                       @Y30LB02
.*                                                             @Y30LB02
.*   ROUTINES = NONE                                           @Y30LB02
.*                                                             @Y30LB02
.*   DATA-AREAS =                                              @Y30LB02
.*                                                             @Y30LB02
.*     BAL : GLOBAL VARIABLES USED                             @Y30LB02
.*       &ARSTEST : >0 IF THE STANDARD FORM HAS BEEN           @Y30LB02
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @Y30LB02
.*                                                             @Y30LB02
.*     PL/S: FIXED EXTERNAL DECLARATIONS USED                  @Y30LB02
.*       ARTESTR1: >0 IF ARR1 HAS BEEN DECLARED AS REG1        @Y30LB02
.*           PREVIOUSLY IN THE CALLING MODULE                  @Y30LB02
.*       ARTEST : >0 IF THE STANDARD FORM HAS BEEN             @Y30LB02
.*           PREVIOUSLY INVOKED IN THE CALLING MODULE          @Y30LB02
.*                                                             @Y30LB02
.*   CONTROL-BLOCKS = NONE                                     @Y30LB02
.*                                                             @Y30LB02
.* TABLES = NONE                                               @Y30LB02
.*                                                             @Y30LB02
.* MACROS = IHBINNRA (USED IN BAL TO LOAD REG1)                @Y30LB02
.*                                                             @Y30LB02
.* CHANGE-ACTIVITY =                                           @Y30LB02
.*                                                             @Y30LB02
.*   00 74/06/09 DEVELOPMENT                                   @Y30LB02
.*   01 76/04/20 ALLOCATE TO MOUNTED VOLUMES                   @G24LB04
.*   02 77/12/15 DOCUMENTATION ADDITIONS/RESTRUCTURE           @ZA28964
.*               BAL STD FORM SERIALLY REUSABLE                @ZA28964
.*               PL/S VARIABLE 'EXSPTR' RENAMED 'ARSPTR'       @ZA28964
.*               PL/S LABELS DECLARED IN BAL VERSION           @ZA28964
.*               BAL LABELS DECLARED IN PL/S VERSION           @ZA28964
.*               PL/S MACRO INVOCATION ECHOED BACK TO CALLER   @ZA28964
.*                                                             @Y30LB02
.**** END OF SPECIFICATIONS ***                                @Y30LB02
         GBLB  &ARTEST       STANDARD FORM FLAG                @Y30LB02
         LCLC  &MEXTS                                          @Y30LB02
         LCLC  &END                                            @Y30LB02
         LCLC  &ACQRE                                          @Y30LB02
&END     SETC  'AR'.'&SYSNDX'                                  @Y30LB02
&MEXTS   SETC  'AR1'.'&SYSNDX'                                 @Y30LB02
&ACQRE   SETC  'AR2'.'&SYSNDX'                                 @Y30LB02
         AIF   ('&MF(1)' EQ 'E').EXEC  IF EXECUTE              @Y30LB02
         AIF   ('&TYPE' EQ 'ACQ' OR '&TYPE' EQ 'REL').START    @Y30LB02
         AIF   ('&TYPE' EQ '').NOT                             @Y30LB02
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED ' @Y30LB02
         AGO   .EXIT                                           @Y30LB02
.NOT     MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02
         AGO   .EXIT                                           @Y30LB02
.*                                                             @ZA28964
.START   AIF   ('&MF(1)' NE 'L').NLIST BRANCH IF NOT LIST FORM @Y30LB02
.*                                                             @ZA28964
.* *********************************************************** @Y30LB02
.*               L I S T   F O R M                             @ZA28964
.* *********************************************************** @Y30LB02
.*                                                             @ZA28964
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS ON   @Y30LB02
.*       LIST FORM MACRO AND GIVES WARNING IF FOUND            @Y30LB02
.*                                                             @Y30LB02
         AIF   ('&FLAGS' NE '' OR '&VOLID' NE '').WARN         @Y30LB02
         AIF   ('&ECB' NE '' OR '&EXTS' NE '').WARN            @Y30LB02
         AIF   ('&HOSTID' EQ '' AND '&NMEXTS' EQ '').LISTOK    @ZA28964
.*                                                             @Y30LB02
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02
.*                                                             @Y30LB02
.LISTOK  AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @Y30LB02
*                 INITIALIZED LIST FORM MACRO                  @Y30LB02
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964
*                                                              @Y30LB02
&SYMBOL  DS    0F                                              @Y30LB02
ARLEN    DC    F'96'                   REQUEST BLOCK LENGTH    @Y30LB02
         AIF   ('&TYPE' EQ 'REL').LREL BRCH IF REL. REQUEST    @Y30LB02
AROP     DC    XL1'02'                 OPCODE FOR ACQUIRE      @Y30LB02
         AGO   .ZEROES                 BRANCH                  @Y30LB02
.LREL    ANOP                                                  @Y30LB02
AROP     DC    XL1'04'                 OPCODE FOR RELINQUISH   @Y30LB02
.ZEROES  ANOP                                                  @Y30LB02
ARRES0   DC    XL1'00'                 RESERVED                @Y30LB02
ARFLAG   DC    XL1'00'                 FLAGS                   @Y30LB02
ARNMEXTS DC    XL1'00'                 NUM EXTS                @Y30LB02
ARVOL    DC    XL6'000000000000'       VOLID                   @Y30LB02
ARASID   DC    XL2'0000'               ASID                    @Y30LB02
ARECB    DC    XL4'00000000'           ECB                     @Y30LB02
ARHOST   DC    XL5'0000000000'         HOSTID                  @Y30LB02
ARRES3   DC    XL1'00'                 RESERVED                @Y30LB02
ARCOMPC  DC    XL2'0000'               COMP CODE               @Y30LB02
AREXT    DC    16XL4'00000000'         EXTS                    @Y30LB02
ARNEDB   DC    XL4'00000000'           ADDR OF NEXT EXT BLK    @Y30LB02
ARLL     EQU   ARLEN                   COMPATABILITY DEF       @ZA28964
ARFLG    EQU   ARFLAG                  COMPATIBILITY DEF       @ZA28964
ARNMEXT  EQU   ARNMEXTS                COMPATIBILITY DEF       @ZA28964
         AGO   .EXIT                   GO TO EXIT              @Y30LB02
.*                                                             @ZA28964
.LISTDS  ANOP                                                  @Y30LB02
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @Y30LB02
*                 UNINITIALIZED LIST FORM MACRO                @Y30LB02
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964
*                                                              @Y30LB02
ICBACREL DSECT                                                 @Y30LB02
ARLEN    DS    F                       REQ BLK LEN 96 DEC      @Y30LB02
         AIF   ('&TYPE' EQ 'REL').LREL1 BRCH IF REL. REQUEST   @Y30LB02
AROP     DS    XL1                     ACQUIRE OPCD (02 HEX)   @ZA28964
         AGO   .RESTDS                 BRANCH                  @Y30LB02
.*                                                             @ZA28964
.LREL1   ANOP                                                  @Y30LB02
AROP     DS    XL1                     RELINQ OPCD (04 HEX)    @ZA28964
.*                                                             @ZA28964
.RESTDS  ANOP                                                  @Y30LB02
ARRES0   DS    XL1                     RESERVED                @ZA28964
ARFLAG   DS    XL1                     FLAGS                   @ZA28964
ARNMEXTS DS    XL1                     NUM EXTS                @ZA28964
ARVOL    DS    CL6                     VOLID                   @ZA28964
ARASID   DS    XL2                     ASID                    @ZA28964
ARECB    DS    A                       ECB                     @ZA28964
ARHOST   DS    CL5                     HOSTID                  @ZA28964
ARRES3   DS    XL1                     RESERVED                @ZA28964
ARCOMPC  DS    XL2                     COMPLETION CODE         @ZA28964
AREXT    DS    16XL4                   EXTENTS                 @ZA28964
ARNEDB   DS    A                       ADDR OF NEXT EXT BLK    @Y30LB02
ARLL     EQU   ARLEN                   COMPATABILITY DEF       @ZA28964
ARFLG    EQU   ARFLAG                  COMPATIBILITY DEF       @ZA28964
ARNMEXT  EQU   ARNMEXTS                COMPATIBILITY DEF       @ZA28964
         AGO   .EXIT                   GO TO EXIT              @Y30LB02
.*                                                             @ZA28964
.NLIST   AIF   ('&MF(1)' EQ '').ISSTD  IF STD. FORM BRANCH     @Y30LB02
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL'         @Y30LB02
         AGO   .EXIT                   BRANCH                  @ZA28964
.*                                                             @ZA28964
.* *********************************************************** @ZA28964
.*        S T A N D A R D   F O R M                            @ZA28964
.* *********************************************************** @ZA28964
.*                                                             @ZA28964
.ISSTD   AIF   ('&NMEXTS' NE '').VOLIDCK BRCH IF NMEXTS SPEC'D @Y30LB02
         MNOTE 12,'  ICB609I - NMEXTS MUST BE SPECIFIED '      @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO   .EXIT                                           @Y30LB02
.*                                                             @ZA28964
.VOLIDCK AIF   ('&VOLID' NE '').EXTSCK IF VOLID SPEC'D         @ZA28964
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED '       @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO   .EXIT                                           @ZA28964
.*                                                             @ZA28964
.EXTSCK  AIF   ('&EXTS' NE '').PAROK   IF EXTS SPEC'D,BRCH     @Y30LB02
         MNOTE 12,'  ICB606I - EXTS MUST BE SPECIFIED '        @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO   .EXIT                                           @ZA28964
.*                                                             @ZA28964
.PAROK   ANOP                                                  @ZA28964
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @ZA28964
*                 STANDARD FORM INVOCATION                     @ZA28964
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964
         AIF   (&ARTEST).ARSET    IF ^ FIRST INVOCATION        @ZA28964
&ARTEST  SETB  1                                               @ZA28964
         CNOP  0,4                                             @Y30LB02
&SYMBOL  BAL   1,&ACQRE                BRANCH AROUND REQBLK    @Y30LB02
ARLEN    DC    A(&ACQRE-*)             REQUEST BLOCK LENGTH    @Y30LB02
         AIF   ('&TYPE' EQ 'REL').SREL BRCH IF REL REQUEST     @Y30LB02
AROP     DC    XL1'02'                 ACQ OPCODE              @Y30LB02
         AGO   .REST                   BRCH TO REST OF DC'S    @Y30LB02
.*                                                             @ZA28964
.SREL    ANOP                                                  @Y30LB02
AROP     DC    XL1'04'                 REL OPCODE              @Y30LB02
.*                                                             @ZA28964
.REST    ANOP                                                  @Y30LB02
ARRES0   DC    XL1'00'                 RESERVED                @ZA28964
ARFLAG   DC    XL1'00'                 FLAGS                   @ZA28964
ARNMEXTS DC    XL1'00'                 NUM EXTS                @ZA28964
ARVOL    DC    XL6'000000000000'       VOLID                   @ZA28964
ARASID   DC    XL2'0000'               ASID                    @ZA28964
ARECB    DC    XL4'00000000'           ECB                     @ZA28964
ARHOST   DC    XL5'0000000000'         HOSTID                  @ZA28964
ARRES3   DC    XL1'00'                 RESERVED                @ZA28964
ARCOMPC  DC    XL2'0000'               COMP CODE               @ZA28964
AREXT    DC    16XL4'00000000'         EXTS                    @ZA28964
ARNEDB   DC    XL4'00000000'           ADDR NEXT EXT BLK       @ZA28964
ARLL     EQU   ARLEN                   COMPATABILITY DEF       @ZA28964
ARFLG    EQU   ARFLAG                  COMPATIBILITY DEF       @ZA28964
ARNMEXT  EQU   ARNMEXTS                COMPATIBILITY DEF       @ZA28964
&ACQRE   EQU   *                                               @Y30LB02
         AGO   .TEST                   BRANCH                  @Y30LB02
.*                                                             @ZA28964
.ARSET   ANOP                                                  @ZA28964
*                 SUBSEQUENT STANDARD FORM INVOCATION          @ZA28964
&SYMBOL  LA    1,ARLEN       LOAD LIST ADDRESS IN REG 1        @ZA28964
.*                                                             @ZA28964
.TEST    AIF   ('&FLAGS' EQ '').NMEXTS  BRCH IF NOT SPEC'D     @ZA28964
         AIF   ('&FLAGS'(1,1) EQ '(').RFLAGS IF REGFORM        @ZA28964
         MVC   6(1,1),&FLAGS           MOVE FLAGS              @ZA28964
         AGO   .NMEXTS                 BRCH TO CHECK FOR VOLID @Y30LB02
.*                                                             @ZA28964
.RFLAGS  ANOP                                                  @Y30LB02
         MVC   6(1,1),0(&FLAGS(1))     MOVE FLAGS              @ZA28964
.*                                                             @ZA28964
.NMEXTS  AIF   ('&NMEXTS'(1,1) EQ '(').RNEXT IF REGFORM        @ZA28964
         MVC   7(1,1),&NMEXTS          MOVE #EXT INFO          @ZA28964
         AGO   .VOLOK                  BRCH TO CHECK FOR VOLID @Y30LB02
.*                                                             @ZA28964
.RNEXT   ANOP                                                  @Y30LB02
         MVC   7(1,1),0(&NMEXTS(1))    MOVE #EXT INFO          @ZA28964
.*                                                             @ZA28964
.VOLOK   AIF   ('&VOLID'(1,1) EQ '(').RVOLID IF REGFORM        @ZA28964
         MVC   8(6,1),&VOLID           MOVE VOLID              @ZA28964
         AGO   .ECBCK                  BRANCH TO CHECK FOR ECB @Y30LB02
.*                                                             @ZA28964
.RVOLID  ANOP                                                  @Y30LB02
         MVC   8(6,1),0(&VOLID(1))     MOVE VOLID              @ZA28964
.*                                                             @ZA28964
.ECBCK   AIF   ('&ECB' EQ '').HOSTCK   IF ECB NOT SPEC'D.,BRCH @ZA28964
         AIF   ('&ECB'(1,1) EQ '(').RECB IF SPEC'D BY REG,BRCH @Y30LB02
         LA    15,&ECB                 LOAD R15 WITH ADDR(ECB) @Y30LB02
         ST    15,16(1)                STORE ADDR IN ECB FIELD @Y30LB02
         AGO   .HOSTCK                 BRANCH TO CHECK HOST    @Y30LB02
.*                                                             @ZA28964
.RECB    ANOP                                                  @Y30LB02
         ST    &ECB,16(1)              ST ADDR IN THE ECB FLD  @Y30LB02
.*                                                             @ZA28964
.HOSTCK  AIF   ('&HOSTID' EQ '').EXTS    IF HOST NOT SPECD,BR  @ZA28964
         AIF   ('&HOSTID'(1,1) EQ '(').RHOST REG-FORM,BRANCH   @Y30LB02
         MVC   20(5,1),&HOSTID         STORE HOSTID IN BLOCK   @Y30LB02
         AGO   .EXTS                   BRANCH                  @Y30LB02
.*                                                             @ZA28964
.RHOST   ANOP                                                  @Y30LB02
         MVC   20(5,1),0(&HOSTID(1))   STORE HOSTID IN BLOCK   @Y30LB02
.*                                                             @ZA28964
.EXTS    ANOP                                                  @ZA28964
         SR    14,14                   ZERO REGISTER 14        @Y30LB02
         IC    14,&NMEXTS              PUT #EXTS INTO R14      @Y30LB02
         SLA   14,2                    MULT R14 BY 4           @Y30LB02
         LA    15,1                    LOAD 1 INTO R15         @Y30LB02
         SR    14,15                   SUB R15 FROM R14        @Y30LB02
         AIF   ('&EXTS'(1,1) EQ '(').RNMEX SPEC'D. BY REG,BR   @Y30LB02
         LA    15,&EXTS                LOAD EXTS ADDR INTO R15 @Y30LB02
         AGO   .LOAD5                  BRANCH                  @Y30LB02
.*                                                             @ZA28964
.RNMEX   ANOP                                                  @Y30LB02
         LR    15,&EXTS                LOAD EXTS ADDR INTO R15 @Y30LB02
.*                                                             @ZA28964
.LOAD5   ANOP                                                  @Y30LB02
         EX    14,&MEXTS               EXEC MOVE(EXTENTS) INST @Y30LB02
         B     &END                    BRANCH TO THE END       @Y30LB02
&MEXTS   MVC   28(1,1),0(15)           MOVE 64 BYTES (OF       @Y30LB02
*                                      EXTENTS) INTO REQ BLOCK @Y30LB02
         AGO   .LINK                   INVOKE THE SVC          @ZA28964
.*                                                             @ZA28964
.* *********************************************************** @ZA28964
.*        E X E C U T E   F O R M                              @ZA28964
.* *********************************************************** @ZA28964
.*                                                             @ZA28964
.EXEC    AIF   (N'&MF EQ 2).CONT       IF 2 SUBPARAMETERS      @ZA28964
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME '          @Y30LB02
         MNOTE 12,'  OR MORE THAN 2 SUBPARAMETERS FOR MF '     @Y30LB02
         AGO   .EXIT                   BRANCH                  @ZA28964
.*                                                             @ZA28964
.CONT    ANOP                                                  @Y30LB02
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @ZA28964
*                 EXECUTE FORM INVOCATION                      @ZA28964
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964
&SYMBOL  IHBINNRA &MF(2)               LOAD THE ADDR INTO R1   @Y30LB02
.*                                                             @ZA28964
.LINK    ANOP                                                  @Y30LB02
&END     SVC   126                     LINK TO THE SVC         @Y30LB02
.*                                                             @ZA28964
.EXIT    MEND                                                  @Y30LB02
**********************************************************     @ZA28964
*********************************************************/
* ICBACREL: MACRO KEYS(MF,TYPE,FLAGS,VOLID,ECB,EXTS,
*                  HOSTID,NMEXTS);                         /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @ZA28964*/
*/*          EXTERNAL DECLARES                               @Y30LB02*/
*/********************************************************** @ZA28964*/
*   DCL (ARTEST,                       /*USED AS A TEST TO   @Y30LB02*/
*                                      /*SEE IF STD FORM     @Y30LB02*/
*                                      /*ALREADY INVOKED     @Y30LB02*/
*        ARTESTR1) FIXED EXT;          /*USED AS A TEST TO   @Y30LB02*/
*                                      /*SEE IF R1 ALREADY   @Y30LB02*/
*                                      /*DECLARED            @Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @ZA28964*/
*/*            INTERNAL DECLARES                             @Y30LB02*/
*/********************************************************** @ZA28964*/
*   DCL (ARLENGTH,                     /*LIST LENGTH         @Y30LB02*/
*        AOPCODE,                      /* ACQUIRE OPCODE     @Y30LB02*/
*        ROPCODE) CHAR,                /* RELINQUISH OPCODE  @Y30LB02*/
*        RETCODE FIXED;                /* RETURN CODE        @Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @ZA28964*/
*/*             VARIABLE INITIALIZATION                      @ZA28964*/
*/********************************************************** @ZA28964*/
*   ARLENGTH='96';                     /*LEN CONSTANT OF 96  @Y30LB02*/
*   AOPCODE='02';                      /* ACQUIRE OPCODE     @Y30LB02*/
*   ROPCODE='04';                      /* RELINQUISH OPCODE  @Y30LB02*/
*   RETCODE=0;                         /*RETURN CODE         @Y30LB02*/
*/*                                                          @ZA28964*/
*/*   NOTE: ANSWER TEXT IS INCLUDED AT THE END OF THE MACRO  @ZA28964*/
*/*         AND IS INVOKED IN A SEGMENT-LIKE FASHION         @ZA28964*/
*/*                                                          @ZA28964*/
*/********************************************************** @ZA28964*/
*/*     ECHO INVOCATION BACK TO CALLING MODULE               @ZA28964*/
*/********************************************************** @ZA28964*/
*  ANS('     /* MACRO INVOCATION:  @ZA28964*/')SKIP;
*  ANS('     /* ' ×× MACLABEL ×× ' ' ×× MACNAME ×× ' ' ×× MACLIST ××
*      ' ' ×× MACKEYS ×× ' @ZA28964*/')SKIP;               /*@ZA28964*/
*/*                                                          @ZA28964*/
*/********************************************************** @ZA28964*/
*/*         DECLARE REGISTER 1                               @ZA28964*/
*/********************************************************** @ZA28964*/
*  IF ARTESTR1=0 THEN                  /*HAS R1 BEEN DCL'D?  @Y30LB02*/
*    DO;                               /*NO,DECLARE REG1     @Y30LB02*/
*      ANS('DCL ARR1 REG(1) PTR ;   '××
*          '/*WILL CONTAIN LIST ADDRESS   @Y30LB02*/') SKIP;
*      ARTESTR1=1;                     /*SET ARTESTR1 TO 1   @Y30LB02*/
*    END;                                                  /*@Y30LB02*/
*/*                                                          @ZA28964*/
*/********************************************************** @ZA28964*/
*/*      CHECK FOR VALID TYPE                                @ZA28964*/
*/********************************************************** @ZA28964*/
*  IF MF(1) = 'E' THEN                 /*EXECUTE FORM SPECD? @Y30LB02*/
*    GO TO EXFORM;                     /*YES, BRANCH         @Y30LB02*/
*  IF TYPE(1) ^= 'ACQ' THEN IF TYPE(1) ^= 'REL' THEN       /*@ZA28964*/
*    DO;                                                   /*@ZA28964*/
*      IF TYPE(1) = '' THEN                                /*@ZA28964*/
*        ANS MSG('  ICB600I - TYPE '××
*                'MUST BE SPECIFIED') SKIP(5);             /*@Y30LB02*/
*      ELSE                                                /*@ZA28964*/
*        ANS MSG('  ICB601I - TYPE '××
*                ' IS INCORRECTLY SPECIFIED') SKIP(5);     /*@Y30LB02*/
*      RETCODE=12;                     /*SET RETURN CODE     @Y30LB02*/
*      GO TO FINISH;                                       /*@ZA28964*/
*    END;                                                  /*@ZA28964*/
*/*                                                          @ZA28964*/
*/********************************************************** @ZA28964*/
*/*          LIST FORM                                       @ZA28964*/
*/********************************************************** @ZA28964*/
*  IF MF(1)^='L' THEN                  /* IF NOT LIST FORM   @Y30LB02*/
*    GO TO NOTLIST;                    /* BRANCH             @Y30LB02*/
*  IF MF(2)='' THEN                    /* WAS A NAME GIVEN?  @Y30LB02*/
*    DO;                               /* NO,PRT ERROR MSG   @Y30LB02*/
*      ANS MSG('  ICB602I - A NAME FOR THE REQUEST BLOCK '××
*              'MUST BE SPECIFIED IN MF(2) ') SKIP(5);     /*@Y30LB02*/
*      RETCODE=12;                     /*SET RETURN CODE     @Y30LB02*/
*      GO TO FINISH;                                       /*@Y30LB02*/
*    END;                                                  /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*  IF FLAGS ××                         /*FLAGS SPECIFIED?    @Y30LB02*/
*     VOLID ××                         /*VOLID SPECIFIED     @Y30LB02*/
*     ECB ××                           /*ECB SPECIFIED?      @Y30LB02*/
*     EXTS ××                          /*EXTENTS SPECIFIED?  @Y30LB02*/
*     HOSTID ××                        /*HOSTID SPECIFIED?   @Y30LB02*/
*     NMEXTS ^= '' THEN                /*NMEXTS SPECIFIED?   @Y30LB02*/
*    DO;                               /*PRT WARNING MSG     @Y30LB02*/
*      RETCODE=4;                      /*RETURN CODE EQ 4    @Y30LB02*/
*      ANS MSG('  ICB603I - WARNING-ONLY '××
*              'MF AND TYPE PARAMETERS ARE VALID FOR '××
*              'LIST FORM ')SKIP;                          /*@Y30LB02*/
*    END;                                                  /*@Y30LB02*/
*  IF MF(3) = '' THEN        /*ATTRIBUTE ^ SPECIFIED         @Y30LB02*/
*    GO TO LINIT;            /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  AND THEN GO TO FINISH       @ZA28964*/
*  ELSE
*    GO TO LUN;              /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  AND THEN GO TO FINISH       @ZA28964*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*        STANDARD FORM                                     @ZA28964*/
*/*********************************************************  @Y30LB02*/
*  NOTLIST:                                                /*@Y30LB02*/
*  IF MF(1)^='' THEN                   /* IF NOT STD FORM    @Y30LB02*/
*    DO;                               /* PRT ERROR MESSAGE  @Y30LB02*/
*      ANS MSG('  ICB615I - INVALID MF PARAMETER'××
*              ' SPECIFIED, MUST BE L, E, OR NULL')SKIP;   /*@Y30LB02*/
*      RETCODE=12;                     /*SET RETURN CODE     @Y30LB02*/
*      GO TO FINISH;                   /* AND EXIT           @ZA28964*/
*    END;                                                  /*@Y30LB02*/
*/*                                                        /*@ZA28964*/
*  IF NMEXTS = '' THEN                 /* IS NMEXT SPEC'D?   @Y30LB02*/
*    DO;                                                   /*@Y30LB02*/
*      ANS MSG('  ICB609I - NMEXTS MUST BE '××
*              'SPECIFIED FOR STANDARD FORM MACRO ')SKIP;
*      RETCODE = 12;                                       /*@ZA28964*/
*    END;                                                  /*@Y30LB02*/
*  IF VOLID = '' THEN                  /* IS VOLID SPEC'D?   @Y30LB02*/
*    DO;                                                   /*@Y30LB02*/
*      ANS MSG('  ICB610I - VOLID MUST BE SPECIFIED FOR'××
*              ' STANDARD FORM MACRO')SKIP;                /*@Y30LB02*/
*      RETCODE = 12;                                       /*@Y30LB02*/
*    END;                                                  /*@ZA28964*/
*  IF EXTS = '' THEN                   /* IS EXTS SPEC'D?    @Y30LB02*/
*    DO;                                                   /*@Y30LB02*/
*      ANS MSG('  ICB606I - EXTS MUST BE '××
*              ' SPECIFIED FOR STANDARD FORM MACRO ')SKIP;
*      RETCODE=12;           /*SET RETURN CODE               @Y30LB02*/
*    END;                                                  /*@Y30LB02*/
*  IF RETCODE >= 12 THEN     /*ERROR FOUND                   @ZA28964*/
*    GO TO FINISH;           /*BRANCH                        @Y30LB02*/
*  IF ARTEST=1 THEN          /*IF THE STD FM HAS             @Y30LB02*/
*                            /*BEEN INVOKED ALRDY            @Y30LB02*/
*    GO TO STDSEC;           /*SET UP REG1 TO PNT            @Y30LB02*/
*                            /*TO REQUEST BLOCK              @Y30LB02*/
*                            /*BY CALLING TEXT,              @ZA28964*/
*                            /* THEN GOTO FCHECK             @ZA28964*/
*  ELSE                                                    /*@ZA28964*/
*    GO TO STDINT;           /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  THEN GO TO FCHECK           @ZA28964*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*         FILL IN STANDARD FORM PARAMETERS                 @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*  FCHECK:                                                 /*@Y30LB02*/
*  IF FLAGS ^= '' THEN                 /*ARE FLAGS SPEC'D?   @Y30LB02*/
*    ANS('ARFLG='××FLAGS××';/*FILL IN FLAGS  @Y30LB02*/')SKIP;
*/*                                                          @ZA28964*/
*  ANS('ARNMEXT='××NMEXTS××';/*FILL IN NMEXT  @Y30LB02*/')SKIP;
*/*                                                          @ZA28964*/
*  ANS('ARVOL='××VOLID××';/*FILL IN VOLID  @Y30LB02*/')SKIP;
*/*                                                          @ZA28964*/
*  IF ECB ^= '' THEN        /* IF ECB SPECIFIED              @ZA28964*/
*    ANS('ARECB=ADDR'××ECB××';/*FILL IN ECB @Z30LB02*/')SKIP;
*/*                                                          @ZA28964*/
*  IF HOSTID ^= '' THEN                /*CK FOR HOSTID       @Y30LB02*/
*    ANS('ARHOST='××HOSTID××';/*FILL IN HOSTID @Y30LB02*/')SKIP;
*/*                                                          @ZA28964*/
*  ANS(' /*THE FOLLOWING CODE MOVES THE'××
*      ' EXTENTS INFO INTO THE BLOCK  @Y30LB02*/')SKIP;
*  IF ARTEST=0 THEN   /* FIRST INVOCATION OF STD FORM        @ZA28964*/
*    DO;                                                   /*@Y30LB02*/
*      ANS('DCL ARI FIXED(31) INIT(0);'××
*          '/*LOOP CTR INDEX  @Y30LB02*/') SKIP;
*      ANS('/*ARSPTR IS PTR USED TO EXTRACT'××
*          ' # OF EXTENTS AND EXTENTS INFO   */')SKIP;
*      ANS('DCL ARSPTR PTR(31);') SKIP;
*      ANS('DCL ARE CHAR(4) BASED(ARSPTR)'××
*          ';  /* EXTENTS   @Y30LB02*/') SKIP;
*      ARTEST=1;              /* SET FLAG ON                 @Y30LB02*/
*    END;                                                  /*@Y30LB02*/
*  ANS('/*INITIALIZE ARSPTR TO PTR SPECD '××
*      'FOR EXTS PARAMETER       @Y30LB02*/') SKIP;
*  ANS('ARSPTR=ADDR'××EXTS××' ;') SKIP;                    /*@Y30LB02*/
*  ANS('/*THIS DO LOOP MOVES THE BEG AND '××
*      'END CYLINDERS TO LIST @Y30LB02*/') SKIP;
*  ANS('DO ARI=1 TO ARNMEXT;') SKIP;                       /*@Y30LB02*/
*  ANS('   AREXT(ARI)=ARE; /*FILL IN '××
*      'EXTENTS FIELD  @Y30LB02*/') SKIP;
*  ANS('   ARSPTR=ARSPTR+4;/*INCR PTR TO'××
*      ' EXTS FIELD  @Y30LB02*/') SKIP;
*  ANS('END;')  SKIP;                                      /*@Y30LB02*/
*  GO TO QUIT;                                             /*@ZA28964*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*               EXECUTE FORM                               @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @ZA28964*/
*  EXFORM:                                                 /*@ZA28964*/
*    IF MF(2)='' THEN                  /*ADDRESS  GIVEN?     @Y30LB02*/
*      DO;                             /*NO,ERROR MSG PRNTD  @Y30LB02*/
*        ANS MSG('  ICB612I - MF(2) MUST'××
*                ' CONTAIN REQ BLK NAME IF '××
*                'EXEC MACRO FORM REQUESTED') SKIP(5);     /*@Y30LB02*/
*        RETCODE=12;                                       /*@Y30LB02*/
*        GO TO FINISH;                  /*BRANCH             @Y30LB02*/
*      END;                                                /*@Y30LB02*/
*    ELSE                                                  /*@ZA28964*/
*      GO TO EXEC;           /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /* THEN GO TO QUIT              @ZA28964*/
*/*                                                          @ZA28964*/
*/********************************************************** @ZA28964*/
*/*           INVOKE SVC 126                                 @ZA28964*/
*/********************************************************** @ZA28964*/
*/*                                                          @ZA28964*/
*QUIT:  ANS('SVC (126); /*ISSUE  SVC   @Y30LB02*/') SKIP;
*       ANS('RFY(ARR1)UNRSTD;/*UNRESTRICT REG 1  @Y30LB02*/')SKIP;
*       GO TO FINISH;                                      /*@ZA28964*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*      MACRO ANSWER TEXT - EACH BLOCK IS INVOKED AT        @ZA28964*/
*/*      ONLY ONE POINT IN THE MACRO                         @ZA28964*/
*/********************************************************** @Y30LB02*/
*/*                                                          @Y30LB02*/
*  LINIT:
*   ANS('/*******************************************'××
*       '*************  @Y30LB02*/')SKIP;
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*       'LEVEL 02       @ZA28964*/')SKIP;
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '*************  @Y30LB02*/')SKIP;
*   ANS('DCL 1   '××MF(2)××' STATIC LOCAL,')SKIP;          /*@Y30LB02*/
*   ANS('     2 ARLL FIXED(31) INIT(96),/*LENGTH @Y30LB02*/')SKIP;
*   IF TYPE(1) = 'ACQ' THEN                                /*@ZA28964*/
*     ANS('    2 AROP FIXED(8) INIT(2),/*OPCODE=02 @Y30LB02*/')SKIP;
*   ELSE                               /*RELINQUISH REQUEST  @Y30LB02*/
*     ANS('    2 AROP FIXED(8) INIT(4),/*OPCODE=04 @Y30LB02*/')SKIP;
*   ANS('      2  * CHAR(1) INIT('××QUOTE('00')××
*       'X),  /*RESERVED AREA  @Y30LB02*/') SKIP;
*   ANS('      2  ARFLG BIT(8) INIT('××QUOTE('00000000')××
*       'B), /*FLAGS  @Y30LB02*/') SKIP;
*   ANS('       3 ARBDUBD BIT(1),/* BIND/UNBIND BIT @Y30LB02*/')SKIP;
*   ANS('       3 ARDRES BIT(1),/* DELAYED RESPONSE BIT   @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARINH BIT(1), /*INHIBIT (DE)STAGE BIT   @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARSEC BIT(1), /*NEWLY ALLOCATED SECONDARY EXTENT'××
*       ' BIT @G24LB04*/')SKIP;
*   ANS('        3 * BIT(4), /*THESE BITS ALWAYS ZEROES   @G24LB04*/')
*        SKIP;
*   ANS('      2  ARNMEXT FIXED(8) INIT(0),/* #EXTS  @Y30LB02*/')
*        SKIP;
*   ANS('      2  ARVOL CHAR(6) INIT('××
*        QUOTE('000000000000')××'X), /*VOLID  @Y30LB02*/') SKIP;
*   ANS('      2  ARASID CHAR(2) INIT('××QUOTE('0000')××
*        'X),  /*ASID FIELD  @Y30LB02*/') SKIP;
*   ANS('      2  ARECB PTR(31) INIT(0), /*ADDR OF ECB  @ZA28964*/')
*        SKIP;
*   ANS('      2  ARHOST CHAR(5) INIT('××QUOTE('0000000000')
*       ×× 'X),  /*HOSTID  @Y30LB02*/') SKIP;
*   ANS('      2  * CHAR(1) INIT('××QUOTE('00')
*       ×× 'X),  /*ZEROES  @Y30LB02*/') SKIP;
*   ANS('      2  ARCOMPC CHAR(2) INIT('××QUOTE('0000')
*       ×× 'X),  /*ZERO COMP CODE FLD  @Y30LB02*/') SKIP;
*   ANS('      2  AREXT (16), /*EXTENTS  @Y30LB02*/') SKIP;
*   ANS('       3 * CHAR(4) INIT('××
*       QUOTE('00000000')××'X),') SKIP;
*   ANS('      2  ARNEDB PTR(31) INIT(0);  /*NEDB    @ZA28964*/')
*        SKIP;
*   ANS('DCL ARLEN FIXED(31) DEF(ARLL), /*BAL LABEL  @ZA28964*/')SKIP;
*   ANS('    ARFLAG BIT(8) DEF(ARFLG),/*BAL LABEL @ZA28964*/')SKIP;
*   ANS('    ARNMEXTS FIXED(8) DEF(ARNMEXT);  ' ××
*       '/*BAL LABEL @ZA28964*/')SKIP;
*   GO TO FINISH;        /* RETURN TO CALLER                 @ZA28964*/
*/*                                                          @ZA28964*/
*  LUN:
*   ANS('/*******************************************'××
*       '*************  @Y30LB02*/')SKIP;
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '××
*       'LEVEL 02       @ZA28964*/')SKIP;
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '*************  @Y30LB02*/')SKIP;
*   ANS('DCL 1   '××MF(2)××'  '××MF(3)××',')SKIP;          /*@Y30LB02*/
*   ANS('      2  ARLL FIXED(31),  /*LENGTH=96 BYTES   @Y30LB02*/')
*        SKIP;
*   IF TYPE(1)='ACQ' THEN
*     ANS('      2  AROP FIXED(8),/*OPCODE=02  @Y30LB02*/')SKIP;
*   ELSE                               /*REL OPCODE          @Y30LB02*/
*     ANS('      2  AROP FIXED(8),/*OPCODE = 04  @Y30LB02*/')SKIP;
*   ANS('      2  * CHAR(1),  /*RESERVED AREA  @Y30LB02*/') SKIP;
*   ANS('      2  ARFLG BIT(8), /*FLAGS  @Y30LB02*/') SKIP;
*   ANS('        3 ARBDUBD BIT(1),   /* BIND/UNBIND BIT    @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARDRES BIT(1),/* DELAYED RESPONSE BIT   @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARINH BIT(1), /*INHIBIT (DE)STAGE BIT   @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARSEC BIT(1), /*NEWLY ALLOCATED SECONDARY EXTENT'××
*        ' BIT @G24LB04*/')SKIP;
*   ANS('        3 * BIT(4), /*THESE BITS ALWAYS ZEROES   @G24LB04*/')
*        SKIP;
*   ANS('      2  ARNMEXT FIXED(8),/* #EXTS  @Y30LB02*/') SKIP;
*   ANS('      2  ARVOL CHAR(6), /*VOLID  @Y30LB02*/') SKIP;
*   ANS('      2  ARASID CHAR(2),/*ASID FIELD  @Y30LB02*/') SKIP;
*   ANS('      2  ARECB PTR(31), /*ADDR OF ECB  @ZA28964*/')
*        SKIP;
*   ANS('      2  ARHOST CHAR(5),  /*HOSTID  @Y30LB02*/') SKIP;
*   ANS('      2  * CHAR(1),  /*ZEROES  @Y30LB02*/') SKIP;
*   ANS('      2  ARCOMPC CHAR(2),  /*COMP CODE  @Y30LB02*/')SKIP;
*   ANS('      2  AREXT (16), /*EXTENTS  @Y30LB02*/')
*        SKIP;
*   ANS('        3 * CHAR(4), /*ELEMENT OF EXTS ARRAY   @Y30LB02*/')
*        SKIP;
*   ANS('      2  ARNEDB PTR(31);  /*ADDR OF NEDB   @ZA28964*/')
*        SKIP;
*   ANS('DCL ARLEN FIXED(31) DEF(ARLL), /*BAL LABEL @ZA28964*/')SKIP;
*   ANS('    ARFLAG BIT(8) DEF(ARFLG),/*BAL LABEL @ZA28964*/')SKIP;
*   ANS('    ARNMEXTS FIXED(8) DEF(ARNMEXT);  ' ××
*       '/*BAL LABEL @ZA28964*/')SKIP;
*   GO TO FINISH;                      /*BRANCH TO END       @Y30LB02*/
*/*                                                          @ZA28964*/
*  STDSEC:
*   ANS('/*******************************************'××
*       '************  @Y30LB02*/')SKIP;
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '××
*       'LEVEL 02      @ZA28964*/')SKIP;
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************  @Y30LB02*/')SKIP;
*   ANS('RFY(ARR1)RSTD;/*RESTRICT R1  @Y30LB02*/')SKIP;
*   ANS('ARR1=ADDR(ARLL);'××
*       '/*ARR1 SET TO ADDRESS OF LIST  @Y30LB02*/') SKIP;
*   IF TYPE(1)='ACQ' THEN              /* AN ACQ REQUEST?    @Y30LB02*/
*     ANS('AROP='××QUOTE(AOPCODE)××'X;/*ACQ OPCODE  @Y30LB02*/')SKIP;
*   ELSE                              /*RELINQUISH CODE      @Y30LB02*/
*     ANS('AROP='××QUOTE(ROPCODE)××'X;/*REL OPCODE  @Y30LB02*/')SKIP;
*   GO TO FCHECK;                    /*BRCH TO STANDF CODE   @Y30LB02*/
*/*                                                          @ZA28964*/
*  STDINT:
*   ANS('/*******************************************'××
*       '************  @Y30LB02*/')SKIP;
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '××
*       'LEVEL 02      @ZA28964*/')SKIP;
*   ANS('/*THIS IS THE STANDARD FORM - ACQ/REL MACRO '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************  @Y30LB02*/')SKIP;
*   ANS('DCL  1  ARLIST,/*ACQUIRE/RELINQUISH @Y30LB02*/') SKIP;
*   ANS('      2  ARLL FIXED(31) INIT(96), /* LENGTH     @Y30LB02*/')
*        SKIP;
*   IF TYPE(1)='ACQ' THEN              /*ACQUIRE REQUEST?    @Y30LB02*/
*     ANS('      2  AROP FIXED(8) INIT(2),/*OPCODE  @Y30LB02*/')SKIP;
*   ELSE                                                   /*@Y30LB02*/
*     ANS('      2  AROP FIXED(8) INIT(4),/*OPCODE  @Y30LB02*/')SKIP;
*   ANS('      2  * CHAR(1) INIT('××QUOTE('00')××
*        'X), /*RESERVED AREA  @Y30LB02*/') SKIP;
*   ANS('      2  ARFLG BIT(8) INIT('××QUOTE('00000000')××
*        'B), /*FLAGS  @Y30LB02*/') SKIP;
*   ANS('        3 ARBDUBD BIT(1),   /* BIND/UNBIND BIT  @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARDRES BIT(1),/* DELAYED RESPONSE BIT  @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARINH BIT(1), /*INHIBIT (DE)STAGE BIT  @Y30LB02*/')
*        SKIP;
*   ANS('        3 ARSEC BIT(1), /*NEWLY ALLOCATED SECONDARY EXTENT'××
*        'BIT @G24LB04*/')SKIP;
*   ANS('        3 * BIT(4), /*THESE BITS ALWAYS ZEROES   @G24LB04*/')
*        SKIP;
*   ANS('      2  ARNMEXT FIXED(8) INIT(0), /* #EXTS  @Y30LB02*/')
*        SKIP;
*   ANS('      2  ARVOL CHAR(6) INIT('××
*        QUOTE('000000000000')××'X), /*VOLID  @Y30LB02*/') SKIP;
*   ANS('      2  ARASID CHAR(2) INIT('××QUOTE('0000')××
*        'X), /*ASID AREA  @Y30LB02*/') SKIP;
*   ANS('      2  ARECB PTR(31) INIT(0), /*ADDR OF ECB  @ZA28964*/')
*        SKIP;
*   ANS('      2  ARHOST CHAR(5) INIT('××QUOTE('0000000000')
*       ×× 'X),  /*HOSTID  @Y30LB02*/') SKIP;
*   ANS('      2  * CHAR(1) INIT('××QUOTE('00')
*       ×× 'X),  /*ZEROES  @Y30LB02*/') SKIP;
*   ANS('      2  ARCOMPC CHAR(2) INIT('××QUOTE('0000')
*       ×× 'X),/*ZERO COMP CODE FLD  @Y30LB02*/') SKIP;
*   ANS('      2  AREXT(16) , /*EXTENTS  @Y30LB02*/') SKIP;
*   ANS('       3 * CHAR(4) INIT('××
*      QUOTE('00000000')××'X),') SKIP;
*   ANS('      2  ARNEDB PTR(31) INIT(0);/*ADDR OF NEDB  @ZA28964*/')
*        SKIP;
*   ANS('DCL ARLEN FIXED(31) DEF(ARLL), /*BAL LABEL @ZA28964*/')SKIP;
*   ANS('    ARFLAG BIT(8) DEF(ARFLG),/*BAL LABEL @ZA28964*/')SKIP;
*   ANS('    ARNMEXTS FIXED(8) DEF(ARNMEXT);  ' ××
*       '/*BAL LABEL @ZA28964*/')SKIP;
*   ANS('RFY(ARR1)RSTD;/*RESTRICT R1  @Y30LB02*/')SKIP;
*   ANS('ARR1=ADDR(ARLL);/*ARR1 SET TO ADDRESS OF LIST  @Y30LB02*/')
*       SKIP;
*   GO TO FCHECK;                                          /*@ZA28964*/
*/*                                                          @ZA28964*/
*  EXEC:
*   ANS('/*******************************************'××
*       '************  @Y30LB02*/')SKIP;
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '××
*       'LEVEL 02      @ZA28964*/')SKIP;
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*DECLARES.  THE EXECUTE FORM WILL ONLY     '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*ISSUE THE SVC.                            '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************  @Y30LB02*/')SKIP;
*   ANS('RFY(ARR1)RSTD;/*RESTRICT R1  @Y30LB02*/')SKIP;
*   ANS('ARR1=ADDR('××MF(2)××
*       '); /*SET ARR1 TO ADDR OF LIST  @Y30LB02*/')  SKIP;
*   GO TO QUIT;                                            /*@ZA28964*/
*/*                                                          @ZA28964*/
*FINISH:RETURN CODE(RETCODE);/*RETURN CODE                   @Y30LB02*/
*        %END;                                             /*@Y30LB02*/
