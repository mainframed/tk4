* %/* START OF SPECIFICATIONS  ***                           @Z40LB22
*                                                            @Z40LB22
*01*  MODULE-NAME = ICBNULLC                                 @Z40LB22
*                                                            @Z40LB22
*01*  DESCRIPTIVE-NAME = NULLIFYC VOLUME/CARTRIDGE           @Z40LB22
*                                                            @Z40LB22
*01*  COPYRIGHT = NONE                                       @Z40LB22
*                                                            @Z40LB22
*01*  STATUS =  OS/VS2                                       @Z40LB22
*                                                            @Z40LB22
*01*  FUNCTION = THE NULLIFYC ORDER WILL REMOVE ALL          @Z40LB22
*                REFERENCES OF A VOLUME OR SCRATCH CARTRIDGE @Z40LB22
*                FROM THE SYSTEM.  IF ONE CARTRIDGE OF A     @Z40LB22
*                VOLUME IS STILL IN THE MASS STORAGE         @Z40LB22
*                FACILITY THIS FUNCTION CONVERTS IT INTO A   @Z40LB22
*                SCRATCH CARTRIDGE.                          @Z40LB22
*                                                            @Z40LB22
*01*  NOTES = ICBNULLC IS CODED IN PLS ONLY.                 @Z40LB22
*                                                            @Z40LB22
*02*    DEPENDENCIES = NONE                                  @Z40LB22
*                                                            @Z40LB22
*02*    RESTRICTIONS = THE PREFIXES ICB AND NULLC SHOULD BE  @Z40LB22
*                      AVOIDED WHEN INVOKING THIS MACRO.     @Z40LB22
*                                                            @Z40LB22
*02*    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF         @Z40LB22
*                              REGISTERS BY MACROS:          @Z40LB22
*                              R0,R1,R14, AND R15.           @Z40LB22
*                                                            @Z40LB22
*01*  MODULE-TYPE = MACRO                                    @Z40LB22
*                                                            @Z40LB22
*02*    PROCESSOR = PLS2                                     @Z40LB22
*                                                            @Z40LB22
*01*  INPUT = PARAMETERS SPECIFIED ON THE PLS MACRO          @Z40LB22
*             INVOCATION.                                    @Z40LB22
*                                                            @Z40LB22
*     MACRO SYNTAX                                           @Z40LB22
*                                                            @Z40LB22
*     LIST FORM                                              @Z40LB22
*                                                            @Z40LB22
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22
*                                                            @Z40LB22
*     ICBNULLC    MF(L,NAME/(R),[ATTRIBUTE])                 @Z40LB22
*                                                            @Z40LB22
*     EXECUTE FORM                                           @Z40LB22
*                                                            @Z40LB22
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22
*                                                            @Z40LB22
*     ICBNULLC    MF(E,NAME/(R))            MF(E,NAME/(R),   @Z40LB22
*                                             [COMPLETE])    @Z40LB22
*                                           VOLID(ADDR/(R))  @Z40LB22
*                                           FLAGS(ADDR/(R))  @Z40LB22
*                                           ECB(NAME/(R))    @Z40LB22
*                                           CSN(ADDR/(R))    @Z40LB22
*                                                            @Z40LB22
*     KEYWORD PARAMETERS:                                    @Z40LB22
*                                                            @Z40LB22
*     MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE      @Z40LB22
*            MACRO FORMAT AND MAY GIVE THE ADDRESS OR        @Z40LB22
*            ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK   @Z40LB22
*            IS STORED.                                      @Z40LB22
*                                                            @Z40LB22
*            L - LIST FORM:  THE EXPANSION OF THE L-FORM     @Z40LB22
*                MACRO WILL RESULT IN AN UNINITIALIZED       @Z40LB22
*                REQUEST BLOCK.                              @Z40LB22
*                                                            @Z40LB22
*            (1) NAME - THE MACRO INVOKER MUST SPECIFY A     @Z40LB22
*                NAME FOR HIS STRUCTURE WHEN INVOKING THE    @Z40LB22
*                PLS LIST FORM.                              @Z40LB22
*                                                            @Z40LB22
*            (2) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS    @Z40LB22
*                ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION @Z40LB22
*                IN AN UNINITIALIZED REQUEST BLOCK.          @Z40LB22
*                ATTRIBUTE EXAMPLE:                          @Z40LB22
*                                                            @Z40LB22
*                CHAR, FIXED, STATIC LOCAL, NONLOCAL,        @Z40LB22
*                BASED(*), ETC.                              @Z40LB22
*                                                            @Z40LB22
*            E - EXECUTABLE FORM:  THE EXPANSION OF THIS     @Z40LB22
*                FORM CONSISTS OF A LINKAGE INSTRUCTION AND  @Z40LB22
*                POSSIBLY, PARAMETER BINDING INSTRUCTIONS.   @Z40LB22
*                                                            @Z40LB22
*                SUB-PARAMETERS                              @Z40LB22
*                (1)  AN E MUST BE SPECIFIED IN THE FIRST    @Z40LB22
*                     SUB-PARAMETER POSITION.  THIS          @Z40LB22
*                     INDICATES THAT THE MACRO IS IN         @Z40LB22
*                     EXECUTABLE FORM.                       @Z40LB22
*                                                            @Z40LB22
*                (2)  A NAME OR A REGISTER MUST BE SPECIFIED @Z40LB22
*                     IN THE SECOND SUB-PARAMETER.           @Z40LB22
*                                                            @Z40LB22
*                (3)  'COMPLETE' - COMPLETE WILL CAUSE THE   @Z40LB22
*                     MACRO TO ZERO OUT THE REQUEST BLOCK.   @Z40LB22
*                     AFTER ZEROING THE REQUEST BLOCK THE    @Z40LB22
*                     FUNCTION OPCODE AND LENGTH ARE PLACED  @Z40LB22
*                     IN THE REQUEST BLOCK.                  @Z40LB22
*                                                            @Z40LB22
*                                                            @Z40LB22
*                REQUEST          × ORDER    × CODE          @Z40LB22
*                --------------------------------------      @Z40LB22
*                NULLIFYC         × HEX'09'  × N/A           @Z40LB22
*                                                            @Z40LB22
*02*    INVOCATION PARAMETERS (CCW 27)                       @Z40LB22
*                                                            @Z40LB22
*                                                            @Z40LB22
*       NULLIFYC - (L,F,X,A,VOLID,MSGID,CSN,X)               @Z40LB22
*                                                            @Z40LB22
*       (1)  LENGTH (L) - 4 BYTES                            @Z40LB22
*                                                            @Z40LB22
*       (2)  ORDER (F) - 1 BYTE                              @Z40LB22
*            THIS BYTE IS ALWAYS X'09' FOR THIS ORDER        @Z40LB22
*                                                            @Z40LB22
*       (3)  RESERVED (X) - 1 BYTE                           @Z40LB22
*                                                            @Z40LB22
*       (4)  FLAGS (A) - 2 BYTES                             @Z40LB22
*            BIT 0 = 1;  ACTIVE VOLUME                       @Z40LB22
*            BIT 0 = 0;  NOT ACTIVE                          @Z40LB22
*            BIT 1 = 1;  TRANSIENT                           @Z40LB22
*            BIT 1 = 0;  NOT TRANSIENT                       @Z40LB22
*            BIT 2 = 1;  SCRATCH                             @Z40LB22
*            BIT 2 = 0;  NOT SCRATCH                         @Z40LB22
*            BITS 3 - 4; UNUSED                              @Z40LB22
*            BIT 5 = 1;  CARTRIDGE 1 MISSING                 @Z40LB22
*            BIT 5 = 0;  NOT CARTRIDGE 1                     @Z40LB22
*            BIT 6 = 1;  CARTRIDGE 2 MISSING                 @Z40LB22
*            BIT 6 = 0;  NOT CARTRIDGE 2                     @Z40LB22
*            BITS 7 - 15; UNUSED                             @Z40LB22
*                                                            @Z40LB22
*       (5)  VIRTUAL VOLUME ID (VOLID) - 6 BYTES             @Z40LB22
*            VOLID OF THE VOLUME TO BE NULLIFIED (OPTIONAL). @Z40LB22
*                                                            @Z40LB22
*       (6)  MESSAGE ID (MSGID) - 6 BYTES                    @Z40LB22
*            THIS FIELD CONTAINS BOTH THE ASID (USED BY      @Z40LB22
*            THE SVC ONLY) AND THE NAME OF THE ECB.  THE     @Z40LB22
*            ECB IS POSTED WITH X'7F' FOR SUCCESSFUL         @Z40LB22
*            COMPLETION.  THE MSC DATA WILL BE MOVED TO CORE @Z40LB22
*            LOCATION ADDRESS(ECB) + 4.  THE ECB MUST BE     @Z40LB22
*            SPECIFIED AND THE ECB AREA MUST BE CLEARED      @Z40LB22
*            BEFORE INVOKING THE MACRO (REQUIRED).           @Z40LB22
*                                                            @Z40LB22
*       (7)  CARTRIDGE SERIAL NUMBER (CSN) - 12 BYTES        @Z40LB22
*            A 12 BYTE AREA THAT CONTAINS THE SERIAL         @Z40LB22
*            NUMBER OF THE CARTRIDGE TO BE ACTED UPON.       @Z40LB22
*            THE ONLY VALID FLAGS SETTING IS BIT 1 = 1 OR    @Z40LB22
*            BIT 2 =  1.  CSN IS AN OPTIONAL PARAMETER.      @Z40LB22
*                                                            @Z40LB22
*       (8)  RESERVED (X) - 8 BYTES                          @Z40LB22
*                                                            @Z40LB22
*01*  EXIT-NORMAL = VALID INVOCATION                         @Z40LB22
*                                                            @Z40LB22
*02*    CONDITION = RETURN CODE = 0.                         @Z40LB22
*                 = RETURN CODE = 4.                         @Z40LB22
*                                                            @Z40LB22
*02*    OUTPUT = IN-LINE PLS STATEMENTS THAT PERFORM THE     @Z40LB22
*                REQUESTED FUNCTION.                         @Z40LB22
*              = A WARNING MESSAGE WILL BE PRINTED, AND      @Z40LB22
*                THE EXPANSION WILL CONTINUE FOR RC=4.       @Z40LB22
*                                                            @Z40LB22
*01*  EXIT-ERROR = INVALID INVOCATION                        @Z40LB22
*                                                            @Z40LB22
*02*    CONDITION = RETURN CODE = 12.                        @Z40LB22
*                                                            @Z40LB22
*02*    OUTPUT = ERROR MESSAGE                               @Z40LB22
*                                                            @Z40LB22
*01*  EXTERNAL-REFERENCES = NONE                             @Z40LB22
*                                                            @Z40LB22
*01*  TABLES = NONE                                          @Z40LB22
*                                                            @Z40LB22
*01*  MESSAGES = AS FOLLOWS:                                 @Z40LB22
*                                                            @Z40LB22
*            ICB602I:  A NAME FOR THE REQUEST BLOCK MUST     @Z40LB22
*                      BE SPECIFIED IN MF(2)                 @Z40LB22
*            ICB604I:  WARNING - ONLY MF PARAMETER IS VALID  @Z40LB22
*                      FOR LIST FORM.                        @Z40LB22
*            ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME IF    @Z40LB22
*                      EXEC MACRO FORM REQUESTED.            @Z40LB22
*            ICB620I:  INVALID MF PARAMETER SPECIFIED,       @Z40LB22
*                      MUST BE L  OR E.                      @Z40LB22
*                                                            @Z40LB22
*01*  INNER-MACRO = NONE                                     @Z40LB22
*                                                            @Z40LB22
*01*  SYSTEM-MACRO = NONE                                    @Z40LB22
*                                                            @Z40LB22
**** END OF SPECIFICATIONS ***                               @Y40LB22*/
*                                                          /*@Z40LB22*/
*         ICBNULLC: MACRO KEYS(MF,FLAGS,VOLID,ECB,CSN);    /*@Z40LB22*/
*/* EXTERNAL DECLARES                                        @Y40LB22*/
*   DCL NULTSTR1 FIXED EXT;            /*USED AS A TEST TO   @Y40LB22*/
*                                      /*SEE IF R1 ALREADY   @Y40LB22*/
*                                      /*DECLARED            @Y40LB22*/
*/* INTERNAL DECLARES                                        @Y40LB22*/
*   DCL  RETCODE FIXED;                /*RETURN CODE         @Y40LB22*/
*   DCL  NULCODE CHAR;                 /*NULLIFYC ORDER      @Y40LB22*/
*   DCL  LENGTH CHAR;                  /*LENGTH OF BLOCK     @Y40LB22*/
*   DCL  ESW FIXED;                    /*EXIT-SWITCH         @Y40LB22*/
*   DCL  BSW FIXED;                    /*BRCH-SWITCH         @Y40LB22*/
*   DCL  CTR FIXED;                    /*PARM-SWITCH         @Y40LB22*/
*   NULCODE='09';                      /*NULLIFYC OPCODE     @Y40LB22*/
*   LENGTH='2C';                       /*DEFINE REQ LENGTH   @Y40LB22*/
*/* INITIALIZE SWITCHES TO ZERO                              @Y40LB22*/
*   ESW=0;                             /*INIT ERROR SWITCH   @Y40LB22*/
*   BSW=0;                             /*INIT BRANCH SWITCH  @Y40LB22*/
*   CTR=0;                             /*INIT PARM  SWITCH   @Y40LB22*/
*/* END OF DECLARES AND INITIALIZATION                       @Y40LB22*/
*   IF NULTSTR1=0 THEN                 /*HAS R1 BEEN DCL'D?  @Y40LB22*/
*             DO;                      /*NO,DECLARE IT       @Y40LB22*/
*                  ANS('DCL NULBR1 PTR REG(1) ;'××         /*@Y40LB22*/
*                       '/*WILL CONTAIN BLOCK ADDRESS @Y40LB22*/')
*                       SKIP(1);                           /*@Y40LB22*/
*                  NULTSTR1=1;         /*NULTSTR1 SET TO 1   @Y40LB22*/
*             END;                     /*                    @Y40LB22*/
*   IF MF(1)^='L' THEN                 /*IF NOT LIST FORM    @Y40LB22*/
*        GO TO EXCHECK;                /*THEN BRANCH         @Y40LB22*/
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Y40LB22*/
*        DO;                           /*NO,TURN ESW ON AND  @Y40LB22*/
*             ESW=1;                   /*PRINT ERROR MSG     @Y40LB22*/
*             ANS MSG('  ICB602I - A NAME FOR THE '××
*                  'REQUEST BLOCK MUST BE SPECIFIED '××
*                  'IN MF(2)')SKIP(5);                     /*@Y40LB22*/
*             RETCODE=12;              /*SET RETURN CODE     @Y40LB22*/
*        END;                          /*                    @Y40LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/
*        GO TO EXIT;                   /*YES, BRANCH         @Y40LB22*/
*        IF FLAGS ^= '' THEN  /*FLAGS SPECIFIED?             @Y40LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @Y40LB22*/
*        IF VOLID ^= '' THEN  /*VOLID SPECIFIED?             @Y40LB22*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @Y40LB22*/
*        IF ECB ^= '' THEN    /*ECB SPECIFIED?               @Y40LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y40LB22*/
*        IF CSN ^= '' THEN    /*CSN SPECIFIED?               @Y40LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y40LB22*/
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @Y40LB22*/
*          DO;                /*YES,PRINT WARNING MSG        @Y40LB22*/
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @Y40LB22*/
*             ANS MSG('  ICB604I - WARNING-ONLY'××
*                 ' THE MF PARAMETER IS VALID FOR THE'××
*                 ' LIST FORM  ')SKIP;                     /*@Y40LB22*/
*          END;               /*                             @Y40LB22*/
*/*                                                          @Y40LB22*/
*/*********************************************************  @Y40LB22*/
*/* PRINT OUT DECLARES FOR LIST FORM                         @Y40LB22*/
*/*********************************************************  @Y40LB22*/
*/*                                                          @Y40LB22*/
*/*                                                          @Y40LB22*/
*   ANS('/*******************************************'××
*       '************* @Y40LB22*/')SKIP;
*   ANS('/*   MSSC NULLIFY VOLUME/CARTRIDGE MACRO    '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*VS1-4/VS2-3 VERSION--03/14/75 LEVEL 00    '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @Y40LB22*/')SKIP;
*   IF MF(3) ^= '' THEN DO;            /*PLS ATTR SPCD?      @Y40LB22*/
*   ANS('DCL 1  '××MF(2)××' '××MF(3)××','××
*   '/*NULLIFYC REQUEST BLOCK*/ ') SKIP(1);
*       END;
*     ELSE
*       DO;
*   ANS('DCL 1  '××MF(2)××','××' /*MF2 REQUEST BLOCK'××
*        '@Y40LB22*/') SKIP(1);
*       END;
*   ANS('      2  NULENGTH FIXED(31), /*LENGTH'××
*        ' = 44 BYTES (DEC.) @Y40LB22*/')SKIP(1);
*   ANS('      2  NULORDER CHAR(1), /*OPCODE='××
*        ' 09 HEX @Y40LB22*/') SKIP(1);
*   ANS('      2  NULRES1 CHAR(1), /*RESERVED @Y40LB22*/') SKIP(1);
*   ANS('      2  NULFLAGA BIT(16),'××
*        ' /*FLAGS FIELD @Y40LB22*/') SKIP(1);
*   ANS('        3  NULVOL BIT(1), /*AN ACTIVE VOLUME'××
*        'IS BEING NULLIFIED @Y40LB22*/') SKIP(1);
*   ANS('        3  NULTRAN BIT(1), /*A TRANSIENT VOLUME'××
*        'IS BEING NULLIFIED @Y40LB22*/') SKIP(1);
*   ANS('        3  NULSCRC BIT(1), /*A SCRATCH CARTRIDGE'××
*        'IS BEING NULLIFIED @Y40LB22*/') SKIP(1);
*   ANS('        3  *      BIT(2), /*UNUSED @Y40LB22*/') SKIP(1);
*   ANS('        3  NULCART1 BIT(1), /*CARTRIDGE 1'××
*        ' IS MISSING @Y40LB22*/') SKIP(1);
*   ANS('        3  NULCART2 BIT(1), /*CARTRIDGE 2'××
*        ' IS MISSING @Y40LB22*/') SKIP(1);
*   ANS('        3  *       BIT(9), /*RESERVED BITS '××
*        'AND MUST BE ZERO @Y40LB22*/') SKIP(1);
*   ANS('      2  NULVOLID CHAR(6),'××
*        ' /*VOLID FIELD @Y40LB22*/') SKIP(1);
*   ANS('      2  NULASID CHAR(2), /*ASID AREA '××
*        'USED BY THE SVC @Y40LB22*/') SKIP(1);
*   ANS('      2  NULECB FIXED(31), /*ADDR OF ECB @Y40LB22*/')
*        SKIP(1);                                          /*@Y40LB22*/
*   ANS('      2  NULCSN CHAR(12), /*SERIAL NO OF CARTRIDGE '××
*        'TO BE ACTED UPON @Y40LB22*/') SKIP(1);
*   ANS('      2  NULRES2 CHAR(12); /*RESERVED @Y40LB22*/')
*        SKIP(1);                                          /*@Y40LB22*/
*   GO TO EXIT;                        /*BRANCH TO END       @Y40LB22*/
*/*********************************************************  @Y40LB22*/
*/* THIS IS ALL THAT IS DONE FOR LIST FORM                   @Y40LB22*/
*/*********************************************************  @Y40LB22*/
*/* THE MACRO BRANCHES HERE FOR EXEC FORM                    @Y40LB22*/
*/*********************************************************  @Y40LB22*/
*/*                                                          @Y40LB22*/
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM?          @Y40LB22*/
*             GO TO EXFORM;            /*YES, BRANCH         @Y40LB22*/
*   ESW=1;                             /*TURN EXIT-SWTCH ON  @Y40LB22*/
*   DO;                                /*PRINT THIS ERR MSG  @Y40LB22*/
*        ANS MSG('  ICB620I - INVALID MF PARAMETER'××
*             ' SPECIFIED, MUST BE L OR E') SKIP(5);       /*@Y40LB22*/
*   END;                                /*                   @Y40LB22*/
*   RETCODE=12;                        /*SET RETURN CODE     @Y40LB22*/
*   GO TO TEST1;                       /*BRANCH              @Y40LB22*/
*EXFORM: IF MF(2)='' THEN              /*ADDR OF LIST GIVEN  @Y40LB22*/
*             DO;                      /*NO,PRINT ERROR MSG  @Y40LB22*/
*                  ESW=1;              /*TURN EXIT-SWTCH ON  @Y40LB22*/
*                  ANS MSG('  ICB612I - MF(2) MUST '××
*                  'CONTAIN REQ BLK NAME IF '××
*                  'EXEC MACRO FORM REQUESTED ') SKIP(5);  /*@Y40LB22*/
*                  RETCODE=12;         /*SET RETURN CODE     @Y40LB22*/
*                  GO TO TEST1;        /*BRANCH              @Y40LB22*/
*             END;                     /*                    @Y40LB22*/
*   ANS('/*******************************************'××
*       '************* @Y40LB22*/')SKIP;
*   ANS('/*  MSSC NULLIFY VOLUME/CARTRIDGE MACRO     '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*VS1-4/VS2-3 VERSION-- 03/14/75 LEVEL 00   '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*       '              @Y40LB22*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @Y40LB22*/')SKIP;
*   ANS('RFY(NULBR1)RSTD; /*RESTRICT REGISTER 1 @Y40LB22*/')SKIP;
*   ANS('NULBR1=ADDR('××MF(2)××
*        '); /*SET NULBR1 TO ADDR OF REQ BLK @Y40LB22*/') SKIP(1);
*  IF MF(3) = 'COMPLETE' THEN    /*REQUEST TO ZERO?          @Y40LB22*/
*   DO;                          /*YES,ZERO BLK              @Y40LB22*/
*   ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';'××         /*@Y40LB22*/
*       '/*ZERO REQUEST BLOCK @Y40LB22*/')SKIP;
*   END;                        /*                           @Y40LB22*/
*   ANS('NULENGTH='××QUOTE(LENGTH)××'X;'××
*       '/*SET LENGTH FIELD @Y40LB22*/')SKIP(1);
*   ANS('NULORDER='××QUOTE(NULCODE)××'X; /*OPCODE @Y40LB22*/') SKIP(1);
*TEST1:                                                    /*@Y40LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y40LB22*/
*   IF FLAGS ^='' THEN                 /*FLAGS SPECIFIED?    @Y40LB22*/
*        DO;
*   ANS('NULFLAGA='××FLAGS××';/*FILL IN FLAGS FIELD @Y40LB22*/')
*        SKIP(1);                                          /*@Y40LB22*/
*        END;                          /*                    @Y40LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y40LB22*/
*   IF VOLID ^='' THEN                 /*VOLID SPECIFIED?    @Y40LB22*/
*        DO;                           /*                    @Y40LB22*/
*   ANS('NULVOLID='××VOLID××';/*FILL IN VOLID FIELD @Y40LB22*/')
*        SKIP(1);
*        END;                          /*                    @Y40LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y40LB22*/
*   IF ECB ^='' THEN                   /*ECB   SPECIFIED?    @Y40LB22*/
*        DO;                           /*                    @Y40LB22*/
*   ANS('NULECB=ADDR'××ECB××';/*FILL IN ECB FIELD @Y40LB22*/')
*        SKIP(1);                                          /*@Y40LB22*/
*        END;                          /*                    @Y40LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y40LB22*/
*   IF CSN ^='' THEN                    /*EXTS  SPECIFIED?    @Y40LB22*/
*        DO;
*   ANS('NULCSN='××CSN××';/*FILL IN CSN FIELD @Y40LB22*/') SKIP(1);
*        END;                          /*                    @Y40LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y40LB22*/
*LINK: ANS(' SVC (126); /*ISSUE SVC INSTRUCTION @Y40LB22*/')
*        SKIP(1);
*      ANS('RFY  NULBR1 UNRSTD;/*UNRESTRCT REG 1 @Y40LB22*/')SKIP;
*EXIT: RETURN CODE(RETCODE);                               /*@Y40LB22*/
*   %END;                                                  /*@Y40LB22*/
