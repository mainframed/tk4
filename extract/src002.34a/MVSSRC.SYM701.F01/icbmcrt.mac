* %/*  START OF SPECIFICATIONS****                             @Y30LB02
.*                                                             @Y30LB02
.*01   MODULE-NAME = ICBMCRT                                   @Y30LB02
.*                                                             @Y30LB02
.*01   DESCRIPTIVE-NAME = MOVE CARTRIDGE MACRO                 @Y30LB02
.*                                                             @Y30LB02
.*01   COPYRIGHT = NONE                                        @Y30LB02
.*                                                             @Y30LB02
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02
.*                                                             @Y30LB02
.*01   FUNCTION = REQUEST VIRTUAL VOLUMES BE MOVED FROM        @Y30LB02
.*                THE MSF                                      @Y30LB02
.*                                                             @Y30LB02
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02
.*                                                             @Y30LB02
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02
.*                                                             @Y30LB02
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02
.*                      ICB AND MC                             @Y30LB02
.*                                                             @Y30LB02
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS@Y30LB02
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02
.*                                                             @Y30LB02
.*01   MODULE-TYPE = MACRO                                     @Y30LB02
.*                                                             @Y30LB02
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02
.*                                                             @Y30LB02
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02
.*                                                             @Y30LB02
.*02     ENTRY-POINT = ICBMCRT                                 @Y30LB02
.*                                                             @Y30LB02
.*02     PURPOSE = A MOVE CARTRIDGE REQUEST WILL BE            @Y30LB02
.*       ISSUED WHENEVER THE CALLER WANTS TO REMOVE A          @Y30LB02
.*       CARTRIDGE OR A VIRTUAL VOLUME FROM THE MSF.           @Y30LB02
.*                                                             @Y30LB02
.*02     LINKAGE = SVC 126                                     @Y30LB02
.*                                                             @Y30LB02
.*01  INPUT                                                    @Y30LB02
.*                                                             @Y30LB02
.* MACRO SYNTAX                                                @Y30LB02
.*                                                             @Y30LB02
.*   LIST FORM                                                 @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBMCRT  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   STANDARD FORM                                             @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBMCRT  FLAGS=ADDR/(R)        LIBID=ADDR/(R)                @Y30LB02
.*         ECB=ADDR/(R)          CSN=ADDR/(R)                  @Y30LB02
.*                               VVICEXT=ADDR/(R)              @Y30LB02
.*                                                             @Y30LB02
.* EXECUTE FORM                                                @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBMCRT  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02
.*                              ECB=ADDR/(R)                   @Y30LB02
.*                              CSN=ADDR/(R)                   @Y30LB02
.*                              FLAGS=ADDR/(R)                 @Y30LB02
.*                              LIBID=ADDR/(R)                 @Y30LB02
.*                              VVICEXT=ADDR/(R)               @Y30LB02
.*                                                             @Y30LB02
.*   KEYWORD PARAMETERS:                                       @Y30LB02
.*                                                             @Y30LB02
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02
.*          IS STORED.                                         @Y30LB02
.*                                                             @Y30LB02
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02
.*              AND LENGTH FIELDS.                             @Y30LB02
.*                                                             @Y30LB02
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02
.*                                                             @Y30LB02
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02
.*              PLS LIST FORM.                                 @Y30LB02
.*                                                             @Y30LB02
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02
.*              BUTE EXAMPLE:                                  @Y30LB02
.*                                                             @Y30LB02
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02
.*              BASED(*), ETC.                                 @Y30LB02
.*                                                             @Y30LB02
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02
.*              BINDING INSTRUCTION.                           @Y30LB02
.*                                                             @Y30LB02
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02
.*                                                             @Y30LB02
.*              SUB-PARAMETERS                                 @Y30LB02
.*                                                             @Y30LB02
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02
.*                                                             @Y30LB02
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02
.*                                                             @Y30LB02
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02
.*                   IN THE REQUEST BLOCK.                     @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   FLAGS - FLAGS:  THE FIELD WHICH INDICATES THE FUNC-       @Y30LB02
.*           TION(S) TO BE PERFORMED.  THE FORMAT OF THE       @Y30LB02
.*           FLAGS FIELD IS SHOWN BELOW:                       @Y30LB02
.*                                                             @Y30LB02
.*   ---------------------------------                         @Y30LB02
.*   × 0 × 0 × X × X × 0 × 0 × 0 × 0 ×                         @Y30LB02
.*   ---------------------------------                         @Y30LB02
.*   BITS 0-1-------       ×RESERVED - MUST BE SET TO ZERO×    @Y30LB02
.*                                                             @Y30LB02
.*   BIT 2----------'1'B   MOVE TRANSIENT VOLUME               @Y30LB02
.*                  '0'B   NO FUNCTION REQUESTED (DEFAULT)     @Y30LB02
.*                                                             @Y30LB02
.*   BIT 3----------'1'B   MOVE SCRATCH                        @Y30LB02
.*                  '0'B   NO FUNCTION REQUESTED (DEFAULT)     @Y30LB02
.*                                                             @Y30LB02
.*   BITS 4-5 -------      ×UNUSED AND MUST BE SET TO ZERO×    @Y30LB02
.*                                                             @Y30LB02
.*   BITS 6-7 -------      ×RESERVED - MUST BE SET TO ZERO×    @Y30LB02
.*                                                             @Y30LB02
.*   NOTE:   BITS 0-7 ARE 'MUTUALLY EXCLUSIVE'                 @Y30LB02
.*                                                             @Y30LB02
.*     TRANSIENT VOLUME:                                       @Y30LB02
.*         THE SOURCE VOLUME (MAY BE 2 CARTRIDGES) IS          @Y30LB02
.*         SPECIFIED BY SEQUENCE 1 CSN.                        @Y30LB02
.*         THE KEYWORD PARAMETER CSN MUST BE SPECIFIED.        @Y30LB02
.*                                                             @Y30LB02
.*         MOVE TRANSIENT VOLUME REQUIRED PARMS:  FLAGS,       @Y30LB02
.*         ECB AND CSN (CSN1).                                 @Y30LB02
.*                                                             @Y30LB02
.*     MOVE SCRATCH:                                           @Y30LB02
.*         MOVE ANY AVAILABLE SCRATCH CARTRIDGE WITHIN A       @Y30LB02
.*         SPECIFIED MSF.  USE OF THE CARTRIDGE SERIAL         @Y30LB02
.*         NUMBER IS OPTIONAL.  IF CARTRIDGE SERIAL NUMBER     @Y30LB02
.*         IS SPECIFIED WITH THE MOVE SCRATCH OPTION, CART-    @Y30LB02
.*         RIDGE SPECIFIED WITH 'CSN' IS MOVED PROVIDED IT     @Y30LB02
.*         IS AVAILABLE.  THE LIBID PARAMETER MUST BE          @Y30LB02
.*         SPECIFIED.                                          @Y30LB02
.*                                                             @Y30LB02
.*         MOVE SCRATCH REQUIRED PARMS:  FLAGS, ECB AND        @Y30LB02
.*         LIBID.  OPTIONAL PARMS: CSN                         @Y30LB02
.*                                                             @Y30LB02
.*   LIBID - THE FIELD WHICH IDENTIFIES THE MSF SUB-           @Y30LB02
.*         SYSTEM FROM WHICH TO REMOVE A SCRATCH CART-         @Y30LB02
.*         RIDGE.  THE FORMAT OF THE LIBID FIELD IS SHOWN      @Y30LB02
.*         BELOW:                                              @Y30LB02
.*                                                             @Y30LB02
.*   ----------------------------------                        @Y30LB02
.*   × 0 × 0 × 0 × 0 × 0 × 0 × X × X ×                         @Y30LB02
.*   ----------------------------------                        @Y30LB02
.*   BITS 0-5 --------     ×IGNORED - MUST BE SET TO ZERO×     @Y30LB02
.*                                                             @Y30LB02
.*   BITS 6-7 --------     MAY BE SET TO BINARY 0,1,2, OR 3    @Y30LB02
.*                                                             @Y30LB02
.*   CSN - IDENTIFIES A SPECIFIC CARTRIDGE, BY SERIAL          @Y30LB02
.*   NUMBER, TO BE REMOVED FROM THE MSF.  FOR MOVE             @Y30LB02
.*   TRANSIENT VOLUME, CSN IDENTIFIES THE SEQUENCE 1 CART-     @Y30LB02
.*   RIDGE OF THE VOLUME; THE ENTIRE VOLUME WILL BE MOVED      @Y30LB02
.*   FROM THE MSF.                                             @Y30LB02
.*                                                             @Y30LB02
.*   ECB - THE NAME OF THE EVENT CONTROL BLOCK (ECB) TO BE     @Y30LB02
.*   POSTED WHEN THE REQUEST IS COMPLETE. THE USER MUST ALSO   @Y30LB02
.*   DECLARE A MINIMUM 50 BYTE CONTIGUOUS AREA TO CONTAIN      @Y30LB02
.*   THE MESSAGE GENERATED BY THE MESSAGE TASK.  (THE ECB      @Y30LB02
.*   AND APPENDED DATA AREA MUST BE IN COMMON CORE IN VS/2).   @Y30LB02
.*   THE ECB IS POSTED WITH ONE OF THE FOLLOWING POST CODES:   @Y30LB02
.*   70, 71, 72, 73, 74, ETC..  THE POST CODE WILL BE PLACED   @Y30LB02
.*   IN THE LOW-ORDER BYTE OF THE ECB - '7F'X INDICATES        @Y30LB02
.*   SUCCESSFUL COMPLETION.  THE MSC DATA WILL BE MOVED TO     @Y30LB02
.*   CORE LOCATION ADDRESS(ECB)+4.  THE ECB PARAMETER MUST BE  @Y30LB02
.*   SPECIFIED AND THE ECB AREA MUST BE CLEARED (SET TO        @Y30LB02
.*   BINARY 0) BEFORE INVOKING THE MACRO.                      @Y30LB02
.*                                                             @Y30LB02
.*   VVICEXT - THE NAME OF AN AREA WHICH CONTAINS THE MSVC     @Y30LB02
.*   EXTENSION (VVICEXT) MAPPING.  IF THIS PARAMETER IS NOT    @Y30LB02
.*   SPECIFIED, THE CORRESPONDING POSITION IN THE REQUEST      @Y30LB02
.*   BLOCK MUST BE SET TO ZERO.  THE MAPPING MACRO FOR THE     @Y30LB02
.*   MSVC EXTENSION TO MOVE CARTRIDGE IS IEZMCRTE.             @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02
.*                                                             @Y30LB02
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02
.*                                                             @Y30LB02
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02
.*                THE REQUESTED FUNCTION                       @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02
.*                                                             @Y30LB02
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02
.*                INVOCATION                                   @Y30LB02
.*                                                             @Y30LB02
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02
.*                                                             @Y30LB02
.*01  TABLES = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02
.*      ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE         @Y30LB02
.*                SPECIFIED IN MF(2)                           @Y30LB02
.*      ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID       @Y30LB02
.*                FOR LIST FORM                                @Y30LB02
.*      ICB605I:  ECB MUST BE SPECIFIED FOR STANDARD           @Y30LB02
.*                FORM MACRO                                   @Y30LB02
.*      ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD         @Y30LB02
.*                FORM MACRO                                   @Y30LB02
.*      ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME              @Y30LB02
.*                IF EXEC MACRO FORM REQUESTED                 @Y30LB02
.*      ICB615I:  INVALID MF PARAMETER SPECIFIED,              @Y30LB02
.*                MUST BE L, E, OR NULL                        @Y30LB02
.*                                                             @Y30LB02
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02
.*                                                             @Y30LB02
.*01  INNER MACROS = NONE                                      @Y30LB02
.*                                                             @Y30LB02
.*01  SYSTEM MACRO =IHBINNRA                                   @Y30LB02
.*                                                             @Y30LB02
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02
.*                                                             @Y30LB02
.**** END OF SPECIFICATIONS ***                                @Y30LB02
         MACRO                                                 @Y30LB02
&SYMBOL  ICBMCRT &MF=,&FLAGS=,&LIBID=,&CSN=,&ECB=,                     *
               &VVICEXT=                                       @Y30LB02
         LCLB  &ERSW               CONDITION SWITCHES          @Y30LB02
         LCLC  &MCRT               MOVE MACRO INSTR INDX       @Y30LB02
&MCRT    SETC  'M'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02
.*                                                             @Y30LB02
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02
.*                                                             @Y30LB02
         AIF   ('&MF(1)' NE 'L').EFORM      LIST FORM?         @Y30LB02
.*                                                             @Y30LB02
.*       PROCESSING OF LIST MACRO FORM                         @Y30LB02
.*                                                             @Y30LB02
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS      @Y30LB02
.*       SPECIFIED FOR THE LIST FORM AND PUTS OUT MOVE         @Y30LB02
.*       CARTRIDGE REQUEST BLOCK.                              @Y30LB02
.*                                                             @Y30LB02
         AIF   ('&FLAGS' NE '' OR  '&LIBID'                            *
               NE '' OR '&CSN' NE '' OR '&ECB' NE '').WARN     @Y30LB02
         AGO   .LIST                                           @Y30LB02
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02
         MNOTE 4,'  IS VALID FOR LIST FORM '                   @Y30LB02
.*                                                             @Y30LB02
.LIST    ANOP                                                  @Y30LB02
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--INITIALIZED LIST FORM   @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  DS    0F                                              @Y30LB02
MCRTLEN  DC    F'48'               LENGTH OF MOVE REQ          @Y30LB02
MCRTOPCD DC    XL1'0E'             MOVE CARTRIDGE OPCODE       @Y30LB02
MCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02
MCRTFLAG DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02
MCRTLIBR DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02
MCRTRES2 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02
MCRTRES3 DC    XL8'000000000000'   8-BYTE RESERVE AREA         @Y30LB02
MCRTCSN  DC    XL12'000000000000'  12-BYTE AREA FOR CSN        @Y30LB02
MCRTRES4 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02
MCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02
MCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02
MCRTVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.LISTDS  ANOP                                                  @Y30LB02
*  MACMEAN MSSC MOVE CARTRIDGE MACRO--UNINITIALIZED LIST FORM  @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
ICBMCRT  DSECT                                                 @Y30LB02
MCRTLEN  DS    F                   LENGTH OF REQ 30 HEX        @Y30LB02
MCRTOPCD DS    XL1                 MOVE OPCODE 0E HEX          @Y30LB02
MCRTRES1 DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02
MCRTFLAG DS    XL1                 1-BYTE FLAGS AREA           @Y30LB02
MCRTLIBR DS    XL1                 1-BYTE LIBID AREA           @Y30LB02
MCRTRES2 DS    XL8                 8-BYTE RESERVED AREA        @Y30LB02
MCRTRES3 DS    XL8                 8-BYTE RESERVE AREA         @Y30LB02
MCRTCSN  DS    CL12                12-BYTE AREA FOR CSN        @Y30LB02
MCRTRES4 DS    XL2                 2-BYTE RESERVED AREA        @Y30LB02
MCRTASID DS    XL2                 2-BYTE ASID AREA            @Y30LB02
MCRTECB  DS    A                   4-BYTES FOR ECB ADDR        @Y30LB02
MCRTVEXT DS    A                   4-BYTE VVICEXT ADDR         @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*       PROCESSING FOR THE EXECUTE MACRO FORM                 @Y30LB02
.*                                                             @Y30LB02
.EFORM   AIF   ('&MF(1)' NE 'E').SFORM      IS IT EFORM?       @Y30LB02
         AIF   ('&MF(2)' EQ '').EFOUT       IS 2ND PARM NULL?  @Y30LB02
.*                                                             @Y30LB02
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--EXECUTE FORM            @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02
.*                                 USING IHBINNRA MACRO        @Y30LB02
         LA    0,48                LENGTH OF MOVE REQ          @Y30LB02
         ST    0,0(1)              STORE LENGTH                @Y30LB02
         MVI   4(1),X'0E'          STORE MOVE OPCODE           @Y30LB02
         AGO   .CKSW2                                          @Y30LB02
.*                                                             @Y30LB02
.EFOUT   ANOP                                                  @Y30LB02
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED '       @Y30LB02
&ERSW    SETB  1              SET CONDITION SWITCH TO 1        @Y30LB02
.*                                                             @Y30LB02
.CKSW2   AIF   (&ERSW).FINISH      IF ERROR - END PROCESSING   @Y30LB02
         AGO   .CPROC     NAME OK - CONTINUE PROCESS           @Y30LB02
.*                                                             @Y30LB02
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02
.*                                                             @Y30LB02
.SFORM   AIF   ('&MF(1)' NE '').INCFM       STANDARD FORM?     @Y30LB02
         AIF   ('&FLAGS' NE '').CKECB       FLAGS SPECIFIED?   @Y30LB02
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED'        @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO   .CKSW4                                          @Y30LB02
.CKECB   AIF   ('&ECB' NE '').CKSW4     ECB SPECIFIED?         @Y30LB02
&ERSW    SETB  1                  ERROR CONDITION NOTED        @Y30LB02
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED FOR'      @Y30LB02
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02
         AGO   .CKSW4                                          @Y30LB02
.*                                                             @Y30LB02
.INCFM   ANOP                                                  @Y30LB02
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL'         @Y30LB02
.*                                                             @Y30LB02
.CKSW4   AIF   (&ERSW).FINISH      IF ERROR-END PROCESSING     @Y30LB02
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--STANDARD FORM           @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
         CNOP 0,4                                              @Y30LB02
&SYMBOL  BAL   1,&MCRT             BRANCH AROUND REQ BLK       @Y30LB02
MCRTLEN  DC    A(&MCRT-*)          LENGTH OF MOVE REQ          @Y30LB02
MCRTOPCD DC    XL1'0E'             MOVE CARTRIDGE OPCODE       @Y30LB02
MCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02
MCRTFLAG DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02
MCRTLIBR DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02
MCRTRES2 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02
MCRTRES3 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02
MCRTCSN  DC    XL12'000000000000'  12-BYTE AREA FOR CSN        @Y30LB02
MCRTRES4 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02
MCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02
MCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02
MCRTVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02
&MCRT    EQU   *                                               @Y30LB02
.*                                                             @Y30LB02
.*       PROCESS REQUEST BLOCK FOR STANDARD AND EXECUTE FORMS  @Y30LB02
.*                                                             @Y30LB02
.CPROC   AIF   ('&FLAGS' EQ '').LIBID       FLAGS SPECIFIED?   @Y30LB02
         AIF   ('&FLAGS'(1,1) EQ '(').FLREG FLAGS IN REG-FORM? @Y30LB02
         MVC   6(1,1),&FLAGS       PUT FLAGS IN REQUEST BLK    @Y30LB02
         AGO   .LIBID              BRANCH                      @Y30LB02
.*                                                             @Y30LB02
.FLREG   ANOP                                                  @Y30LB02
         MVC   6(1,1),0(&FLAGS(1)) REG-FORM -PLACE FLAGS REQBLK@Y30LB02
.*                                                             @Y30LB02
.LIBID   AIF   ('&LIBID' EQ '').CSN       LIBID SPECIFIED?     @Y30LB02
         AIF   ('&LIBID'(1,1) EQ '(').LIBREG  REG-FORM?        @Y30LB02
         MVC   7(1,1),&LIBID       ADDR-FM, PUT LIBID IN REQBLK@Y30LB02
         AGO   .CSN                BRANCH                      @Y30LB02
.*                                                             @Y30LB02
.LIBREG  ANOP                                                  @Y30LB02
         MVC   7(1,1),0(&LIBID(1)) REG-FORM-PUT LIBID IN REQBLK@Y30LB02
.*                                                             @Y30LB02
.CSN     AIF   ('&CSN' EQ '').CKECB2         CSN SPECIFIED?    @Y30LB02
         AIF   ('&CSN'(1,1) EQ '(').CSNREG   CSN REG-FORM?     @Y30LB02
         MVC   24(12,1),&CSN       PUT CSN IN REQ BLOCK        @Y30LB02
         AGO   .CKECB2             BRANCH                      @Y30LB02
.*                                                             @Y30LB02
.CSNREG  ANOP                                                  @Y30LB02
         MVC   24(12,1),0(&CSN(1)) REG FORM-CSN IN BLOCK       @Y30LB02
.*                                                             @Y30LB02
.CKECB2  AIF   ('&ECB' EQ '').CKVEXT   ECB SPECIFIED           @Y30LB02
         AIF   ('&ECB'(1,1) EQ '(').ECBREG  ECB REG-FORM?      @Y30LB02
         LA    15,&ECB             ADDR-FORM                   @Y30LB02
         ST    15,40(1)            STORE ADDR IN REQBLK        @Y30LB02
         AGO   .CKVEXT                                         @Y30LB02
.ECBREG  ANOP                                                  @Y30LB02
         ST    &ECB,40(1)          REG-FORM,STORE ECB          @Y30LB02
.CKVEXT  AIF   ('&VVICEXT' EQ '').INVOKE  VVICEXT SPECIFIED    @Y30LB02
         AIF   ('&VVICEXT'(1,1) EQ '(').VVIREG   REG-FORM?     @Y30LB02
         LA    15,&VVICEXT         ADDR-FORM                   @Y30LB02
         ST    15,44(1)            STORE ADDR IN REQBLK        @Y30LB02
         AGO   .INVOKE                                         @Y30LB02
.VVIREG  ANOP                                                  @Y30LB02
         ST    &VVICEXT,44(1)      REG-FORM                    @Y30LB02
.INVOKE  ANOP                                                  @Y30LB02
         SVC   126                 INVOKE THE SVC              @Y30LB02
.FINISH  MEND
**/
*   ICBMCRT:  MACRO KEYS(MF,FLAGS,LIBID,CSN,ECB,
*                    VVICEXT);                             /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/*                          EXTERNAL DECLARES               @Y30LB02*/
*/*                                                          @Y30LB02*/
*   DCL  TESTMCRT  FIXED EXT;    /*CTR FOR S-FORM INVOC      @Y30LB02*/
*   DCL  MCTESTR1  FIXED EXT;    /*TEST FOR REG1 INVOC       @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*                          INTERNAL DECLARES               @Y30LB02*/
*/*                                                          @Y30LB02*/
*   DCL  ERSW     FIXED;     /*ERROR CONDITION SWITCH        @Y30LB02*/
*   DCL  MCRTCD   CHAR;      /*MOVE CARTRIDGE OPCODE         @Y30LB02*/
*   DCL  RETCODE  FIXED;     /*RETURN CODE                   @Y30LB02*/
*   DCL  MCRTLN   CHAR;      /*LENGTH OF MOVE CART REQBLK    @Y30LB02*/
*   DCL  CTR      FIXED;     /*CTR FOR LIST PARAMETERS       @Y30LB02*/
*        CTR = 0;            /*INITIALIZE PARMAMETER CTR     @Y30LB02*/
*        MCRTCD = '0E';      /*INITIALIZE OPCODE             @Y30LB02*/
*        MCRTLN = '30';      /*INITIALIZE LENGTH             @Y30LB02*/
*        RETCODE = 0;        /*INITIALIZE RETURN CODE        @Y30LB02*/
*        ERSW = 0;           /*INITIALIZE ERROR SWITCH       @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*      CHECK FOR VALID MACRO FORMAT - E, L, OR NULL        @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*     IF MCTESTR1=0 THEN     /*REG 1 DECLARED?               @Y30LB02*/
*        DO;                 /*NO,DECLARE IT                 @Y30LB02*/
*             ANS('DCL MCR1 REG(1) PTR ;/*ADDRESS OF '××
*             'REQUEST BLOCK @Y30LB02*/')SKIP;
*             MCTESTR1=MCTESTR1+1; /*INCREM REG DCLD CTR     @Y30LB02*/
*        END;                      /*                        @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF MF(1) ^= 'L' THEN           /*LIST FORM?              @Y30LB02*/
*     GO TO EFORM;                 /*NO,CK FOR EXECUTE FM    @Y30LB02*/
*   IF MF(2) = '' THEN             /*LIST NAME SPECIFIED?    @Y30LB02*/
*     DO;                          /*PRINT ERROR MESSAGE     @Y30LB02*/
*        ERSW = 1;                 /*SET ERROR SWITCH        @Y30LB02*/
*        RETCODE = 12;             /*SET ERROR RETURN TO 12  @Y30LB02*/
*        ANS MSG('  ICB602I - A NAME FOR THE '××
*        'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;  /*@Y30LB02*/
*        GO TO FINISH;             /*BRANCH TO END PROCES    @Y30LB02*/
*     END;                         /*                        @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      THE FOLLOWING CODE WILL CHECK FOR ILLEGAL           @Y30LB02*/
*/*      PARAMETERS SPECIFIED WITH LIST FORM AND             @Y30LB02*/
*/*      PUT OUT MOVE CARTRIDGE REQUEST BLOCK                @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*   ELSE                           /*                        @Y30LB02*/
*     DO;                          /*CHECK LIST PARAMETERS   @Y30LB02*/
*/*                                                          @Y30LB02*/
*        IF FLAGS ^= '' THEN    /*FLAGS SPECIFIED?           @Y30LB02*/
*             CTR = CTR + 1;    /*YES,INCREMENT COUNTER      @Y30LB02*/
*        IF LIBID ^= '' THEN    /*MSF IDENTIFICATION?        @Y30LB02*/
*             CTR = CTR + 1;    /*YES,INCREMENT COUNTER      @Y30LB02*/
*        IF CSN ^= ''  THEN     /*CART SERIAL SPECIFIED?     @Y30LB02*/
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/
*        IF ECB ^= '' THEN      /*ECB SPECIFIED?             @Y30LB02*/
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/
*        IF VVICEXT ^= '' THEN  /*MSVC EXTENSION SPECD?      @Y30LB02*/
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/
*        IF CTR  > 0  THEN      /*COUNTER GREATER THAN 0?    @Y30LB02*/
*          DO;                  /*YES,WARN USER              @Y30LB02*/
*             RETCODE = 4;      /*SET RETURN CODE TO 4       @Y30LB02*/
*             ANS MSG('  ICB604I - WARNING-ONLY'××
*                 ' THE MF PARAMETER IS VALID FOR'××
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/
*          END;                 /*                           @Y30LB02*/
*     END;                      /*                           @Y30LB02*/
*     IF MF(3) ^= '' THEN       /*PLS ATTRIBUTE SPECIFIED    @Y30LB02*/
*        GO TO ATTRLST;         /*BRCH,PROCESS ATTRIBUTE     @Y30LB02*/
*     ELSE                      /*PUT OUT INITIALIZED LIST   @Y30LB02*/
*       DO;                     /*OUTPUT DECLARES            @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('DCL 1 '××MF(2)××' STATIC LOCAL,'××
*        '/*MOVE CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('    2  MCRTLEN  FIXED(31)INIT('××QUOTE('30')××
*        'X),/*LENG OF MOVE CARTRIDGE REQUEST BLK @Y30LB02*/')SKIP;
*        ANS('    2  MCRTOPCD  FIXED(8)INIT('××QUOTE('0E')××
*        'X), /*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES1 CHAR(1)INIT('××QUOTE
*        ('00')××'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTFLG   BIT(8)INIT('××QUOTE
*        ('00000000')××'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;
*        ANS('       3  *      BIT(2),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'××
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'××
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;
*        ANS('       3  *       BIT(4),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTLIB  BIT(8)INIT('××QUOTE
*        ('00000000')××'B), /*ONE BYTE-LIBID @Y30LB02*/')SKIP;
*        ANS('       3  *       BIT(5),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'××
*        ' ZERO TO THREE @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES2 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;
*        ANS('     3  *(8) CHAR(1)INIT((8)'××QUOTE
*        ('00')××'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES3 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;
*        ANS('     3  *(8) CHAR(1)INIT((8)'××QUOTE
*        ('00')××'X),/*INIT RES AREA TO ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP;
*        ANS('     3  *(12) CHAR(1)INIT((12)'××QUOTE
*        ('00')××'X),/*INIT CSN AREA TO ZERO @Y30LB02*/')SKIP;
*        ANS('     2  MCRTRES4 CHAR(2) INIT('××
*        QUOTE('0000')××'X),/*RESERVED @Y30LB02*/')SKIP;
*        ANS('     2  MCRTASID CHAR(2) INIT('××
*        QUOTE('0000')××'X),/*ASID FIELD @Y30LB02*/')SKIP;
*        ANS('     2  MCRTECB  FIXED(31)INIT(0),/*EVENT '××
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;
*        ANS('     2  MCRTVEXT  FIXED(31)INIT(0);/*MSVC '××
*        'EXTENSION AREA @Y30LB02*/')SKIP;
*        GO TO FINISH;   /*BRANCH TO END                     @Y30LB02*/
*      END;              /*                                  @Y30LB02*/
*/*                                                          @Y30LB02*/
*ATTRLST:
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('DCL 1 '××MF(2)××' '××MF(3)××','××
*        ' /*MOVE CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('    2  MCRTLEN  FIXED(31),/*LENGTH OF'××
*        ' MOVE CARTRIDGE REQUEST BLK = 30 HEX @Y30LB02*/')SKIP;
*        ANS('    2  MCRTOPCD  FIXED(8)'××
*        ' , /*MOVE CARTRIDGE OPCODE = 0E HEX @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES1  CHAR(1),/*RESERVED'××
*        ' AND ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTFLG   BIT(8),'××
*        '/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;
*        ANS('       3  *      BIT(2),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'××
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'××
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;
*        ANS('       3  *       BIT(4),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTLIB  BIT(8) ,/*BYTE-LIBID @Y30LB02*/')SKIP;
*        ANS('       3  *       BIT(6),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'××
*        ' ZERO TO THREE @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES2 CHAR(8) ,/*8-BYTE RES  @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES3 CHAR(8) ,/*8-BYTE RES @Y30LB02*/')SKIP;
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES4 CHAR(2) ,/*RESERVED @Y30LB02*/')SKIP;
*        ANS('    2  MCRTASID CHAR(2) ,/*ASID AREA @Y30LB02*/')SKIP;
*        ANS('    2  MCRTECB  FIXED(31),/*EVENT '××
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;
*        ANS('    2  MCRTVEXT  FIXED(31);/*MSVC '××
*        'EXTENSION AREA @Y30LB02*/')SKIP;
*        GO TO FINISH;    /*BRANCH TO END                    @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*   PROCESSING THE EXECUTE MACRO FORM                      @Y30LB02*/
*/*                                                          @Y30LB02*/
*EFORM:
*   IF MF(1) ^= 'E' THEN     /*EXECUTE FORM SPECIFIED?       @Y30LB02*/
*     GO TO SFORM;           /*BRANCH TO CK FOR STAND        @Y30LB02*/
*   IF MF(2) = '' THEN       /*IS LIST NAME SPECIFIED?       @Y30LB02*/
*     DO;                    /*PRINT ERROR MESSAGE           @Y30LB02*/
*        ERSW = 1;           /*SET SET ERROR SWITCH TO 1     @Y30LB02*/
*        RETCODE = 12;       /*SET RETURN CODE TO 12         @Y30LB02*/
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN '××
*        'REQ BLK NAME IF EXEC MACRO FORM REQUESTED')SKIP; /*@Y30LB02*/
*        GO TO CKSW;         /*BRANCH                        @Y30LB02*/
*     END;                   /*                              @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ELSE                    /*PROCESS EXECUTE FORM           @Y30LB02*/
*        ANS('/*******************************************'××
*            '************* @Y30LB02*/')SKIP;
*        ANS('/*    MACMEAN  MSSC MOVE CARTRIDGE MACRO    '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************* @Y30LB02*/')SKIP;
*    IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?       @Y30LB02*/
*      DO;                       /*                          @Y30LB02*/
*          ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';'××  /*@Y30LB02*/
*          '/*ZERO OUT REQUEST BLOCK @Y30LB02*/')SKIP;
*      END;                      /*                          @Y30LB02*/
*/*                                                          @Y30LB02*/
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
*        ANS('MCR1= ADDR('××MF(2)××'); /*R1 PTR'××
*        '  TO REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('MCRTLEN= '××QUOTE(MCRTLN)××'X; '××           /*@Y30LB02*/
*        '/*LENGTH-MOVE REQUEST @Y30LB02*/')SKIP;
*        ANS('MCRTOPCD= '××QUOTE(MCRTCD)××'X;'××           /*@Y30LB02*/
*        '/*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*CKSW:
*   IF ERSW = 1 THEN           /*ERROR SWITCH SET?           @Y30LB02*/
*     GO TO FINISH;            /*YES,END PROCESSING          @Y30LB02*/
*   ELSE                       /*BRCH,CHECK PARAMETERS       @Y30LB02*/
*     GO TO COMPROC;           /*BRANCH                      @Y30LB02*/
*/*                                                          @Y30LB02*/
*SFORM:
*   IF MF(1) ^= '' THEN        /*STANDARD FORM SPECIFIED?    @Y30LB02*/
*     DO;                      /*NO,PROCESS ERROR            @Y30LB02*/
*        ERSW = 1;             /*SET ERROR SWITCH TO 1       @Y30LB02*/
*        RETCODE = 12;         /*SET RETURN CODE TO 12       @Y30LB02*/
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '××
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/
*        GO TO CKSW2;         /*BRANCH,CHECK ERROR SWITCH    @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF FLAGS = '' THEN        /*FLAGS SPECIFIED?             @Y30LB02*/
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/
*        RETCODE = 12;        /*SET RETURN CODE TO 12        @Y30LB02*/
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '××
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/
*        GO TO CKSW2;         /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*   IF ECB = '' THEN          /*ECB SPECIFIED?               @Y30LB02*/
*     DO;                     /*PRINT OUT ERROR MSG          @Y30LB02*/
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/
*        RETCODE = 12;        /*SET RETURN CODE              @Y30LB02*/
*        ANS MSG('  ICB605I - ECB MUST BE SPECIFIED '××
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/
*     END;                                                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*CKSW2:
*   IF ERSW = 1 THEN         /*ERROR SWITCH SET?             @Y30LB02*/
*     GO TO FINISH;          /*YES,BRANCH TO END             @Y30LB02*/
*   IF TESTMCRT = 1 THEN     /*STD FORM INVOKED BEFORE?      @Y30LB02*/
*     DO;                    /*YES,NO DECLARES               @Y30LB02*/
*        ANS('/*******************************************'××
*           '************** @Y30LB02*/')SKIP;
*        ANS('/*    MACMEAN  MSSC MOVE CARTRIDGE MACRO    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
*        ANS('MCR1=ADDR(MCRTLEN); /*R1 PTR TO REQ @Y30LB02*/')SKIP;
*        ANS('MCRTLEN= '××QUOTE(MCRTLN)××'X; '××           /*@Y30LB02*/
*        '/*LENGTH-MOVE REQUEST @Y30LB02*/')SKIP;
*        ANS('MCRTOPCD= '××QUOTE(MCRTCD)××'X;'××           /*@Y30LB02*/
*        '/*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;
*        GO TO COMPROC;      /*BRCH,CK PARAMETERS            @Y30LB02*/
*     END;                   /*                              @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ELSE                     /*1ST INVOC STD FORM            @Y30LB02*/
*     DO;                    /*PUT OUT DECLARES              @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
*        ANS('MCR1=ADDR(MCRTLEN);/*R1 PTR TO REQBLK @Y30LB02*/')SKIP;
*        ANS('DCL 1  MCRTSF01  STATIC LOCAL,'××
*        '/*MOVE CART REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('    2  MCRTLEN  FIXED(31)INIT('××QUOTE('30')××
*        'X),/*LENG OF MOVE CARTRIDGE REQUEST BLK @Y30LB02*/')SKIP;
*        ANS('    2  MCRTOPCD  FIXED(8)INIT('××QUOTE('0E')××
*        'X), /*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES1 CHAR(1)INIT('××QUOTE
*        ('00')××'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTFLG   BIT(8)INIT('××QUOTE
*        ('00000000')××'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;
*        ANS('       3  *      BIT(2),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'××
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'××
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;
*        ANS('       3  *       BIT(4),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTLIB  BIT(8)INIT('××QUOTE
*        ('00000000')××'B), /*ONE BYTE-LIBID @Y30LB02*/')SKIP;
*        ANS('       3  *       BIT(5),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'××
*        ' ZERO TO THREE @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES2 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;
*        ANS('     3  *(8) CHAR(1)INIT((8)'××QUOTE
*        ('00')××'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES3 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;
*        ANS('     3  *(8) CHAR(1)INIT((8)'××QUOTE
*        ('00')××'X),/*INIT RES AREA TO ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP;
*        ANS('     3  *(12) CHAR(1)INIT((12)'××QUOTE
*        ('00')××'X),/*INIT CSN AREA TO ZERO @Y30LB02*/')SKIP;
*        ANS('    2  MCRTRES4 CHAR(2) INIT('××
*        QUOTE('0000')××'X),/*RESERVED @Y30LB02*/')SKIP;
*        ANS('    2  MCRTASID CHAR(2) INIT('××
*        QUOTE('0000')××'X),/*ASID AREA @Y30LB02*/')SKIP;
*        ANS('    2  MCRTECB  FIXED(31)INIT(0),/*EVENT '××
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;
*        ANS('    2  MCRTVEXT  FIXED(31)INIT(0);/*MSVC '××
*        'EXTENSION AREA @Y30LB02*/')SKIP;
*        TESTMCRT = TESTMCRT + 1; /*INCREM STD FORM CTR      @Y30LB02*/
*     END;                        /*                         @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*   COMMON PROCESSING FOR EXECUTE AND STANDARDS FORMS      @Y30LB02*/
*/*                                                          @Y30LB02*/
*COMPROC:
*   IF FLAGS ^= '' THEN       /*FLAGS SPECIFIED?             @Y30LB02*/
*/*                                                          @Y30LB02*/
*        ANS('MCRTFLG= ' ××FLAGS××';/*VALUE OF FLAGS'××
*        ' @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF LIBID ^= '' THEN      /*MSF ID SPECIFIED?             @Y30LB02*/
*        ANS('MCRTLIB= '××LIBID××';/*VALUE OF LIBID @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF CSN ^= '' THEN        /*CART SERIAL NUMBER SPCD?      @Y30LB02*/
*        ANS('MCRTCSN= '××CSN××';/*CARTRIDGE SERIAL'××
*        ' NUMBER @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF ECB ^= '' THEN        /*ECB SPECIFIED?                @Y30LB02*/
*        ANS('MCRTECB=ADDR' ××ECB×× ';/*ADDRESS OF EVENT '××
*        'CONTROL BLOCK @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF VVICEXT ^= '' THEN    /*MSVC EXTENSION SPECIFIED?     @Y30LB02*/
*        ANS('MCRTVEXT=ADDR'××VVICEXT×× ';/*MSVC '××
*        'EXTENSION AREA @Y30LB02*/')SKIP;
*/*      INVOKE THE SVC AND END PROCESSING                   @Y30LB02*/
*/*                                                          @Y30LB02*/
*        ANS('SVC (126);/*INVOKE THE SVC @Y30LB02*/')SKIP;
*        ANS('RFY  MCR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*FINISH:
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/
*        %END;                                             /*@Y30LB02*/
