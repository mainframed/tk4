 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    EXTERNAL PROCEDURE                                    @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      ISDAFREE ENTRY,               /* FREEMAIN PROCEDURE    @Y30LB56*/
      ISDAGET0 ENTRY;               /* GETMAIN PROCEDURE     @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    GENERAL REGISTERS                                     @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      R1 PTR REG(1) UNRSTD,         /* PARAMETER REGISTER    @Y30LB56*/
      R15 FIXED REG(15) UNRSTD;     /* RETURN CODE REGISTER  @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    LOCAL POINTERS MUST BE ASSIGNED TO REGISTERS BY PLS2  @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      WORKPTR PTR,                  /* PARAMETER PTR TO SDACVT
                                                             @Y30LB56*/
      CVTPTR PTR,                   /* POINTER TO SDACVT     @Y30LB56*/
      GET0PTR PTR,                  /* POINTER TO ACTIVE WORK AREA
                                                             @Y30LB56*/
      GET0INDX PTR,                 /* PTR TO NEXT AVAILABLE SPACE IN
                                       ACTIVE WORK AREA      @Y30LB56*/
      LPARMPTR PTR;                 /* POINTER TO SDA CONTROL@Y30LB56
                                       STATEMENTS            @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    MISCELANEOUS WORK AREAS, POINTERS AND CONSTANTS       @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      RETCODE FIXED(15),            /* RETURN CODE           @Y30LB56*/
      WORKVAR FIXED,                /* WORK VARIABLE         @Y30LB56*/
      WORKX1 PTR,                   /* WORK POINTER          @Y30LB56*/
      WORKX2 PTR,                   /* WORK POINTER          @Y30LB56*/
      I FIXED;                      /* DO LOOP COUNTER       @Y30LB56*/
 @EJECT;                                                   /*@Y30LB56*/

 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    MAINTENANCE SPACE                                     @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      1 PATCH CHAR(50) STATIC,      /* RESERVED FOR PTF'S    @Y30LB56*/
       2 *(50) CHAR(1) INIT((50)'00'X);                    /*@Y30LB56*/

 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    MAP OF REPORT CONTROLLED PORTION OF WORKAREA HEADER   @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      1 GET0HDR1 BASED(DCS00PTR) POS(29),
       2 RATIO CHAR(2),             /* ERROR/USAGE=RATIO LOWER LIMIT
                                                             @Y30LB56*/
       2 SUM CHAR(1),               /* SUMMARY=Y×N           @Y30LB56*/
       2 * CHAR(1),
       2 SER CHAR(12),              /* CARTRIDGE SERIAL NO FACTOR
                                                             @Y30LB56*/
       2 RETCDSV FIXED(15),         /* RETURN CODE SAVE AREA @Y30LB56*/
       2 * CHAR(2),
       2 GET0PSV PTR,               /* SAVE AREA FOR GET0PTR @Y30LB56*/
       2 GET0XSV PTR;               /* SAVE AREA FOR GET0INDX@Y30LB56*/
     %GET0HD1L='LENGTH(GET0HDR1)';
 /*  %GET0HD1L='LENGTH(GET0HDR1)'                            @Y30LB56*/

 @EJECT;                                                   /*@Y30LB56*/

 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    MAP OF WORK AREA DCS ENTRIES                          @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      1 DCSENTRY BASED(GET0INDX),
       2 CHAINPTR PTR,              /* POINTER TO NEXT ENTRY IN CHRON
                                       ORDER (0 IF LAST)     @Y30LB56*/
       2 DATIME BDY(WORD) CHAR(8),
        3 ADATE BIT(32),            /* DATE - 00YYDDDS       @Y30LB56*/
        3 ATIME BIT(32),            /* TIME - HHMMSSTH       @Y30LB56*/
       2 SNS4D BDY(WORD) CHAR(28),  /* SAVE SENSE AREA       @ZM30998*/
        3 SNS1A2 CHAR(2),
         4 SNSBYT1 BIT(4),          /* SENSE BYTE 1, BITS 0-3@Y30LB56*/
         4 SNSSID BIT(12),          /* DRD SUBSYSTEM ID      @Y30LB56*/
        3 SNS9A10 CHAR(2),
         4 SNSBYT9 BIT(7),          /* SENSE BYTE 9, BITS 0-6@Y30LB56*/
         4 SNSADDR BIT(9),          /* MSC LOWER INTERFACE ADDRESS
                                                             @Y30LB56*/
        3 SNS12T31 BDY(WORD) CHAR(21), /* SENSE SAVEAREA     @ZM30998*/
         4 SNSRDUC FIXED(16) UNSIGNED,/* READ USAGE COUNTER  @Y30LB56*/
          5 OFLORDUC BIT(1),
         4 SNSRDCK FIXED(16) UNSIGNED,/* READ CHECK COUNTER  @Y30LB56*/
          5 SNSBYT14 BIT(8),        /* HIGH BYTE WITH FLAGS  @ZM31073*/
           6 * BIT(2),
           6 OFLORDCK BIT(1),
         4 SNSWRUC FIXED(16) UNSIGNED,/* WRITE USAGE COUNTER @Y30LB56*/
          5 OFLOWRUC BIT(1),
         4 SNSWRCK FIXED(16) UNSIGNED,/* WRITE CHECK COUNTER @Y30LB56*/
          5 * BIT(2),
          5 OFLOWRCK BIT(1),
         4 SNSBYT20 BIT(8),         /* BYTE 20 NOT USED      @ZM30998*/
          5 SNSFORCE BIT(1),        /* FORCED LOGGING BIT    @ZM31073*/
          5 SNSLDCHK BIT(1),        /* TEMP LOAD CHECK       @ZM31073*/
          5 SNSAVAL4 BIT(1),        /* AVAIL STRIPES = 4     @ZM31073*/
         4 SNSCSN CHAR(12),         /* CARTRIDGE SERIAL NUMBER
                                                             @Y30LB56*/
        3 * CHAR(3),                /* SPARE                 @ZM30998*/
       2 SNSRDRAT FIXED(8),         /* READ ERROR/USAGE=RATIO@Y30LB56*/
       2 SNSWRAT FIXED(8),          /* WRITE ERROR/USAGE=RATIO
                                                             @Y30LB56*/
       2 * CHAR(2);                                        /*@Y30LB56*/
     %DCSENTRL='LENGTH(DCSENTRY)';
 /*  %DCSENTRL='LENGTH(DCSENTRY)'                            @Y30LB56*/

 @EJECT;                                                   /*@Y30LB56*/

 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 /*                                                          @Y30LB56*/
 /*    SUBPOOL AND BYTE COUNT FOR CALL TO ISDAGET0           @Y30LB56*/
 /*                                                          @Y30LB56*/
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

    DCL
      1 GETWORK FIXED STATIC,
       2 * BIT(8) INIT(1),          /* SUBPOOL 1             @Y30LB56*/
       2 * FIXED(24) INIT(2048);    /* GET 2K OF WORKAREA    @Y30LB56
                                                             @Y30LB56*/
 @EJECT;                                                   /*@Y30LB56*/

 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

 WORK AREA DATA FORMAT

                       BYTE
                 0    1    2    3
          WORD  ___________________
            0  ×  STARTPTR         ×    ADDRESS OF START OF DATA AREA
 WORK AREA     ×___________________×     (POINTS TO OLDEST DCS ENTRY)
 HEADER.    1  × *ENDPTR           ×    ADDRESS OF END OF DATA AREA
 (*) FIELDS    ×___________________×
 SET BY     2  ×*SPN× *LENGTH      ×    SUBPOOL NUMBER AND LENGTH OF
 ISDAGET0.     ×____×______________×    THIS WORKSPACE IN BYTES
            3  ×    NEXTPTR        ×    ADDRESS OF NEXT WORKSPACE
               ×___________________×
            4  ×    LASTPTR        ×    ADDRESS OF PREVIOUS WORKSPACE
               ×___________________×
            5  ×    BLOCKID        ×    OWNER BLOCK ID 'DCS '
               ×___________________×
            6  ×BLOCKCNT ×         ×    WORKSPACE COUNT / UNUSED
     _________ ×_________×_________×
            7  × RATIO   ×SUM ×    ×    RATIO, SUMMARY 'Y' OR 'N'
               ×_________×____×____×     UNUSED BYTE
 CONTROL    8  × SER               ×
 STATEMENTS    ×                   ×    CARTRIDGE SERIAL NUMBER
            9  ×                   ×    FACTOR LEFT JUSTIFIED
               ×                   ×
 WORDS     10  ×                   ×
 7-13    _____ ×___________________×
 SAVED     11  × RETCDSV × UNUSED  ×     MODULE RETURN CODE
 IN FIRST      ×_________×_________×
 WORKAREA  12  ×  GET0PSV          ×    GET0PTR SAVE AREA
 ONLY.         ×___________________×
           13  ×  GET0XSV          ×    GET0INDX SAVE AREA
     _________ ×___________________×
           14  ×                   ×
               ×                   ×    LOGREC DATA SAVE AREA
                         .              SEE ENTRY ILLUSTRATION BELOW
                         .
                         .
     @EJECT;                                               /*@Y30LB56*/
 LOGREC DATA SAVE AREA - DCS ENTRY FORMAT

ONE ENTRY IS CREATED FOR EACH VALID LOGREC RECORD RECEIVED BY ISDADCS0.
THESE ENTRIES ARE SAVED IN THE PREVIOUSLY ILLUSTRATED WORK AREA.

             BYTE
       0    1    2    3
      ___________________
     ×    CHAINPTR       ×    POINTER TO NEXT ENTRY IN LOGREC DATA.
     ×___________________×
     ×       DATE        ×    OBR/MDR HEADER DATE. FORMAT: 00YYDDDS
     ×___________________×
     ×       TIME        ×    OBR/MDR HEADER TIME. FORMAT: HHMMSSTH
     ×___________________×
     × 1  × 2  × 9  × 10 ×
     ×____×____×____×____×
     × 12 × 13 × 14 × 15 ×
     ×____×____×____×____×    MSC FORMAT 4 - SA FORMAT D SENSE DATA
     × 16 × 17 × 18 × 19 ×
     ×____×____×____×____×
     × 20 × 21 × 22 × 23 ×
     ×____×____×____×____×
     × 24 × 25 × 26 × 27 ×
     ×____×____×____×____×
     × 28 × 29 × 30 × 31 ×
     ×____×____×____×____×
     ×RDR ×WRR × *  ×  * ×    RDR - READ ERROR/USAGE=RATIO
     ×____×____×____×____×    WRR - WRITE ERROR/USAGE=RATIO

     CHAINPTR ENTRIES ARE ARRAINGED IN ASCENDING CHRONOLOGICAL
     ORDER BY DATE/TIME.  CHAINPTR IS 0 ON THE LAST ENTRY.
   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
