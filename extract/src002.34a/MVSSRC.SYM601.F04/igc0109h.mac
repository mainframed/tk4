         TITLE 'IGC0109H SVC 98 (PROTECT) SECOND LOAD - PASSWORD DATA SX
               ET MAINTENANCE/UPDATE ROUTINE'
IGC0109H CSECT
*        VS2 RELEASE 037 CHANGES
*A109300,109600,141500,163500,204988-204990,204992-204993      @ZA26557
*A766000-766500,776500,845000-847000                           @ZA26557
*C184600,631000,636000,699000,701000                           @ZA25557
*C633000                                                       @ZA17955
*
*        VS2 030 SU
*
*0000390800-390820                                             @ZA04243
*
*0000005500,227000-227500,302000-304000,317000,323000-324000   @ZA11617
*0000335000,373400,559000-562200,563800-568600,570200-571000   @ZA11617
*0000588000,633000                                             @ZA11617
*
*A 071500,168500,371500-371600,373500-373600,379500-390500,631500
*A 636500,765500-767441,814500-814600                          @YL026TA
*C 006000,371000,373000,378000,574500,576994,604620-604640,631000
*C 636000                                                      @YL026TA
*D 574600-576494,658500-658700                                 @YL026TA
*A 142500,574900-576994,604620-604640                            YM2237
*C 574700-574800,658600-658700                                   YM2237
*D 575000-577000,580500-580700                                   YM2237
*A 117500,574500-574800                                          YM2667
*C 576000                                                        YM2667
*D 373500-373600                                                 YM2667
*C 580500                                                        YM2158
*A 335500                                                       SA50964
*C 309000,336000                                                SA50964
*D 327500-327600                                                SA50964
*C 384500,390000,604620                                         ZA00657
*C 373600                                                       ZA00658
*A 106600-106700,227500,559500,588600-588700                    ZA01374
*D 432000                                                      @ZA02233
*A 666300-666600                                               @ZA06424
*C 227000-227500,302000-304000,317000,323000-324000,570000     @ZA06424
*C 335000,373400,559000-562000,564000-568000,571500-571600     @ZA06424
*C 314500  A 318010  D 280500-280700                           @ZA07995
***********************************************************************
* STATUS -- OS/VS2 RELEASE 037                                 @ZA26557
*                                                                     *
*
* FUNCTION -- SECOND LOAD OF THE PASSWORD DATA SET MAINTENANCE        *
*    ROUTINE                                                          *
*    1. PROCESSES ALL VALID REQUESTS TO MODIFY OR TO PROVIDE          *
*    INFORMATION FROM THE PASSWORD DATA SET.  THE FOLLOWING ARE VALID *
*    REQUESTS -                                                       *
*    ADD - ADD A NEW (CONTROL) ENTRY OR ADD A (SECONDARY) ENTRY       *
*    REPLACE - REPLACE AN EXISTING ENTRY BY REPLACING (1) THE EIGHT   *
*    BYTE PASSWORD, (2) PROTECTION MODE, (3) USER DATA FIELD, OR ANY  *
*    COMBINATION OF THESE THREE.                                      *
*    DELETE - DELETE A SECONDARY ENTRY OR DELETE A CONTROL ENTRY AND  *
*    ANY EXISTING SECONDARY ENTRIES FOR A DATA SET NAME               *
*    LIST - PROVIDE THE REQUESTOR WITH THE 80 BYTE DATA FIELD OF A    *
*    PARTICULAR ENTRY IN THE PASSWORD DATA SET.                       *
*    TTR - PROVIDE THE REQUESTOR WITH THE RELATIVE LOCATION (TTR) OF  *
*    A PARTICULAR ENTRY IN THE PASSWORD DATA SET                      *
*    2. PROVIDE THE PROTECTION MODE FLAG BIT SETTING FOR THE DSCB OF  *
*    A DATA SET TO THE NEXT LOAD OF SVC 98.                           *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IGC0109H - ENTRY POINT OF SECOND LOAD, ENTERED BY XCTL FROM *
*    FIRST LOAD (IGC0009H)                                            *
*                                                                     *
* INPUT --                                                            *
*    REGISTER RPARM POINTS TO INPUT PARAMETER LIST                    *
*    REGISTER RW POINTS TO WORK AREA                                  *
*    REGISTER RA CONTAINS ENTRY CODE FOR THIS LOAD                    *
*    REGISTER RB CONTAINS RETURN CODE FROM FIRST LOAD OF SVC 98       *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER RW POINTS TO WORK AREA                                  *
*    REGISTER RPARM POINTS TO INPUT PARAMETER LIST                    *
*    REGISTER RB PASSES RETURN CODE BETWEEN LOADS OF SVC 98           *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IECPCNVT - BRANCH TO THE RESIDENT DATA MANAGEMENT CONVERT   *
*    ROUTINE TO CONVERT A RELATIVE DIRECT ACCESS DEIVCE ADDRESS (TTR) *
*    TO AN ACTUAL DIRECT ACCESS DEVICE ADDRESS (MBBCCHHR)             *
*         IECPRLTV - BRANCH TO THE RESIDENT DATA MANAGEMENT CONVERT   *
*    ROUTINE TO CONVERT AN ACTUAL DIRECT ACCESS DEVICE ADDRESS        *
*    (MBBCCHHR) TO A RELATIVE DIRECT ACCESS DEVICE ADDRESS (TTR)      *
*         IEA0VL00 - BRANCH TO THE RESIDENT VALIDITY CHECK ROUTINE TO *
*    VERIFY THAT THE USER-SPECIFIED AREA BELONGS TO HIM.              *
*                                                                     *
* EXITS, NORMAL -- XCTL TO IGC0209H TO PROCESS PASSWORD DATA SET      *
*                                                                     *
* EXITS, ERROR -- XCTL TO IGC0209H WITH NON-ZERO RETURN CODE          *
*    04  DATA SET NAME/PASSWORD ALREADY IN PASSWORD DATA SET          *
*    08  DATA SET NAME/PASSWORD NOT IN PASSWORD DATA SET              *
*    12  CONTROL PASSWORD IS REQUIRED OR IS INCORRECT                 *
*    16  INCOMPLETE OR INCORRECT PARAMETER LIST                       *
*    20  I/O ERROR IN PASSWORD DATA SET                               *
*    24  PASSWORD DATA SET IS FULL                                    *
*    28  BUFFER ADDRESS IS INVALID                                    *
*    RETURN CODES 8, 16, AND 44 CAN OCCUR IN FIRST LOAD OF SVC 98     *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    WORKD - A CONTIGUOUS AREA DEFINED BY IECDSECT FOR I/O CONTROL    *
*    BLOCKS FOLLOWED BY A LOCAL WORK AREA FOR COMMUNICATION AND       *
*    BUFFER SPACE                                                     *
*    PARMD - A DSECT TO MAP THE INPUT PARAMETER LIST                  *
*    WRKSPACE - A DSECT TO MAP THE LOCATE AND OBTAIN WORKAREAS        *
*                                                                     *
* ATTRIBUTES -- REENTRANT, READ ONLY, PRIVILEGED, ENABLED             *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             *
*                                                                     *
* NOTES --                                                            *
*    DESCRIBED IN DADSM LOGIC MANUAL, SY26-3787.               @YL026TA
*                                                                     *
*                                                                     *
*    PASSWORD DATA SET - FORMAT OF EACH 132 BYTE ENTRY                *
*                                                                     *
*    *                     *                                       *  *
*    *    52 BYTE KEY      *       80 BYTE DATA AREA               *  *
*    ***************************************************************  *
*    *           *         *         *           *                 *  *
*    * 44 BYTES  * 8 BYTES * 2 BYTES * 1 BYTE    * 77 BYTES        *  *
*    *           *         *         *           *                 *  *
*    * FULLY     * PASSWORD* ACCESS  * PROTECTION* USER DATA FIELD *  *
*    * QUALIFIED *         * COUNTER * MODE      *                 *  *
*    * DSNAME    *         *         * INDICATOR *                 *  *
*    ***************************************************************  *
*                                                                     *
*    PROTECTION MODE INDICATOR - FORMAT OF 1 BYTE ENTRY               *
*    BIT 0   =0 INDICATES SECONDARY PASSWORD                          *
*    BIT 0   =1 INDICATES CONTROL PASSWORD                            *
*    BIT 1-6    RESERVED                                              *
*    BIT 7   =0 PROTECTED DATA SET IS READ ONLY                       *
*    BIT 7   =1 PROTECTED DATA SET CAN BE READ OR WRITTEN             *
*                                                                     *
***********************************************************************
         EJECT
*
*        EQUATED SYMBOLS
*
SRKEY    EQU   X'A9'               SEARCH-KEY-EQ M/T OP-CODE
SRID     EQU   X'31'               SEARCH ID OP-CODE
WTKDAT   EQU   X'0D'               WRITE KEY-DATA OP-CODE
SUPDAT   EQU   X'10'               SUPPRESS DATA TRANSFER FLAG
CHAIN    EQU   X'40'               CHAIN DATA FLAG
NKEYLL   EQU   X'2C'               DATA SET NAME KEY LENGTH
KEYLL    EQU   X'34'               PASSWORD ENTRY KEY LENGTH
SLI      EQU   X'20'               CCW FLAG - INCORRECT LENGTH  ZA01374
FF       EQU   X'FF'               ALL BITS IN A BYTE           ZA01374
HLEN     EQU   X'2C'               MAXIMUM DSNAME LENGTH
HSTR     EQU   X'4D'               DATA FIELD - 77 BYTES
ENTLEN   EQU   X'84'               LENGTH OF PASSWORD ENTRY (132 BYTES)
AUTH     EQU   X'80'               AUTHORIZED USER             @ZA26557
SECPASS  EQU   X'20'               SECOND PASS SW              @ZA26557
COMMSK   EQU   X'20'               MASK- TEST FOR SUCCESSFUL I/O
EXTMSK   EQU   X'02'               MASK- TEST FOR END OF EXTENT
EOFCK1   EQU   X'41'               TO TEST ERROR EXCEPTION
EOFCK2   EQU   X'0D'               TO TEST FOR EXCEPTION ON WRITE EOD
NEWMASK  EQU   X'00'               IDENTIFY FIRST TIME INITIALIZATION
ADD      EQU   X'01'               ADD ENTRY CODE
REPLACE  EQU   X'02'               REPLACE ENTRY CODE
DELETE   EQU   X'03'               DELETE ENTRY CODE
LIST     EQU   X'04'               LIST ENTRY CODE               YM2667
CTLPW    EQU   X'80'               MASK- CONTROL PROTECTION CODE
RDWRT    EQU   X'01'               PROTECTION MODE-READ/WRITE
PCOD0    EQU   X'00'               PROTECTION CODE MASK FOR DEFAULT
PCOD3    EQU   X'03'               DEFAULT PROTECTION CODE
MPENQ    EQU   X'80'               MPDS ENQUEUE FLAG
REPASS   EQU   X'40'               MASK INDICATES REPLACE OF PASSWORD
ENQF     EQU   X'20'               TO SET DFLAG1 -INDICATE ENQUEUES
MPUPDAT  EQU   X'01'               TO SET FLAG UPDATE MPDS DSCB
DSNUPDAT EQU   X'02'               DSCB UPDATE INDICATOR
DSCBP3   EQU   X'10'               DSCB PROTECT BIT INDICATOR
DSCBP5   EQU   X'04'               DSCB PROTECT BIT INDICATOR
PROTCHCK EQU   X'10'               TEST FOR ADDRESS PROTECTION CHECK
UNITCHCK EQU   X'02'               TEST FOR UNIT CHECK           A43379
CYLINDER EQU   X'20'               TEST FOR CYLINDER END         A43379
GC209    EQU   C'2'                TO MODIFY XCTL LIST TO IGC0209H
EQ       EQU   8                   TEST FOR EQUAL COMPARE CONDITION
ZERO     EQU   0                   ZERO
ONE      EQU   1                   ONE
FOUR     EQU   4                   FOUR
NZ       EQU   14                  FOURTEEN (NON-ZERO MASK)
N1       EQU   1                   ONE
N2       EQU   2                   TWO
N3       EQU   3                   THREE
N4       EQU   4                   FOUR
N5       EQU   5                   FIVE
N7       EQU   7                   SEVEN
N8       EQU   8                   EIGHT
N12      EQU   12                  TWELVE                      @ZA26557
N16      EQU   16                  SIXTEEN
BUFLEN   EQU   80                  LENGTH OF LIST BUFFER         YM2237
RNLENGTH EQU   44                  RNAME LENGTH FOR ENQUEUE ON DSCB
BLANK    EQU   C' '                BLANK
HFF      EQU   X'FF'               BYTE OF FF
*
*        RETURN CODES FOR ALL CONDITIONS  (NORMAL OR ERROR)
*
C4       EQU   4                   RETURN CODE  4
C8       EQU   8                   RETURN CODE  8
C12      EQU   12                  RETURN CODE 12
C16      EQU   16                  RETURN CODE 16
C20      EQU   20                  RETURN CODE 20
C24      EQU   24                  RETURN CODE 24
C28      EQU   28                  RETURN CODE 28
C32      EQU   32                  RETURN CODE 32
C36      EQU   36                  RETURN CODE 36
C40      EQU   40                  RETURN CODE 40
C44      EQU   44                  RETURN CODE 44
C48      EQU   48                  RETURN CODE 48
*
*        REGISTER EQUATES
*
RP0      EQU   0                   PARAMETER REGISTER
R0       EQU   0                   WORK REGISTER               @ZA26557
RP1      EQU   1                   PARAMETER REGISTER
RP2      EQU   2                   PARAMETER REGISTER
R2       EQU   2                   WORK REGISTER
RC       EQU   3                   WORK REGISTER
RPARM    EQU   4                   ADDRESS OF CALLERS PARAMETER LIST
TCBREG   EQU   4                   TCB ADDRESS FOR VALIDITY CHECK
RW       EQU   5                   ADDRESS OF WORK AREA (WORKD)
RWK6     EQU   6                   UNUSED REGISTER
RWK7     EQU   7                   WORK REGISTER
RWK8     EQU   8                   WORK REGISTER
RWK9     EQU   9                   WORK REGISTER
RA       EQU   10                  WORK REGISTER
RB       EQU   11                  WORK REGISTER
RBASE    EQU   12                  BASE REGISTER
RD       EQU   13                  SAVE REGISTER
RE       EQU   14                  RETURN LINKAGE
RF       EQU   15                  LINKAGE/RETURN CODE
         EJECT
         USING WORKD,RW            ESTABLISH ADDRESSABILITY FOR DSECT
         BALR  RBASE,RP0           GET ADDRESS WHERE LOADED
         USING *,RBASE             ESTABLISH ADDRESSABILITY FOR PROGRAM
         B     BRARID              BRANCH AROUND ID            @ZA04243
         DC    C'IGC0109H'         MODULE ID                   @ZA04243
         DC    X'7339'             DATE 12/05/77               @ZA26557
BRARID   EQU   *                                               @ZA04243
*
*        TEST  ENTRY CONDITIONS AS SET UP BY INITIALIZATION (IGC0009H)
*        UPON ENTRY, THE BRANCH TABLE CODE AND ERROR CODE ARE IN
*        REGISTERS RA AND RB RESPECTIVELY. THE CONTENTS OF RA WILL
*        BE USED TO LINK TO THE REQUESTED PROCESSING ROUTINE AFTER
*        REGISTER RB HAS BEEN TESTED FOR  A NON-ZERO CODE.
*        IF AN ERROR CODE IS PASSED IN RB, THE ERROR EXIT IS TAKEN.
*
         LA    RD,ERETEND          ADDRESS OF ERROR EXIT
         LTR   RB,RB               HAS AN ERROR CODE BEEN PASSED
         BCR   N7,RD               GO TO ERROR EXIT
         LA    RWK8,SRCH020        SAVE ADDRESS OF SUBROUTINE
         B     ENT010(RA)          GO TO PROCESS REQUEST
ENT010   B     COM050              ADD REQUESTED- FIRST ENTRY IN D/S
         B     ADD010              ADD REQUESTED
         B     COM005              REPLACE REQUESTED
         B     COM010              DELETE REQUESTED
         B     LST010              LIST REQUESTED
*  TTR FUNCTION MUST BE HERE                                     A43379
*  BRANCHED TO DIRECTLY VIA BRANCH TABLE ABOVE.                  A43379
*                                                                A43379
*        TTR REQUEST PROCESSING ROUTINE                          A43379
*        A REQUEST TO PROVIDE THE RELATIVE TRACK ADDRESS (TTR)   A43379
*        OF A SPECIFIC PASSWORD ENTRY IS SATISFIED BY RETURNING  A43379
*        A TTR LEFT ADJUSTED, IN A USER PROVIDED BUFFER.         A43379
*                                                                A43379
*        SEARCH FOR CORRECT ENTRY AND READ COUNT FIELD           A43379
TTR010   BALR  RC,RWK8             SEARCH FOR DSN ENTRY          A43379
*                                                                A43379
         B     TTR020              SUCCESS, CONVERT ADDRESS      A43379
         B     ERET020             ERROR, DS ENTRY NOT FOUND     A43379
TTR020   LA    RWK7,CVTPRLTV-CVT   CVT OFFSET TO CONVERT ROUTINE A43379
         BAL   RA,CONV010          CONVERT MBBCCHHR TO TTR       A43379
         L     RWK9,DBUF           ADDRESS OF REQUESTOR'S BUFFER A43379
         L     TCBREG,TCBADDR      GET TCB ADDRESS             @ZA26554
         USING TCB,TCBREG          ESTABLISH TCB BASE          @ZA26554
         MODESET EXTKEY=RBT234,WORKREG=2   SWITCH TO CALLER KEY@ZA26557
SKIPKEY  ST    RP0,ZERO(RWK9)      STORE TTR IN BUFFER           A43379
         MODESET EXTKEY=ZERO       RETURN TO ZERO KEY          @ZA26557
         DROP  TCBREG                                          @ZA26554
         B     RET010              PREPARE FOR EXIT              A43379
         EJECT
*
*        ADD/REPLACE/DELETE REQUEST PROCESSING ROUTINE-
*        THIS ROUTINE IS ENTERED ON AN ADD,REPLACE OR DELETE REQUEST
*        TO PERFORM THE MAINLINE PROCESSING.
*        THIS ROUTINE LINKS TO SUBROUTINES FOR EXCP I/O FUNCTIONS,
*        TO BUILD THE PROPER PROTECTION MODE AND DATA FIELDS,
*        AND TO SET UP THE DEVICE ADDRESS (CCHHR) FOR AN ENTRY
*        TO BE ADDED TO THE END OF THE PASSWORD DATA SET.
*        DSN/PASSWORD FIELDS HAVE BEEN INITIALIZED IN THE FIRST LOAD.
*        RETURN FROM THE I/O SEARCH ROUTINE (EXCP) IS MADE AS FOLLOWS-
*                        BR    RC -KEY FOUND/ UPDATE SUCCESSFUL
*                        B   4(RC)-KEY NOT FOUND-ON SEARCH OF EXTENT
*        ON ANY OTHER ERROR CONDITION, THE ERROR EXIT IS ENTERED
*        DIRECTLY FROM THE SEARCH ROUTINE.
*
*        ENTRY IS MADE HERE FOR ALL ADD REQUESTS EXCEPT
*        A FIRST ADD INTO THE PASSWORD DATA SET.
*
*
*        A SEARCH IS MADE FOR AN EXISTING ENTRY WITH THIS DSNAME.
*
ADD010   MVI   DXCCW4+N7,NKEYLL    SRCH KEY LENGTH TO 44 BYTES @ZA11617
         OI    DXCCW4+N4,SLI       IGNORE INCORRECT LENGTH     @ZA11617
         BAL   RC,SRCH050          SEARCH FOR ENTRY WITH 44 BYTE DSN
         B     COM010              FOUND- CONTINUE SEARCH
         B     COM050              PROCESS AS A CONTROL ENTRY ADD
*        ENTRY IS MADE HERE FOR A REPLACE REQUEST
*        IF THE PASSWORD ITSELF IS BEING REPLACED, A SEARCH IS MADE
*        TO VERIFY THAT THE NEW PASSWORD DOES NOT ALREADY EXIST
COM005   TM    DFLAG2,REPASS       IS THE PASSWORD BEING REPLACED
         BNO   COM010              NO, GO SEARCH FOR DSN/CURRENT PW
         BALR  RC,RWK8             YES, SEARCH FOR DSN/NEW PASSWORD
         B     ERET010             NEW PASSWORD FOUND, ERROR
         L     R2,CURRENT          NOT FOUND, SET UP CURRENT PW SEARCH
         EX    ZERO,MOVPW          MOVE PASSWORD TO SEARCH KEY AREA
*        ENTRY IS MADE HERE FOR A DELETE/REPLACE REQUEST
*
*        A SEARCH IS MADE FOR THE DATA SET NAME/PASSWORD. FOR
*        AN ADD THE (NEW) PASSWORD IS USED, FOR DELETE OR
*        REPLACE THE (CURRENT) PASSWORD IS USED.
*
COM010   BALR  RC,RWK8             SEARCH FOR 52 BYTE DSN/PASSWORD KEY
         B     COM015              FOUND- CONTINUE SEARCH
         CLI   ENCODE,ADD          NOT FOUND- DETERMINE IF AN ADD..-
         BNE   ERET020             IF REPLACE/DELETE GO TO ERROR EXIT
         B     COM020              GO SEARCH FOR CONTROL PASSWORD ENTRY
COM015   CLI   ENCODE,ADD          ADD SPECIFIED
         BE    ERET010             IF ADD-GO TO ERROR EXIT
*
*        REPLACE/DELETE IS SPECIFIED- DETERMINE IF ENTRY BEING
*        REPLACED OR DELETED IS A CONTROL ENTRY.
*
         TM    DMODE,CTLPW         IS ENTRY A CONTROL ENTRY
         BO    COM050              IF YES-TEST FOR DELETE
*
*        THIS ROUTINE IS USED TO SEARCH FOR AND VERIFY THE CONTROL P/W
*
COM020   MVC   DREPSAV(DSAVLL),DCNT SAVE ENTIRE ENTRY FOR UPDATE
         L     R2,CONTROL          GET,ADDRESS OF CONTROL PASSWORD
         LTR   R2,R2               IS THE CONTROL PASSWORD PROVIDED
         LA    RB,C12              SET RETURN CODE IN CASE OF ERROR
         BCR   N8,RD               IF NOT GO TO ERROR EXIT
         EX    ZERO,MOVPW          MOVE CONTROL PASSWORD TO KEY FIELD
         BALR  RC,RWK8             SEARCH FOR 52 BYTE DSN/PASSWORD
*
         B     COM030              FOUND-VERIFY THAT IT IS A CONTROL
         BR    RD                  NOT FOUND-GO TO ERROR EXIT
COM030   TM    DMODE,CTLPW         IS THIS A CONTROL ENTRY
         BCR   NZ,RD               IF NOT GO TO ERROR EXIT
         XI    DMODE,CTLPW         CONTROL. SET INDICATOR OFF
         IC    RA,DMODE            SAVE MODE IN EVENT OF SECONDARY ADD
*
*        RESTORE THE FIELDS REQUIRED FOR AN ADD/REPLACE/DELETE
*
         MVC   DCNT(DSAVLL),DREPSAV RESTORE COMPLETE ENTRY TO BUFFER
         B     COM060              GO TO BUILD ENTRY FIELDS
*
*        ENTRY IS MADE HERE FOR PROCESSING OF ADD/REPLACE/DELETE
*        REQUESTS FOR CONTROL PASSWORDS IN ORDER TO SET THE DSCB
*        UPDATE INDICATORS AND SET UP THE PROTECTION MODE MASK
*
COM050   OI    DPMODE,CTLPW        SET CONTROL PASSWORD INDICATION
         OI    DFLAG1,DSNUPDAT     INDICATE DSCB UPDATE REQUIREMENT
*
*        BUILD PROTECTION MODE/DATA FIELDS
*
COM060   LA    RWK9,DFOXKEY        GET ADDRESS OF 52 BYTE KEY OF FF'S
         CLI   ENCODE,DELETE       IS THIS A DELETE REQUEST
         BE    COM070              GO TO THE DELETE ROUTINE
         BAL   RC,BLDMD010         GO TO PROTECT MODE BUILD
         BAL   RC,BLDEN010         GO TO DATA FIELD BUILD
         CLI   DCODTAB,NEWMASK     IS THIS THE FIRST ENTRY IN DATA SET
         BE    ADDON010            IF YES- BYPASS SEARCH-ADD ENTRY
*                                  AT THE BEGINNING OF THE DATA SET
         CLI   ENCODE,REPLACE      IS THIS A REPLACE
         BE    COM075              REPLACE- GO TO UPDATE ENTRY
         XC    DUSE,DUSE           CLEAR USE COUNT FIELD FOR ADDS
         ST    RWK9,DXCCW4         KEY ADR TO SRCH KEY CCW     @ZA11617
         MVI   DXCCW4,SRKEY        CCW TO SRCH ON KEY OF FF'S  @ZA11617
         OI    DXCCW6+N4,SUPDAT    TURN ON SKIP BIT            @ZA11617
*
*        SEARCH MPDS FOR AN EMPTY ENTRY (KEY ALL FF'S)
*
         BALR  RC,RWK8             SEARCH FOR EMPTY ENTRY FIELD
         B     COM080              FOUND- GO ADD ENTRY          SA50964
ADDON010 BAL   RC,ENBLK010         NOT FOUND- SET UP FOR ADD ON
*
*        SEARCH WILL POSITION FOR A WRITE COUNT-KEY-DATA
*
         BAL   RC,SRCH040          SEARCH/UPDATE ON END OF DATA SET
         B     EODRTN              ZERO KEY FOR EOF   @ZA07995  SA66202
EODRTN   EQU   *                                                SA66202
         XC    DKEYLEN(N3),DKEYLEN UPDATE SUCCESSFUL- INDICATE EOD
         BAL   RC,ENBLK020         FIND ADDRESS TO WRITE EOD RECORD
         MVI   DXCCW9+N7,N8        WRITE COUNT OF 8            @ZA11617
         BAL   RC,SRCH040          WRITE END OF DATA RECORD
         B     RET010              BRANCH FOR RETURN +0 OR +4  @ZA07995
         B     RET010              UPDATE SUCCESSFUL- GO TO EXIT
*        THIS ROUTINE IS ENTERED FOR DELETE REQUESTS TO SET UP FOR
*        WRITING OF A 52 BYTE KEY OF FFS (SIGNIFYING A DELETED ENTRY
*        TO THE SEARCH ROUTINE ADDING A NEW PASSWORD)
COM070   ST    RWK9,DXCCW9         ADR OF FFS KEY TO WRITE CCW @ZA11617
         MVI   DXCCW9+N7,KEYLL     WRITE 52 BYTE KEY OF FFS    @ZA11617
         TM    DPMODE,CTLPW        IS A CONTROL ENTRY BEING DELETED
         BO    DELC010             IF YES, GO DELETE ALL ENTRIES
         B     COM090              GO TO WRITE UPDATED ENTRY OF (FF'S)
*
*        THIS ROUTINE WRITES AN UPDATED ENTRY (ADD,DELETE,REPLACE)
*        IN THE LOCATION OF THE EXISTING ENTRY. THE UPDATE IS
*        DONE VIA A WRITE KEY-DATA OPERATION.
COM075   L     R2,NEW              GET ADDRESS OF NEW P/W FOR REPLACE
         EX    ZERO,MOVPW          MOVE NEW PASSWORD TO KEY FIELD
COM080   LA    RWK9,DKEY           KEY FIELD
         ST    RWK9,DXCCW9         SET FOR WRITE KEY-DATA      @ZA11617
COM090   EX    ZERO,MOVCNT         SET IOB SEEK FIELD           SA50964
         BAL   RC,SRCH030          SEARCH/WRITE UPDATE          SA50964
         B     RET010              UPDATE SUCCESSFUL- GO TO EXIT
*
*        THIS ROUTINE IS ENTERED WHENEVER IT HAS BEEN DETERMINED THAT
*        A CONTROL PASSWORD IS BEING DELETED. ALL PASSWORD ENTRIES
*        WITH THE DATA SET NAME SPECIFIED IN THE PARAMETER LIST WILL
*        BE DELETED. UPON ENTRY TO THIS ROUTINE, THE SEARCH OF THE
*        PASSWORD DATA SET WILL BE MADE, STARTING AT THE ENTRY
*        FOLLOWING THE CONTROL ENTRY. ANY EXISTING SECONDARY PASSWORDS
*        WILL BE DELETED FIRST, LEAVING THE CONTROL ENTRY UNTIL LAST.
*
DELC010  BAL   RC,SRCH025          UPDATE CHANNEL COMMANDS -DELETE ALL
         MVC   DREPSAV+HLEN(N5),DCNT SAVE CCHHR OF CONTROL ENTRY
DELC020  EX    ZERO,MOVCNT         SET IOB SEEK TO LAST COUNT FIELD
         BAL   RC,SRCH055          SEARCH ON KEY/WRITE UPDATE
         B     DELC020             UPDATE SUCCESSFUL- RESUME SEARCH
         MVI   DXDAADDR+N7,ZERO    RESET SEARCH ID TO RECORD ZERO
*                                  SET TO SEARCH FROM
*                                  FIRST ENTRY IN THE DATA SET.
         MVC   DXDAADDR+N3(N4),DSCLOWLM MOVE LOW EXTENT TO IOB FIELD
*        RESUME SEARCH FOR 44 BYTE DSNKEY,STARTING AT FIRST ENTRY
DELC030  BAL   RC,SRCH070          SEARCH ON KEY/WRITE UPDATE
         B     DELC040             UPDATE SUCCESSFUL-
         B     ERET040             END OF EXTENT REACHED WITHOUT
*                                  FINDING CONTROL ENTRY-ERROR
DELC050  EX    ZERO,MOVCNT         LAST COUNT TO SEEK ADDRESS    A43379
         B     DELC030             CONTINUE SEARCH
         EJECT
*
*        LIST REQUEST PROCESSING ROUTINE
*        A REQUEST TO PROVIDE THE SECURITY COUNTER,PROTECTION MODE
*        AND OPTIONAL DATA FIELD IS SATISFIED. THE 80 BYTES OF
*        INFORMATION ARE READ INTO SVC 98'S BUFFER. IF SUCCESSFUL,
*        THE USER'S BUFFER IS VALIDITY CHECKED, AND THE DATA IS
*        MOVED TO THE USER'S BUFFER.                           @YL026TA
*
LST010   EQU   *                                               @YL026TA
         LA    RWK9,DATA           BUFFER ADDRESS              @YL026TA
         STCM  RWK9,N7,DXCCW6+1       TO READ CCW              @ZA11617
*
*        SEARCH FOR CORRECT ENTRY AND READ DATA INTO BUFFER
*
         BALR  RC,RWK8             SEARCH FOR DSN ENTRY
*
         B     LST020              SUCCESSFUL RETURN           @YL026TA
         B     ERET020             ERROR, DATA SET ENTRY NOT FOUND
*                                                              @YL026TA
*        DATA SUCCESSFULLY READ. VALIDITY CHECK USER'S AREA.   @YL026TA
*                                                              @YL026TA
LST020   EQU   *                                               @YL026TA
*        HOLD LOCAL LOCK UNTIL AREA HAS BEEN CHECKED AND USED. @YL026TA
LST030   SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LOCALLOCK,     *
               IGC0109H(LST040,ERET017)),REGS=USE              ZA00657
         L     RP1,DBUF            BUFFER ADDRESS              @YL026TA
         LA    RP2,BUFLEN(RP1)     ADDRESS OF END OF BUFFER    @YL026TA
         LR    RWK9,RPARM          SAVE PARM REG IN UNUSED REG @YL026TA
         L     TCBREG,TCBADDR      TCB ADDRESS                 @YL026TA
         L     RB,CVTPTR           CVT ADDRESS                 @ZA04243
         USING CVT,RB              CVT ADDRESSABILITY          @ZA04243
         L     RF,CVT0VL00         ADDRESS OF VALIDITY CHECK   @ZA04243
         DROP  RB                  CVT NO LONGER NEEDED        @ZA04243
         BALR  RE,RF               GO VALIDITY CHECK           @YL026TA
         LR    RPARM,RWK9          RESTORE PARM REG            @YL026TA
         BC    N7,ERET015          VALIDITY CHECK FAILED       @YL026TA
*        VALIDITY CHECK OK; MOVE DATA, RELEASE LOCAL LOCK      @YL026TA
         L     RWK9,DBUF           ADDRESS OF USER'S BUFFER    @YL026TA
         MVC   ZERO(BUFLEN,RWK9),DATA  MOVE DATA FROM MY AREA TO HIS   *
                                                               @YL026TA
LST040   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCALLOCK,                *
               IGC0109H(LST030)),REGS=USE                       ZA00657
         B     RET010              SUCCESSFUL--RETURN          @YL026TA
         EJECT
*
*        ENBLK ROUTINE - PREPARE TO ADD A RECORD AFTER THE LAST BLOCK.
*        THIS ROUTINE SETS UP THE IOB SEEK FIELD WITH THE CCHHR ADDRESS
*        OF THE LAST BLOCK WRITTEN TO A TRACK. IF THERE IS NO ROOM TO
*        WRITE ANOTHER RECORD, THE RESIDENT CONVERT ROUTINE IS USED
*        TO FIND THE CCHHR OF THE NEXT TRACK.IN THIS EVENT, THE IOB
*        SEEK FIELD WILL CONTAIN A CCHHR WITH AN R FIELD OF RECORD 0.
*        THE COUNT FIELD RECORD NUMBER IS UPDATED BY 1 IN PREPARATION
*        FOR A WRITE CNT-KEY-DATA.
*
ENBLK010 MVC   DCNT(N8),DMPEND+N3  LAST BLOCK CCHHR +KL+DL TO COUNT
         LH    RWK9,DSAVT          GET TRACK (TT) PORTION OF LAST BLOCK
         XI    DFLAG1,MPUPDAT      INDICATE MPDS DSCB REQUIRES UPDATE
ENBLK020 CLC   DSCLSTAR+N2(N1),DRECAP WILL ANOTHER RECORD FIT ON TRACK.
         LA    R2,ENBLK040         ADDRESS OF COMMON ROUTINE
         BCR   FOUR,R2             YES. GO SET UP SEARCH ID
         BH    ENBLK030            NO. LAST ONE HAS BEEN WRITTEN. GET
*                                  ANOTHER TRACK
         CLC   DMPEND+N3(N4),DSCUPPLM THERE IS SPACE FOR 1 MORE RECORD
*                                  IS THIS THE LAST TRACK IN EXTENT.
         BCR   FOUR,R2             NO. GO SET UP SEARCH ID FOR RECORD.
         CLI   DKEYLEN,ZERO        YES. IS END OF FILE BEING WRITTEN
*                                  IF NOT,SPACE REQUESTED FOR NEW ENTRY
         LA    RB,C24              SET RETURN CODE IN CASE OF ERROR
         BCR   N7,RD               PASSWORD DATA SET IS FULL
         BR    R2                  USE COUNT FIELD FROM PREVIOUS WRITE
ENBLK030 LA    RWK9,ONE(RWK9)      ADD ONE TRACK TO CURRENT TT FIELD
         LR    RP0,RWK9            REG 0=TTRN  PRIOR TO CONVERTING
         SLL   RP0,N16             TTRN REFLECTS-RECORD NO. ZERO
         LA    RWK7,CVTPCNVT-CVT   OFFSET OF CONVERT ROUTINE IN CVT
         BAL   RA,CONV010          CONVERT TTR TO MBBCCHHR
ENBLK040 EX    ZERO,MOVCNT         MOVE COUNT TO IOB SEEK FIELD
         IC    RA,DRECNO           GET CURRENT RECORD NUMBER
         LA    RA,ONE(RA)          UPDATE RECORD NUMBER BY ONE
         STC   RA,DRECNO           PUT IN COUNT FIELD FOR WRITE C-K-D
         STC   RA,DSCLSTAR+N2      SAVE CURRENT RECORD COUNT
         CLI   DKEYLEN,ZERO        KEY LENGTH ZERO INDICATING EOF
         BCR   N8,RC               IF YES, DO NOT UPDATE TTR FOR DSCB
         STH   RWK9,DSAVT          SAVE TT PORTION OF TTR
         STC   RA,DSAVT+N2         SAVE R PORTION OF TTR
         BR    RC                  RETURN
         EJECT
*
*        PROTECTION MODE ANALYSIS- THIS ROUTINE USES THE PROTECTION
*        CODE SPECIFIED IN THE INPUT PARAMETER LIST TO CREATE THE
*        CORRECT PROTECTION MODE BYTE FOR THE PASSWORD BEING ADDED
*        OR REPLACED. IF THE PASSWORD IS A CONTROL PASSWORD, INDICATORS
*        ARE SET TO UPDATE THE DSCB WITH REQUESTED PROTECTION.
*
BLDMD010 CLI   PCODE,PCOD0         IS DEFAULT PROTECTION REQUESTED
         BNE   BLDMD020            IF NOT,CONVERT TO PROTECT MODE
         CLI   ENCODE,REPLACE      IS THIS A REPLACE WITH DEFAULT MODE
         BE    BLDMD035            USE EXISTING MODE IF REPLACE
         CLI   DPMODE,CTLPW        IS THIS A CONTROL PASSWORD ADD
         BNE   BLDMD050            USE CONTROL P/W MODE AS DEFAULT
         OI    DPMODE,PCOD3        IF CONTROL BEING ADDED, USE (03)
         B     BLDMD025            GO TO SET UPDATE FLAGS
BLDMD020 OC    DPMODE(N1),PCODE    USE CODE TO MASK REQUESTED OPTIONS
         TM    DPMODE,CTLPW        IS THIS A CONTROL PASSWORD ENTRY
         BNO   BLDMD030            IF NOT DSCB UPDATE IS NOT REQUIRED
BLDMD025 OI    DFLAG1,DSCBP3       SET  FOR DSCB UPDATE-PROTECTED
         TM    DPMODE,PCOD3        IS NOPWREAD/PWWRITE REQUESTED
         BNO   BLDMD030            IF NOT DO NOT RESET FLAGS
         OI    DFLAG1,DSCBP5       YES-SET DSCB FLAG-NOPWREAD
BLDMD030 NI    DPMODE,CTLPW+RDWRT  CONVERT MASK TO PROTECT MODE
         BR    RC                  RETURN
BLDMD035 NI    DFLAG1,HFF-DSNUPDAT TURN OFF DSCB UPDATE INDICATOR
BLDMD040 IC    RA,DMODE            FOR REPLACE, GET EXISTING MODE
BLDMD050 STC   RA,DPMODE           SAVE MODE FOR INSERTION IN ENTRY
*                                  DURING DATA BUILD ROUTINE
         BR    RC                  RETURN
         EJECT
*
*        DATA AREA BUILD ROUTINE
*        THIS ROUTINE CREATES AN 80 BYTE DATA FIELD FOR A PASSWORD
*        ENTRY. THE FIELD MAY CONSIST OF BLANKS IF A NULL STRING WAS
*        SPECIFIED OR IF THE ROUTINE IS ENTERED TO BUILD A DELETED
*        ENTRY.
*
BLDEN010 XR    RA,RA               CLEAR BYTE REGISTER FOR MOVE
         L     RB,STRING           STRING COUNT AND POINTER
         SLDA  RA,N8               SET UP STRING LENGTH IN REGISTER RA
*                                  BY SHIFT OF LENGTH/ADDRESS IN REG RB
         BNZ   BLDEN020            IF STRING EXISTS,MOVE IT
         CLI   ENCODE,REPLACE      IS REPLACE SPECIFIED WITHOUT STRING
         BE    BLDEN030            DEFAULT TO USE OF EXISTING FIELD
BLDEN020 EQU   *                   ADD OR DELETE IS SPECIFIED
         MVI   DAT77,BLANK         CLEAR WITH BLANKS
         MVC   DAT77+N1(HSTR-N1),DAT77 CLEAR BUFFER FOR ALL ENTRIES
         SRA   RB,N8               ADJUST STRING POINTER TO ADDRESS
         BZ    BLDEN030            TEST FOR NULL STRING
         LR    R2,RB               SAVE STRING POINTER
         LTR   RA,RA               TEST LENGTH
         LA    RB,C16              SET RETURN CODE IN CASE OF ERROR
         BCR   N8,RD               ZERO LENGTH IS AN ERROR
         BCTR  RA,ZERO             DECREMENT LENGTH FOR EXECUTE
         EX    RA,MOVSTR           MOVE STRING TO DATA BUFFER
BLDEN030 IC    RA,DPMODE           PLACE PROTECTION MODE
         STC   RA,DMODE            IN PROTECTION MODE FIELD
         BR    RC                  RETURN
         EJECT
*        THIS ROUTINE PROVIDES LINKAGE TO THE RESIDENT DATA
*        MANAGEMENT CONVERT ROUTINES.
*        CONVERT ROUTINES
*
*              MBBCCHHR TO TTR CONVERSION
*        INPUT
*        LOCATION (DMBB) MUST CONTAIN A VALUE-MBBCCHHR
*        REGISTER RWK7 MUST CONTAIN OFFSET IN CVT OF CONVERT ROUTINE
*
*        OUTPUT
*              REGISTER RP0 CONTAINS THE VALUE TTRN
*
*              TTR TO MBBCCHHR CONVERSION
*        INPUT
*        REGISTER RP0 MUST CONTAIN A VALUE-TTRN
*        REGISTER RWK7 MUST CONTAIN OFFSET IN CVT OF CONVERT ROUTINE
*
*        OUTPUT
*              LOCATION (DMBB) CONTAINS THE CONVERTED VALUE
*
CONV010  L     RF,CVTPTR           CVT OFFSET
         L     RF,ZERO(RWK7,RF)    SET UP BASE FOR CONVERT ROUTINE
         LA    RP1,DXDEB           DEB ADDRESS
         LA    RP2,DMBB            FULL MBBCCHHR ADDRESS
         STM   RWK9,RD,RNAME       SAVE REGISTERS
         BALR  RE,RF               GO TO CONVERT
         LM    RWK9,RD,RNAME       RESTORE REGISTERS
         BR    RA                  RETURN TO CALLER
         EJECT                                                   A43379
*  CYLINDER BOUNDRY REACHED, SEARCH NOT COMPLETE                 A43379
*  UPDATE CYLINDER-HEAD ADDRESS AND CONTINUE SEARCH              A43379
CYLEND   MVC   DCNT(N5),DXDAADDR+N3 MOVE CYLINDER-HEAD ADDRESS   A43379
         LH    RWK7,DCNT           LOAD CYLINDER COUNT           A43379
         LA    RWK7,ZERO(RWK7)     UP CYLINDER COUNT             A43379
         SLL   RWK7,N16            ZERO HEAD ADDRESS             A43379
         ST    RWK7,DCNT           SAVE UPDATED ADDRESS          A43379
         EX    ZERO,MOVCNT         SET IOB SEEK FIELD            A43379
         B     SRCH070             REISSUE I/O                   A43379
         EJECT
*
*        SEARCH ROUTINE- EXECUTE CHANNEL PROGRAMS TO SEARCH MPDS
*        THE  IOB,DEB AND CCW LISTS ARE MODIFED FOR EACH REQUEST
*        PRIOR TO THE EXCP BEING ISSUED.
*
*        MODIFY CCW LIST TO PERFORM A WRITE KEY-DATA OPERATION
*
*        SEARCH CHANNEL PROGRAM
*
*              SEARCH ID EQ                 DXCCW1
*              TIC                          DXCCW2
*              READ COUNT                   DXCCW3
*              SEARCH KEY EQ                DXCCW4
*              TIC                          DXCCW5
*              READ DATA                    DXCCW6
*
*        WRITE UPDATE CHANNEL PROGRAM
*
*              SEARCH ID EQ                 DXCCW7
*              TIC                          DXCCW8
*              WRITE CNT-KEY-DATA/KEY-DATA  DXCCW9
*              SEARCH ID EQ                 DXCCW10
*              TIC                          DXCCW11
*              READ DATA (VALIDATE)         DXCCW12
*
SRCH025  MVI   DXCCW4+N7,NKEYLL    SET KEY LENGTH TO 44        @ZA11617
         OI    DXCCW4+N4,SLI       IGNORE INCORRECT LENGTH     @ZA11617
         OI    DXCCW6+N4,SUPDAT+CHAIN  ON SKIP AND CHAIN BITS  @ZA11617
SRCH030  MVI   DXCCW9,WTKDAT       WRITE KEY-DATA TO CCW       @ZA11617
         MVI   DXCCW9+N7,ENTLEN    SET CCW FOR WRITE KEY-DATA  @ZA11617
         LA    RWK7,DCNT           ADDRESS OF COUNT FIELD
         ST    RWK7,DXCCW7         POINT TO THE COUNT FIELD OF @ZA11617
         ST    RWK7,DXCCW10        RECORD NUMBER TO BE WRITTEN @ZA11617
         MVI   DXCCW7,SRID         REPLACE OP-CODE CCW         @ZA11617
         MVI   DXCCW10,SRID        REPLACE OP-CODE CCW         @ZA11617
         TM    DXCCW6+N4,CHAIN     CCWLIST CONTROL PW DELETE?  @ZA11617
         BCR   ONE,RC              YES, RETURN
SRCH040  LA    RWK7,DXCCW7         ADR OF SRCH-ID/UPDATE LIST  @ZA11617
         B     SRCH060             GO TO I/O ROUTINE
SRCH020  MVI   DXCCW4+N7,KEYLL     SET KEY LENGTH TO 52 BYTES  @ZA11617
         NI    DXCCW4+N4,FF-SLI    ALLOW LENGTH CHECKING       @ZA11617
SRCH050  MVC   DXDAADDR+N3(N4),DSCLOWLM MOVE LOW EXTENT TO IOB FIELD
SRCH055  LA    RWK7,DXCCW          ADDRESS OF BASIC SEARCH CCWLIST
SRCH060  ST    RWK7,IOBSIOCC       UPDATE IOB POINTER TO CCW LIST
SRCH070  EQU   *                   ISSUE I/O                   @YL026TA
         EXCP  DXIOB               ISSUE EXCP                  @YL026TA
*
         WAIT  ECB=DXECB           ISSUE WAIT
*
         TM    DXECB,COMMSK        DID I/O COMPLETE
         BCR   ONE,RC              RETURN TO CALLER - SUCCESSFUL I/O
         TM    DXECB,EXTMSK        WAS END OF EXTENT REACHED
         BNO   EXCPCOND            NO, CHECK FOR EXCEPTIONAL CONDITION
         LA    RC,FOUR(RC)         YES, SET FOR RETURN, POSSIBLE ERROR
         BR    RC                  RETURN
EXCPCOND CLI   DXECB,EOFCK1        IS THERE AN EXCEPTIONAL CONDITION
         BNE   ERET040             IF NOT, ASSUME PERMANENT ERROR
         CLI   IOBSTAT0,EOFCK2     ON EXCEPTION, IS IT FOR EOD
         BCR   EQ,RC               EXPECTED FOR EOD-RETURN     @ZA11617
         TM    IOBSTAT0,UNITCHCK   UNIT CHECK                    A43379
         BO    SRCH090             YES, THEN NOT I/O ERROR       A43379
         CLI   DKEYLEN,X'00'       FILE MARK                    ZA01374
         BC    EQ,4(RC)            YES, EOD RETURN              ZA01374
         TM    IOBSTAT1,PROTCHCK   ADDRESS PROTECTION CHECK?
         BO    ERET015             YES, BUFFER ADDRESS NOT VALID
         B     ERET040             NO, I/O ERROR
SRCH090  TM    IOBSENS1,CYLINDER   CYLINDER END                  A43379
         BO    CYLEND              YES, CONTINUE                 A43379
*
*        PERMANENT ERROR CONDITION EXISTS
*
         EJECT
*
*
*        ERROR EXIT- ENTERED WHEN AN ERROR CONDITION HAS BEEN DETECTED
*        IN IGC0009H OR IGC0109H.
*              ERROR CODE IS IN REGISTER RB ON ENTRY TO ERETEND
*              ADDITIONAL ENTRY POINTS ARE PROVIDED FOR SPECIFIC
*              ERROR CONDITIONS TO PROVIDE THE ERROR CODE.
*
ERET040  LA    RB,C20              I/O ERROR IN PASSWORD DATA SET
         BR    RD                  GO TO EXIT
ERET010  LA    RB,C4               REQUESTED PASSWORD ALREADY EXISTS
         BR    RD                  GO TO EXIT
ERET015  LA    RB,C28              BUFFER ADDRESS FAILED PROTECTION    *
                                   CHECK
ERET017  SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,RELATED=(LOCALLOCK,       *
               IGC0109H(LST030))   RELEASE LOCAL LOCK           ZA00657
         BR    RD                  GO TO EXIT
ERET020  LA    RB,C8               REQUESTED ENTRY NOT FOUND
ERETEND  NI    DFLAG1,HFF-(MPUPDAT+DSNUPDAT) NO DSCB UPDATE ON ERROR
         B     RET020              GO DEQUEUE VIA NORMAL EXIT
DELC040  CLC   DREPSAV+HLEN(N5),DCNT WAS THE LAST DELETE FOR     A43379
*                                  THE CONTROL ENTRY.            A43379
         BNE   DELC050             NO, GO SET IOB SEEK FIELD     A43379
*
*        EXIT ROUTINE
*        ENTERED PRIOR TO XCTL TO IGC0209H OR ON RETURNING UNDER
*        NORMAL OR ERROR CONDITIONS TO PERFORM DEQUEUES.
*
RET010   XR    RB,RB               CLEAR RETURN CODE TO ZERO
*        DETERMINE HOW MANY DEQUEUES MUST BE DONE PRIOR TO EXIT.
RET020   LA    RP1,DENQLST         POINT TO DEQUEUE LIST
         TM    DFLAG1,ENQF         WERE ANY ENQUEUES DONE IN IGC0009H
         BNO   RET050              IF NOT INDICATED SKIP DEQUEUES
         CLI   ENCODE,ADD          ADD SPECIFIED
         BNE   RET040              DO SINGLE DEQUEUE ON DSN
         TM    DFLAG1,MPUPDAT+MPENQ DETERMINE HOW MANY DEQUEUES NEEDED
         BO    RET050              ENQ WAS DONE TO PROTECT THE MPDS,
*                                  DO THE DEQUEUE IN THE FINAL LOAD
         BM    RET040              IF ERROR EXISTS, ENQ IS ON MPDS,
*                                  IF THIS IS NOT AN ERROR, MPDS DEQ
*                                  MUST BE DONE IN THE FINAL LOAD AFTER
*                                  THE DSCB IS UPDATED.
*                                  CODE IS ZERO, BOTH DEQUEUES REQUIRED
*
*        DEQUEUE ON PASSWORD DATA SET
*
RET030   DEQ   MF=(E,(1)),RELATED=(SYSZPSWD-PASSWORD,IGC0009H(CHK030)) *
                                   DEQUEUE                     @YL026TA
         LA    RP1,DENQLST         POINT TO DEQUEUE LIST
RET040   LA    RWK9,DKEY           DS NAME FROM KEY AREA       @ZA17955
         ST    RWK9,DENQLST+N8     DSNAME TO DEQUEUE LIST
*        DEQUEUE ON DATA SET ENTRY IN PASSWORD DATA SET
         DEQ   MF=(E,(1)),RELATED=(SYSZPSWD-USERDATA,IGC0009H(CHK020)) *
                                   DEQUEUE                     @YL026TA
*
*        EXIT IS MADE TO THE THIRD LOAD (IGC0209H) TO PERFORM
*        UPDATING OF DSCBS OR TO CLEAN UP AND RETURN TO CALLER.
*        A NON-ZERO RETURN CODE IS IN REGISTER RB IF AN ERROR
*        CONDITION EXISTS. ON A NORMAL EXIT TO IGC0209H, FLAGS
*        ARE SET IN (DFLAG1) TO INDICATE DSCB UPDATING IF REQUIRED.
*
*        NORMAL EXIT IF DSCB UPDATING IS REQUIRED
*        THE XCTL PARAMETER LIST ADDRESS IS IN REGISTER RD
*
RET050   LA    RD,DXJBF            XCTL PARAMETER LIST ADDRESS
         MVI   N4(RD),GC209        MODIFY LIST TO (IGC0209H)
         LA    RF,N8(RD)           ADDRESS OF LIST POINTER FOR XCTL
*
*        XCTL  TO NEXT LOAD OF SVC 98
*
         XCTL  EPLOC=(RD),DCB=0,SF=(E,(15)) XCTL
         EJECT
*        CONSTANTS
MOVCNT   MVC   DXDAADDR+N3(N5),DCNT MOVE COUNT TO IOB SEEK FIELD
MOVPW    MVC   DKEY8(N8),ZERO(R2)  MOVE PASSWORD TO KEY FIELD
MOVSTR   MVC   DAT77(ZERO),ZERO(R2) MOVE DATA STRING TO BUFFER
         EJECT
*        THIS WORK AREA IS USED BY ALL LOADS OF THE PROTECT SVC.
*        ANY CHANGES TO IT MUST BE MADE TO ALL LOADS.
*
WORKD    DSECT
*
         IECDSECT
CLEARIO  EQU   *-DXECB             LENGTH FOR CLEARING I/O BLOCKS
*
COMMD    EQU   *                   CONTINUE DSECT
*
*        WORK AREA FOR MPDS COMMUNICATION AND BUFFERING
*        A CONTINUATION OF DSECT (WORKD)
*
*
DSAVR    DS    F                   SAVE AREA FOR RETURN REGISTER
DSAVT    DS    F                   MPDS LAST BLOCK SAVE AREA
DUCBADDR DS    F                   ADDRESS OF UCB LOOKUP TABLE
DPMODE   DS    CL1                 PROTECTION MODE BYTE SAVE AREA
DRECAP   DS    CL1                 SYSRES DEVICE-RECORD/TRK CAPACITY
DCODTAB  DS    CL1                 ENTRY CODE SAVE AREA FOR NEXT LOAD
*
*        DFLAG - COMMUNICATES STATUS OF DSCB UPDATING REQUIREMENTS
*
DFLAG1   DS    BL1                 COMMUNICATION FLAG
*        COMMUNICATION FLAG (DFLAG1) IN COMMD WORK AREA
*              1 BYTE  (DFLAG1)
*                   BIT  0  =1 MPDS IS ENQ TO ADD OWN P/W PROTECTION
*                        1  =1 INDICATES I/O ERROR
*                        2  =1 INDICATES ENQUEUED IN 1ST - 2ND LOADS
*                        3  =1 PROTECTED DATA SET-SET BIT 3 IN DSCB
*                        4  =1 OBTAIN WORKAREA TO BE FREED
*                        5  =1 NO PASSWORD TO READ-SET BIT 5 IN DSCB
*                        6  =1 UPDATE DSCB OF DATA SET WITH PROTECTION
*                              SPECIFIED IN BITS 3 AND 5
*                        7  =1 UPDATE MPDS DSCB FROM CORE IMAGE IN
*                              WORK AREA (WORKD) AND DEQ ON MPDS
*
DFLAG2   DS    BL1                 COMMUNICATION FLAG
*              1 BYTE (DFLAG2)
*                   BIT 0  =1 INDICATES AUTHORIZED USER        @ZA26557
*                   BIT 1  =1 INDICATES NEW PASSWORD WITH REPLACE
*                   BIT 2  =1 SECOND PASS SWITCH FOR VALCKRTN  @ZA26557
*                   BIT 3     RESERVED
*                   BIT 4     RESERVED
*                   BIT 5     RESERVED
*                   BIT 6     RESERVED
*                   BIT 7     RESERVED
*
         DS    0CL11               COUNT FIELD FOR I/O
DMPEND   DS    CL8                 MBBCCHHR OF LAST RECORD WRITTEN
DCKDLL   DS    CL3                 KEY LENGTH/DATA LENGTH
*
*        EXCP BUFFER  AREA FOR COUNT KEY DATA READ/WRITE
*
         DS    0F                  ALIGN WORD
         DS    CL1                 ALIGN FOR MBBCCHHR
DMBB     DS    CL3                 MBB FIELD FOR CONVERT ROUTINE
         DS    0CL8                COUNT FIELD FOR I/O
DCNT     DS    CL4                 CCHH PORTION OF COUNT
DRECNO   DS    CL1                 RECORD NUMBER
DKEYLEN  DS    CL1                 KEY LENGTH FOR FOR WRITE
DDATALEN DS    CL2                 DATA LENGTH FOR WRITE
DKEY     DS    CL44                EXCP- 44 BYTE KEY (DSN)
DKEY8    DS    CL8                 EXCP- 8 BYTE EXTENSION (PASSWORD)
DATA     DS    0CL80               DATA FIELD
DUSE     DS    CL2                 USE COUNT
DMODE    DS    BL1                 PROTECTION MODE BYTE FIELD
DAT77    DS    CL77                USER DATA (77 BYTES OPTIONAL DATA)
DSAVLL   EQU   *-DCNT              COUNT-KEY-DATA FIELD LENGTH
DCLEAR   EQU   *-COMMD             WORK AREA TO BE CLEARED TO ZERO
DFOXKEY  DS    52C                 52 BYTE KEY OF FF
         DS    80C                 80 BYTE DATA FIELD
*
*        OBTAIN LIST
*
OBTPTR   CAMLST SEARCH,OBTDSN,OBTVOL,OBTWRK
         ORG   OBTPTR              LABEL OBTAIN FIELDS
OBTAIN1  DS    F                   OBTAIN CAMLST FIRST FULL WORD
OBTAIN2  DS    F                   OBTAIN CAMLST SECOND FULL WORD
OBTAIN3  DS    F                   OBTAIN CAMLST THIRD FULL WORD
OBTAIN4  DS    F                   OBTAIN CAMLST FOURTH FULL WORD
         ORG
*
*        ENQUEUE PARAMETER LIST
*
DENQLST  ENQ   (DMPDSQN,DMPDS,E,HLEN,SYSTEM),MF=L
*        NAME LIST FOR ENQUEUE/DEQUEUE AND OBTAIN
DMPDSQN  DS    0CL52               ONE FIELD FOR SETTING UP IN WORKD
         DS    CL8                 QNAME
DMPDS    DS    CL44                RNAME
OBTDSN   EQU   DMPDS               DSNAME OF MASTER PASSWORD DATA SET
OBTVOL   DS    CL6                 VOLUME SERIAL OF MPDS DSCB VOLUME
DREPSAV  DS    CL140               SAVEAREA FOR PASSWORD ENTRY
LOCNAME  CAMLST NAME,DKEY,,LOCAREA LOCATE CAMLST MACRO
         ORG   LOCNAME             LABEL LOCATE CAMLST FIELDS
LOCNAME1 DS    F                   1ST WORD LOCATE CAMLST
LOCNAME2 DS    F                   2ND WORD LOCATE CAMLST
LOCNAME3 DS    F                   3RD WORD LOCATE CAMLST
LOCNAME4 DS    F                   4TH WORD LOCATE CAMLST
         ORG
USECOUNT DS    F                   SAVE POINTER TO USER COUNT HERE
*  KEEP ENQ AND DEQ LISTS TOGETHER.
ENQLIST  ENQ   (QNAME,RNAME,E,RNLENGTH,SYSTEM),RET=USE,MF=L ENQUEUE
DEQLIST  DEQ   (QNAME,RNAME,RNLENGTH,SYSTEM),RET=HAVE,MF=L DEQUEUE
*  NOTE - MFT ENQUEUE WITH QNAME EQUAL TO SYSDSN REQUIRES TCB
*         ADDRESS IMMEDIATELY FOLLOWING QNAME.
QNAME    DS    CL8                 QNAME BUFFER
TCBADDR  DS    F                   TCB ADDRESS FOR MFT ENQUEUE
RNAME    DS    CL44                RNAME BUFFER
OLDFLAG  DS    CL1                 OLD PROTECTION STATUS
NEWFLAG  DS    CL1                 NEW PROTECTION STATUS
*  WORK AREA NEEDED FOR ALLOCATION                             @YL026TA
DAPARM   DS    F                   POINTER TO REQUEST BLOCK    @YL026TA
DARQBLK  DS    0CL20               DYNAMIC ALLOCATION REQUEST          *
                                   BLOCK                       @YL026TA
DABLKLN  DS    CL1                 LENGTH OF BLOCK             @YL026TA
DAVERB   DS    CL1                 VERB CODE FOR REQUEST       @YL026TA
DAFLGS1  DS    CL2                 FLAGS                       @YL026TA
DAERRCD  DS    CL2                 ERROR RETURN CODE           @YL026TA
DAINFO   DS    CL2                 INFORMATIONAL RETURN CODE   @YL026TA
DATXTPT  DS    CL4                 ADDRESS OF TEXT POINTERS    @YL026TA
         DS    CL4                 RESERVED                    @YL026TA
DAFLGS2  DS    CL4                 FLAGS                       @YL026TA
* TEXT POINTERS                                                @YL026TA
DATP1    DS    F                                               @YL026TA
DATP2    DS    F                                               @YL026TA
DATP3    DS    F                                               @YL026TA
DATP4    DS    F                                               @YL026TA
DATP5    DS    F                                               @YL026TA
*  TEXT UNITS FOR ALLOCATION AND UNALLOCATION                  @YL026TA
DADSNM   DS    0CL50               DSNAME TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
DADSL    DS    CL2                 LENGTH                      @YL026TA
DADSN    DS    CL44                DATA SET NAME               @YL026TA
DASTAT   DS    0CL7                STATUS TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
         DS    CL1                 STATUS INDICATOR FIELD      @YL026TA
DAUNIT   DS    0CL9                UNIT NAME TEXT UNIT         @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
DAUNAM   DS    CL3                 UNIT NAME FIELD             @YL026TA
DADDNM   DS    0CL14               DDNAME TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
         DS    CL8                 DDNAME FIELD                @YL026TA
DAVOL    DS    0CL12               VOLUME TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
DAVOLSR  DS    CL6                 VOLUME SERIAL FIELD         @YL026TA
REGSAVE  DS    18F                                             @ZA26557
RCVTSAVE EQU   REGSAVE+N12                                     @ZA26557
*
*
*              PARAMETER LIST FOR ALL REQUESTS
*
*
*              COMMON  SEGMENT FOR ALL REQUESTS
*
PARMWDS  DS    0FL7                                            @ZA26554
ENCODE   DS    0BL1                ENTRY CODE
DBUF     DS    CL4                 ADDRESS OF BUFFER FOR CODE 04/05
DSNLL    DS    0CL1                DSN LENGTH
DSN      DS    CL4                 ADDRESS OF DATA SET NAME
CURRENT  DS    CL4                 ADDRESS OF CURRENT PASSWORD
*
*              ADD / REPLACE / DELETE COMMON SEGMENT
*
CONTROL  DS    CL4                 ADDRESS OF CONTROL PASSWORD
VOLNUM   DS    0CL1                NUMBER OF VOLUMES SPECIFIED
VOLIST   DS    CL4                 ADDRESS OF VOLUME LIST
*
*              ADD / REPLACE  COMMON SEGMENT
*
PCODE    DS    0BL1                PROTECTION CODE
NEW      DS    CL4                 ADDRESS OF NEW PASSWORD
STRINGL  DS    0CL1                STRING LENGTH
STRING   DS    CL4                 ADDRESS OF DATA STRING
*
WKSIZE   EQU   *-WORKD             SIZE OF PROGRAM WORKAREA
*
*        END OF MAPPING OF DSECT WORKAREA
         EJECT
*
WRKSPACE DSECT
*
*  OBTAIN WORKAREA AND LOCATE WORKAREA
*
OBTWRK   DS    CL96                DSCB
OBTCCH   DS    CL5                 CCHHR
         DS    CL249               OBTAIN WORK SPACE
         DS    0D                  ALIGN LOCATE WORKAREA
LOCAREA  DS    CL265               LOCATE WORK SPACE (VOLUME LIST)
WRKSIZE  EQU   *-WRKSPACE          SIZE OF LOCATE AND OBTAIN WORKAREA
*
         EJECT
SRT      DSECT
         IEFUCBOB
         EJECT
CVT      DSECT
         CVT
         EJECT                                                 @YL026TA
         IKJTCB                                                @ZA26554
         EJECT                                                 @ZA26554
         IKJRB                                                 @ZA26554
         EJECT                                                 @ZA26554
         IHAPSA                                                @YL026TA
         END
