   TITLE 'IGC0209H SVC 98 (PROTECT) THIRD LOAD - DSCB UPDATE ROUTINE'
IGC0209H CSECT
*        VS2 037 CHANGES
*A279000,A341000                                               @ZA18970
*C130900,423000,425000                                         @ZA26554
*A114000,114400,490000,490500,500500                           @ZA26554
*
*        VS2 030  SU
*
*0000289300,489720                                             @ZA02651
*
*0000005500,304000-307000,309000,312000-316000                 @ZA11617
*
*
*        VS/2 RELEASE 3.0 CHANGES
*A166500,167000,369500-370000,131500-131900                     Z30AAWW
*C168000,369000                                                 Z30AAWW
*        VS/2 RELEASE 2.0 CHANGES
*A 027500-027600,039600,054500,107400,113500-113700            @YL026TA
*A 198500-198600,235100,240500,244500,271400-271588            @YL026TA
*A 275500-275600,276500-286744,287800-289992,358500,361100     @YL026TA
*A 383100-384925,489500-491441,542500-542800                   @YL026TA
*C 006000,039500,062000-064000,066000,069000-072000,171000     @YL026TA
*C 175000,235000,240000,244000,271300,286800,333500,358000     @YL026TA
*C 361000,371000                                               @YL026TA
*D 025000,110000,178000-180000,183500-191000,208000-228000     @YL026TA
*D 277000-286300,288100-289000,334000-339000,372500-373000     @YL026TA
*C 219500,226500                                                 YM2647
*A 123500-123700,161500-161700,228500-229900,347500-347600      SA53652
*A 379100-379200,381800                                         SA53652
*C 153000,162000                                                SA53652
*C 183500,190500,333500,338500                                   YM2088
*A 390300-390600                                               @ZA06424
*C 304000-307000,309000,312000-316000                          @ZA06424
***********************************************************************
*                                                                     *
* STATUS --   VS 2  037   CHANGES                              @ZA26554
*                                                                     *
* FUNCTION -- THIRD LOAD OF THE PASSWORD DATA SET MAINTENANCE ROUTINE *
*    1. UPDATE PASSWORD DATA SET DSCB IF NECESSARY                    *
*    2. UPDATE THE DSCB OF THE DATA SET BEING PROTECTED WHENEVER THE  *
*    CONTROL PASSWORD PROTECTION STATUS IS CHANGED                    *
*    3. CLEANUP AND RETURN                                            *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IGC0209H - ENTRY POINT OF THIRD LOAD, ENTERED BY XCTL FROM  *
*    SECOND LOAD (IGC0109H)                                           *
*                                                                     *
* INPUT --                                                            *
*    REGISTER R5 POINTS TO WORK AREA                                  *
*    REGISTER R11 CONTAINS RETURN CODE FROM PREVIOUS LOADS OF SVC 98  *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER R15 PASSES RETURN CODE                                  *
*    REGISTER R1 CONTAINS LOCATE RETURN CODE WHEN R15 = 32            *
*    REGISTER R1 CONTAINS OBTAIN RETURN CODE WHEN R15 = 36            *
*    REGISTER R1 CONTAINS DYNAMIC ALLOCATION ERROR CODE WHEN R15 = 52 *
*                                                              @YL026TA
*    WHEN REGISTER R15 = 24 THE FOLLOWING MESSAGE IS SENT TO THE      *
*    CONSOLE OPERATOR - 'IEC021I NO SPACE IN PASSWORD DATA SET'       *
*                                                                     *
* EXTERNAL REFERENCES -- N/A                                          *
*                                                                     *
* EXITS, NORMAL -- RETURN TO CALLER                                   *
*                                                                     *
* EXITS, ERROR -- RETURN TO CALLER WITH NON-ZERO RETURN CODE          *
*    32  LOCATE FAILED                                                *
*    36  OBTAIN FAILED                                                *
*    40  UNABLE TO UPDATE DSCB                                        *
*    48  TAPE DATA SET CAN NOT BE PROTECTED                           *
*    52  UNABLE TO ALLOCATE DATA SET                           @YL026TA
*    56  DATA SPACE IS VSAM                                    @YL026TA
*    RETURN CODES 4, 8, 12, 16, 20, 24, AND 44 MAY BE PASSED FROM     *
*    PREVIOUS LOADS OF SVC 98                                         *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    WORKD - A CONTIGUOUS AREA DEFINED BY IECDSECT FOR I/O CONTROL    *
*    BLOCKS FOLLOWED BY A LOCAL WORK AREA FOR COMMUNICATION AND       *
*    BUFFER SPACE                                                     *
*    WRKSPACE - A DSECT TO MAP THE LOCATE AND OBTAIN WORKAREAS        *
*                                                                     *
* ATTRIBUTES -- REENTRANT, READ ONLY, PRIVILEGED, ENABLED             *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             *
*                                                                     *
* NOTES --                                                            *
*    DESCRIBED IN DADSM LOGIC MANUAL, SY26-3787.               @YL026TA
*                                                                     *
***********************************************************************
         EJECT
*  REGISTER EQUATES
R0       EQU   0                   GENERAL REGISTER 0
R1       EQU   1                   GENERAL REGISTER 1
R2       EQU   2                   GENERAL REGISTER 2 (UNUSED)
R3       EQU   3                   SUBROUTINE BRANCH REGISTER  @YL026TA
R4       EQU   4                   PARAMETER LIST              @YL026TA
R5       EQU   5                   WORKAREA POINTER            @YL026TA
R6       EQU   6                   GENERAL REGISTER 6
R7       EQU   7                   UCB POINTER                 @YL026TA
R8       EQU   8                   GENERAL REGISTER 8
R9       EQU   9                   GENERAL REGISTER 9
R10      EQU   10                  VOLUME COUNT                @YL026TA
R11      EQU   11                  RETURN CODE                 @YL026TA
R12      EQU   12                  BASE REGISTER FOR PROGRAM   @YL026TA
R13      EQU   13                  ADDRESS OF OBTAIN WORKAREA  @YL026TA
R14      EQU   14                  GENERAL REGISTER 14
R15      EQU   15                  GENERAL REGISTER 15
*  ABSOLUTE EQUATES (OFFSETS AND SHORT LENGTHS)
ONE      EQU   1                   ONE
TWO      EQU   2                   TWO
F0       EQU   0                   ZERO
F1       EQU   1                   ONE
F2       EQU   2                   TWO
F3       EQU   3                   THREE
F4       EQU   4                   FOUR
F5       EQU   5                   FIVE
F6       EQU   6                   SIX
F7       EQU   7                   SEVEN
F8       EQU   8                   EIGHT
F10      EQU   10                  TEN
F12      EQU   12                  TWELVE
F16      EQU   16                  SIXTEEN
F20      EQU   20                  TWENTY
F43      EQU   43                  FORTY-THREE
F77      EQU   77                  SEVENTY-SEVEN (USER DATA LENGTH)
F96      EQU   96                  NINETY-SIX
L72      EQU   72                  LENGTH OF SAVEAREA
*  RETURN CODE EQUATES
RC4      EQU   4                   RETURN CODE = 4
RC8      EQU   8                   RETURN CODE = 8
RC12     EQU   12                  RETURN CODE = 12
RC16     EQU   16                  RETURN CODE = 16
RC20     EQU   20                  RETURN CODE = 20
RC24     EQU   24                  RETURN CODE = 24
RC28     EQU   28                  RETURN CODE = 28
RC32     EQU   32                  RETURN CODE = 32
RC36     EQU   36                  RETURN CODE = 36
RC40     EQU   40                  RETURN CODE = 40
RC44     EQU   44                  RETURN CODE = 44
RC48     EQU   48                  RETURN CODE = 48
RC52     EQU   52                  RETURN CODE = 52
RC56     EQU   56                  RETURN CODE = 56            @YL026TA
*  OTHER EQUATES
MPUPDAT  EQU   X'01'               MASK TO TEST FOR MPDS UPDATE
DSNUPDAT EQU   X'02'               MASK TO TEST FOR PROTECTION UPDATE
OPREAD   EQU   X'06'               READ DATA OP CODE
OPWRITE  EQU   X'05'               WRITE DATA OP CODE
OBTNCORE EQU   X'08'               OBTAIN CORE TO BE FREED
VSAMORG  EQU   X'08'               BIT IN SECOND BYTE OF DSCB FILE-TYPE*
                                   INDICATES VSAM DATA SPACE   @YL026TA
AUTH     EQU   X'80'               IS USER AUTHORIZED SW       @ZA26554
CHAIN    EQU   X'40'               CHAIN DATA FLAG
SECPASS  EQU   X'20'               SECOND PASS SW              @ZA26554
GOODIO   EQU   X'20'               MASK TO TEST FOR SUCCESSFUL I/O
SRCHID   EQU   X'31'               SEARCH ID EQUAL OP CODE
FLAGOFF  EQU   X'14'               MASK TO TURN OFF ALL BUT BITS 3,5
NOPROT   EQU   X'EB'               MASK TO TURN OFF BITS 3,5
NOSEEK   EQU   X'18'               FILE MASK-NOSEEK
IOERR    EQU   X'40'               MASK TO SET I/O ERROR INDICATOR
DSCBP3   EQU   X'10'               MASK TO SET PROTECTION BYTE BIT 3
DSCBP5   EQU   X'04'               MASK TO SET PROTECTION BYTE BIT 5
BLANK    EQU   C' '                BLANK
SWON     EQU   X'FF'               MASK SWITCH ON               SA53652
SWOFF    EQU   X'00'               MASK SWITCH OFF              SA53652
F252     EQU   252                 OFFSET TO TTR                SA53652
RNLENGTH EQU   8                   LENGTH OF RNAME FOR ENQUEUE ON DSCB
HLEN     EQU   44                  DSNAME LENGTH FOR ENQUEUE
DSCBDLL  EQU   96                  DSCB DATA FIELD LENGTH
         EJECT
         BALR  R12,R0              GET ADDRESS WHERE LOADED
         USING *,R12               ESTABLISH ADDRESSABILITY FOR PROGRAM
         USING WORKD,R5            ESTABLISH ADDRESSABILITY FOR DSECT
         B     BEGIN               BRANCH AROUND ID             Z30AAWW
         DC    C'IGC0209H'         MODULE ID                    Z30AAWW
         DC    C'7339'             DATE 12/05/77               @ZA26554
BEGIN    EQU   *                                                Z30AAWW
         L     R13,OBTAIN4         ADDRESS OF OBTAIN WORKAREA
         USING WRKSPACE,R13        ESTABLISH ADDRESSABILITY WORKAREA
         LTR   R11,R11             IS RETURN CODE REGISTER = 0
         BNZ   CHECKRC             NO, GO CHECK RETURN CODE
         MVC   ENQLIST(ENQLEND-ENQL),ENQL INITIALIZE ENQ AND DEQ LISTS
         MVC   QNAME(F8),QNME      INITIALIZE QNAME
         LA    R1,ENQLIST          POINT TO ENQUEUE PARAMETER LIST
         LA    R8,DEQLIST          POINT TO DEQUEUE PARAMETER LIST
         LA    R9,QNAME            ADDRESS OF QNAME
         ST    R9,F4(R1)           SECOND WORD ENQUEUE LIST
         ST    R9,F4(R8)           SECOND WORD DEQUEUE LIST
         LA    R9,RNAME            ADDRESS OF RNAME
         ST    R9,F8(R1)           THIRD WORD ENQUEUE LIST
         ST    R9,F8(R8)           THIRD WORD DEQUEUE LIST
         TM    DFLAG1,MPUPDAT      IS UPDATE OF PASSWORD DS REQUIRED
         BO    UPDATE              YES, GO UPDATE DSCB
         B     DSFLAG              GO SEE IF DATA SET IS TO BE FLAGGED
*  NOW SET PROTECTION STATUS IN DSCB
SETFLAG  L     R8,VOLIST           LOAD ADDRESS OF USER'S VOLUME LIST
         LTR   R8,R8               DID USER SUPPLY VOLUME LIST
         BNZ   USERLIST            YES, GO USE USER'S VOLUME LIST
*  USER DID NOT SUPPLY VOLUME LIST.  USE LOCATE TO GET VOLUME LIST
         MVC   LOCNAME(ENDLLIST-LOCLIST),LOCLIST INITIALIZE CAMLST
         LA    R6,DKEY             POINTER TO DATA SET NAME-
INITLOC  ST    R6,LOCNAME2         -TO LOCATE CAMLST            SA53652
         LA    R6,LOCAREA          POINTER TO LOCATE WORKAREA-
         ST    R6,LOCNAME4         -TO LOCATE CAMLST
         LOCATE LOCNAME            ISSUE LOCATE MACRO
         LTR   R15,R15             TEST LOCATE RETURN CODE
         BNZ   LOCERROR            NON-ZERO IS ERROR
         CLC   TAPECODE(F2),LOCAREA+F4 IS THIS A TAPE DATA SET
         BE    TAPE                YES, UNABLE TO FLAG TAPES
         LH    R10,LOCAREA         VOLUME COUNT
         MVI   DMODE,SWOFF         INITIALIZE SWITCH OFF        SA53652
         CH    R10,TWENTY          TEST VOLUME COUNT            SA53652
         BH    DOTWENTY            GO PROCESS OVER 20 VOLUMES   SA53652
VOLPOINT LA    R8,LOCAREA+F6       POINT TO FIRST VOLSER        SA53652
*
*   USE UCB LOOKUP TABLE TO FIND SPECIFIED VOLUME.  TABLE CONSISTS OF
*   HALFWORD POINTERS TO UCB'S, OR ZEROS FOR MISSING UCB'S.  END OF
*   TABLE INDICATED BY VALUE OF X'FFFF'.  ALL SIXTEEN BITS OF THE
*   HALFWORD ARE SIGNIFICANT.
*
LOOKUP   L     R6,DUCBADDR         ADDRESS OF UCB LOOKUP TABLE
UCBSRCH  LH    R7,F0(R6)           LOAD UCB ADDRESS
         LTR   R7,R7               CHECK UCB TABLE ENTRY
         BZ    NEXTUCB             IF ZERO, GET NEXT UCB TABLE ENTRY
         CH    R7,UCBEND           END OF UCB LOOKUP TABLE      Z30AAWW
         BE    VOLNTMTD            YES, VOL MUST NOT BE MOUNTED Z30AAWW
         N     R7,UCBMASK          CLEAR HI-ORDER BITS          Z30AAWW
         USING SRT,R7              ESTABLISH ADDRESSABILITY UCB
         CLI   UCBTBYT3,UCB3DACC   IS THIS A DIRECT ACCESS DEVICE
         BE    CHKVOLID            YES, GO CHECK VOLSER        @YL026TA
         CLI   UCBTBYT3,UCB3TAPE   IS THIS A TAPE DATA SET
         BNE   NEXTUCB             NO, NOT TAPE, NOT DA, GO CHECK NEXT
CHKVOLID CLC   SRTEVOLI(F6),F0(R8) DO VOLSER'S MATCH
         BE    MATCHID             YES GO GET DSCB             @YL026TA
NEXTUCB  LA    R6,F2(R6)           POINT TO NEXT ENTRY LOOKUP TABLE
         B     UCBSRCH             GO CHECK NEXT UCB
MATCHID  CLI   UCBTBYT3,UCB3TAPE   IS THIS A TAPE
         BE    TAPE                YES, UNABLE TO FLAG, GO SET RC
         ST    R7,DXDEBUCB         UCB ADDRESS TO DEB
*  NOW GET DSCB
GETDSCB  LA    R9,DKEY             POINTER TO DATA SET NAME-
         ST    R9,OBTAIN2          -TO OBTAIN CAMLST
         MVC   OBTVOL(F6),F0(R8)   VOLSER OF DATA SET
         OBTAIN OBTPTR             GET DSCB
         LTR   R15,R15             TEST OBTAIN RETURN CODE
         BNZ   OBTERROR            NON-ZERO IS OBTAIN ERROR
         DROP  R13                 DROP OLD BASE               @VS07508
         USING DXDSCB,R13          SET NEW BASE                @VS07508
         TM    DSCFILTY+F1,VSAMORG IS THIS SPACE VSAM?         @YL026TA
         BO    VSAMERR             ERROR--CANNOT PROTECT       @YL026TA
         DROP  R13                 DROP OLD BASE               @VS07508
         USING WRKSPACE,R13        SET NEW BASE                @VS07508
         B     FLAGDS              GO CHECK SECURITY FLAGS
USERLIST SR    R10,R10             ZERO REGISTER
         IC    R10,VOLNUM          VOLUME COUNT
         LTR   R10,R10             TEST VOLUME COUNT
         BZ    IOERROR             ZERO COUNT IS ERROR
         LA    R8,F0(R8)           BLANK VOLNUM FROM HIGH ORDER BYTE
         LTR   R8,R8               CHECK POINTER TO VOLUME LIST
         BZ    IOERROR             ZERO POINTER IS ERROR
         B     LOOKUP              GO LOOKUP UCB
DOTWENTY LA    R10,F20             USE 20                       SA53652
         MVI   DMODE,SWON          TURN SWITCH ON               SA53652
         B     VOLPOINT            GO PROCESS 20 VOLUMES        SA63652
RELOC    MVC   LOCNAME(ENDBLLOC-LOCBLK),LOCBLK INIT CAMLST      SA53652
         MVC   DMBB(F3),LOCAREA+F252 SAVE TTR                   SA53652
         LA    R6,DMBB             POINT TO TTR                 SA53652
         B     INITLOC             GO INITIALIZE LOCATE         SA53652
UPDATE   MVC   RNAME(F8),PDSDSN    MOVE PASSWORD DSNAME TO RNAME
         MVC   DSCLSTAR(F3),DSAVT  MOVE NEW PASSWORD TTR TO DSCB
*  NOW ENQUEUE ON PASSWORD DATA SET
         LA    R1,ENQLIST          POINT TO ENQUEUE LIST
UPDT010  ENQ   MF=(E,(1)),RELATED=(SYSDSN-PASSWORD,IGC0209H(UPDT020))  *
                                   ENQUEUE ON DSCB             @YL026TA
         STH   R15,DSAVT           SAVE ENQUEUE RETURN CODE
*  NOW GO UPDATE PASSWORD DATA SET DSCB FROM IN CORE IMAGE
         BAL   R3,WRITDSCB         GO WRITE BACK DSCB
*  NOW DEQUEUE FROM PASSWORD DATA SET AND FROM DSCB
         CLC   ZERO(F2),DSAVT      WAS ENQUEUE SUCCESSFUL
         BNE   SKIPDQ              NO, SKIP DEQUEUE
         LA    R1,DEQLIST          POINT TO DEQUEUE LIST
UPDT020  DEQ   MF=(E,(1)),RELATED=(SYSDSN-PASSWORD,IGC0209H(UPDT010))  *
                                   DEQUEUE FROM DSCB           @YL026TA
SKIPDQ   LA    R1,DENQLST          POINT TO DSNAME ENQUEUE LIST
         LA    R9,DMPDS            POINT TO PASSWORD DATA SET NAME
         ST    R9,F8(R1)           RESET DEQUEUE LIST
         DEQ   MF=(E,(1)),RELATED=(SYSPSWRD-PASSWORD,IGC0009H(CHK030)) *
                                   DEQUEUE FROM PASSWD DATA SET
         TM    DFLAG1,IOERR        WAS I/O SUCCESSFUL
         BO    IOERROR             GO FREE CORE
DSFLAG   TM    DFLAG1,DSNUPDAT     IS UPDATE OF DSCB REQUIRED
         BO    SETFLAG             YES, GO FLAG DSCB
         B     ZERORC              GO CLEANUP AND RETURN
FLAGDS   MVC   DXDSCB(F96),OBTWRK  MOVE DSCB TO DSCB MAP
         MVC   OLDFLAG(F1),DSCDSIND SAVE PROTECTION FLAG STATUS
         NI    OLDFLAG,FLAGOFF     TURN OFF ALL BUT PROTECTION BITS
*  THE FOLLOWING IS POSSIBLE BECAUSE DFLAG1 PROTECTION REQUEST BITS
*  CORRESPOND ONE TO ONE WITH DSCB PROTECTION BITS
         MVC   NEWFLAG(F1),DFLAG1  SET PROTECTION REQUEST BITS
         NI    NEWFLAG,FLAGOFF     TURN OFF ALL BUT PROTECTION BITS
CHCKBYTE CLC   OLDFLAG,NEWFLAG     COMPARE SECURITY FLAGS
         BE    STATUSOK            FLAGS AGREE, NO UPDATE REQUIRED
         NI    DSCDSIND,NOPROT     TURN OFF PROTECTION BITS (3,5)
         OC    DSCDSIND,NEWFLAG    PUT NEW STATUS IN DSCB
         B     NQ                  GO WRITE BACK DSCB
LOCERROR LR    R1,R15              LOCATE RETURN CODE TO REGISTER 1
         LA    R11,RC32            SET RETURN CODE = 32
         B     FREECORE            GO FREE CORE
TAPE     LA    R11,RC48            SET RETURN CODE = 48
         B     FREECORE            GO FREE CORE
INUSE    LA    R11,RC52            ALLOCATION ERROR RETURN CODE
         SR    R1,R1               CLEAR REGISTER 1            @YL026TA
         B     ALLOCER(R15)        ACTION DEPENDENT ON RET. CODE
ALLOCER  B     INFOERR             RC=0 - INFO ONLY            @YL026TA
         B     ALCERR              RC=4 - ERROR CODE AVAILABLE @YL026TA
         B     FREECORE            RC=8 - NO ADDITIONAL CODE   @YL026TA
ALCERR   LH    R1,DAERRCD          RC=12 - PUT ERROR CODE IN R 1
         B     FREECORE            GO FREE CORE                @YL026TA
INFOERR  LH    R1,DAINFO           PUT INFORMATIONAL CODE IN R 1
         B     FREECORE            GO FREE CORE
VOLNTMTD LA    R15,RC4             INDICATE VOLUME NOT MOUNTED
OBTERROR LR    R1,R15              OBTAIN RETURN CODE TO REGISTER 1
OBTAINRC LA    R11,RC36            SET RETURN CODE = 36
         B     FREECORE            GO FREE CORE
VSAMERR  LA    R11,RC56            SET RETURN CODE = 56        @YL026TA
         B     FREECORE            GO FREE CORE                @YL026TA
IOERROR  LA    R11,RC40            SET RETURN CODE = 40
         B     FREECORE            GO FREE CORE                @YL026TA
*                                                              @YL026TA
*  ALLOCATE THE DATA SET TO GET EXCLUSIVE CONTROL.             @YL026TA
*  A NEW ALLOCATION IS REQUESTED SO THAT WHEN DEALLOCATION IS  @YL026TA
*  DONE, EXISTING ALLOCATIONS ARE NOT DISTURBED.               @YL026TA
*  THE DDNAME USED IS RETURNED FOR USE IN DEALLOCATING.        @YL026TA
*                                                              @YL026TA
NQ       EQU   *                                               @YL026TA
         USING S99TUNIT,R8                                     @YL026TA
         XC    DARQBLK(F20),DARQBLK CLEAR PARAMETER BLK        @YL026YB
         MVC   DARQBLK,REQALC      SET UP REQUEST BLOCK        @YL026TA
*  BUILD DSNAME TEXT UNIT                                      @YL026TA
         MVC   DADSNM(L'TXTDSNM),TXTDSNM SET UP DSNAME TEXT UNIT
         LR    R14,R8              SAVE VOL LIST PTR           @ZA18970
         LA    R8,DADSNM           ADDRESS OF DSNAME TEXT UNIT @YL026TA
         SR    R9,R9               CLEAR REGISTER              @YL026TA
         IC    R9,DSNLL            GET DSNAME LENGTH           @YL026TA
         STH   R9,S99TULNG         STORE LENGTH IN TEXT UNIT   @YL026TA
         BCTR  R9,R0               DECREMENT LENGTH FOR EXECUTE
         L     R6,DSN              ADDRESS OF DSNAME           @YL026TA
         EX    R9,MOVEPAR          MOVE DSNAME TO TEXT UNIT    @YL026TA
         ST    R8,DATP1            ADDR OF TEXT UNIT TO TEXT PTR
         LA    R8,DATP1
         ST    R8,DATXTPT          ADDRESS OF FIRST TEXT POINTER
*  BUILD STATUS TEXT UNIT                                      @YL026TA
         MVC   DASTAT(L'TXTSTAT),TXTSTAT SET UP STATUS TEXT UNIT
         LA    R8,DASTAT           ADDRESS OF STATUS TEXT UNIT @YL026TA
         ST    R8,DATP2              TO TEXT POINTER           @YL026TA
*  BUILD VOLUME TEXT UNIT                                      @YL026TA
         MVC   DAVOL(L'TXTVOL),TXTVOL SET UP VOLUME TEXT UNIT  @YL026TA
         LA    R8,DAVOL            ADDRESS OF VOLUME TEXT UNIT @YL026TA
         MVC   S99TUPAR(L'OBTVOL),OBTVOL VOL SERIAL TO TEXT UNIT
         ST    R8,DATP3            ADDR OF TEXT UNIT TO TEXT PTR
*  BUILD UNIT NAME TEXT UNIT                                   @YL026TA
         MVC   DAUNIT(L'TXTUNIT),TXTUNIT SET UP UNIT NAME TEXT @YL026TA
         LA    R8,DAUNIT           ADDRESS OF UNIT NAME T. U.  @YL026TA
         MVC   S99TUPAR(L'UCBNAME),UCBNAME EBCDIC UNIT NAME FROM UCB   *
                                                               @YL026TA
         ST    R8,DATP4            ADDR OF TEXT UNIT TO TEXT PTR
*  BUILD DDNAME TEXT UNIT                                      @YL026TA
         MVC   DADDNM(L'TXTDD),TXTDD  SET UP DDNAME TEXT UNIT  @YL026TA
         LA    R8,DADDNM           ADDRESS OF DDNAME TEXT UNIT @YL026TA
         ST    R8,DATP5              TO TEXT POINTER           @YL026TA
*  FINISH UP PARAMETER LIST FOR ALLOCATION                     @YL026TA
         OI    DATP5,S99TUPLN      HIGH ORDER BIT ON FOR END   @YL026TA
         LA    R9,DARQBLK          PUT ADDRESS OF REQUEST BLOCK
         ST    R9,DAPARM             IN PARAMETER POINTER      @YL026TA
         OI    DAPARM,S99RBPND     TURN HIGH-ORDER BIT ON      @YL026TA
         LA    R1,DAPARM           ADDRESS OF PARAMETER POINTER
         DYNALLOC                  ALLOCATE THE DATA SET       @YL026TA
         LTR   R15,R15             TEST ALLOCATION RETURN CODE @YL026TA
         BNZ   INUSE               UNABLE TO ALLOCATE          @YL026TA
*  NOW REISSUE OBTAIN TO ENSURE AN ACCURATE DSCB                 A42339
         OBTAIN OBTPTR             GET DSCB                      A42339
         BAL   R3,WRITDSCB         GO UPDATE DSCB
*                                                              @YL026TA
*  NOW UNALLOCATE THE DATA SET USING THE DDNAME RETURNED BY    @YL026TA
*  ALLOCATION                                                  @YL026TA
*                                                              @YL026TA
DQ       EQU   *                                               @YL026TA
         MVI   DAVERB,S99VRBUN     VERB CODE TO UNALLOCATE     @YL026TA
         SR    R9,R9               CLEAR FLAGS                 @YL026TA
         STH   R9,DAFLGS1                                      @YL026TA
         STH   R9,DAERRCD          CLEAR FIELD IN PARM BLK
         STH   R9,DAINFO           CLEAR FIELD IN PARM BLK
         ST    R9,DRESVE           CLEAR FIELD IN PARM BLK
         ST    R9,DAFLGS2          CLEAR FIELD IN PARM BLK
         MVC   DADKEY,DDUNKEY      CHANGE DDNAME TEXT UNIT KEY @ZA02651
         LA    R8,DADDNM           PUT ADDRESS OF DDNAME T. U. @YL026TA
         ST    R8,DATP1              IN TEXT POINTER           @YL026TA
         OI    DATP1,S99TUPLN      MARK END OF LIST            @YL026TA
         LA    R1,DAPARM           ADDRESS OF PARAMETER POINTER
         DYNALLOC                  UNALLOCATE THE DATA SET     @YL026TA
         B     STATUSOK            FLAGS UPDATED
*
*  CHANNEL PROGRAM FOR DSCB UPDATE
*
*        SEARCH-ID-EQUAL           (DXCCW7)
*        TIC                       (DXCCW8)
*        WRITE-DATA                (DXCCW9)
*        SEARCH-ID-EQUAL           (DXCCW10)
*        TIC                       (DXCCW11)
*        READ-DATA (VERIFICATION)  (DXCCW12)
*
*  DSCB UPDATE  THE DSCB DATA FIELD IS WRITTEN BACK TO THE VTOC AT
*  THE LOCATION SPECIFIED BY OBTAIN'S CCHHR
WRITDSCB LA    R9,DXDAADDR+F3      ADDRESS OF COUNT FIELD (CCHHR)-
         ST    R9,DXCCW7           -TO SEARCH CCW              @ZA11617
         ST    R9,DXCCW10          -TO SEARCH CCW              @ZA11617
         MVI   DXCCW7,SRCHID       SET SEARCH ID EQUAL OP CODE @ZA11617
         MVI   DXCCW10,SRCHID      SET SEARCH ID EQUAL OP CODE @ZA11617
         MVI   DXDEBUCB,NOSEEK     RESET FILE MASK TO INHIBIT SEEKS
         LA    R9,DXCCW7           ADDRESS OF STARTING CCW     @ZA11617
         ST    R9,IOBSIOCC         POINT TO STARTING CCW
         LA    R9,DXDSCB           DSCB ADDRESS (WORK AREA)-
         ST    R9,DXCCW9           -TO WRITE CCW               @ZA11617
         MVI   DXCCW9,OPWRITE      SET WRITE OP CODE           @ZA11617
         MVI   DXCCW9+F7,DSCBDLL   DSCB DATA LENGTH TO CCW     @ZA11617
         MVI   DXCCW12,OPREAD      SET READ OP CODE            @ZA11617
         MVI   DXCCW12+F7,DSCBDLL  DSCB DATA LENGTH TO CCW     @ZA11617
         MVC   DXDAADDR+F3(F5),OBTCCH MOVE DSCB CCHHR TO COUNT FIELD
         MVC   DXDEBSCC(F4),OBTCCH SET EXTENTS-
         MVC   DXDEBECC(F4),OBTCCH -IN DEB FOR SEARCH
*  NOW ISSUE EXCP TO UPDATE DSCB
         EXCP  DXIOB               INITIATE I/O
         WAIT  ECB=DXECB           WAIT FOR COMPLETION
*  WAS I/O SUCCESSFUL
         TM    DXECB,GOODIO        WAS THERE AN ERROR
         BCR   ONE,R3              NO, RETURN
         OI    DFLAG1,IOERR        INDICATE I/O ERROR
         BR    R3                  RETURN
CHECKRC  LA    R9,RC24             REGISTER 9 = 24
         CR    R11,R9              IS PASSWORD DATA SET FULL
         BNE   FREECORE            GO FREE CORE
         LA    R1,JFCBELNM         POINT TO WRITE TO OPERATOR MESSAGE
         WTO   MF=(E,(1))          ISSUE WTO
         B     FREECORE            GO CLEANUP AND RETURN
STATUSOK EQU   *                                               @YL026TA
         TM    DFLAG1,IOERR        WAS I/O SUCCESSFUL
         BO    IOERROR             NO, GO FREE CORE
         LR    R8,R14              RESET VOL LIST PTR          @ZA18970
         CLC   ZERO(F4),VOLIST     DID USER SUPPLY VOLUME LIST
         BE    LOCLISTS            IF NOT, USE LOCATE LIST
         LA    R8,F6(R8)           POINT TO NEXT VOLUME
         B     MOREVOLS            GO CHECK IF MORE VOLUMES
LOCLISTS LA    R8,F12(R8)          POINT TO NEXT VOLUME
MOREVOLS BCT   R10,LOOKUP          IF MORE VOLUMES, GO PROCESS NEXT VOL
         CLI   DMODE,SWON          MORE VOLUMES                 SA53652
         BE    RELOC               YES, GO PROCESS THEM         SA53652
ZERORC   SR    R11,R11             SET RETURN CODE = 0
FREECORE EQU   *                   FREE CORE BEFORE RETURNING
         LR    R6,R1               SAVE REGISTER 1 DURING FREEMAIN
         LR    R4,R0               SAVE REGISTER 0 DURING FREEMAIN
         L     R9,DSAVR            LOAD RETURN ADDRESS
         TM    DFLAG1,OBTNCORE     OBTAIN CORE TO BE FREED
         BZ    NOOBTAIN            NO, SKIP AROUND FREEMAIN
         LA    R0,WRKSIZE          SIZE OF OBTAIN AND LOCATE WORKAREA
         O     R0,SPN              SUBPOOL NUMBER IN HIGH ORDER BYTE
         L     R1,OBTAIN4          ADDRESS OF CORE TO BE FREED
         FREEMAIN R,LV=(0),A=(1),RELATED=(SP251,IGC0009H(TABRC2))      *
                                   FREE CORE                   @YL026TA
NOOBTAIN LA    R0,WKSIZE           SIZE OF PROGRAM WORKAREA
         LR    R1,R5               ADDRESS OF CORE TO BE FREED
         FREEMAIN R,LV=(0),A=(1),RELATED=(SP0,IGC0009H(INITCOR))       *
                                   FREE CORE                   @YL026TA
         LR    R1,R6               RESTORE REGISTER 1
         LR    R0,R4               RESTORE REGISTER 0
         LR    R15,R11             RESTORE REGISTER 15
         LR    R14,R9              RETURN ADDRESS TO RETURN REGISTER
         BR    R14                 RETURN
         EJECT
*  CONSTANTS
         DS    0F                  ALIGN CONSTANTS
UCBMASK  DC    X'0000'             FOR HI-ORDER OF UCB ADDR     Z30AAWW
UCBEND   DC    X'FFFF'             END OF UCB LOOKUP TABLE INDR Z30AAWW
MOVEPAR  MVC   S99TUPAR(F0),F0(R6) MOVE PARAMETER TO TEXT UNIT @YL026TA
TAPECODE DC    X'8001'             COMMON PART OF ALL TAPE DEVICE CODES
ZERO     DC    F'0'                ZERO WORD FOR COMPARES
SPN      DC    X'FB'               SUBPOOL NUMBER 251
         DC    X'000000'           ZERO REST OF WORD
LOCLIST  CAMLST NAME,0,,0          LOCATE CAMLST MACRO
ENDLLIST EQU   *                   END OF LOCATE CAMLST MACRO
LOCBLK   CAMLST BLOCK,1,,3         LOCATE CAMLST (TTR)          SA53652
ENDBLLOC EQU   *                   END OF CAMLST MACRO          SA53652
*  KEEP ENQ AND DEQ LISTS TOGETHER.
ENQL     ENQ   (0,0,E,RNLENGTH,SYSTEM),RET=USE,MF=L LIST FORM ENQUEUE
DEQL     DEQ   (0,0,RNLENGTH,SYSTEM),RET=HAVE,MF=L DEQUEUE
ENQLEND  EQU   *                   END OF ENQ AND DEQ EXPANSIONS
TWENTY   DC    H'20'               TWENTY                       SA53652
QNME     DC    CL8'SYSDSN  '       QNAME FOR ENQUEUE ON DSCB
PDSDSN   DC    CL8'PASSWORD'       PASSWORD DATA SET DSNAME
*  CONSTANTS FOR DYNAMIC ALLOCATION                            @YL026TA
REQALC   DS    0CL20               CONSTANT PART OF REQUEST BLK
         DC    X'14'               LENGTH OF BLOCK = 20        @YL026TA
         DC    X'01'               VERB CODE 01 = ALLOCATE     @YL026TA
         DC    X'6000'             FLAGS1 = USE NEW ALLOCATION,        *
                                   DON'T WAIT FOR VOLUME MOUNT @YL026TA
         DC    X'00000000'         CLEAR ERROR CODES           @YL026TA
         DS    CL4                 TEXT POINTER ADDRESS        @YL026TA
         DC    X'00000000'         RESERVED                    @YL026TA
         DC    X'00000000'         FLAGS2 = ZEROS              @YL026TA
* TEXT UNITS -- CONSTANT PARTS                                 @YL026TA
TXTDSNM  DS    0CL6                DSNAME TEXT UNIT            @YL026TA
         DC    X'0002'             KEY FOR DSNAME              @YL026TA
         DC    X'0001'             NUMBER OF DSNAMES           @YL026TA
         DC    X'0000'             INITIALIZE LENGTH           @YL026TA
TXTSTAT  DS    0CL7                STATUS TEXT UNIT            @YL026TA
         DC    X'0004'             KEY FOR STATUS              @YL026TA
         DC    X'0001'             NUMBER                      @YL026TA
         DC    X'0001'             LENGTH OF STATUS FIELD      @YL026TA
         DC    X'01'               STATUS = OLD                @YL026TA
TXTVOL   DS    0CL6                VOLUME TEXT UNIT            @YL026TA
         DC    X'0010'             KEY FOR VOLUMES             @YL026TA
         DC    X'0001'             NUMBER OF VOLUMES (ONE)     @YL026TA
         DC    X'0006'             LENGTH OF VOLUME FIELD      @YL026TA
TXTUNIT  DS    0CL6                UNIT NAME TEXT UNIT         @YL026TA
         DC    X'0015'             KEY FOR UNIT NAME           @YL026TA
         DC    X'0001'             NUMBER OF UNITS             @YL026TA
         DC    X'0003'             LENGTH OF UNIT NAME         @YL026TA
TXTDD    DS    0CL6                DDNAME TEXT UNIT            @YL026TA
         DC    X'0055'             KEY TO REQUEST DDNAME       @YL026TA
         DC    X'0001'             NUMBER OF DDNAMES           @YL026TA
         DC    X'0008'             LENGTH OF DDNAME FIELD      @YL026TA
*  OTHER CONSTANTS NEEDED FOR ALLOCATION                       @YL026TA
DDUNKEY  DC    X'0001'             KEY TO UNALLOCATE DDNAME    @YL026TA
         EJECT
*        THIS WORK AREA IS USED BY ALL LOADS OF THE PROTECT SVC.
*        ANY CHANGES TO IT MUST BE MADE TO ALL LOADS.
WORKD    DSECT
*
         IECDSECT
CLEARIO  EQU   *-DXECB             LENGTH FOR CLEARING I/O BLOCKS
*
COMMD    EQU   *                   CONTINUE DSECT
*
*        WORK AREA FOR MPDS COMMUNICATION AND BUFFERING
*        A CONTINUATION OF DSECT (WORKD)
*
*
DSAVR    DS    F                   SAVE AREA FOR RETURN REGISTER
DSAVT    DS    F                   MPDS LAST BLOCK SAVE AREA
DUCBADDR DS    F                   ADDRESS OF UCB LOOKUP TABLE
DPMODE   DS    CL1                 PROTECTION MODE BYTE SAVE AREA
DRECAP   DS    CL1                 SYSRES DEVICE-RECORD/TRK CAPACITY
DCODTAB  DS    CL1                 ENTRY CODE SAVE AREA FOR NEXT LOAD
*
*        DFLAG - COMMUNICATES STATUS OF DSCB UPDATING REQUIREMENTS
*
DFLAG1   DS    BL1                 COMMUNICATION FLAG
*        COMMUNICATION FLAG (DFLAG1) IN COMMD WORK AREA
*              1 BYTE  (DFLAG1)
*                   BIT  0  =1 MPDS IS ENQ TO ADD OWN P/W PROTECTION
*                        1  =1 INDICATES I/O ERROR
*                        2  =1 INDICATES ENQUEUED IN 1ST - 2ND LOADS
*                        3  =1 PROTECTED DATA SET-SET BIT 3 IN DSCB
*                        4  =1 OBTAIN WORK AREA TO BE FREED
*                        5  =1 NO PASSWORD TO READ-SET BIT 5 IN DSCB
*                        6  =1 UPDATE DSCB OF DATA SET WITH PROTECTION
*                              SPECIFIED IN BITS 3 AND 5
*                        7  =1 UPDATE MPDS DSCB FROM CORE IMAGE IN
*                              WORK AREA (WORKD) AND DEQ ON MPDS
*
DFLAG2   DS    BL1                 COMMUNICATION FLAG
*              1 BYTE (DFLAG2)
*                   BIT 0  =1 INDICATES AUTHORIZED USER        @ZA26554
*                   BIT 1  =1 INDICATES NEW PASSWORD WITH REPLACE
*                   BIT 2  =1 SECOND PASS SWITCH FOR VALCKRTN  @ZA26554
*                   BIT 3     RESERVED
*                   BIT 4     RESERVED
*                   BIT 5     RESERVED
*                   BIT 6     RESERVED
*                   BIT 7     RESERVED
*
         DS    0CL11               COUNT FIELD FOR I/O
DMPEND   DS    CL8                 MBBCCHHR OF LAST RECORD WRITTEN
DCKDLL   DS    CL3                 KEY LENGTH/DATA LENGTH
*
*        EXCP BUFFER  AREA FOR COUNT KEY DATA READ/WRITE
*
         DS    0F                  ALIGN WORD
         DS    CL1                 ALIGN FOR MBBCCHHR
DMBB     DS    CL3                 MBB FIELD FOR CONVERT ROUTINE
         DS    0CL8                COUNT FIELD FOR I/O
DCNT     DS    CL4                 CCHH PORTION OF COUNT
DRECNO   DS    CL1                 RECORD NUMBER
DKEYLEN  DS    CL1                 KEY LENGTH FOR FOR WRITE
DDATALEN DS    CL2                 DATA LENGTH FOR WRITE
DKEY     DS    CL44                EXCP- 44 BYTE KEY (DSN)
DKEY8    DS    CL8                 EXCP- 8 BYTE EXTENSION (PASSWORD)
DATA     DS    0CL80               DATA FIELD
DUSE     DS    CL2                 USE COUNT
DMODE    DS    BL1                 PROTECTION MODE BYTE FIELD
DAT77    DS    CL77                USER DATA (77 BYTES OPTIONAL DATA)
DSAVLL   EQU   *-DCNT              COUNT-KEY-DATA FIELD LENGTH
DCLEAR   EQU   *-COMMD             WORK AREA TO BE CLEARED TO ZERO
DFOXKEY  DS    52C                 52 BYTE KEY OF FF
         DS    80C                 80 BYTE DATA FIELD
*
*        OBTAIN LIST
*
OBTPTR   CAMLST SEARCH,OBTDSN,OBTVOL,OBTWRK
         ORG   OBTPTR              LABEL OBTAIN FIELDS
OBTAIN1  DS    F                   OBTAIN CAMLST FIRST FULL WORD
OBTAIN2  DS    F                   OBTAIN CAMLST SECOND FULL WORD
OBTAIN3  DS    F                   OBTAIN CAMLST THIRD FULL WORD
OBTAIN4  DS    F                   OBTAIN CAMLST FOURTH FULL WORD
         ORG
*
*        ENQUEUE PARAMETER LIST
*
DENQLST  ENQ   (DMPDSQN,DMPDS,E,HLEN,SYSTEM),MF=L
*        NAME LIST FOR ENQUEUE/DEQUEUE AND OBTAIN
DMPDSQN  DS    0CL52               ONE FIELD FOR SETTING UP IN WORKD
         DS    CL8                 QNAME
DMPDS    DS    CL44                RNAME
OBTDSN   EQU   DMPDS               DSNAME OF MASTER PASSWORD DATA SET
OBTVOL   DS    CL6                 VOLUME SERIAL OF MPDS DSCB VOLUME
DREPSAV  DS    CL140               SAVEAREA FOR PASSWORD ENTRY
LOCNAME  CAMLST NAME,DKEY,,LOCAREA LOCATE CAMLST MACRO
         ORG   LOCNAME             LABEL LOCATE CAMLST FIELDS
LOCNAME1 DS    F                   1ST WORD LOCATE CAMLST
LOCNAME2 DS    F                   2ND WORD LOCATE CAMLST
LOCNAME3 DS    F                   3RD WORD LOCATE CAMLST
LOCNAME4 DS    F                   4TH WORD LOCATE CAMLST
         ORG
USECOUNT DS    F                   SAVE POINTER TO USER COUNT HERE
*  KEEP ENQ AND DEQ LISTS TOGETHER.
ENQLIST  ENQ   (QNAME,RNAME,E,RNLENGTH,SYSTEM),RET=USE,MF=L ENQUEUE
DEQLIST  DEQ   (QNAME,RNAME,RNLENGTH,SYSTEM),RET=HAVE,MF=L DEQUEUE
*  NOTE - MFT ENQUEUE WITH QNAME EQUAL TO SYSDSN REQUIRES TCB
*         ADDRESS IMMEDIATELY FOLLOWING QNAME.
QNAME    DS    CL8                 QNAME BUFFER
TCBADDR  DS    F                   TCB ADDRESS FOR MFT ENQUEUE
RNAME    DS    CL44                RNAME BUFFER
OLDFLAG  DS    CL1                 OLD PROTECTION STATUS
NEWFLAG  DS    CL1                 NEW PROTECTION STATUS
*  WORK AREA NEEDED FOR ALLOCATION                             @YL026TA
DAPARM   DS    F                   POINTER TO REQUEST BLOCK    @YL026TA
DARQBLK  DS    0CL20               DYNAMIC ALLOCATION REQUEST          *
                                   BLOCK                       @YL026TA
DABLKLN  DS    CL1                 LENGTH OF BLOCK             @YL026TA
DAVERB   DS    CL1                 VERB CODE FOR REQUEST       @YL026TA
DAFLGS1  DS    CL2                 FLAGS                       @YL026TA
DAERRCD  DS    CL2                 ERROR RETURN CODE           @YL026TA
DAINFO   DS    CL2                 INFORMATIONAL RETURN CODE   @YL026TA
DATXTPT  DS    CL4                 ADDRESS OF TEXT POINTERS    @YL026TA
DRESVE   DS    CL4                 RESERVED                    @YL026TA
DAFLGS2  DS    CL4                 FLAGS                       @YL026TA
* TEXT POINTERS                                                @YL026TA
DATP1    DS    F                                               @YL026TA
DATP2    DS    F                                               @YL026TA
DATP3    DS    F                                               @YL026TA
DATP4    DS    F                                               @YL026TA
DATP5    DS    F                                               @YL026TA
*  TEXT UNITS FOR ALLOCATION AND UNALLOCATION                  @YL026TA
DADSNM   DS    0CL50               DSNAME TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
DADSL    DS    CL2                 LENGTH                      @YL026TA
DADSN    DS    CL44                DATA SET NAME               @YL026TA
DASTAT   DS    0CL7                STATUS TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
         DS    CL1                 STATUS INDICATOR FIELD      @YL026TA
DAUNIT   DS    0CL9                UNIT NAME TEXT UNIT         @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
DAUNAM   DS    CL3                 UNIT NAME FIELD             @YL026TA
DADDNM   DS    0CL14               DDNAME TEXT UNIT            @YL026TA
DADKEY   DS    CL2                 KEY                         @ZA02651
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
         DS    CL8                 DDNAME FIELD                @YL026TA
DAVOL    DS    0CL12               VOLUME TEXT UNIT            @YL026TA
         DS    CL2                 KEY                         @YL026TA
         DS    CL2                 NUMBER                      @YL026TA
         DS    CL2                 LENGTH                      @YL026TA
DAVOLSR  DS    CL6                 VOLUME SERIAL FIELD         @YL026TA
REGSAVE  DS    18F                 REG SAVE AREA               @ZA26554
RCVTSAVE EQU   REGSAVE+F12         CVT SAVEAREA                @ZA26554
*
*              PARAMETER LIST FOR ALL REQUESTS
*
*
*              COMMON  SEGMENT FOR ALL REQUESTS
*
PARMWDS  DS    0FL7                                            @ZA26554
ENCODE   DS    0BL1                ENTRY CODE
DBUF     DS    CL4                 ADDRESS OF BUFFER FOR CODE 04/05
DSNLL    DS    0CL1                DSN LENGTH
DSN      DS    CL4                 ADDRESS OF DATA SET NAME
CURRENT  DS    CL4                 ADDRESS OF CURRENT PASSWORD
*
*              ADD / REPLACE / DELETE COMMON SEGMENT
*
CONTROL  DS    CL4                 ADDRESS OF CONTROL PASSWORD
VOLNUM   DS    0CL1                NUMBER OF VOLUMES SPECIFIED
VOLIST   DS    CL4                 ADDRESS OF VOLUME LIST
*
*              ADD / REPLACE  COMMON SEGMENT
*
PCODE    DS    0BL1                PROTECTION CODE
NEW      DS    CL4                 ADDRESS OF NEW PASSWORD
STRINGL  DS    0CL1                STRING LENGTH
STRING   DS    CL4                 ADDRESS OF DATA STRING
*
WKSIZE   EQU   *-WORKD             SIZE OF PROGRAM WORKAREA
*
*        END OF MAPPING OF DSECT WORKAREA
         EJECT
*
WRKSPACE DSECT
*
*  OBTAIN WORKAREA AND LOCATE WORKAREA
*
OBTWRK   DS    CL96                DSCB
OBTCCH   DS    CL5                 CCHHR
         DS    CL249               OBTAIN WORK SPACE
         DS    0D                  ALIGN LOCATE WORKAREA
LOCAREA  DS    CL265               LOCATE WORK SPACE (VOLUME LIST)
WRKSIZE  EQU   *-WRKSPACE          SIZE OF LOCATE AND OBTAIN WORKAREA
*
         EJECT
*
         EJECT
SRT      DSECT
         IEFUCBOB
         EJECT
CVT      DSECT
         CVT
         EJECT                                                 @YL026TA
         IHAPSA                                                @YL026TA
         EJECT                                                 @YL026TA
         IEFZB4D0                                              @YL026TA
*
         END
