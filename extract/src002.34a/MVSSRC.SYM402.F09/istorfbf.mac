         TITLE 'SMS BUFFER FIND ROUTINE - ISTORABF(OS/VS1), ISTORFBF(OS*
               S/VS2)   '
ISTORFBF CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTORFBF  75.325'                                 0001
         DROP  @15
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
*          R1SAV14=R14;              /* SAVE INPUTTED REG14          */
         LR    R1SAV14,R14                                         0031
*                                 RFY R14 UNRSTD;                  0032
*          R5BUFSIZ=(((BPCBBSIZ+7)/8)*8)+8; /* ADJ BUFSIZE   @XM02379*/
         LA    @14,8                                               0033
         LA    @06,7                                               0033
         AH    @06,BPCBBSIZ(,R10BPCB)                              0033
         SRDA  @06,32                                              0033
         DR    @06,@14                                             0033
         SLA   @07,3                                               0033
         ALR   @07,@14                                             0033
         LR    R5BUFSIZ,@07                                        0033
*          IF R2BUFPTR=0             /* THIS FIRST CALL              */
*          THEN                      /* YES */                     0034
         LTR   R2BUFPTR,R2BUFPTR                                   0034
         BNZ   @RF00034                                            0034
*TR01:       DO;                                                   0035
TR01     DS    0H                                                  0036
*            IF BPCBRESP=0           /* ANY RESIDUAL AREA EXIST      */
*            THEN;                   /* NO  */                     0036
         L     @06,BPCBRESP(,R10BPCB)                              0036
         LTR   @06,@06                                             0036
         BZ    @RT00036                                            0036
*            ELSE                    /* YES */                     0038
*ELS02:        DO;                                                 0038
ELS02    DS    0H                                                  0039
*              R2BUFPTR=BPCBRESP-R5BUFSIZ;                 /*@XM02379*/
         L     R2BUFPTR,BPCBRESP(,R10BPCB)                         0039
         SLR   R2BUFPTR,R5BUFSIZ                                   0039
*              R8NBPGO=BPCBNUMR;                                   0040
         LH    R8NBPGO,BPCBNUMR(,R10BPCB)                          0040
*RESCALL:      CALL PFXMATCH;        /* SEARCH FOR BUFF PREFIX MATCH */
RESCALL  BAL   @14,PFXMATCH                                        0041
*              IF R15CODE=0          /* WAS BUFFER FOUND             */
*              THEN                  /* YES */                     0042
         LTR   R15CODE,R15CODE                                     0042
         BZ    @RT00042                                            0042
*                GOTO RET;           /* RETURN TO CALLER             */
*              ELSE;                 /* NO  */                     0044
*              END ELS02;                                          0045
*            IF BPCBADR1=0           /* ANY PRIVATE AREA EXIST       */
*            THEN                    /* NO  */                     0046
@RT00036 L     @14,BPCBADR1(,R10BPCB)                              0046
         LTR   @14,@14                                             0046
         BNZ   @RF00046                                            0046
*TR03:         DO;                                                 0047
TR03     DS    0H                                                  0048
*              R2BUFPTR=0;           /* INDICAT END OF POOL REACHED  */
         SLR   R2BUFPTR,R2BUFPTR                                   0048
*              GOTO RET;             /* RETURN TO CALLER             */
         B     RET                                                 0049
*              END TR03;                                           0050
*            ELSE                    /* YES, SET DUMMY ADDRESS       */
*ELS03:        R2BUFPTR=BPCBADR1-R5BUFSIZ+8;               /*@XM02379*/
@RF00046 DS    0H                                                  0051
ELS03    L     R2BUFPTR,BPCBADR1(,R10BPCB)                         0051
         SLR   R2BUFPTR,R5BUFSIZ                                   0051
         AL    R2BUFPTR,@CF00088                                   0051
*            END TR01;                                             0052
*          ELSE                      /* IF HERE, NOT FIRST CALL      */
*ELS01:      DO;                                                   0053
         B     @RC00034                                            0053
@RF00034 DS    0H                                                  0053
ELS01    DS    0H                                                  0054
*            IF BPCBRESP=0 ×         /* NO RESIDUAL AREA EXISTS OR   */
*               BPCBRESP > R2BUFPTR  /* BUFF CANT BE IN RESIDUAL AREA*/
*            THEN;                   /* YES */                     0054
         L     @14,BPCBRESP(,R10BPCB)                              0054
         LTR   @14,@14                                             0054
         BZ    @RT00054                                            0054
         CR    @14,R2BUFPTR                                        0054
         BH    @RT00054                                            0054
*            ELSE                    /* NO  */                     0056
*ELS04:        DO;                                                 0056
ELS04    DS    0H                                                  0057
*              R15RSEND=BPCBRESP+((BPCBNUMR-1)*R5BUFSIZ);  /*@XM02379*/
         LH    R15RSEND,BPCBNUMR(,R10BPCB)                         0057
         BCTR  R15RSEND,0                                          0057
         MR    @14,R5BUFSIZ                                        0057
         AL    R15RSEND,BPCBRESP(,R10BPCB)                         0057
*              IF R2BUFPTR ^< R15RSEND /* IS BUFFER IN RESIDUAL AREA */
*              THEN;                   /* NO  */                   0058
         CR    R2BUFPTR,R15RSEND                                   0058
         BNL   @RT00058                                            0058
*              ELSE                    /* YES */                   0060
*ELS05:          DO;                                               0060
ELS05    DS    0H                                                  0061
*                R8NBPGO=(R15RSEND-R2BUFPTR)/R5BUFSIZ;     /*@XM02379*/
         LR    @06,R15RSEND                                        0061
         SLR   @06,R2BUFPTR                                        0061
         SRDA  @06,32                                              0061
         DR    @06,R5BUFSIZ                                        0061
         LR    R8NBPGO,@07                                         0061
*                GOTO RESCALL;                                     0062
         B     RESCALL                                             0062
*                END ELS05;                                        0063
*              END ELS04;                                          0064
@RT00058 DS    0H                                                  0065
*            END ELS01;                                            0065
@RT00054 DS    0H                                                  0066
*            IF BPCBAL48=OFF         /* SPECIAL ALIGNMENT REQUIRED   */
*            THEN                    /* NO  */                     0066
@RC00034 TM    BPCBAL48(R10BPCB),B'00001000'                       0066
         BNZ   @RF00066                                            0066
*TR06:         R3NBPAGE=AL08PSIZ/R5BUFSIZ;                 /*@XM02379*/
TR06     L     @06,@CF00081                                        0067
         SRDA  @06,32                                              0067
         DR    @06,R5BUFSIZ                                        0067
         LR    R3NBPAGE,@07                                        0067
*            ELSE                    /* YES */                     0068
*ELS06:        R3NBPAGE=AL48PSIZ/R5BUFSIZ;                 /*@XM02379*/
         B     @RC00066                                            0068
@RF00066 DS    0H                                                  0068
ELS06    LA    @06,4092                                            0068
         SRDA  @06,32                                              0068
         DR    @06,R5BUFSIZ                                        0068
         LR    R3NBPAGE,@07                                        0068
*            IF BPCBNUM <= R3NBPAGE  /* ALL BUFFS FIT ON ONE PAGE    */
*            THEN                    /* YES */                     0069
@RC00066 CH    R3NBPAGE,BPCBNUM(,R10BPCB)                          0069
         BL    @RF00069                                            0069
*TR07:         R4NLPAGE=BPCBNUM;                                   0070
TR07     LH    R4NLPAGE,BPCBNUM(,R10BPCB)                          0070
*            ELSE DO;                /* NO  */                     0071
         B     @RC00069                                            0071
@RF00069 DS    0H                                                  0072
*ELS07:        R4NLPAGE=BPCBNUM//R3NBPAGE;                         0072
ELS07    LH    @06,BPCBNUM(,R10BPCB)                               0072
         SRDA  @06,32                                              0072
         DR    @06,R3NBPAGE                                        0072
         LR    R4NLPAGE,@06                                        0072
*              IF R4NLPAGE=0         /*IF NO REMAINDER        XL03HFX*/
*                THEN R4NLPAGE=R3NBPAGE;   /*LAST PAGE IS FULL PAGE  */
         LTR   R4NLPAGE,R4NLPAGE                                   0073
         BNZ   @RF00073                                            0073
         LR    R4NLPAGE,R3NBPAGE                                   0074
*                ELSE;                                      /*XL03HFX*/
@RF00073 DS    0H                                                  0076
*            END;                    /*END ELS07                     */
*          R15CODE=4;                /* FORCE AT LEAST ONE LOOP      */
@RC00069 LA    R15CODE,4                                           0077
*          IF BPCBNFCH=ON            /* POOL ON PAGE BDY?    @ZM49277*/
*           THEN                     /* NO                   @ZM49277*/
         TM    BPCBNFCH(R10BPCB),B'00010000'                       0078
         BNO   @RF00078                                            0078
*            DO;                                           /*@ZM49277*/
*             R8NBPGO=BPCBNUM;       /* NUMBER OF BUFFERS    @ZM49277*/
         LH    R8NBPGO,BPCBNUM(,R10BPCB)                           0080
*             R2BUFPTR=BPCBADR1-R5BUFSIZ;   /* SEARCH ADDR   @ZM49277*/
         L     R2BUFPTR,BPCBADR1(,R10BPCB)                         0081
         SLR   R2BUFPTR,R5BUFSIZ                                   0081
*             CALL PFXMATCH;         /* SEARCH FOR MATCH     @ZM49277*/
         BAL   @14,PFXMATCH                                        0082
*          IF R15CODE=0                                    /*@ZM49277*/
*           THEN;                                          /*@ZM49277*/
         LTR   R15CODE,R15CODE                                     0083
         BZ    @RT00083                                            0083
*           ELSE R2BUFPTR=0;                               /*@ZM49277*/
         SLR   R2BUFPTR,R2BUFPTR                                   0085
*            END;                                          /*@ZM49277*/
*           ELSE                                           /*@ZM49277*/
*            DO;                     /* NOT PAGE BDY         @ZM49277*/
         B     @RC00078                                            0087
@RF00078 DS    0H                                                  0088
*DOW01:    DO WHILE(R15CODE^=0);     /*LOOP TIL BUF FOUND OR POOL END*/
DOW01    B     @DE00088                                            0088
@DL00088 DS    0H                                                  0089
*            R8PBNDRY=R2BUFPTR & '00FFF000'X; /* ROUND TO PAGE BNDRY */
         LR    R8PBNDRY,R2BUFPTR                                   0089
         N     R8PBNDRY,@CF00124                                   0089
*            R15LASPG=BPCBADR2-AL08PSIZ; /* CALC ADDR OF LAST PAGE   */
         L     R15LASPG,BPCBADR2(,R10BPCB)                         0090
         SL    R15LASPG,@CF00081                                   0090
*            IF BPCBAL48=OFF         /* SPECIAL ALIGNMENT REQUIRED   */
*            THEN;                   /* NO  */                     0091
         TM    BPCBAL48(R10BPCB),B'00001000'                       0091
         BZ    @RT00091                                            0091
*            ELSE                    /* YES */                     0093
*ELS08:        DO;                                                 0093
ELS08    DS    0H                                                  0094
*              R8PBNDRY=R8PBNDRY+4;                                0094
         LA    @14,4                                               0094
         ALR   R8PBNDRY,@14                                        0094
*              R15LASPG=R15LASPG+4;                                0095
         ALR   R15LASPG,@14                                        0095
*              END ELS08;                                          0096
*            RFY R14PGEND RSTD;                            /*@XM02379*/
@RT00091 DS    0H                                                  0098
*            IF R8PBNDRY=R15LASPG    /* THIS THE LAST PAGE           */
*            THEN                    /* YES */                     0098
         CR    R8PBNDRY,R15LASPG                                   0098
         BNE   @RF00098                                            0098
*TR09:         R14PGEND=R8PBNDRY+((R4NLPAGE-1)*R5BUFSIZ);  /*@XM02379*/
TR09     LR    @07,R4NLPAGE                                        0099
         BCTR  @07,0                                               0099
         MR    @06,R5BUFSIZ                                        0099
         ALR   @07,R8PBNDRY                                        0099
         LR    R14PGEND,@07                                        0099
*            ELSE                    /* NO  */                     0100
*ELS09:        R14PGEND=R8PBNDRY+((R3NBPAGE-1)*R5BUFSIZ);  /*@XM02379*/
         B     @RC00098                                            0100
@RF00098 DS    0H                                                  0100
ELS09    LR    @07,R3NBPAGE                                        0100
         BCTR  @07,0                                               0100
         MR    @06,R5BUFSIZ                                        0100
         ALR   @07,R8PBNDRY                                        0100
         LR    R14PGEND,@07                                        0100
*            IF R2BUFPTR < R14PGEND  /* THIS LAST BUFFER ON PAGE     */
*            THEN                    /* NO  */                     0101
@RC00098 CR    R2BUFPTR,R14PGEND                                   0101
         BNL   @RF00101                                            0101
*TR10:         R8NBPGO=(R14PGEND-R2BUFPTR)/R5BUFSIZ;       /*@XM02379*/
TR10     LR    @06,R14PGEND                                        0102
         SLR   @06,R2BUFPTR                                        0102
         SRDA  @06,32                                              0102
         DR    @06,R5BUFSIZ                                        0102
         LR    R8NBPGO,@07                                         0102
*            ELSE                    /* YES */                     0103
*ELS10:        DO;                   /* GET ADDR OF NEXT PAGE        */
         B     @RC00101                                            0103
@RF00101 DS    0H                                                  0103
ELS10    DS    0H                                                  0104
*              RFY R14PGEND UNRSTD;                        /*@XM02379*/
*              R8PBNDRY=R8PBNDRY+AL08PSIZ;                         0105
         AL    R8PBNDRY,@CF00081                                   0105
*              IF R8PBNDRY>=BPCBADR2 /*JUST CHECKED LAST PAGE IN POOL*/
*              THEN                  /* YES */                     0106
         C     R8PBNDRY,BPCBADR2(,R10BPCB)                         0106
         BL    @RF00106                                            0106
*TR11:           DO;                                               0107
TR11     DS    0H                                                  0108
*                R2BUFPTR=0;         /* INDICATE END OF POOL REACHED */
         SLR   R2BUFPTR,R2BUFPTR                                   0108
*                GOTO RET;           /* EXIT FROM MODULE             */
         B     RET                                                 0109
*                END TR11;                                         0110
*              ELSE                                                0111
*ELS11:          DO;                                               0111
@RF00106 DS    0H                                                  0111
ELS11    DS    0H                                                  0112
*                R2BUFPTR=R8PBNDRY-R5BUFSIZ;               /*@XM02379*/
         LR    R2BUFPTR,R8PBNDRY                                   0112
         SLR   R2BUFPTR,R5BUFSIZ                                   0112
*                IF R8PBNDRY=R15LASPG /*JUST BEGINNING THE LAST PAGE */
*                THEN                 /* YES */                    0113
         CR    R8PBNDRY,R15LASPG                                   0113
         BNE   @RF00113                                            0113
*TR12:             R8NBPGO=R4NLPAGE;                               0114
TR12     LR    R8NBPGO,R4NLPAGE                                    0114
*                ELSE                 /* NO  */                    0115
*ELS12:            R8NBPGO=R3NBPAGE;                               0115
         B     @RC00113                                            0115
@RF00113 DS    0H                                                  0115
ELS12    LR    R8NBPGO,R3NBPAGE                                    0115
*                END ELS11;                                        0116
@RC00113 DS    0H                                                  0117
*              END ELS10;                                          0117
*            CALL PFXMATCH;          /* SEARCH FOR BUFF PREFIX MATCH */
@RC00101 BAL   @14,PFXMATCH                                        0118
*          END DOW01;                                              0119
@DE00088 LTR   R15CODE,R15CODE                                     0119
         BNZ   @DL00088                                            0119
*            END;                                          /*@ZM49277*/
*                                 RFY R14 RSTD;                    0121
@RC00078 DS    0H                                                  0122
*RET:      R14=R1SAV14;                                            0122
RET      LR    R14,R1SAV14                                         0122
*PFXMATCH: PROC OPTIONS(NOSAVE,NOSAVEAREA);                        0123
         B     @PB00002                                            0123
PFXMATCH DS    0H                                                  0124
*DOW02:      DO WHILE(R8NBPGO>0);                                  0124
DOW02    B     @DE00124                                            0124
@DL00124 DS    0H                                                  0125
*              R8NBPGO=R8NBPGO-1;                                  0125
         BCTR  R8NBPGO,0                                           0125
*              R2BUFPTR=R2BUFPTR+R5BUFSIZ;                 /*@XM02379*/
         ALR   R2BUFPTR,R5BUFSIZ                                   0126
*              IF R0MASK=BFPTSKID                                  0127
*              THEN                                                0127
         C     R0MASK,BFPTSKID(,R2BUFPTR)                          0127
         BNE   @RF00127                                            0127
*TR13:           DO;                                               0128
TR13     DS    0H                                                  0129
*                R15CODE=0;                                        0129
         SLR   R15CODE,R15CODE                                     0129
*                RETURN;                                           0130
@EL00002 DS    0H                                                  0130
@EF00002 DS    0H                                                  0130
@ER00002 BR    @14                                                 0130
*                END TR13;                                         0131
*              ELSE;                                               0132
@RF00127 DS    0H                                                  0133
*            END DOW02;                                            0133
@DE00124 LTR   R8NBPGO,R8NBPGO                                     0133
         BP    @DL00124                                            0133
*            R15CODE=4;                                            0134
         LA    R15CODE,4                                           0134
*          END PFXMATCH;                                           0135
*                                                                  0135
         B     @EL00002                                            0135
@PB00002 DS    0H                                                  0136
*/* TPEPILOG   */                                                  0136
*           GEN (PRINT OFF);                                       0136
*                                                                  0136
         PRINT OFF
*/* ***** BUFFER POOL CONTOL BLOCK **** */                         0137
*/*  REVISIONS                                         004 07/14/75  */
*DCL   1  ISTBPCB BDY(DWORD) BASED(BPCBPTR),                       0137
*         2  BPCBFLAG BIT(16),         /* POOL FLAGS                 */
*            3  BPCBFM   BIT(1),       /* POOL FORMAT                */
*            3  BPCBDISP BIT(1),       /* SHARED OR PRIVATE          */
*            3  BPCBFX   BIT(1),       /* FIXED OR PAGEABLE          */
*            3  BPCBNFCH BIT(1),       /* NON-FETCH PROTECTION       */
*            3  BPCBAL48 BIT(1),       /* 4,8 ALIGNEMENT OF BUFFERS  */
*            3  BPCBCBID BIT(1),       /* CBID POOL                  */
*            3  BPCBNWS  BIT(1),       /* NON-WORKING SET POOL       */
*            3  *        BIT(1),       /* RESERVED                   */
*            3  BPCBUSRF BIT(1),       /* USER REQ FIXED BUF         */
*            3  *        BIT(7),       /* RESERVED                   */
*         2  *        CHAR(1),         /* RESERVED                   */
*         2  BPCBSPNO FIXED(8),        /* SUBPOOL NUMBER             */
*         2  BPCBFEXT PTR(31),         /* POINTER TO FIRST EXTENT    */
*            3  BPCBPRIO BIT(1),          /* INDICATOR FOR PRIORITY Q*/
*         2  BPCBADR1 PTR(31),         /* BEGINNING ADDRESS OF POOL  */
*         2  BPCBADR2 PTR(31),         /* END ADDRESS OF POOL        */
*         2  BPCBRPHA PTR(31),         /* PTR TO PRIORITY Q'D RPH'S  */
*         2  BPCBRPHB PTR(31),            /* PTR TO NORMAL RPH QUEUE */
*         2  BPCBPDTY PTR(31),         /* POINTER TO POOL DIRECTORY  */
*         2  BPCBNXCB PTR(31),         /* POINTER TO NEXT BPCB       */
*         2  BPCBBSIZ FIXED(15),       /* BUFFER SIZE IN BYTES       */
*         2  BPCBTOTL FIXED(15),       /* TOTAL NUMBER OF BUFFERS    */
*         2  BPCBTHRE FIXED(15),       /* POOL THRESHOLD             */
*         2  BPCBTHR2 FIXED(15),       /* POOL THRESHOLD #2          */
*         2  BPCBQREQ FIXED(31),                                   0137
*            3 BPCBMQUE FIXED(15),     /* MAX NO. REQUESTS QUEUED    */
*            3 BPCBCQUE FIXED(15),     /* CURRENT NO. REQUESTS QUEUED*/
*         2 BPCBMUSE FIXED(31),                                    0137
*            3 *        FIXED(15),     /* RESERVED                   */
*            3 BPCMINAV FIXED(15),     /* MIN AVAIL NO. THIS BPCB    */
*         2 BPCBRESP PTR(31),          /* PTR TO LAST BUFF IN RESIDUE*/
*         2 BPCBNUM  FIXED(15),        /* NUM BUFFS PRIVATE AREA     */
*         2 BPCBNUMR FIXED(15),        /* NUM BUFFS RESIDUE AREA     */
*         2 BPCBCDS  CHAR(8) BDY(DWORD), /* USED FOR CDS             */
*            3 BPCBCDS1 CHAR(4) BDY(DWORD), /* FOL WORD ADDR         */
*              4 BPCBFLG2 CHAR(1),     /* SLOWDOWN STATUS            */
*                5 *        BIT(1),    /* RESERVED                   */
*                5 BPCBLOW1 BIT(1),    /* SLOWDOWN FLAG              */
*                5 BPCBLOW2 BIT(1),    /* SLOWDOWN BDY XED           */
*                5 *        BIT(5),    /* RESERVED                   */
*              4 BPCBFBA  PTR(24),     /* 1ST AVAIL BUF ADDR         */
*            3 BPCBCDS2 CHAR(4) BDY(WORD), /* FOL WORD ADDR          */
*              4 BPCBCCNT FIXED(15),   /* INCREMENTED FOR EACH BUFFER*/
*                                      /* ENQUEUED                   */
*              4 BPCBAVNO FIXED(15),   /* NO. AVAIL BUFFS            */
*         2 BPCBRBLK FIXED(32),         /* SRB LOCK AND POINTER      */
*            3 BPCBSRBG BIT(1),        /* SRB GATE BIT               */
*            3 *        BIT(7),        /* RESERVED                   */
*            3 BPCBSRBA PTR(24),       /* SRB ADDRESS                */
*         2 BPCBSRB CHAR(LENGTH(SRB)); /* THE SRB ITSELF             */
*        /* BUFFER PREFIX */                                       0138
*/*  REVISIONS                                         002 03/06/75  */
*        DCL  1  ISTBFPFX BDY(DWORD) BASED(BFPFXPTR),              0138
*               2  BFPTSKID PTR(31),   /* FIRST PREFIX WORD          */
*                 3  BFPALLOC BIT(1),  /* BUFF.ALLOCATED INDICATOR   */
*                 3  BFPCBXNO BIT(7),  /* CBID INDEX NUMBER          */
*                 3  BFPPSTID PTR(24), /* PST ID OF BUFF OWNER       */
*                    4 *      BIT(16), /* ALIGNMENT                  */
*                    4 BFPTIK BIT(8),  /* TASK ID, ONE BYTE REFERENCE*/
*               2  BFPPCBA PTR(31),    /* SECOND PREFIX WORD         */
*                  3 BFPCBID BIT(1),   /* BUFF IS A CBID INDICATOR   */
*                  3 *       BIT(7),   /* RESERVED                   */
*                  3 BFPBPCB PTR(24),  /* PTR TO BPCB FOR BUFFER     */
*               2  BFPNXCHN PTR(31),   /* A(NEXT BUFF.) AND START OF */
*               2  BFPSIZE FIXED(15),  /* SIZE OF DATA IN BUFFER     */
*               2  BFPUSED FIXED(15),  /* COUNT OF DATA BYTES USED   */
*                                      /* IN THIS BUFFER             */
*              2  BFPDATA  BDY(WORD),  /* DATA PART OF THE BUFFER    */
*                 3  BFPREGSA,        /* START OF SAVE AREA'S FOR REG*/
*                    4  BFPR5SA FIXED(31),/* SAVE AREA FOR R5        */
*                       5 BFPPMCLR BIT(1),/* CLEAR REQUESTED         */
*                       5 BFPPMCHN BIT(1),/* CHAINED CBID RELEASE    */
*                       5 BFPPMDSB BIT(1),/* DISABLED, CAN'T PAGE FLT*/
*                    4  BFPR6SA FIXED(31),/* SAVE AREA FOR R6        */
*                    4  BFPR7SA FIXED(31),/* SAVE AREA FOR R7        */
*                    4  BFPR8SA FIXED(31),/* SAVE AREA FOR R8        */
*                    4  BFPR9SA FIXED(31),/* SAVE AREA FOR R9        */
*                    4  BFPRASA FIXED(31),/* SAVE AREA FOR R10       */
*                    4  BFPRBSA FIXED(31),/* SAVE AREA FOR R11       */
*                    4  BFPRCSA FIXED(31),/* SAVE AREA FOR R12       */
*                    4  BFPRDSA FIXED(31);/* SAVE AREA FOR R13       */
*           GEN (PRINT ON);                                        0139
         PRINT ON
*/* END OF TPEPILOG */                                             0140
*          END ISTORFBF                                            0140
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IHASRB  )                                        *
*;                                                                 0140
@EL00001 DS    0H                                                  0140
@EF00001 DS    0H                                                  0140
@ER00001 BR    @14                                                 0140
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTORFBF CSECT
         DS    0F
@CF00088 DC    F'8'
@CF00081 DC    F'4096'
@CF00124 DC    XL4'00FFF000'
@DATD    DSECT
         DS    0D
SRBPTR   DS    A
BPCBPTR  DS    A
BFPFXPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTORFBF CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0MASK   EQU   @00
R1SAV14  EQU   @01
R2BUFPTR EQU   @02
R3NBPAGE EQU   @03
R4NLPAGE EQU   @04
R5BUFSIZ EQU   @05
R8PBNDRY EQU   @08
R8NBPGO  EQU   @08
R9BASE   EQU   @09
R10BPCB  EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R14PGEND EQU   @14
R15RSEND EQU   @15
R15LASPG EQU   @15
R15CODE  EQU   @15
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
ISTBPCB  EQU   0
BPCBFLAG EQU   ISTBPCB
BPCBNFCH EQU   BPCBFLAG
BPCBAL48 EQU   BPCBFLAG
BPCBFEXT EQU   ISTBPCB+4
BPCBADR1 EQU   ISTBPCB+8
BPCBADR2 EQU   ISTBPCB+12
BPCBBSIZ EQU   ISTBPCB+32
BPCBQREQ EQU   ISTBPCB+40
BPCBMUSE EQU   ISTBPCB+44
BPCBRESP EQU   ISTBPCB+48
BPCBNUM  EQU   ISTBPCB+52
BPCBNUMR EQU   ISTBPCB+54
BPCBCDS  EQU   ISTBPCB+56
BPCBCDS1 EQU   BPCBCDS
BPCBFLG2 EQU   BPCBCDS1
BPCBCDS2 EQU   BPCBCDS+4
BPCBRBLK EQU   ISTBPCB+64
ISTBFPFX EQU   0
BFPTSKID EQU   ISTBFPFX
BFPPSTID EQU   BFPTSKID+1
BFPPCBA  EQU   ISTBFPFX+4
BFPDATA  EQU   ISTBFPFX+16
BFPREGSA EQU   BFPDATA
BFPR5SA  EQU   BFPREGSA
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
BFPRDSA  EQU   BFPREGSA+32
BFPRCSA  EQU   BFPREGSA+28
BFPRBSA  EQU   BFPREGSA+24
BFPRASA  EQU   BFPREGSA+20
BFPR9SA  EQU   BFPREGSA+16
BFPR8SA  EQU   BFPREGSA+12
BFPR7SA  EQU   BFPREGSA+8
BFPR6SA  EQU   BFPREGSA+4
BFPPMDSB EQU   BFPR5SA
BFPPMCHN EQU   BFPR5SA
BFPPMCLR EQU   BFPR5SA
BFPUSED  EQU   ISTBFPFX+14
BFPSIZE  EQU   ISTBFPFX+12
BFPNXCHN EQU   ISTBFPFX+8
BFPBPCB  EQU   BFPPCBA+1
@NM00011 EQU   BFPPCBA
BFPCBID  EQU   BFPPCBA
BFPTIK   EQU   BFPPSTID+2
@NM00010 EQU   BFPPSTID
BFPCBXNO EQU   BFPTSKID
BFPALLOC EQU   BFPTSKID
BPCBSRB  EQU   ISTBPCB+68
BPCBSRBA EQU   BPCBRBLK+1
@NM00009 EQU   BPCBRBLK
BPCBSRBG EQU   BPCBRBLK
BPCBAVNO EQU   BPCBCDS2+2
BPCBCCNT EQU   BPCBCDS2
BPCBFBA  EQU   BPCBCDS1+1
@NM00008 EQU   BPCBFLG2
BPCBLOW2 EQU   BPCBFLG2
BPCBLOW1 EQU   BPCBFLG2
@NM00007 EQU   BPCBFLG2
BPCMINAV EQU   BPCBMUSE+2
@NM00006 EQU   BPCBMUSE
BPCBCQUE EQU   BPCBQREQ+2
BPCBMQUE EQU   BPCBQREQ
BPCBTHR2 EQU   ISTBPCB+38
BPCBTHRE EQU   ISTBPCB+36
BPCBTOTL EQU   ISTBPCB+34
BPCBNXCB EQU   ISTBPCB+28
BPCBPDTY EQU   ISTBPCB+24
BPCBRPHB EQU   ISTBPCB+20
BPCBRPHA EQU   ISTBPCB+16
BPCBPRIO EQU   BPCBFEXT
BPCBSPNO EQU   ISTBPCB+3
@NM00005 EQU   ISTBPCB+2
@NM00004 EQU   BPCBFLAG+1
BPCBUSRF EQU   BPCBFLAG+1
@NM00003 EQU   BPCBFLAG
BPCBNWS  EQU   BPCBFLAG
BPCBCBID EQU   BPCBFLAG
BPCBFX   EQU   BPCBFLAG
BPCBDISP EQU   BPCBFLAG
BPCBFM   EQU   BPCBFLAG
@NM00002 EQU   SRBSECT+40
@NM00001 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00042 EQU   RET
@RT00083 EQU   @RC00078
@ENDDATA EQU   *
         END   ISTORFBF,(C'PLS2005',0603,75325)
