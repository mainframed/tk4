         TITLE 'ISTRAFD1-VTAM FORMATTED DUMP-OS/VS                     *
                        '
ISTRAFD1 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTRAFD1  78.111'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
*                                                                  0569
*/****************************************************               */
*/*            BEGIN OF CODE                                         */
*/****************************************************               */
*                                                                  0569
*   R2=R1;                          /* SAVE ADDRESS OF PARMLIST      */
         LR    R2,R1                                               0569
*   RFY                                                            0570
*     RAFPLST BASED(R2);            /* TEMPORARY BASE FOR PARMLIST   */
*/*   DO GETMAIN FOR WORK AREA                                       */
*                                                                  0571
*   R1=ADDR(PLSTWORK);              /* ADDRESS GETMAIN PARMLIST      */
         LA    R1,PLSTWORK(,R2)                                    0571
*   R3=PLSTPOOL;                    /* GET SUBPOOL NUMBER            */
         SLR   R3,R3                                               0572
         IC    R3,PLSTPOOL(,R2)                                    0572
*   R4=ADDR(AREADD);                /* PROVIDE SPACE FOR ANSWER      */
         LA    R4,AREADD(,R2)                                      0573
*   GEN;                                                           0574
         L     R5,@SIZDATD        SIZE TO BE REQUESTED
         GETMAIN  EC,LV=(R5),A=(R4),SP=(R3),MF=(E,(1))
*   R1=R2;                          /* RESTORE PARMLIST POINTER      */
         LR    R1,R2                                               0575
*   RFY                                                            0576
*     RAFPLST BASED(R1);            /* REBASE PARMLIST               */
*   IF R15^=GOODRTRN                /* WAS GETMAIN SUCCESSFUL ?      */
*     THEN                                                         0577
         LTR   R15,R15                                             0577
         BZ    @RF00577                                            0577
*     DO;                           /* NO-GETMAIN FAILED             */
*       AREADD=REG14;               /* SAVE OVER CALL TO PRINT       */
         L     @09,REG14(,R13)                                     0579
         ST    @09,AREADD(,R1)                                     0579
*       BUFFER=COREMESS;            /* SET BUFFER WITH MESSAGE       */
         L     @09,PLSTOBUF(,R1)                                   0580
         MVI   BUFFER+90(@09),C' '                                 0580
         MVC   BUFFER+91(29,@09),BUFFER+90(@09)                    0580
         MVC   BUFFER(90,@09),COREMESS                             0580
*       WKAREA1=''B;                                               0581
         XC    WKAREA1(8,R13),WKAREA1(R13)                         0581
*       CVD(R5,WKAREA1);                                           0582
         CVD   R5,WKAREA1(,R13)                                    0582
*       UNPK(BYTEREQ(1:4),WKAREA(1:4));                            0583
         UNPK  BYTEREQ(4,@09),WKAREA(4,R13)                        0583
*       BYTEREQ(4)=BYTEREQ(4)×SIGNMASK;/* GET RID OF SIGN            */
         OI    BYTEREQ+3(@09),X'F0'                                0584
*       WKAREA1=''B;                                               0585
         XC    WKAREA1(8,R13),WKAREA1(R13)                         0585
*       CVD(R3,WKAREA1);                                           0586
         CVD   R3,WKAREA1(,R13)                                    0586
*       UNPK(SUBPOL(1:4),WKAREA(1:4));                             0587
         UNPK  SUBPOL(4,@09),WKAREA(4,R13)                         0587
*       SUBPOL(4)=SUBPOL(4)×SIGNMASK;/* GET RID OF SIGN              */
         OI    SUBPOL+3(@09),X'F0'                                 0588
*       LM(R14,R12,CALLRSAV);       /* RESTORE REGS SO PRINT ROUTINE
*                                      CAN USE CALLERS SAVE AREA     */
         LM    R14,R12,CALLRSAV(R13)                               0589
*       R15=PLSTPRNT;               /* GET ADDRESS OF PRINT ROUTINE  */
         L     R15,PLSTPRNT(,R1)                                   0590
*       CALL PRINT;                 /* PRINT INSUFFICIENT STORAGE    */
         BALR  @14,@15                                             0591
*       REG14=AREADD;               /* RESTORE CALLER'S ADDRESS      */
         L     @09,AREADD(,R1)                                     0592
         ST    @09,REG14(,R13)                                     0592
*       RETURN CODE(4);             /* SET UP RETURN CODE FOR CALLER */
         LA    @15,4                                               0593
         L     @14,12(,@13)                                        0593
         LM    @00,@12,20(@13)                                     0593
         BR    @14                                                 0593
*     END;                          /* END-GETMAIN FAILED            */
*   ELSE                                                           0595
*     DO;                           /* YES-GETMAIN SUCCESSFUL        */
@RF00577 DS    0H                                                  0596
*       RFY                                                        0596
*        (R3,                                                      0596
*         R4,                                                      0596
*         R5) UNRSTD;                                              0596
*       R11=AREADD;                 /* SET UP ADDRESSABILITY FOR   0597
*                                      WORKAREA                      */
         L     R11,AREADD(,R1)                                     0597
*       GEN(USING @DATD,R11);                                      0598
         USING @DATD,R11
*       REG15=GOODRTRN;             /* GOOD RETURN CODE FOR CALLER   */
         SLR   @09,@09                                             0599
         ST    @09,REG15(,R13)                                     0599
*       R15=ADDR(SAV1);             /* SET UP SAVE AREA              */
         LA    R15,SAV1                                            0600
*       BACKPTR=R13;                /* SET UP BACK POINTER           */
         ST    R13,BACKPTR(,R15)                                   0601
*       R13=R15;                                                   0602
         LR    R13,R15                                             0602
*       DO;                         /* GETLOC LOC(ATCLCPTR)ERRTN(NOAT
*                                      CVT)RET(ATCVTPTR,WORD)        */
*         R0=ADDR(ATCLCPTR);        /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCLCPTR                                         0604
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0605
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0606
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             0607
         CR    R15,@09                                             0607
         BNE   @RT00607                                            0607
*           GOTO NOATCVT;           /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     0609
*           ATCVTPTR=WORD;          /* NO-PICK UP FIELD              */
         LR    @08,R0                                              0609
         L     ATCVTPTR,WORD(,@08)                                 0609
*       END;                                                       0610
*       IF ATCVTPTR=0 THEN          /* IS VTAM ACTIVE                */
         CR    ATCVTPTR,@09                                        0611
         BNE   @RF00611                                            0611
*         DO;                       /* NO - SAY SO                   */
*           BUFFER=VTAMMESS;                                       0613
         L     @09,PLSTOBUF(,R1)                                   0613
         MVI   BUFFER+29(@09),C' '                                 0613
         MVC   BUFFER+30(90,@09),BUFFER+29(@09)                    0613
         MVC   BUFFER(29,@09),VTAMMESS                             0613
*           R15=PLSTPRNT;                                          0614
         L     R15,PLSTPRNT(,R1)                                   0614
*           CALL PRINT;                                            0615
         BALR  @14,@15                                             0615
*         END;                                                     0616
*       ELSE                        /* VTAM ACTIVE                   */
*         DO;                                                      0617
         B     @RC00611                                            0617
@RF00611 DS    0H                                                  0618
*           IF PLSTCALL=OFF THEN    /* CALLED BY ABDUMP ?            */
         TM    PLSTCALL(R1),B'10000000'                            0618
         BNZ   @RF00618                                            0618
*             CALL ISTRAFDA;        /* PROCESS ABDUMP CALL           */
         BAL   @14,ISTRAFDA                                        0619
*           ELSE                                                   0620
*             CALL ISTRAFDB;        /* PROCESS PRDUMP CALL           */
         B     @RC00618                                            0620
@RF00618 BAL   @14,ISTRAFDB                                        0620
*         END;                                                     0621
@RC00618 DS    0H                                                  0622
*FREEAREA:                                                         0622
*       R13=CLRSAV;                 /* RESTORE CALLER'S SAVE AREA PTR*/
@RC00611 DS    0H                                                  0622
FREEAREA L     R13,CLRSAV(,R13)                                    0622
*       R1=ADDR(PLSTWORK);          /* SET R1 TO PARAMATER LIST      */
         LA    @09,PLSTWORK(,R1)                                   0623
         LR    R1,@09                                              0623
*       GEN CODE;                                                  0624
         FREEMAIN E,MF=(E,(1))
*     END;                          /* END-GETMAIN SUCCESSFUL        */
*   RETURN;                                                        0626
*                                                                  0626
@EL00001 DS    0H                                                  0626
@EF00001 DS    0H                                                  0626
@ER00001 LM    @14,@12,12(@13)                                     0626
         BR    @14                                                 0626
*   /*****************************************************************/
*   /*                                                               */
*   /* ATCVT ERROR ROUTINE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0627
*NOATCVT:                                                          0627
*   ;                                                              0627
NOATCVT  DS    0H                                                  0628
*   BUFFER=ERRMESS1;                                               0628
         L     @09,PLSTOBUF(,R1)                                   0628
         MVI   BUFFER+36(@09),C' '                                 0628
         MVC   BUFFER+37(83,@09),BUFFER+36(@09)                    0628
         MVC   BUFFER(36,@09),ERRMESS1                             0628
*   MESS1LBL=LATCVT;                                               0629
         MVC   MESS1LBL(8,@09),@CC04955                            0629
*   CALL ERRMSG;                                                   0630
         BAL   @14,ERRMSG                                          0630
*   GOTO FREEAREA;                                                 0631
         B     FREEAREA                                            0631
*   GEN(EJECT);                                                    0632
*                                                                  0632
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED FOR ABDUMP PROCESSING. THE ACDEB FOR */
*   /* THE ABENDING TASK, THE ASSOCIATED RDT, FMCBS AND THE CRAS WILL*/
*   /* BE FORMATTED.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0633
*ISTRAFDA:                                                         0633
*   PROC OPTIONS(NOSAVEAREA);                                      0633
         B     @PB00002                                            0633
ISTRAFDA STM   @14,@12,12(@13)                                     0633
*   R15=ADDR(SAV4);                                                0634
         LA    R15,SAV4                                            0634
*   BACKPTR=R13;                                                   0635
         ST    R13,BACKPTR(,R15)                                   0635
*   R13=R15;                                                       0636
         LR    R13,R15                                             0636
*   SWITCHES=''B;                   /* INITIALIZE ALL FLAGS OFF      */
         MVI   SWITCHES,X'00'                                      0637
*   ACDEBPTR=ZERO;                  /* INITIALIZE TO NO DEB          */
         SLR   @09,@09                                             0638
         LR    ACDEBPTR,@09                                        0638
*   RFY                                                            0639
*     ASCB BASED(PSAAOLD);                                         0639
*   RFY                                                            0640
*     ASXB BASED(ASCBASXB);                                        0640
*   IF ASXBMPST=ZERO                /* IS THERE AN MPST ?            */
*     THEN                                                         0641
         L     @08,PSAAOLD                                         0641
         L     @08,ASCBASXB(,@08)                                  0641
         C     @09,ASXBMPST(,@08)                                  0641
         BE    @RT00641                                            0641
*     ;                             /* NO-INDICATE NO DEB            */
*   ELSE                                                           0643
*     DO;                           /* YES-THERE IS AN MPST          */
*       RFY                                                        0644
*         ISTMPST BASED(ASXBMPST);                                 0644
*       DCEPTR=MPSDBTBL;            /* ADDRESS DCE FOR THIS MPST     */
         L     @09,PSAAOLD                                         0645
         L     @09,ASCBASXB(,@09)                                  0645
         L     @09,ASXBMPST(,@09)                                  0645
         L     @09,MPSDBTBL(,@09)                                  0645
         ST    @09,DCEPTR                                          0645
*       CALL ADDRDEB2;              /* ADDRESS VS2 ACDEB             */
         BAL   @14,ADDRDEB2                                        0646
*       DO WHILE ACDEBPTR^=0;       /* DO WHILE THERE IS A DEB       */
*                                                                  0647
         B     @DE00647                                            0647
@DL00647 DS    0H                                                  0648
*         /***********************************************************/
*         /*                                                         */
*         /* THIS SEGMENT WILL FORMAT AND PRINT THE ACDEB            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0648
*         DO;                                                      0648
*           WORKADD=ACDEBPTR;       /* SET UP ADDRESS TO DEB         */
         ST    ACDEBPTR,WORKADD                                    0649
*           WORKLEN=LENGTH(ISTACDEB);/* LENGTH OF BLOCK              */
         MVC   WORKLEN(4),@CF05799                                 0650
*           PTRNADDR=ADDR(CBACDEB); /* ADDRESS OF PATTERN            */
         LA    @09,CBACDEB                                         0651
         ST    @09,PTRNADDR                                        0651
*           CBLABEL=LACDEB;                                        0652
         MVC   CBLABEL(8),@CC04945                                 0652
*           CALL RAFRMT;            /* FORMAT THE ACDEB              */
         BAL   @14,RAFRMT                                          0653
*           HITSW=ON;               /* INDICATE ONE BLOCK PRINTED    */
         OI    HITSW,B'01000000'                                   0654
*         END;                                                     0655
*         GEN(EJECT);                                              0656
*                                                                  0656
         EJECT
*         /***********************************************************/
*         /*                                                         */
*         /* THIS SEGMENT WILL FORMAT THE RDT ASSOCIATED WITH THE    */
*         /* ABENDING TASK.                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0657
*         RFY                                                      0657
*           RDTPTR RSTD;                                           0657
*         RDTPTR=ACDEBPTR->ACDRDTE; /* PICK UP RDT ADDRESS FROM DEB  */
         L     RDTPTR,ACDRDTE(,ACDEBPTR)                           0658
*         IF RDTPTR=ZERO            /* IS RDT AVAILABLE ?            */
*           THEN                                                   0659
         LTR   RDTPTR,RDTPTR                                       0659
         BZ    @RT00659                                            0659
*           ;                       /* NO-RDT NOT AVAILABLE          */
*         ELSE                                                     0661
*           DO;                     /* YES RDT AVAILABLE             */
*             SAVEPASS=RAPAPPWD;    /* SAVE PASSWORD                 */
         MVC   SAVEPASS(8),RAPAPPWD(RDTPTR)                        0662
*             RAPAPPWD=PASSCOVR;    /* '*' OUT PASSWORD FOR DUMP     */
         MVC   RAPAPPWD(8,RDTPTR),@CC05646                         0663
*             WORKADD=RDTPTR;       /* ADDRESS OF RDT                */
         ST    RDTPTR,WORKADD                                      0664
*             WORKLEN=RPRELEN;      /* INDICATE LENGTH OF RDT        */
         LH    @05,RPRELEN(,RDTPTR)                                0665
         ST    @05,WORKLEN                                         0665
*             PTRNADDR=ADDR(CBRDT); /* ADDRESS OF PATTERN            */
         LA    @05,CBRDT                                           0666
         ST    @05,PTRNADDR                                        0666
*             CBLABEL=LRDT;                                        0667
         MVC   CBLABEL(8),@CC05031                                 0667
*             CALL RAFRMT;          /* FORMAT AND PRINT RDT          */
         BAL   @14,RAFRMT                                          0668
*             RAPAPPWD=SAVEPASS;    /* RESTORE PASSWORD              */
         MVC   RAPAPPWD(8,RDTPTR),SAVEPASS                         0669
*           END;                    /* END-RDT AVAILABLE             */
*         RFY                                                      0671
*           RDTPTR UNRSTD;                                         0671
@RT00659 DS    0H                                                  0672
*         GEN(EJECT);                                              0672
*                                                                  0672
         EJECT
*         /***********************************************************/
*         /*                                                         */
*         /* THIS SEGMENT WILL FORMAT AND PRINT THE CHAIN OF FMCBS   */
*         /* OFF THE ACDEB.                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0673
*         DO;                                                      0673
*           RFY                                                    0674
*             FMCBPTR RSTD;                                        0674
*           FMCBPTR=ACDEBPTR->ACDFMCB;/* ADDRESS THE FMCB            */
         L     FMCBPTR,ACDFMCB(,ACDEBPTR)                          0675
*           WORKLEN=LENGTH(ISTFMCB);                               0676
         MVC   WORKLEN(4),@CF05800                                 0676
*           RFY                                                    0677
*             ISTFMCB BASED(FMCBPTR);                              0677
*           DO WHILE(FMCBPTR^=ZERO);/* DO WHILE THERE ARE FMCBS      */
         B     @DE00678                                            0678
@DL00678 DS    0H                                                  0679
*             WORKADD=FMCBPTR;      /* ADDRESS FMCB FOR FORMAT       */
         ST    FMCBPTR,WORKADD                                     0679
*             PTRNADDR=ADDR(CBFMCB);/* ADDRESS FMCB PATTERN          */
         LA    @04,CBFMCB                                          0680
         ST    @04,PTRNADDR                                        0680
*             CBLABEL=LFMCB;                                       0681
         MVC   CBLABEL(8),@CC05013                                 0681
*             CALL RAFRMT;                                         0682
         BAL   @14,RAFRMT                                          0682
*             FMCBPTR=FMCNXTCB;     /* ADDRESS NEXT FMCB             */
         L     FMCBPTR,FMCNXTCB(,FMCBPTR)                          0683
*           END;                    /* END DO WHILE                  */
@DE00678 LTR   FMCBPTR,FMCBPTR                                     0684
         BNZ   @DL00678                                            0684
*           RFY                                                    0685
*             FMCBPTR UNRSTD;                                      0685
*         END;                      /* FMCB PROCESSING               */
*         DCEPTR=DCECHN;            /* ADDRESS NEXT DCE              */
         L     @09,DCEPTR                                          0687
         L     @09,DCECHN(,@09)                                    0687
         ST    @09,DCEPTR                                          0687
*         CALL ADDRDEB2;            /* ADDRESS VS2 ACDEB             */
         BAL   @14,ADDRDEB2                                        0688
*       END;                        /* END-DO WHILE THERE IS A DEB   */
@DE00647 LTR   ACDEBPTR,ACDEBPTR                                   0689
         BNZ   @DL00647                                            0689
*     END;                          /* END - YES THERE IS A MPST     */
*   IF HITSW=ON                     /* WERE ANY ACDEB'S FOUND ?      */
*     THEN                                                         0691
@RT00641 TM    HITSW,B'01000000'                                   0691
         BO    @RT00691                                            0691
*     ;                             /* YES-SOME ACDEB'S WERE FOUND   */
*   ELSE                            /* NO-NO ACDEBS WERE FOUND       */
*     DO;                                                          0693
*       BUFFER=ERRMESS3;            /* INDICATE NO DEBS,FMCBS,OR RDTS*/
         L     @09,PLSTOBUF(,R1)                                   0694
         MVI   BUFFER+48(@09),C' '                                 0694
         MVC   BUFFER+49(71,@09),BUFFER+48(@09)                    0694
         MVC   BUFFER(48,@09),ERRMESS3                             0694
*       CALL ERRMSG;                                               0695
         BAL   @14,ERRMSG                                          0695
*     END;                                                         0696
*                                                                  0696
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SEGMENT WILL FORMAT AND PRINT THE CRAS. THEY ARE LOCATED */
*   /* OFF OT THE SCBS. IF NO CRAS WERE PRINTED A MESSAGE IS PRINTED */
*   /* TO THAT EFFECT.                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0697
*   DO;                                                            0697
@RT00691 DS    0H                                                  0698
*     HITSW=OFF;                                                   0698
         NI    HITSW,B'10111111'                                   0698
*     RFY                                                          0699
*       SCBPTR RSTD;                                               0699
*     ADRAPC61=ATCVTPTR->ATCAP61;   /* GET ADDRESS OF APC61          */
         MVC   ADRAPC61(3),ATCAP61+1(ATCVTPTR)                     0700
*     PTRNADDR=ADDR(CBCRA);         /* GET ADDRESS OF CRA PATTERN    */
         LA    @04,CBCRA                                           0701
         ST    @04,PTRNADDR                                        0701
*     WORKLEN=LENGTH(ISTCRA);                                      0702
         MVC   WORKLEN(4),@CF05801                                 0702
*     SCBPTR=PLSTATCB->TCBSTABB;    /* ADDRESS FIRST SCB     @ZA27471*/
         L     @09,PLSTATCB(,R1)                                   0703
         L     SCBPTR,TCBSTABB-1(,@09)                             0703
         LA    SCBPTR,0(,SCBPTR)                                   0703
*     DO WHILE(SCBPTR^=ZERO);       /* DO WHILE THERE ARE SCB'S      */
         B     @DE00704                                            0704
@DL00704 DS    0H                                                  0705
*       IF SCBPTR->SCBADR61=ADRAPC61/* A VTAM SCB ?                  */
*         THEN                                                     0705
         L     @04,SCBADR61(,SCBPTR)                               0705
         L     @09,ADRAPC61-1                                      0705
         LA    @09,0(,@09)                                         0705
         CR    @04,@09                                             0705
         BNE   @RF00705                                            0705
*         DO;                       /* YES-A VTAM SCB                */
*           R0=SCBPTR->SCBCRA;      /* ADDRESS CRA                   */
         L     R0,SCBCRA(,SCBPTR)                                  0707
*           IF R0^=ZERO             /* CRA AVAILABLE?                */
*             THEN                  /* YES-CRA AVAILABLE             */
         LTR   R0,R0                                               0708
         BZ    @RF00708                                            0708
*             DO;                                                  0709
*               HITSW=ON;           /* INDICATE ONE PRINTED          */
         OI    HITSW,B'01000000'                                   0710
*               WORKADD=R0;         /* POINT TO CRA                  */
         ST    R0,WORKADD                                          0711
*               CBLABEL=LCRA;                                      0712
         MVC   CBLABEL(8),@CC05045                                 0712
*               CALL RAFRMT;                                       0713
         BAL   @14,RAFRMT                                          0713
*             END;                  /* END-CRA AVAILABLE             */
*           ELSE                                                   0715
*             ;                                                    0715
@RF00708 DS    0H                                                  0716
*         END;                      /* END-VTAM SCB                  */
*       SCBPTR=SCBPTR->SCBCHAIN;    /* ACCESS NEXT SCB               */
@RF00705 L     SCBPTR,SCBCHAIN(,SCBPTR)                            0717
*     END;                          /* END-DO WHILE                  */
@DE00704 LTR   SCBPTR,SCBPTR                                       0718
         BNZ   @DL00704                                            0718
*     IF HITSW=OFF THEN             /* WERE ANY CRA'S PRINTED ?      */
         TM    HITSW,B'01000000'                                   0719
         BNZ   @RF00719                                            0719
*       DO;                                                        0720
*         BUFFER=ERRMESS1;          /* NO-INDICATE ERROR             */
         L     @04,PLSTOBUF(,R1)                                   0721
         MVI   BUFFER+36(@04),C' '                                 0721
         MVC   BUFFER+37(83,@04),BUFFER+36(@04)                    0721
         MVC   BUFFER(36,@04),ERRMESS1                             0721
*         MESS1LBL=LCRA;                                           0722
         MVC   MESS1LBL(8,@04),@CC05045                            0722
*         CALL ERRMSG;                                             0723
         BAL   @14,ERRMSG                                          0723
*       END;                                                       0724
*     RFY                                                          0725
*       SCBPTR UNRSTD;                                             0725
@RF00719 DS    0H                                                  0726
*   END;                                                           0726
*   R13=CLRSAV;                                                    0727
         L     R13,CLRSAV(,R13)                                    0727
*   END ISTRAFDA;                                                  0728
@EL00002 DS    0H                                                  0728
@EF00002 DS    0H                                                  0728
@ER00002 LM    @14,@12,12(@13)                                     0728
         BR    @14                                                 0728
@PB00002 DS    0H                                                  0729
*   GEN(EJECT);                                                    0729
         EJECT
*ISTRAFDB:                                                         0730
*   PROC OPTIONS(NOSAVEAREA);                                      0730
*                                                                  0730
         B     @PB00003                                            0730
ISTRAFDB STM   @14,@12,12(@13)                                     0730
*/* **************************************************************** */
*/*                                                                  */
*/*  THIS PROCEDURE WILL FORMAT CONTROL BLOCKS FOR PRDUMP.           */
*/*  THE ATCVT,QAB,RDTS,RDTES,NCBS, AND CONFT TABLES ARE FORMATED.   */
*/*  THE MPLTS, MPSTS, DCES, DEBS, PSTS, AND FMCBS ARE ALSO FORMATED */
*/*  SMS'S BPD, BPCBS ARE FORMATED ALONG WITH ALL ACTIVE CRA IN THE  */
*/*  LP00 BUFFER POOL.                                               */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0731
*   R15=ADDR(SAV4);                 /* SET UP SAVE AREA              */
         LA    R15,SAV4                                            0731
*   BACKPTR=R13;                                                   0732
         ST    R13,BACKPTR(,R15)                                   0732
*   R13=R15;                                                       0733
*                                                                  0733
         LR    R13,R15                                             0733
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT & PRINT ATCVT                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0734
*   WORKADD=ATCVTPTR;                                              0734
         ST    ATCVTPTR,WORKADD                                    0734
*   WORKLEN=LENGTH(ISTATCVT);                                      0735
         MVC   WORKLEN(4),@CF05802                                 0735
*   PTRNADDR=ADDR(CBATCVT);                                        0736
         LA    @09,CBATCVT                                         0736
         ST    @09,PTRNADDR                                        0736
*   CBLABEL=LATCVT;                                                0737
         MVC   CBLABEL(8),@CC04955                                 0737
*   CALL RAFRMT;                                                   0738
         BAL   @14,RAFRMT                                          0738
*   RFY                                                            0739
*     ISTATCVT BASED(ATCVTPTR);                                    0739
*                                                                  0739
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS RDT CHAIN                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0740
*   DO;                             /* BEGIN FRMTRDTB PROCESSING     */
*     RFY                                                          0741
*      (QABPTR) RSTD;                                              0741
*     RFY                                                          0742
*       ISTRPRE BASED(RDTPTR);                                     0742
*     RFY                                                          0743
*       ISTRAP BASED(RDTEPTR);                                     0743
*     DO;                           /* GETLOC LOC(ATCRDT)ERRTN(QABERR
*                                      )RET(QABPTR,WORD)             */
*       R0=ADDR(ATCRDT);            /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCRDT(,ATCVTPTR)                                0745
*       R15=PLSTMARA;               /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0746
*       CALL MAR;                   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0747
*       IF R15^=0 THEN              /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             0748
         CR    R15,@09                                             0748
         BNE   @RT00748                                            0748
*         GOTO QABERR;              /* YES - GO TO ERROR ROUTINE     */
*       ELSE                                                       0750
*         QABPTR=WORD;              /* NO-PICK UP FIELD              */
         LR    @08,R0                                              0750
         L     QABPTR,WORD(,@08)                                   0750
*     END;                          /* GET QAB PTR FROM ATCVT        */
*     IF QABPTR=0 THEN              /* IS THERE A QAB ?              */
         CR    QABPTR,@09                                          0752
         BE    @RT00752                                            0752
*       GOTO QABERR;                                               0753
*     ELSE                                                         0754
*       ;                                                          0754
*     RFY                                                          0755
*       ISTQAB BASED(QABPTR);                                      0755
*                                                                  0755
*     /***************************************************************/
*     /*                                                             */
*     /* FORMAT & PRINT QAB                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0756
*     WORKADD=QABPTR;                                              0756
         ST    QABPTR,WORKADD                                      0756
*     WORKLEN=LENGTH(ISTQAB);                                      0757
         MVC   WORKLEN(4),@CF00071                                 0757
*     PTRNADDR=ADDR(CBQAB);                                        0758
         LA    @09,CBQAB                                           0758
         ST    @09,PTRNADDR                                        0758
*     CBLABEL=LQAB;                                                0759
         MVC   CBLABEL(8),@CC04959                                 0759
*     CALL RAFRMT;                                                 0760
*                                                                  0760
         BAL   @14,RAFRMT                                          0760
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS RDT CHAIN                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0761
*     DO;                           /* BEGIN RDT1 PROCESSING         */
*       RFY                                                        0762
*        (LASTGOOD,                                                0762
*         RDTPTR) RSTD;                                            0762
*       DO;                         /* GETLOC LOC(QABFIRST)ERRTN(RDTE
*                                      RR)RET(RDTPTR,WORD)           */
*         R0=ADDR(QABFIRST);        /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,QABFIRST(,QABPTR)                                0764
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0765
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0766
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             0767
         CR    R15,@09                                             0767
         BNE   @RT00767                                            0767
*           GOTO RDTERR;            /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     0769
*           RDTPTR=WORD;            /* NO-PICK UP FIELD              */
         LR    @08,R0                                              0769
         L     RDTPTR,WORD(,@08)                                   0769
*       END;                        /* GET FIRST RDT PTR             */
*       FORSW=ON;                   /* INDICATE MOVING FORWARD THRU
*                                      CHAIN                         */
         OI    FORSW,B'00100000'                                   0771
*       LASTGOOD=ZERO;              /* INITIALIZE LAST RDT LOOKED AT */
         LR    LASTGOOD,@09                                        0772
*       DO WHILE RDTPTR^=QABPTR&RDTPTR^=LASTGOOD;/* SCAN THRU RDTS   */
         B     @DE00773                                            0773
@DL00773 DS    0H                                                  0774
*         DO;                       /* BEGIN RDT2 PROCESSING         */
*                                                                  0774
*           /*********************************************************/
*           /*                                                       */
*           /* FORMAT RDT HEADER                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0775
*           RFY                                                    0775
*            (RDTEPTR,                                             0775
*             RDTPOS,                                              0775
*             TYPE,                                                0775
*             RDTPTR) RSTD;                                        0775
*           DO;                     /* GETLOC LOC(RPRELEN)ERRTN(RDT2E
*                                      RR)RET(WORKLEN,HWRD)          */
*             R0=ADDR(RPRELEN);     /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRELEN(,RDTPTR)                                 0777
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0778
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0779
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0780
         BNZ   @RT00780                                            0780
*               GOTO RDT2ERR;       /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 0782
*               WORKLEN=HWRD;       /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0782
         LH    @09,HWRD(,@09)                                      0782
         ST    @09,WORKLEN                                         0782
*           END;                    /* GET RDT LENGTH                */
*           WORKADD=RDTPTR;                                        0784
         ST    RDTPTR,WORKADD                                      0784
*           PTRNADDR=ADDR(CBRDT);                                  0785
         LA    @09,CBRDT                                           0785
         ST    @09,PTRNADDR                                        0785
*           CBLABEL=LRDT;                                          0786
         MVC   CBLABEL(8),@CC05031                                 0786
*           CALL RAFRMT;                                           0787
*                                                                  0787
         BAL   @14,RAFRMT                                          0787
*           /*********************************************************/
*           /*                                                       */
*           /* FORMAT RDTES                                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0788
*           DO;                     /* GETLOC LOC(RPRFLAGA)ERRTN(RDT2
*                                      ERR)RET(RDTPOS,BYTE)          */
*             R0=ADDR(RPRFLAGA);    /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRFLAGA(,RDTPTR)                                0789
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0790
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0791
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0792
         BNZ   @RT00792                                            0792
*               GOTO RDT2ERR;       /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 0794
*               RDTPOS=BYTE;        /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0794
         SLR   RDTPOS,RDTPOS                                       0794
         IC    RDTPOS,BYTE(,@09)                                   0794
*           END;                    /* GET RDTE POSITION - LAST RDTE
*                                      ?                             */
*           DO;                     /* GETLOC LOC(RPRENTRY)ERRTN(RDT2
*                                      ERR)RET(TYPE,BYTE)            */
*             R0=ADDR(RPRENTRY);    /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRENTRY(,RDTPTR)                                0797
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0798
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0799
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0800
         BNZ   @RT00800                                            0800
*               GOTO RDT2ERR;       /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 0802
*               TYPE=BYTE;          /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0802
         SLR   TYPE,TYPE                                           0802
         IC    TYPE,BYTE(,@09)                                     0802
*           END;                    /* GET RDT TYPE                  */
*           RDTEPTR=RDTPTR;         /* INITIAL RDTE POINTER          */
         LR    RDTEPTR,RDTPTR                                      0804
*           SAVELEN=WORKLEN;        /* INITIALIZE RDT LENGTH FOR   0805
*                                      TERMINAL RDTS                 */
         L     @09,WORKLEN                                         0805
         ST    @09,SAVELEN                                         0805
*           RFY                                                    0806
*             ISTRPRE BASED(RDTEPTR);                              0806
*           IF TYPE=RPRENTAH THEN   /* IS THIS AN APPL RDT ?         */
*                                                                  0807
         C     TYPE,@CF02326                                       0807
         BNE   @RF00807                                            0807
*             /*******************************************************/
*             /*                                                     */
*             /* FORMAT APPLICATION RDTES                            */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0808
*             DO WHILE((RDTPOS&LASTRDTE)^=LASTRDTE);/* LOOP THRU APPL
*                                      RDTES                         */
         B     @DE00808                                            0808
@DL00808 DS    0H                                                  0809
*               RDTEPTR=RDTEPTR+WORKLEN;/* INCREMENT RDTE POINTER    */
         AL    RDTEPTR,WORKLEN                                     0809
*               DO;                 /* GETLOC LOC(RPRELEN)ERRTN(RDT2E
*                                      RR)RET(WORKLEN,HWRD)          */
*                 R0=ADDR(RPRELEN); /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRELEN(,RDTEPTR)                                0811
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0812
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0813
*                 IF R15^=0 THEN    /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0814
         BNZ   @RT00814                                            0814
*                   GOTO RDT2ERR;   /* YES - GO TO ERROR ROUTINE     */
*                 ELSE                                             0816
*                   WORKLEN=HWRD;   /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0816
         LH    @09,HWRD(,@09)                                      0816
         ST    @09,WORKLEN                                         0816
*               END;                /* GET RDTE LENGTH               */
*               DO;                 /* GETLOC LOC(RAPAPPWD)          */
*                 R0=ADDR(RAPAPPWD);/* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RAPAPPWD(,RDTEPTR)                               0819
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0820
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0821
*               END;                /* GET APPL PASSWORD             */
*               IF R15^=0 THEN      /* GOOD RETURN FROM MAR ?        */
         LTR   R15,R15                                             0823
         BNZ   @RT00823                                            0823
*                 GOTO RDT2ERR;                                    0824
*               R0->DWRD=PASSCOVR;  /* BLANK OUT PASSWORD            */
         LR    @09,R0                                              0825
         MVC   DWRD(8,@09),@CC05646                                0825
*               WORKADD=RDTEPTR;                                   0826
         ST    RDTEPTR,WORKADD                                     0826
*               PTRNADDR=ADDR(CBRDTE);                             0827
         LA    @09,CBRDTE                                          0827
         ST    @09,PTRNADDR                                        0827
*               CBLABEL=LRDTE;                                     0828
         MVC   CBLABEL(8),@CC04961                                 0828
*               CALL RAFRMT;                                       0829
         BAL   @14,RAFRMT                                          0829
*               DO;                 /* GETLOC LOC(RPRFLAGA)ERRTN(RDT2
*                                      ERR)RET(RDTPOS,BYTE)          */
*                 R0=ADDR(RPRFLAGA);/* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRFLAGA(,RDTEPTR)                               0831
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0832
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0833
*                 IF R15^=0 THEN    /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0834
         BNZ   @RT00834                                            0834
*                   GOTO RDT2ERR;   /* YES - GO TO ERROR ROUTINE     */
*                 ELSE                                             0836
*                   RDTPOS=BYTE;    /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0836
         SLR   RDTPOS,RDTPOS                                       0836
         IC    RDTPOS,BYTE(,@09)                                   0836
*               END;                /* GET RDTE POSITION             */
*             END;                  /* END LOOPING THRU APPL RDTES   */
@DE00808 LA    @09,4                                               0838
         ST    @09,@TF00001                                        0838
         LR    @09,RDTPOS                                          0838
         N     @09,@TF00001                                        0838
         C     @09,@TF00001                                        0838
         BNE   @DL00808                                            0838
*           ELSE                                                   0839
*                                                                  0839
*             /*******************************************************/
*             /*                                                     */
*             /* FORMAT TERMINAL RDTES                               */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0839
*             DO WHILE((RDTPOS&LASTRDTE)^=LASTRDTE);/* LOOP THRU RDTE*/
         B     @RC00807                                            0839
@RF00807 B     @DE00839                                            0839
@DL00839 DS    0H                                                  0840
*               RDTEPTR=RDTEPTR+SAVELEN;/* INCREMENT RDTE POINTER    */
         AL    RDTEPTR,SAVELEN                                     0840
*               DO;                 /* GETLOC LOC(RPRELEN)ERRTN(RDT2E
*                                      RR)RET(WORKLEN,HWRD)          */
*                 R0=ADDR(RPRELEN); /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRELEN(,RDTEPTR)                                0842
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0843
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0844
*                 IF R15^=0 THEN    /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0845
         BNZ   @RT00845                                            0845
*                   GOTO RDT2ERR;   /* YES - GO TO ERROR ROUTINE     */
*                 ELSE                                             0847
*                   WORKLEN=HWRD;   /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0847
         LH    @09,HWRD(,@09)                                      0847
         ST    @09,WORKLEN                                         0847
*               END;                /* GET RDTE LENGTH               */
*               SAVELEN=WORKLEN;    /* SAVE RDTE LENGTH OVER NCB CALL*/
         ST    @09,SAVELEN                                         0849
*               WORKADD=RDTEPTR;                                   0850
         ST    RDTEPTR,WORKADD                                     0850
*               PTRNADDR=ADDR(CBRDTE);                             0851
         LA    @09,CBRDTE                                          0851
         ST    @09,PTRNADDR                                        0851
*               CBLABEL=LRDTE;                                     0852
         MVC   CBLABEL(8),@CC04961                                 0852
*               CALL RAFRMT;                                       0853
*                                                                  0853
         BAL   @14,RAFRMT                                          0853
*               /*****************************************************/
*               /*                                                   */
*               /* PROCESS NCBS                                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0854
*               CALL NCBFRMT;                                      0854
         BAL   @14,NCBFRMT                                         0854
*               DO;                 /* GETLOC LOC(RPRFLAGA)ERRTN(RDT2
*                                      ERR)RET(RDTPOS,BYTE)          */
*                 R0=ADDR(RPRFLAGA);/* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRFLAGA(,RDTEPTR)                               0856
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0857
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0858
*                 IF R15^=0 THEN    /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0859
         BNZ   @RT00859                                            0859
*                   GOTO RDT2ERR;   /* YES - GO TO ERROR ROUTINE     */
*                 ELSE                                             0861
*                   RDTPOS=BYTE;    /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0861
         SLR   RDTPOS,RDTPOS                                       0861
         IC    RDTPOS,BYTE(,@09)                                   0861
*               END;                /* GET RDTE POSITION             */
*             END;                  /* END LOOPING THRU TERMINAL   0863
*                                      RDTES                         */
@DE00839 LA    @09,4                                               0863
         ST    @09,@TF00001                                        0863
         LR    @09,RDTPOS                                          0863
         N     @09,@TF00001                                        0863
         C     @09,@TF00001                                        0863
         BNE   @DL00839                                            0863
*           GOTO RDT2END;                                          0864
*                                                                  0864
         B     RDT2END                                             0864
*           /*********************************************************/
*           /*                                                       */
*           /* RDT2 ERROR ROUTINE                                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0865
*RDT2ERR:                                                          0865
*           ;                                                      0865
RDT2ERR  DS    0H                                                  0866
*           BUFFER=RDT2MSG;                                        0866
         L     @09,PLSTOBUF(,R1)                                   0866
         MVI   BUFFER+42(@09),C' '                                 0866
         MVC   BUFFER+43(77,@09),BUFFER+42(@09)                    0866
         MVC   BUFFER(42,@09),RDT2MSG                              0866
*           CALL ERRMSG;                                           0867
         BAL   @14,ERRMSG                                          0867
*           RFY                                                    0868
*            (RDTEPTR,                                             0868
*             RDTPOS,                                              0868
*             TYPE) UNRSTD;                                        0868
*RDT2END:                                                          0869
*         END;                      /* END RDT2 PROCESSING           */
RDT2END  DS    0H                                                  0870
*         RFY                                                      0870
*           ISTRPRE BASED(RDTPTR);                                 0870
*         IF FORSW=ON THEN          /* MOVING FORWARD ?              */
         TM    FORSW,B'00100000'                                   0871
         BNO   @RF00871                                            0871
*           DO;                                                    0872
*             LASTGOOD=RDTPTR;      /* UPDATE LAST RDT LOOKED AT     */
         LR    LASTGOOD,RDTPTR                                     0873
*             DO;                   /* GETLOC LOC(RDTFORW)           */
*               R0=ADDR(RDTFORW);   /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RDTFORW(,RDTPTR)                                 0875
*               R15=PLSTMARA;       /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0876
*               CALL MAR;           /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0877
*             END;                  /* GET NEXT FORWARD POINTER      */
*             IF R15^=0 THEN        /* GOOD RETURN ?                 */
         LTR   R15,R15                                             0879
         BZ    @RF00879                                            0879
*               DO;                 /* NO                            */
*                 FORSW=OFF;        /* INDICATE MOVING BACKWARDS     */
         NI    FORSW,B'11011111'                                   0881
*                 DO;               /* GETLOC LOC(QABLAST)ERRTN(RDTER
*                                      R)RET(RDTPTR,WORD)            */
*                   R0=ADDR(QABLAST);/* PICK UP @ OF AREA FOR MAR    */
         LA    R0,QABLAST(,QABPTR)                                 0883
*                   R15=PLSTMARA;   /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0884
*                   CALL MAR;       /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0885
*                   IF R15^=0 THEN  /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0886
         BNZ   @RT00886                                            0886
*                     GOTO RDTERR;  /* YES - GO TO ERROR ROUTINE     */
*                   ELSE                                           0888
*                     RDTPTR=WORD;  /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0888
         L     RDTPTR,WORD(,@09)                                   0888
*                 END;              /* GET FIRST BACKWARD CHAIN    0889
*                                      POINTER                       */
*               END;                                               0890
*             ELSE                  /* GOOD FORWARD POINTER          */
*               RDTPTR=R0->WORD;    /* UPDATE RDTPTR                 */
         B     @RC00879                                            0891
@RF00879 LR    @09,R0                                              0891
         L     RDTPTR,WORD(,@09)                                   0891
*           END;                    /* END MOVING FORWARD            */
*         ELSE                      /* MOVING BACKWARD THRU RDT CHAIN*/
*           DO;                     /* GETLOC LOC(RDTBACK)ERRTN(RDTER
*                                      R)RET(RDTPTR,WORD)            */
         B     @RC00871                                            0893
@RF00871 DS    0H                                                  0894
*             R0=ADDR(RDTBACK);     /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RDTBACK(,RDTPTR)                                 0894
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0895
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0896
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0897
         BNZ   @RT00897                                            0897
*               GOTO RDTERR;        /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 0899
*               RDTPTR=WORD;        /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0899
         L     RDTPTR,WORD(,@09)                                   0899
*           END;                    /* GET NEXT BACK CHAIN POINTER   */
*       END;                        /* END LOOPING THRU RDTS         */
@RC00871 DS    0H                                                  0901
@DE00773 CR    RDTPTR,QABPTR                                       0901
         BE    @DC00773                                            0901
         CR    RDTPTR,LASTGOOD                                     0901
         BNE   @DL00773                                            0901
@DC00773 DS    0H                                                  0902
*       GOTO ENDRDT1;                                              0902
*                                                                  0902
         B     ENDRDT1                                             0902
*       /*************************************************************/
*       /*                                                           */
*       /* RDTERR ROUTINE                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0903
*RDTERR:                                                           0903
*       ;                                                          0903
RDTERR   DS    0H                                                  0904
*       BUFFER=RDT1MSG;                                            0904
         L     @09,PLSTOBUF(,R1)                                   0904
         MVI   BUFFER+59(@09),C' '                                 0904
         MVC   BUFFER+60(60,@09),BUFFER+59(@09)                    0904
         MVC   BUFFER(59,@09),RDT1MSG                              0904
*       CALL ERRMSG;                                               0905
         BAL   @14,ERRMSG                                          0905
*       RFY                                                        0906
*        (LASTGOOD,                                                0906
*         RDTPTR) UNRSTD;                                          0906
*ENDRDT1:                                                          0907
*     END;                          /* END RDT1 PROCESSING           */
*     GOTO ENDFRDTB;                                               0908
*                                                                  0908
         B     ENDFRDTB                                            0908
*     /***************************************************************/
*     /*                                                             */
*     /* QAB ERROR ROUTINE                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0909
*QABERR:                                                           0909
*     ;                                                            0909
QABERR   DS    0H                                                  0910
*     BUFFER=QABMSG;                                               0910
         L     @09,PLSTOBUF(,R1)                                   0910
         MVI   BUFFER+58(@09),C' '                                 0910
         MVC   BUFFER+59(61,@09),BUFFER+58(@09)                    0910
         MVC   BUFFER(58,@09),QABMSG                               0910
*     CALL ERRMSG;                                                 0911
         BAL   @14,ERRMSG                                          0911
*     RFY                                                          0912
*      (RDTPTR,                                                    0912
*       QABPTR) UNRSTD;                                            0912
*ENDFRDTB:                                                         0913
*   END;                            /* END FRMTRDTB                  */
*                                                                  0913
ENDFRDTB DS    0H                                                  0914
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT & PRINT CONFT. TABLE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0914
*   DO;                             /* GETLOC LOC(ATCCONFT)ERRTN(NOCO
*                                      NFT)RET(WORKADD,WORD)         */
*     R0=ADDR(ATCCONFT);            /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCCONFT(,ATCVTPTR)                              0915
*     R15=PLSTMARA;                 /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0916
*     CALL MAR;                     /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0917
*     IF R15^=0 THEN                /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0918
         BNZ   @RT00918                                            0918
*       GOTO NOCONFT;               /* YES - GO TO ERROR ROUTINE     */
*     ELSE                                                         0920
*       WORKADD=WORD;               /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0920
         L     @09,WORD(,@09)                                      0920
         ST    @09,WORKADD                                         0920
*   END;                                                           0921
*   WORKLEN=LENGTH(ISTCONFT);                                      0922
         MVC   WORKLEN(4),@CF05803                                 0922
*   CBLABEL=LCONFT;                                                0923
         MVC   CBLABEL(8),@CC04997                                 0923
*   PTRNADDR=ADDR(CBCONFT);                                        0924
         LA    @09,CBCONFT                                         0924
         ST    @09,PTRNADDR                                        0924
*   CALL RAFRMT;                                                   0925
         BAL   @14,RAFRMT                                          0925
*   GOTO DEBFRMT;                                                  0926
*                                                                  0926
         B     DEBFRMT                                             0926
*   /*****************************************************************/
*   /*                                                               */
*   /* CONFT. TABLE ERROR ROUTINE                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0927
*NOCONFT:                                                          0927
*   ;                                                              0927
NOCONFT  DS    0H                                                  0928
*   BUFFER=ERRMESS1;                                               0928
         L     @09,PLSTOBUF(,R1)                                   0928
         MVI   BUFFER+36(@09),C' '                                 0928
         MVC   BUFFER+37(83,@09),BUFFER+36(@09)                    0928
         MVC   BUFFER(36,@09),ERRMESS1                             0928
*   MESS1LBL=LCONFT;                                               0929
         MVC   MESS1LBL(8,@09),@CC04997                            0929
*   CALL ERRMSG;                                                   0930
         BAL   @14,ERRMSG                                          0930
*   GEN(EJECT);                                                    0931
*                                                                  0931
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS DEBS AND RELATED CONTROL BLOCKS                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0932
*DEBFRMT:                                                          0932
*   ;                                                              0932
DEBFRMT  DS    0H                                                  0933
*   DO;                             /* BEGIN VS2 DEB PROCESSING      */
*     RFY                                                          0934
*       ISTMPLT BASED(MPLTPTR);                                    0934
*     RFY                                                          0935
*       ISTMPST BASED(MPSTPTR);                                    0935
*     RFY                                                          0936
*       ISTDCE BASED(DCEPTR);                                      0936
*     RFY                                                          0937
*       ISTACDEB BASED(DEBPTR);                                    0937
*     RFY                                                          0938
*       ISTPST BASED(PSTPTR);                                      0938
*     DO;                           /* GETLOC LOC(ATCMPLTA)ERRTN(MPLT
*                                      ERR)RET(MPLTPTR,WORD)         */
*       R0=ADDR(ATCMPLTA);          /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCMPLTA(,ATCVTPTR)                              0940
*       R15=PLSTMARA;               /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0941
*       CALL MAR;                   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0942
*       IF R15^=0 THEN              /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0943
         BNZ   @RT00943                                            0943
*         GOTO MPLTERR;             /* YES - GO TO ERROR ROUTINE     */
*       ELSE                                                       0945
*         MPLTPTR=WORD;             /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0945
         L     @09,WORD(,@09)                                      0945
         ST    @09,MPLTPTR                                         0945
*     END;                          /* GET MPLT POINTER              */
*     DO WHILE(MPLTPTR^=0);         /* LOOP THRU MPLTS               */
         B     @DE00947                                            0947
@DL00947 DS    0H                                                  0948
*       DO;                         /* GETLOC LOC(MPLECNT)ERRTN(MPLTE
*                                      RR)RET(MPSTCNT,HWRD)          */
*         R0=ADDR(MPLECNT);         /* PICK UP @ OF AREA FOR MAR     */
         L     @09,MPLTPTR                                         0949
         LA    R0,MPLECNT(,@09)                                    0949
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0950
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0951
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0952
         BNZ   @RT00952                                            0952
*           GOTO MPLTERR;           /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     0954
*           MPSTCNT=HWRD;           /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0954
         LH    @09,HWRD(,@09)                                      0954
         STH   @09,MPSTCNT                                         0954
*       END;                        /* GET MPST CNT FROM MPLT        */
*                                                                  0955
*       /*************************************************************/
*       /*                                                           */
*       /* FORMAT & PRINT MPLT                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0956
*       WORKADD=MPLTPTR;                                           0956
         L     @08,MPLTPTR                                         0956
         ST    @08,WORKADD                                         0956
*       WORKLEN=LENGTH(ISTMPLT)+(8*MPSTCNT);                       0957
         SLA   @09,3                                               0957
         AL    @09,@CF01005                                        0957
         ST    @09,WORKLEN                                         0957
*       PTRNADDR=ADDR(CBMPLT);                                     0958
         LA    @09,CBMPLT                                          0958
         ST    @09,PTRNADDR                                        0958
*       CBLABEL=LMPLT;                                             0959
         MVC   CBLABEL(8),@CC05055                                 0959
*       CALL RAFRMT;                                               0960
         BAL   @14,RAFRMT                                          0960
*       DO;                         /* BEGIN MPST PROCESSING         */
*         DO I=1 TO MPSTCNT;        /* LOOP THRU MPST IN MPLTS       */
         LA    @09,1                                               0962
         B     @DE00962                                            0962
@DL00962 DS    0H                                                  0963
*           DO;                     /* GETLOC LOC(MPLCDS(I))ERRTN(MPS
*                                      TERR)RET(MPSTPTR,WORD)        */
*             R0=ADDR(MPLCDS(I));   /* PICK UP @ OF AREA FOR MAR     */
         SLA   @09,3                                               0964
         L     @08,MPLTPTR                                         0964
         LA    R0,MPLCDS-8(@09,@08)                                0964
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0965
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0966
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             0967
         CR    R15,@09                                             0967
         BNE   @RT00967                                            0967
*               GOTO MPSTERR;       /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 0969
*               MPSTPTR=WORD;       /* NO-PICK UP FIELD              */
         LR    @08,R0                                              0969
         L     @08,WORD(,@08)                                      0969
         ST    @08,MPSTPTR                                         0969
*           END;                    /* GET MPST POINTER              */
*           IF MPSTPTR=0 THEN                                      0971
         CR    @08,@09                                             0971
         BE    @RT00971                                            0971
*             ;                     /* IS THERE AN MPST POINTER      */
*           ELSE                    /* YES - PRINT MPST              */
*             DO;                                                  0973
*               WORKADD=MPSTPTR;                                   0974
         L     @09,MPSTPTR                                         0974
         ST    @09,WORKADD                                         0974
*               WORKLEN=LENGTH(ISTMPST);                           0975
         MVC   WORKLEN(4),@CF05804                                 0975
*               PTRNADDR=ADDR(CBMPST);                             0976
         LA    @09,CBMPST                                          0976
         ST    @09,PTRNADDR                                        0976
*               CBLABEL=LMPST;                                     0977
         MVC   CBLABEL(8),@CC05057                                 0977
*               CALL RAFRMT;                                       0978
*                                                                  0978
         BAL   @14,RAFRMT                                          0978
*               /*****************************************************/
*               /*                                                   */
*               /* PROCESS DCES, DEBS, LUCBS AND FMCBS               */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0979
*               DO;                 /* BEGIN DCE PROCESSING          */
*                 RFY                                              0980
*                  (DEBPTR,                                        0980
*                   PSTPTR,                                        0980
*                   FMCBPTR) RSTD;                                 0980
*                 DO;               /* GETLOC LOC(MPSDBTBL)ERRTN(DCEE
*                                      RR)RET(DCEPTR,WORD)           */
*                   R0=ADDR(MPSDBTBL);/* PICK UP @ OF AREA FOR MAR   */
         L     @09,MPSTPTR                                         0982
         LA    R0,MPSDBTBL(,@09)                                   0982
*                   R15=PLSTMARA;   /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   0983
*                   CALL MAR;       /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0984
*                   IF R15^=0 THEN  /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             0985
         BNZ   @RT00985                                            0985
*                     GOTO DCEERR;  /* YES - GO TO ERROR ROUTINE     */
*                   ELSE                                           0987
*                     DCEPTR=WORD;  /* NO-PICK UP FIELD              */
         LR    @09,R0                                              0987
         L     @09,WORD(,@09)                                      0987
         ST    @09,DCEPTR                                          0987
*                 END;              /* GET DCEPTR FROM MPST          */
*                 DO WHILE DCEPTR^=0;/* LOOP THRU DCE CHAIN          */
         B     @DE00989                                            0989
@DL00989 DS    0H                                                  0990
*                   WORKADD=DCEPTR;                                0990
         L     @09,DCEPTR                                          0990
         ST    @09,WORKADD                                         0990
*                   WORKLEN=LENGTH(ISTDCE);                        0991
         MVC   WORKLEN(4),@CF01005                                 0991
*                   PTRNADDR=ADDR(CBDCE);                          0992
         LA    @09,CBDCE                                           0992
         ST    @09,PTRNADDR                                        0992
*                   CBLABEL=LDCE;                                  0993
         MVC   CBLABEL(8),@CC05067                                 0993
*                   CALL RAFRMT;                                   0994
*                                                                  0994
         BAL   @14,RAFRMT                                          0994
*                   /*************************************************/
*                   /*                                               */
*                   /* PROCESS DEB,LUCB & FMCBS                      */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0995
*                   DO;             /* BEGIN DEB PROCESSING          */
*                     DO;           /* GETLOC LOC(DCEDBPTR)ERRTN(DEBE
*                                      RR)RET(DEBPTR,WORD)           */
*                       R0=ADDR(DCEDBPTR);/* PICK UP @ OF AREA FOR 0997
*                                      MAR                           */
         L     R0,DCEPTR                                           0997
*                       R15=PLSTMARA;/* GET MAR ADDRESS              */
         L     R15,PLSTMARA(,R1)                                   0998
*                       CALL MAR;   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             0999
*                       IF R15^=0 THEN/* DID MAR ENCOUNTER AN ERROR  */
         LTR   R15,R15                                             1000
         BNZ   @RT01000                                            1000
*                         GOTO DEBERR;/* YES - GO TO ERROR ROUTINE   */
*                       ELSE                                       1002
*                         DEBPTR=WORD;/* NO-PICK UP FIELD            */
         LR    @09,R0                                              1002
         L     DEBPTR,WORD(,@09)                                   1002
*                     END;          /* GET DEBPTR                    */
*                     WORKADD=DEBPTR;                              1004
         ST    DEBPTR,WORKADD                                      1004
*                     WORKLEN=LENGTH(ISTACDEB);                    1005
         MVC   WORKLEN(4),@CF05799                                 1005
*                     PTRNADDR=ADDR(CBACDEB);                      1006
         LA    @09,CBACDEB                                         1006
         ST    @09,PTRNADDR                                        1006
*                     CBLABEL=LDEB;                                1007
         MVC   CBLABEL(8),@CC05053                                 1007
*                     CALL RAFRMT;                                 1008
*                                                                  1008
         BAL   @14,RAFRMT                                          1008
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS PST                                 */
*                     /*                                             */
*                     /***********************************************/
*                                                                  1009
*                     DO;           /* BEGIN PST PROCESSING          */
*                       DO;         /* GETLOC LOC(ACDTSKID)ERRTN(PSTE
*                                      RR)RET(PSTPTR,WORD)           */
*                         R0=ADDR(ACDTSKID);/* PICK UP @ OF AREA FOR
*                                      MAR                           */
         LA    R0,ACDTSKID(,DEBPTR)                                1011
*                         R15=PLSTMARA;/* GET MAR ADDRESS            */
         L     R15,PLSTMARA(,R1)                                   1012
*                         CALL MAR; /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1013
*                         IF R15^=0 THEN/* DID MAR ENCOUNTER AN ERROR*/
         SLR   @09,@09                                             1014
         CR    R15,@09                                             1014
         BNE   @RT01014                                            1014
*                           GOTO PSTERR;/* YES - GO TO ERROR ROUTINE */
*                         ELSE                                     1016
*                           PSTPTR=WORD;/* NO-PICK UP FIELD          */
         LR    @08,R0                                              1016
         L     PSTPTR,WORD(,@08)                                   1016
*                       END;        /* GET PSTPTR FROM DEB           */
*                       IF PSTPTR=0 THEN/* IS THERE A PST            */
         CR    PSTPTR,@09                                          1018
         BE    @RT01018                                            1018
*                         GOTO PSTERR;                             1019
*                       WORKADD=PSTPTR;                            1020
         ST    PSTPTR,WORKADD                                      1020
*                       WORKLEN=LENGTH(ISTPST);                    1021
         MVC   WORKLEN(4),@CF05134                                 1021
*                       PTRNADDR=ADDR(CBPST);                      1022
         LA    @09,CBPST                                           1022
         ST    @09,PTRNADDR                                        1022
*                       CBLABEL=LPST;                              1023
         MVC   CBLABEL(8),@CC04977                                 1023
*                       CALL RAFRMT;                               1024
         BAL   @14,RAFRMT                                          1024
*                       GOTO PSTEND;                               1025
*                                                                  1025
         B     PSTEND                                              1025
*                       /*********************************************/
*                       /*                                           */
*                       /* PST ERROR ROUTINE                         */
*                       /*                                           */
*                       /*********************************************/
*                                                                  1026
*PSTERR:                                                           1026
*                       ;                                          1026
PSTERR   DS    0H                                                  1027
*                       BUFFER=PSTMSG;                             1027
         L     @09,PLSTOBUF(,R1)                                   1027
         MVI   BUFFER+20(@09),C' '                                 1027
         MVC   BUFFER+21(99,@09),BUFFER+20(@09)                    1027
         MVC   BUFFER(20,@09),PSTMSG                               1027
*                       CALL ERRMSG;                               1028
         BAL   @14,ERRMSG                                          1028
*PSTEND:                                                           1029
*                     END;          /* END PST PROCESSING            */
*                                                                  1029
PSTEND   DS    0H                                                  1030
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS FMCB                                */
*                     /*                                             */
*                     /***********************************************/
*                                                                  1030
*                     DO;           /* BEGIN FMCB PROCESSING         */
*                       DO;         /* GETLOC LOC(ACDFMCB)ERRTN(FMCBE
*                                      RR)RET(FMCBPTR,WORD)          */
*                         R0=ADDR(ACDFMCB);/* PICK UP @ OF AREA FOR
*                                      MAR                           */
         LA    R0,ACDFMCB(,DEBPTR)                                 1032
*                         R15=PLSTMARA;/* GET MAR ADDRESS            */
         L     R15,PLSTMARA(,R1)                                   1033
*                         CALL MAR; /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1034
*                         IF R15^=0 THEN/* DID MAR ENCOUNTER AN ERROR*/
         LTR   R15,R15                                             1035
         BNZ   @RT01035                                            1035
*                           GOTO FMCBERR;/* YES - GO TO ERROR ROUTINE*/
*                         ELSE                                     1037
*                           FMCBPTR=WORD;/* NO-PICK UP FIELD         */
         LR    @09,R0                                              1037
         L     FMCBPTR,WORD(,@09)                                  1037
*                       END;        /* GET FMCB POINTER              */
*                       DO WHILE FMCBPTR^=0;/* LOOP THRU FMCBS OFF 1039
*                                      DEB                           */
         B     @DE01039                                            1039
@DL01039 DS    0H                                                  1040
*                         WORKADD=FMCBPTR;                         1040
         ST    FMCBPTR,WORKADD                                     1040
*                         WORKLEN=LENGTH(ISTFMCB);                 1041
         MVC   WORKLEN(4),@CF05800                                 1041
*                         PTRNADDR=ADDR(CBFMCB);                   1042
         LA    @09,CBFMCB                                          1042
         ST    @09,PTRNADDR                                        1042
*                         CBLABEL=LFMCB;                           1043
         MVC   CBLABEL(8),@CC05013                                 1043
*                         CALL RAFRMT;                             1044
         BAL   @14,RAFRMT                                          1044
*                         DO;       /* GETLOC LOC(FMCNXTCB)ERRTN(FMCB
*                                      ERR)RET(FMCBPTR,WORD)         */
*                           R0=ADDR(FMCNXTCB);/* PICK UP @ OF AREA 1046
*                                      FOR MAR                       */
         LA    R0,FMCNXTCB(,FMCBPTR)                               1046
*                           R15=PLSTMARA;/* GET MAR ADDRESS          */
         L     R15,PLSTMARA(,R1)                                   1047
*                           CALL MAR;/* GET DUMPED ADDRESS           */
         BALR  @14,@15                                             1048
*                           IF R15^=0 THEN/* DID MAR ENCOUNTER AN  1049
*                                      ERROR                         */
         LTR   R15,R15                                             1049
         BNZ   @RT01049                                            1049
*                             GOTO FMCBERR;/* YES - GO TO ERROR    1050
*                                      ROUTINE                       */
*                           ELSE                                   1051
*                             FMCBPTR=WORD;/* NO-PICK UP FIELD       */
         LR    @09,R0                                              1051
         L     FMCBPTR,WORD(,@09)                                  1051
*                         END;      /* GET NEXT FMCB POINTER         */
*                       END;        /* END LOOPING THRU FMCBS        */
@DE01039 LTR   FMCBPTR,FMCBPTR                                     1053
         BNZ   @DL01039                                            1053
*                       GOTO FMCBEND;                              1054
*                                                                  1054
         B     FMCBEND                                             1054
*                       /*********************************************/
*                       /*                                           */
*                       /* FMCB ERROR ROUTINE                        */
*                       /*                                           */
*                       /*********************************************/
*                                                                  1055
*FMCBERR:                                                          1055
*                       ;                                          1055
FMCBERR  DS    0H                                                  1056
*                       BUFFER=FMCBMSG;                            1056
         L     @09,PLSTOBUF(,R1)                                   1056
         MVI   BUFFER+42(@09),C' '                                 1056
         MVC   BUFFER+43(77,@09),BUFFER+42(@09)                    1056
         MVC   BUFFER(42,@09),FMCBMSG                              1056
*                       CALL ERRMSG;                               1057
         BAL   @14,ERRMSG                                          1057
*FMCBEND:                                                          1058
*                     END;          /* END FMCB PROCESSING           */
*                     GOTO DEBEND;                                 1059
*                                                                  1059
         B     DEBEND                                              1059
*                     /***********************************************/
*                     /*                                             */
*                     /* DEB ERROR ROUTINE                           */
*                     /*                                             */
*                     /***********************************************/
*                                                                  1060
*DEBERR:                                                           1060
*                     ;                                            1060
DEBERR   DS    0H                                                  1061
*                     BUFFER=DEBMSG;                               1061
         L     @09,PLSTOBUF(,R1)                                   1061
         MVI   BUFFER+50(@09),C' '                                 1061
         MVC   BUFFER+51(69,@09),BUFFER+50(@09)                    1061
         MVC   BUFFER(50,@09),DEBMSG                               1061
*                     CALL ERRMSG;                                 1062
         BAL   @14,ERRMSG                                          1062
*DEBEND:                                                           1063
*                   END;            /* END DEB PROCESSING            */
DEBEND   DS    0H                                                  1064
*                   DO;             /* GETLOC LOC(DCECHN)ERRTN(DCEERR
*                                      )RET(DCEPTR,WORD)             */
*                     R0=ADDR(DCECHN);/* PICK UP @ OF AREA FOR MAR   */
         L     @09,DCEPTR                                          1065
         LA    R0,DCECHN(,@09)                                     1065
*                     R15=PLSTMARA; /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1066
*                     CALL MAR;     /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1067
*                     IF R15^=0 THEN/* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1068
         BNZ   @RT01068                                            1068
*                       GOTO DCEERR;/* YES - GO TO ERROR ROUTINE     */
*                     ELSE                                         1070
*                       DCEPTR=WORD;/* NO-PICK UP FIELD              */
         LR    @09,R0                                              1070
         L     @09,WORD(,@09)                                      1070
         ST    @09,DCEPTR                                          1070
*                   END;                                           1071
*                 END;                                             1072
@DE00989 L     @09,DCEPTR                                          1072
         LTR   @09,@09                                             1072
         BNZ   @DL00989                                            1072
*                 GOTO DCEEND;                                     1073
*                                                                  1073
         B     DCEEND                                              1073
*                 /***************************************************/
*                 /*                                                 */
*                 /* DCE ERROR ROUTINE                               */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1074
*DCEERR:                                                           1074
*                 ;                                                1074
DCEERR   DS    0H                                                  1075
*                 BUFFER=DCEMSG;                                   1075
         L     @09,PLSTOBUF(,R1)                                   1075
         MVI   BUFFER+75(@09),C' '                                 1075
         MVC   BUFFER+76(44,@09),BUFFER+75(@09)                    1075
         MVC   BUFFER(75,@09),DCEMSG                               1075
*                 CALL ERRMSG;                                     1076
         BAL   @14,ERRMSG                                          1076
*DCEEND:                                                           1077
*               END;                /* END DCE PROCESSING            */
DCEEND   DS    0H                                                  1078
*               RFY                                                1078
*                (DEBPTR,                                          1078
*                 PSTPTR,                                          1078
*                 FMCBPTR) UNRSTD;                                 1078
*             END;                                                 1079
*         END;                                                     1080
@RT00971 LA    @09,1                                               1080
         AH    @09,I                                               1080
@DE00962 STH   @09,I                                               1080
         CH    @09,MPSTCNT                                         1080
         BNH   @DL00962                                            1080
*         GOTO MPSTEND;                                            1081
*                                                                  1081
         B     MPSTEND                                             1081
*         /***********************************************************/
*         /*                                                         */
*         /* MPST ERROR ROUTINE                                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1082
*MPSTERR:                                                          1082
*         ;                                                        1082
MPSTERR  DS    0H                                                  1083
*         BUFFER=MPSTMSG;                                          1083
         L     @09,PLSTOBUF(,R1)                                   1083
         MVI   BUFFER+62(@09),C' '                                 1083
         MVC   BUFFER+63(57,@09),BUFFER+62(@09)                    1083
         MVC   BUFFER(62,@09),MPSTMSG                              1083
*         CALL ERRMSG;                                             1084
         BAL   @14,ERRMSG                                          1084
*MPSTEND:                                                          1085
*       END;                        /* END MPST PROCESSING           */
MPSTEND  DS    0H                                                  1086
*       DO;                         /* GETLOC LOC(MPLCHN)ERRTN(MPLTER
*                                      R)RET(MPLTPTR,WORD)           */
*         R0=ADDR(MPLCHN);          /* PICK UP @ OF AREA FOR MAR     */
         L     R0,MPLTPTR                                          1087
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1088
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1089
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1090
         BNZ   @RT01090                                            1090
*           GOTO MPLTERR;           /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     1092
*           MPLTPTR=WORD;           /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1092
         L     @09,WORD(,@09)                                      1092
         ST    @09,MPLTPTR                                         1092
*       END;                                                       1093
*     END;                                                         1094
@DE00947 L     @09,MPLTPTR                                         1094
         LTR   @09,@09                                             1094
         BNZ   @DL00947                                            1094
*     GOTO MPLTEND;                                                1095
*                                                                  1095
         B     MPLTEND                                             1095
*     /***************************************************************/
*     /*                                                             */
*     /* MPLT ERROR ROUTINE                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  1096
*MPLTERR:                                                          1096
*     ;                                                            1096
MPLTERR  DS    0H                                                  1097
*     BUFFER=MPLTMSG;                                              1097
         L     @09,PLSTOBUF(,R1)                                   1097
         MVI   BUFFER+86(@09),C' '                                 1097
         MVC   BUFFER+87(33,@09),BUFFER+86(@09)                    1097
         MVC   BUFFER(86,@09),MPLTMSG                              1097
*     CALL ERRMSG;                                                 1098
         BAL   @14,ERRMSG                                          1098
*MPLTEND:                                                          1099
*   END;                            /* END MPLT PROCESSING           */
MPLTEND  DS    0H                                                  1100
*   GEN(EJECT);                                                    1100
*                                                                  1100
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS SMS CONTROL BLOCKS                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1101
*   DO;                             /* BEGIN SMS PROCESSING          */
*     RFY                                                          1102
*       BPDPTR RSTD;                                               1102
*     RFY                                                          1103
*       ISTBPDTY BASED(BPDPTR);                                    1103
*     DO;                           /* GETLOC LOC(ATCBPDA)ERRTN(BPDER
*                                      R)RET(BPDPTR,WORD)            */
*       R0=ADDR(ATCBPDA);           /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCBPDA(,ATCVTPTR)                               1105
*       R15=PLSTMARA;               /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1106
*       CALL MAR;                   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1107
*       IF R15^=0 THEN              /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1108
         BNZ   @RT01108                                            1108
*         GOTO BPDERR;              /* YES - GO TO ERROR ROUTINE     */
*       ELSE                                                       1110
*         BPDPTR=WORD;              /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1110
         L     BPDPTR,WORD(,@09)                                   1110
*     END;                          /* GET BPDPTR FROM ATCVT         */
*                                                                  1111
*     /***************************************************************/
*     /*                                                             */
*     /* PRINT BUFFER POOL DIRECTORY                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  1112
*     WORKADD=BPDPTR;                                              1112
         ST    BPDPTR,WORKADD                                      1112
*     WORKLEN=LENGTH(ISTBPDTY);                                    1113
         MVC   WORKLEN(4),@CF05805                                 1113
*     PTRNADDR=ADDR(CBBPD);                                        1114
         LA    @09,CBBPD                                           1114
         ST    @09,PTRNADDR                                        1114
*     CBLABEL=LBPD;                                                1115
         MVC   CBLABEL(8),@CC04963                                 1115
*     CALL RAFRMT;                                                 1116
*                                                                  1116
         BAL   @14,RAFRMT                                          1116
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS BPCBS                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  1117
*     DO;                           /* BEGIN BPCB PROCESSING         */
*       RFY                                                        1118
*        (BPCBCNT,                                                 1118
*         BPCBPTR) RSTD;                                           1118
*       RFY                                                        1119
*         ISTBPCB BASED(BPCBPTR);                                  1119
*       DO;                         /* GETLOC LOC(BPDBPENT)ERRTN(BPCB
*                                      ERR)RET(BPCBCNT,HWRD)         */
*         R0=ADDR(BPDBPENT);        /* PICK UP @ OF AREA FOR MAR     */
         LR    R0,BPDPTR                                           1121
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1122
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1123
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1124
         BNZ   @RT01124                                            1124
*           GOTO BPCBERR;           /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     1126
*           BPCBCNT=HWRD;           /* NO-PICK UP FIELD              */
         LR    @07,R0                                              1126
         LH    BPCBCNT,HWRD(,@07)                                  1126
*       END;                        /* GET NUMBER OF CURRENT BPCBS 1127
*                                      FROM BPD                      */
*       DO I=1 TO BPCBCNT;          /* LOOP THRU BPCBS               */
         LA    @07,1                                               1128
         B     @DE01128                                            1128
@DL01128 DS    0H                                                  1129
*         DO;                       /* GETLOC LOC(BPDENTRY(I))ERRTN(B
*                                      PCBERR)RET(BPCBID,WORD)       */
*           R0=ADDR(BPDENTRY(I));   /* PICK UP @ OF AREA FOR MAR     */
         SLA   @07,4                                               1130
         LA    R0,BPDENTRY-16(@07,BPDPTR)                          1130
*           R15=PLSTMARA;           /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1131
*           CALL MAR;               /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1132
*           IF R15^=0 THEN          /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1133
         BNZ   @RT01133                                            1133
*             GOTO BPCBERR;         /* YES - GO TO ERROR ROUTINE     */
*           ELSE                                                   1135
*             BPCBID=WORD;          /* NO-PICK UP FIELD              */
         LR    @07,R0                                              1135
         MVC   BPCBID(4),WORD(@07)                                 1135
*         END;                      /* GET POINTER TO BUFFER POOL  1136
*                                      ENTRY AND POOL ID             */
*         RFY                                                      1137
*           ISTBPENT BASED(ADDR(BPDENTRY(I)));                     1137
*         DO;                       /* GETLOC LOC(BPEBPCB)           */
*           R0=ADDR(BPEBPCB);       /* PICK UP @ OF AREA FOR MAR     */
         LH    @07,I                                               1139
         SLA   @07,4                                               1139
         LA    R0,BPDENTRY-16(@07,BPDPTR)                          1139
         LR    @07,R0                                              1139
         LA    R0,BPEBPCB(,@07)                                    1139
*           R15=PLSTMARA;           /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1140
*           CALL MAR;               /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1141
*         END;                      /* GET BPCB ADDRESS              */
*         IF R15=0 THEN                                            1143
         LTR   R15,R15                                             1143
         BNZ   @RF01143                                            1143
*           DO;                                                    1144
*             BPCBPTR=R0->WORD;                                    1145
*                                                                  1145
         LR    @05,R0                                              1145
         L     BPCBPTR,WORD(,@05)                                  1145
*             /*******************************************************/
*             /*                                                     */
*             /* PRINT BPCB                                          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1146
*             BUFID=BPCBID;         /* SET BPCBID IN HEADER          */
         L     @07,PLSTOBUF(,R1)                                   1146
         MVC   BUFID(4,@07),BPCBID                                 1146
*             WORKADD=BPCBPTR;                                     1147
         ST    BPCBPTR,WORKADD                                     1147
*             WORKLEN=LENGTH(ISTBPCB);                             1148
         MVC   WORKLEN(4),@CF05242                                 1148
*             PTRNADDR=ADDR(CBBPCB);                               1149
         LA    @07,CBBPCB                                          1149
         ST    @07,PTRNADDR                                        1149
*             CBLABEL=LBPCB;                                       1150
         MVC   CBLABEL(8),@CC04967                                 1150
*             CALL RAFRMT;                                         1151
         BAL   @14,RAFRMT                                          1151
*           END;                    /* END BPCB AVAILABLE            */
*         ELSE                                                     1153
*           DO;                     /* PRINT ERROR MSG - UNABLE TO 1153
*                                      GET TO BPCB                   */
         B     @RC01143                                            1153
@RF01143 DS    0H                                                  1154
*             BUFFER=BPCBMSG;                                      1154
         L     @07,PLSTOBUF(,R1)                                   1154
         MVI   BUFFER+34(@07),C' '                                 1154
         MVC   BUFFER+35(85,@07),BUFFER+34(@07)                    1154
         MVC   BUFFER(34,@07),BPCBMSG                              1154
*             CALL ERRMSG;                                         1155
         BAL   @14,ERRMSG                                          1155
*           END;                                                   1156
*       END;                        /* END FORMAT BPCBS              */
@RC01143 LA    @07,1                                               1157
         AH    @07,I                                               1157
@DE01128 STH   @07,I                                               1157
         CR    @07,BPCBCNT                                         1157
         BNH   @DL01128                                            1157
*       GOTO BPCBEND;                                              1158
*                                                                  1158
         B     BPCBEND                                             1158
*       /*************************************************************/
*       /*                                                           */
*       /* BPCB ERR ROUTINE                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1159
*BPCBERR:                                                          1159
*       ;                                                          1159
BPCBERR  DS    0H                                                  1160
*       BUFFER=BPCBMSG;                                            1160
         L     @07,PLSTOBUF(,R1)                                   1160
         MVI   BUFFER+34(@07),C' '                                 1160
         MVC   BUFFER+35(85,@07),BUFFER+34(@07)                    1160
         MVC   BUFFER(34,@07),BPCBMSG                              1160
*       CALL ERRMSG;                                               1161
         BAL   @14,ERRMSG                                          1161
*       RFY                                                        1162
*        (BPCBCNT,                                                 1162
*         BPCBPTR) UNRSTD;                                         1162
*BPCBEND:                                                          1163
*     END;                          /* END BCBP PROCESSING           */
BPCBEND  DS    0H                                                  1164
*     GEN(EJECT);                                                  1164
*                                                                  1164
         EJECT
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS CRAS                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  1165
*     DO;                           /* BEGIN CRA PROCESSING          */
*       RFY                                                        1166
*        (BPCBPTR,                                                 1166
*         CRAPTR,                                                  1166
*         BUFNUM) RSTD;                                            1166
*       DO;                         /* GETLOC LOC(EVAL(ADDR(BPDCBID)+
*                                      (CBICRA-1)*8)->CBIDPCB)ERRTN(C
*                                      RAERR)RET(BPCBPTR,WORD)       */
*         R0=ADDR(EVAL(ADDR(BPDCBID)+(CBICRA-1)*8)->CBIDPCB);/* PICK
*                                      UP @ OF AREA FOR MAR          */
         LA    R0,BPDCBID(,BPDPTR)                                 1168
         AL    R0,@CF05807                                         1168
         LR    @07,R0                                              1168
         LA    R0,CBIDPCB(,@07)                                    1168
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1169
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1170
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1171
         BNZ   @RT01171                                            1171
*           GOTO CRAERR;            /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     1173
*           BPCBPTR=WORD;           /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1173
         L     BPCBPTR,WORD(,@09)                                  1173
*       END;                        /* GET CRAS BPCB PTR             */
*       DO;                         /* GETLOC LOC(BPCBBSIZ)ERRTN(CRAE
*                                      RR)RET(BUFSIZ,HWRD)           */
*         R0=ADDR(BPCBBSIZ);        /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,BPCBBSIZ(,BPCBPTR)                               1176
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1177
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1178
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1179
         BNZ   @RT01179                                            1179
*           GOTO CRAERR;            /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     1181
*           BUFSIZ=HWRD;            /* NO-PICK UP FIELD              */
         LR    @07,R0                                              1181
         LH    @07,HWRD(,@07)                                      1181
         ST    @07,BUFSIZ                                          1181
*       END;                        /* GET BUFFER SIZE FOR CRA POOL  */
*       BUFSIZ=(((BUFSIZ+7)/8)*8)+8;/* ROUND BUFSIZ TO DWRD BDY +  1183
*                                      PREFIX                        */
         LA    @09,8                                               1183
         LR    @08,@07                                             1183
         AL    @08,@CF00909                                        1183
         ST    @09,@TF00001                                        1183
         SRDA  @08,32                                              1183
         D     @08,@TF00001                                        1183
         SLA   @09,3                                               1183
         AL    @09,@TF00001                                        1183
         ST    @09,BUFSIZ                                          1183
*       BUFPAG=PAGESIZ/BUFSIZ;      /* CALCULATE # BUFS PER PAGE     */
*                                                                  1184
         L     @08,@CF04896                                        1184
         ST    @09,@TF00001                                        1184
         SRDA  @08,32                                              1184
         D     @08,@TF00001                                        1184
         ST    @09,BUFPAG                                          1184
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK OUT RESIDUAL AREA                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1185
*       DO;                         /* GETLOC LOC(BPCBRESP)          */
*         R0=ADDR(BPCBRESP);        /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,BPCBRESP(,BPCBPTR)                               1186
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1187
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1188
*       END;                                                       1189
*       IF R15=0 THEN               /* GOOD RETURN FROM MAR ?        */
         SLR   @07,@07                                             1190
         CR    R15,@07                                             1190
         BNE   @RF01190                                            1190
*         DO;                       /* YES                           */
*           CRAPTR=R0->WORD;        /* GET RESIDUAL AREA ADDRESS     */
         LR    @09,R0                                              1192
         L     CRAPTR,WORD(,@09)                                   1192
*           IF CRAPTR=0 THEN                                       1193
         CR    CRAPTR,@07                                          1193
         BE    @RT01193                                            1193
*             ;                     /* IS THERE A RESIDUAL AREA    1194
*                                      AVAILABLE ?                   */
*           ELSE                    /* YES                           */
*             DO;                   /* SCAN AREA FOR ACTIVE CRAS     */
*               DO;                 /* GETLOC LOC(BPCBNUMR)          */
*                 R0=ADDR(BPCBNUMR);/* PICK UP @ OF AREA FOR MAR     */
         LA    R0,BPCBNUMR(,BPCBPTR)                               1197
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1198
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1199
*               END;                                               1200
*               IF R15=0 THEN       /* GOOD RETURN FROM MAR ?        */
         LTR   R15,R15                                             1201
         BNZ   @RF01201                                            1201
*                 DO;               /* YES                           */
*                   BUFNUM=R0->HWRD;/* GET NUMBER OF BUFFERS IN    1203
*                                      RESIDUAL AREA                 */
         LR    @07,R0                                              1203
         LH    BUFNUM,HWRD(,@07)                                   1203
*                   CALL BUFSCAN;   /* SCAN AREA FOR ACTIVE CRA AND
*                                      PRINT THEM                    */
         BAL   @14,BUFSCAN                                         1204
*                 END;                                             1205
*               ELSE                                               1206
*                 CRAFLAG=ON;       /* INDICATE MAR ERROR            */
         B     @RC01201                                            1206
@RF01201 OI    CRAFLAG,B'10000000'                                 1206
*             END;                  /* END RESIDUAL AREA TO BE     1207
*                                      SCANNED                       */
*         END;                      /* END NO MAR ERROR              */
*       ELSE                                                       1209
*         CRAFLAG=ON;               /* INDICATE MAR ERROR            */
*                                                                  1209
         B     @RC01190                                            1209
@RF01190 OI    CRAFLAG,B'10000000'                                 1209
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK OUT STATIC AREA                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1210
*       DO;                         /* GETLOC LOC(BPCBADR1)          */
@RC01190 DS    0H                                                  1211
*         R0=ADDR(BPCBADR1);        /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,BPCBADR1(,BPCBPTR)                               1211
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1212
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1213
*       END;                                                       1214
*       IF R15=0 THEN               /* GOOD RETURN FROM MAR ?        */
         SLR   @07,@07                                             1215
         CR    R15,@07                                             1215
         BNE   @RF01215                                            1215
*         DO;                       /* YES                           */
*           CRAPTR=R0->WORD;        /* GET STATIC AREA ADDRESS       */
         LR    @09,R0                                              1217
         L     CRAPTR,WORD(,@09)                                   1217
*           IF CRAPTR^=0 THEN       /* IS THERE A STATIC AREA        */
         CR    CRAPTR,@07                                          1218
         BE    @RF01218                                            1218
*             DO;                   /* YES                           */
*               DO;                 /* GETLOC LOC(BPCBNUM)           */
*                 R0=ADDR(BPCBNUM); /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,BPCBNUM(,BPCBPTR)                                1221
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1222
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1223
*               END;                                               1224
*               IF R15=0 THEN       /* GOOD RETURN FROM MAR ?        */
         LTR   R15,R15                                             1225
         BNZ   @RF01225                                            1225
*                 DO;               /* YES                           */
*                   BUFNUM=R0->HWRD;/* GET NUMBER OF BUFFERS IN    1227
*                                      STATIC AREA                   */
         LR    @07,R0                                              1227
         LH    BUFNUM,HWRD(,@07)                                   1227
*                   CALL BUFSCAN;   /* SCAN STATIC AREA AND PRINT  1228
*                                      ACTIVE CRAS                   */
         BAL   @14,BUFSCAN                                         1228
*                 END;              /* END GOOD RETURN FROM MAR      */
*               ELSE                                               1230
*                 CRAFLAG=ON;       /* INDICATE MAR ERROR            */
         B     @RC01225                                            1230
@RF01225 OI    CRAFLAG,B'10000000'                                 1230
*             END;                  /* END STATIC AREA AVAILABLE     */
*         END;                                                     1232
*       ELSE                                                       1233
*         CRAFLAG=ON;               /* INDICATE MAR ERROR            */
         B     @RC01215                                            1233
@RF01215 OI    CRAFLAG,B'10000000'                                 1233
*       IF CRAFLAG=ON THEN          /* WAS THERE A MAR ERROR ?       */
*                                                                  1234
@RC01215 TM    CRAFLAG,B'10000000'                                 1234
         BNO   @RF01234                                            1234
*         /***********************************************************/
*         /*                                                         */
*         /* CRA ERROR ROUTINE                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1235
*CRAERR:                                                           1235
*         DO;                                                      1235
CRAERR   DS    0H                                                  1236
*           BUFFER=CRAMSG;                                         1236
         L     @07,PLSTOBUF(,R1)                                   1236
         MVI   BUFFER+33(@07),C' '                                 1236
         MVC   BUFFER+34(86,@07),BUFFER+33(@07)                    1236
         MVC   BUFFER(33,@07),CRAMSG                               1236
*           CALL ERRMSG;                                           1237
         BAL   @14,ERRMSG                                          1237
*         END;                                                     1238
*       RFY                                                        1239
*        (BPCBPTR,                                                 1239
*         CRAPTR,                                                  1239
*         BUFNUM) UNRSTD;                                          1239
@RF01234 DS    0H                                                  1240
*     END;                          /* END CRA PROCESSING            */
*     GOTO BPDEND;                                                 1241
*                                                                  1241
         B     BPDEND                                              1241
*     /***************************************************************/
*     /*                                                             */
*     /* BPD ERROR ROUTINE                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  1242
*BPDERR:                                                           1242
*     ;                                                            1242
BPDERR   DS    0H                                                  1243
*     BUFFER=BPDMSG;                                               1243
         L     @09,PLSTOBUF(,R1)                                   1243
         MVI   BUFFER+52(@09),C' '                                 1243
         MVC   BUFFER+53(67,@09),BUFFER+52(@09)                    1243
         MVC   BUFFER(52,@09),BPDMSG                               1243
*     CALL ERRMSG;                                                 1244
         BAL   @14,ERRMSG                                          1244
*     RFY                                                          1245
*       BPDPTR UNRSTD;                                             1245
*BPDEND:                                                           1246
*   END;                            /* END BPD PROCESSING            */
BPDEND   DS    0H                                                  1247
*   R13=CLRSAV;                     /* RESTORE USERS SAVEAREA        */
         L     R13,CLRSAV(,R13)                                    1247
*   END ISTRAFDB;                                                  1248
@EL00003 DS    0H                                                  1248
@EF00003 DS    0H                                                  1248
@ER00003 LM    @14,@12,12(@13)                                     1248
         BR    @14                                                 1248
@PB00003 DS    0H                                                  1249
*   GEN(EJECT);                                                    1249
*                                                                  1249
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE INVOKES THE SYSTEM PRINT ROUTINE TO WRITE     */
*   /* ERROR MESSAGES.                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1250
*ERRMSG:                                                           1250
*   PROC OPTIONS(NOSAVEAREA);                                      1250
         B     @PB00004                                            1250
ERRMSG   STM   @14,@12,12(@13)                                     1250
*   R15=ADDR(SAV5);                 /* SAV4 ADDR TO R15              */
         LA    R15,SAV5                                            1251
*   BACKPTR=R13;                    /* CALLERS SA @ TO CALLED SA     */
         ST    R13,BACKPTR(,R15)                                   1252
*   R13=R15;                        /* CALLED SA @ IN R13            */
         LR    R13,R15                                             1253
*   R15=PLSTPRNT;                                                  1254
         L     R15,PLSTPRNT(,R1)                                   1254
*   CALL PRINT;                     /* PRINT ERROR MESSAGE           */
         BALR  @14,@15                                             1255
*   R15=PLSTPRNT;                                                  1256
         L     R15,PLSTPRNT(,R1)                                   1256
*   CALL PRINT;                     /* SKIP LINE                     */
         BALR  @14,@15                                             1257
*   R13=CLRSAV;                     /* PTR TO CALLERS SAVE AREA      */
         L     R13,CLRSAV(,R13)                                    1258
*   END ERRMSG;                                                    1259
@EL00004 DS    0H                                                  1259
@EF00004 DS    0H                                                  1259
@ER00004 LM    @14,@12,12(@13)                                     1259
         BR    @14                                                 1259
@PB00004 DS    0H                                                  1260
*   GEN(EJECT);                                                    1260
*                                                                  1260
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CALLS THE SYSTEM ROUTINES FORMAT AND PRINT TO */
*   /* PRINT THE CONTROL BLOCKS. IF AN ERROR OCCURS WHILE PRINTING, A*/
*   /* MESSAGE IS PRINTED STATING WHICH CONTROL BLOCK WAS            */
*   /* INTERRUPTED.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1261
*RAFRMT:                                                           1261
*   PROC OPTIONS(NOSAVEAREA);                                      1261
         B     @PB00005                                            1261
RAFRMT   STM   @14,@12,12(@13)                                     1261
*   R15=ADDR(SAV6);                 /* SAV3 ADDR TO R15              */
         LA    R15,SAV6                                            1262
*   BACKPTR=R13;                    /* CALLERS SA @ TO CALLED SA     */
         ST    R13,BACKPTR(,R15)                                   1263
*   R13=R15;                        /* CALLED SA @ IN R13            */
         LR    R13,R15                                             1264
*   RFY                                                            1265
*     R4 RSTD;                                                     1265
*   ERSW=OFF;                       /* CLEAR ERROR SWITCH            */
         NI    ERSW,B'01111111'                                    1266
*   WORKPTRN=PTRNADDR->PATTERN;     /* MOVE PTRN TO GETMAINED AREA   */
         L     @05,PTRNADDR                                        1267
         MVC   WORKPTRN(148),PATTERN(@05)                          1267
*   MSKPTR=ADDR(WORKPTRN);          /* SET BASE FOR MASK             */
         LA    @05,WORKPTRN                                        1268
         ST    @05,MSKPTR                                          1268
*SPECPAT:                                                          1269
*   DO WHILE(LINE^=-1);             /* LOOP THRU PATTERNS            */
SPECPAT  B     @DE01269                                            1269
@DL01269 DS    0H                                                  1270
*     IF LINE=0                     /* END OF LINE INDICATOR         */
*       THEN                        /* YES                           */
         L     @05,MSKPTR                                          1270
         L     @09,LINE(,@05)                                      1270
         LTR   @09,@09                                             1270
         BNZ   @RF01270                                            1270
*       MSKPTR=MSKPTR+4;            /* SKIP OVER IT                  */
         AL    @05,@CF00054                                        1271
         ST    @05,MSKPTR                                          1271
*     ELSE                                                         1272
*       DO;                         /* NO, NOT END OF LINE           */
         B     @RC01270                                            1272
@RF01270 DS    0H                                                  1273
*         DATAPTR=DATAPTR+WORKADD;  /* CALC ADDR OF FIELD            */
         L     @05,MSKPTR                                          1273
         L     @09,DATAPTR(,@05)                                   1273
         AL    @09,WORKADD                                         1273
         ST    @09,DATAPTR(,@05)                                   1273
*         MSKPTR=MSKPTR+12;         /* INCREMENT PTR                 */
         AL    @05,@CF00032                                        1274
         ST    @05,MSKPTR                                          1274
*       END;                                                       1275
*   END SPECPAT;                                                   1276
@RC01270 DS    0H                                                  1276
@DE01269 L     @05,MSKPTR                                          1276
         CLC   LINE(4,@05),@CF05752                                1276
         BNE   @DL01269                                            1276
*   MSKPTR=ADDR(WORKPTRN);          /* RESET MSKPTR                  */
         LA    @05,WORKPTRN                                        1277
         ST    @05,MSKPTR                                          1277
*   WORKCBA=DATAPTR;                /* MOVE CB BASE ADDR             */
         L     @09,DATAPTR(,@05)                                   1278
         ST    @09,WORKCBA                                         1278
*   DATAPTR=ADDR(WORKCBA);          /* TO ACCOMODATE FORMAT RTNE     */
         LA    @09,WORKCBA                                         1279
         ST    @09,DATAPTR(,@05)                                   1279
*   R0=MSKPTR;                                                     1280
         LR    R0,@05                                              1280
*   R15=PLSTFRA;                    /* GET ADDR OF FORMAT RTNE       */
         L     R15,PLSTFRA(,R1)                                    1281
*   CALL FORMAT;                    /* CALL FORMAT RTNE              */
         BALR  @14,@15                                             1282
*   IF R15^=0                       /* FORMAT ERROR?                 */
*     THEN                          /* YES                           */
         LTR   R15,R15                                             1283
         BZ    @RF01283                                            1283
*     ERSW=ON;                      /* INDICATE ERROR                */
         OI    ERSW,B'10000000'                                    1284
*   R15=PLSTPRNT;                   /* GET PRINT RTNE ADDR           */
@RF01283 L     R15,PLSTPRNT(,R1)                                   1285
*   CALL PRINT;                     /* PRINT LINE                    */
         BALR  @14,@15                                             1286
*   R15=PLSTPRNT;                                                  1287
         L     R15,PLSTPRNT(,R1)                                   1287
*   CALL PRINT;                     /* BLANK LINE                    */
         BALR  @14,@15                                             1288
*   IF ERSW^=ON                     /* DID ERROR OCCUR               */
*     THEN                          /* YES                           */
         TM    ERSW,B'10000000'                                    1289
         BO    @RF01289                                            1289
*     DO;                                                          1290
*       MSKPTR=MSKPTR+16;           /* INCREMENT PTR                 */
         LA    @05,16                                              1291
         AL    @05,MSKPTR                                          1291
         ST    @05,MSKPTR                                          1291
*       R0=MSKPTR;                  /* SET UP FOR FORMAT             */
         LR    R0,@05                                              1292
*FRMTLOOP:                                                         1293
*       DO WHILE(LINE^=-1);                                        1293
FRMTLOOP B     @DE01293                                            1293
@DL01293 DS    0H                                                  1294
*         IF LINE=0                 /* THIS END OF LINE              */
*           THEN                    /* YES                           */
         L     @05,MSKPTR                                          1294
         L     @05,LINE(,@05)                                      1294
         LTR   @05,@05                                             1294
         BNZ   @RF01294                                            1294
*           DO;                                                    1295
*             R15=PLSTFRA;          /* GET ADDR OF FORMAT RTNE       */
         L     R15,PLSTFRA(,R1)                                    1296
*             CALL FORMAT;          /* FORMAT AND                    */
         BALR  @14,@15                                             1297
*             IF R15^=ZERO          /* WAS THERE A FORMAT ERROR ?    */
*               THEN                                               1298
         LTR   R15,R15                                             1298
         BZ    @RF01298                                            1298
*               ERSW=ON;            /* YES-ERROR                     */
         OI    ERSW,B'10000000'                                    1299
*             R15=PLSTPRNT;         /* PRINT SPECIAL                 */
@RF01298 L     R15,PLSTPRNT(,R1)                                   1300
*             CALL PRINT;           /* PATTERNS                      */
         BALR  @14,@15                                             1301
*             MSKPTR=MSKPTR+4;      /* SKIP OVER E-O-L INDICATOR     */
         LA    @05,4                                               1302
         AL    @05,MSKPTR                                          1302
         ST    @05,MSKPTR                                          1302
*             R0=MSKPTR;            /* RESET R0 FOR FORMAT RTNE      */
         LR    R0,@05                                              1303
*           END;                                                   1304
*         ELSE                      /* NOT END OF LINE               */
*           MSKPTR=MSKPTR+12;       /* STEP TO NEXT FORMAT           */
         B     @RC01294                                            1305
@RF01294 LA    @05,12                                              1305
         AL    @05,MSKPTR                                          1305
         ST    @05,MSKPTR                                          1305
*       END FRMTLOOP;                                              1306
@RC01294 DS    0H                                                  1306
@DE01293 L     @05,MSKPTR                                          1306
         CLC   LINE(4,@05),@CF05752                                1306
         BNE   @DL01293                                            1306
*       R15=PLSTPRNT;                                              1307
         L     R15,PLSTPRNT(,R1)                                   1307
*       CALL PRINT;                 /* PRINT BLANK LINE              */
         BALR  @14,@15                                             1308
*       ENDFG=OFF;                  /* INITIALIZE ENDSW OFF          */
         NI    ENDFG,B'11101111'                                   1309
*       MSKPTR=ADDR(WORKPTRN);                                     1310
         LA    @05,WORKPTRN                                        1310
         ST    @05,MSKPTR                                          1310
*       PTRNADDR=ADDR(ONELINE);     /* SET PTRN FOR HEX PRINTOUT     */
         LA    @09,ONELINE                                         1311
         ST    @09,PTRNADDR                                        1311
*       WORKPTRN=PTRNADDR->PATTERN; /* MOVE IN PTRN                  */
         MVC   WORKPTRN(148),PATTERN(@09)                          1312
*       HEXPTR=WORKADD;             /* SET CB ADDR IN PATTERN        */
         L     @09,WORKADD                                         1313
         ST    @09,HEXPTR(,@05)                                    1313
*       LEGPTR=WORKADD;             /* SET DATAPTR FOR LEGEND        */
         ST    @09,LEGPTR                                          1314
*       R4=WORKLEN;                 /* SET CTR TO LENGTH OF CB       */
         L     R4,WORKLEN                                          1315
*       LABLPTR=ADDR(INDEXA);       /* SET INDEX PTR                 */
         LA    @09,INDEXA                                          1316
         ST    @09,LABLPTR(,@05)                                   1316
*       INDEX=0;                    /* INITIALIZE INDEX              */
         SLR   @05,@05                                             1317
         ST    @05,INDEX                                           1317
*RAFRMT2:                                                          1318
*       DO WHILE ENDFG=OFF;         /* PRINT WHOLE CB IN HEX         */
RAFRMT2  B     @DE01318                                            1318
@DL01318 DS    0H                                                  1319
*         IF R4<=32                 /* THIS THE LAST LINE            */
*           THEN                    /* YES                           */
         LA    @05,32                                              1319
         CR    R4,@05                                              1319
         BH    @RF01319                                            1319
*           DO;                                                    1320
*             ENDFG=ON;             /* TURN ON ENDSW                 */
         OI    ENDFG,B'00010000'                                   1321
*             IF R4^=32             /* IS IT A FULL LINE             */
*               THEN                /* NO                            */
         CR    R4,@05                                              1322
         BE    @RF01322                                            1322
*               DO;                 /* ROUND TO MULTIPLE OF 4        */
*                 R4=(R4+3)&'FFFFFFFC'X;                           1324
         LA    @05,3                                               1324
         ALR   @05,R4                                              1324
         N     @05,@CF05758                                        1324
         LR    R4,@05                                              1324
*                 FORMPTR=MSKPTR+(ADDR(ASTER1)-ADDR(ONELINE));     1325
         L     @05,MSKPTR                                          1325
         LA    @09,ASTER1                                          1325
         LA    @08,ONELINE                                         1325
         SLR   @09,@08                                             1325
         ALR   @09,@05                                             1325
         ST    @09,FORMPTR                                         1325
*                 BUFPTR=MSKPTR+R4+12;/* SET BUFPTR FOR MOVE         */
         LA    @08,12                                              1326
         ALR   @05,R4                                              1326
         ALR   @05,@08                                             1326
         ST    @05,BUFPTR                                          1326
*                 N=R4+8;           /* INIT LENGTH TO MOVE           */
         LA    @07,8                                               1327
         ALR   @07,R4                                              1327
         ST    @07,N                                               1327
*                 BUFPTR->X(1:N)=FORMPTR->X(1:N);                  1328
         LR    @06,@07                                             1328
         BCTR  @06,0                                               1328
         EX    @06,@SM05816                                        1328
*                 BUFPTR=BUFPTR+N;                                 1329
         ALR   @05,@07                                             1329
         ST    @05,BUFPTR                                          1329
*                 FORMPTR=ADDR(ASTER2);                            1330
         LA    @09,ASTER2                                          1330
         ST    @09,FORMPTR                                         1330
*                 N=12;             /* # BYTES FOR LAST ASTERISK     */
         ST    @08,N                                               1331
*                 BUFPTR->X(1:N)=FORMPTR->X(1:N);                  1332
         BCTR  @08,0                                               1332
         EX    @08,@SM05816                                        1332
*               END;                                               1333
*             ELSE                                                 1334
*               ;                   /* HERE, IF EXACT 1 LINE LEFT    */
@RF01322 DS    0H                                                  1335
*           END;                                                   1335
*         ELSE                                                     1336
*           R4=R4-32;               /* DECREMENT BYTE COUNT          */
         B     @RC01319                                            1336
@RF01319 SL    R4,@CF00692                                         1336
*         R15=PLSTFRA;              /* GET FORMAT RTNE ADDR          */
@RC01319 L     R15,PLSTFRA(,R1)                                    1337
*         R0=MSKPTR;                /* GET PATTERN ADDR              */
         L     R0,MSKPTR                                           1338
*         CALL FORMAT;              /* FORMAT ONE LINE               */
         BALR  @14,@15                                             1339
*         IF R15^=ZERO              /* WAS THERE A FORMAT ERROR ?    */
*           THEN                                                   1340
         LTR   R15,R15                                             1340
         BZ    @RF01340                                            1340
*           ERSW=ON;                /* YES-ERROR                     */
         OI    ERSW,B'10000000'                                    1341
*         ELSE                      /* NO ERROR                      */
*           DO;                     /* PRINT LINE                    */
         B     @RC01340                                            1342
@RF01340 DS    0H                                                  1343
*             R15=PLSTOBUF;         /* GET BUFPTR FOR TRANSLATE      */
         L     R15,PLSTOBUF(,R1)                                   1343
*             GEN(TR X'57'(32,R15),TRANTBL);/* TRANSLATE TO PRINTABLE
*                                      CHARACTERS                    */
         TR X'57'(32,R15),TRANTBL
*             R15=PLSTPRNT;         /* GET PRINT RTNE ADDR           */
         L     R15,PLSTPRNT(,R1)                                   1345
*             CALL PRINT;           /* PRINT ONE LINE                */
         BALR  @14,@15                                             1346
*           END;                    /* END PRINT OF LINE             */
*         LEGPTR=LEGPTR+32;         /* INCREMENT LEGEND PTR          */
@RC01340 LA    @05,32                                              1348
         L     @09,LEGPTR                                          1348
         ALR   @09,@05                                             1348
         ST    @09,LEGPTR                                          1348
*         HEXPTR=HEXPTR+32;         /* UPDATE PTR TO DATA            */
         L     @09,MSKPTR                                          1349
         L     @08,HEXPTR(,@09)                                    1349
         ALR   @08,@05                                             1349
         ST    @08,HEXPTR(,@09)                                    1349
*         INDEX=INDEX+32;           /* UPDATE INDEX                  */
         AL    @05,INDEX                                           1350
         ST    @05,INDEX                                           1350
*       END RAFRMT2;                                               1351
@DE01318 TM    ENDFG,B'00010000'                                   1351
         BZ    @DL01318                                            1351
*       R15=PLSTPRNT;               /* GET PRINT RTNE ADDR           */
         L     R15,PLSTPRNT(,R1)                                   1352
*       CALL PRINT;                 /* SKIP ONE LINE                 */
         BALR  @14,@15                                             1353
*       R15=PLSTPRNT;                                              1354
         L     R15,PLSTPRNT(,R1)                                   1354
*       CALL PRINT;                 /* SKIP ANOTHER                  */
         BALR  @14,@15                                             1355
*     END;                                                         1356
*   IF ERSW=ON                      /* WAS THERE A FORMAT ERROR      */
*     THEN                          /* YES- FORMAT ERROR             */
@RF01289 TM    ERSW,B'10000000'                                    1357
         BNO   @RF01357                                            1357
*     DO;                                                          1358
*       BUFFER=ERRMESS5;            /* SET UP BUFFER WITH MESSAGE    */
         L     @05,PLSTOBUF(,R1)                                   1359
         MVI   BUFFER+72(@05),C' '                                 1359
         MVC   BUFFER+73(47,@05),BUFFER+72(@05)                    1359
         MVC   BUFFER(72,@05),ERRMESS5                             1359
*       MESS5LBL=CBLABEL;           /* INDICATE WHICK CONTROL BLK    */
         MVC   MESS5LBL(8,@05),CBLABEL                             1360
*       CALL ERRMSG;                /* WRITE MESSAGE                 */
         BAL   @14,ERRMSG                                          1361
*     END;                                                         1362
*   R13=CLRSAV;                     /* RESTORE CALLERS SAVEARE PTR   */
@RF01357 L     R13,CLRSAV(,R13)                                    1363
*   RFY                                                            1364
*     R4 UNRSTD;                                                   1364
*   END RAFRMT;                                                    1365
@EL00005 DS    0H                                                  1365
@EF00005 DS    0H                                                  1365
@ER00005 LM    @14,@12,12(@13)                                     1365
         BR    @14                                                 1365
@PB00005 DS    0H                                                  1366
*   GEN(EJECT);                                                    1366
         EJECT
*NCBFRMT:                                                          1367
*   PROC OPTIONS(NOSAVEAREA);                                      1367
*                                                                  1367
         B     @PB00006                                            1367
NCBFRMT  STM   @14,@12,12(@13)                                     1367
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SEQMENT FORMATS AND PRINTS THE NCBS OFF OF THE RDT       */
*   /* ENTRIES                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1368
*   R15=ADDR(SAV2);                 /* SET UP SAVE AREA              */
         LA    R15,SAV2                                            1368
*   BACKPTR=R13;                                                   1369
         ST    R13,BACKPTR(,R15)                                   1369
*   R13=R15;                                                       1370
         LR    R13,R15                                             1370
*   RFY                                                            1371
*    (NCBPTR,                                                      1371
*     RDTEPTR) RSTD;                                               1371
*   RFY                                                            1372
*     ISTNCB BASED(NCBPTR);                                        1372
*   RFY                                                            1373
*     ISTRPRE BASED(RDTEPTR);                                      1373
*   DO;                             /* GETLOC LOC(RPRNCBA)ERRTN(NCBER
*                                      R)RET(NCBPTR,WORD)            */
*     R0=ADDR(RPRNCBA);             /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,RPRNCBA(,RDTEPTR)                                1375
*     R15=PLSTMARA;                 /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1376
*     CALL MAR;                     /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1377
*     IF R15^=0 THEN                /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             1378
         CR    R15,@09                                             1378
         BNE   @RT01378                                            1378
*       GOTO NCBERR;                /* YES - GO TO ERROR ROUTINE     */
*     ELSE                                                         1380
*       NCBPTR=WORD;                /* NO-PICK UP FIELD              */
         LR    @07,R0                                              1380
         L     NCBPTR,WORD(,@07)                                   1380
*   END;                            /* GET NCB POINTER FROM RDTE     */
*   IF NCBPTR=0 THEN                /* IS THERE AN NCB               */
         CR    NCBPTR,@09                                          1382
         BE    @RT01382                                            1382
*     GOTO NCBERR;                                                 1383
*                                                                  1383
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT & PRINT NCB OFF RDTE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1384
*   DO;                             /* GETLOC LOC(NCBLNGTH)ERRTN(NCBE
*                                      RR)RET(WORKLEN,BYTE)          */
*     R0=ADDR(NCBLNGTH);            /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,NCBLNGTH(,NCBPTR)                                1385
*     R15=PLSTMARA;                 /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1386
*     CALL MAR;                     /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1387
*     IF R15^=0 THEN                /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1388
         BNZ   @RT01388                                            1388
*       GOTO NCBERR;                /* YES - GO TO ERROR ROUTINE     */
*     ELSE                                                         1390
*       WORKLEN=BYTE;               /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1390
         SLR   @04,@04                                             1390
         IC    @04,BYTE(,@09)                                      1390
         ST    @04,WORKLEN                                         1390
*   END;                            /* GET NCB LENGTH                */
*   WORKLEN=WORKLEN*8;              /* MULT BY 8 TO GET TOTAL LENGTH
*                                                            @ZA31026*/
         SLA   @04,3                                               1392
         ST    @04,WORKLEN                                         1392
*   WORKADD=NCBPTR;                                                1393
         ST    NCBPTR,WORKADD                                      1393
*   PTRNADDR=ADDR(CBNCB);                                          1394
         LA    @09,CBNCB                                           1394
         ST    @09,PTRNADDR                                        1394
*   CBLABEL=LNCB;                                                  1395
         MVC   CBLABEL(8),@CC04965                                 1395
*   CALL RAFRMT;                                                   1396
         BAL   @14,RAFRMT                                          1396
*   GOTO NCBEND;                                                   1397
*                                                                  1397
         B     NCBEND                                              1397
*   /*****************************************************************/
*   /*                                                               */
*   /* NCB ERROR ROUTINE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1398
*NCBERR:                                                           1398
*   ;                                                              1398
NCBERR   DS    0H                                                  1399
*   BUFFER=NCBMSG;                                                 1399
         L     @09,PLSTOBUF(,R1)                                   1399
         MVI   BUFFER+26(@09),C' '                                 1399
         MVC   BUFFER+27(93,@09),BUFFER+26(@09)                    1399
         MVC   BUFFER(26,@09),NCBMSG                               1399
*   CALL ERRMSG;                                                   1400
         BAL   @14,ERRMSG                                          1400
*NCBEND:                                                           1401
*   R13=CLRSAV;                                                    1401
NCBEND   L     R13,CLRSAV(,R13)                                    1401
*   RFY                                                            1402
*    (NCBPTR,                                                      1402
*     RDTEPTR) UNRSTD;                                             1402
*   RFY                                                            1403
*     ISTRPRE BASED(RDTPTR);                                       1403
*   END;                            /* END NCB PROCESSING            */
@EL00006 DS    0H                                                  1404
@EF00006 DS    0H                                                  1404
@ER00006 LM    @14,@12,12(@13)                                     1404
         BR    @14                                                 1404
@PB00006 DS    0H                                                  1405
*   GEN(EJECT);                                                    1405
*                                                                  1405
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SCANS THE BUFFER POOL AREA FOR ACTIVE CRAS AND*/
*   /* PRINTS THE ACTIVE CRAS                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1406
*BUFSCAN:                                                          1406
*   PROC OPTIONS(NOSAVEAREA);                                      1406
         B     @PB00007                                            1406
BUFSCAN  STM   @14,@12,12(@13)                                     1406
*   R15=ADDR(SAV2);                 /* SET UP SAVE AREA              */
         LA    R15,SAV2                                            1407
*   BACKPTR=R13;                                                   1408
         ST    R13,BACKPTR(,R15)                                   1408
*   R13=R15;                                                       1409
         LR    R13,R15                                             1409
*   RFY                                                            1410
*    (BUFNUM,                                                      1410
*     IDFLAG,                                                      1410
*     CRAPTR) RSTD;                                                1410
*   FPAGES=BUFNUM/BUFPAG;           /* CALCULATE NUMBER OF FULL PAGES
*                                      IN AREA                       */
         L     @07,BUFPAG                                          1411
         LR    @08,BUFNUM                                          1411
         SRDA  @08,32                                              1411
         DR    @08,@07                                             1411
         ST    @09,FPAGES                                          1411
*   LPAGE=BUFNUM//BUFPAG;           /* CALCULATE NUMBER OF BUFFERS ON
*                                      LAST PAGE                     */
         LR    @08,BUFNUM                                          1412
         SRDA  @08,32                                              1412
         DR    @08,@07                                             1412
         ST    @08,LPAGE                                           1412
*   BUFPAGES=BUFPAG;                /* INITIALIZE # BUF AT FULL PAGE
*                                      VALUE                         */
         ST    @07,BUFPAGES                                        1413
*   DO I=0 TO FPAGES;               /* LOOP THRU PAGES               */
         SLR   @07,@07                                             1414
         B     @DE01414                                            1414
@DL01414 DS    0H                                                  1415
*     IF I=FPAGES THEN              /* IS THIS THE LAST PAGE TO BE 1415
*                                      SCANNED ?                     */
         C     @07,FPAGES                                          1415
         BNE   @RF01415                                            1415
*       BUFPAGES=LPAGE;             /* SET # BUFS AT LAST PAGE VALUE */
         L     @07,LPAGE                                           1416
         ST    @07,BUFPAGES                                        1416
*     RFY                                                          1417
*       ISTBFPFX BASED(CRAPTR);                                    1417
@RF01415 DS    0H                                                  1418
*     PGBDY=CRAPTR;                 /* SAVE PTR TO 1ST CRA ON PAGE   */
         ST    CRAPTR,PGBDY                                        1418
*     DO J=1 TO BUFPAGES;           /* LOOP THRU BUFFERS ON PAGE     */
         LA    @07,1                                               1419
         B     @DE01419                                            1419
@DL01419 DS    0H                                                  1420
*       DO;                         /* GETLOC LOC(ISTBFPFX)ERRTN(SCAN
*                                      ERR)RET(IDFLAG,BYTE)          */
*         R0=ADDR(ISTBFPFX);        /* PICK UP @ OF AREA FOR MAR     */
         LR    R0,CRAPTR                                           1421
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1422
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1423
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1424
         BNZ   @RT01424                                            1424
*           GOTO SCANERR;           /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     1426
*           IDFLAG=BYTE;            /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1426
         SLR   IDFLAG,IDFLAG                                       1426
         IC    IDFLAG,BYTE(,@09)                                   1426
*       END;                        /* GET IDFLAG FROM BUFFER        */
*       IF IDFLAG=ACTCRA THEN       /* IS IT AN ALLOCATED CRA ?      */
         C     IDFLAG,@CF04891                                     1428
         BNE   @RF01428                                            1428
*         DO;                       /* YES                           */
*           CRAPTR=CRAPTR+8;        /* INCREMENT PASSED SMS HEADER   */
         AL    CRAPTR,@CF00060                                     1430
*           CALL QSEARCH2;          /* IS THIS CRA IN USE            */
         BAL   @14,QSEARCH2                                        1431
*           IF R15=0 THEN           /* IS CRA IN USE                 */
         LTR   R15,R15                                             1432
         BNZ   @RF01432                                            1432
*             DO;                   /* YES                           */
*                                                                  1433
*               /*****************************************************/
*               /*                                                   */
*               /* PRINT CRA                                         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1434
*               WORKADD=CRAPTR;                                    1434
         ST    CRAPTR,WORKADD                                      1434
*               WORKLEN=LENGTH(ISTCRA);                            1435
         MVC   WORKLEN(4),@CF05801                                 1435
*               PTRNADDR=ADDR(CBCRA);                              1436
         LA    @07,CBCRA                                           1436
         ST    @07,PTRNADDR                                        1436
*               CBLABEL=LCRA;                                      1437
         MVC   CBLABEL(8),@CC05045                                 1437
*               CALL RAFRMT;                                       1438
         BAL   @14,RAFRMT                                          1438
*             END;                                                 1439
*           CRAPTR=CRAPTR-8;        /* DECREMENT TO BEGINNING OF   1440
*                                      BUFFER                        */
@RF01432 SL    CRAPTR,@CF00060                                     1440
*         END;                      /* END ALLOCATED CRA             */
*       CRAPTR=CRAPTR+BUFSIZ;       /* INCREMENT TO NEXT CRA ON PAGE */
@RF01428 AL    CRAPTR,BUFSIZ                                       1442
*     END;                          /* END PAGE OF CRAS              */
         LA    @07,1                                               1443
         AH    @07,J                                               1443
@DE01419 STH   @07,J                                               1443
         C     @07,BUFPAGES                                        1443
         BNH   @DL01419                                            1443
*     CRAPTR=PGBDY+PAGESIZ;         /* INCREMENT TO NEXT PAGE        */
         L     CRAPTR,@CF04896                                     1444
         AL    CRAPTR,PGBDY                                        1444
*   END;                            /* END LOOPING THRU PAGES        */
         LA    @07,1                                               1445
         AH    @07,I                                               1445
@DE01414 STH   @07,I                                               1445
         C     @07,FPAGES                                          1445
         BNH   @DL01414                                            1445
*   GOTO SCANEND;                                                  1446
*                                                                  1446
         B     SCANEND                                             1446
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN ERROR                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1447
*SCANERR:                                                          1447
*   ;                                                              1447
SCANERR  DS    0H                                                  1448
*   BUFFER=CRAMSG;                                                 1448
         L     @07,PLSTOBUF(,R1)                                   1448
         MVI   BUFFER+33(@07),C' '                                 1448
         MVC   BUFFER+34(86,@07),BUFFER+33(@07)                    1448
         MVC   BUFFER(33,@07),CRAMSG                               1448
*   CALL ERRMSG;                                                   1449
         BAL   @14,ERRMSG                                          1449
*   RFY                                                            1450
*    (BUFNUM,                                                      1450
*     IDFLAG,                                                      1450
*     CRAPTR) UNRSTD;                                              1450
*SCANEND:                                                          1451
*   R13=CLRSAV;                     /* END BUFSCAN                   */
SCANEND  L     R13,CLRSAV(,R13)                                    1451
*   END BUFSCAN;                                                   1452
@EL00007 DS    0H                                                  1452
@EF00007 DS    0H                                                  1452
@ER00007 LM    @14,@12,12(@13)                                     1452
         BR    @14                                                 1452
@PB00007 DS    0H                                                  1453
*   GEN(EJECT);                                                    1453
*                                                                  1453
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES THE PRE-ALLOCATED CRA QUEUES TO      */
*   /* DETERMINE IF THE ALLOCATED CRA IS CURRENTLY IN USE            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1454
*QSEARCH2:                                                         1454
*   PROC OPTIONS(NOSAVEAREA);                                      1454
         B     @PB00008                                            1454
QSEARCH2 STM   @14,@12,12(@13)                                     1454
*   R15=ADDR(SAV3);                 /* SET UP SAVE AREA              */
         LA    R15,SAV3                                            1455
*   BACKPTR=R13;                                                   1456
         ST    R13,BACKPTR(,R15)                                   1456
*   R13=R15;                                                       1457
         LR    R13,R15                                             1457
*   RFY                                                            1458
*     ISTCRA BASED(CRAQ);                                          1458
*   RFY                                                            1459
*     ISTMPLT BASED(MPLTPTR);                                      1459
*   RFY                                                            1460
*     ISTMPST BASED(MPSTPTR);                                      1460
*   RFY                                                            1461
*     ISTDCE BASED(DCEPTR);                                        1461
*   RFY                                                            1462
*     ISTACDEB BASED(DEBPTR);                                      1462
*   RFY                                                            1463
*     ISTPST BASED(PSTPTR);                                        1463
*   RFY                                                            1464
*    (CRAQ,                                                        1464
*     SMSCRA,                                                      1464
*     DEBPTR,                                                      1464
*     PSTPTR,                                                      1464
*     CRAPTR) RSTD;                                                1464
*   RC=0;                           /* INITIALIZE TO CRA IN USE      */
         L     @09,CLRSAV(,R13)                                    1465
         SLR   @08,@08                                             1465
         ST    @08,RC+16(,@09)                                     1465
*   DO;                             /* GETLOC LOC(ATCCRAQ)ERRTN(ERR1)
*                                      RET(CRAQ,WORD)                */
*     R0=ADDR(ATCCRAQ);             /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCCRAQ(,ATCVTPTR)                               1467
*     R15=PLSTMARA;                 /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1468
*     CALL MAR;                     /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1469
*     IF R15^=0 THEN                /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1470
         BNZ   @RT01470                                            1470
*       GOTO ERR1;                  /* YES - GO TO ERROR ROUTINE     */
*     ELSE                                                         1472
*       CRAQ=WORD;                  /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1472
         L     CRAQ,WORD(,@09)                                     1472
*   END;                            /* GET 1ST CRA FROM ATCVT QUEUE  */
*   DO WHILE CRAQ^=0;               /* LOOP THRU CRA QUEUE           */
         B     @DE01474                                            1474
@DL01474 DS    0H                                                  1475
*     IF CRAPTR=CRAQ THEN           /* IS CRA ON QUEUE ?             */
         CR    CRAPTR,CRAQ                                         1475
         BNE   @RF01475                                            1475
*       DO;                         /* YES                           */
*         RC=4;                     /* INDICATE CRA NOT IN USE       */
         L     @09,CLRSAV(,R13)                                    1477
         MVC   RC+16(4,@09),@CF00054                               1477
*         R13=CLRSAV;               /* RESTORE CALLLERS SAVEAREA   1478
*                                      POINTER                       */
         LR    R13,@09                                             1478
*         RETURN;                                                  1479
@EL00008 DS    0H                                                  1479
@EF00008 DS    0H                                                  1479
@ER00008 LM    @14,@12,12(@13)                                     1479
         BR    @14                                                 1479
*       END;                                                       1480
*     DO;                           /* GETLOC LOC(CRACHAIN)ERRTN(ERR1
*                                      )RET(CRAQ,WORD)               */
@RF01475 DS    0H                                                  1482
*       R0=ADDR(CRACHAIN);          /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,CRACHAIN(,CRAQ)                                  1482
*       R15=PLSTMARA;               /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1483
*       CALL MAR;                   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1484
*       IF R15^=0 THEN              /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1485
         BNZ   @RT01485                                            1485
*         GOTO ERR1;                /* YES - GO TO ERROR ROUTINE     */
*       ELSE                                                       1487
*         CRAQ=WORD;                /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1487
         L     CRAQ,WORD(,@09)                                     1487
*     END;                          /* GET NEXT CRA ON QUEUE         */
*   END;                            /* END LOOPING THRU CRA QUEUE    */
@DE01474 LTR   CRAQ,CRAQ                                           1489
         BNZ   @DL01474                                            1489
*ERR1:                                                             1490
*   ;                                                              1490
ERR1     DS    0H                                                  1491
*   DO;                             /* GETLOC LOC(ATCMPLTA)ERRTN(QEND
*                                      )RET(MPLTPTR,WORD)            */
*     R0=ADDR(ATCMPLTA);            /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ATCMPLTA(,ATCVTPTR)                              1492
*     R15=PLSTMARA;                 /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1493
*     CALL MAR;                     /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1494
*     IF R15^=0 THEN                /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1495
         BNZ   @RT01495                                            1495
*       GOTO QEND;                  /* YES - GO TO ERROR ROUTINE     */
*     ELSE                                                         1497
*       MPLTPTR=WORD;               /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1497
         L     @09,WORD(,@09)                                      1497
         ST    @09,MPLTPTR                                         1497
*   END;                            /* GET MPLT POINTER FROM ATCVT   */
*   DO WHILE MPLTPTR^=0;            /* LOOP THRU MPLT QUEUE          */
         B     @DE01499                                            1499
@DL01499 DS    0H                                                  1500
*     DO;                           /* GETLOC LOC(MPLECNT)ERRTN(QEND)
*                                      RET(MPSTCNT,HWRD)             */
*       R0=ADDR(MPLECNT);           /* PICK UP @ OF AREA FOR MAR     */
         L     @09,MPLTPTR                                         1501
         LA    R0,MPLECNT(,@09)                                    1501
*       R15=PLSTMARA;               /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1502
*       CALL MAR;                   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1503
*       IF R15^=0 THEN              /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1504
         BNZ   @RT01504                                            1504
*         GOTO QEND;                /* YES - GO TO ERROR ROUTINE     */
*       ELSE                                                       1506
*         MPSTCNT=HWRD;             /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1506
         LH    @09,HWRD(,@09)                                      1506
         STH   @09,MPSTCNT                                         1506
*     END;                          /* GET MPST COUNT FROM MPLT      */
*     DO K=1 TO MPSTCNT;            /* LOOP THRU MPSTS               */
         LA    @09,1                                               1508
         B     @DE01508                                            1508
@DL01508 DS    0H                                                  1509
*       DO;                         /* GETLOC LOC(MPLCDS(K))ERRTN(QEN
*                                      D)RET(MPSTPTR,WORD)           */
*         R0=ADDR(MPLCDS(K));       /* PICK UP @ OF AREA FOR MAR     */
         SLA   @09,3                                               1510
         L     @08,MPLTPTR                                         1510
         LA    R0,MPLCDS-8(@09,@08)                                1510
*         R15=PLSTMARA;             /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1511
*         CALL MAR;                 /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1512
*         IF R15^=0 THEN            /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             1513
         CR    R15,@09                                             1513
         BNE   @RT01513                                            1513
*           GOTO QEND;              /* YES - GO TO ERROR ROUTINE     */
*         ELSE                                                     1515
*           MPSTPTR=WORD;           /* NO-PICK UP FIELD              */
         LR    @08,R0                                              1515
         L     @08,WORD(,@08)                                      1515
         ST    @08,MPSTPTR                                         1515
*       END;                        /* GET MPST POINTER              */
*       IF MPSTPTR=0 THEN                                          1517
         CR    @08,@09                                             1517
         BE    @RT01517                                            1517
*         ;                         /* NO MPST HERE - GO TO NEXT SLOT*/
*       ELSE                                                       1519
*         DO;                       /* MPST HERE                     */
*           DO;                     /* GETLOC LOC(MPSSMRPH)ERRTN(QEND
*                                      2)RET(SMSCRA,WORD)            */
*             R0=ADDR(MPSSMRPH);    /* PICK UP @ OF AREA FOR MAR     */
         L     @09,MPSTPTR                                         1521
         LA    R0,MPSSMRPH(,@09)                                   1521
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1522
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1523
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1524
         BNZ   @RT01524                                            1524
*               GOTO QEND2;         /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 1526
*               SMSCRA=WORD;        /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1526
         L     SMSCRA,WORD(,@09)                                   1526
*           END;                    /* GET SMS'S CRA FROM MPST       */
*           SMSCRA=SMSCRA-RPHOFFST; /* BACK UP TO BEGINNING OF CRA   */
         SH    SMSCRA,RPHOFFST                                     1528
*           IF SMSCRA=CRAPTR THEN   /* IS CRA SMS'S CRA ?            */
         CR    SMSCRA,CRAPTR                                       1529
         BNE   @RF01529                                            1529
*             DO;                   /* YES                           */
*               DO;                 /* GETLOC LOC(MPSFLGA)ERRTN(QEND2
*                                      )RET(R0,BYTE)                 */
*                 R0=ADDR(MPSFLGA); /* PICK UP @ OF AREA FOR MAR     */
         L     @09,MPSTPTR                                         1532
         LA    R0,MPSFLGA(,@09)                                    1532
*                 R15=PLSTMARA;     /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1533
*                 CALL MAR;         /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1534
*                 IF R15^=0 THEN    /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             1535
         CR    R15,@09                                             1535
         BNE   @RT01535                                            1535
*                   GOTO QEND2;     /* YES - GO TO ERROR ROUTINE     */
*                 ELSE                                             1537
*                   R0=BYTE;        /* NO-PICK UP FIELD              */
         LR    @08,R0                                              1537
         SLR   @09,@09                                             1537
         IC    @09,BYTE(,@08)                                      1537
         LR    R0,@09                                              1537
*               END;                                               1538
*               IF(R0&USEFLAG1)^=0  /* IS CRA NOW IN USE             */
*                 THEN                                             1539
         SLR   @09,@09                                             1539
         LR    @08,R0                                              1539
         N     @08,@CF04886                                        1539
         CR    @08,@09                                             1539
         BNE   @RT01539                                            1539
*                 ;                 /* YES - CRA IS IN USE           */
*               ELSE                                               1541
*                 RC=4;             /* INDICATE CRA NOT IN USE       */
         L     @09,CLRSAV(,R13)                                    1541
         MVC   RC+16(4,@09),@CF00054                               1541
*               R13=CLRSAV;         /* RESTORE CALLERS SAVEAREA    1542
*                                      POINTER                       */
@RT01539 L     R13,CLRSAV(,R13)                                    1542
*               RETURN;                                            1543
         B     @EL00008                                            1543
*             END;                                                 1544
*           DO;                     /* GETLOC LOC(MPSDBTBL)ERRTN(QEND
*                                      2)RET(DCEPTR,WORD)            */
@RF01529 DS    0H                                                  1546
*             R0=ADDR(MPSDBTBL);    /* PICK UP @ OF AREA FOR MAR     */
         L     @09,MPSTPTR                                         1546
         LA    R0,MPSDBTBL(,@09)                                   1546
*             R15=PLSTMARA;         /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1547
*             CALL MAR;             /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1548
*             IF R15^=0 THEN        /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1549
         BNZ   @RT01549                                            1549
*               GOTO QEND2;         /* YES - GO TO ERROR ROUTINE     */
*             ELSE                                                 1551
*               DCEPTR=WORD;        /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1551
         L     @09,WORD(,@09)                                      1551
         ST    @09,DCEPTR                                          1551
*           END;                    /* GET DCE PTR FROM MPST         */
*           DO WHILE DCEPTR^=0;     /* LOOP THRU DCE CHAIN           */
         B     @DE01553                                            1553
@DL01553 DS    0H                                                  1554
*             DO;                   /* GETLOC LOC(DCEDBPTR)ERRTN(QEND
*                                      2)RET(DEBPTR,WORD)            */
*               R0=ADDR(DCEDBPTR);  /* PICK UP @ OF AREA FOR MAR     */
         L     R0,DCEPTR                                           1555
*               R15=PLSTMARA;       /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1556
*               CALL MAR;           /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1557
*               IF R15^=0 THEN      /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1558
         BNZ   @RT01558                                            1558
*                 GOTO QEND2;       /* YES - GO TO ERROR ROUTINE     */
*               ELSE                                               1560
*                 DEBPTR=WORD;      /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1560
         L     DEBPTR,WORD(,@09)                                   1560
*             END;                  /* GET DEB POINTER FROM DCE      */
*             DO;                   /* GETLOC LOC(ACDTSKID)ERRTN(QEND
*                                      3)RET(PSTPTR,WORD)            */
*               R0=ADDR(ACDTSKID);  /* PICK UP @ OF AREA FOR MAR     */
         LA    R0,ACDTSKID(,DEBPTR)                                1563
*               R15=PLSTMARA;       /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1564
*               CALL MAR;           /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1565
*               IF R15^=0 THEN      /* DID MAR ENCOUNTER AN ERROR    */
         SLR   @09,@09                                             1566
         CR    R15,@09                                             1566
         BNE   @RT01566                                            1566
*                 GOTO QEND3;       /* YES - GO TO ERROR ROUTINE     */
*               ELSE                                               1568
*                 PSTPTR=WORD;      /* NO-PICK UP FIELD              */
         LR    @08,R0                                              1568
         L     PSTPTR,WORD(,@08)                                   1568
*             END;                  /* GET PST PTR FROM DEB          */
*             IF PSTPTR=0 THEN                                     1570
         CR    PSTPTR,@09                                          1570
         BE    @RT01570                                            1570
*               ;                   /* NO PST - GO TO NEXT DEB       */
*             ELSE                                                 1572
*               DO;                                                1572
*                 DO;               /* GETLOC LOC(PSTCRRS)ERRTN(QEND3
*                                      )RET(SMSCRA,WORD)             */
*                   R0=ADDR(PSTCRRS);/* PICK UP @ OF AREA FOR MAR    */
         LA    R0,PSTCRRS(,PSTPTR)                                 1574
*                   R15=PLSTMARA;   /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1575
*                   CALL MAR;       /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1576
*                   IF R15^=0 THEN  /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1577
         BNZ   @RT01577                                            1577
*                     GOTO QEND3;   /* YES - GO TO ERROR ROUTINE     */
*                   ELSE                                           1579
*                     SMSCRA=WORD;  /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1579
         L     SMSCRA,WORD(,@09)                                   1579
*                 END;              /* GET SMS'S CRA FROM PST        */
*                 IF SMSCRA=CRAPTR THEN/* IS CRA SMS'S CRA           */
         CR    SMSCRA,CRAPTR                                       1581
         BNE   @RF01581                                            1581
*                   DO;             /* YES                           */
*                     DO;           /* GETLOC LOC(PSTFLGA)ERRTN(QEND3
*                                      )RET(R0,BYTE)                 */
*                       R0=ADDR(PSTFLGA);/* PICK UP @ OF AREA FOR MAR*/
         LA    R0,PSTFLGA(,PSTPTR)                                 1584
*                       R15=PLSTMARA;/* GET MAR ADDRESS              */
         L     R15,PLSTMARA(,R1)                                   1585
*                       CALL MAR;   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1586
*                       IF R15^=0 THEN/* DID MAR ENCOUNTER AN ERROR  */
         SLR   @09,@09                                             1587
         CR    R15,@09                                             1587
         BNE   @RT01587                                            1587
*                         GOTO QEND3;/* YES - GO TO ERROR ROUTINE    */
*                       ELSE                                       1589
*                         R0=BYTE;  /* NO-PICK UP FIELD              */
         LR    @08,R0                                              1589
         SLR   @09,@09                                             1589
         IC    @09,BYTE(,@08)                                      1589
         LR    R0,@09                                              1589
*                     END;          /* GET CRA IN USE FLAGS          */
*                     IF(R0&USEFLAG2)^=0/* IS CRA CURRENTLY IN USE   */
*                       THEN                                       1591
         SLR   @09,@09                                             1591
         LR    @08,R0                                              1591
         N     @08,@CF04888                                        1591
         CR    @08,@09                                             1591
         BNE   @RT01591                                            1591
*                       ;           /* YES - CRA IS IN USE           */
*                     ELSE                                         1593
*                       RC=4;       /* INDICATE CRA NOT IN USE       */
         L     @09,CLRSAV(,R13)                                    1593
         MVC   RC+16(4,@09),@CF00054                               1593
*                     R13=CLRSAV;   /* RESTORE CALLERS SAVEAREA    1594
*                                      POINTER                       */
@RT01591 L     R13,CLRSAV(,R13)                                    1594
*                     RETURN;                                      1595
         B     @EL00008                                            1595
*                   END;                                           1596
*               END;                /* END PST OFF OF DEB            */
@RF01581 DS    0H                                                  1598
*QEND3:                                                            1598
*             ;                                                    1598
@RT01570 DS    0H                                                  1598
QEND3    DS    0H                                                  1599
*             DO;                   /* GETLOC LOC(DCECHN)ERRTN(QEND2)
*                                      RET(DCEPTR,WORD)              */
*               R0=ADDR(DCECHN);    /* PICK UP @ OF AREA FOR MAR     */
         L     @09,DCEPTR                                          1600
         LA    R0,DCECHN(,@09)                                     1600
*               R15=PLSTMARA;       /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1601
*               CALL MAR;           /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1602
*               IF R15^=0 THEN      /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1603
         BNZ   @RT01603                                            1603
*                 GOTO QEND2;       /* YES - GO TO ERROR ROUTINE     */
*               ELSE                                               1605
*                 DCEPTR=WORD;      /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1605
         L     @09,WORD(,@09)                                      1605
         ST    @09,DCEPTR                                          1605
*             END;                  /* GET NEXT DCE ON CHAIN         */
*           END;                    /* END LOOPING THRU DCE CHAIN    */
@DE01553 L     @09,DCEPTR                                          1607
         LTR   @09,@09                                             1607
         BNZ   @DL01553                                            1607
*QEND2:                                                            1608
*           ;                                                      1608
QEND2    DS    0H                                                  1609
*         END;                      /* END MPST ON MPLT              */
*     END;                          /* END LOOPING THRU MPSTS        */
@RT01517 LA    @09,1                                               1610
         AH    @09,K                                               1610
@DE01508 STH   @09,K                                               1610
         CH    @09,MPSTCNT                                         1610
         BNH   @DL01508                                            1610
*     DO;                           /* GETLOC LOC(MPLCHN)ERRTN(QEND)R
*                                      ET(MPLTPTR,WORD)              */
*       R0=ADDR(MPLCHN);            /* PICK UP @ OF AREA FOR MAR     */
         L     R0,MPLTPTR                                          1612
*       R15=PLSTMARA;               /* GET MAR ADDRESS               */
         L     R15,PLSTMARA(,R1)                                   1613
*       CALL MAR;                   /* GET DUMPED ADDRESS            */
         BALR  @14,@15                                             1614
*       IF R15^=0 THEN              /* DID MAR ENCOUNTER AN ERROR    */
         LTR   R15,R15                                             1615
         BNZ   @RT01615                                            1615
*         GOTO QEND;                /* YES - GO TO ERROR ROUTINE     */
*       ELSE                                                       1617
*         MPLTPTR=WORD;             /* NO-PICK UP FIELD              */
         LR    @09,R0                                              1617
         L     @09,WORD(,@09)                                      1617
         ST    @09,MPLTPTR                                         1617
*     END;                          /* GET NEXT MPLT ON CHAIN        */
*   END;                                                           1619
@DE01499 L     @09,MPLTPTR                                         1619
         LTR   @09,@09                                             1619
         BNZ   @DL01499                                            1619
*   RFY                                                            1620
*    (PSTPTR,                                                      1620
*     CRAQ,                                                        1620
*     SMSCRA,                                                      1620
*     DEBPTR,                                                      1620
*     CRAPTR) UNRSTD;                                              1620
*QEND:                                                             1621
*   R13=CLRSAV;                                                    1621
QEND     L     R13,CLRSAV(,R13)                                    1621
*   END QSEARCH2;                                                  1622
         B     @EL00008                                            1622
@PB00008 DS    0H                                                  1623
*   GEN(EJECT);                                                    1623
*                                                                  1623
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL LOCATE THE ACDEB FOR VS2. IT WILL BE PASSED */
*   /* BACK IN ACDEBPTR (REG3).                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1624
*ADDRDEB2:                                                         1624
*   PROC OPTIONS(NOSAVEAREA);                                      1624
         B     @PB00009                                            1624
ADDRDEB2 STM   @14,@12,12(@13)                                     1624
*   ACDEBPTR=ZERO;                  /* SET INITIALLY TO NO DEB FOUND */
         SLR   ACDEBPTR,ACDEBPTR                                   1625
*   RFY                                                            1626
*     ISTDCE BASED(DCEPTR);                                        1626
*                                                                  1626
*/*  CHAIN THROUGH THE DCE CHAIN LOOKING FOR A DEB WITH A TCB ADDRESS
*    WHICH MATCHES THE TCB ADDRESS PASSED IN THE PARAMETER LIST      */
*                                                                  1627
*   DO WHILE ACDEBPTR=ZERO&DCEPTR^=0;                              1627
         B     @DE01627                                            1627
@DL01627 DS    0H                                                  1628
*     ACDEBPTR=DCEDBPTR;            /* GET ADDRESS OF DEB            */
         L     @09,DCEPTR                                          1628
         L     ACDEBPTR,DCEDBPTR(,@09)                             1628
*     IF ACDEBPTR->ACDTCBAD=PLSTATCB THEN                          1629
         CLC   ACDTCBAD(4,ACDEBPTR),PLSTATCB(R1)                   1629
         BE    @RT01629                                            1629
*       ;                                                          1630
*     ELSE                                                         1631
*       DO;                         /* NO-NOT THE DEB WE WANT        */
*         DCEPTR=DCECHN;            /* GET NEXT DCE                  */
         L     @09,DCEPTR                                          1632
         L     @09,DCECHN(,@09)                                    1632
         ST    @09,DCEPTR                                          1632
*         ACDEBPTR=ZERO;            /* CONTINUE LOOP                 */
         SLR   ACDEBPTR,ACDEBPTR                                   1633
*       END;                                                       1634
*   END;                            /* END-DO WHILE                  */
@RT01629 DS    0H                                                  1635
@DE01627 SLR   @09,@09                                             1635
         CR    ACDEBPTR,@09                                        1635
         BNE   @DC01627                                            1635
         C     @09,DCEPTR                                          1635
         BNE   @DL01627                                            1635
@DC01627 DS    0H                                                  1636
*   REG3=ACDEBPTR;                  /* SET ACDEBPTR IN REG3 SLOT OF
*                                      SAVEAREA                      */
         ST    ACDEBPTR,REG3(,R13)                                 1636
*   END ADDRDEB2;                                                  1637
*                                                                  1637
@EL00009 DS    0H                                                  1637
@EF00009 DS    0H                                                  1637
@ER00009 LM    @14,@12,12(@13)                                     1637
         BR    @14                                                 1637
@PB00009 DS    0H                                                  1638
*/* TPEPILOG                                                         */
*                                                                  1638
*   GEN(PRINT OFF);                                                1638
         PRINT OFF
*   GEN(PRINT ON);                                                 1639
*                                                                  1639
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1640
*   END ISTRAFD1                                                   1640
*                                                                  1640
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (ISTRAFD1)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSUT5  (ISTRAFDA)                                       */
*/*%INCLUDE SYSUT5  (FMTDEB  )                                       */
*/*%INCLUDE SYSUT5  (FMTRDTA )                                       */
*/*%INCLUDE SYSUT5  (FMTFMCB )                                       */
*/*%INCLUDE SYSUT5  (GETCRA  )                                       */
*/*%INCLUDE SYSUT5  (ISTRAFDB)                                       */
*/*%INCLUDE SYSUT5  (FRMTRDTB)                                       */
*/*%INCLUDE SYSUT5  (RDT1    )                                       */
*/*%INCLUDE SYSUT5  (RDT2    )                                       */
*/*%INCLUDE SYSUT5  (FRMTVS2 )                                       */
*/*%INCLUDE SYSUT5  (FRMTSMS )                                       */
*/*%INCLUDE SYSUT5  (BPCBFRMT)                                       */
*/*%INCLUDE SYSUT5  (CRAFRMT )                                       */
*/*%INCLUDE SYSUT5  (ERRMSG  )                                       */
*/*%INCLUDE SYSUT5  (RAFRMT  )                                       */
*/*%INCLUDE SYSUT5  (NCBFRMT )                                       */
*/*%INCLUDE SYSUT5  (BUFSCAN )                                       */
*/*%INCLUDE SYSUT5  (QSEARCH )                                       */
*/*%INCLUDE SYSUT5  (ADDRDEB2)                                       */
*                                                                  1640
*       ;                                                          1640
         B     @EL00001                                            1640
@DATA    DS    0H
@SM05816 MVC   X(0,@05),X(@09)
@DATD    DSECT
         DS    0F
@TF00001 DS    F
ISTRAFD1 CSECT
         DS    0F
@CF00054 DC    F'4'
@CF00909 DC    F'7'
@CF00060 DC    F'8'
@CF00032 DC    F'12'
@CF01005 DC    F'16'
@CF00071 DC    F'24'
@CF00692 DC    F'32'
@CF05242 DC    F'112'
@CF05134 DC    F'136'
@CF05807 DC    F'176'
@CF05799 DC    F'208'
@CF05804 DC    F'216'
@CF05800 DC    F'280'
@CF05805 DC    F'336'
@CF05801 DC    F'932'
@CF05803 DC    F'1374'
@CF05802 DC    F'1584'
@CF04896 DC    F'4096'
@CF05752 DC    F'-1'
@CF04886 DC    XL4'000000C0'
@CF04888 DC    XL4'0000000C'
@CF05758 DC    XL4'FFFFFFFC'
@CF02326 DC    XL4'02'
@CF04891 DC    XL4'97'
@DATD    DSECT
         DS    0D
ASCBPTR  DS    A
ASXBPTR  DS    A
SRBPTR   DS    A
BUFSIZ   DS    F
BUFPAG   DS    F
BUFPAGES DS    F
FPAGES   DS    F
LPAGE    DS    F
PGBDY    DS    F
MPLTPTR  DS    A
MPSTPTR  DS    A
MSKPTR   DS    A
BUFPTR   DS    A
FORMPTR  DS    A
N        DS    F
SAVELEN  DS    F
PTRNADDR DS    A
DCEPTR   DS    A
I        DS    H
J        DS    H
K        DS    H
MPSTCNT  DS    H
         DS    CL1
ADRAPC61 DS    AL3
CRAFLAG  DS    BL1
BPCBID   DS    CL4
         DS    CL3
WORKAREA DS    CL164
         ORG   WORKAREA
WORKADD  DS    AL4
WORKLEN  DS    FL4
WORKPTRN DS    CL148
         ORG   WORKPTRN
@NM00114 DS    CL52
LEGPTR   DS    AL4
@NM00115 DS    CL88
         ORG   WORKAREA+156
WORKCBA  DS    AL4
INDEX    DS    FL4
         ORG   INDEX
@NM00116 DS    CL1
INDEXA   DS    AL3
         ORG   WORKAREA+164
CBLABEL  DS    CL8
SAV1     DS    CL72
SAV2     DS    CL72
SAV3     DS    CL72
SAV4     DS    CL72
SAV5     DS    CL72
SAV6     DS    CL72
SAVEPASS DS    CL8
SWITCHES DS    CL1
         ORG   SWITCHES
ERSW     DS    BL1
HITSW    EQU   SWITCHES+0
FORSW    EQU   SWITCHES+0
ENDFG    EQU   SWITCHES+0
         ORG   SWITCHES+1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTRAFD1 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
RPHOFFST DC    AL2(CRARPH-CRABASIC)
@CC04945 DC    C'ACDEB   '
@CC04947 DC    C'ACDTCBAD'
@CC04949 DC    C'ACDDEBAD'
@CC04951 DC    C'ACDRDTE '
@CC04953 DC    C'ACDFMCB '
@CC04955 DC    C'ATCVT   '
@CC04957 DC    C'ATCRDT  '
@CC04959 DC    C'QAB     '
@CC04961 DC    C'RDTE    '
@CC04963 DC    C'BPD     '
@CC04965 DC    C'NCB     '
@CC04967 DC    C'BPCB    '
@CC04969 DC    C'BPCBRPHA'
@CC04971 DC    C'BPCBRPHB'
@CC04973 DC    C'BPCBFBA '
@CC04975 DC    C'BPCBAVNO'
@CC04977 DC    C'PST     '
@CC04979 DC    C'ATCSRT  '
@CC04981 DC    C'ATCFSB  '
@CC04983 DC    C'ATCCONFT'
@CC04985 DC    C'ATCBPDA '
@CC04987 DC    C'ATCMNT  '
@CC04989 DC    C'ATCACTRM'
@CC04991 DC    C'ATCDVT  '
@CC04993 DC    C'ATCEPT  '
@CC04995 DC    C'ATCVTLOD'
@CC04997 DC    C'CONFT   '
@CC04999 DC    C'CONCONFG'
@CC05001 DC    C'CONAPINM'
@CC05003 DC    C'CONAPSNM'
@CC05005 DC    C'CONACB  '
@CC05007 DC    C'CONHALT '
@CC05009 DC    C'CONFLAGS'
@CC05011 DC    C'CONFLG01'
@CC05013 DC    C'FMCB    '
@CC05015 DC    C'FMCLNGTH'
@CC05017 DC    C'FMCNXTCB'
@CC05019 DC    C'FMCDVTA '
@CC05021 DC    C'FMCDEBA '
@CC05023 DC    C'FMCDNCBA'
@CC05025 DC    C'FMCFLGA '
@CC05027 DC    C'FMCPSCMD'
@CC05029 DC    C'FMCPSTAT'
@CC05031 DC    C'RDT     '
@CC05033 DC    C'RPRNAME '
@CC05035 DC    C'RPRENTRY'
@CC05037 DC    C'RPRFLAGA'
@CC05039 DC    C'RPRFLAGB'
@CC05043 DC    C'RPRDEVCH'
@CC05045 DC    C'CRA     '
@CC05047 DC    C'CRACRR  '
@CC05049 DC    C'CRALKACT'
@CC05053 DC    C'DEB     '
@CC05055 DC    C'MPLT    '
@CC05057 DC    C'MPST    '
@CC05059 DC    C'MPSRQUE '
@CC05061 DC    C'MPSFLGA '
@CC05063 DC    C'MPSASCB '
@CC05065 DC    C'MPSDBTBL'
@CC05067 DC    C'DCE     '
@CC05646 DC    C'********'
         DS    CL2
CBACDEB  DS    CL72
         ORG   CBACDEB
@NM00117 DC    XL4'1F73010D'
@NM00118 DS    FL4
         ORG   @NM00118
@NM00119 DS    CL1
@NM00120 DC    AL3(@CC04945)
         ORG   CBACDEB+8
@NM00121 DC    XL4'0'
@NM00122 DC    XL4'0'
@NM00123 DC    XL4'0F73010B'
@NM00124 DS    FL4
         ORG   @NM00124
@NM00125 DC    X'80'
@NM00126 DC    AL3(@CC04947)
         ORG   CBACDEB+24
@NM00127 DC    AL4(ACDTCBAD-ISTACDEB)
@NM00128 DC    XL4'0F73151F'
@NM00129 DS    FL4
         ORG   @NM00129
@NM00130 DC    X'80'
@NM00131 DC    AL3(@CC04949)
         ORG   CBACDEB+36
@NM00132 DC    AL4(ACDDEBAD-ISTACDEB)
@NM00133 DC    XL4'0F732933'
@NM00134 DS    FL4
         ORG   @NM00134
@NM00135 DC    X'80'
@NM00136 DC    AL3(@CC04951)
         ORG   CBACDEB+48
@NM00137 DC    AL4(ACDRDTE-ISTACDEB)
@NM00138 DC    XL4'0F733D47'
@NM00139 DS    FL4
         ORG   @NM00139
@NM00140 DC    X'80'
@NM00141 DC    AL3(@CC04953)
         ORG   CBACDEB+60
@NM00142 DC    AL4(ACDFMCB-ISTACDEB)
@NM00143 DC    XL4'0'
@NM00144 DC    XL4'FFFFFFFF'
         ORG   CBACDEB+72
CBRDT    DS    CL84
         ORG   CBRDT
@NM00145 DC    XL4'1F73010D'
@NM00146 DS    FL4
         ORG   @NM00146
@NM00147 DS    CL1
@NM00148 DC    AL3(@CC05031)
         ORG   CBRDT+8
@NM00149 DC    XL4'0'
@NM00150 DC    XL4'0'
@NM00151 DC    XL4'2F77010B'
@NM00152 DC    AL4(@CC05033)
@NM00153 DC    AL4(RPRNAME-ISTRDT)
@NM00154 DC    XL4'0F701F29'
@NM00155 DC    AL4(@CC05035)
@NM00156 DC    AL4(RPRENTRY-ISTRDT)
@NM00157 DC    XL4'0F70333D'
@NM00158 DC    AL4(@CC05037)
@NM00159 DC    AL4(RPRFLAGA-ISTRDT)
@NM00160 DC    XL4'0F704751'
@NM00161 DC    AL4(@CC05039)
@NM00162 DC    AL4(RPRFLAGB-ISTRDT)
@NM00163 DC    XL4'0F775B65'
@NM00164 DC    AL4(@CC05043)
@NM00165 DC    AL4(RPRDEVCH-ISTRDT)
@NM00166 DC    XL4'0'
@NM00167 DC    XL4'FFFFFFFF'
         ORG   CBRDT+84
CBFMCB   DS    CL136
         ORG   CBFMCB
@NM00168 DC    XL4'1F73010D'
@NM00169 DS    FL4
         ORG   @NM00169
@NM00170 DS    CL1
@NM00171 DC    AL3(@CC05013)
         ORG   CBFMCB+8
@NM00172 DC    XL4'0'
@NM00173 DC    XL4'0'
@NM00174 DC    XL4'0F70010B'
@NM00175 DC    AL4(@CC05015)
@NM00176 DC    AL4(FMCLNGTH-ISTFMCB)
@NM00177 DC    XL4'0F731F29'
@NM00178 DS    FL4
         ORG   @NM00178
@NM00179 DC    X'80'
@NM00180 DC    AL3(@CC05017)
         ORG   CBFMCB+36
@NM00181 DC    AL4(FMCNXTCB-ISTFMCB)
@NM00182 DC    XL4'0F73333D'
@NM00183 DS    FL4
         ORG   @NM00183
@NM00184 DC    X'80'
@NM00185 DC    AL3(@CC05019)
         ORG   CBFMCB+48
@NM00186 DC    AL4(FMCDVTA-ISTFMCB)
@NM00187 DC    XL4'0F734751'
@NM00188 DS    FL4
         ORG   @NM00188
@NM00189 DC    X'80'
@NM00190 DC    AL3(@CC05021)
         ORG   CBFMCB+60
@NM00191 DC    AL4(FMCDEBA-ISTFMCB)
@NM00192 DC    XL4'0'
@NM00193 DC    XL4'0F77010B'
@NM00194 DC    AL4(@CC05025)
@NM00195 DC    AL4(FMCFLGA-ISTFMCB)
@NM00196 DC    XL4'0F701F29'
@NM00197 DC    AL4(@CC05027)
@NM00198 DC    AL4(FMCPSCMD-ISTFMCB)
@NM00199 DC    XL4'0F70333D'
@NM00200 DC    AL4(@CC05029)
@NM00201 DC    AL4(FMCPSTAT-ISTFMCB)
@NM00202 DC    XL4'0F734751'
@NM00203 DS    FL4
         ORG   @NM00203
@NM00204 DC    X'80'
@NM00205 DC    AL3(@CC05023)
         ORG   CBFMCB+112
@NM00206 DC    AL4(FMCDNCBA-ISTFMCB)
@NM00207 DC    XL4'0'
@NM00208 DC    XL4'FFFFFFFF'
         ORG   CBFMCB+136
CBATCVT  DS    CL148
         ORG   CBATCVT
@NM00209 DC    XL4'1F73010D'
@NM00210 DS    FL4
         ORG   @NM00210
@NM00211 DS    CL1
@NM00212 DC    AL3(@CC04955)
         ORG   CBATCVT+8
@NM00213 DC    XL4'0'
@NM00214 DC    XL4'0'
@NM00215 DC    XL4'0F73010B'
@NM00216 DS    FL4
         ORG   @NM00216
@NM00217 DC    X'80'
@NM00218 DC    AL3(@CC04957)
         ORG   CBATCVT+24
@NM00219 DC    AL4(ATCRDT-ISTATCVT)
@NM00220 DC    XL4'0F73151F'
@NM00221 DS    FL4
         ORG   @NM00221
@NM00222 DC    X'80'
@NM00223 DC    AL3(@CC04979)
         ORG   CBATCVT+36
@NM00224 DC    AL4(ATCSRT-ISTATCVT)
@NM00225 DC    XL4'0F732933'
@NM00226 DS    FL4
         ORG   @NM00226
@NM00227 DC    X'80'
@NM00228 DC    AL3(@CC04981)
         ORG   CBATCVT+48
@NM00229 DC    AL4(ATCFSB-ISTATCVT)
@NM00230 DC    XL4'0F733D47'
@NM00231 DS    FL4
         ORG   @NM00231
@NM00232 DC    X'80'
@NM00233 DC    AL3(@CC04983)
         ORG   CBATCVT+60
@NM00234 DC    AL4(ATCCONFT-ISTATCVT)
@NM00235 DC    XL4'0F73515B'
@NM00236 DS    FL4
         ORG   @NM00236
@NM00237 DC    X'80'
@NM00238 DC    AL3(@CC04985)
         ORG   CBATCVT+72
@NM00239 DC    AL4(ATCBPDA-ISTATCVT)
@NM00240 DC    XL4'0'
@NM00241 DC    XL4'0F73010B'
@NM00242 DS    FL4
         ORG   @NM00242
@NM00243 DC    X'80'
@NM00244 DC    AL3(@CC04987)
         ORG   CBATCVT+88
@NM00245 DC    AL4(ATCMNT-ISTATCVT)
@NM00246 DC    XL4'0F71151F'
@NM00247 DC    AL4(@CC04989)
@NM00248 DC    AL4(ATCACTRM-ISTATCVT)
@NM00249 DC    XL4'0F732933'
@NM00250 DS    FL4
         ORG   @NM00250
@NM00251 DC    X'80'
@NM00252 DC    AL3(@CC04991)
         ORG   CBATCVT+112
@NM00253 DC    AL4(ATCDVT-ISTATCVT)
@NM00254 DC    XL4'0F733D47'
@NM00255 DS    FL4
         ORG   @NM00255
@NM00256 DC    X'80'
@NM00257 DC    AL3(@CC04993)
         ORG   CBATCVT+124
@NM00258 DC    AL4(ATCEPT-ISTATCVT)
@NM00259 DC    XL4'0F73515B'
@NM00260 DS    FL4
         ORG   @NM00260
@NM00261 DC    X'80'
@NM00262 DC    AL3(@CC04995)
         ORG   CBATCVT+136
@NM00263 DC    AL4(ATCVTLOD-ISTATCVT)
@NM00264 DC    XL4'0'
@NM00265 DC    XL4'FFFFFFFF'
         ORG   CBATCVT+148
CBCONFT  DS    CL112
         ORG   CBCONFT
@NM00266 DC    XL4'1F73010D'
@NM00267 DS    FL4
         ORG   @NM00267
@NM00268 DS    CL1
@NM00269 DC    AL3(@CC04997)
         ORG   CBCONFT+8
@NM00270 DC    XL4'0'
@NM00271 DC    XL4'0'
@NM00272 DC    XL4'2F77010B'
@NM00273 DC    AL4(@CC04999)
@NM00274 DC    AL4(CONCONFG-ISTCONFT)
@NM00275 DC    XL4'0F771F29'
@NM00276 DC    AL4(@CC05001)
@NM00277 DC    AL4(CONAPINM-ISTCONFT)
@NM00278 DC    XL4'0F773D47'
@NM00279 DC    AL4(@CC05003)
@NM00280 DC    AL4(CONAPSNM-ISTCONFT)
@NM00281 DC    XL4'0F735B65'
@NM00282 DS    FL4
         ORG   @NM00282
@NM00283 DC    X'80'
@NM00284 DC    AL3(@CC05005)
         ORG   CBCONFT+60
@NM00285 DC    AL4(CONACB-ISTCONFT)
@NM00286 DC    XL4'0'
@NM00287 DC    XL4'0F70010B'
@NM00288 DC    AL4(@CC05007)
@NM00289 DC    AL4(CONHALT-ISTCONFT)
@NM00290 DC    XL4'0F741F29'
@NM00291 DC    AL4(@CC05009)
@NM00292 DC    AL4(CONFLAGS-ISTCONFT)
@NM00293 DC    XL4'0F703D47'
@NM00294 DC    AL4(@CC05011)
@NM00295 DC    AL4(CONFLG01-ISTCONFT)
@NM00296 DC    XL4'0'
@NM00297 DC    XL4'FFFFFFFF'
         ORG   CBCONFT+112
CBCRA    DS    CL48
         ORG   CBCRA
@NM00298 DC    XL4'1F73010D'
@NM00299 DS    FL4
         ORG   @NM00299
@NM00300 DS    CL1
@NM00301 DC    AL3(@CC05045)
         ORG   CBCRA+8
@NM00302 DC    XL4'0'
@NM00303 DC    XL4'0'
@NM00304 DC    XL4'0F73010B'
@NM00305 DS    FL4
         ORG   @NM00305
@NM00306 DC    X'80'
@NM00307 DC    AL3(@CC05047)
         ORG   CBCRA+24
@NM00308 DC    AL4(CRACRR-ISTCRA)
@NM00309 DC    XL4'0F73151F'
@NM00310 DC    AL4(@CC05049)
@NM00311 DC    AL4(CRALKACT-ISTCRA)
@NM00312 DC    XL4'0'
@NM00313 DC    XL4'FFFFFFFF'
         ORG   CBCRA+48
ONELINE  DS    CL100
         ORG   ONELINE
@NM00314 DC    XL4'1C020001'
@NM00315 DC    A(0)
@NM00316 DC    XL4'0C030008'
@NM00317 DS    AL4
@NM00318 DC    XL4'04030011'
@NM00319 DC    XL4'0403001A'
@NM00320 DC    XL4'04030023'
@NM00321 DC    XL4'0403002F'
@NM00322 DC    XL4'04030038'
@NM00323 DC    XL4'04030041'
@NM00324 DC    XL4'0403004A'
ASTER1   DC    XL4'2F035657'
@NM00325 DC    AL4(ASTERISK)
@NM00326 DS    AL4
@NM00327 DC    XL4'2403005B'
@NM00328 DC    XL4'2403005F'
@NM00329 DC    XL4'24030063'
@NM00330 DC    XL4'24030067'
@NM00331 DC    XL4'2403006B'
@NM00332 DC    XL4'2403006F'
@NM00333 DC    XL4'24030073'
ASTER2   DC    XL4'03007700'
@NM00334 DC    AL4(ASTERISK)
@NM00335 DC    XL4'0'
@NM00336 DC    XL4'FFFFFFFF'
         ORG   ONELINE+100
ASTERISK DC    CL1'*'
         DS    CL3
TRANTBL  DS    CL256
         ORG   TRANTBL
@NM00337 DC    CL32'................................'
@NM00338 DC    CL32'................................'
@NM00339 DC    CL32' ...........................*...'
@NM00340 DC    CL32'................................'
@NM00341 DC    CL32'................................'
@NM00342 DC    CL32'................................'
@NM00343 DC    CL32'.ABCDEFGHI.......JKLMNOPQR......'
@NM00344 DC    CL32'..STUVWXYZ......0123456789......'
         ORG   TRANTBL+256
CBBPCB   DS    CL72
         ORG   CBBPCB
@NM00345 DC    XL4'1F73010D'
@NM00346 DS    FL4
         ORG   @NM00346
@NM00347 DS    CL1
@NM00348 DC    AL3(@CC04967)
         ORG   CBBPCB+8
@NM00349 DC    XL4'0'
@NM00350 DC    XL4'0'
@NM00351 DC    XL4'0F73010B'
@NM00352 DS    FL4
         ORG   @NM00352
@NM00353 DC    X'80'
@NM00354 DC    AL3(@CC04969)
         ORG   CBBPCB+24
@NM00355 DC    AL4(BPCBRPHA-ISTBPCB)
@NM00356 DC    XL4'0F73151F'
@NM00357 DS    FL4
         ORG   @NM00357
@NM00358 DC    X'80'
@NM00359 DC    AL3(@CC04971)
         ORG   CBBPCB+36
@NM00360 DC    AL4(BPCBRPHB-ISTBPCB)
@NM00361 DC    XL4'0F722933'
@NM00362 DS    FL4
         ORG   @NM00362
@NM00363 DC    X'80'
@NM00364 DC    AL3(@CC04973)
         ORG   CBBPCB+48
@NM00365 DC    AL4(BPCBFBA-ISTBPCB)
@NM00366 DC    XL4'0F713D47'
@NM00367 DS    FL4
         ORG   @NM00367
@NM00368 DC    X'80'
@NM00369 DC    AL3(@CC04975)
         ORG   CBBPCB+60
@NM00370 DC    AL4(BPCBAVNO-ISTBPCB)
@NM00371 DC    XL4'0'
@NM00372 DC    XL4'FFFFFFFF'
         ORG   CBBPCB+72
CBBPD    DS    CL20
         ORG   CBBPD
@NM00373 DC    XL4'1F73010D'
@NM00374 DS    FL4
         ORG   @NM00374
@NM00375 DS    CL1
@NM00376 DC    AL3(@CC04963)
         ORG   CBBPD+8
@NM00377 DC    XL4'0'
@NM00378 DC    XL4'0'
@NM00379 DC    XL4'FFFFFFFF'
         ORG   CBBPD+20
CBNCB    DS    CL20
         ORG   CBNCB
@NM00380 DC    XL4'1F73010D'
@NM00381 DS    FL4
         ORG   @NM00381
@NM00382 DS    CL1
@NM00383 DC    AL3(@CC04965)
         ORG   CBNCB+8
@NM00384 DC    XL4'0'
@NM00385 DC    XL4'0'
@NM00386 DC    XL4'FFFFFFFF'
         ORG   CBNCB+20
CBPST    DS    CL20
         ORG   CBPST
@NM00387 DC    XL4'1F73010D'
@NM00388 DS    FL4
         ORG   @NM00388
@NM00389 DS    CL1
@NM00390 DC    AL3(@CC04977)
         ORG   CBPST+8
@NM00391 DC    XL4'0'
@NM00392 DC    XL4'0'
@NM00393 DC    XL4'FFFFFFFF'
         ORG   CBPST+20
CBQAB    DS    CL20
         ORG   CBQAB
@NM00394 DC    XL4'1F73010D'
@NM00395 DS    FL4
         ORG   @NM00395
@NM00396 DS    CL1
@NM00397 DC    AL3(@CC04959)
         ORG   CBQAB+8
@NM00398 DC    XL4'0'
@NM00399 DC    XL4'0'
@NM00400 DC    XL4'FFFFFFFF'
         ORG   CBQAB+20
CBRDTE   DS    CL84
         ORG   CBRDTE
@NM00401 DC    XL4'1F73010D'
@NM00402 DS    FL4
         ORG   @NM00402
@NM00403 DS    CL1
@NM00404 DC    AL3(@CC04961)
         ORG   CBRDTE+8
@NM00405 DC    XL4'0'
@NM00406 DC    XL4'0'
@NM00407 DC    XL4'2F77010B'
@NM00408 DC    AL4(@CC05033)
@NM00409 DC    AL4(RPRNAME-ISTRDT)
@NM00410 DC    XL4'0F701F29'
@NM00411 DC    AL4(@CC05035)
@NM00412 DC    AL4(RPRENTRY-ISTRDT)
@NM00413 DC    XL4'0F70333D'
@NM00414 DC    AL4(@CC05037)
@NM00415 DC    AL4(RPRFLAGA-ISTRDT)
@NM00416 DC    XL4'0F704751'
@NM00417 DC    AL4(@CC05039)
@NM00418 DC    AL4(RPRFLAGB-ISTRDT)
@NM00419 DC    XL4'0F775B65'
@NM00420 DC    AL4(@CC05043)
@NM00421 DC    AL4(RPRDEVCH-ISTRDT)
@NM00422 DC    XL4'0'
@NM00423 DC    XL4'FFFFFFFF'
         ORG   CBRDTE+84
CBMPLT   DS    CL20
         ORG   CBMPLT
@NM00424 DC    XL4'1F73010D'
@NM00425 DS    FL4
         ORG   @NM00425
@NM00426 DS    CL1
@NM00427 DC    AL3(@CC05055)
         ORG   CBMPLT+8
@NM00428 DC    XL4'0'
@NM00429 DC    XL4'0'
@NM00430 DC    XL4'FFFFFFFF'
         ORG   CBMPLT+20
CBMPST   DS    CL72
         ORG   CBMPST
@NM00431 DC    XL4'1F73010D'
@NM00432 DS    FL4
         ORG   @NM00432
@NM00433 DS    CL1
@NM00434 DC    AL3(@CC05057)
         ORG   CBMPST+8
@NM00435 DC    XL4'0'
@NM00436 DC    XL4'0'
@NM00437 DC    XL4'0F73010B'
@NM00438 DS    FL4
         ORG   @NM00438
@NM00439 DC    X'80'
@NM00440 DC    AL3(@CC05059)
         ORG   CBMPST+24
@NM00441 DC    AL4(MPSRQUE-ISTMPST)
@NM00442 DC    XL4'0F73151F'
@NM00443 DS    FL4
         ORG   @NM00443
@NM00444 DC    X'80'
@NM00445 DC    AL3(@CC05061)
         ORG   CBMPST+36
@NM00446 DC    AL4(MPSFLGA-ISTMPST)
@NM00447 DC    XL4'0F733933'
@NM00448 DS    FL4
         ORG   @NM00448
@NM00449 DC    X'80'
@NM00450 DC    AL3(@CC05063)
         ORG   CBMPST+48
@NM00451 DC    AL4(MPSASCB-ISTMPST)
@NM00452 DC    XL4'0F733D47'
@NM00453 DS    FL4
         ORG   @NM00453
@NM00454 DC    X'80'
@NM00455 DC    AL3(@CC05065)
         ORG   CBMPST+60
@NM00456 DC    AL4(MPSDBTBL-ISTMPST)
@NM00457 DC    XL4'0'
@NM00458 DC    XL4'FFFFFFFF'
         ORG   CBMPST+72
CBDCE    DS    CL20
         ORG   CBDCE
@NM00459 DC    XL4'1F73010D'
@NM00460 DS    FL4
         ORG   @NM00460
@NM00461 DS    CL1
@NM00462 DC    AL3(@CC05067)
         ORG   CBDCE+8
@NM00463 DC    XL4'0'
@NM00464 DC    XL4'0'
@NM00465 DC    XL4'FFFFFFFF'
         ORG   CBDCE+20
ERRMESS1 DC    CL36'ADDRESS FOR            NOT AVAILABLE'
ERRMESS3 DC    CL48'NO ACDEB AND ASSOCIATED RDT AND FMCBS '
ERRMESS5 DC    CL72'AN ERROR OCCURRED IN FORMAT ROUTINE. PART OF THE   C
                      MAY BE MISSING'
VTAMMESS DC    CL29'VTAM NOT ACTIVE FOR THIS CALL'
COREMESS DC    CL90'INSUFFICIENT STORAGE TO FORMAT VTAM CONTROL BLOCKS,C
                BYTES REQUESTED =     , SUBPOOL =     '
NCBMSG   DC    CL26'NO NCB OR UNABLE TO ACCESS'
CRAMSG   DC    CL33'UNABLE TO ACCESS ONE OR MORE CRAS'
QABMSG   DC    CL58'NO QAB OR UNABLE TO ACCESS QAB AND ASSOCIATED RDTS C
               && NCBS'
BPDMSG   DC    CL52'UNABLE TO ACCESS BPD && ASSOCIATED BPCBS AND  CRAS'
RDT1MSG  DC    CL59'ALL OR PART OF RDT CHAIN && ASSOCIATED NCBS  MAY BEC
                MISSING'
DEBMSG   DC    CL50'UNABLE TO ACCESS DEB AND ASSOCIATED PST AND  MCBS'
DCEMSG   DC    CL75'UNABLE TO ACCESS ALL OR PART OF DCE CHAIN &&  ASSOCC
               IATED DEBS,PSTS, && FMCBS'
MPSTMSG  DC    CL62'UNABLE TO ACCESS MPST AND ASSOCIATED DCES,  EBS,PSTC
               , && FMCBS'
MPLTMSG  DC    CL86'UNABLE TO ACCESS ALL OR PART OF MPLT CHAIN   ASSOCIC
               ATED MPSTS,DCES,DEBS,PSTS && FMCBS'
PSTMSG   DC    CL20'UNABLE TO ACCESS PST'
BPCBMSG  DC    CL34'UNABLE TO ACCESS ONE OR MORE BPCBS'
RDT2MSG  DC    CL42'UNABLE TO ACCESS ALL OR PART OF RDTE CHAIN'
FMCBMSG  DC    CL42'UNABLE TO ACCESS ALL OR PART OF FMCB CHAIN'
DEBOFFST DC    AL1(ACDBASIC-ISTACDEB)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
LDPRMPTR EQU   @01
FMCBPTR  EQU   @05
BPCBPTR  EQU   @06
BPDPTR   EQU   @03
R1       EQU   @01
R0       EQU   @00
R2       EQU   @02
ATCVTPTR EQU   @02
R3       EQU   @03
ACDEBPTR EQU   @03
R4       EQU   @04
RDTPTR   EQU   @04
R5       EQU   @05
LASTGOOD EQU   @05
SCBPTR   EQU   @05
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
QABPTR   EQU   @03
PSTPTR   EQU   @04
DEBPTR   EQU   @03
BPCBCNT  EQU   @04
BUFNUM   EQU   @04
NCBPTR   EQU   @05
CRAPTR   EQU   @05
TYPE     EQU   @06
IDFLAG   EQU   @06
RDTPOS   EQU   @07
SMSCRA   EQU   @07
RDTEPTR  EQU   @08
CRAQ     EQU   @06
R6       EQU   @06
R7       EQU   @07
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBSTABB EQU   TCBSTAB+1
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBMPST EQU   ASXB+16
ASXBAEQ  EQU   ASXB+168
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTMPST  EQU   0
MPSRSV07 EQU   ISTMPST+4
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
MPSSMRPH EQU   ISTMPST+52
MPSASCB  EQU   ISTMPST+120
MPSDBTBL EQU   ISTMPST+124
ISTDCE   EQU   0
DCEDBPTR EQU   ISTDCE
DCECHN   EQU   ISTDCE+4
ISTMPLT  EQU   0
MPLCHN   EQU   ISTMPLT
MPLECNT  EQU   ISTMPLT+8
MPLCDS   EQU   ISTMPLT+16
MPLFLGS1 EQU   MPLCDS+6
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00034 EQU   LOKCHNG+2
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDTSKID EQU   ACDVTPRX+8
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDRDTE  EQU   ACDVTAM+4
ACDFMCB  EQU   ACDVTAM+8
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCRDT   EQU   ATCCOM+12
ATCSRT   EQU   ATCCOM+16
ATCFSB   EQU   ATCCOM+88
ATCCONFT EQU   ATCCOM+112
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCACTRM EQU   ATCCOM+264
ATCMNT   EQU   ISTATCVT+272
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCDVT   EQU   ISTATCVT+336
ATCEPT   EQU   ISTATCVT+340
ATCVTLOD EQU   ISTATCVT+356
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00046 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP61  EQU   ATCAOSM+56
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRAQ  EQU   ATCCRA
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00048 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCMPLTA EQU   ATCAOSM+568
ATCZFLAG EQU   ATCAOSM+588
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTLDPRM EQU   0
LDPFG    EQU   ISTLDPRM+20
LDPFB2   EQU   ISTLDPRM+21
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRELEN  EQU   ISTRPRE+16
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRNCBA  EQU   ISTRPRE+40
RPRDEVCH EQU   ISTRPRE+44
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFORW  EQU   ISTRDT+76
RDTBACK  EQU   ISTRDT+80
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPAPPWD EQU   ISTRAP+80
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTCONFT EQU   0
CONCONFG EQU   ISTCONFT
CONAPINM EQU   ISTCONFT+8
CONAPSNM EQU   ISTCONFT+16
CONACB   EQU   ISTCONFT+40
CONHALT  EQU   ISTCONFT+106
CONFLAGS EQU   ISTCONFT+110
CONDSFLG EQU   CONFLAGS
CONOPTFL EQU   CONFLAGS+1
CONSTAT  EQU   CONFLAGS+2
CONBUFF  EQU   CONFLAGS+3
CONFLG01 EQU   ISTCONFT+416
CONSCPID EQU   ISTCONFT+1356
CONSTAID EQU   CONSCPID+3
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCLNGTH EQU   ISTFMCB+1
FMCNXTCB EQU   ISTFMCB+4
FMCDVTA  EQU   ISTFMCB+12
FMCDNCBA EQU   ISTFMCB+16
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCDEBA  EQU   ISTFMCB+32
FMCCMPS1 EQU   ISTFMCB+36
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRARPH   EQU   ISTCRA+52
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
CRACHAIN EQU   ISTCRA+928
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTCRRS  EQU   ISTPST+60
PSTDMPS  EQU   ISTPST+132
ISTQAB   EQU   0
QABFIRST EQU   ISTQAB+8
QABLAST  EQU   ISTQAB+12
QABATTR  EQU   ISTQAB+16
QABATTR2 EQU   QABATTR+1
ISTNCB   EQU   0
NCBLNGTH EQU   ISTNCB+1
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTBPCB  EQU   0
BPCBFLAG EQU   ISTBPCB
BPCBFEXT EQU   ISTBPCB+4
BPCBADR1 EQU   ISTBPCB+8
BPCBRPHA EQU   ISTBPCB+16
BPCBRPHB EQU   ISTBPCB+20
BPCBBSIZ EQU   ISTBPCB+32
BPCBQREQ EQU   ISTBPCB+40
BPCBMUSE EQU   ISTBPCB+44
BPCBRESP EQU   ISTBPCB+48
BPCBNUM  EQU   ISTBPCB+52
BPCBNUMR EQU   ISTBPCB+54
BPCBCDS  EQU   ISTBPCB+56
BPCBCDS1 EQU   BPCBCDS
BPCBFLG2 EQU   BPCBCDS1
BPCBFBA  EQU   BPCBCDS1+1
BPCBCDS2 EQU   BPCBCDS+4
BPCBAVNO EQU   BPCBCDS2+2
BPCBRBLK EQU   ISTBPCB+64
ISTBPENT EQU   0
BPEFLAGS EQU   ISTBPENT+4
BPEBPCB  EQU   ISTBPENT+8
ISTBPDTY EQU   0
BPDHDR   EQU   ISTBPDTY
BPDBPENT EQU   BPDHDR
BPDFLAG  EQU   BPDHDR+40
BPDPARM  EQU   BPDHDR+48
BPDTRACE EQU   BPDHDR+56
BPDENTRY EQU   ISTBPDTY+144
BPDCBID  EQU   ISTBPDTY+336
ISTBFPFX EQU   0
BFPTSKID EQU   ISTBFPFX
BFPPSTID EQU   BFPTSKID+1
BFPPCBA  EQU   ISTBFPFX+4
BFPDATA  EQU   ISTBFPFX+16
BFPREGSA EQU   BFPDATA
BFPR5SA  EQU   BFPREGSA
ISTCBIDT EQU   0
CBIDATR  EQU   ISTCBIDT
CBIDFLAG EQU   ISTCBIDT+1
CBIDPCB  EQU   ISTCBIDT+4
SCB      EQU   0
SCBCHAIN EQU   SCB
SCBADR61 EQU   SCB+4
SCBCRA   EQU   SCB+8
@NM00109 EQU   0
RAFPLST  EQU   0
PLSTATCB EQU   RAFPLST
PLSTFLGS EQU   RAFPLST+4
PLSTPOOL EQU   PLSTFLGS+2
PLSTFLG  EQU   PLSTFLGS+3
PLSTCALL EQU   PLSTFLG
PLSTOBUF EQU   RAFPLST+8
PLSTPRNT EQU   RAFPLST+12
PLSTMARA EQU   RAFPLST+20
PLSTFRA  EQU   RAFPLST+24
PLSTWORK EQU   RAFPLST+28
AREADD   EQU   PLSTWORK+12
RC       EQU   0
PATTERN  EQU   0
PTRNMSK  EQU   0
LABLPTR  EQU   PTRNMSK+4
DATAPTR  EQU   PTRNMSK+8
HEXPTR   EQU   PTRNMSK+12
LINE     EQU   0
X        EQU   0
WORD     EQU   0
HWRD     EQU   0
BYTE     EQU   0
DWRD     EQU   0
BUFFER   EQU   0
PRINT    EQU   0
MAR      EQU   0
FORMAT   EQU   0
OLDSAV   EQU   0
CLRSAV   EQU   OLDSAV+4
REG14    EQU   OLDSAV+12
REG15    EQU   OLDSAV+16
REG3     EQU   OLDSAV+32
NEWSAV   EQU   0
BACKPTR  EQU   NEWSAV+4
DUMNAMES EQU   0
LCPBPTR  EQU   DUMNAMES
TCBPTR   EQU   DUMNAMES+4
BPEPTR   EQU   DUMNAMES+8
BFPFXPTR EQU   DUMNAMES+12
BYT3     EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
SRB      EQU   SRBSECT
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
WKAREA   EQU   REG15
WKAREA1  EQU   REG14
MESS1LBL EQU   BUFFER+12
MESS5LBL EQU   BUFFER+49
BYTEREQ  EQU   BUFFER+70
SUBPOL   EQU   BUFFER+86
BUFID    EQU   BUFFER+24
CALLRSAV EQU   REG14
FLC      EQU   PSA
MESS2LBL EQU   BUFFER+7
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00468 EQU   NEWSAV
REG4     EQU   OLDSAV+36
REG2     EQU   OLDSAV+28
REG1     EQU   OLDSAV+24
REG0     EQU   OLDSAV+20
@NM00467 EQU   OLDSAV+8
@NM00466 EQU   OLDSAV
FLGS     EQU   PTRNMSK
@NM00113 EQU   PLSTWORK+16
@NM00112 EQU   PLSTWORK
PLSTCVTA EQU   RAFPLST+16
@NM00111 EQU   PLSTFLG
PLSTSYS  EQU   PLSTFLG
PLSTASID EQU   PLSTFLGS
OLDTCB   EQU   @NM00109+4
@NM00110 EQU   @NM00109
CBIDLEN  EQU   ISTCBIDT+2
@NM00108 EQU   CBIDFLAG
CBICLEAN EQU   CBIDFLAG
@NM00107 EQU   CBIDATR
CBINWS   EQU   CBIDATR
CBICBID  EQU   CBIDATR
CBIDAL48 EQU   CBIDATR
CBINFCHP EQU   CBIDATR
CBIFIXED EQU   CBIDATR
CBIDISP  EQU   CBIDATR
CBIFM    EQU   CBIDATR
BFPRDSA  EQU   BFPREGSA+32
BFPRCSA  EQU   BFPREGSA+28
BFPRBSA  EQU   BFPREGSA+24
BFPRASA  EQU   BFPREGSA+20
BFPR9SA  EQU   BFPREGSA+16
BFPR8SA  EQU   BFPREGSA+12
BFPR7SA  EQU   BFPREGSA+8
BFPR6SA  EQU   BFPREGSA+4
BFPPMDSB EQU   BFPR5SA
BFPPMCHN EQU   BFPR5SA
BFPPMCLR EQU   BFPR5SA
BFPUSED  EQU   ISTBFPFX+14
BFPSIZE  EQU   ISTBFPFX+12
BFPNXCHN EQU   ISTBFPFX+8
BFPBPCB  EQU   BFPPCBA+1
@NM00106 EQU   BFPPCBA
BFPCBID  EQU   BFPPCBA
BFPTIK   EQU   BFPPSTID+2
@NM00105 EQU   BFPPSTID
BFPCBXNO EQU   BFPTSKID
BFPALLOC EQU   BFPTSKID
@NM00104 EQU   BPDTRACE+6
BPDAVNO  EQU   BPDTRACE+4
BPDMQUE  EQU   BPDTRACE+2
BPDMUSE  EQU   BPDTRACE
BPDTRADR EQU   BPDPARM+4
BPDTRID  EQU   BPDPARM+3
@NM00103 EQU   BPDPARM+2
BPDTRLEN EQU   BPDPARM
BPDREQMX EQU   BPDHDR+46
BPDREQCT EQU   BPDHDR+44
BPDRSV01 EQU   BPDFLAG
BPDGTR   EQU   BPDFLAG
BPDATCVT EQU   BPDHDR+36
BPDFBPE  EQU   BPDHDR+32
BPDSMPCB EQU   BPDHDR+28
BPDFEXT  EQU   BPDHDR+24
BPDADRS2 EQU   BPDHDR+20
BPDADRS1 EQU   BPDHDR+16
BPDPGPCB EQU   BPDHDR+12
BPDCHPCB EQU   BPDHDR+8
BPDCHBSZ EQU   BPDHDR+6
BPDCHBNO EQU   BPDHDR+4
BPDBPMAX EQU   BPDHDR+2
BPERSV03 EQU   ISTBPENT+12
BPEBFSIZ EQU   ISTBPENT+6
BPERSV02 EQU   BPEFLAGS+1
BPEUSRF  EQU   BPEFLAGS+1
BPERSV01 EQU   BPEFLAGS
BPENWS   EQU   BPEFLAGS
BPECBID  EQU   BPEFLAGS
BPEAL48  EQU   BPEFLAGS
BPENFCHP EQU   BPEFLAGS
BPEFIXED EQU   BPEFLAGS
BPEDISP  EQU   BPEFLAGS
BPEFM    EQU   BPEFLAGS
BPEPID   EQU   ISTBPENT
BPCBSRB  EQU   ISTBPCB+68
BPCBSRBA EQU   BPCBRBLK+1
@NM00102 EQU   BPCBRBLK
BPCBSRBG EQU   BPCBRBLK
BPCBCCNT EQU   BPCBCDS2
@NM00101 EQU   BPCBFLG2
BPCBLOW2 EQU   BPCBFLG2
BPCBLOW1 EQU   BPCBFLG2
@NM00100 EQU   BPCBFLG2
BPCMINAV EQU   BPCBMUSE+2
@NM00099 EQU   BPCBMUSE
BPCBCQUE EQU   BPCBQREQ+2
BPCBMQUE EQU   BPCBQREQ
BPCBTHR2 EQU   ISTBPCB+38
BPCBTHRE EQU   ISTBPCB+36
BPCBTOTL EQU   ISTBPCB+34
BPCBNXCB EQU   ISTBPCB+28
BPCBPDTY EQU   ISTBPCB+24
BPCBADR2 EQU   ISTBPCB+12
BPCBPRIO EQU   BPCBFEXT
BPCBSPNO EQU   ISTBPCB+3
@NM00098 EQU   ISTBPCB+2
@NM00097 EQU   BPCBFLAG+1
BPCBUSRF EQU   BPCBFLAG+1
@NM00096 EQU   BPCBFLAG
BPCBNWS  EQU   BPCBFLAG
BPCBCBID EQU   BPCBFLAG
BPCBAL48 EQU   BPCBFLAG
BPCBNFCH EQU   BPCBFLAG
BPCBFX   EQU   BPCBFLAG
BPCBDISP EQU   BPCBFLAG
BPCBFM   EQU   BPCBFLAG
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00095 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBDAF   EQU   ISTNCB+2
NCBTYPE  EQU   ISTNCB
QABBCKDS EQU   ISTQAB+22
QABFWDDS EQU   ISTQAB+20
QABPTYDS EQU   ISTQAB+18
@NM00094 EQU   QABATTR2
@NM00093 EQU   QABATTR2
@NM00092 EQU   QABATTR2
@NM00091 EQU   QABATTR2
QABFIFO  EQU   QABATTR2
QABLIFO  EQU   QABATTR2
QABPRTY  EQU   QABATTR2
@NM00090 EQU   QABATTR2
QABATTR1 EQU   QABATTR
@NM00089 EQU   ISTQAB+6
QABCT    EQU   ISTQAB+4
QABID    EQU   ISTQAB
PSTDRDYQ EQU   PSTDMPS+1
@NM00088 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTSMDYP EQU   ISTPST+64
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTMPSTP EQU   ISTPST+20
PSTTCBA  EQU   ISTPST+16
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00087 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00086 EQU   ISTAPCRR+137
@NM00085 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00084 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00083 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00082 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00081 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00080 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00079 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00078 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00077 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00076 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00075 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00074 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00073 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00072 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00071 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00070 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
@NM00069 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00068 EQU   ISTFMCB+30
@NM00067 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCTSKID EQU   ISTFMCB+8
FMCSAF   EQU   ISTFMCB+2
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
CONUESBF EQU   ISTCONFT+1362
CONSTVAR EQU   CONSTAID+1
CONSTFIL EQU   CONSTAID
CONBLKNO EQU   CONSCPID+2
CONFILL  EQU   CONSCPID+1
CONFCNL  EQU   CONSCPID
CONF01SV EQU   ISTCONFT+1352
CONSDMLC EQU   ISTCONFT+1348
CONSDECB EQU   ISTCONFT+1344
CONUNITS EQU   ISTCONFT+1342
CONRVPT1 EQU   ISTCONFT+1341
CONGLBBH EQU   ISTCONFT+1340
CONRSV24 EQU   ISTCONFT+1312
CONFTTAT EQU   ISTCONFT+1284
CONFXXAT EQU   ISTCONFT+1256
CONFLDAT EQU   ISTCONFT+1228
CONFTRAT EQU   ISTCONFT+1200
CONFNSAT EQU   ISTCONFT+1172
CONCSCB  EQU   ISTCONFT+1168
CONRSV50 EQU   ISTCONFT+1166
CONLIST  EQU   ISTCONFT+1164
CONSTAFP EQU   ISTCONFT+1160
CONECDET EQU   ISTCONFT+1156
CONRECON EQU   ISTCONFT+1036
CONNTSOL EQU   ISTCONFT+916
CONTRACE EQU   ISTCONFT+796
CONTOLTP EQU   ISTCONFT+676
CONVVTAM EQU   ISTCONFT+556
CONVTHDR EQU   ISTCONFT+420
CONRSV01 EQU   ISTCONFT+417
CONNSNEC EQU   CONFLG01
CONFTPSA EQU   CONFLG01
CONFTTA  EQU   CONFLG01
CONFTNSA EQU   CONFLG01
CONFTNAC EQU   CONFLG01
CONFTEXS EQU   CONFLG01
CONFTTMR EQU   CONFLG01
CONFTSTM EQU   CONFLG01
CONCRPLD EQU   ISTCONFT+404
CONPPDBF EQU   ISTCONFT+392
CONNPDBF EQU   ISTCONFT+380
CONAPDBF EQU   ISTCONFT+368
CONWPDBF EQU   ISTCONFT+356
CONIODBF EQU   ISTCONFT+344
CONUEDBF EQU   ISTCONFT+332
CONVPDBF EQU   ISTCONFT+320
CONVFDBF EQU   ISTCONFT+308
CONLPDBF EQU   ISTCONFT+296
CONLFDBF EQU   ISTCONFT+284
CONSPDBF EQU   ISTCONFT+272
CONSFDBF EQU   ISTCONFT+260
CONCRPLS EQU   ISTCONFT+248
CONPPSBF EQU   ISTCONFT+236
CONNPSBF EQU   ISTCONFT+224
CONAPSBF EQU   ISTCONFT+212
CONWPSBF EQU   ISTCONFT+200
CONIOSBF EQU   ISTCONFT+188
CONVPSBF EQU   ISTCONFT+176
CONVFSBF EQU   ISTCONFT+164
CONLPSBF EQU   ISTCONFT+152
CONLFSBF EQU   ISTCONFT+140
CONSPSBF EQU   ISTCONFT+128
CONSFSBF EQU   ISTCONFT+116
CONRSV17 EQU   ISTCONFT+115
CONCRPL  EQU   CONBUFF+1
CONPPEX  EQU   CONBUFF+1
CONNPEX  EQU   CONBUFF+1
CONAPEX  EQU   CONBUFF+1
CONWPEX  EQU   CONBUFF+1
CONIOEX  EQU   CONBUFF
CONUECB  EQU   CONBUFF
CONVPEX  EQU   CONBUFF
CONVFEX  EQU   CONBUFF
CONLPEX  EQU   CONBUFF
CONLFEX  EQU   CONBUFF
CONSPEX  EQU   CONBUFF
CONSFEX  EQU   CONBUFF
CONACTV  EQU   CONSTAT
CONVRYIN EQU   CONSTAT
CONLODED EQU   CONSTAT
CONDSOPN EQU   CONSTAT
CONSTOR  EQU   CONSTAT
@NM00066 EQU   CONSTAT
@NM00065 EQU   CONSTAT
@NM00064 EQU   CONSTAT
CONIOTR  EQU   CONOPTFL
CONMODTR EQU   CONOPTFL
CONBTUTR EQU   CONOPTFL
CONBUFTR EQU   CONOPTFL
@NM00063 EQU   CONOPTFL
@NM00062 EQU   CONOPTFL
@NM00061 EQU   CONOPTFL
CONWRMST EQU   CONOPTFL
CONSYLST EQU   CONDSFLG
CONSYLIB EQU   CONDSFLG
CONSYOBJ EQU   CONDSFLG
@NM00060 EQU   CONDSFLG
@NM00059 EQU   CONDSFLG
@NM00058 EQU   CONDSFLG
CONMODFY EQU   ISTCONFT+109
CONDISPL EQU   ISTCONFT+108
CONVARY  EQU   ISTCONFT+107
CONHLTS  EQU   CONHALT
CONHLTQ  EQU   CONHALT
CONLAST  EQU   ISTCONFT+105
CONRES2  EQU   ISTCONFT+104
CONCID   EQU   ISTCONFT+102
CONBUFSZ EQU   ISTCONFT+100
CONRSV02 EQU   ISTCONFT+96
CONDCBBA EQU   ISTCONFT+92
CONDCBLA EQU   ISTCONFT+88
CONDCBOA EQU   ISTCONFT+84
CONLDPRM EQU   ISTCONFT+80
CONRDBUF EQU   ISTCONFT+76
CONSTCIB EQU   ISTCONFT+72
CONENDLA EQU   ISTCONFT+68
CONVARLA EQU   ISTCONFT+64
CONMODLA EQU   ISTCONFT+60
CONHLTLA EQU   ISTCONFT+56
CONNCSLA EQU   ISTCONFT+52
CONDISLA EQU   ISTCONFT+48
CONCIBAD EQU   ISTCONFT+44
CONFBPNM EQU   ISTCONFT+32
CONDMNM  EQU   ISTCONFT+24
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUNDSES EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00057 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00056 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00055 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00054 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00053 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00052 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRPELEN EQU   ISTRPRE+18
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
LDPTCEP  EQU   ISTLDPRM+24
LDPRSV02 EQU   ISTLDPRM+22
LDPRSV01 EQU   LDPFB2
LDPACTIF EQU   LDPFB2
LDPATACH EQU   LDPFB2
LDPFLAST EQU   LDPFB2
LDPRSV03 EQU   LDPFG
LDPPB    EQU   LDPFG
LDPFX    EQU   LDPFG
LDPDCBA  EQU   ISTLDPRM+16
LDPPDS   EQU   ISTLDPRM+8
LDPMBR   EQU   ISTLDPRM
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00051 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00050 EQU   ATCAOSM+333
@NM00049 EQU   @NM00048
ATCSNUF  EQU   @NM00048
ATCOPKL  EQU   @NM00048
ATCABEN  EQU   @NM00048
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00047 EQU   @NM00046
ATCVTMAB EQU   @NM00046
@NM00045 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00044 EQU   ISTATCVT+819
@NM00043 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00042 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00041 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00040 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00039 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00038 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00037 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
@NM00036 EQU   ACDSSFLG
ACDTSO   EQU   ACDSSFLG
ACDTPEND EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
LOKXCL   EQU   @NM00034
LOKPRY   EQU   @NM00034
@NM00035 EQU   @NM00034
@NM00033 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
MPLRSVD5 EQU   MPLCDS+7
MPLRSVD4 EQU   MPLFLGS1
MPLASID  EQU   MPLCDS+4
MPLADDR  EQU   MPLCDS
MPLRSVD2 EQU   ISTMPLT+12
MPLRSVD1 EQU   ISTMPLT+10
MPLID    EQU   ISTMPLT+4
DCERSV01 EQU   ISTDCE+12
DCETERM  EQU   ISTDCE+8
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSSYSRT EQU   ISTMPST+132
MPSQEL   EQU   ISTMPST+128
MPSTPPAB EQU   ISTMPST+88
MPSSMPAB EQU   ISTMPST+56
MPSSRB55 EQU   ISTMPST+48
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSASID  EQU   MPSFLGA+2
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSSRBO  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSTSOIR EQU   MPSRSV07
MPSTSOIW EQU   MPSRSV07
MPSID    EQU   ISTMPST
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
@NM00032 EQU   SRBSECT+40
@NM00031 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV18 EQU   ASXB+200
ASXBRV17 EQU   ASXB+196
ASXBRV16 EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00006 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00005 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00004 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00003 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00030 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00029 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00028 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00027 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00026 EQU   FLCFSA
@NM00025 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00024 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00023 EQU   FLCIOA
@NM00022 EQU   FLCMCLA+15
@NM00021 EQU   FLCMCLA+14
@NM00020 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00019 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00018 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00017 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00016 EQU   FLCPER
@NM00015 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00014 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00013 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00012 EQU   FLCPIILC
@NM00011 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00010 EQU   FLCSVILC
@NM00009 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00008 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00007 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00607 EQU   NOATCVT
@RT00748 EQU   QABERR
@RT00752 EQU   QABERR
@RT00767 EQU   RDTERR
@RT00780 EQU   RDT2ERR
@RT00792 EQU   RDT2ERR
@RT00800 EQU   RDT2ERR
@RT00814 EQU   RDT2ERR
@RT00823 EQU   RDT2ERR
@RT00834 EQU   RDT2ERR
@RT00845 EQU   RDT2ERR
@RT00859 EQU   RDT2ERR
@RC00807 EQU   RDT2END
@RT00886 EQU   RDTERR
@RC00879 EQU   @RC00871
@RT00897 EQU   RDTERR
ENDRDT1  EQU   ENDFRDTB
@RT00918 EQU   NOCONFT
@RT00943 EQU   MPLTERR
@RT00952 EQU   MPLTERR
@RT00967 EQU   MPSTERR
@RT00985 EQU   DCEERR
@RT01000 EQU   DEBERR
@RT01014 EQU   PSTERR
@RT01018 EQU   PSTERR
@RT01035 EQU   FMCBERR
@RT01049 EQU   FMCBERR
FMCBEND  EQU   DEBEND
@RT01068 EQU   DCEERR
@RT01090 EQU   MPLTERR
@RT01108 EQU   BPDERR
@RT01124 EQU   BPCBERR
@RT01133 EQU   BPCBERR
@RT01171 EQU   CRAERR
@RT01179 EQU   CRAERR
@RT01193 EQU   @RC01190
@RC01201 EQU   @RC01190
@RF01218 EQU   @RC01215
@RC01225 EQU   @RC01215
@RT01378 EQU   NCBERR
@RT01382 EQU   NCBERR
@RT01388 EQU   NCBERR
@RT01424 EQU   SCANERR
@RT01470 EQU   ERR1
@RT01485 EQU   ERR1
@RT01495 EQU   QEND
@RT01504 EQU   QEND
@RT01513 EQU   QEND
@RT01524 EQU   QEND2
@RT01535 EQU   QEND2
@RT01549 EQU   QEND2
@RT01558 EQU   QEND2
@RT01566 EQU   QEND3
@RT01577 EQU   QEND3
@RT01587 EQU   QEND3
@RT01603 EQU   QEND2
@RT01615 EQU   QEND
@ENDDATA EQU   *
         END   ISTRAFD1,(C'PLS0339',0603,78111)
