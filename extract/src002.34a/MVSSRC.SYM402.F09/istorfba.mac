         TITLE 'ISTORFBA:  SMS BUFFER ALLOCATION ROUTINE  VS2          *
                        '
ISTORFBA CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTORFBA  78.158'                                 0001
         DROP  @15
@PROLOG  BALR  @10,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@10                                         0001
*   R5=R2;                          /* SAVE INPUT R2         @ZA30526*/
         LR    R5,R2                                               0209
*/* SAVE CALLER'S PSW KEY AND GET UNDER VTAM KEY             @ZA30526*/
*                                                                  0210
*   DO;                             /* MODESET SAVEKEY(R2)         0210
*                                      EXTKEY(VTAM)                  */
*     RESPECIFY                                                    0211
*      (GPR02F) RESTRICTED;                                        0211
*     IPK;                          /* SAVE CURRENT PSW KEY          */
         IPK                                                       0212
*     SPKA(96);                     /* SET PSW KEY                   */
         LA    @15,96                                              0213
         SPKA  0(@15)                                              0213
*     R2=GPR02F;                                                   0214
*     RESPECIFY                                                    0215
*      (GPR02F) UNRESTRICTED;                                      0215
*   END;                            /* MODESET SAVEKEY(R2)         0216
*                                      EXTKEY(VTAM)          @ZA30526*/
*   SLL(R2,24);                     /* SHIFT CALLER'S KEY TO HIGH  0217
*                                      ORDER BYTE            @ZA30526*/
         SLL   R2,24                                               0217
*   R14=(R14&'00FFFFFF'X)×R2;       /* SAVE CALLER'S KEY IN HIGH BYTE
*                                      OF R14                @ZA30526*/
         LR    @15,R14                                             0218
         N     @15,@CF02234                                        0218
         OR    @15,R2                                              0218
         LR    R14,@15                                             0218
*   R2=R5;                          /* RESTORE INPUT R2      @ZA30526*/
         LR    R2,R5                                               0219
*   RFY                                                            0220
*     R5 UNRSTD;                    /*                       @ZA30526*/
*   IF CBIDSW<0                     /* THIS A CBID REQUEST           */
*     THEN                          /* YES                           */
         LTR   CBIDSW,CBIDSW                                       0221
         BNM   @RF00221                                            0221
*TR01:                                                             0222
*     DO;                                                          0222
TR01     DS    0H                                                  0223
*       RFY                                                        0223
*        (R9PREFIX) RSTD;           /*                       @Z40GKF6*/
*       R9PREFIX=R4;                /* GET CBID INDEX        @Z40GKF6*/
         LR    R9PREFIX,R4                                         0224
*       SLL(R9PREFIX,24);           /* GET INDEX IN HIGH BYTE      0225
*                                                            @Z40GKF6*/
         SLL   R9PREFIX,24                                         0225
*       R9PREFIX=R9PREFIX×ALLOCATE; /* TURN ON ALLOC         @Z40GKF6*/
         O     R9PREFIX,@CF01964                                   0226
*       CBIDREG=ADDR(BPDCBID)+(R4-1)*8;                            0227
         LA    @15,BPDCBID(,BPDTYREG)                              0227
         LR    @08,R4                                              0227
         BCTR  @08,0                                               0227
         SLA   @08,3                                               0227
         ALR   @15,@08                                             0227
         LR    CBIDREG,@15                                         0227
*       BPCBREG=CBIDREG->CBIDPCB;                                  0228
         L     BPCBREG,CBIDPCB(,CBIDREG)                           0228
*       REQKREG=1;                  /* ONE BUFF NEEDED FOR CBID      */
         LA    REQKREG,1                                           0229
*     END TR01;                                                    0230
*   ELSE                            /* NO, MUST BE FXBUF/PGBUF       */
*ELS01:                                                            0231
*     DO;                                                          0231
         B     @RC00221                                            0231
@RF00221 DS    0H                                                  0231
ELS01    DS    0H                                                  0232
*       R9PREFIX=ALLOCATE;          /* TURN ON ALLOCATE SWITCH     0232
*                                                            @Z40GKF6*/
         L     R9PREFIX,@CF01964                                   0232
*       RFY                                                        0233
*         R7 RSTD;                                                 0233
*       R7=R4;                      /* SAVE DATA COUNT OR BUFFER NUM
*                                                            @Z40GKF6*/
         LR    R7,R4                                               0234
*       BPCBREG=R2;                 /* GET BPCB POINTER FORM REG 2   */
         LR    BPCBREG,R2                                          0235
*       BPDTYREG=BPCBREG->BPCBPDTY; /* GET DIRECTORY ADR     @Z40GKF6*/
         L     BPDTYREG,BPCBPDTY(,BPCBREG)                         0236
*       RFY                                                        0237
*        (R15HSIZE) RSTD;           /*                       @Z40GKF6*/
*       R15HSIZE=R3&LO2BYT;         /*                       @Z40GKF6*/
         LR    R15HSIZE,R3                                         0238
         N     R15HSIZE,@CF02230                                   0238
*       REQKREG=R15HSIZE+8;         /* GET HEADER SIZE +8 BYTES (8 0239
*                                      BYTES FOR IO BUFFER HEADER  0239
*                                                            @ZM33041*/
         LA    REQKREG,8                                           0239
         ALR   REQKREG,R15HSIZE                                    0239
*       RFY                                                        0240
*        (R15HSIZE) UNRSTD;         /*                       @Z40GKF6*/
*       IF REQKREG>BPCBBSIZ-16      /* CHECK SIZE REQUESTED  @ZM33041*/
*         THEN                                                     0241
         LH    @15,BPCBBSIZ(,BPCBREG)                              0241
         SL    @15,@CF00127                                        0241
         CR    REQKREG,@15                                         0241
         BNH   @RF00241                                            0241
*TR02:                                                             0242
*         DO;                                                      0242
TR02     DS    0H                                                  0243
*           RFY                                                    0243
*            (RC) RSTD;             /*                       @Z40GKF6*/
*           RC=12;                  /* HEADER SIZE REQUESTED TOO   0244
*                                      LARGE                         */
         LA    RC,12                                               0244
*           R10=ZERO;               /* ZERO BASE REG FOR RECOVERY  0245
*                                                            @ZM33611*/
         SLR   R10,R10                                             0245
*           R2=R14;                 /* GET CALLER'S KEY      @ZA32835*/
         LR    R2,R14                                              0246
*           SRL(R2,24);             /* SHIFT TO LOW BYTE     @ZA32835*/
         SRL   R2,24                                               0247
*           DO;                     /* MODESET KEYADDR(R2)           */
*             SPKA(R2);             /* SET PSW KEY                   */
         SPKA  0(R2)                                               0249
*           END;                    /* MODESET KEYADDR(R2) RESTORE 0250
*                                      CALLER'S KEY          @ZA32835*/
*           GO TO R14;              /* RETURN TO CALLER      @ZM34583*/
         BR    R14                                                 0251
*           RFY                                                    0252
*            (RC) UNRSTD;           /*                       @Z40GKF6*/
*         END TR02;                                                0253
*       ELSE                                                       0254
*ELS02:                                                            0254
*         DO;                                                      0254
@RF00241 DS    0H                                                  0254
ELS02    DS    0H                                                  0255
*           IF(R3&BUFNUMON)=0       /* DOES R3 CONTAIN DATA COUNT    */
*             THEN                  /*                       @Z40GKF6*/
         SLR   @15,@15                                             0255
         LR    @08,R3                                              0255
         N     @08,@CF01094                                        0255
         CLR   @08,@15                                             0255
         BNE   @RF00255                                            0255
*             DO;                   /* YES                   @Z40GKF6*/
*                                                                  0256
*               /*****************************************************/
*               /*                                                   */
*               /* CALCULATE NUMB BUFFERS THIS POOL ARE NEEDED       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0257
*               REQKREG=BPCBBSIZ-REQKREG;/* GET BUF SIZ-HDR  @ZM33041*/
         LH    @08,BPCBBSIZ(,BPCBREG)                              0257
         SLR   @08,REQKREG                                         0257
         LR    REQKREG,@08                                         0257
*               RFY                                                0258
*                 R6 RSTD;                                         0258
*               R6=0;               /* CLEAR R6 FOR DIVIDE, R7 HAS 0259
*                                      BEEN PREVIOUSLY SET UP        */
         LR    R6,@15                                              0259
*               GEN REFS(R6,R7,REQKREG) SETS(R6,R7);               0260
                 DR    R6,REQKREG
*               IF R6^=0            /* IS THERE ANY REMAINDER        */
*                 THEN              /* YES                           */
         LTR   R6,R6                                               0261
         BZ    @RF00261                                            0261
*TR03:                                                             0262
*                 R7=R7+1;          /* ADD ONE TO ROUND UP   @Z40GKF6*/
TR03     AL    R7,@CF00067                                         0262
*/*ELS03                                                             */
*                                                                  0263
*               ELSE                                               0263
*                 ;                 /* NO REMAINDER, DONT ROUND      */
@RF00261 DS    0H                                                  0264
*               RFY                                                0264
*                (R6) UNRSTD;       /*                       @Z40GKF6*/
*             END;                                                 0265
*           ELSE                                                   0266
*             ;                     /* BUFFER COUNT IS PARAMETER   0266
*                                                            @Z40GKF6*/
@RF00255 DS    0H                                                  0267
*           REQKREG=R7;             /* R7 IS IN ANY CASE BUF COUNT 0267
*                                                            @Z40GKF6*/
         LR    REQKREG,R7                                          0267
*           RFY                                                    0268
*            (R7) UNRSTD;           /*                       @Z40GKF6*/
*         END ELS02;                /*                       @Z40GKF6*/
*     END ELS01;                    /*                       @Z40GKF6*/
*   IF                              /*                       @ZA28592*/
*       (REQKREG>BPCBTOTL)×         /* ASK FOR MORE BUFFERS  @ZA28592*/
*       (REQKREG^>0)                /* THAN IN POOL          @ZA29969*/
*     THEN                          /*                       @ZA28592*/
@RC00221 CH    REQKREG,BPCBTOTL(,BPCBREG)                          0271
         BH    @RT00271                                            0271
         LTR   REQKREG,REQKREG                                     0271
         BP    @RF00271                                            0271
@RT00271 DS    0H                                                  0272
*     DO;                           /*                       @ZA28592*/
*       R15='3100'X;                /* LOAD REG15 WITH REASON      0273
*                                                            @ZA28592*/
         L     R15,@CF02259                                        0273
*       GEN CODE(ABEND 169,,,SYSTEM);/*                      @ZA28592*/
         ABEND 169,,,SYSTEM
*     END;                          /*                       @ZA28592*/
*   ELSE                                                           0276
*     ;                             /*                       @ZA28592*/
@RF00271 DS    0H                                                  0277
*   IF(R3&SAVEON)^=0                /* DOES CALLER HAVE AN RPH     0277
*                                                            @Z40GKF6*/
*     THEN                          /* YES                   @Z40GKF6*/
         LR    @15,R3                                              0277
         N     @15,@CF01090                                        0277
         LTR   @15,@15                                             0277
         BZ    @RF00277                                            0277
*     R9PREFIX=R9PREFIX+RPHTSKID;   /* PUT TASKID IN PFX     @Z40GKF6*/
         AL    R9PREFIX,RPHTSKID(,RPHREG)                          0278
*   ELSE                                                           0279
*     ;                             /* PREFIX MASK TASKID FIELD WILL
*                                      BE ZERO               @Z40GKF6*/
@RF00277 DS    0H                                                  0280
*   IF BPCBPDTY->BPDGTR=ON THEN     /* GTRACE REQUESTED      @ZM32275*/
         L     @15,BPCBPDTY(,BPCBREG)                              0280
         TM    BPDGTR(@15),B'10000000'                             0280
         BNO   @RF00280                                            0280
*     DO;                           /* START OF INVOKE GTRACE PATH 0281
*                                                            @ZM32275*/
*GTRACE:                                                           0282
*       ;                           /*                       @ZM32275*/
GTRACE   DS    0H                                                  0283
*       RFY                                                        0283
*        (R5BPCB) RSTD;             /*                       @ZM32275*/
*       IF BPDREQMX<=BPDREQCT+1 THEN/* READY FOR GTRACE? (EVERY 1000
*                                      REQSTORES)            @ZM32275*/
         LA    @15,1                                               0284
         LH    @08,BPDREQCT(,BPDTYREG)                             0284
         ALR   @08,@15                                             0284
         CH    @08,BPDREQMX(,BPDTYREG)                             0284
         BL    @RF00284                                            0284
*         DO;                       /* START GTRACE INVOCATION     0285
*                                                            @ZM32275*/
*           R5BPCB=BPDSMPCB;        /* GET 1ST BPCB ADR      @ZM32275*/
         L     R5BPCB,BPDSMPCB(,BPDTYREG)                          0286
*           RFY                                                    0287
*             ISTBPCB BASED(R5BPCB);/*                       @ZM32275*/
*           RFY                                                    0288
*             BPCBI RSTD;           /*                       @ZM32275*/
*           DO BPCBI=1 TO BPDBPENT-1;/* GET TRACE INFO FROM BPCB   0289
*                                                            @ZM32275*/
         LR    BPCBI,@15                                           0289
         B     @DE00289                                            0289
@DL00289 DS    0H                                                  0290
*             R5BPCB=R5BPCB+LENGTH(ISTBPCB);/* GET NEW BPCB PTR    0290
*                                                            @ZM32275*/
         AL    R5BPCB,@CF02308                                     0290
*             BPDMUSE(BPCBI)=BPCBTOTL-BPCMINAV;/* MAX IN USE @Z40GKF6*/
         LR    @15,BPCBI                                           0291
         SLA   @15,3                                               0291
         LH    @08,BPCBTOTL(,R5BPCB)                               0291
         LR    @06,@08                                             0291
         SH    @06,BPCMINAV(,R5BPCB)                               0291
         STH   @06,BPDMUSE-8(@15,BPDTYREG)                         0291
*             BPDMQUE(BPCBI)=BPCBMQUE;/* GET MAX # REQ QUEUED      0292
*                                                            @Z40GKF6*/
         LH    @06,BPCBMQUE(,R5BPCB)                               0292
         STH   @06,BPDMQUE-8(@15,BPDTYREG)                         0292
*             BPDAVNO(BPCBI)=BPCBAVNO;/* GET AVAIL # OF BUFFERS    0293
*                                                            @ZM32275*/
         LH    @06,BPCBAVNO(,R5BPCB)                               0293
         STH   @06,BPDAVNO-8(@15,BPDTYREG)                         0293
*             BPCMINAV=BPCBTOTL;    /* RESET TO ZERO IN USE  @Z40GKF6*/
         STH   @08,BPCMINAV(,R5BPCB)                               0294
*             BPCBMQUE=BPCBCQUE;    /* RESET TO CURRENT QUEUED     0295
*                                                            @Z40GKF6*/
         LH    @15,BPCBCQUE(,R5BPCB)                               0295
         STH   @15,BPCBMQUE(,R5BPCB)                               0295
*           END;                    /* END OF GET TRACE INFO PATH  0296
*                                                            @ZM32275*/
         AL    BPCBI,@CF00067                                      0296
@DE00289 LH    @15,BPDBPENT(,BPDTYREG)                             0296
         BCTR  @15,0                                               0296
         CR    BPCBI,@15                                           0296
         BNH   @DL00289                                            0296
*           RFY                                                    0297
*             BPCBI UNRSTD;         /*                       @ZM32275*/
*           RFY                                                    0298
*            (R6SAVR1) RSTD;        /*                       @ZM32275*/
*           R6SAVR1=R1;             /* SAVE RPH ADDRESS ACROSS GTRACE
*                                                            @ZM32275*/
         LR    R6SAVR1,R1                                          0299
*           R1=ADDR(BPDPARM);       /* GET ADDR GTRACE PARM INFO   0300
*                                                            @ZM32275*/
         LA    R1,BPDPARM(,BPDTYREG)                               0300
*           GENERATE(GTRACE ID=ISTRPEID,MF=(E,(1)),FID=X'FD');/*   0301
*                                      FID=FD                @ZA32763*/
         GTRACE ID=ISTRPEID,MF=(E,(1)),FID=X'FD'
*           R1=R6SAVR1;             /* RESTORE RPH ADDRESS   @ZM32275*/
         LR    R1,R6SAVR1                                          0302
*           RFY                                                    0303
*            (R6SAVR1) UNRSTD;      /*                       @ZM32275*/
*           BPDREQCT=ZERO;          /* RESET COUNT OF REQSTORES    0304
*                                                            @ZM32275*/
         SLR   @15,@15                                             0304
         STH   @15,BPDREQCT(,BPDTYREG)                             0304
*         END;                      /* END OF INVOKE GTRACE PATH   0305
*                                                            @ZM32275*/
*       ELSE                                                       0306
*         DO;                       /* DO NOT INVOKE GTRACE THIS TIME
*                                                            @ZM32275*/
         B     @RC00284                                            0306
@RF00284 DS    0H                                                  0307
*           BPDREQCT=BPDREQCT+1;    /* INCREMENT COUNT OF REQSTORES
*                                                            @ZM32275*/
         LA    @15,1                                               0307
         AH    @15,BPDREQCT(,BPDTYREG)                             0307
         STH   @15,BPDREQCT(,BPDTYREG)                             0307
*         END;                      /* END OF DO NOT INVOKE GTRACE 0308
*                                      THIS TIME PATH        @ZM32275*/
*     END;                          /* END OF GTRACE PATH    @ZM32275*/
@RC00284 DS    0H                                                  0310
*   RFY                                                            0310
*     ISTBPDTY BASED(BPDTYREG);     /*                       @ZM32275*/
@RF00280 DS    0H                                                  0311
*   RFY                                                            0311
*     ISTBPCB BASED(BPCBREG);       /*                       @ZM32275*/
*   RFY                                                            0312
*    (R5BPCB,                                                      0312
*     R8BPD) UNRSTD;                /*                       @ZM32275*/
*   RFY                                                            0313
*    (COMPREG,                                                     0313
*     SWAPREG) RSTD;                /*                       @ZM31975*/
*CSFAIL0:                                                          0314
*   IF BPCBLOW1=ON&                 /* IS THIS SLOWDOWN STATE AND    */
*       (R3&PRIORON)=0              /* NOT A PRIORITY REQUEST        */
*     THEN                          /* YES                           */
CSFAIL0  TM    BPCBLOW1(BPCBREG),B'01000000'                       0314
         BNO   @RF00314                                            0314
         LR    @15,R3                                              0314
         N     @15,@CF01966                                        0314
         LTR   @15,@15                                             0314
         BZ    @RT00314                                            0314
*TR05:                                                             0315
*     GOTO ELS06;                                                  0315
*   ELSE                            /* NO                            */
*ELS05:                                                            0316
*     DO;                                                          0316
@RF00314 DS    0H                                                  0316
ELS05    DS    0H                                                  0317
*       COMPREG=BPCBCDS2;           /* GET AVAILABLE NUMBER OF     0317
*                                      BUFFERS               @Z40GKF6*/
         L     COMPREG,BPCBCDS2(,BPCBREG)                          0317
*       IF REQKREG<=(COMPREG&LO2BYT)/* ENOUGH BUFFERS        @Z40GKF6*/
*         THEN                      /* YES                   @Z40GKF6*/
         LR    @15,COMPREG                                         0318
         N     @15,@CF02230                                        0318
         CR    REQKREG,@15                                         0318
         BH    @RF00318                                            0318
*         DO;                       /* DECREASE BUFFER COUNT @Z40GKF6*/
*           SWAPREG=COMPREG-REQKREG;/*                       @Z40GKF6*/
         LR    SWAPREG,COMPREG                                     0320
         SLR   SWAPREG,REQKREG                                     0320
*           CS(COMPREG,SWAPREG,BPCBCDS2);/*                  @Z40GKF6*/
         CS    COMPREG,@08,BPCBCDS2(BPCBREG)                       0321
*           BC(FAIL,CSFAIL0);       /* TEST AGAIN FOR SLOWDOWN     0322
*                                                            @Z40GKF6*/
         BC    7,CSFAIL0                                           0322
*CSFAIL1:                                                          0323
*           IF BPCBAVNO<BPCBTHRE    /* SHOULD WE ENTER SLOWDOWN    0323
*                                                            @Z40GKF6*/
*             THEN                  /* YES                   @Z40GKF6*/
CSFAIL1  LH    @15,BPCBAVNO(,BPCBREG)                              0323
         CH    @15,BPCBTHRE(,BPCBREG)                              0323
         BNL   @RF00323                                            0323
*             DO;                   /* TURN ON SLOWDOWN FLAG @Z40GKF6*/
*               COMPREG=BPCBCDS1;   /* GET FLAGS             @Z40GKF6*/
         L     COMPREG,BPCBCDS1(,BPCBREG)                          0325
*               SWAPREG=COMPREG×LOW1ON;/* SLOWDOWN ON        @Z40GKF6*/
         LR    SWAPREG,COMPREG                                     0326
         O     SWAPREG,@CF01966                                    0326
*               CS(COMPREG,SWAPREG,BPCBCDS1);/* SWAP FLAG ON @Z40GKF6*/
         CS    COMPREG,@08,BPCBCDS1(BPCBREG)                       0327
*               BC(FAIL,CSFAIL1);   /* RECHECK AVAILABILITY  @Z40GKF6*/
         BC    7,CSFAIL1                                           0328
*             END;                  /* END TURN ON SLOWDOWN FLAG   0329
*                                                            @Z40GKF6*/
*           ELSE                                                   0330
*             ;                     /* POOL IS NOT IN SLOWDOWN AFTER
*                                      DECREASE              @A40GKF6*/
@RF00323 DS    0H                                                  0331
*/* HERE CHECK THE MAXIMUM NUMBER OF BUFFERS IN USE - DCR 8057 TRACE */
*                                                                  0331
*           IF BPCBPDTY->BPDGTR=ON THEN/* Q. TRACE REQUESTED @Z40GKCS*/
         L     @15,BPCBPDTY(,BPCBREG)                              0331
         TM    BPDGTR(@15),B'10000000'                             0331
         BNO   @RF00331                                            0331
*             DO;                   /* YES, UPDATE BPCBMUSE IF     0332
*                                      NECESSARY             @Z40GKCS*/
*               SWAPREG=BPCBAVNO;   /* CURRENT BUF AVAILABILITY    0333
*                                                            @Z40GKF6*/
         LH    SWAPREG,BPCBAVNO(,BPCBREG)                          0333
*               COMPREG=BPCBMUSE;   /* MINIMUM AVAILABILITY  @Z40GKF6*/
         L     COMPREG,BPCBMUSE(,BPCBREG)                          0334
*USFAIL1:                                                          0335
*               IF SWAPREG<COMPREG  /* IF CURRENT LOWER      @Z40GKF6*/
*                 THEN                                             0335
USFAIL1  CR    SWAPREG,COMPREG                                     0335
         BNL   @RF00335                                            0335
*                 DO;               /* SET NEW MINIMUM       @Z40GKF6*/
*                   CS(COMPREG,SWAPREG,BPCBMUSE);/*          @Z40GKF6*/
         CS    COMPREG,@08,BPCBMUSE(BPCBREG)                       0337
*                   BC(FAIL,USFAIL1);/*                      @Z40GKF6*/
         BC    7,USFAIL1                                           0338
*                   RFY                                            0339
*                    (COMPREG,                                     0339
*                     SWAPREG) UNRSTD;/*                     @Z40GKF6*/
*                 END;              /*                       @Z40GKF6*/
*               ELSE                                               0341
*                 ;                 /*                       @Z40GKF6*/
@RF00335 DS    0H                                                  0342
*             END;                  /*                       @Z40GKCS*/
*         END;                      /* END OF PATH TO DECREMENT AVAIL
*                                      # OF BUFS             @ZM31975*/
*                                                                  0344
*/********************************************************************/
*/*                   ENQUEUE SEGMENT                                */
*/********************************************************************/
*                                                                  0344
*       ELSE                        /* HERE, IF NOT ENUF BUFFS AVAIL */
*ELS06:                                                            0344
*         DO;                                                      0344
         B     @RC00318                                            0344
@RF00318 DS    0H                                                  0344
ELS06    DS    0H                                                  0345
*           IF(R3&ENQON)=0          /* IS QUEUING REQUESTED          */
*/*TR08                                                              */
*                                                                  0345
*             THEN                                                 0345
         LR    @15,R3                                              0345
         N     @15,@CF01968                                        0345
         LTR   @15,@15                                             0345
         BZ    @RT00345                                            0345
*             ;                     /* NO                            */
*           ELSE                    /* YES                           */
*ELS08:                                                            0347
*             DO;                   /* SWAP RPH ONTO APPROP QUEUE    */
ELS08    DS    0H                                                  0348
*/* HERE INCREMENT THE NUMBER OF REQUESTS QUEUED AND CHECK MAX       */
*/*                   DCR 8057 - SMS TRACE                           */
*                                                                  0348
*               RFY                                                0348
*                (COMPREG,                                         0348
*                 SWAPREG) RSTD;    /*                       @Z40GKF6*/
*               COMPREG=BPCBQREQ;   /* CURRENT QUEUED REQUESTS     0349
*                                                            @Z40GKF6*/
         L     COMPREG,BPCBQREQ(,BPCBREG)                          0349
*               SWAPREG=COMPREG+1;  /* UPDATED QUEUED REQUESTS     0350
*                                                            @Z40GKF6*/
         LA    SWAPREG,1                                           0350
         ALR   SWAPREG,COMPREG                                     0350
*               CS(COMPREG,SWAPREG,BPCBQREQ);/*              @Z40GKF6*/
         CS    COMPREG,@08,BPCBQREQ(BPCBREG)                       0351
*               BC(FAIL,ELS08);     /*                       @Z40GKF6*/
         BC    7,ELS08                                             0352
*               IF BPCBMQUE<BPCBCQUE/* IS CURRENT MORE THAN MAX    0353
*                                                            @Z40GKF6*/
*                 THEN              /* YES                   @Z40GKF6*/
         LH    @15,BPCBCQUE(,BPCBREG)                              0353
         CH    @15,BPCBMQUE(,BPCBREG)                              0353
         BNH   @RF00353                                            0353
*                 BPCBMQUE=BPCBCQUE;/* SET NEW MAXIMUM       @Z40GKF6*/
         STH   @15,BPCBMQUE(,BPCBREG)                              0354
*               ELSE                                               0355
*                 ;                 /*                       @Z40GKF6*/
@RF00353 DS    0H                                                  0356
*               CRAMASK=R9PREFIX;   /* STORE PREFIX MASK IN CRA    0356
*                                                            @Z40GKF6*/
         L     @15,RPHCRR(,RPHREG)                                 0356
         ST    R9PREFIX,CRAMASK(,@15)                              0356
*               CRAHSIZ=R3&LO2BYT;  /* STORE HDRSIZE IN CRA  @Z40GKF6*/
         LR    @07,R3                                              0357
         N     @07,@CF02230                                        0357
         ST    @07,CRAHSIZ(,@15)                                   0357
*               R3=(R3&HI2BYT)×REQKREG;/* FLAGS & BUFNO IN R3      0358
*                                                            @Z40GKF6*/
         LR    @15,R3                                              0358
         N     @15,@CF02228                                        0358
         OR    @15,REQKREG                                         0358
         LR    R3,@15                                              0358
*               RPHSRPRM=R3;        /* WE STORE IN RPH-NOT REQSTORE
*                                                            @OZ03509*/
         ST    R3,RPHSRPRM(,RPHREG)                                0359
*               IF(R3&PRIORON)^=0   /* IS THIS A PRIORITY REQUEST    */
*                 THEN              /* YES                           */
         LR    @15,R3                                              0360
         N     @15,@CF01966                                        0360
         LTR   @15,@15                                             0360
         BZ    @RF00360                                            0360
*TR09:                                                             0361
*                 DO;               /* SWAP ONTO PRIORITY QUEUE      */
TR09     DS    0H                                                  0362
*                   COMPREG=BPCBRPHA;                              0362
         L     COMPREG,BPCBRPHA(,BPCBREG)                          0362
*CSFAIL3:                                                          0363
*                   RPHRPHA=COMPREG×RPHGON;/* CHAIN RPH      @ZM32672*/
CSFAIL3  LR    @15,COMPREG                                         0363
         O     @15,@CF01964                                        0363
         ST    @15,RPHRPHA(,RPHREG)                                0363
*                   CS(COMPREG,RPHREG,BPCBRPHA);                   0364
         CS    COMPREG,@01,BPCBRPHA(BPCBREG)                       0364
*                   BC(FAIL,CSFAIL3);                              0365
         BC    7,CSFAIL3                                           0365
*                 END TR09;                                        0366
*               ELSE                /* NO                            */
*ELS09:                                                            0367
*                 DO;               /* SWAP ONTO NORMAL QUEUE        */
         B     @RC00360                                            0367
@RF00360 DS    0H                                                  0367
ELS09    DS    0H                                                  0368
*                   COMPREG=BPCBRPHB;                              0368
         L     COMPREG,BPCBRPHB(,BPCBREG)                          0368
*CSFAIL4:                                                          0369
*                   RPHRPHA=COMPREG×RPHGON;/* CHAIN RPH      @ZM32672*/
CSFAIL4  LR    @15,COMPREG                                         0369
         O     @15,@CF01964                                        0369
         ST    @15,RPHRPHA(,RPHREG)                                0369
*                   CS(COMPREG,RPHREG,BPCBRPHB);                   0370
         CS    COMPREG,@01,BPCBRPHB(BPCBREG)                       0370
*                   BC(FAIL,CSFAIL4);                              0371
         BC    7,CSFAIL4                                           0371
*                 END ELS09;                                       0372
*               RFY                                                0373
*                (COMPREG,                                         0373
*                 SWAPREG) UNRSTD;  /*                       @Z40GKF6*/
@RC00360 DS    0H                                                  0374
*               IF BPCBLOW1=OFF THEN/* OUT OF SLOWDOWN NOW   @ZM32231*/
         TM    BPCBLOW1(BPCBREG),B'01000000'                       0374
         BNZ   @RF00374                                            0374
*                 DO;               /* SCHEDULE ORFBQ TO GET JUST QED
*                                      RPHS SATISFIED        @ZM32231*/
*                   RFY                                            0376
*                    (R5RPH,                                       0376
*                     SWAPREG) RSTD;/*                       @ZM32231*/
*                   R5RPH=RPHREG;   /* SAVE RPH ADDR IN REG 5      0377
*                                                            @ZM32231*/
         LR    R5RPH,RPHREG                                        0377
*                   SRBPTR=BPCBSRBA;/* GET GATE WORD         @ZM32987*/
         L     SRBPTR,BPCBSRBA-1(,BPCBREG)                         0378
         LA    SRBPTR,0(,SRBPTR)                                   0378
*                   SWAPREG=SRBPTR×SRBGON;/* TURN ON GATE BIT FOR CS
*                                                            @ZM32231*/
         LR    SWAPREG,SRBPTR                                      0379
         O     SWAPREG,@CF01964                                    0379
*                   CS(SRBPTR,SWAPREG,BPCBRBLK);/* GET IT ON @ZM32231*/
         CS    SRBPTR,@08,BPCBRBLK(BPCBREG)                        0380
*                   BC(FAIL,GETRPH);/* SOMEBODY BEAT US TO IT      0381
*                                                            @ZM32231*/
         BC    7,GETRPH                                            0381
*                   DO;             /* MODESET SAVEKEY(R2KEY)      0382
*                                      EXTKEY(ZERO)                  */
*                     RESPECIFY                                    0383
*                      (GPR02F) RESTRICTED;                        0383
*                     IPK;          /* SAVE CURRENT PSW KEY          */
         IPK                                                       0384
*                     SPKA(0);      /* SET PSW KEY                   */
         SLR   @15,@15                                             0385
         SPKA  0(@15)                                              0385
*                     R2KEY=GPR02F;                                0386
*                     RESPECIFY                                    0387
*                      (GPR02F) UNRESTRICTED;                      0387
*                   END;            /* MODESET SAVEKEY(R2KEY)      0388
*                                      EXTKEY(ZERO) GET KEY FOR SCHED
*                                                            @ZM32231*/
*                   GEN(SCHEDULE SRB=(SRBPTR),SCOPE=LOCAL)         0389
*                   REFS(SRBPTR,CVTLSMQ,SRBFLNK,SRBSECT);/*  @ZM32231*/
         SCHEDULE SRB=(SRBPTR),SCOPE=LOCAL
*                   DO;             /* MODESET KEYADDR(R2KEY)        */
*                     SPKA(R2KEY);  /* SET PSW KEY                   */
         SPKA  0(R2KEY)                                            0391
*                   END;            /* MODESET KEYADDR(R2KEY) BACK TO
*                                      VTAM KEY              @ZM32231*/
*GETRPH:                                                           0393
*                   RPHREG=R5RPH;   /* GET RPH ADDR IN REG 1 @ZM32231*/
GETRPH   LR    RPHREG,R5RPH                                        0393
*                   RFY                                            0394
*                    (R5RPH,                                       0394
*                     SWAPREG) UNRSTD;/*                     @ZM32231*/
*                 END;              /* END OF SCHED ORFBQ PATH     0395
*                                                            @ZM32231*/
*             END ELS08;                                           0396
@RF00374 DS    0H                                                  0397
*           RFY                                                    0397
*            (RC) RSTD;             /*                       @Z40GKF6*/
@RT00345 DS    0H                                                  0398
*           RC=8;                   /* INDICATE REQUEST IS QUEUED    */
         LA    RC,8                                                0398
*           R10=ZERO;               /* ZERO BASE REG FOR RECOVERY  0399
*                                                            @ZM33611*/
         SLR   R10,R10                                             0399
*           R2=R14;                 /* GET CALLER'S KEY      @ZA32835*/
         LR    R2,R14                                              0400
*           SRL(R2,24);             /* SHIFT TO LOW BYTE     @ZA32835*/
         SRL   R2,24                                               0401
*           DO;                     /* MODESET KEYADDR(R2)           */
*             SPKA(R2);             /* SET PSW KEY                   */
         SPKA  0(R2)                                               0403
*           END;                    /* MODESET KEYADDR(R2) RESTORE 0404
*                                      CALLER'S KEY          @ZA32835*/
*           GO TO R14;              /* RETURN TO CALLER      @ZM33611*/
         BR    R14                                                 0405
*           RFY                                                    0406
*            (RC) UNRSTD;           /*                       @Z40GKF6*/
*         END ELS06;                                               0407
*     END ELS05;                                                   0408
@RC00318 DS    0H                                                  0409
*   RFY                                                            0409
*     SWAPREG UNRSTD;                                              0409
*                                                                  0410
*/***************************************************                */
*/*                ALLOC SEGMENT                                     */
*/***************************************************                */
*                                                                  0410
*   RFY                                                            0410
*    (R15PRFIX) RSTD;               /*                       @Z40GKF6*/
*   R15PRFIX=R9PREFIX;              /* SAVE PREFIX MASK      @Z40GKF6*/
         LR    R15PRFIX,R9PREFIX                                   0411
*   RFY                                                            0412
*    (R9PREFIX) UNRSTD;             /*                       @Z40GKF6*/
*   RFY                                                            0413
*    (COMPEVEN,                                                    0413
*     COMPODD,                                                     0413
*     SWAPEVEN,                                                    0413
*     SWAPODD) RSTD;                                               0413
*   R10F=(CBIDSW&'80000000'X)×R10;  /* SAVE CBID INDICATOR           */
         LR    @05,CBIDSW                                          0414
         N     @05,@CF01964                                        0414
         OR    @05,R10                                             0414
         LR    R10F,@05                                            0414
*   LASTBUF=0;                                                     0415
*                                                                  0415
         SLR   LASTBUF,LASTBUF                                     0415
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING LOOP REMOVES ONE BUFFER AT A TIME UNTIL THE     */
*   /* REQUEST IS SATISFIED (REQKREG=0). THE BUFFERS ARE REVERSED    */
*   /* CHAINED AS THEY ARE TAKEN OFF THE AVAILABLE QUEUE, THAT IS,   */
*   /* THE LAST BUFFER TAKEN OFF POINTS THE PREVIOUS BUFFER TAKEN OFF*/
*   /* +8 AND SO ON. THE ADDRESS OF THE LAST BUFFER TAKEN OFF IS     */
*   /* RETURNED TO THE CALLER.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*DOW01:                                                            0416
*   DO WHILE(REQKREG>0);                                           0416
DOW01    B     @DE00416                                            0416
@DL00416 DS    0H                                                  0417
*     LM(COMPEVEN,COMPODD,BPCBCDS); /* PREPARE TO ALLOC      @ZM32231*/
         LM    COMPEVEN,COMPODD,BPCBCDS(BPCBREG)                   0417
*CSFAIL5:                                                          0418
*     SWAPEVEN=(COMPEVEN&HIBYTMSK)×(BFPNXCHN&LO3MSK);/* SET UP NEW 0418
*                                      CHAIN FOR CDS         @ZM32231*/
CSFAIL5  LR    SWAPEVEN,COMPEVEN                                   0418
         N     SWAPEVEN,@CF02232                                   0418
         L     @05,BFPNXCHN(,COMPEVEN)                             0418
         N     @05,@CF02234                                        0418
         OR    SWAPEVEN,@05                                        0418
*     SWAPODD=COMPODD;              /* GET RUNNING COUNT FOR CDS   0419
*                                                            @ZM32231*/
         LR    SWAPODD,COMPODD                                     0419
*     CDS(COMPEVEN,SWAPEVEN,BPCBCDS);/* GET BUF OFF          @ZM32231*/
         CDS   COMPEVEN,SWAPEVEN,BPCBCDS(BPCBREG)                  0420
*     BC(FAIL,CSFAIL5);             /* DO OVER               @ZM32231*/
         BC    7,CSFAIL5                                           0421
*     IF CLEARSW^<0                 /* IS THIS A CLEARING REQUEST    */
*/*TR10                                                              */
*                                                                  0422
*       THEN                                                       0422
         LTR   CLEARSW,CLEARSW                                     0422
         BNM   @RT00422                                            0422
*       ;                           /* NO                            */
*     ELSE                          /* YES                           */
*ELS10:                                                            0424
*       DO;                                                        0424
ELS10    DS    0H                                                  0425
*         COMPEVEN=COMPEVEN+8;      /* R6=START ADDR TO CLEAR        */
         AL    COMPEVEN,@CF00036                                   0425
*         COMPODD=BPCBBSIZ;         /* R7=LENGTH TO CLEAR            */
         LH    COMPODD,BPCBBSIZ(,BPCBREG)                          0426
*         SWAPEVEN=0;               /* SET R8 AND R9 TO ZERO FOR     */
         SLR   @05,@05                                             0427
         LR    SWAPEVEN,@05                                        0427
*         SWAPODD=0;                /* CLEARING BUF WITH MVCL        */
         LR    SWAPODD,@05                                         0428
*         MVCL(COMPEVEN,SWAPEVEN);                                 0429
         MVCL  COMPEVEN,SWAPEVEN                                   0429
*         COMPEVEN=COMPEVEN-(BPCBBSIZ+8);                          0430
         LA    @05,8                                               0430
         AH    @05,BPCBBSIZ(,BPCBREG)                              0430
         SLR   COMPEVEN,@05                                        0430
*         RFY                                                      0431
*          (SWAPEVEN,                                              0431
*           SWAPODD) UNRSTD;        /*                       @Z40GKF6*/
*       END ELS10;                                                 0432
*     BFPTSKID=R15PRFIX;            /* STORE PREFIX MASK IN PFX    0433
*                                                            @Z40GKF6*/
@RT00422 ST    R15PRFIX,BFPTSKID(,COMPEVEN)                        0433
*     IF R10F<0                     /* THIS A CBID REQUEST           */
*       THEN                        /* YES                           */
         LTR   R10F,R10F                                           0434
         BNM   @RF00434                                            0434
*TR11:                                                             0435
*       DO;                                                        0435
TR11     DS    0H                                                  0436
*         BFPCBID=ON;               /* INDICATE CBID BUFFER          */
         OI    BFPCBID(COMPEVEN),B'10000000'                       0436
*         REQKREG=0;                                               0437
         SLR   REQKREG,REQKREG                                     0437
*       END TR11;                                                  0438
*     ELSE                          /* NO, FXBUF OR PGBUF REQUEST    */
*ELS11:                                                            0439
*       DO;                                                        0439
         B     @RC00434                                            0439
@RF00434 DS    0H                                                  0439
ELS11    DS    0H                                                  0440
*         R7=R3&LO2BYT;             /* RESTORE HEADERSIZE    @Z40GKF6*/
         LR    R7,R3                                               0440
         N     R7,@CF02230                                         0440
*         BFPSIZE=BPCBBSIZ-(R7+8);  /* INIT BUFFER HDR       @Z40GKF6*/
*                                                                  0441
         LA    @05,8                                               0441
         ALR   @05,R7                                              0441
         LCR   @05,@05                                             0441
         LH    @09,BPCBBSIZ(,BPCBREG)                              0441
         ALR   @05,@09                                             0441
         STH   @05,BFPSIZE(,COMPEVEN)                              0441
*         /***********************************************************/
*         /*                                                         */
*         /* POINT THE BUFFER JUST DEQUEUED TO POINT TO THE LAST     */
*         /* BUFFER DEQUEUED (IF THIS IS THE 1ST BUFFER DEQUEUED,    */
*         /* LASTBUF WILL EQUAL ZERO).                               */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0442
*         BFPNXCHN=LASTBUF;                                        0442
         ST    LASTBUF,BFPNXCHN(,COMPEVEN)                         0442
*DUMLBL:                                                           0443
*         LASTBUF=COMPEVEN+8;       /* PREPARE FOR NEXT LOOP         */
DUMLBL   LA    LASTBUF,8                                           0443
         ALR   LASTBUF,COMPEVEN                                    0443
*         REQKREG=REQKREG-1;        /* SUBTRACT 1 FROM REQUEST       */
         BCTR  REQKREG,0                                           0444
*       END ELS11;                                                 0445
*   END DOW01;                                                     0446
@RC00434 DS    0H                                                  0446
@DE00416 SLR   @05,@05                                             0446
         CR    REQKREG,@05                                         0446
         BH    @DL00416                                            0446
*   R7=R3;                          /* SAVE INPUT PARAMETERS @Z40GKF6*/
         LR    R7,R3                                               0447
*   R3=COMPEVEN+8;                  /* PUT BUF ADDR IN R3    @Z40GKF6*/
         LA    @09,8                                               0448
         ALR   @09,COMPEVEN                                        0448
         LR    R3,@09                                              0448
*   IF(R7&SAVEON)^=0                /* DOES CALLER HAVE AN RPH     0449
*                                                            @Z40GKF6*/
*     THEN                          /* YES                   @Z40GKF6*/
         LR    @08,R7                                              0449
         N     @08,@CF01090                                        0449
         CLR   @08,@05                                             0449
         BE    @RF00449                                            0449
*     RPHSRPRM=COMPEVEN+8;          /* STORE ADDR IN RPH     @Z40GKF6*/
         ST    @09,RPHSRPRM(,RPHREG)                               0450
*   ELSE                                                           0451
*     ;                             /* NO RPH - DO NOTHING   @Z40GKF6*/
@RF00449 DS    0H                                                  0452
*   RFY                                                            0452
*    (COMPEVEN,                                                    0452
*     COMPODD) UNRSTD;              /*                       @Z40GKF6*/
*   RFY                                                            0453
*    (RC) RSTD;                     /*                       @Z40GKF6*/
*   RC=0;                           /* INDICATE SUCCESSFUL REQUEST   */
         SLR   RC,RC                                               0454
*   IF BPCBLOW1=ON                  /* THIS POOL IN SLOWDOWN STATE   */
*     THEN                          /* YES                           */
         TM    BPCBLOW1(BPCBREG),B'01000000'                       0455
         BNO   @RF00455                                            0455
*TR12:                                                             0456
*     RC=4;                         /* INDICATE THRESHOLD EXCEEDED   */
TR12     LA    RC,4                                                0456
*/*ELS12                                                             */
*                                                                  0457
*   ELSE                                                           0457
*     ;                                                            0457
@RF00455 DS    0H                                                  0458
*   R10=ZERO;                       /* ZERO BASE REG FOR RECOVERY  0458
*                                                            @ZM33611*/
         SLR   R10,R10                                             0458
*   R2=R14;                         /* GET CALLER'S KEY      @ZA30526*/
         LR    R2,R14                                              0459
*   SRL(R2,24);                     /* SHIFT TO LOW BYTE     @ZA30526*/
         SRL   R2,24                                               0460
*   DO;                             /* MODESET KEYADDR(R2)           */
*     SPKA(R2);                     /* SET PSW KEY                   */
         SPKA  0(R2)                                               0462
*   END;                            /* MODESET KEYADDR(R2) RESTORE 0463
*                                      CALLER'S KEY          @ZA30526*/
*   GO TO R14;                      /* RETURN TO CALLER      @ZM33611*/
         BR    R14                                                 0464
*   RFY                                                            0465
*    (RC) UNRSTD;                   /*                       @Z40GKF6*/
*   END ISTORFBA                                                   0466
*                                                                  0466
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*                                                                  0466
*       ;                                                          0466
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTORFBA CSECT
         DS    0F
@CF00067 DC    F'1'
@CF00036 DC    F'8'
@CF00127 DC    F'16'
@CF02308 DC    F'112'
@CF01090 DC    XL4'08000000'
@CF01094 DC    XL4'04000000'
@CF01964 DC    XL4'80000000'
@CF01966 DC    XL4'40000000'
@CF01968 DC    XL4'20000000'
@CF02228 DC    XL4'FFFF0000'
@CF02230 DC    XL4'0000FFFF'
@CF02232 DC    XL4'FF000000'
@CF02234 DC    XL4'00FFFFFF'
@CF02259 DC    XL4'3100'
@DATD    DSECT
         DS    0D
LCPBPTR  DS    A
BPEPTR   DS    A
BPDPTR   DS    A
BPCBPTR  DS    A
BFPFXPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTORFBA CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SRBPTR   EQU   @01
RPHPTR   EQU   @01
GPR02F   EQU   @02
REQKREG  EQU   @00
R1       EQU   @01
RPHREG   EQU   @01
R2KEY    EQU   @02
BPDTYREG EQU   @02
R2       EQU   @02
CBIDSW   EQU   @02
LASTBUF  EQU   @02
R3       EQU   @03
CLEARSW  EQU   @03
R4       EQU   @04
CBIDREG  EQU   @04
BPCBREG  EQU   @04
R5BPCB   EQU   @05
R5RPH    EQU   @05
R5       EQU   @05
R6SAVR1  EQU   @06
R6       EQU   @06
COMPREG  EQU   @06
COMPEVEN EQU   @06
R7       EQU   @07
COMPODD  EQU   @07
BPCBI    EQU   @07
R8BPD    EQU   @08
SWAPREG  EQU   @08
SWAPEVEN EQU   @08
SWAPODD  EQU   @09
R9PREFIX EQU   @09
R10      EQU   @10
R10F     EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RC       EQU   @15
R15HSIZE EQU   @15
R15PRFIX EQU   @15
GPR02P   EQU   @02
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CVTPTR   EQU   16
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SRBSECT  EQU   0
SRBFLNK  EQU   SRBSECT+4
SRBFLC   EQU   SRBSECT+12
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHCVFLG EQU   RPHRPHA
RPHGATE  EQU   RPHCVFLG
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRAHSIZ  EQU   CRASVC+60
CRAMASK  EQU   CRASVC+64
CRABUFA  EQU   CRASVC+68
ISTBPENT EQU   0
BPEFLAGS EQU   ISTBPENT+4
ISTBPDTY EQU   0
BPDHDR   EQU   ISTBPDTY
BPDBPENT EQU   BPDHDR
BPDSMPCB EQU   BPDHDR+28
BPDFLAG  EQU   BPDHDR+40
BPDGTR   EQU   BPDFLAG
BPDREQCT EQU   BPDHDR+44
BPDREQMX EQU   BPDHDR+46
BPDPARM  EQU   BPDHDR+48
BPDTRACE EQU   BPDHDR+56
BPDMUSE  EQU   BPDTRACE
BPDMQUE  EQU   BPDTRACE+2
BPDAVNO  EQU   BPDTRACE+4
BPDCBID  EQU   ISTBPDTY+336
ISTBPCB  EQU   0
BPCBFLAG EQU   ISTBPCB
BPCBFEXT EQU   ISTBPCB+4
BPCBRPHA EQU   ISTBPCB+16
BPCBRPHB EQU   ISTBPCB+20
BPCBPDTY EQU   ISTBPCB+24
BPCBBSIZ EQU   ISTBPCB+32
BPCBTOTL EQU   ISTBPCB+34
BPCBTHRE EQU   ISTBPCB+36
BPCBQREQ EQU   ISTBPCB+40
BPCBMQUE EQU   BPCBQREQ
BPCBCQUE EQU   BPCBQREQ+2
BPCBMUSE EQU   ISTBPCB+44
BPCMINAV EQU   BPCBMUSE+2
BPCBCDS  EQU   ISTBPCB+56
BPCBCDS1 EQU   BPCBCDS
BPCBFLG2 EQU   BPCBCDS1
BPCBLOW1 EQU   BPCBFLG2
BPCBCDS2 EQU   BPCBCDS+4
BPCBAVNO EQU   BPCBCDS2+2
BPCBRBLK EQU   ISTBPCB+64
BPCBSRBA EQU   BPCBRBLK+1
ISTBFPFX EQU   0
BFPTSKID EQU   ISTBFPFX
BFPPSTID EQU   BFPTSKID+1
BFPPCBA  EQU   ISTBFPFX+4
BFPCBID  EQU   BFPPCBA
BFPNXCHN EQU   ISTBFPFX+8
BFPSIZE  EQU   ISTBFPFX+12
BFPDATA  EQU   ISTBFPFX+16
BFPREGSA EQU   BFPDATA
BFPR5SA  EQU   BFPREGSA
ISTCBIDT EQU   0
CBIDATR  EQU   ISTCBIDT
CBIDFLAG EQU   ISTCBIDT+1
CBIDPCB  EQU   ISTCBIDT+4
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTLSMQ  EQU   CVTS01+268
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
SRB      EQU   SRBSECT
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CBIDLEN  EQU   ISTCBIDT+2
@NM00056 EQU   CBIDFLAG
CBICLEAN EQU   CBIDFLAG
@NM00055 EQU   CBIDATR
CBINWS   EQU   CBIDATR
CBICBID  EQU   CBIDATR
CBIDAL48 EQU   CBIDATR
CBINFCHP EQU   CBIDATR
CBIFIXED EQU   CBIDATR
CBIDISP  EQU   CBIDATR
CBIFM    EQU   CBIDATR
BFPRDSA  EQU   BFPREGSA+32
BFPRCSA  EQU   BFPREGSA+28
BFPRBSA  EQU   BFPREGSA+24
BFPRASA  EQU   BFPREGSA+20
BFPR9SA  EQU   BFPREGSA+16
BFPR8SA  EQU   BFPREGSA+12
BFPR7SA  EQU   BFPREGSA+8
BFPR6SA  EQU   BFPREGSA+4
BFPPMDSB EQU   BFPR5SA
BFPPMCHN EQU   BFPR5SA
BFPPMCLR EQU   BFPR5SA
BFPUSED  EQU   ISTBFPFX+14
BFPBPCB  EQU   BFPPCBA+1
@NM00054 EQU   BFPPCBA
BFPTIK   EQU   BFPPSTID+2
@NM00053 EQU   BFPPSTID
BFPCBXNO EQU   BFPTSKID
BFPALLOC EQU   BFPTSKID
BPCBSRB  EQU   ISTBPCB+68
@NM00052 EQU   BPCBRBLK
BPCBSRBG EQU   BPCBRBLK
BPCBCCNT EQU   BPCBCDS2
BPCBFBA  EQU   BPCBCDS1+1
@NM00051 EQU   BPCBFLG2
BPCBLOW2 EQU   BPCBFLG2
@NM00050 EQU   BPCBFLG2
BPCBNUMR EQU   ISTBPCB+54
BPCBNUM  EQU   ISTBPCB+52
BPCBRESP EQU   ISTBPCB+48
@NM00049 EQU   BPCBMUSE
BPCBTHR2 EQU   ISTBPCB+38
BPCBNXCB EQU   ISTBPCB+28
BPCBADR2 EQU   ISTBPCB+12
BPCBADR1 EQU   ISTBPCB+8
BPCBPRIO EQU   BPCBFEXT
BPCBSPNO EQU   ISTBPCB+3
@NM00048 EQU   ISTBPCB+2
@NM00047 EQU   BPCBFLAG+1
BPCBUSRF EQU   BPCBFLAG+1
@NM00046 EQU   BPCBFLAG
BPCBNWS  EQU   BPCBFLAG
BPCBCBID EQU   BPCBFLAG
BPCBAL48 EQU   BPCBFLAG
BPCBNFCH EQU   BPCBFLAG
BPCBFX   EQU   BPCBFLAG
BPCBDISP EQU   BPCBFLAG
BPCBFM   EQU   BPCBFLAG
BPDENTRY EQU   ISTBPDTY+144
@NM00045 EQU   BPDTRACE+6
BPDTRADR EQU   BPDPARM+4
BPDTRID  EQU   BPDPARM+3
@NM00044 EQU   BPDPARM+2
BPDTRLEN EQU   BPDPARM
BPDRSV01 EQU   BPDFLAG
BPDATCVT EQU   BPDHDR+36
BPDFBPE  EQU   BPDHDR+32
BPDFEXT  EQU   BPDHDR+24
BPDADRS2 EQU   BPDHDR+20
BPDADRS1 EQU   BPDHDR+16
BPDPGPCB EQU   BPDHDR+12
BPDCHPCB EQU   BPDHDR+8
BPDCHBSZ EQU   BPDHDR+6
BPDCHBNO EQU   BPDHDR+4
BPDBPMAX EQU   BPDHDR+2
BPERSV03 EQU   ISTBPENT+12
BPEBPCB  EQU   ISTBPENT+8
BPEBFSIZ EQU   ISTBPENT+6
BPERSV02 EQU   BPEFLAGS+1
BPEUSRF  EQU   BPEFLAGS+1
BPERSV01 EQU   BPEFLAGS
BPENWS   EQU   BPEFLAGS
BPECBID  EQU   BPEFLAGS
BPEAL48  EQU   BPEFLAGS
BPENFCHP EQU   BPEFLAGS
BPEFIXED EQU   BPEFLAGS
BPEDISP  EQU   BPEFLAGS
BPEFM    EQU   BPEFLAGS
BPEPID   EQU   ISTBPENT
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
CRACRR   EQU   CRAHDR
@NM00043 EQU   ISTAPCRR+137
@NM00042 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00041 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00040 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00039 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00038 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00037 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00036 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00035 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
ZCRMDATA EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00034 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00033 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00032 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00031 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00030 EQU   RPHCVFLG
RPHFRRPH EQU   RPHCVFLG
RPHOWRPH EQU   RPHCVFLG
RPHCDRPH EQU   RPHCVFLG
RPHPSRPH EQU   RPHCVFLG
RPHVYRPH EQU   RPHGATE
@NM00029 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
@NM00028 EQU   SRBSECT+40
@NM00027 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBID    EQU   SRBSECT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00314 EQU   ELS06
TR05     EQU   ELS06
@RF00331 EQU   @RC00318
@ENDDATA EQU   *
         END   ISTORFBA,(C'PLS2154',0603,78158)
