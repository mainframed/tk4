         TITLE 'SMS SET TASKID ROUTINE - ISTORAID(OS/VS1), ISTORFID(OS/*
               /VS2)    '
ISTORFID CSECT ,                                                   0001
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
*          R4BUFPX=R2BUFPTR-8;       /* BACK UP BUFF PTR TO PREFIX   */
         LR    R4BUFPX,R2BUFPTR                                    0019
         SL    R4BUFPX,@CF00056                                    0019
*          R5TASKID=R0MASK & ADDRMASK;                             0020
         LR    R5TASKID,R0MASK                                     0020
         N     R5TASKID,@CF00054                                   0020
*          DO WHILE(R4BUFPX^=0);     /* LOOP TILL END OF BUFF CAHIN  */
         B     @DE00021                                            0021
@DL00021 DS    0H                                                  0022
*                                    /* SET TASKID IN PREFIX         */
*            BFPTSKID=(BFPTSKID & HIGHBYTE) × R5TASKID;            0022
         L     @15,BFPTSKID(,R4BUFPX)                              0022
         N     @15,@CF00052                                        0022
         OR    @15,R5TASKID                                        0022
         ST    @15,BFPTSKID(,R4BUFPX)                              0022
*            R6NXCHN=BFPNXCHN;                                     0023
         L     R6NXCHN,BFPNXCHN(,R4BUFPX)                          0023
*            IF BFPCBID=ON ×         /* THIS A CBID BUFF OR AT       */
*               R6NXCHN=0            /*     END OF BUFFER CHAIN      */
*            THEN                    /* YES */                     0024
         TM    BFPCBID(R4BUFPX),B'10000000'                        0024
         BO    @RT00024                                            0024
         LTR   R6NXCHN,R6NXCHN                                     0024
         BNZ   @RF00024                                            0024
@RT00024 DS    0H                                                  0025
*              R4BUFPX=0;            /* TERMINATE DO WHILE LOOP      */
         SLR   R4BUFPX,R4BUFPX                                     0025
*            ELSE                    /* NO  */                     0026
*              R4BUFPX=R6NXCHN-8;    /* POINT TO NEXT PREFIX AREA    */
         B     @RC00024                                            0026
@RF00024 LR    R4BUFPX,R6NXCHN                                     0026
         SL    R4BUFPX,@CF00056                                    0026
*          END;                                                    0027
@RC00024 DS    0H                                                  0027
@DE00021 LTR   R4BUFPX,R4BUFPX                                     0027
         BNZ   @DL00021                                            0027
*          RETURN;                                                 0028
*                                                                  0028
@EL00001 DS    0H                                                  0028
@EF00001 DS    0H                                                  0028
@ER00001 BR    @14                                                 0028
* GEN(DC C'END ISTORFID  75.325');                                 0029
*                                                                  0029
         DC C'END ISTORFID  75.325'
*/* TPEPILOG   */                                                  0030
*           GEN (PRINT OFF);                                       0030
*                                                                  0030
         PRINT OFF
*        /* BUFFER PREFIX */                                       0031
*/*  REVISIONS                                         002 03/06/75  */
*        DCL  1  ISTBFPFX BDY(DWORD) BASED(BFPFXPTR),              0031
*               2  BFPTSKID PTR(31),   /* FIRST PREFIX WORD          */
*                 3  BFPALLOC BIT(1),  /* BUFF.ALLOCATED INDICATOR   */
*                 3  BFPCBXNO BIT(7),  /* CBID INDEX NUMBER          */
*                 3  BFPPSTID PTR(24), /* PST ID OF BUFF OWNER       */
*                    4 *      BIT(16), /* ALIGNMENT                  */
*                    4 BFPTIK BIT(8),  /* TASK ID, ONE BYTE REFERENCE*/
*               2  BFPPCBA PTR(31),    /* SECOND PREFIX WORD         */
*                  3 BFPCBID BIT(1),   /* BUFF IS A CBID INDICATOR   */
*                  3 *       BIT(7),   /* RESERVED                   */
*                  3 BFPBPCB PTR(24),  /* PTR TO BPCB FOR BUFFER     */
*               2  BFPNXCHN PTR(31),   /* A(NEXT BUFF.) AND START OF */
*               2  BFPSIZE FIXED(15),  /* SIZE OF DATA IN BUFFER     */
*               2  BFPUSED FIXED(15),  /* COUNT OF DATA BYTES USED   */
*                                      /* IN THIS BUFFER             */
*              2  BFPDATA  BDY(WORD),  /* DATA PART OF THE BUFFER    */
*                 3  BFPREGSA,        /* START OF SAVE AREA'S FOR REG*/
*                    4  BFPR5SA FIXED(31),/* SAVE AREA FOR R5        */
*                       5 BFPPMCLR BIT(1),/* CLEAR REQUESTED         */
*                       5 BFPPMCHN BIT(1),/* CHAINED CBID RELEASE    */
*                       5 BFPPMDSB BIT(1),/* DISABLED, CAN'T PAGE FLT*/
*                    4  BFPR6SA FIXED(31),/* SAVE AREA FOR R6        */
*                    4  BFPR7SA FIXED(31),/* SAVE AREA FOR R7        */
*                    4  BFPR8SA FIXED(31),/* SAVE AREA FOR R8        */
*                    4  BFPR9SA FIXED(31),/* SAVE AREA FOR R9        */
*                    4  BFPRASA FIXED(31),/* SAVE AREA FOR R10       */
*                    4  BFPRBSA FIXED(31),/* SAVE AREA FOR R11       */
*                    4  BFPRCSA FIXED(31),/* SAVE AREA FOR R12       */
*                    4  BFPRDSA FIXED(31);/* SAVE AREA FOR R13       */
*           GEN (PRINT ON);                                        0032
         PRINT ON
*/* END OF TPEPILOG */                                             0033
*          END ISTORFID;                                           0033
         B     @EL00001                                            0033
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTORFID CSECT
         DS    0F
@CF00056 DC    F'8'
@CF00052 DC    XL4'FF000000'
@CF00054 DC    XL4'00FFFFFF'
@DATD    DSECT
         DS    0D
BFPFXPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTORFID CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0MASK   EQU   @00
R1       EQU   @01
R2BUFPTR EQU   @02
R3       EQU   @03
R4BUFPX  EQU   @04
R5TASKID EQU   @05
R6NXCHN  EQU   @06
R9BASE   EQU   @09
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
ISTBFPFX EQU   0
BFPTSKID EQU   ISTBFPFX
BFPPSTID EQU   BFPTSKID+1
BFPPCBA  EQU   ISTBFPFX+4
BFPCBID  EQU   BFPPCBA
BFPNXCHN EQU   ISTBFPFX+8
BFPDATA  EQU   ISTBFPFX+16
BFPREGSA EQU   BFPDATA
BFPR5SA  EQU   BFPREGSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
BFPRDSA  EQU   BFPREGSA+32
BFPRCSA  EQU   BFPREGSA+28
BFPRBSA  EQU   BFPREGSA+24
BFPRASA  EQU   BFPREGSA+20
BFPR9SA  EQU   BFPREGSA+16
BFPR8SA  EQU   BFPREGSA+12
BFPR7SA  EQU   BFPREGSA+8
BFPR6SA  EQU   BFPREGSA+4
BFPPMDSB EQU   BFPR5SA
BFPPMCHN EQU   BFPR5SA
BFPPMCLR EQU   BFPR5SA
BFPUSED  EQU   ISTBFPFX+14
BFPSIZE  EQU   ISTBFPFX+12
BFPBPCB  EQU   BFPPCBA+1
@NM00002 EQU   BFPPCBA
BFPTIK   EQU   BFPPSTID+2
@NM00001 EQU   BFPPSTID
BFPCBXNO EQU   BFPTSKID
BFPALLOC EQU   BFPTSKID
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ISTORFID,(C'PLS2009',0603,75325)
