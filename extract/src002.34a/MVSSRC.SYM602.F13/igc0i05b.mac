         TITLE 'IGC0I05B  JFCB PROCESSOR - TABLE COMPLETION MODULE     *
                      REPOSITION I/O  RESTART-SVC 52  OS/360'
IGC0I05B CSECT
*              OS
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*                                                                  O100
* 173000                                                         A27816
*          RELEASE 20 DELETIONS
*          RELEASE 21 DELETIONS
*0790                                                            A44121
*
*              OS/VS2
*
*          RELEASE 2 DELETIONS
*0000203000                                                     YA03686
* APAR OZ31486 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C150840,269000                                                @ZSUT222
*A269200-269600,337530                                         @ZSUT222
* STATUS CHANGE LEVEL 004
*
*TITLE -       TABLE COMPLETION MODULE
*
*STATUS -      INITIAL CODE
*
*FUNCTION -    CONTROL IS PASSED FROM IGC0G05B IN ORDER TO COMPLETE THE
*              TABLE ENTRIES FOR ALL DATA SETS WITH PHYSICAL SEQUENTIAL
*              ORGANIZATION WHICH ARE COMPOSED OF MORE THAN 5 VOLS.
*
*              TESTS ARE MADE ON EACH TABLE ENTRY FOR DSORG = PS WITH
*              VOL SEQ NO GREATER THAN 5.  IF THESE CONDITIONS EXIST
*              ONE OR MORE JFCB EXTENSIONS ARE READ AND THE CORRECT
*              VOLID IS MOVED TO THE APPROPRIATE POSITION IN THE TABLE
*              ENTRY.  TABLE ENTRIES SPECIFYING DSORG OTHER THAN PS,
*              GREATER THAN 5 VOLS ARE SKIPPED.
*
*              IF AN ERROR CONDITION IS ENCOUNTERED AN ERROR CODE IS
*              SET IN THE RESTART WORKAREA AND CONTROL IS PASSED TO
*              IGC0V05B, OTHERWISE CONTROL IS PASSED TO IGC0K05B OR TO
*              IGC0H05B, DEPENDING UPON THE DEVICE TYPES OF THE DATA
*              SETS ENCOUNTERED IN THE TABLE.
*
*ENTRY POINTS- THIS MODULE IS ENTERED BY IGC0G05B.
*
*INPUT -       REGISTER  1    ADDR OF RESTART WORKAREA (RSTWA DSECT)
*              REGISTER  8    ADDR OF FIRST TABLE ENTRY
*
*OUTPUT -      SAME AS REGISTER 1 AND 8 ABOVE
*
*EXIT -        TO IGC0K05B IF A NON-DA DATA SET IS ENCOUNTERED
*              TO IGC0H05B IF ALL DATA SETS ARE DA RESIDENT
*              TO IGC0V05B IF AN ERROR CONDITION IS ENCOUNTERED:
*              025 - ERROR DURING READ JFCB
*
*TABLES/WORKAREAS
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*           A  DCBTABLE,
*
*           B  BUFFER AREA,
*
*           C  SEE DSECTS AT END OF LISTING.
*
*ATTRIBUTES
*
*          A RE-ENTRANT
*          B RE-USABLE
*          C ENABLED
*          D PRIVILEGED
*
*********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0                        WDRK/PARAMETER REGISTER
WRKR2    EQU   1                        WDRK/PARAMETER REGISTER
DCBR     EQU   2                        CURRENT DCB REGISTER
BASER    EQU   3                        BASE REGISTER
DEBR     EQU   4                        CURRENT DEB REGISTER
UCBR     EQU   5                        CURRENT UCB REGISTER
TIOTR    EQU   6                        NEW TIOT REGISTER
TCBR     EQU   7                        TCB REGISTER
TABLR    EQU   8                        BEGINNING TO DCB TABLE REG
CTABLR   EQU   9                        CURRENT ENTRY IN DCB TABLE
BUFR     EQU   10                       USER BUFFER AREA
DSCNTR   EQU   11                       WORK REGISTER
WRKR3    EQU   12                       WORK REGISTER
WRKR4    EQU   13                       WORK REGISTER
WRKR5    EQU   14                       WORK/PARAMETER REGISTER
WRKR6    EQU   15                       WORK/PARAMETER REGISTER
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
IS       EQU   X'80'                    INDEXED SEQUENCIAL
PS       EQU   X'40'                    PHYSICAL SEQUENCIAL
DA       EQU   X'20'                    DIRECT ACCESS
PO       EQU   X'02'                    PARTITIONED ORGANIZATION
INOROUT  EQU   X'40'                    SYSIN OR SYSOUT DATA SET
TPDEV    EQU   X'10'                    TAPE DEVICE
UNITREC  EQU   X'04'                    UNIT RECORD EQUIPMENT
ERRINNSL EQU   X'80'                    ERROR IN NSL ROUTINE
NSLMTSW  EQU   X'40'                    NSL MOUNT SWITCH
NSLCOMU  EQU   X'20'                    NSL COMMUNICATION BIT
BYPASS   EQU   X'10'                    BYPASS LABEL PROCESSING
NSL      EQU   X'04'                    NON-STANDARD LABEL
SL       EQU   X'02'                    STANDARD LABEL
NL       EQU   X'01'                    NO LABEL
POCONCAT EQU   X'40'                    P.O. CONCATENATED
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
NONDAFLG EQU   X'40'                    NON-DA DATA SET FLAG
NSLFLAG  EQU   X'10'                    NSL ROUTINE FLAG
TYPERST  EQU   X'80'                    IMMEDIATE RESTART
TABENT   EQU   48                       TABLE ENTRY LENGTH
WRITE    EQU   X'01'                    WRITE ON TAPE
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
SENSE    EQU   X'04'                    SENSE
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
UNLOAD   EQU   X'0F'                    REWIND AND UNLOAD
WTM      EQU   X'1F'                    WRITE TAPE MARK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
SEARCH   EQU   X'31'                    SEARCH
SRCHCNT  EQU   X'05'                    COUNT FOR SEARCH ID
TIC      EQU   X'08'                    TIC
READDA   EQU   X'06'                    READ FOR DA
LENJFCB  EQU   X'B0'                    LENGTH OF JFCB
LBLLEN   EQU   X'50'                    LENGTH OF LABEL
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR025   EQU   25                       ERROR IN READING JFCB  @ZSUT222
BUFSEG   EQU   304
TIOTBASE EQU   24
TTROFFST EQU   12
BUSY     EQU   X'80'
ISORDA   EQU   IS+DA                    IS OR DA
IOERROR  EQU   X'20'                    PERMANENT I/O ERROR
NODIOERR EQU   X'3F'
PCI      EQU   X'04'                    CHAINED SCHEDULING       A27816
COMPWOE  EQU   X'7F'                    COMPLETE NO ERROR        A27816
NULLDFLG EQU   X'20'                                               O100
D24      EQU   24                       CONSTANT TWENTY FOUR     Y02076
DEBPAGFX EQU   X'10'                    DEB PAGE FIXED INDR      YM7340
*
***********************************************************************
*
         BALR  BASER,0                  ESTABLISH ADDRESSABILITY
         USING *,BASER                  ESTABLISH BASE REGISTER
         B     BEGIN               BRANCH AROUND EYE CATCHER     Y01909
         CNOP  0,8                 ALIGN TO A DBL WORD BOUNDARY  Y01909
         DC    CL8'IGC0I05B'       MODULE NAME                 @ZSUT222
         DC    CL8'&SYSDATE'       LAST DATE SHIPPED           @ZSUT222
         DC    CL8'@ZSUT222'       LAST CODE SHIPPED           @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
         USING IHADCB,DCBR
         USING UCBOB,UCBR
         USING RSDSECT,WRKR4
         USING TIOENTRY,WRKR5
         USING CVT,WRKR2
         USING DEBBASIC,DEBR                                     Y02076
         USING TCB,TCBR
         USING TABL,CTABLR
         USING RSTWA,BUFR
*
         L     DCBR,RSCKDCB        LOAD ADDR OF CHKPT DCB
         NI    DCBIFLGS,NODIOERR   TURN OFF POSSIBLE ERROR FLAGS
         TM    DCBCIND2,PCI             CHAINED SCHEDULING       A27816
         BNO   REPTAB                   NO, BRANCH               A27816
         L     WRKR4,DCBIOBAD           GET IOB PREFIX ADDR      A27816
         MVI   4(WRKR4),COMPWOE         POST MAIN IOB COMPLETE   A27816
REPTAB   LR    CTABLR,TABLR             INITIALIZE CTABLR        A27816
***********************************************************************
*   GET SPACE FOR QMNGRIO PARAMETER LIST AND WORK AREA THEN INITIALIZE
*   IT.  QMNGRIO IS USED FOR READING IN THE JFCB EXTENTION FROM THE   *
*   SCHEDULER WORK AREA (SWA) FOR DATA SETS HAVING GREATER THAN 5 VOL *
***********************************************************************
         ICM   WRKR1,ADDRBYTS,QMNGWALN  LENGTH OF QMNGR P.L.+WA  Y02076
         ICM   WRKR1,HIORDER,SP253      SUBPOOL 253              Y02076
         GETMAIN  R,LV=(0)              ISSUE GETMAIN            Y02076
         USING QMIOP,WRKR2              REG 1 PTS TO QMNGR P.L.  Y02076
         XC    QMITCBAD(D24),QMITCBAD   CLEAR PARM LIST          Y02076
         LA    WRKR1,QMWAOFST           GET OFFSET TO WA         Y02076
         AR    WRKR1,WRKR2              CALC ADR OF WORK AREA    Y02076
         ST    WRKR1,QMIWRKAD           STORE IN PARM LIST       Y02076
         L     TCBR,RSTCBAD             GET TCB ADR              Y02076
         ST    TCBR,QMITCBAD            STORE TCB AD IN P.L.     Y02076
         LA    WRKR1,JFCBXLNT           GET JFCB XTN LENGTH      Y02076
         STH   WRKR1,QMIRECL            STORE RECORD LNGTH IN PL.Y02076
         MVI   QMIFLAGS,QMIOREAD        SET READ FUNCTION        Y02076
         ST    WRKR2,QMNPRMWA           SAVE QMNGRIO P.L. ADR    Y02076
         B     REPDCB22                 BRANCH TO INITIALIZE PTRS
*
REPDCB20 EQU   *
*
         LA    CTABLR,TABENT(CTABLR)    TO NEXT ENTRY
*
REPDCB22 EQU   *
*
         L     DCBR,TABDCBAD-1          GET DCB ADDR
         L     DEBR,DCBDEBAD            GET DEB ADDR
*****************************************************************YM7003
*        RESET THE DEBRRQ FIELD FOR ALL DATA SETS EXCEPT         YM7003
*        VSAM, TCAM, AND SUBSYSTEM.  THIS IS NECESSARY SINCE     YM7003
*        THE RELATED REQUEST QUEUE ADDRESS WILL BE INVALID       YM7003
*        AFTER A RESTART.  NOTE- VSAM DATA SETS DO NOT HAVE      YM7003
*        A TABLE ENTRY AND, THEREFORE, WILL BE AUTOMATICALLY     YM7003
*        EXCLUDED.                                               YM7003
*****************************************************************YM7003
         TM    TABFLG1,TABTCAM+TABSYS   D/S TCAM OR SUBSYSTEM    YM7003
         BNZ   REPDCB23                 IF YES, SKIP DEBRRQ ZERO YM7003
         TM    TABFLG2,TABOSSDS         WAS IT AN OLD SUBSYS     YM7399
         BO    REPDCB23                 IF YES, SKIP DEBRRQ ZERO YM7399
         XC    DEBRRQ+1(3),DEBRRQ+1     ZERO DEBRRQ              YM7003
REPDCB23 EQU   *                        SKIP DEBRRQ ZERO ENTRY   YM7003
         LR    WRKR4,DEBR               GET DEB ADDRESS          YM7340
         SH    WRKR4,AVTOFSET           PT AVT IF PART OF DEB    YM7340
         CLM   WRKR4,B'0111',DEBAPPB    IS AVT IN DEB PREFIX     YM7340
         BNE   NOAVT                    BR IF AVT NOT IN DEB     YM7340
         NI    DEBSIOAB-DEBAVT(WRKR4),X'FF'-DEBPAGFX RESET DEB   YM7340*
                                        PAGE FIXED - EXCP WILL   YM7340*
                                        RE-FIX ON 1ST EXCP       YM7340
NOAVT    EQU   *                        AVT NOT PART OF DEB      YM7340
         L     WRKR4,TABSEGAD-1         GET CURRENT WORK SEG
         SR    UCBR,UCBR                CLEAR UCBR
*
         TM    TABFLG2,TABG5V           NO. VOLS. GREATER THAN 5
         BZ    REPDCB24                 NO - BRANCH
*
******** THE NUMBER OF VOLS IS GREATER THAN 5
*
         TM    TABDSORG,ISORDA          DSORG SET FOR IS OR DA
         BZ    REPDCB30                 NO BRANCH
*
REPDCB24 EQU   *
*
         TM    TABFLG1,TABLAST          LAST ENTRY IN TABLE
         BO    ENDUP                    YES BRANCH
         B     REPDCB20                 RE LOOP
*                                                                     *
REPDCB30 EQU   *
*                                                                     *
         SR    WRKR6,WRKR6              ZERO WORK REG           SA65157
         IC    WRKR6,DEBNMEXT           GET NO. OF EXTENTS      SA65157
         SLL   WRKR6,4                  MULTIPLY BY 16          SA65157
         LA    WRKR6,DEBBASND(WRKR6)    GET ADR ACC METH SECT   SA65157
         USING DEBACSMD,WRKR6                                   SA65157
         SR    WRKR5,WRKR5              ZERO OUT REGISTER       YA03686
         IC    WRKR5,DEBVOLSQ+1         GET CURR VOL. SEQ. NO.  YA03686
         L     DEBR,DCBDEBAD            GET DEB BASIC ADR        Y02076
         USING DEBBASIC,DEBR                                     Y02076
         TM    TABFLG1,TABDA            DA DEVICE
         BO    REPDCB32                 YES BRANCH
*
         LH    WRKR5,TABVLID5           GET CURR VOL. SEQ. NO.
*
REPDCB32 EQU   *
*
         BCTR  WRKR5,0                  SUB 1 FROM VOLUME SEQ NUMBER
*
REPDCB34 EQU   *
*                                                                     *
         LA    WRKR1,5                  LOAD WITH FIVE
         LA    WRKR2,15                 LOAD WITH FIFTEEN
*                                                                     *
         LA    UCBR,1(UCBR)             BUMP XTN COUNTER BY ONE
         SR    WRKR5,WRKR1              SUB 5 FROM VOLSEQNO(OR DIFF)
         LTR   WRKR5,WRKR5              TEST WRKR5
         BC    12,REPDCB38              BRANCH LOW OR EQUAL  TO ZERO
*                                                                     *
REPDCB36 EQU   *
*
         CR    WRKR5,WRKR2              COMPARE RESULT TO 15
         BL    REPDCB38                 LOW BRANCH SERIAL IN THIS EXT
*
         SR    WRKR5,WRKR2              SUB 15 FROM VOLSEQNO(OR DIFF)
         LA    UCBR,1(UCBR)             BUMP EXTENSION COUNTER BY ONE
         B     REPDCB36                 BRANCH TO COUNT NO. OF EXT.
*
REPDCB38 EQU   *
*
         LPR   WRKR5,WRKR5              GET A POSITIVE VALUE IN WRKR5
         MH    WRKR5,SIX                MULTIPLY RESULT VOLSEQNO BY 6
*                                                                     *
*    *** NOW READ THE REQUIRED XTN'S AND MOVE PROPER VOL ID TO TABL   *
*                                                                     *
         L     WRKR1,TABNVOLS           LOAD 1ST XTN TTR
         SLL   WRKR1,8                  SHIFT TTR LEFT 8 BITS
*
REPDCB40 EQU   *
*
         L     WRKR2,QMNPRMWA           GET ADR OF QMNGR P.L.    Y02076
         ST    WRKR1,QMIDSKAD           STORE TTR IN P.L.        Y02076
         LA    WRKR1,RSJFCB             GET JFCBX READ IN ADR    Y02076
         ST    WRKR1,QMIRECAD           ADR TO READ IN JFCBX     Y02076
         STM   WRKR4,WRKR5,RSERAS01     SAVE REGS ACROSS QMNGRIO YM6508
         LA    WRKR4,RSREGSAV           POINT TO SAVE AREA       YM6508
         QMNGRIO                        READ JFCBX               Y02076
         LM    WRKR4,WRKR5,RSERAS01     RESTORE REGISTERS        YM6508
         LTR   WRKR6,WRKR6              TEST RETURN CODE         Y02076
         BZ    REPDCB42                 BRANCH IF NO ERROR       Y02076
         MVI   RSRETCOD+1,ERR025        SET JFCB READ ERROR    @ZSUT222
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       THAT DETECTED ERROR    @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
         B     ERRORRTN                 BRANCH TO ERROR ROUTINE
*
REPDCB42 EQU   *
*                                                                     *
*    *** GET THE CORRECT VOLID FROM JFCB XTN AND PLACE IT IN TABLE    *
*                                                                     *
         L     WRKR1,RSJFCB             PICK UP NEXT XTN TTR
         IC    WRKR1,ZERO     CLEAR LOW BYTE OF TTR              A44121
         BCT   UCBR,REPDCB40            BR IF MORE XTN'S TO BE READ
*
         LA    WRKR5,RSJFCB+4(WRKR5)    LOAD ADDR OF VOLID
         MVC   TABVLID1(6),0(WRKR5)     MOVE VOLID TO TABL ENTRY
*                                                                     *
         B     REPDCB24                 BRANCH TO TEST FOR LAST ENTRY
*
ENDUP    EQU   *
*
         LR    CTABLR,TABLR             INIT REG
*
ENDUP0   EQU   *
*
         TM    TABFLG1,TABNULL     DUMMY DATA SET                  O100
         BZ    ENDUP0A             BRANCH IF NO                    O100
         OI    RSDCBFLG,NULLDFLG   INDICATE GO TO DUMJY ROUTINE    O100
ENDUP0A  EQU   *                                                   O100
         TM    TABFLG1,TABDA            DA DEVICE
         BO    ENDUP1                   YES BRANCH
*
         OI    RSDCBFLG,NONDAFLG        SET NON DA FLAG
         B     ENDUP2                   BRANCH TO TEST FOR LAST ENTRY
*
ENDUP1   EQU   *
*
         OI    RSDCBFLG,DAFLAG          SET DA FLAG
*
ENDUP2   EQU   *
*
         TM    TABFLG1,TABLAST          LAST ENTRY
         BO    ENDUP3                   YES BRANCH
*
         LA    CTABLR,TABENT(CTABLR)    TO NEXT ENTRY
*
         B     ENDUP0                   BRANCH TO CHECK IF DA EXISTS
*
ERRORRTN EQU   *
*
         L     WRKR4,4(TABLR)           INITIALIZE TO 1ST WORKAREA
         MVC   RSJFCB(8),ERORLOAD       MOVE IN ERROR MOD ID
         B     ENDUP4                   BRANCH TO GET FLSQ FOR SYSOUT
*                                                                     *
ENDUP3   EQU   *
*
         TM    RSDCBFLG,NULLDFLG   WAS DUMMY DATA SET FOUND        O100
         BZ    ENDUP3A             BRANCH IF NO                    O100
         MVC   RSJFCB(8),DUMYLOAD  SET DUMMY MODULE ID             O100
         B     ENDUP4              DONT SET TAPE ID                O100
ENDUP3A  EQU   *                                                   O100
         L     WRKR4,4(TABLR)           INITIALIZE TO 1ST WORK AREA
         MVC   RSJFCB(8),TAPELOAD       MOVE IN TAPE LOAD ID
         TM    RSDCBFLG,NONDAFLG        IS NON DA FLAG ON
         BO    ENDUP4                   YES BRANCH
*
         MVC   RSJFCB(8),DALOAD         MOVE IN DA LOAD ID
*
ENDUP4   EQU   *
         ICM   WRKR1,ADDRBYTS,QMNGWALN  FREE THE QMNGRIO         Y02076
         ICM   WRKR1,HIORDER,SP253         PARM LIST + WORK AREA Y02076
         L     WRKR2,QMNPRMWA           GET ADR OF PARM LIST     Y02076
         FREEMAIN  R,LV=(0),A=(1)       ISSUE FREEMAIN           Y02076
         LA    WRKR6,RSJFCB+8           SETUP FOR XCTL
*********************************************************************
         LR    WRKR2,BUFR               POINT REG 1 TO THE RESTART W/A
         XC    RSERAS00,RSERAS00        CLEAR SCRATCH AREA       Y02076
*********************************************************************
         XCTL  EPLOC=RSJFCB,SF=(E,(15))
*
*     CONSTANTS USED IN REPI/O
*
AVTOFSET DC    H'36'                    OFFSET FROM DEB TO AVT   YM7340
SIX      DC    H'6'                     OFFSET FOR VOL SEQ NO
ERORLOAD DC    CL8'IGC0V05B'            RESTART EXIT MODULE
TAPELOAD DC    CL8'IGC0K05B'            NON-DA MOUNT/VERIFICATION LOAD
DALOAD   DC    CL8'IGC0M05B'            DA MOUNT/VERIFICATION LOAD
DUMYLOAD DC    CL8'IGC0H05B'            DUMMY PROCESSOR            O100
MODID    DC    CL8'IGC0I05B'            MODULE IDENT.          @ZSUT222
QMNGWALN DC    AL3(280)                 24(P.L.) + 256(W.A.)     Y02076
SP253    DC    AL1(253)                 SUBPOOL 253              Y02076
ADDRBYTS EQU   7                        GETMAIN PARAMETERS       Y02076
HIORDER  EQU   8                        HIGH ORDER BYTE          Y02076
QMWAOFST EQU   24                       OFFSET TO QMNGR WA       Y02076
JFCBXLNT EQU   176                      LENGTH OF JFCB XTN       Y02076
*
*     CHANNEL PROGRAM USED BY REPI/O
*
         DS    0D
CCWLIST  DC    X'3100000040000005'      SEARCH
         DC    X'08'                    TIC
ZERO     DC    X'00000000000000'        ZEROS
         DC    X'06000000000000B0'      READ
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0I05B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         IEFQMIOP                                                Y02076
         IEFJESCT                                                Y02076
         EJECT
         IEEVRSWA VER=3                 USE AOS2 VERSION OF WA
QMNPRMWA EQU   RSERAS00                 ADR QMNGRIO PARMS        Y02076
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSBUFSEG DS    0CL176
RSJFCB   EQU   RSBUFSEG
         IEFJFCBN                                                Y02076
         EJECT
CVT      DSECT
         CVT
         EJECT
*
*
*   TASK CONTROL BLOCK
*
*
         CNOP  0,4
TCB      DSECT
TCBRBP   DS    F                       POINTER TO EXECUTING RB
TCBPIE   DS    F                       POINTER TO PROG. INTERRUPT EL.
TCBDEB   DS    F                       POINTER TO DEB QUEUE
TCBTIO   DS    F                       POINTER TO TIOT
TCBCMP   DS    F                       TASK COMPLETION CODE
TCBTRN   DS    F                       TESTRAN FIELD
TCBMSS   DS    F                       DATA BLOCK QUEUE ELEMENT POINTER
TCBPRTK  DS    CL1                     PROTECTION TAG
TCBFLGS  DS    FL5                     FLAG BYTES
TCBLMP   DS    CL1                     LIMIT PRIORITY
TCBDSP   DS    CL1                     DISPATCHING PRIORITY
TCBLLS   DS    F                       POINTER TO LOAD LIST
TCBJLB   DS    F                       POINTER TO JOBLIB DCB
TCBJSE   DS    F                       LIST OF INACTIVE PROGRAMS ADDR.
TCBGRS   DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDF   DS    CL1                     TCB IDENTIFIER FIELD
TCBFSA   DS    CL3                     POINTER TO 1ST PROB.PROG.SAVEAR
TCBTCB   DS    F                       NEXT TCB ON READY QUEUE POINTER
TCBTME   DS    F                       POINTER TO TIMER ELEMENT
         EJECT
         DCBD  DSORG=PS
         EJECT
         IEZDEB                                                  Y02076
         EJECT
         IHJDSTAB                                                Y02076
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
SRT      DSECT
         IEFUCBOB
*
*
*
         END
