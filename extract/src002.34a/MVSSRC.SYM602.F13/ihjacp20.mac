*
         COPY  LCGASMSW
*
         TITLE 'IGC0A06C (IHJACP20) -PRESERVE 1 (CHR)'
IGC0A06C CSECT
*                                                                YM2776
*FUNCTION/OPERATION  THIS ROUTINE WRITES OUT THE CHECKPOINT HEADER
*                    RECORD (CHR)
*
*ENTRY POINTS  IGC0A06C
*
*INPUT  ADDRESS OF THE CHECKPOINT WORK AREA IN REGISTER 1
*
*OUTPUT  ADDRESS OF THE CHECKPOINT WORK AREA IN REGISTER 1
*
*EXITS-NORMAL
*         1.) XCTL TO IGC0D06C TO WRITE OUT DSDRS
*         2.) XCTL TO IGC0206C IF EOV OCCURS FOR THE FIRST TIME WITH
*                       CHKPT DATA SET ON TAPE
*
*     -ERROR XCTL TO I/O RESUME AFTER INITIALIZING CKMSGCOD AND
*             CKRETCOD AS FOLLOWS
*                 CKRETCOD    CKMSGCOD     ERROR CONDITION
*                 X'000C'      X'0317'       I/O ERROR CREATING CHKPT
*                                                        DATA SET
*                  X'0008'     X'031B'       EOV ON DA OR FOR A SECOND
*                                              TIME ON TAPE
*
*TABLES/WORK AREAS  CHKWA,TCB,DCB,DEB
*
*ATTRIBUTES  REENTRANT, SUPERVISOR STATE, TYPE 4 SVC ROUTINE
*
*RESTRICTIONS  MAY NOT BE USED IN OS/MFT
*
* CHANGE ADDITIONS DELETIONS FOR VS2 037
*A26660018-26794000                                            @ZA27702
*
*NOTES NONE
         EJECT
         USING CHKWA,RC
         BALR  RB,0                BASE ADDR.
         USING *,RB
         B     BEGIN               BRANCH AROUND EYE CATCHER
         CNOP  0,8                 ALIGN TO A DOUBLE WORD BOUNDARY
         DC    C'IGC0A06C'         CSECT NAME
BEGIN    EQU   *
         LR    RC,R1               GET ADDRESS OF CHKPT WORK AREA
         LA    RD,CKREGSAV
         L     R2,CKDCBAD          GET DCB ADDRESS
         USING IHADCB,R2
*                                                                     *
***********************************************************************
*        TO PROVIDE SYSTEM INTEGRITY, THE CHECKPOINT DEB MUST BE      *
*        VERIFIED TO BE ON THE TCB DEB CHAIN, AND IN THE JOBSTEP      *
*        DEB TABLE.                                                   *
***********************************************************************
*                                                                     *
         DEBCHK  (R2),TYPE=VERIFY,AM=SAM
*                                                                     *
*                                                            @ZA27702
         TM    CKFLAG1,CKOPEN      CHECKPOINT OPEN DS ?      @ZA27702
         BO    BYPASS              YES BYPASS                @ZA27702
         TM    DCBCIND2,DCBCNCHS   CHAIN SCHEDULING IN USE ? @ZA27702
         BNO   BYPASS              NO BYPASS                 @ZA27702
         L     RF,DCBIOBAD         GET THE C. S. IOB         @ZA27702
         L     R1,8(RF)            GET OLDEST ICB            @ZA27702
         SR    R9,R9               ZERO REG 9                @ZA27702
         ICM   R9,1,3(RF)          GET NOP OFFSET            @ZA27702
         AR    R1,R9               SET UP ADDRESS OF NOP     @ZA27702
         ST    R1,12(RF)           SET UP NOP OFFSET IN IOB  @ZA27702
         OI    12(RF),X'80'        TURN ON HIGH ORDER BIT    @ZA27702
OTHER    EQU   *                                             @ZA27702
         CLI   0(R1),X'88'         TICNOP OPCODE ?           @ZA27702
         BE    NEXT                YES BRANCH TO TEST NEXT   @ZA27702
         CLI   0(R1),X'03'         NOP ( FOR TAPE )          @ZA27702
         BE    NEXT                YES BRANCH TO TEST NEXT   @ZA27702
         TM    CKFLAG1,CKTAPE      DATASET ON TAPE ???       @ZA27702
         BNO   DISK                NO MUST BE DA BRANCH      @ZA27702
         MVI   0(R1),X'03'         SET UP FOR NOP            @ZA27702
         B     NEXT                PROCESS NEXT ICB          @ZA27702
DISK     EQU   *                                             @ZA27702
         LA    R9,8(R1)            SET REG 9 TO NEXT CCW     @ZA27702
         ST    R9,0(R1)            SET UP NEXT CCW           @ZA27702
         MVI   0(R1),X'88'         SET UP TICNOP             @ZA27702
NEXT     EQU   *                                             @ZA27702
         TM    CKFLAG1,X'80'       SECOND PASS ?             @ZA27702
         BO    BYPASS              YES YOU ARE FINISHED      @ZA27702
         OI    CKFLAG1,X'80'       SET FLAG UP               @ZA27702
         L     R1,8(RF)            GET FIRST ICB AGAIN       @ZA27702
         L     R1,0(R1)            GET THE OTHER ICB         @ZA27702
         SR    R9,R9               ZERO REG 9 AGAIN          @ZA27702
         ICM   R9,1,3(RF)          GET NOP OFFSET            @ZA27702
         AR    R1,R9               SET UP TO POINT TO NOP    @ZA27702
         B     OTHER               PROCESS OTHER ICB         @ZA27702
BYPASS   EQU   *                                             @ZA27702
         NI    CKFLAG1,X'7F'       TURN OFF BIT              @ZA27702
*                                                            @ZA27702
***********************************************************************
*        FOR DA - DEB ADDR IS SAVED AND USED FOR COMPARISON TO TEST   *
*          FOR EOV CONDITION BECAUSE EOV GETS A NEW DEB               *
*        FOR TAPE - VOLUME SEQUENCE NUMBER IN DEB IS SAVED AND USED   *
*          FOR TESTING AN EOV CONDITION BECAUSE EOV INCREMENTS VOL    *
*          SEQ NO                                                     *
***********************************************************************
*                                                                     *
         L     RF,DCBDEBAD         GET DEB ADDRESS
         TM    CKFLAG1,CKTAPE      IS CHKPT DATA SET ON TAPE
         BO    PRETAPE             BRANCH IF YES
         MVC   CKTSTEOV(BYTE),DEBNMEXT(RF)   SAVE NUMBER OF EXTENTS FOR
*                                          END OF VOLUME TESTS
         B     PREBUFF             SKIP SAVING EOV INFO FOR TAPE
PRETAPE  EQU   *
         USING DEBSECT,RF          MAPPING OF DEB
         LA    RF,VOLSEQNO         GET ADDR OF VOLUME SEQ. NO. IN DEB
         ST    RF,CKTSTEOV         SAVE INFO FOR EOV TEST
         MVC   CKEOVCMR(LNWORD),ZERO(RF)
*
***********************************************************************
*                                                                     *
*        INITIALIZE CONTROL BLOCKS AND THEN WRITE CHR TO CHKPT D.S.   *
*                                                                     *
***********************************************************************
*                                                                     *
PREBUFF  EQU   *
         LR    R9,RC
         A     R9,CKBFOFST         GET ADDRESS OF BUFFER
         ST    R9,PRENXB           INITIALIZE OUTPUT BUFFER HANDLER'S
         MVC   PRENOB(LNWORD),DSDRLN         PARAMETERS
*                                                                YM6541
*        BEFORE WRITING THE CHR GET THE REGION END ADDRESS       YM6541
*        AND CALCULATE THE CURRENT SIZE OF REGION TO BE SAVED    YM6541
*                                                                YM6541
         USING CHRSECT,R9          ADDRESS CHR                   YM6541
         L     RF,CVTPTR           GET CVT ADDRESS               YM6541
         USING CVTMAP,RF           ADDRESS CVT                   YM6541
         L     RF,CVTTCBP          GET ADDR OF TCB/ASCB ADDR'S   YM6541
         L     RF,CURASOFS(,RF)    GET CURRENT ASCB ADDR         YM6541
         USING ASCB,RF             ADDRESS ASCB                  YM6541
         L     RF,ASCBLDA          GET LDA ADDR                  YM6541
         USING LDA,RF              ADDRESS LDA                   YM6541
         L     RF,CURRGNTP         GET CURRENT REGION END ADDR   YM6541
         DROP  RF                  LDA                           YM6541
         ST    RF,CKPPE            SAVE REGION END ADDR          YM6541
         S     RF,CKPPM            GET REGION SIZE               YM6541
         ST    RF,CHRPPE           PUT REGION SIZE IN CHR        YM6541
         DROP  R9                  CHR                           YM6541
         TM    CKFLAG1,CKVEQR      IS THIS V=R?                  YM2776
CKVEQR   EQU   8                        V=R BIT IN CKFLAG1      YA00258
         BNO   CKNOVEQR            NO, GO AROUND REAL PROCESSING YM2776
         LRA   R9,0(,R9)           GET REAL ADDRESS OF CHR       YM2776
CKNOVEQR EQU   *                                                 YM2776
         ST    R9,CKAREA1
         LA    RF,CHRLN
         STH   RF,CKLNGTH1         INITIALIZE DECB1
         LA    R9,PRESYNAD         MODIFY DCBSYNAD SO THAT PRESERVE
         ST    R9,PREAD            SYNAD WILL GET CONTROL IF I/O ERROR
         MVC   DCBSYN1(LNADDR),PREAD2            OCCURS
         LA    R9,CKDECB1          GET DECB ADDRESS
         WRITE (R9),SF,,,,,,MF=E   WRITE OUT CHR
         CHECK (R9)
         OI    CKFLAG2,CKCHR       SET FLAG - CHR WRITTEN
*                                                                     *
***********************************************************************
*                                                                     *
*        TEST FOR SUCCESSFUL WRITE - I/O ERROR OR EOV CONDITION       *
*        IF ERROR OCCURS STORE ERROR CODES IN CHKWA AND XCTL TO       *
*        IGC0N06C - CHKPT D.S. NOT COMPLETED                          *
*                                                                     *
***********************************************************************
*                                                                     *
         TM    CKFLAG1,CKTAPE      CHKPT DATA SET ON TAPE
         BO    PRETAEOV            BRANCH IF YES
         L     RF,DCBDEBAD         GET DEB ADDRESS
         CLC   CKTSTEOV(BYTE),DEBNMEXT(RF)   NUMBER OF EXTENTS CHANGED
         BNE   PREOVER             BRANCH IF YES--EOV ON D.A. ERROR
         B     PREIOCHK            BRANCH TO CHECK FOR I/O ERROR
PRETAEOV EQU   *
         L     RF,CKTSTEOV
         CLC   ZERO(LNWORD,RF),CKEOVCMR      DID EOV OCCUR
         BNE   PREEOV              BRANCH IF YES
PREIOCHK EQU   *
         CLI   CKRETCD1,CKIOERR    DID I/O ERROR OCCUR
         BE    PREERXIT            BRANCH IF YES
         TM    CKFLAG1,CKBPAM      IS CHKPT DATA SET OPENED FOR BPAM
*                                                                     *
***********************************************************************
*                                                                     *
*        IF CHKPT D.S BPAM - NOTE CHR SO THAT D.S CAN BE STOWED UNDER *
*        CHECKID IN CHKPT EXIT RTN                                    *
*                                                                     *
***********************************************************************
*                                                                     *
         BZ    PREXIT              BRANCH IF NO--SKIP NOTE
         NOTE  (R2)
         ST    R1,CKTTR            SAVE NOTED TTRZ
*                                                                     *
***********************************************************************
*                                                                     *
*        TRANSFER CONTROL TO NEXT MODULE                              *
*                                                                     *
***********************************************************************
*                                                                     *
PREXIT   EQU   *
         MVC   PRESV(LXCTLST),PREDSDR   TRANSFER CONTROL TO IGC0D06C
PREOUT   EQU   *
         LR    R1,RC               PUT W. A. ADDRESS IN PARM REG
         LA    RF,PRESV            SET UP PARAMETER LIST FOR XCTL
         ST    RF,PRESV8
         LA    RF,PRESV8
         XCTL  SF=(E,(15))         TRANSFER CONTROL TO NEXT MODULE
*                                                                     *
***********************************************************************
*        EOV ERROR RTN - IF CHKPT D.S. ON DISC, CHKPT NOT CONTINUED   *
*        AND CONTROL IS TRANSFERED TO IGC0N06C TO RESTORE I/O AND EXIT*
*        IF CHKPT D.S. ON TAPE, CONTROL IS TRANSFERED TO IGC0206C TO  *
*        ATTEMPT TO WRITE A COMPLETE ENTRY ON ONE VOLUME. IF EOV      *
*        OCCURS FOR A 2ND TIME ON TAPE(INDICATING ONE ENTRY CANNOT FIT*
*        ON ONE VOLUME) CHKPT IS NOT CONTINUED AND THE SAME PATH IS   *
*        FOLLOWED AS EOV ON DISC.                                     *
*                                                                     *
***********************************************************************
*                                                                     *
PREEOV   EQU   *
         TM    CKFLAG2,CKEOV       HAS EOV OCCURRED BEFORE
         BO    PREOVER             BRANCH YES - ERROR
         OI    CKFLAG2,CKEOV       SET EOV FLAG
         MVC   PRESV(LXCTLST),PREDSDR   SET UP XCTL PARM LIST
         MVI   PRESV4,CHAR2
         B     PREOUT              GO TO ISSUE XCTL
PREOVER  EQU   *
         MVI   CKRETCD1,CKPGMERR   INDICATE PROGRAMMER ERROR
         LA    RA,CKERIO7
         STH   RA,CKMSGCOD         PUT ERROR CODE IN WORK AREA
PREMVER  EQU   *
         MVC   PRESV(LXCTLST),PREIORE   MOVE IORESUME'S NAME TO XCTLIST
*                                                                     *
***********************************************************************
*                                                                     *
*        I/O ERROR AND SYNAD RTN. WHEN AN I/O ERROR OCCURS PRESERVE'S *
*        SYNAD RTN GETS CONTROL FROM DCB SYNAD EXIT AND CKRETCOD FIELD*
*        IN CHKWA IS SET TO INDICATE I/O ERROR CCCURED. CONTROL IS RE-*
*        TURNED FROM SYNAD RTN. AFTER WRITE IS CHECK'D CKRETCOD IS    *
*        TESTED FOR I/O ERROR,IN WHICH CASE CONTROL IS TRANSFERED TO  *
*        IGC0N06C TO RESTORE I/O AND EXIT                             *
*                                                                     *
***********************************************************************
*                                                                     *
         B     PREOUT              GO TO XCTL
PREERXIT EQU   *
         LA    RA,CKERIO3          I/O ERROR WRITING CHKPT DATA SET
         STH   RA,CKMSGCOD         PUT IN WORK AREA
         B     PREMVER             BRANCH TO SET UP FOR EXIT
PRESYNAD EQU   *
         MVI   CKRETCD1,CKIOERR    MOVE RETURN CODE TO WORK AREA
         BR    RE        RETURN
CKERIO3  EQU   X'0317'             WRITE UNSUCCESSFUL
CKERIO7  EQU   X'031B'             INVALID EOV
DEBNMEXT EQU   16
CHRLN    EQU   400       LENGTH OF CHR
LNWORD   EQU   4         WORD LENGTH
LNADDR   EQU   3         ADDRESS LENGTH
LXCTLST  EQU   8         LENGTH OF XCTL PARM LST
BYTE     EQU   1         LENGTH OF BYTE (NO. EXTENTS IN DEB)
ZERO     EQU   0         USED FOR ADDRESSING
CHAR2    EQU   C'2'      CHARACTER NEEDED TO ALTER MODULE NAME TO 206C
CURASOFS EQU   12                  OFFSET TO CURRENT ASCB        YM6541
DSDRLN   DC    F'400'              LENGTH OF DSDRS AND CHR
*        MODULE NAMES USED IN XCTL PARMLST                            *
PREDSDR  DC    C'IGC0D06C'         PRESERVE 2(NORMAL FLOW)
PREIORE  DC    C'IGC0N06C'         RESUME I/O (I/O ERROR)
CKCHR    EQU   128
*                                                                     *
*        MAINTENANCE SPACE                                            *
*                                                                     *
PATCH    DC    XL((*-IGC0A06C)/20)'00'   FIVE PERCENT MAINTENANCE SPACE
         EJECT
*
*        MAPPING OF CHECKPOINT HEADER RECORD(CHR)                     *
*
CHRSECT  DSECT
         DS    0D
CHRCOUNT DS    H    NUMBER OF CHKPTS TAKEN
CHRCKIDL DS    H    LENGTH OF CHECKID
CHRCHKID DS    4F   CHECKID
CHRDDNM  DS    2F   DDNAME OF CHECKPOINT DATA SET.
CHRPPM   DS    CL4       LOW ORDER ADDR P/P CORE
CHRPPE   DS    CL4       HIGH ORDER ADDRESS P/P CORE
CHRBLKSI DS    CL2       CHKPT D.S.  BLKSIZE
CHRTIOTL DS    CL2       LENGTH OF TIOT
CHRFLAGS DS    CL1       CHKPT FLAG 1
CHRWACL  DS    CL3       CHKPT W.A. LENGTH
CHRCKWAD DS    0F
CHRFLAG2 DS    CL1       CHKPT FLAG 2
CHRWAAD  DS    CL3       CHKPT W.A. ADDR
CHRSVRB  DS    CL4       ADDR OF CHKPT SVRB
CHRPPML  DS    CL4       LOW ORDER ADDR CHKPT SVRB
CHRPPEL  DS    CL4       HIGH ORDER ADDR CHKPT SVRB
CHRCKID2 EQU   CHRCHKID+1
CHRPADH  EQU   *    PADDING BEGINS HERE.
*                                                                     *
*        MAPPING OF DEB TO GET VOLUME SEQUENCE NO
DEBSECT  DSECT
INITIAL  DS    9F        INITIAL SECTION OF DEB
VOLSEQNO DS    1F        VOLUME SEQUENCE NO  FOR TAPE
         IEEVCHWA   VER=3
CKTSTEOV EQU   CKUNIT
CKEOVCMR EQU   CKUNIT+4
PRESV    DS    1F        XCTL PARM LIST - MODULE NAME
PRESV4   DS    1C
PRESV5   DS    CL3
PRESV8   DS    1F        POINTER TO PARMLST
PRENXB   DS    1F        ADDR OF BUFFER
PRENOB   DS    1F        LENGTH OF BUFFER
*        OUTPUT BUFFER HANDLER'S PARAMETERS
PREAD    DS    0F        WORK AREA FOR ADDRESSES
         DS    1C
PREAD2   DS    3C
*        INFO FOR TEST OF EOV CONDITION                               *
PREADEOV DS    1F        ADDRESS OF TEST FOR EOV CONDITION
PRNEOV   DS    1F        VALUE USED IN TEST FOR EOV CONDITION
PRESAVE  DS    12F       SAVE AREA
PRELNGTH EQU   *
         DCBD  DSORG=(BS,PO),DEVD=(DA,TA)
*        ADDRESSING BYTES WITHIN WORD
DCBSYN1  EQU   DCBSYNAD+1     DCB SYNAD ADDRESS
CKRETCD1 EQU   CKRETCOD+1     RETURN CODE FIELD IN CHKWA
         EJECT
         CVT
         EJECT
         IHAASCB
         EJECT
         IHALDA
         END
