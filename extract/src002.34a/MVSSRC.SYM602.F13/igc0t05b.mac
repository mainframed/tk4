         TITLE 'IGC0T05B - ACCESS METHOD PROCESSOR'
IGC0T05B CSECT
* STATUS CHANGE LEVEL 000
*
* APAR OZ31493 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C154840,154870,460000,462000,468000                           @ZSUT222
*A468200-468800,496510                                         @ZSUT222
*********************************************************************
*
*TITLE - ACCESS METHOD DISPOSITION
*
*STATUS - LEVEL 0
*
*FUNCTION / OPERATION -  A.  FOR PARTITIONED DATA SETS, OPENED FOR
*                            OUTPUT, READ DIRECTORY TO DETERMINE IF
*                            ANY MEMBERS WERE ADDED AFTER THE CHECK-
*                            POINT WAS TAKEN.
*
*                              IF MEMBERS WERE ADDED DELETE THEM WITH
*                              THE STOW FUNCTION  (EXCEPT SUBSYSTEM).
*
*                        B.  FOR ALL OPENED DATA SETS, IF I/O MUST BE
*                            REINITIATED, AS A RESULT OF CHKI/O PURGING
*                            ISSUE THE RESTORE MACRO TO RESCHEDULE THE
*                            REQUESTS.
*
*ENTRY POINT - IGC0T05B   CSECT
*
*INPUT -  REGISTER 1 -- WORKAREA
*         REGISTER 8 -- TABLE ENTRY
*
*         A TABLE CONSISTING OF 48 BYTE ENTRIES CONTAINING OPENED DATA
*         SET INFORMATION, ONE ENTRY PER DATA SET.
*         REFERENCE DSECT AT END OF LISTING.
*
*         AT LEAST TWO 304 BYTE BUFFER SEGMENTS CONTAINING THE CONTROL
*         BLOCKS AND THE WORKAREA TO PROCESS DIRECTORY BLOCKS.
*         REFERENCE DSECT AT END OF LISTING.
*
*OUTPUT -  REGISTER 1  WORKAREA ADDRESS
*
*          ALL DATA SETS RE-INITIALIZED PROPERLY (AS THEY EXISTED AT
*          CHECKPOINT TIME)
*
*EXTERNAL ROUTINES - RESIDENT CONVERT ROUTINES VIA BALR
*                    IDA0A05B VIA BALR IF THERE ARE ANY VSAM DATA SETS
*
*EXITS -  NORMAL  TO IGC0V05B VIA XCTL  RETURN CODE FIELD =0
*
*         ERROR   TO IGC0V05B VIA XCTL
*                    RETURN CODE FIELD = 92 - ERROR IN P. O. PROCESSING
*                    RETURN CODE FIELD = 96 - ERROR IN DELETION
*
*TABLES / WORKAREAS - REFERENCE DSECTS AT END OF LISTING
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME &D NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*ATTRIBUTES - RE-ENTRANT,REUSABLE,PRIVILEGED,ENABLED
*
*********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0
WRKR2    EQU   1
DCBR     EQU   2
BASER    EQU   3
DEBR     EQU   4
UCBR     EQU   5
TIOTR    EQU   6
TCBR     EQU   7
TABLR    EQU   8
CTABLR   EQU   9
BUFR     EQU   10
DSCNTR   EQU   11
WRKR3    EQU   12
WRKR4    EQU   13
WRKR5    EQU   14
WRKR6    EQU   15
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
IS       EQU   X'80'                    INDEXED SEQUENCIAL
PS       EQU   X'40'                    PHYSICAL SEQUENCIAL
DA       EQU   X'20'                    DIRECT ACCESS
PO       EQU   X'02'                    PARTITIONED ORGANIZATION
NULL     EQU   X'80'                    NULLFILE OR SYSCHECK
INOROUT  EQU   X'40'                    SYSIN OR SYSOUT DATA SET
DADEV    EQU   X'20'                    DA DEVICE
TPDEV    EQU   X'10'                    TAPE DEVICE
UNITREC  EQU   X'04'                    UNIT RECORD EQUIPMENT
ERRINNSL EQU   X'80'                    ERROR IN NSL ROUTINE
NSLMTSW  EQU   X'40'                    NSL MOUNT SWITCH
NSLCOMU  EQU   X'20'                    NSL COMMUNICATION BIT
BYPASS   EQU   X'10'                    BYPASS LABEL PROCESSING
NSL      EQU   X'04'                    NON-STANDARD LABEL
SL       EQU   X'02'                    STANDARD LABEL
NL       EQU   X'01'                    NO LABEL
GTR5VOL  EQU   X'80'                    GREATER THAN 5 VOLUMES
POCONCAT EQU   X'40'                    P.O. CONCATENATED
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
NONDAFLG EQU   X'40'                    NON-DA DATA SET FLAG
NSLFLAG  EQU   X'10'                    NSL ROUTINE FLAG
TYPERST  EQU   X'80'                    IMMEDIATE RESTART
TABENT   EQU   48                       TABLE ENTRY LENGTH
WRITE    EQU   X'01'                    WRITE ON TAPE
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
SENSE    EQU   X'04'                    SENSE
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
UNLOAD   EQU   X'0F'                    REWIND AND UNLOAD
WTM      EQU   X'1F'                    WRITE TAPE MARK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
SEARCH   EQU   X'31'                    SEARCH
SRCHCNT  EQU   X'05'                    COUNT FOR SEARCH ID
TIC      EQU   X'08'                    TIC
READDA   EQU   X'06'                    READ FOR DA
LENJFCB  EQU   X'B0'                    LENGTH OF JFCB
LBLLEN   EQU   X'50'                    LENGTH OF LABEL
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR092   EQU   92                       ERROR IN PO PROCESSING@ZSUT222
ERR096   EQU   96                       ERROR IN DELETING     @ZSUT222
*                                       MEMBER FROM DIRECTORY
D1       EQU   1                        CONSTANT ONE            Y02076
D2       EQU   2                        CONSTANT TWO            Y02076
D3       EQU   3                        CONSTANT THREE          Y02076
D4       EQU   4                        CONSTANT FOUR           Y02076
D8       EQU   8                        CONSTANT EIGHT          Y02076
D24      EQU   24                       CONSTANT TWENTY FOUR    Y02076
D32      EQU   32                       CONSTANT THIRTY TWO     Y02076
*
*      MASKS USED TO MAKE TESTS
*
OUT      EQU   X'0F'
DEBID    EQU   X'0F'                    DEB IDENTIFICATION
TCAMID1  EQU   X'C0'                    UNIQUE TCAM DEB CODE     M3408
TCAMID2  EQU   X'CF'                    UNIQUE TCAM DEB CODE     M3408
MAXEXT   EQU   X'CA'                    MAXIMUM NO. OF EXTENT
UNRELCC  EQU   X'42'                    UNRELATED FLAG, COMMAND CHAIN
UNITEX   EQU   X'01'                    UNIT EXCEPTION
NORECORD EQU   X'08'                    NO RECORD FOUND
NEXTTRK  EQU   X'00'                    NEXT TRACK, R=0
NTPRGD   EQU   X'FF'                    NO PURGED
X80      EQU   X'80'                    EPCB KEY TEST MASK       YM7075
*
*********************************************************************
*
         BALR  BASER,0                  ESTABLISH ADDRESSIBILITY
         USING *,BASER
         B     BEGIN                    BRANCH AROUND EYECATCHER
         CNOP  0,8                      ALIGN TO A DOUBLEWORD BOUNDARY
         DC    CL8'IGC0T05B'            MODULE NAME            @ZSUT222
         DC    CL8'&SYSDATE'            LAST DATE SHIPPED      @ZSUT222
         DC    CL8'@ZSUT222'            LAST CODE SHIPPED      @ZSUT222
BEGIN    EQU   *
*
         USING IHADCB,DCBR
         USING DEBBASIC,DEBR                                     Y02076
         USING UCBOB,UCBR
         USING TCB,TCBR
         USING TABL,CTABLR
         USING CVTMAP,WRKR2                                      Y02076
         USING RSDSECT,WRKR4
         USING RSTWA,BUFR
*
REPDCB00 EQU   *
         L     TCBR,RSTCBAD             GET TCB ADDRESS          YM3441
         L     DEBR,RSINT               GET 1ST DEB ADDR         YM3441
         ST    DEBR,TCBDEB              SETUP TCB DEB CHAIN      YM3441
REPDEBCK EQU   *                        DEB CHECK LOOP           YM5318
         L     DCBR,DEBDCBAD            GET DCB ADDR             YM5318
         SH    DEBR,THREE               POINT TO AM TYPE         YM5318
         IC    WRKR3,0(DEBR)            LOAD AM TYPE             YM5318
         XC    0(3,DEBR),0(DEBR)        CLEAR OLD DEBCHK DATA    YM5722
         DEBCHK (DCBR),TYPE=ADD,AM=((WRKR3))                     YM5318
         L     DEBR,4(WRKR2)            GET NEXT DEB ADR         YM5318
         LA    DEBR,0(DEBR)             CLEAR HI ORDER BYTE      YM5318
         LTR   DEBR,DEBR                END OF DEB CHAIN         YM5318
         BNZ   REPDEBCK                 BRANCH IF MORE DEBS      YM5318
*
         LR    CTABLR,TABLR             INITIALIZE D.S. ENTRY LIST
         L     WRKR4,TABSEGAD-1         GET FIRST SEGMENT ADDRESS
*
REPDCB02 EQU   *
         L     DCBR,TABDCBAD-1          GET DCB ADDRESS
         L     DEBR,DCBDEBAD            GET DEB ADDRESS
         LA    DEBR,0(DEBR)             HI BYTE CLEARED
         XC    RSERAS00,RSERAS00        ZERO SCRATCH WORD        Y02076
         LR    TIOTR,DEBR               ESTABLISH ADDRESSABILITY Y02076
         LA    TIOTR,D32(TIOTR)             TO DEB DEV DEP SECT  Y02076
         USING DEBDASD,TIOTR                                     Y02076
         L     UCBR,DEBUCBAD            GET USER UCB ADDRESS
*
         TM    TABDSORG,PO              DATA SET PARTITIONED
         BZ    REPDCB20                 NO BRANCH - NEXT ENTRY
*
*
         TM    DEBOPATB,OUT             D.S. PROCESSED IN OUTPUT MODE
         BZ    REPDCB20                 NO BRANCH - NEXT ENTRY
*
*********************************************************************
*
*      AT THIS POINT THE DATA SET DIRECTORY MUST BE READ TO DETERMINE
*      IF MEMBERS WERE ADDED AFTER THE CHECKPOINT WAS TAKEN ....
*
*      THIS WILL BE DONE BY READING A DIRECTORY BLOCK, EXAMINING THE
*      ENTRIES FOR A TTR (INDICATING THE BEGINNING OF WHERE THE MEMBER
*      PHYSICALLY RESIDES IN THE DATA SET), GREATER THAN THE TTR OF THE
*      MEMBER CURRENTLY BEING WRITTEN. IF ONE IS FOUND, THE MEMBER NAME
*      ASSOCIATED WITH THE TTR WILL BE USED TO DELETE THE MEMBER FROM
*      THE DIRECTORY VIA THE STOW MACRO.
*
*      THIS PROCEDURE WILL BE CARRIED OUT FOR THE ENTIRE DATA SET
*      DIRECTORY ....
*
*********************************************************************
*
REPDCB04 EQU   *
*
REPDCB06 EQU   *
*
***********************************************************************
*
*     CONSTRUCT THE CONTROL BLOCKS NECESSARY TO READ DIRECTORY BLOCKS
*
*    FIRST 48 BYTES CONSIST OF SYSTEM DEB - WILL BE USED TO REFERENCE
*    ALL ALLOCATED DEVICES USED BY RESTARTED TASK ..
*
***********************************************************************
*
REPDCB08 EQU   *
*
         L     WRKR2,CVTPTR             GET COMMUNICATION VECTOR TABLE
         LA    WRKR1,RSDCBREP           GET ADDRESS OF RESTART DCB
         ST    WRKR1,RSDEBDCB           STORE IN RESTART DEB
         ST    WRKR1,RSIOBDCB           STORE IN RESTART IOB
         MVI   RSDEBID,DEBID            STORE IDENTIFICATION FOR DEB
         ST    UCBR,RSDEBUCB            SAVE USER UCB ADDRESS IN DEB
*
* SET DEB EXTENTS TO COVER ENTIRE VOLUME--FROM CCHH=0 TO
* CCHH= HIGHEST POSSIBLE FOR THE DEVICE TYPE.
*
         L     WRKR1,CVTXAPG            GET ADR OF APP VECT TBL  Y02076
         ST    WRKR1,RSDEBAPP           STORE IN DEB             Y02076
         L     WRKR2,CVTZDTAB           ADR OF DEVICE            Y02076
*                                       CHARACTERISTICS TABLE
         DROP   WRKR2                                            M0187
         IC    WRKR3,UCBTBYT4           GET CLASS INDEX FROM UCB M0187
         N     WRKR3,MASK1              LO-ORDER 4 BITS          M0187
         IC    WRKR3,0(WRKR2,WRKR3)     DEVTAB INDEX, THIS       M0187
*                                       DEVTYPE                  M0187
         AR    WRKR2,WRKR3              POINT TO DEVTYPE ENTRY   M0187
         XC    RSDEBSCC(8),RSDEBSCC     CLEAR DEB EXTENTS        M0187
         MVC   RSDEBECC,0(WRKR2)        SET HI CC AS HIGHEST ON  M0187
*                                       VOLUME                   M0187
         MVC   RSDEBNTR(2),MAXTRKNO     STORE MAXIMUM NUMBER OF TRACKS
         MVI   RSDEBUSR,NMEXTS1         SET NO. OF EXTS = 1      Y02076
         MVI   RSDEBAPP,EXSCLS1         SET EXTENT SCALE = 4     Y02076
         MVI   RSDEBMOD,DVMODS1         SET FILE MASK = C0       Y02076
         MVC   RSDEBBIN(D2),BINUMS1     SET BIN NO. = 0000       Y02076
*
***********************************************************************
*
*    THE NEXT FOUR BYTES WILL BE USED FOR THE DCB (S) DEB ADDRESS
*
         LA    WRKR1,RSDEB              GET DEB ADDRESS
         ST    WRKR1,RSDCBDEB           STORE IN RESTART DCB
*
*    THE NEXT FOUR BYTES WILL BE USED FOR AN ECB
*
         MVI   RSIOBFG1,UNRELCC         SET UNRELATED FLAG IN IOB
         LA    WRKR1,RSECBAD            GET ECB FOR IOB
         ST    WRKR1,RSIOBECB           STORE ECBAD IN IOB
*
*    THE 40 BYTE SYSTEM IOB WILL BE NEXT IN BUFFER SEGMENT
*
         LA    WRKR1,RSCCWLST           GET CHANNEL PROGRAM ADDR.
         ST    WRKR1,RSIOBCPA           STORE ADDRESS IN IOB
         XC    RSIOBDAD(8),RSIOBDAD     CLEAR D A ADDRESS FIELD
         MVC   RSIOBDAD+1(6),DEBBINUM   STARTING SEARCH ARGUMENT
*
*    THE 24 BYTE CHANNEL PROGRAM WILL FOLLOW. SRCH - TIC - READ.
*
         XC    RSCCW1(24),RSCCW1        CLEAR  READ CCW
         LA    WRKR1,RSIOBDAD+3         GET ADDRESS OF SRCH ARGUMENT
         ST    WRKR1,RSCCW1             STORE IN SRCH CCW
         LA    WRKR1,RSCCW1             GET ADDRESS OF SRCH CCW
         ST    WRKR1,RSCCW2             STORE IN TIC CCW
         LA    WRKR1,RSBUFSEG           GET BUFFER SEGMENT TO READ INTO
         ST    WRKR1,RSCCW3             STORE IN READ CCW
         OC    RSCCWLST,CCWLIST         CONSTANTS IN THE CHANNEL PROGRM
*
REPDCB10 EQU   *
*
***********************************************************************
*
*      AT THIS POINT ALL CONTROL BLOCKS HAVE BEEN ESTABLISHED
*
***********************************************************************
*
         L     DCBR,TABDCBAD-1          REFRESH USER DCB ADDRESS
         MVC   RSERAS01(8),RSIOBDAD     SAVE 1ST DIR BLK ADDR    YM7360
REPDCB11 EQU   *                        RETRY LOOP ENTRY         YM7360
         NI    RSERAS00,X'FF'-STOWSW    RESET STOW-DELETE SW     YM7360
*
REPDCB12 EQU   *
*
***********************************************************************
*
*      SETUP READ-WAIT SUBROUTINE TO BRING DIRECTORY BLOCK INTO BUFFER
*
***********************************************************************
*
         SR    TIOTR,TIOTR              INITIALIZE TO ZERO
         IC    TIOTR,RSIOBDAD+7         GET CURRENT R VALUE
         LA    TIOTR,1(TIOTR)           INCREMENT R BY ONE
         STC   TIOTR,RSIOBDAD+7         SAVE R IN SEARCH ARGUMENT
         LA    WRKR3,RSBUFSEG           POINT TO BEGINNING OF BUFFER
*
***********************************************************************
*
         EXCP  RSIOB                    READ DIRECTORY BLOCK
*
*********************************************************************
*
         WAIT  ECB=RSECBAD              WAIT FOR RECORD TO COME IN
*
***********************************************************************
*
         TM    RSECBAD,PERMERR          ERRORS ASSOCIATED WITH REQUEST
         BO    REPDCB13                 NO BRANCH
*
         TM    RSIOBCSW+4,UNITEX        UNIT EXCEPTION ON IN CSW =FM
         BO    REPDCB20                 YES BRANCH NEXT ENTRY
*
         TM    RSIOBSN2,NORECORD        NO RECORD FOUND
         BO    REPDCB18                 YES BRANCH TO NEXT TRACK
*
         B     REPDCB90                 SET UP ERROR RETURN CODE
*
REPDCB13 EQU   *
*
         LH    WRKR2,0(WRKR3)           GET LEN OF USED DIR. BLOCK
         LA    TCBR,0(WRKR2,WRKR3)      POINT TO END OF BLOCK
         LA    WRKR3,2(WRKR3)           SLIP PAST LEN FIELD
*
***********************************************************************
*
REPDCB14 EQU   *
*
*      PROCESS DIRECTORY BLOCK - DETERMINE IF MEMBERS WERE ADDED
*
*
* DO NOT DELETE CHECKPOINT MEMBER THAT IS BEING USED FOR RESTART
*
*
         LA    DCBR,0(,DCBR)            CLEAR HI-ORDER BYTE      A27809
         CLC   DIREND,0(WRKR3)          Q-END OF DIRECTORY NAMES YM7822
         BE    REPDCB20                 IF END, GO GET NEXT D/S  YM7822
         C     DCBR,RSCKDCB             IS CURRENT DCB CHECKPOINT DCB
         BNE   REPDCB15                 BRANCH IF NO
         CLC   DCBRELAD(3),8(WRKR3)     CURRENT TTR IN DCB = TTR IN
*                                           DIRECTORY
         BE    REPDCB16                 BRANCH IF YES
*
REPDCB15 EQU   *
*
         CLC   DCBRELAD(3),8(WRKR3)     CURR TTR IN DCB GREATER THAN
*                                       EXISTING MEMBERS TTR IN DIR.
         BH    REPDCB16                 YES BRANCH
*
*      MEMBER WAS ADDED AFTER CHECKPOINT ENTRY TAKEN - MUST DELETE
*
         MVC   TABNVOLS(12),0(WRKR3)    SETUP FOR DELETE FUNCTION
*
*********************************************************************
*                                                                YM7360
         OI    RSERAS00,STOWSW          SET STOW-DELETE SW       YM7360
*
         STOW  (DCBR),TABNVOLS,D        DELETE MEMBER NAME FROM DIR.
***********************************************************************
*        DCBCNSTO WILL BE RESET AFTER THE STOW DELETE.  IF THE DCB IS *
*        OPEN FOR PS FOR OUTPUT WITH A MEMBER NAME SPECIFIED, STOW    *
*        WILL NOT BE ISSUED AT CLOSE TIME IF THE USER HAS ISSUED A    *
*        STOW; HENCE DCBCNSTO IS RESET SO THAT CLOSE WILL NOT THINK   *
*        THAT A STOW WAS ISSUED.                                      *
***********************************************************************
         NI    DCBCIND2,X'FF'-DCBCNSTO  RESET STOW ISSUED        YM7553
***********************************************************************
*
         LTR   WRKR6,WRKR6              ERRORS OCCUR DURING STOW
         BNZ   REPDCB80                 YES BRANCH TO SET ERR CODE
*
***********************************************************************
*
REPDCB16 EQU   *
*
         IC    TIOTR,11(WRKR3)          GET ENTRY LENGTH
         SLL   TIOTR,28                 MULTIPLY LAST FOUR BITS
         SRL   TIOTR,27                 BY TWO TO GIVE BYTE LENGTH
         LA    WRKR3,12(TIOTR,WRKR3)    POINT TO NEXT POSSIBLE ENTRY
*
         CR    WRKR3,TCBR               AT END OF DIRECTORY BLOCK
         BL    REPDCB14                 NO BRANCH - NEXT ENTRY
*
         TM    RSERAS00,STOWSW          DID STOW-DELETE OCCUR    YM7360
         BZ    REPDCB12                 IF NOT, GO READ NEXT BLK YM7360
         MVC   RSIOBDAD(8),RSERAS01     RESET TO 1ST DIR BLK     YM7360
         B     REPDCB11                 GO START AGAIN,DIRECTORY YM7360
*                                       COMPRESSION MAY HAVE     YM7360
*                                       MOVED THE NEXT ENTRIES   YM7360
*                                       INTO BLOCKS PREVIOUSLY   YM7360
*                                       READ.                    YM7360
*
***********************************************************************
*
*      SET UP TO ADJUST DIRECT ACCESS ADDRESS FOR NEXT TRACK. TO KEEP
*      DEVICE INDEPENDANT, ROUTINE WILL USE RESIDENT CONVERT ROUTINES.
*
***********************************************************************
*
REPDCB18 EQU   *
*
         MVI   RSIOBDAD+7,NEXTTRK       SET R=0, NEXT TRACK
*
         L     UCBR,CVTPTR              ADDRESS OF CVT
         LA    DSCNTR,RSBUFSEG          ADDRESS OF TEMP SAVE AREA
         STM   WRKR1,WRKR6,0(DSCNTR)    SAVE ALL REGISTERS
         LR    TIOTR,DSCNTR             SAVE CONTENTS
*
*      PREPARE TO CONVERT MBBCCHHR TO TTR VIA RESIDENT CONVERT RT.
*
         LR    WRKR2,DEBR               ADDRESS OF DEB - REG.1
         LA    DCBR,RSIOBDAD            ADDRESS OF MBB - REG.2
*
         L     WRKR6,CVTPRLTV-CVTMAP(UCBR) RT. TO CNVRT TO TTRN  Y02076
         BALR  WRKR5,WRKR6              TO ROUTINE
*
         SRL   WRKR1,16                 RIGHT JUSTIFY TT
         LA    DSCNTR,1                 CONSTANT OF ONE
         AR    WRKR1,DSCNTR             ADD TO TT
         SLL   WRKR1,16                 LEFT JUSTIFY TT, R=0, N=0
*
         L     WRKR6,CVTPCNVT-CVTMAP(UCBR) RT- CNVRT TO MBBCCHHR Y02076
         BALR  WRKR5,WRKR6              TO ROUTINE
*
         LTR   WRKR6,WRKR6              ERRORS IN CONVERTING
*
         LR    DSCNTR,TIOTR             RESTORE CONTENTS
         LM    WRKR1,WRKR6,0(DSCNTR)    RESTORE ALL REGISTERS
*
         BZ    REPDCB12                 NO BRANCH
*
         B     REPDCB90                 TO ERROR RETURN
*
***********************************************************************
*
REPDCB20 EQU   *
*
         TM    TABFLG1,TABLAST          WAS THIS LAST ENTRY IN TABLE
         BO    REPDCB22                 YES BRANCH
*
         LA    CTABLR,TABENT(CTABLR)    TO NEXT ENTRY
         B     REPDCB02                 RELOOP
*
REPDCB22 EQU   *
*
***********************************************************************
*
*      RESTORE ALL I/O REQUESTS TO CHANNEL QUEUES VIA RESTORE MACRO
*
***********************************************************************
*
         L     DEBR,RSINT               GET 1ST DEB ADDR         A28676
*
REPDCB24 EQU   *
*
         LTR   DEBR,DEBR                END OF DEB CHAIN
         BZ    REPDCB94                 YES BRANCH
         CLI   DEBNMSUB,TCAMID1         Q - TCAM DEB (TYPE 1)    M3408
         BE    REPDCB28                 IF YES, SKIP THIS DEB    M3408
         CLI   DEBNMSUB,TCAMID2         Q - TCAM DEB (TYPE 2)    M3408
         BE    REPDCB28                 IF YES, SKIP THIS DEB    M3408
*
         LR    WRKR2,DEBR               GET ADR OF DEB           Y02076
         LA    WRKR5,DEBPRFLN           GET LNGTH OF DEB PREFIX  Y02076
         SR    WRKR2,WRKR5              CALC ADR OF PREFIX       Y02076
         USING DEBPREFX,WRKR2           ADDRESS DEB PREFIX       Y02076
         CLI   DEBAMTYP,SUBSYSDS        TEST FOR SS DATASET'X81' Y02076
         BNE   REPDCB25                 BR IF NOT SUBSYS         Y02076
         TM    DEBFLGS1,DEBCINDI        TEST IF CI BIT IS ON     Y02076
         BO    REPDCB28                 BR OVER RESTORE IF YES   Y02076
*
REPDCB25 EQU   *                        INSTR MUST FOLLOW        Y02076
         L     WRKR2,DEBUSRPG           GET ADDRESS OF POSSIBLE IOB
         LA    WRKR2,0(WRKR2)           HI BYTE CLEARED
         LTR   WRKR2,WRKR2              VALID ADDRESS PRESENT
         BZ    REPDCB28                 NO BRANCH
*
REPDCB26 EQU   *
         CLC   DEBUSRPG+D1(D3),NOPRGIND WERE I/O REQUESTS PRGD   Y02076
         BE    REPDCB28                 BR OVER RESTORE IF 'FFF  Y02076
         MVI   0(WRKR2),OPTBYTE         SET OPTION BYT FOR REST  Y02076
         L     WRKR3,D24(,WRKR2)        GET PTR - TOP REST LST @ZA03659
         USING EPCB,WRKR3               MOVE USERS TCB TO LIST   Y02076
REPDC26A EQU   *                        INSTR MUST FOLLOW        Y02076
         L     WRKR5,EPCBCHN            GET CHAIN PTR NEXT SET   Y02076
         MVC   EPCBRTCB,RSTCBAD         UPDATE HDR TCB ADDR      YM7880
         LA    WRKR3,EPCBIOB-EPCB(,WRKR3) INDEX TO 1ST ENTRY     YM7880
REPDCB27 EQU   *                        INSTR MUST FOLLOW        Y02076
         OC    0(D4,WRKR3),0(WRKR3)     TEST IF END OF SET       Y02076
         BZ    REPDC27A                 BRANCH IF END OF SET     Y02076
         USING EPCBIOB,WRKR3            ADDRESS. TO ENTRY        Y02076
         L     TCBR,RSTCBAD             GET ADR OF TCB           Y02076
         TM    EPCBPKEY,X80             IS KEY 8 OR GREATER      YM7075
         BNO   REPKYLT8                 IF NOT, SKIP KEY UPDATE  YM7075
         MVC   EPCBPKEY,TCBPKF          PROTECT KEY INTO ENTRY   Y02076
REPKYLT8 EQU   *                        BYPASS KEY UPDATE ENTRY  YM7075
         OC    EPCBTCB,EPCBTCB          IS A TCB ADDR PRESENT    YM7075
         BZ    REPNOTCB                 IF NOT,SKIP TCB UPDATE   YM7075
         MVC   EPCBTCB,RSTCBAD          MVE USER TCB ADR TO NTRY Y02076
REPNOTCB EQU   *                        BYPASS TCB UPDATE ENTRY  YM7075
         LA    WRKR3,EPCBENTL(WRKR3)    INDEX TO NXT ENTRY     @ZA03659
         B     REPDCB27                 GO PROCESS NEXT ENTRY    Y02076
REPDC27A EQU   *                        INSTR MUST FOLLOW        Y02076
         LTR   WRKR5,WRKR5              Q-END OF ENTIRE REST LST Y02076
         BZ    REPDC27B                 BRANCH IF END            Y02076
         LR    WRKR3,WRKR5              SET WRKR3 TO ADR NEXT ST Y02076
         B     REPDC26A                 GO PROCESS NEXT SET      Y02076
REPDC27B EQU   *                        INSTR MUST FOLLOW        Y02076
*
*********************************************************************
*
         RESTORE DEBUSRPG               RESTORE DEBS I/O REQUESTS
*
***********************************************************************
*
REPDCB28 EQU   *
*
         L     DEBR,DEBDEBAD            GET NEXT POSSIBLE DEB
         LA    DEBR,0(DEBR)             HI BYTE CLEARED
         B     REPDCB24                 REPEAT TESTS
*
REPDCB30 EQU   *
*
*
REPDCB40 EQU   *
*
REPDCB50 EQU   *
*
REPDCB60 EQU   *
*
REPDCB70 EQU   *
*
REPDCB80 EQU   *
*
         MVI   RSRETCOD+1,ERR096        ERROR IN DELETING      @ZSUT222
*                                       MEMBER FROM DIRECTORY
         B     REPDCBER                 SET UP FOR XCTL        @ZSUT222
*
REPDCB90 EQU   *
*
*     MUST TERMINATE REPI/O DUE TO UNRECOVERABLE ERRORS IN PROCESSING
*
         MVI   RSRETCOD+1,ERR092        ERROR IN PO PROCESSING @ZSUT222
REPDCBER EQU   *                                               @ZSUT222
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       DETECTING ERROR.       @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
*
REPDCB94 EQU   *
*
***********************************************************************
*                                                                     *
*      IF A VSAM VAT EXISTS, BALR TO VSAM RESTART ROUTINE - IDA0A05B. *
*                                                                     *
***********************************************************************
*
         L     TCBR,RSTCBAD             GET TCB ADDRESS        @OZ03934
         L     WRKR6,TCBJSCB            GET JSCB ADDRESS       @OZ03934
         USING IEZJSCB,WRKR6            ADDRESSIBILITY TO JSCB @OZ03934
         L     WRKR5,JSCBSHR            LOAD POINTER TO VAT    @OZ03934
         LTR   WRKR5,WRKR5              IS THE POINTER NULL    @OZ03934
         BZ    REPDCBX0                 YES, BR TO VS RESTART  @OZ03934
         CLC   JSCBSHR(D1),JSCBSTEP     CORRECT STEP NUMBER    @OZ03934
         BNE   REPDCBX0                 NO, BR TO VS RESTART   @OZ03934
REPDCBX4 MVC   RSJFCB(D8),RSMODAM0      VSAM PHASE OF RESTART    Y02076
         LOAD  EPLOC=RSJFCB             LOAD VSAM RESTART MOD  @Z30SSDT
         LR    WRKR6,WRKR1              ENTRY POINT IN REG 15  @Z30SSDT
         LR    WRKR3,WRKR4              SAVE BASE FOR RSDSECT  @Z30SSDT
         LA    WRKR4,RSREGSAV           PT REG 13 TO SAVEAREA  @Z30SSDT
         LR    WRKR2,BUFR               POINT REG 1 TO RST W/A @Z30SSDT
         BALR  WRKR5,WRKR6              CALL VSAM RESTART RTN  @Z30SSDT
         LR    WRKR4,WRKR3              LOAD BASE FOR RSDSECT  @Z30SSDT
         DELETE EPLOC=RSJFCB            DELETE VSAM RESTART    @Z30SSDT
*
*********************************************************************
*
*      SET UP FOR XCTL TO LAST PHASE OF RESTART FUNCTION
*
*********************************************************************
*
REPDCBX0 MVC   RSJFCB(8),RSTMODNM       NEXT PHASE OF RESTART
REPDCBX8 LA    WRKR6,RSJFCB+8           SETUP FOR XCTL MACRO
         LR    WRKR2,BUFR               POINT REG 1 TO THE RESTART W/A
         XCTL  EPLOC=RSJFCB,SF=(E,(15))
*
*********************************************************************
*
***********************************************************************
*
*     CONSTANTS USED IN REPI/O
*
***********************************************************************
*
THREE    DC    H'3'                     OFFSET TO AMTYP          Y02076
MAXTRKNO DC    X'7FFF'                  MAX. NO. OF TRACKS
MASK1    DC    F'15'                    MASK OF LO-ORDER 4 BITS  M0187
*
RSTMODNM DC    C'IGC0V05B'              RESTART EXIT MOD
RSMODAM0 DC    C'IDA0A05B'              VSAM RESTART MODULE    @Z30SSDT
MODID    DC    CL8'IGC0T05B'            MODULE ID              @ZSUT222
DIREND   DS    0XL8                     PDS DIRECTORY END NAME   YM7822
         DC    X'FFFFFFFFFF'            1ST 5 BYTES OF 'DIREND'  YM7822
NOPRGIND DC    X'FFFFFF'                NO PURGE IND (3 BYTES)   YM7822
BINUMS1  DC    XL2'0000'                BIN NUMBER = 0000        Y02076
NMEXTS1  EQU   X'01'                    NO. OF EXTENTS           Y02076
EXSCLS1  EQU   X'04'                    DEB EXT SCALE            Y02076
DVMODS1  EQU   X'C0'                    FILE MASK                Y02076
OPTBYTE  EQU   X'C0'                    RESTORE LIST OPTION BYTE Y02076
STOWSW   EQU   X'80'                    STOW-DELETE PROCESS SW   YM7360
DEBPRFLN EQU   16                       LENGTH OF DEB PREFIX     Y02076
SUBSYSDS EQU   X'81'                    SUBSYSTEM INDICATOR      Y02076
*
***********************************************************************
*
*     CHANNEL PROGRAM USED BY REPI/O
*
***********************************************************************
*
CCWLIST  DC    X'3100000040000005'      SRCH ID EQUAL , 5 BYTES CCHHR
         DC    X'080000'                TIC
ZERO     DC    X'0000000000'            ZERO
         DC    X'0600000000000100'      READ DATA,256 BYTES DIRECTORY
*                                                                     *
*        MAINTENANCE SPACE                                            *
*                                                                     *
PATCH    DC    XL((*-IGC0T05B)/20)'00'   FIVE PERCENT MAINTENANCE SPACE
*                                                                     *
         IECDEPCB                                                Y02076
         EJECT
         IEEVRSWA VER=3                AOS2 VERSION OF WA
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSBUFSEG DS    0CL176
RSJFCB   EQU   RSBUFSEG
*
***********************************************************************
*
*                  JFCB
*
***********************************************************************
*
JFCBDSNM DS    CL44                         DATA SET NAME
JFCBELNM DS    CL8                          ELEMENT NAME OR VERSION
JFCBTSDM DS    CL1                          TASK SCHEDULER - DATA
*                                            MANAGEMENT INTERFACE BYTE
JFCBSYSC DS    CL13                         SYSTEM CODE
JFCBLTYP DS    CL1                          LABEL TYPE AND USER'S-LABEL
*                                            INDICATOR
         DS    CL1                          NOT USED
JFCBFLSQ DS    CL2                          FILE SEQUENCE NUMBER
JFCBVLSQ DS    CL2                          VOLUME SEQUENCE NUMBER
JFCBMASK DS    CL8                          DATA MANAGEMENT MASK
JFCBCRDT DS    CL3                          DATA SET CREATION DATE
JFCBXPDT DS    CL3                          DATA SET EXPIRATION DATE
JFCBIND1 DS    CL1                          INDICATOR BYTE 1
JFCBRLSE EQU   64                            BITS 0 AND 1 - EXTERNAL
*                                            STORAGE RELEASE INDICATOR
JFCBLOCT EQU   16                            BITS 2 AND 3 - DATA SET
*                                            HAS BEEN LOCATED
JFCBNEWV EQU   4                             BITS 4 AND 5 - NEW VOLUME
*                                            ADDED TO DATA SET
JFCBPMEM EQU   1                             BITS 6 AND 7 - DATA SET IS
*                                            A MEMBER OF A PODS OR GDG
JFCBIND2 DS    CL1                          INDICATOR BYTE 2
JFCBSTAT EQU   64                            BITS 0 AND 1 - DATA SET
*                                            STATUS (NEW, OLD, OR MOD)
JFCBSCTY EQU   16                            BITS 2 AND 3 - DATA SET
*                                            SECURITY INDICATOR
JFCBUFNO DS    0AL1
JFCBUFRQ DS    AL1                      BUFFER REQUESTED
JFCBFTEK DS    0BL1
JFCBFALN DS    BL1                      BUFFER ALIGNMENT
JFCBUFL  DS    AL2                      BUFFER LENGTH
JFCEROPT DS    BL1                      ERROR ROUTINE
JFCTRTCH DS    0BL1
JFCKEYLE DS    0AL1
JFCMODE  DS    0BL1
JFCCODE  DS    0BL1
JFCSTACK DS    0BL1
JFCPRTSP DS    BL1                      PRINTER SPACING
JFCDEN   DS    BL1                      TAPE DENSITY
JFCLIMCT DS    AL3                      NO. OF TRKS.TO BE SEARCHED
JFCDSORG DS    BL2                      DATA SET ORGANIZATION
JFCRECFM DS    BL1                      RECORD FORMAT
JFCOPTCD DS    BL1                      OPTION CODES
JFCBLKSI DS    AL2                      BLOCK SIZE
JFCLRECL DS    AL2                      LOGICAL RECORD LENGTH
JFCNCP   DS    AL1                      NO. OF CHANNEL PROGRAM
JFCNTM   DS    AL1                      NO. OF TRKS. FOR MASTER INDEX
JFCRKP   DS    AL2                      RELATIVE POSITION OF KEY
JFCCYLOF DS    AL1                      NO. OF TRKS FOR OVERFLOW
JFCDBUFN DS    AL1                      RESERVED
JFCINTVL DS    AL1                      INTENTIONAL INTERVAL
JFCCPRI  DS    BL1                      PRIORITY
JFCSOWA  DS    AL2                      SIZE OF WORKAREA
JFCBNTCS DS    CL1                          NUMBER OF OVERFLOW TRACKS
JFCBNVOL DS    CL1                          NUMBER OF VOLUME SERIAL
*                                            NUMBERS
JFCBVOLS DS    CL30                         VOLUME SERIAL NUMBERS (THE
*                                            FIRST FIVE)
JFCBEXTL DS    CL1                          LENGTH OF BLOCK OF EXTRA
*                                            VOLUME SERIAL NUMBERS
*                                            (BEYOND FIVE)
JFCBEXAD DS    CL3                          TRACK ADDRESS OF BLOCK OF
*                                            EXTRA VOL SERIAL NUMBERS
JFCBPQTY DS    CL3                          PRIMARY QUANTITY OF D.A.
*                                            STORAGE REQUIRED
JFCBCTRI DS    CL1                          INDICATES WHETHER CYLINDERS
*                                            TRACKS, OR RECORDS ARE
*                                            SPECIFIED IN JFCBPQTY AND
*                                            JFCBSQTY
JFCBSQTY DS    CL3                          SECONDARY QUANTITY OF D.A.
*                                            STORAGE REQUIRED
JFCBIND3 DS    CL1                          INDICATOR BYTE 3
JFCBCNTG EQU   64                            BITS 0 AND 1 - CONTIGUOUS
*                                            STORAGE INDICATOR
JFCBMXIG EQU   16                            BITS 2 AND 3 - MAXIMUM
*                                            AVAILABLE EXTENT INDICATOR
JFCBALXI EQU   4                             BITS 4 AND 5 - ALL EXTENTS
*                                            INDICATOR
JFCBRNDC EQU   1                             BITS 6 AND 7 - ROUND
*                                            CYLINDER INDICATOR
JFCBDQTY DS    CL3                          QUANTITY OF D.A. STORAGE
*                                            REQUIRED FOR A DIRECTORY
JFCBSPNM DS    CL3                          CORE ADDRESS OF THE JFCB
*                                            WITH WHICH CYLINDERS ARE
*                                            SPLIT
JFCBABST DS    CL2                          RELATIVE ADDRESS OF FIRST
*                                            TRACK TO BE ALLOCATED
JFCBSBNM DS    CL3                          CORE ADDRESS OF THE JFCB
*                                            FROM WHICH SPACE IS TO BE
*                                            SUBALLOCATED
JFCBDRLH DS    CL3                          AVERAGE DATA RECORD LENGTH
JFCBVLCT DS    CL1                          VOLUME COUNT
JFCBSPTN DS    CL1                          NUMBER OF TRACKS PER
*                                            CYLINDER TO BE USED BY
*                                            THIS DATA SET WHEN SPLIT
*                                            CYLINDER IS INDICATED
JFCBLGTH EQU   176                          LENGTH OF JFCB
JFCBEND  EQU   *
*
         ORG   RSBUFSEG+176             ORG BACK TO BUFFER SEGMENT
RSSTATUS DS    0CL8
RSSTAT1  DS    CL1                      STATUS BYTE 1
RSSTAT2  DS    CL1                      STATUS BYTE 2
RSSTAT3  DS    CL1                      STATUS BYTE 3
RSSTAT4  DS    CL1                      STATUS BYTE 4
         DS    F                        RESERVED FOR FUTURE USE
         EJECT
         CVT   DSECT=YES,PREFIX=YES,LIST=YES                     Y02076
         EJECT
*
*
*   TASK CONTROL BLOCK
*
*
         IKJTCB                                                  Y02076
         EJECT
         IEZJSCB                                               @OZ03934
         EJECT                                                 @OZ03934
         DCBD  DSORG=PS
         EJECT
         IEZDEB                                                  Y02076
         EJECT
         IHJDSTAB                                                Y02076
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
SRT      DSECT
         IEFUCBOB
*
*
*        THE FOLLOWING EQUATES ARE FOR VSAM                      Y02076
*
EXCPTEST EQU   42                    OFFSET TO DCB MACRF FIELS   Y02076
DSORGFLD EQU   27                    OFFSET TO ACB/AMB DSORG FLD Y02076
ACBAMBID EQU   X'08'                 MASK FOR DCB DATA SET TEST  Y02076
EXCPID   EQU   X'80'                 MASK FOR EXCP TEST ON DSORG Y02076
OFFSET0  EQU   0                     OFFSET TO AMB AMBID FIELS   Y02076
AMBDSID  EQU   X'40'                 MASK FOR AMBID VSAM DS TEST Y02076
VSAMACB  EQU   X'11'                 MASK FOR ACB VSAM DS TEST   Y02076
ACBFLAG  EQU   43                    OFFSET TO ACB FLAG IND. FLD Y02076
         END
