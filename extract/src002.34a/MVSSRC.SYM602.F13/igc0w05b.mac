         TITLE 'IGC0W05B  ISAM && BDAM DATA SET PROCESSOR'       A30552
IGC0W05B CSECT
*
*STATUS CHANGE LEVEL 003
*
*TITLE-        ISAM & BDAM DATA SET PROCESSING
*
*STATUS-       INITIAL CODE
*
*FUNCTION-     FOR ISAM, IF THE DCBMACRF DOES NOT SPECIFY 'PUT',
*              THE FORMAT 2 DSCB IS READ AND AN XCTL IS MADE TO
*              ISAM OPEN TO VALIDATE ITS POINTERS.  IF AN I/O
*              ERROR OCCURS ISAM WILL SET A RETURN CODE.
*              FOR BDAM, LOAD THE ADDRESSES OF SOME OF THE BDAM
*              ACCESS METHOD MODULES INTO SOME OF THE OTHER BDAM
*              ACCESS METHOD MODULES.
*
*ENTRY POINTS- THIS MODULE IS ENTERED FROM IGC0R05B
*
*INPUT-        REGISTER  1    ADDR OF REPI/O'S WORKAREA
*              REGISTER  8    ADDR OF FIRST TABLE ENTRY
*              REGISTER  1    ISAM RETURN CODE
*              REGISTER  10   REP I/O WORKAREA
*
*OUTPUT-       SAME AS REGISTER 1 AND 8 ABOVE
*
*EXTERNAL REFERENCES-  THE FOLLOWING BDAM MODULES MAY BE LOADED,
*              ALTERED, AND DELETED, DEPENDING ON THE BDAM DEB SUB IDS
*              IGG019KA, IGG019KC, IGG019KE, IGG019KF,
*              IGG019KI, IGG019KJ, IGG019KK, IGG019KL,
*              IGG019KN, IGG019KO, IGG019KQ, IGG019KR,
*              IGG019KW, IGG019KY, IGG019LA
*
*EXITS-        TO ISAM OPEN EXECUTOR(IGG01920 OR IGG01950)
*              NORMAL TO IGC0T05B
*              ERROR  TO IGC0V05B
*
*              ERROR 74 - ERROR READING DSCB
*              ERROR 77 - ERROR OPENING ISAM DATASET
*CHANGE ACTIVITY
*
*0000                                                            Y01021
*          RELEASE 20 DELETIONS
*3579001000,015000,410000-411000                                 A30552
*          RELEASE 21 DELETIONS
*0791346000-347000                                               M0187
*0791                                                            A43758
*0791409130-409140,468000                                        A35821
*0791409031-409036,409121-409138                                 A35339
*          RELEASE 22 DELETIONS
*          RELEASE 23 DELETIONS
*          RELEASE 24 DELETIONS
*          RELEASE 25 DELETIONS
*          RELEASE 26 DELETIONS
*          RELEASE 27 DELETIONS
*          RELEASE 28 DELETIONS
*
*     OS/VS2 RELEASE 030 ADDS/DELETIONS/CHANGES
*242104-242265                                                  ZA00104
*241920                                                         ZA02542
*A241810-241840                                                @ZA08277
*
*     OS/VS2 RELEASE 037 ADDS/DELETIONS/CHANGES
*D241810-241840                                                @ZA12948
* APAR OZ31495 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C174000,174500,293500,293600,305000                           @ZSUT222
*A293700,293800,305100-305400,433100                           @ZSUT222
*ATTRIBUTES-   RE-ENTRANT
*              RE-USABLE
*              ENABLED
*              PRIVILEGED
*
*NOTES-
*  THE SPECIAL BDAM STORES ARE ONLY REQUIRED IN CASE THE MODULES
*  RESIDE IN THE RESIDENT ACCESS METHOD AREA, AND SO ARE NOT
*  RESTORED WHEN THE USER'S MAIN STORAGE IS RESTORED.
*  BDAM IS NON-STANDARD IN THAT OPEN EXECUTOR MODULE IGG0193C DOES
*  THESE STORES INTO RE-ENTRANT MODULES.
*
*TABLES/WORKAREAS-
*
   EJECT
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + O-GN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
    EJECT
***********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0                        WDRK/PARAMETER REGISTER
WRKR2    EQU   1                        WDRK/PARAMETER REGISTER
DCBR     EQU   2                        CURRENT DCB REGISTER
BASER    EQU   3                        BASE REGISTER
DEBR     EQU   4                        CURRENT DEB REGISTER
UCBR     EQU   5                        CURRENT UCB REGISTER
TIOTR    EQU   6                        NEW TIOT REGISTER
TCBR     EQU   7                        TCB REGISTER
TABLR    EQU   8                        BEGINNING TO DCB TABLE REG
CTABLR   EQU   9                        CURRENT ENTRY IN DCB TABLE
BUFR     EQU   10                       USER BUFFER AREA
DSCNTR   EQU   11                       WORK REGISTER
WRKR3    EQU   12                       WORK REGISTER
WRKR4    EQU   13                       WORK REGISTER
WRKR5    EQU   14                       WORK/PARAMETER REGISTER
WRKR6    EQU   15                       WORK/PARAMETER REGISTER
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
READEX   EQU   X'02'                    BDAM READ EXCLUSIVE      A35821
IS       EQU   X'80'                    INDEXED SEQUENCIAL
PS       EQU   X'40'                    PHYSICAL SEQUENCIAL
DA       EQU   X'20'                    DIRECT ACCESS
PO       EQU   X'02'                    PARTITIONED ORGANIZATION
NULL     EQU   X'80'                    NULLFILE OR SYSCHECK
INOROUT  EQU   X'40'                    SYSIN OR SYSOUT DATA SET
DADEV    EQU   X'20'                    DA DEVICE
TPDEV    EQU   X'10'                    TAPE DEVICE
LASTENT  EQU   X'08'                    LAST ENTRY
UNITREC  EQU   X'04'                    UNIT RECORD EQUIPMENT
ERRINNSL EQU   X'80'                    ERROR IN NSL ROUTINE
NSLMTSW  EQU   X'40'                    NSL MOUNT SWITCH
NSLCOMU  EQU   X'20'                    NSL COMMUNICATION BIT
BYPASS   EQU   X'10'                    BYPASS LABEL PROCESSING
NSL      EQU   X'04'                    NON-STANDARD LABEL
SL       EQU   X'02'                    STANDARD LABEL
NL       EQU   X'01'                    NO LABEL
GTR5VOL  EQU   X'80'                    GREATER THAN 5 VOLUMES
POCONCAT EQU   X'40'                    P.O. CONCATENATED
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
NONDAFLG EQU   X'40'                    NON-DA DATA SET FLAG
NSLFLAG  EQU   X'10'                    NSL ROUTINE FLAG
TYPERST  EQU   X'80'                    IMMEDIATE RESTART
TABENT   EQU   48                       TABLE ENTRY LENGTH
WRITE    EQU   X'01'                    WRITE ON TAPE
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
SENSE    EQU   X'04'                    SENSE
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
UNLOAD   EQU   X'0F'                    REWIND AND UNLOAD
WTM      EQU   X'1F'                    WRITE TAPE MARK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
SEARCH   EQU   X'31'                    SEARCH
SRCHCNT  EQU   X'05'                    COUNT FOR SEARCH ID
TIC      EQU   X'08'                    TIC
READDA   EQU   X'06'                    READ FOR DA
LENJFCB  EQU   X'B0'                    LENGTH OF JFCB
LBLLEN   EQU   X'50'                    LENGTH OF LABEL
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR074   EQU   74                       I/O ERROR READING DSCB @ZSUT222
ERR077   EQU   77                       ISAM OPEN ERROR        @ZSUT222
ISORDA   EQU   IS+DA                    IS OR DA
IOERROR  EQU   X'20'                    PERMANENT I/O ERROR
FILETYPE EQU   X'00'                    FILE TYPE BYTE
THREE    EQU   X'03'                    TEST IF DSCB EXTN IS TO BE READ
READKND  EQU   X'0E'                    READ KEY AND DATA
LENGTH   EQU   X'8C'                    LENGTH OF KEY AND DATA
OUTP     EQU   X'0F'                    OUTPUT (DEBOPATB)
EXCHPGM  EQU   X'80'                    EXCP
DADEVDPT EQU   X'0C'                    DA DEVICE DEPENDENT SECTION
WRITEDA  EQU   X'05'                    WRITE FOR DA
SEVEN    EQU   X'07'                    TEST FOR GETTING UPPER LIMIT
LENDSCB  EQU   X'60'                    LENGTH OF DSCB
DEBID    EQU   X'0F'                    DEB IDENTIFICATION
MAXEXT   EQU   X'CA'                    MAXIMUM NO. OF EXTENT
UNREL    EQU   X'02'                    UNRELATED FLAG
TKBAL    EQU   25                       TRACK BALANCE SVC ROUTINE
D0       EQU   0                        CONSTANT ZERO            Y02076
D1       EQU   1                        CONSTANT ONE             Y02076
D2       EQU   2                        CONSTANT TWO             Y02076
D4       EQU   4                        CONSTANT FOUR            Y02076
D152     EQU   152                      CONSTANT ONE FIFTY TWO   Y02076
DFF      EQU   X'FF'                    CONSTANT FOX FOX         Y02076
*
*
***********************************************************************
*
   EJECT
         BALR  BASER,0                  ESTABLISH ADDRESSIBILITY
         USING *,BASER                                           Y01909
*
         USING RSTWA,BUFR
         USING IHADCB,DCBR
         USING TABL,CTABLR
         USING FORECORE,UCBR
         USING TCB,TCBR
         USING DEBBASIC,DEBR                                     Y02076
         USING CVT,WRKR2
         USING TIOENTRY,WRKR5
*
REPDCB00 EQU   *
         B     BEGIN                    BRANCH TO EYE CATCHER    Y01909
         CNOP  0,8                      ALIGN TO DOUBLE WD BOUND Y01909
         DC    CL8'IGC0W05B'            MODULE NAME            @ZSUT222
         DC    CL8'&SYSDATE'            LAST DATE SHIPPED      @ZSUT222
         DC    CL8'@ZSUT222'            LAST CODE SHIPPED      @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
         MODESET EXTKEY=ZERO                                     Y02076
         TM    TABFLG2-TABL(TABLR),TABSW  RETURN  FROM  ISAM     Y02076
         BO    REPDCB54                 YES - BRANCH
*
         MVI   RSRETCOD+1,X'00'         RESET RETURN CODE
         LR    CTABLR,TABLR             INITIALIZE CTABLR
         B     REPDCB02                 BRANCH TO TEST FOR TYPE OF D.S.
*
*********************************************************************
*
******** TEST FOR ISAM DATA SET
*
*********************************************************************
*
REPDCB01 EQU   *
*
         LA    CTABLR,TABENT(CTABLR)    POINT TO NEXT TABL ENTRY
*
REPDCB02 EQU   *
*
         L     DCBR,TABDCBAD-1          LOAD DCB ADDR            YM5512
         TM    DCBMACRF,EXCHPGM         TEST ACCESS METH.        YM5512
         BO    REPDCB04                 BR IF NO ACC. METH.      YM5512
         TM    TABDSORG,IS              IS IT ISAM
         BO    REPDCB10                 IF SO, PROCESS IT
*
         TM    TABDSORG,DA              IS IT BDAM               A30552
         BO    BDAMSTRT                 IF SO, PROCESS IT        A30552
*
REPDCB04 EQU   *
*
         TM    TABFLG1,TABLAST          TEST FOR LAST ENTRY
         BO    ENDUP                    YES - BRANCH
*
         B     REPDCB01                 GO TEST TABL ENTRY
*
REPDCB10 EQU   *
***********************************************************************
*   GET SPACE FOR ISAM OPEN EXECUTORS WORK AREA IN SUBPOOL 230(KEY 5) *
*   THEN CLEAR IT AND PREPARE FOR READING IN THE DSCB                 *
***********************************************************************
         LA    WRKR1,DSECTSIZ+ISDCBLNG  GET LNGTH-FORECORE WA   ZA02542
         S     WRKR1,DCBFRS16           SUBTRCT 1ST 16 BYTES     Y02076
         ST    WRKR1,SAVSPLNG           SAVE LENGTH OF SPACE     Y02076
         LR    WRKR3,WRKR1              SAVE IN WRKR3 FOR CLEAR  Y02076
         ICM   WRKR1,HIORDER,SP230      INSERT SUBPOOL 230       Y02076
         MODESET EXTKEY=DATAMGT         GET INTO KEY 5           Y02076
         GETMAIN  R,LV=(WRKR1)          GET SPACE FOR ISAM       Y02076
         MODESET EXTKEY=ZERO            BACK TO KEY 0            Y02076
         LR    UCBR,WRKR2               ADR OF SPACE TO UCBR     Y02076
         SR    WRKR2,WRKR2              CLEAR WRKR2 FOR CLEAR    Y02076
         LA    WRKR3,0(WRKR3)           GET LNGTH OF ISAM SPACE  Y02076
         SRL   WRKR3,2                  DIVIDE BY 4 FOR COUNT    Y02076
         LR    WRKR5,UCBR               GET BEGIN ADDR OF SPACE ZA00104
REPDCB12 EQU   *                        INSTR MUST FOLLOW        Y02076
         ST    WRKR2,D0(WRKR5)          GET LNGTH OF ISAM SPACE ZA00104
         LA    WRKR5,D4(WRKR5)          INDEX TO NXT 4 BYTES    ZA00104
         BCT   WRKR3,REPDCB12           BR BACK UNTIL ALL CLEAR  Y02076
         MVC   DXUDCBAD(D4),TABDCBAD-D1 MOVE USER'S DCB ADR      Y02076
         L     TCBR,RSTCBAD             GET ADR OF TCB           Y02076
         MVC   DXUKEY(D1),TCBPKF        SAVE PROTECT KEY IN WA   Y02076
*
*********************************************************************
*                                                                     *
******** READ FORMAT TWO DSCB
*                                                                     *
*********************************************************************
*
         BAL   WRKR5,BLDCCWS            BRANCH TO BUILD CCW LIST SBRTN
*
*
         EXCP  DXIOB
*
*********************************************************************
*
******** WAIT FOR COMPLETION OF READ
*
*********************************************************************
*
         WAIT  ,ECB=DXECB
*
         TM    DXECB,IOERROR            TEST FOR PERM I/O ERROR
         BZ    REPDCB68                 BRANCH IF ERROR           M3251
*
REPDCB22 EQU   *
*
*********************************************************************
*
******** THE DSCB HAS BEEN SUCCESSFULLY READ
*        COPY DCB INTO ISAM WORK AREA THEN XCTL TO OPEN EXECUTORS
*
*********************************************************************
*
         L     WRKR3,TABDCBAD-D1        GET ADR OF USER'S TCB    Y02076
         LA    WRKR3,0(WRKR3)           CLEAR HI ORDER BYTE      Y02076
         A     WRKR3,DCBFRS16           ADD 16                   Y02076
         LA    WRKR2,ISDCBLNG           GET LNGTH OF ISAM DCB    Y02076
         S     WRKR2,DCBFRS16           SUBT 16 FOR MOVE COUNT   Y02076
         BCTR  WRKR2,0                  DECREASE MOVE CNT BY 1   Y02076
         EX    WRKR2,ISDCBMOV           MOVE DCB TO SP230 SPACE  Y02076
         LA    WRKR1,X254(,UCBR)        GET ADR WHERE DCB COPIED YM7370
         STCM  WRKR1,ADDRBYTS,TABDCBAD  ADR OF COPIED DCB TO TAB Y02076
         LR    DEBR,UCBR                POINT REG4 AT OPEN WKAREA
         OI    TABFLG2-TABL(TABLR),TABSW SET ON RESTART SW
         SR    TCBR,TCBR                ZERO REG7 FOR OPEN SW
         LA    WRKR3,IGG01920           ISAM OPEN EXECUTOR
         TM    DCBRECFM,X'80'           FIXED FORMAT RECORDS
         BO    REPDCB25                 YES, BRANCH
         LA    WRKR3,IGG01950           GO TO VLR OPEN EXECUTOR
REPDCB25 EQU   *                                                 YM7370
         LA    TIOTR,DXCCW1             SETUP WORKAREA FOR XCTL  Y01021
         MODESET EXTKEY=DATAMGT         GET INTO KEY 5           YM7370
         B     XCTL                     IF NOT
*
REPDCB54 EQU   *
*
*********************************************************************
*                                                                     *
******** CONTROL RETURNS HERE FROM ISAM OPEN.
*                                                                     *
*********************************************************************
*
         NI    TABFLG2-TABL(TABLR),X'FF'-TABSW RESET RS SW       Y02076
         LTR   WRKR2,WRKR2              IS THERE AN ERROR RETURN CODE
         BZ    AROUND                   BRANCH IF NO ERROR     @ZSUT222
         MVI   RSRETCOD+1,ERR077        SET ISAM OPEN ERROR    @ZSUT222
         B     REPDCB69                 BRANCH TO XCTL         @ZSUT222
AROUND   EQU   *                                               @ZSUT222
         MVC   TABDCBAD-D1(D4),DXUDCBAD RESTORE USER'S DCB ADR   Y02076
         ICM   WRKR1,ADDRBYTS,SAVSPLNG+D1                        Y02076
         ICM   WRKR1,HIORDER,SP230      SUBPOOL NUMBER           Y02076
         LR    WRKR2,UCBR               ADR OF SP230 SPACE       Y02076
         MODESET EXTKEY=DATAMGT         GET INTO KEY 5           Y02076
         FREEMAIN  R,LV=(WRKR1),A=(WRKR2)  FREE THE SPACE        Y02076
         MODESET  EXTKEY=ZERO           BACK TO KEY 0            Y02076
         XC    RSERAS00,RSERAS00        CLEAR SCRATCH WORD       Y02076
         B     REPDCB04                 BR TO GET NEXT ENTRY     Y02076
*
REPDCB68 EQU   *
*
***********************************************************************
*                                                                     *
******** THIS ROUTINE IS ENTERED IF AN I/O ERROR OCCURRED READING A   *
* FILE MARK.                                                          *
*                                                                     *
***********************************************************************
*
         MVI   RSRETCOD+1,ERR074        SET DSCB ERROR CODE    @ZSUT222
REPDCB69 EQU   *                                               @ZSUT222
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       DETECTING ERROR        @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
         LA    WRKR3,RSTMODNM           POINT WRKR3 TO 'IGC0V05B'
         LA    TIOTR,RSERAS06           SETUP WORKAREA FOR XCTL  YM7370
         B     XCTL                     BRANCH TO XCTL RTN
*
ENDUP    EQU   *
*
         LA    WRKR3,IGC0T05B           POINT TO NEXT REPI/O MODULE
         LA    TIOTR,RSERAS06           SETUP WORKAREA FOR XCTL  YM7370
*
XCTL     EQU   *
*
         MVC   0(8,TIOTR),0(WRKR3)      MOVE NEXT MODULE NAME TO WKAREA
         LA    WRKR6,8(TIOTR)           INITIALIZE WRKR6 (REG 15)
*
*********************************************************************
         LR    WRKR2,BUFR               POINT REG 1 TO THE RESTART W/A
*********************************************************************
*
         XCTL  EPLOC=(TIOTR),SF=(E,(15))
*
*
BLDCCWS  EQU   *
*
***********************************************************************
*                                                                     *
******** THIS ROUTINE GETS THE UCB AND DISK ADDRESS OF THE F2 DSCB    *
* AND PUTS IT IN THE WORKAREA.  IT ALSO CONSTRUCTS THE CCWS AND       *
* CONTROL BLOCKS NECESSARY FOR READING THE DSCB.                      *
*                                                                     *
***********************************************************************
*
         L     WRKR2,CVTPTR             GET COMM VECTOR TABLE
         L     WRKR1,CVTXAPG            ADR OF APP. VECT. TBL.   Y02076
         ST    WRKR1,DXDEBAPP           STORE IN DEB FOR EXCP    Y02076
         MVI   DXDEBNTR,X'7F'           SET MAX NO. TRACKS       M0187
         MVI   DXDEBNTR+D1,DFF                                   Y02076
*
         LA    WRKR1,DXDCB              GET ADDR OF RESTART DCB
         ST    WRKR1,DXDEBDCB           STORE IT IN DEB
         MVI   DXDEBID,DEBID            STORE ID FOR DEB
         XC    DXDEBSCC(8),DXDEBSCC     CLEAR DEB END AND START CCHH'S
*
         L     DCBR,TABDCBAD-1          GET USER'S DCB ADDR
         L     DEBR,DCBDEBAD            POINT TO USER'S DEB
         L     WRKR2,32(DEBR)           GET DEBFIEAD
         LA    WRKR2,0(WRKR2)           CLEAR HIGH BYTE
         LTR   WRKR2,WRKR2              TEST FOR INDEX EXTENT
         BNZ   TSTMODE                  IF PRESENT, BR--F2 DSCB IS HERE
         L     WRKR2,36(DEBR)           GET FIRST PRIME VOL INSTEAD
TSTMODE  EQU   *
         MVC   DXDEBUCB+1(3),1(WRKR2)   UPDATE UCB ADDRESS
         LR    WRKR2,DEBR               GET DEB ADDR FOR CALC    Y02049
         LA    WRKR6,DEBPRFLN           GET LENGTH OF DEB PREFIX Y02049
         SR    WRKR2,WRKR6              POINT TO DEB PREFIX      Y02049
         USING DEBPREFX,WRKR2                                    Y02049
         L     WRKR2,DEBXTNP            POINT TO DEB EXTENSION   Y02049
         USING DEBXTN,WRKR2                                      Y02049
         TM    DEBXMCF2,DCBMRMVP+DCBMRLCP IS IT LOAD MODE        Y02049
         BZ    TSTSCAN                  NO, BRANCH
         MVC   DCBWKPT4+1(3),DXDEBUCB+1 UPDATE F2 UCB ADDR IN DCB
         B     REPDCB04                 GET NEXT DCB
TSTSCAN  EQU   *                        INSTR MUST FOLLOW        Y02049
         TM    DEBXMCF1,DCBMRGET        IS IT SCAN MODE ?        Y02049
         BZ    BISAM                    NO, BRANCH--IT MUST BE BISAM
         DROP  WRKR2                                             Y02049
         MVC   DXDAADDR+3(5),DCBWKPT3   CCHHR OF F2 DSCB
         MVC   DCBWKPT4+1(3),DXDEBUCB+1 GET UCB OF F2 DSCB INTO DCB
         B     BOTH
BISAM    L     WRKR2,DCBWKPT2           GET BISAM WORKAREA BASE
         USING IHADCW,WRKR2
         MVC   DXDAADDR+3(5),DCWOPCLS   CCHHR OF F2 DSCB
         MVC   DCWOPCLS+5(3),DXDEBUCB+1 GET UCB ADDR INTO BISAM WKAREA
BOTH     EQU   *
*
         LA    WRKR2,DXDEB              GET DEB ADDR
         ST    WRKR2,DXDCBDEB           STORE IN DCB
* SET DEB EXTENTS TO COVER ENTIRE VOLUME.  START CCHH IS ZERO, END
* CC IS OBTAINED FROM DEVICE CHARACTERISTICS TABLE.
*
         L     WRKR2,CVTPTR             FOLLOW POINTERS          M0187
         USING CVT,WRKR2                                         M0187
         L     WRKR2,CVTZDTAB           POINT AT DEVTAB          M0187
         DROP  WRKR2                                             M0187
         L     WRKR6,DXDEBUCB           POINT AT UCB FOR DEVICE  M0187
         USING SRT,WRKR6                                         M0187
         IC    WRKR6,UCBTBYT4           PICK UP INDEX TO DEVTAB  M0187S
*                                       INDICE                   M0187
         DROP  WRKR6                                             M0187
         N     WRKR6,MASK1              USE ONLY LO-ORDER 4 BITS M0187
         IC    WRKR6,0(WRKR2,WRKR6)     DEVTAB INDEX, THIS       M0187
*                                       DEVTYPE                  M0187
         AR    WRKR2,WRKR6              POINT TO DEVTAB ENTRY    M0187
         MVC   DXDEBECC,0(WRKR2)        EXTRACT HIGHEST CC FOR   M0187
*                                       VOLUME                   M0187
         MVC   DXDEBBIN(D2),BINUMSI     SET BIN NO.=0000         Y02076
         MVI   DXDEBUSR,NMEXTS1         SET NO. OF EXTS.=1       Y02076
         MVI   DXDEBAPP,EXSCLS1         SET EXT SCALE=4          Y02076
         MVI   DXDEBMOD,DVMODS1         SET FILE MASK=C0         Y02076
*
*********************************************************************
*                                                                     *
******** COMPLETE IOB                                                 *
*                                                                     *
*********************************************************************
*
         MVI   IOBFLAG1,UNREL           MAKE I/O UNRELATED
         LA    WRKR2,DXDCB              GET DCB ADDR
         ST    WRKR2,IOBWGHT            STORE IN IOB
         LA    WRKR2,DXECB              GET ECB ADDR
         ST    WRKR2,IOBECBPT           STORE IN IOB
         LA    WRKR2,DXCCW              GET CCW STRING ADDR
         ST    WRKR2,IOBSIOCC           STORE IN IOB
*
*********************************************************************
*                                                                     *
******** GET THE BIN NUMBER AND PUT IT INTO THE DEB.                  *
*                                                                     *
*********************************************************************
*
         LA    WRKR6,16                 LOAD 16 INTO WRKR6
         SR    DEBR,WRKR6               POINT TO BBCCHHR, FRONT OF DEB
         MVC   DXDAADDR+1(2),1(DEBR)    MOVE BB TO WORKAREA
         MVC   DXDEBBIN(2),1(DEBR)      MOVE BB TO DEB
*
         XC    DXCCW(24),DXCCW          CLEAR THE CHAN PROG AREA
         LA    WRKR6,DXDAADDR+3         POINT TO CCHHR
         ST    WRKR6,DXCCW1             STORE IN SEARCH INSTRUCTION
         LA    WRKR6,DXCCW1             POINT TO SEARCH INSTRUCTION
         ST    WRKR6,DXCCW2             STORE IT IN TIC INSTRUCTION
         LA    WRKR6,DXJBF              POINT TO JFCB
         ST    WRKR6,DXCCW3             STORE IT IN READ DATA INSTR.
         OC    DXCCW(24),CCWLIST        OR IN CHANNEL PROGRAM
         BR    WRKR5                    BRANCH OUT OF SBRTN VIA WRKR5
*
***********************************************************************
*                                                                     *
*  DETERMINE IF A READ EXCLUSIVE LIST EXISTS FOR BDAM DATA SETS       *
*  IF SO, PROVIDE SPACE IN SUBPOOL 230(KEY 5) FOR THE LIST TO BE      *
*  MOVED INTO.  CLEAR THE SPACE AND STORE ITS ADDR IN DEB EXTENTION   *
*                                                                     *
***********************************************************************
*
BDAMSTRT EQU   *                                                 A35339
         L     DCBR,TABDCBAD-1          LOAD DCB ADDRESS         A35339
         L     DEBR,DCBDEBAD            LOAD DEB ADDR FROM DCB   A30552
         TM    DCBOPTCD,RDEXLST         DOES READ EXCL LIST XST  Y02076
         BZ    REPDCB04                 BRANCH IF NO             Y02076
         MODESET  EXTKEY=DATAMGT        GET INTO KEY 5           Y02076
         ICM   WRKR1,ADDRBYTS,RDEXLNGH  GET 152 BYTES FOR BDAM   Y02076
         ICM   WRKR1,HIORDER,SP230      SUBPOOL 230              Y02076
         GETMAIN  R,LV=(WRKR1)          ISSUE GETMAIN            Y02076
         XC    D0(D152,WRKR2),D0(WRKR2) CLEAR BDAM SP230 SPACE   Y02076
         LR    WRKR3,DEBR               GET DEB ADDR             YM7342
         LA    WRKR1,DEBPRFLN           GET PREFIX LENGTH        Y02076
         SR    WRKR3,WRKR1              BEGIN ADDR OF PREFIX     Y02076
         USING DEBPREFX,WRKR3                                    Y02076
         L     WRKR3,DEBXTNP            GET ADR OF DEB EXTENTION Y02076
         DROP  WRKR3                                             Y02076
         USING DEBXTN,WRKR3                                      Y02076
         ST    WRKR2,DEBXXARG           SAVE AREA ADR IN DEB XT  Y02076
         DROP  WRKR3                                             Y02076
         MODESET  EXTKEY=ZERO           GET BACK INTO KEY 0      Y02076
         B     REPDCB04                 GO GET NEXT ENTRY        Y02076
*
*********************************************************************
*                                                                     *
*     CHANNEL PROGRAM USED BY REPI/O
*                                                                     *
*********************************************************************
*                                                                     *
CCWLIST  DS    0CL24
         DC    X'3100000040000005'      SEARCH.
         DC    X'08'                    TIC
ZERO     DC    X'00000000000000'        ZERO
         DC    X'0E0000000000008C'      READ KEY-DATA
*                                                                     *
*********************************************************************
*                                                                     *
*     CONSTANTS USED IN REPI/O
*                                                                     *
*********************************************************************
*                                                                     *
IGG01920 DC    CL8'IGG01920'            ISAM OPEN EXECUTOR
IGG01950 DC    CL8'IGG01950'            ISAM VLR EXECUTOR
IGC0T05B DC    CL8'IGC0T05B'            NEXT MOD OF REPI/O
RSTMODNM DC    CL8'IGC0V05B'            RESTART EXIT MOD
MODID    DC    CL8'IGC0W05B'            MODULE ID              @ZSUT222
MASK1    DC    F'15'                    MASK OF LO-ORDER 4 BITS  M0187
DCBFRS16 DC    F'16'                    LNGTH OF DCB ISAM IGNORE Y02076
RXLSTSIZ DC    0F'0',X'FE000050'        80 BYTES, SUBPOOL 254    A35821
ISDCBMOV MVC   X264(1,UCBR),D0(WRKR3)   DCB MOVE INSTR FOR EX    YM7370
RDEXLNGH DC    AL3(152)                 152 BYTES FOR BDAM       Y02076
SP230    DC    AL1(230)                 SUBPOOL 230              Y02076
ADDRBYTS EQU   7                        GETMAIN/FREMAIN PARAMS   Y02076
HIORDER  EQU   8                        HIORDER BYTE             Y02076
RDEXLST  EQU   X'02'                    CODE FOR BDAM READ EXCL  Y02076
DEBPRFLN EQU   16                       DEB PREFIX LENGTH        Y02076
BINUMSI  DC    XL2'0000'                BIN NUMBER = 0000        Y02076
NMEXTS1  EQU   X'01'                    NO. OF EXTENTS           Y02076
EXSCLS1  EQU   X'04'                    DEB EXT SCALE            Y02076
DVMODS1  EQU   X'C0'                    FILE MASK                Y02076
X264     EQU   X'264'             CONSTANT                       YM7370
X254     EQU   X'254'             CONSTANT                       YM7370
PATCH    EQU   (*-IGC0W05B)/20          MAINTENANCE SPACE        Y01909
         DC    XL(PATCH)'00'                                     Y01909
         EJECT
FORECORE DSECT
         IECDSECT
*
RSBUFSEG EQU FORECORE                   START OF WORK AREA       A30552
         EJECT
CVT      DSECT
         CVT
         EJECT
*
*
*   TASK CONTROL BLOCK
*
*
         IKJTCB                                                  Y02076
         EJECT
         DCBD  DSORG=(IS,DA)                                     A35821
ISDCBLNG EQU   DCBWKPT6+4-IHADCB        LENGTH OF ISAM DCB       Y02076
ISDCBCPY EQU   DCBWKPT6+4               ADR FOR DCB COPY         Y02076
IHADCW   DSECT                          BISAM DCB WORKAREA
         DS    0D
DCWFCP4  DS    A
DCWFCP7  DS    A
DCWNUCPS DS    CL1
DCWNUCP4 DS    CL1
DCWNUCP7 DS    CL1
DCWNLSD  DS    CL1
DCWFIOBU DS    A
DCWLIOBU DS    A
DCWFUPDI DS    A
DCWLUPDI DS    A
DCWHIAV  DS    CL1
DCWWKNI  DS    BL1
DCWNLEVC DS    CL1
DCWNUWKN DS    CL1
DCWMSHIL DS    A
DCWHIRPS DS    CL1
DCWNACT  DS    CL1
DCWSIZE  DS    H
DCWOPCLS DS    D                        CCHHR AND UCB ADDR OF F2 DSCB
DCWFIOBE DS    A
DCWLIOBE DS    A
         EJECT
*
*
*   DATA EXTENT BLOCK
*
         IEZDEB                                                  Y02076
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
SRT      DSECT
         IEFUCBOB
         EJECT
         IEEVRSWA  VER=3
SAVSPLNG EQU   RSERAS00                 SAVE ADR OF SP230 LNGTH  Y02076
         EJECT
         IHJDSTAB                                                Y02076
         END
