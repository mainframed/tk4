         TITLE 'IGC0Q05B - CHECKPOINT DATA SET SECURITY MESSAGE MODULE'
IGC0Q05B CSECT
*
*CHANGE ACTIVITY                                               @ZSUT222
* APAR OZ31490 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*A139900-140100,166000                                         @ZSUT222
*STATUS CHANGE LEVEL 000
*
***********************************************************************
*
*TITLE - CHECKPOINT DATA SET SECURITY MESSAGE MODULE
*
*STATUS -  INITIAL CODE
*
*FUNCTION - THIS MODULE GETS CONTROL (R1=0) WHEN EITHER IGC0N05B
*           OR IGC0S05B FIND A DATA SET WITH IT'S LABEL (TAPE) OR
*           DSCB (DA) FLAGGED AS A CHECKPOINT DATA SET, OR (R1=4)
*           IF THE ABOVE FLAGS ARE NOT SET BUT THE DSAB ASSOCIATED
*           WITH THE DATA SET HAS THE DSABCKDS BIT SET INDICATING
*           THE DATA SET WAS SECURE AT CHECKPOINT TIME BUT NOT
*           AT RESTART TIME - ERROR CODE 218 IS GENERATED.
*
*           WITH R1=0 AT ENTRY THE PROCESSING CONTINUES AS FOLLOWS:
*           IF NON-VIO, THIS MODULE WILL ASK THE OPERATOR IF THE
*           HOST VOLUME IS A KNOWN SECURE CHECKPOINT VOLUME.
*           IF VIO, THE VOLUME WILL BE ASSUMED CHECKPOINT SECURE.
*           THE SECURITY STATUS OF THE DATA SET AT RESTART TIME
*           IS THEN MATCHED AGAINST THE DATA SET'S STATUS AT
*           CHECKPOINT TIME (VIA THE DATA SET'S DSAB) AND IF THE
*           TWO DO NOT MATCH, ONE OF THE FOLLOWING ERROR CODES IS
*           PASSED TO THE LAST LOAD OF RESTART (IGC0V05B):
*
*                218 - A CHECKPOINT TIME SECURE DATA SET WAS FOUND
*                      NOT TO BE SECURE AT RESTART TIME.
*                251 - A CHECKPOINT TIME NON-SECURE DATA SET WAS
*                      FOUND TO BE SECURE AT RESTART TIME.
*
*           OTHERWISE, A NORMAL RETURN TO THE CALLING MODULE IS
*           MADE VIA BR 14.
*
*ENTRY POINTS - IGC0Q05B - ENTERED FROM IGC0N05B OR IGC0S05B
*
*INPUT - REGISTER  1 - BRANCH TABLE OFFSET
*                      0 - QUERY STATUS OF DATA SET AND PROCESS
*                          ACCORDING TO ITS STATUS
*                      4 - SET ERROR CODE 218 AND XCTL TO IGC0V05B
*        REGISTER  5 - UCB ADDRESS OF VOLUME IN QUESTION
*        REGISTER  9 - ADDRESS OF DATA SET'S TABLE ENTRY
*        REGISTER 10 - RESTART WORK AREA ADDRESS
*        REGISTER 15 - ENTRY POINT ADDRESS OF THIS MODULE
*
*OUTPUT - BY BRANCH TABLE ENTRY OFFSET
*         0 - NON-ERROR RETURN TO CALLER:
*             *ALL REGISTERS ARE SAVED AT ENTRY AND RESTORED AT EXIT
*             *VALID DSABCKDS AND DSABCKVL BIT SETTINGS FOR THE DSAB
*              ASSOCIATED WITH THE SUBJECT DATA SET AT ENTRY
*           - ERROR EXIT TO IGC0V05B:
*             *APPROPRIATE ERROR CODE IN RSRETCOD
*             *REGISTER 1 - RESTART WORKAREA ADDRESS
*             *REGISTER 5 - UCB ADDRESS OF VOLUME IN QUESTION
*         4 - *APPROPRIATE ERROR CODE IN RSRETCOD
*             *REGISTER 1 - RESTART WORKAREA ADDRESS
*             *REGISTER 5 - UCB ADDRESS OF VOLUME IN QUESTION
*
*EXTERNAL ROUTINES - GETMAIN
*                    FREEMAIN
*                    WTOR
*                    WAIT
*                    XCTL
*
*EXITS - IGC0N05B - GENERAL DATA MANAGEMENT MODULE
*        IGC0S05B - TAPE REPOSITIONING MODULE
*        IGC0V05B - RESTART EXIT MODULE
*
*TABLES/WORKAREAS  - RESTART WORKAREA
*                    RESTART TABLE ENTRIES
*                    RESTART WTOR WORKAREA
*                    DEB
*                    DCB
*                    TIOT
*                    DSAB
*                    UCB
*
***********************************************************************
         EJECT
***********************************************************************
*
*        REGISTER EQUATES
*
***********************************************************************
R0       EQU   0                   WORK REGISTER
R1       EQU   1                   BRANCH TABLE OFFSET/WORK REGISTER
R2       EQU   2                   DCB BASE REGISER
R3       EQU   3                   DEB PREFIX BASE REGISTER
R4       EQU   4                   DEB EXTENSION BASE REGISTER
R5       EQU   5                   UCB BASE REGISTER
R6       EQU   6                   TIOT BASE REGISTER
R7       EQU   7                   TIOT DD ENTRY BASE REGISTER
R8       EQU   8                   DSAB BASE REGISTER
R9       EQU   9                   TABLE ENTRY BASE REGISTER
RA       EQU   10                  RESTART WA BASE REGISTER
RB       EQU   11                  CODE BASE REGISTER
RC       EQU   12                  WTOR BUFFER BASE REGISTER
RD       EQU   13                  WORK REGISTER
RE       EQU   14                  SUBROUTINE LINKAGE REGISTER
RF       EQU   15                  TEMPORARY CODE BASE/WORK REGISTER
         EJECT
***********************************************************************
*
*        ESTABLISH ADDRESSABILITY
*
***********************************************************************
         USING TCB,R1              TCB (TEMPORARY)
         USING IHADCB,R2           DCB
         USING DEBPREFX,R3         DEB PREFIX
         USING DEBXTN,R4           DEB EXTENSION
         USING UCBOB,R5            UCB
         USING TIOT1,R6            TIOT
         USING TIOENTRY,R7         TIOT DD ENTRY
         USING DSAB,R8             DSAB
         USING TABL,R9             TABLE ENTRY
         USING RSTWA,RA            RESTART WORKAREA
         USING IGC0Q05B,RB         CODE BASE
         USING WTORWA,RC           WTOR WORKAREA
         EJECT
***********************************************************************
*
*        BEGIN LOGIC
*
***********************************************************************
         SPACE 1
         STM   R0,RF,RSREGSAV+K8   SAVE CALLER'S REGS
         LR    RB,RF               ESTABLISH BASE REG
         B     QBRTB000(R1)        ENTER VIA BR TABLE
         CNOP  0,8                 ALIGN TO DOUBLE WORD
         DC    CL8'IGC0Q05B'       MODULE NAME                 @ZSUT222
         DC    CL8'&SYSDATE'       LAST DATE SHIPPED           @ZSUT222
         DC    CL8'@ZSUT222'       LAST CODE SHIPPED           @ZSUT222
QBRTB000 EQU   *                   BRANCH TABLE
         B     QQCSE000            QUERY CHKPT STATUS ENTRY
         B     QE218000            218 ERROR ENTRY
         EJECT
***********************************************************************
*
*        ENTER HERE TO ESTABLISH THE STATUS OF A CHKPT DATA SET
*
***********************************************************************
QQCSE000 EQU   *                   QUERY CHKPT STATUS ENTRY
         NI    TABFLG3,X'FF'-TABCKCK-TABCKRS INIT PROCESS SW'S
         L     R2,TABDCBAD-K1      GET DCB ADDRESS
         L     R3,DCBDEBAD         GET DEB ADDRESS
         LA    R1,DEBBASIC-DEBPREFX GET NEG PREFIX OFFSET
         SR    R3,R1               GET DEB PREFIX ADDRESS
         L     R4,DEBXTNP          GET DEB EXTENSION ADDRESS
         L     R8,DEBXDSAB         GET DSAB ADDRESS
         L     R7,DSABTIOT         GET DD ENTRY ADDRESS
         L     R1,RSTCBAD          GET TCB ADDRESS
         L     R6,TCBTIO           GET TIOT ADDRESS
         TM    DSABFLG4,DSABCKDS   WAS DS SECURE AT CHKPT TIME
         BZ    QNCKS000            IF NOT, BRANCH
         OI    TABFLG3,TABCKCK     SET CHKPT SECURE SW
QNCKS000 EQU   *                   NOT CHKPT SECURE ENTRY
         TM    UCBJBNR,UCBVRDEV    IS THIS A VIO UCB
         BNO   QNVIO000            IF NOT, BRANCH
         OI    TABFLG3,TABCKRS     ASSUME VOLUME IS SECURE
         B     QVIOE000            SKIP ASKING THE OPERATOR
         EJECT
***********************************************************************
*
*        THE FOLLOWING CODE WILL QUERY THE OPERATOR FOR STATUS
*
***********************************************************************
QNVIO000 EQU   *                   NON-VIO ENTRY
         LA    R0,WALNGTH          GET WTOR WORKAREA LENGTH
         ICM   R0,M8,SP253         GET SUBPOOL ID (253)
         GETMAIN R,LV=(0)          CALL GETMAIN
         LR    RC,R1               INIT WTOR WORKAREA BASE REG
*
*        INITIALIZE THE WTOR BUFFER
*
         MVI   WTORRL,K3           SET REPLY LNGTH (3)
         LA    R1,WTOREPLY         GET REPLY AREA ADDR
         STCM  R1,M7,WTORRAA       PUT IT INTO WTOR'S PARM
         LA    R1,WTORECB          GET THE WTOR ECB ADDR
         ST    R1,WTOREA           PUT IT INTO WTOR'S PARM
         MVC   WTORMF,IEC255DM     MOVE IN MCS FLAGS
         MVI   WTORTXT,BLANK       BLANK OUT THE MESSAGE
         MVC   WTORTXT+K1(L'WTORTXT-K1),WTORTXT TEXT AREA
         MVC   WTORTXT(L'IEC255D1),IEC255D1 MOVE 1ST MSG SEG
         LA    R1,WTORTXT+L'IEC255D1 GET ADDR OF JOBNAME SLOT
         MVC   K0(L'TIOCNJOB,R1),TIOCNJOB JOBNAME TO MSG
         BAL   RE,QBLNK000         GO FIND A BLANK
         MVC   K0(L'IEC255D2,R1),IEC255D2 MOVE 2ND MSG SEG
         LA    R1,L'IEC255D2(,R1)  BUMP TO NEXT SLOT
         MVC   K0(L'TIOEDDNM,R1),TIOEDDNM MOVE IN DD NAME
         BAL   RE,QBLNK000         GO FIND A BLANK
         MVI   K0(R1),COMMA        DROP IN COMMA
         LA    R1,K1(,R1)          BUMP PAST COMMA
         MVC   K0(L'UCBNAME,R1),UCBNAME MOVE IN UCB ADDR
         LA    R1,L'UCBNAME(,R1)   BUMP PAST UCB ADDR
         MVI   K0(R1),COMMA        DROP IN COMMA
         LA    R1,K1(,R1)          BUMP PAST COMMA
         MVC   K0(L'UCBVOLI,R1),UCBVOLI MOVE IN VOL SER
         BAL   RE,QBLNK000         GO FIND A BLANK
         MVC   K0(L'IEC255D3,R1),IEC255D3 MOVE IN 3RD MSG SEG
         LA    R1,L'IEC255D3(,R1)  POINT 1 PAST MSG TEXT
         MVC   K0(L'IEC255D4+L'IEC255DT,R1),IEC255D4 MOVE IN
*                                  DESCRIPTOR CODES AND ROUTING
*                                  CODES FOR TAPE
         CLI   UCBTBYT3,UCB3TAPE   TAPE DEVICE
         BE    QTAPE000            IF YES, BRANCH
         MVC   K2(L'IEC255DD,R1),IEC255DD MOVE IN DA ROUTING CDS
QTAPE000 EQU   *                   TAPE BYPASS ENTRY
         LA    R1,L'IEC255D4+L'IEC255DT(,R1) BUMP TO END OF MSG+1
         LA    RF,WTORTXT          GET MSG START ADDRESS
         SR    R1,RF               GET MSG LENGTH
         STH   R1,WTORTL           STORE IN WTOR PARM
QWTOR000 EQU   *                   RETRY ENTRY
         XC    WTOREPLY,WTOREPLY   CLEAR REPLY AREA
         XC    WTORECB,WTORECB     CLEAR ECB
         WTOR  MF=(E,(RC))         ISSUE WTOR
         WAIT  ECB=WTORECB         WAIT FOR REPLY
         OC    WTOREPLY,BLANKS     FOLD REPLY TO UPPER CASE
         CLC   KNO,WTOREPLY        REPLY = 'NO'
         BE    QNOTS000            BRANCH IF 'NO'
         CLC   KYES,WTOREPLY       REPLY = 'YES'
         BNE   QWTOR000            IF NOT, TRY AGAIN
*
*        FALL THROUGH ON REPLY OF 'YES'
*
         OI    TABFLG3,TABCKRS     SET D/S SECURE FLAG
QNOTS000 EQU   *                   NOT SECURE ENTRY
*
*        FREE GOTTEN CORE FOR WTOR WORKAREA
*
         LA    R0,WALNGTH          GET WTOR WORKAREA LENGTH
         ICM   R0,M8,SP253         INSERT SUBPOOL ID (253)
         LA    R1,WTORBUF          GET ADDRESS OF GOTTEN CORE
         FREEMAIN R,LV=(0),A=(1)   FREE IT
*
*        DETERMINE IF THE CHECKPOINT AND RESTART TIME
*        DATA SET SECURITY STATUS ARE THE SAME
*
QVIOE000 EQU   *                   VIO MSG BYPASS ENTRY
         TM    TABFLG3,TABCKCK+TABCKRS TEST CHKPT & RST STATUS
         BM    QERRO000            BR IF MIXED - IT'S AN ERROR
         BZ    QBNSE000            BR IF BOTH NOT SECURE
         OI    DSABFLG4,DSABCKVL   BOTH ARE SECURE, INDIC IN DSAB
QBNSE000 EQU   *                   BOTH NOT SECURE ENTRY
*
*        RETURN TO CALLER WITH VALID DSAB
*
         LM    R0,RF,RSREGSAV+K8   RESTORE CALLER'S REGS
         BR    RE                  RETURN TO CALLER
         EJECT
***********************************************************************
*
*        A MISMATCH WAS FOUND TO EXIST BETWEEN THE CHECKPOINT
*        AND RESTART TIME SECURITY STATUS - DETERMINE WHICH
*        TYPE OF ERROR (218 OR 251) AND THE XCTL TO THE LAST
*        LOAD OF RESTART (IGC0V05B)
*
***********************************************************************
QERRO000 EQU   *                   ERROR ENTRY
         MVI   RSRETCOD+K1,ERR251  ANTICIPATE ERROR CODE 251
         TM    TABFLG3,TABCKRS     WAS IT SECURE AT RESTART
         BO    QE251000            IF YES, IT'S A 251
QE218000 EQU   *                   218 ERROR ENTRY (R1=4)
         MVI   RSRETCOD+K1,ERR218  SET ERROR CODE 218
QE251000 EQU   *                   251 ERROR ENTRY
         MVC   RSREGSAV(8),MODID   SAVE NAME OF MODULE THAT    @ZSUT222
*                                  HAS DETECTED THE ERROR.     @ZSUT222
         STM   0,15,RSREGSAV+8     SAVE CURRENT REGISTERS.     @ZSUT222
         LR    R1,RA               R1=WA ADDR FOR V05B
         MVC   RSERAS00(L'IGC0V05B),IGC0V05B SETUP XCTL PARM
         LA    RF,RSERAS02         XCTL PARM REG
         XCTL  EPLOC=RSERAS00,SF=(E,(15)) GO
         EJECT
***********************************************************************
*
*        SUBROUTINE TO INCREMENT THE WTOR MESSAGE BUFFER POINTER
*        TO THE FIRST BLANK AFTER A SEGMENT OF MESSAGE TEXT
*
***********************************************************************
QBLNK000 EQU   *                   SUBROUTINE ENTRY
         CLI   K0(R1),BLANK        IS THIS CHARACTER A BLANK
         BER   RE                  IF BLANK, RETURN TO MAINLINE
         LA    R1,K1(,R1)          BUMP TO NEXT CHARACTER
         B     QBLNK000            TRY AGAIN
         EJECT
***********************************************************************
*
*        GENERAL EQUATES
*
***********************************************************************
K0       EQU   0                   0 CONSTANT
K1       EQU   1                   1 CONSTANT
K2       EQU   2                   2 CONSTANT
K3       EQU   3                   3 CONSTANT
K4       EQU   4                   4 CONSTANT
K8       EQU   8                   8 CONSTANT
M7       EQU   7                   ICM MASK FOR BYTES 1-3
M8       EQU   8                   ICM MASK FOR BYTE 0
ERR218   EQU   218                 ERROR CODE 218
ERR251   EQU   251                 ERROR CODE 251
WALNGTH  EQU   92                  WTOR WORKAREA LENGTH
BLANK    EQU   C' '                BLANK CONSTANT
COMMA    EQU   C','                COMMA CONSTANT
         EJECT
***********************************************************************
*
*        STORAGE CONSTANTS
*
***********************************************************************
IEC255D1 DC    C'IEC255D '         MESSAGE SEGMENT 1
IEC255D2 DC    C' IS ('            MESSAGE SEGMENT 2
IEC255D3 DC    C') A SECURE CHECKPOINT VOLUME' MESSAGE SEGMENT 3
IEC255D4 DC    0AL2(0),B'0100000000000000' COMMON DESCRIPTOR CODES
IEC255DT DC    0AL2(0),B'1010100010000000' TAPE ROUTING CODES
IEC255DD DC    0AL2(0),B'1001010010000000' DA ROUTING CODES
IEC255DM DC    0AL2(0),B'1000000000000000' MCS FLAGS
KYES     DC    C'YES'              'YES' COMPARAND FOR WTOR REPLY
KNO      DC    C'NO '              'NO ' COMPARAND FOR WTOR REPLY
BLANKS   DC    C'    '             USED TO FOLD REPLY TO UPPER CASE
SP253    DC    AL1(253)            SUBPOOL 253 ID
IGC0V05B DC    C'IGC0V05B'         XCTL NAME FOR ERROR EXIT
MODID    DC    CL8'IGC0Q05B'       MODULE ID                   @ZSUT222
*
*        MAINTENANCE SPACE
*
PATCH    EQU   ((*-IGC0Q05B)/10)   TEN PERCENT MAINTENANCE SPACE
         DC    XL(PATCH)'00'       DEFINE ZEROED PATCH AREA
         EJECT
***********************************************************************
*
*        WTOR WORKAREA DSECT
*
***********************************************************************
WTORWA   DSECT                     WTOR WORKAREA
WTORBUF  DS    0CL84               WTOR MESSAGE BUFFER
WTORRL   DS    CL1                 REPLY LENGTH
WTORRAA  DS    CL3                 REPLY ADDRESS
WTOREA   DS    CL4                 ECB ADDRESS
WTORTL   DS    CL2                 MESSAGE TEXT LENGTH
WTORMF   DS    CL2                 MCS FLAGS
WTORTXT  DS    CL68                MESSAGE TEXT
WTORDRCS DS    CL4                 DESCRIPTOR & ROUTING CODES
WTOREPLY DS    CL4                 WTOR REPLY AREA
WTORECB  DS    CL4                 WTOR ECB
         EJECT
***********************************************************************
*
*        OTHER SYSTEM DSECT'S
*
***********************************************************************
         IEEVRSWA VER=3
         EJECT
         IHJDSTAB
         EJECT
         IEZDEB
         EJECT
         DCBD  DSORG=PS
         EJECT
         IHADSAB
         EJECT
         IEFTIOT1
         EJECT
         IEFUCBOB
         EJECT
         IKJTCB
         END
