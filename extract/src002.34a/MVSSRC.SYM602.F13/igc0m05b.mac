         TITLE 'IGC0M05B - DIRECT ACCESS MOUNT/VERIFICATION PROCESSOR'
IGC0M05B START
*
*    VS2   SU24   DELETIONS/CHANGES                            @G24LSFS
*249240                                                        @G24LSFS
*                                                              @ZM44640
*    VS/2  RELEASE  3 DELETIONS
*0000                                                          @Y30LSRA
* RELEASE 037 CHANGES ADDITIONS DELETIONS
*A412160                                                       @ZA18267
*A157270,A401700,A412001-412008                                @ZA18335
*C157440                                                       @ZA24910
*A24918237-24918837,D24914203-24914403                         @ZA27287
*C15783037,C15789037                                           @ZA27488
* APAR OZ31488 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C157260-157290,237400,250381,412004,412005,608000             @ZSUT222
*A237800-238200,652164                                         @ZSUT222
*A400000-400270,400630-400720,400990-401080,483100-483600      @ZA31668
*D401700,412001-412008                                         @ZA31668
*C400810,410100                                                @ZA31668
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*0521185500                                                      A27516
*0521158000,292000-293000,349000-351000,598000-599000            A27515
*0521158250,291700-292400,298000,571000,958500-959000            M4597
*0521345000-353000,359000                                        M2763
*          RELEASE 20 DELETIONS
*1560533000                                                      A36914
*1560158350,228000-241000,315000,422600,427000,429000,453000,    A30003
*1560455000,610000-619000                                        A30003
*1560182500,217000,235800,531000,575000,652000                   A33983
*1560271000                                                      A36176
*          RELEASE 21 DELETIONS
*0970273000,426000-427600,465000,550000-552000,572000-573000,    M0187
*0970575000,579000                                               M0187
*0970229400-230200                                               A42435
*0970                                                            A42221
*          RELEASE 22 DELETIONS
*          RELEASE 23 DELETIONS
*          RELEASE 24 DELETIONS
*          RELEASE 25 DELETIONS
*          RELEASE 26 DELETIONS
*
* STATUS CHANGE LEVEL 004
*
***********************************************************************
*
*TITLE
*
*     DIRECT ACCESS MOUNT/VERIFICATION PROCESSOR
*
*STATUS
*
*FUNCTION/OPERATION
*
*        SEQ. & P.O. - CHECK VOLUME SERIAL IN TABLE AGAINST VOLUME
*        SERIAL IN THE SRTUCB INDICATED BY THE DATA SET'S TIOT ENTRY.
*
*        IF THE CORRECT VOLUME IS NOT MOUNTED, CHECK ALL THE SECONDARY
*        STRUCB'S INDICATED AND IF THE VOLUME IS FOUND TO BE MOUNTED
*        ON ONE OF THEM, EXCHANGE IT WITH THE PRIMARY SRTUCB.
*
*        IF THE CORRECT VOLUME IS NOT MOUNTED ANYWHERE FIND A USEABLE
*        UCB & ISSUE A MOUNT MESSAGE - ERROR IF NO AVAILABLE UCB.
*                                                              @Y30LSRA
*        IF THE UCB INDICATES A VIRTUAL DASD, THE MOUNT MESSAGE@Y30LSRA
*        IS INTERCEPTED AND A MESSAGE IS SENT TO  MSS TO MOUNT @Y30LSRA
*        A VIRTUAL VOLUME ON THE MSS  SYSTEM.  A DEMOUNT       @Y30LSRA
*        MESSAGE WILL PRECEDE THE MOUNT MESSAGE, BUT ONLY FOR  @Y30LSRA
*        MSS  DEVICES AND ONLY FOR NON SHARED AND ONLINE       @Y30LSRA
*        PACKS.                                                @Y30LSRA
*        FOR AN UNSUCCESSFUL MOUNT/DEMOUNT ACQUIRE/RELINQUISH  @Y30LSRA
*        A MESSAGE IS ISSUED. AN ERROR CODE OF 49 PLUS A BRANCH@Y30LSRA
*        TO THE MODULES'S EXIT ROUTINE IS ALSO ISSUED.         @Y30LSRA
*
*        BDAM, ISAM, P.O. CONCAT. & SEQ. CONCAT. - CHECK VOLUME SERIAL
*        IN TABLE (OR JFCB EXTENSION) AGAINST VOLUME SERIAL IN THE
*        UCB'S INDICATED BY THE DATA SET'S TIOT ENTRY. IF THE CORRECT
*        VOLUME IS NOT MOUNTED FIND THE 1ST AVAILABLE UCB AND ISSUE A
*        MOUNT MESSAGE. PLACE THE UCB ON WHICH IT IS MOUNTED IN THE
*        SAME RELATIVE ORDER AS THE VOLUME SERIAL NUMBER IN THE JFCB.
*
*        THE RESTART DATA SET IS BYPASSED AS MOUNTING HAS ALREADY
*        TAKEN PLACE.
*
*        VAM DATA SETS - MOVE UCB ADDRESS FROM TIOT TO DEB AND
*        BYPASS THE REST OF DA MOUNTING PROCESSING.
*
*        EACH TIME A VOLUME IS MOUNTED IT'S VOLUME SERIAL NUMBER IS
*        CHECKED. IF THE CORRECT VOLUME IS NOT MOUNTED,  MOUNT MESSAGE
*        IS RE-ISSUED.
*
*        IF THE VOLUME SERIAL NUMBER FOR A VIRTUAL VOLUME IS   @Y30LSRA
*        INCORRECT, THE MESSAGE IS NOT RE-ISSUED.              @Y30LSRA
*                                                              @Y30LSRA
*        WHENEVER A VIRTUAL VOLUME IS MOUNTED, SPACE MUST BE   @Y30LSRA
*        GOTTEN ON A REAL DEVICE FOR STAGING IN THE VIRTUAL    @Y30LSRA
*        VOLUME.  THIS IS NOT DONE FOR VSAM OR ISAM DATA SETS. @Y30LSRA
*        VSAM WILL GET THEIR OWN SPACE, AND ISAM IS UNSUPPORTED@Y30LSRA
*                                                              @Y30LSRA
*ENTRY POINTS
*
*                  IGC0M05B VIA XCTL FROM IGC0K05B
*                                 OR FROM IGC0I05B
*
*INPUT
*
*        REGISTER 8 - START OF DATA SET TABLE
*        REGISTER 1 - RESTART WORKAREA
*        REGISTER 10 - RESTART WORKAREA
*
*OUTPUT
*
*        NOT APPLICABLE
*
*EXTERNAL ROUTINES
*
*                  NONE
*
*EXITS
*
*      (1) TO IGC0L05B
*               OR
*      (2) TO IGC0N05B
*               OR
*      (3) TO IGC0V05B WITH ONE OF THE FOLLOWING ERROR CODES SET IN
*          THE RESTART WORK AREA:
*          45 - NO UCB AVAILABLE
*          48 - ERROR IN READ JFCB
*          49 - MSS ERROR
*          50 - VOLSER CHANGED BETWEEN CHECKPOINT AND RESTART
*
*TABLES/WORKAREAS -
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + O-GN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*ATTRIBUTES -
*
*              RE-ENTRANT, ENABLED, PRIVILEGED
*
***********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0                   WORK/PARM REGISTER
WRKR2    EQU   1                   WORK/PARM REGISTER
DCBR     EQU   2                   CURRENT DCB REGISTER
BASER    EQU   3                   BASE REGISTER
DEBR     EQU   4                   CURRENT DEB REGISTER
UCBR     EQU   5                   CURRENT UCB REGISTER
TIOTR    EQU   6                   NEW TIOT REGISTER
TCBR     EQU   7                   TCB REGISTER
TABLR    EQU   8                   START OF DCB TABL REG
CTABLR   EQU   9                   CURRENT DCB IN TABL REG
BUFR     EQU   10                  USER BUFFER AREA
DSCNTR   EQU   11                  NUMBER OF DATA SETS
WRKR3    EQU   12                  WORK REGISTER
WRKR4    EQU   13                  WORK REGISTER
WRKR5    EQU   14                  WORK/PARM REGISTER
WRKR6    EQU   15                  WORK/PARM REGISTER
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
IS       EQU   X'80'               INDEXED SEQUENCIAL
PS       EQU   X'40'               PHYSICAL SEQUENCIAL
DA       EQU   X'20'               DIRECT ACCESS
PO       EQU   X'02'               PARTITIONED ORGANIZATION
NULL     EQU   X'80'               NULLFILE OR SYSCHECK
INOROUT  EQU   X'40'               SYSIN OR SYSOUT DATA SET
DADEV    EQU   X'20'               DA DEVICE
UNITREC  EQU   X'04'               UNIT RECORD EQUIPMENT
ERRINNSL EQU   X'80'               ERROR IN NSL ROUTINE
NSLMTSW  EQU   X'40'               NSL MOUNT SWITCH
NSLCOMU  EQU   X'20'               NSL COMMUNICATION BIT
BYPASS   EQU   X'10'               BYPASS LABEL PROCESSING
NSL      EQU   X'04'               NON-STANDARD LABEL
SL       EQU   X'02'               STANDARD LABEL
NL       EQU   X'01'               NO LABEL
FIVE     EQU   5                   CONSTANT 5                    YM5513
POCONCAT EQU   X'40'               P.O. CONCATENATED
DAFLAG   EQU   X'80'               DA DATA SET FLAG
NONDAFLG EQU   X'40'               NON-DA DATA SET FLAG
NSLFLAG  EQU   X'10'               NSL ROUTINE FLAG
TYPERST  EQU   X'80'               IMMEDIATE RESTART
TABENT   EQU   48                  TABLE ENTRY LENGTH
WRITE    EQU   X'01'               WRITE ON TAPE
READ     EQU   X'02'               READ FOR TAPE
NOPOP    EQU   X'03'               NOP
SENSE    EQU   X'04'               SENSE
REWIND   EQU   X'07'               REWIND
READBACK EQU   X'0C'               READBACK
UNLOAD   EQU   X'0F'               REWIND AND UNLOAD
WTM      EQU   X'1F'               WRITE TAPE MARK
BSFOP    EQU   X'2F'               BACKWARD SPACE FILE
FSFOP    EQU   X'3F'               FORWARD SPACE FILE
SEARCH   EQU   X'31'               SEARCH
SRCHCNT  EQU   X'05'               COUNT FOR SEARCH ID
TIC      EQU   X'08'               TIC
READDA   EQU   X'06'               READ FOR DA
LENJFCB  EQU   X'B0'               LENGTH OF JFCB
LBLLEN   EQU   X'50'               LENGTH OF LABEL
PERMERR  EQU   X'7F'               PERMANENT ERROR
ERR045   EQU   45                  NO UCB AVAILABLE            @ZSUT222
ERR050   EQU   50                  VOLSER NOT EQUAL            @ZSUT222
ERR048   EQU   48                  ERROR IN READ JFCB          @ZSUT222
ERR049   EQU   49                  MSS ERROR CODE              @ZSUT222
EOVOLSER EQU   X'40'               END OF VOL SER LIST
MOUNTON  EQU   X'80'               MOUNT SWITCH ON
ONE      EQU   X'01'               CONSTANT ONE
PERMRES  EQU   X'26'               PERMANENT RESIDENT OR SYSTEM
DMCOUNT0 EQU   X'7F'               DATA MANAGEMENT COUNT 0     @ZA24910
MSGLEN   EQU   X'1A'               MSG LENGTH
SLASH    EQU   C'/'                SLASH
COMMA    EQU   C','                COMMA
SIGNOFF  EQU   X'F0'               REMOVE SIGN BIT
NOTREADY EQU   X'40'               NOT READY SWITCH
REC3     EQU   X'03'               CYL 0 - TRK 0 - REC 3
FILEMASK EQU   X'18'               FILE MASK
CHAIN    EQU   X'40'               CHAINING FLAG
MOUNTOFF EQU   X'7F'               MOUNT SWITCH OFF
DSONDEV  EQU   X'80'               DATA SET ON DEVICE
SWON     EQU   X'20'               PROCESSING SWITCH ON        @ZA27488
BLANK    EQU   C' '                BLANK CHARACTER
POORIS   EQU   PO+IS               P.O. OR I.S.
SWOFF    EQU   X'DF'               PROCESSING SWITCH OFF       @ZA27488
ZERO     EQU   X'00'               ZERO CONSTANT
SCRATCHV EQU   X'10'               SCRTCH PACK INDICATOR       @Y30LSRA
VIRTDASD EQU   X'08'               VIRT DASD MASK              @Y30LSRA
SHARED   EQU   X'80'               SHARED DEVICE               @Y30LSRA
ONLINE   EQU   X'80'               ONLINE DEVICE               @Y30LSRA
ACQ      EQU   X'02'               ACQUIRE OP CODE             @Y30LSRA
AROP     EQU   4                   DISP. OPCODE IN PARM LIST   @ZM44640
REL      EQU   X'04'               RELINQUISH OP CODE          @Y30LSRA
MNT      EQU   X'08'               MOUNT OP CODE               @Y30LSRA
DMNT     EQU   X'06'               DEMOUNT OP CODE             @Y30LSRA
R15      EQU   15                  REGISTER 15                 @Y30LSRA
DECZRO   EQU   X'F0'               DECIMAL ZERO                @Y30LSRA
ACQPLN   EQU   96                  ACQ PARM LST LENGTH         @Y30LSRA
K3       EQU   3                   CONSTANT OF 3                 A27515
K4       EQU   4                   CONSTANT OF 4                 A27515
NOMIX    EQU   11                  MASK FOR NOT MIXED            A27515
D0       EQU   0                   ZERO                          Y02076
D1       EQU   1                   ONE                           Y02076
D2       EQU   2                   TWO                           Y02076
D3       EQU   3                   THREE                         Y02076
D4       EQU   4                   FOUR                          Y02076
D5       EQU   5                   FIVE                          Y02076
D6       EQU   6                   SIX                           Y02076
D7       EQU   7                   SEVEN                         Y02076
D8       EQU   8                   EIGHT                         Y02076
D9       EQU   9                   NINE                          Y02076
D10      EQU   10                  TEN                         @Y30LSRA
D12      EQU   12                  TWELVE                      @Y30LSRA
D21      EQU   21                  TWENTY-ONE                  @Y30LSRA
D23      EQU   23                  TWENTY-THREE                @Y30LSRA
D24      EQU   24                  TWENTY FOUR                   Y02076
D27      EQU   27                  TWENTY-SEVEN                @Y30LSRA
D26      EQU   26                  TWENTY SIX                  @Y30LSRA
D28      EQU   28                  TWENTY EIGHT                @Y30LSRA
D33      EQU   33                  THIRTY THREE                @Y30LSRA
D40      EQU   40                  FORTY                         Y02076
D51      EQU   51                  FIFTY-ONE                   @Y30LSRA
D67      EQU   67                  SIXTY-SEVEN                 @Y30LSRA
D69      EQU   69                  SIXTY-NINE                  @Y30LSRA
D92      EQU   92                  NINETY-TWO                  @Y30LSRA
L2       EQU   2                   LENGTH OF TWO               @Y30LSRA
L3       EQU   3                   3                           @Y30LSRA
L4       EQU   4                   LENGTH OF FOUR              @Y30LSRA
L6       EQU   6                   LENGTH OF SIX               @Y30LSRA
L8       EQU   8                   LENGTH OF EIGHT             @Y30SLRS
L11      EQU   11                  LENGTH OF ELEVEN            @Y30LSRA
L28      EQU   28                  LENGTH OF TWENTY-EIGHT      @ZM33364
L80      EQU   80                  LENGTH OF EIGHTY            @Y30LSRA
L100     EQU   100                 LENGTH OF ONE HUNDRED       @Y30LSRA
EXCHPGM  EQU   X'80'               EXCP INDICATOR IN MACRF       YM5512
*
***********************************************************************
*
         USING TABL,WRKR4          CURRENT TABLE ENTRY
         USING MNTTIOT,TIOTR       NEW TIOT
         USING UCBOB,UCBR          UCB                           YM7868
         USING MNTTCB,TCBR         TCB
         USING RSDSECT,DEBR        WORK AREA
         USING IHADCB,CTABLR       DCB
         USING RSTWA,BUFR          RESTART WORK AREA
*
***********************************************************************
*
*                                  INITIALIZE REGISTERS
*
***********************************************************************
*
         BALR  BASER,0             SET UP BASE REGISTER
         USING *,BASER
         B     BEGIN               BRANCH AROUND EYE CATCHER     Y01909
         CNOP  0,8                 ALIGN TO A DBL WORD BOUNDARY  Y01909
         DC    CL8'IGC0M05B'       MODULE NAME                 @ZSUT222
         DC    CL8'&SYSDATE'       LAST DATE SHIPPED           @ZSUT222
         DC    CL8'@ZA31668'       LAST CODE SHIPPED           @ZSUT222
         DC    CL8'@SU82400'       SELECTABLE UNIT IDENT.      @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
*        INITIALIZE PERTINENT REGISTERS
*
         L     TCBR,RSTCBAD        PICK UP TCB ADDRESS
         L     TIOTR,TCBTIO        PICK UP TIOT ADDRESS
         LA    TIOTR,D0(TIOTR)     ADR ONLY                      Y02076
         LR    WRKR4,TABLR         TABLE ADDRESS TO WRKR4
         L     DEBR,TABSEGAD-1     PICK UP WORKAREA ADDRESS      A27516
         MVI   RSPPM+4,C'L'        SET UP XCTL LIST              A33983
***********************************************************************
*   GET SPACE FOR QMNGRIO PARAMETER LIST AND WORKAREA THEN INITIALIZE *
*   IT.  QMNGRIO IS USED FOR READING IN THE JFCB FROM THE SCHEDULER   *
*   WORK AREA (SWA).                                                  *
***********************************************************************
         ICM   WRKR1,ADDRBYTS,QMNPRMLN  LENGTH OF PARM LIST+WA   Y02076
         ICM   WRKR1,HIORDER,SP253 SUBPOOL 253                   Y02076
         GETMAIN  R,LV=(D0)        ISSUE GETMAIN FOR SPACE       Y02076
         USING QMIOP,WRKR2                                       Y02076
         XC    QMITCBAD(D24),QMITCBAD CLEAR PARM LIST            Y02076
         ST    TCBR,QMITCBAD       STORE TCB ADR IN PRM L.       Y02076
         LA    WRKR1,QMWRKOFT      GET WORK AREA OFFSET          Y02076
         AR    WRKR1,WRKR2         CALC ADR OF WORK AREA         Y02076
         ST    WRKR1,QMIWRKAD      STORE IN PARM LIST            Y02076
         LA    WRKR1,JFCBLNGH      GET LENGTH OF JFCB            Y02076
         STH   WRKR1,QMIRECL       STORE RECORD LENGTH           Y02076
         MVI   QMIFLAGS,QMIOREAD   SET READ FUNCTION             Y02076
         ST    WRKR2,QMNPRMWA      SAVE ADR OF PARM LIST         Y02076
         DROP  WRKR2                                             Y02076
*
*        IN ORDER TO PREVENT A NON-CANCELABLE SITUATION IN THE   YM7890
*        EVENT THE MEMORY IS SWAPPED OUT WITH AN OUTSTANDING     YM7890
*        MOUNT, ISSUE A SYSEVENT TO INHIBIT SWAP-OUT.            YM7890
*                                                                YM7890
         SYSEVENT DONTSWAP         INHIBIT SWAP-OUT              YM7890
*                                                                YM7890
MNTDA005 EQU   *
         L     CTABLR,TABDCBAD-1   PICK UP DCB ADDRESS
         MVC   RSJFCB+164(3),TABJFCB SAVE TTR OF JFCB.
         TM    TABFLG1,TABDA       D.A.
         BZ    MNTDA105            BRANCH IF NOT D.A.
*
         TM    TABFLG1,TABSYS      IS IT SUBSYS DATA SET         Y02076
         BO    MNTDA105            YES-BR OVER MOUNT             Y02076
         MVC   RSJFCB1+4(30),TABVLID1 MOVE VOL SER NO TO WORK AREA
         MVI   RSJFCB1+34,EOVOLSER FLAG END OF VOL SER LIST
         LA    DSCNTR,RSJFCB1+4    SET VOL SER NO POINTER
         LH    WRKR5,DCBTIOT       PICK UP TIOT OFFSET
         SR    WRKR6,WRKR6         CLEAR
         IC    WRKR6,0(TIOTR,WRKR5) LENGTH OF DD ENTRY
         AR    WRKR6,TIOTR         TIOTR ADDRESS
         AR    WRKR6,WRKR5         ADD OFFSET
         ST    WRKR6,RSJFCB+160    SAVE 'END OF DD ENTRY' POINTER
*
*                                  POINTS TO DDNAME
*
         LA    WRKR5,16(WRKR5)     DISPLACEMENT TO 1ST UCB
         LR    TCBR,WRKR5          POINT TO BEGINNING OF UCB'S TO BE
*                                  CHECKED
         BAL   WRKR2,MNTDA116      GET 1ST AVAIL UCB ADDR        YM7868
*
MNTDA010 EQU   *
*                                                                YM7550
*        VIO DATA SETS ARE ALLOCATED WITH ONLY ONE PSEUDO        YM7550
*        DEVICE WHICH DOES NOT REQUIRE VOLUME MOUNTING.          YM7550
*                                                                YM7550
         TM    UCBJBNR,UCBVRDEV    VIO PSEUDO DEVICE             YM7550
         BNO   MNTDA013            IF NOT, CONTINUE              YM7550
         TM    TABFLG2,TABRSDS     IS THIS THE RESTART D/S       YM7579
         BO    MNTDA070            IF SO, LEAVE D/M COUNT ALONE  YM7579
         IC    DCBR,UCBDMCT        UPDATE THE DATA               YM7550
         LA    DCBR,D1(,DCBR)        MANAGEMENT COUNT            YM7550
         STC   DCBR,UCBDMCT            BY ONE                    YM7550
         B     MNTDA070            SKIP VOLUME MOUNTING          YM7550
*
MNTDA013 EQU   *                   NON-VIO ENTRY                 YM7550
         TM    UCBDMCT,MOUNTON     IS MOUNT SWITCH ON            YM7868
         BO    MNTDA040            BRANCH IF YES
         CLC   0(6,DSCNTR),UCBVOLI CORRECT VOLUME MOUNTED        YM7868
         BE    MNTDA040            BRANCH IF YES
*
MNTDA015 EQU   *
         BAL   WRKR2,MNTDA115      GO TO 'GET NEXT UCB' ROUTINE
*
         BC    3,MNTDA010          BR IF NOT LAST UCB - COND     A33983
*                                  CODE SET IN 'GET NEXT UCB' ROUTINE
*
***********************************************************************
*
* THE VOLUME WAS NOT MOUNTED - FIND AN AVAILABLE UCB AND MOUNT THE
* VOLUME.
*
***********************************************************************
*
         LR    WRKR5,TCBR          1ST AVAILABLE UCB POINTER     YM7868
         BAL   WRKR2,MNTDA116      GET 1ST AVAIL UCB ADDR        YM7868
MNTDA020 EQU   *                                                 A30003
         TM    UCBSTAT,PERMRES     IS DEVICE PERM RES OR SYS     YM7868
         BNE   MNTDA025            BR IF YES                     A30003
         TM    UCBDMCT,DMCOUNT0    DATA MANAGEMENT COUNT=0       YM7868
         BZ    MNTDA028            BR IF 0                       A30003
MNTDA025 EQU   *                                                 A30003
         BAL   WRKR2,MNTDA115      GO TO 'GET NEXT UCB' ROUTINE  A30003
         BC    3,MNTDA020          BR IF NOT LAST UCB            A33983
MNTDA026 EQU   *                                                 A30003
         MVI   RSRETCOD+1,ERR045   NO UCB AVAIL,RETURN CODE 45 @ZSUT222
MNTDA027 EQU   *                                                 A30003
         MVC   RSREGSAV(8),MODID   SAVE NAME OF MODULE THAT    @ZSUT222
*                                  HAS DETECTED THE ERROR.     @ZSUT222
         STM   0,15,RSREGSAV+8     SAVE CURRENT REGISTERS      @ZSUT222
         MVI   RSPPM+4,C'V'        XCTL TO IGC0V05B              A30003
         B     MNTDA160                                          A30003
*
***********************************************************************
*
* VOLUME CAN BE MOUNTED- PREPARE TO ISSUE MOUNT MESSAGE
*
***********************************************************************
*
MNTDA028 EQU   *
*                                                              @Y30LSRA
         USING UCBOB,UCBR          ADDRESSING MAIN UCB         @Y30LSRA
         L     UCBR,RSDEBUCB       PICK UP MAIN UCB ADDRESS    @Y30LSRA
         OI    UCBFL2,NOTREADY     SET NOT READY SWITCH ON     @Y30LSRA
***************************************************************@Y30LSRA
*        IF THE DASD TO BE MOUNTED IS VIRTUAL, THE WTO MUST BE @Y30LSRA
*        INTERCEPTED AND A MESSAGE SENT TO MSS  INSTEAD.       @Y30LSRA
*        FOR MSS ONLY,IF A  VOLUME EXISTS ON THE VIRTUAL DRIV  @Y30LSRA
*        AND IS DEMOUNTABLE, A DEMOUNT MESSAGE IS SENT TO MSS  @Y30LSRA
*        BEFORE THE MOUNT MESSAGE IS SENT.                     @Y30LSRA
***************************************************************@Y30LSRA
         TM    UCBTBYT2,VIRTDASD   IS VIRTUAL DEVICE INDICATED @Y30LSRA
         BNO   MNTDA02D            NO, FORGET MSS  PROCESSING  @Y30LSRA
         TM    UCBSTAT,ONLINE      IS DRIVE ONLINE             @Y30LSRA
         BZ    MNTDA026            NO, CANNOT DEMOUNT          @ZM30037
         CLC   UCBVOLI(L6),ZEROS   ANY PACK MOUNTED            @Y30LSRA
         BE    MNTDA029            NO, FORGET DEMOUNT          @Y30LSRA
         CLC   UCBVOLI(L6),BLANKS  IS ANYTHING MOUNTED         @ZM30037
         BE    MNTDA029            NO, NOTHING MOUNTED         @ZM30037
* CHECK IF THE CURRENT VOLUME MOUNTED HAS UNIT=AFF,            @ZA27287
* MORE VOL SERIALS THAN UNITS OR DEFER MOUNTING.               @ZA27287
         TM    UCBSTAB,SHARED      IS DRIVE SHAREABLE ?        @ZA27287
         BO    MNTDA026            YES, CANT MOUNT ON UCB      @ZA27287
         LA    WRKR2,RSJFCB        DEMOUNT, GET WORK AREA      @ZM30037
         XC    D0(L28,WRKR2),D0(WRKR2) ZERO OUT THE WORK AREA  @ZM33364
         MVC   RSJFCB+D8(L6),UCBVOLI  MOVE IN VOLID - DEMOUNT  @Y30LSRA
         ICBMNTDE TYPE=DMNT,VUA=UCBCHA,                        @G24LSFS*
               MF=(E,(1))
         LTR   WRKR6,WRKR6         ANY ERRORS                  @Y30LSRA
         BNZ   MNTDA02C            YES, DO NOTHING             @ZM30037
MNTDA029 EQU   *                                               @Y30LSRA
         OI    SRTEDMCT,MOUNTON    SET MOUNT SW ON             @Y30LSRA
         LA    WRKR2,RSJFCB        GET READ IN AREA            @Y30LSRA
         XC    D0(L28,WRKR2),D0(WRKR2) CLEAR IT OUT FOR LIST   @ZM33364
         CLC   SCRTCH,D0(DSCNTR)   MOUNTING SCRATCH            @Y30LSRA
         BNE   MNTDA02A            NO, DON'T SET SCRTCH BIT    @Y30LSRA
         OI    D6(WRKR2),SCRATCHV  YES, MOUNT SCRATCH          @Y30LSRA
         B     MNTDA02B            FORGET VOLID FOR SCRTCH     @Y30LSRA
MNTDA02A EQU   *                                               @Y30LSRA
         MVC   RSJFCB+D8(L6),D0(DSCNTR) MOVE IN VOLID          @Y30LSRA
MNTDA02B EQU   *                                               @Y30LSRA
         ICBMNTDE TYPE=MNT,VUA=UCBCHA,MF=(E,(1))               @Y30LSRA
         LTR   WRKR6,WRKR6         ANY ERRORS OCCUR            @Y30LSRA
         BZ    MNTDA040            NO, ALL OK - CONTINUE       @Y30LSRA
MNTDA02C EQU   *                                               @Y30LSRA
         STH   WRKR1,D0(WRKR2)     SAVE  DATA IN REGISTER 0    @Y30LSRA
         MVC   MSGAREA(MSGLENTH-MSSMSG),MSSMSG  SET UP MSG     @Y30LSRA
         L     R15,CVTPTR          GET CVT ADDR                @Y30LSRA
         L     R15,D0(,R15)         GET ADDR OF TCB  WORDS     @Y30LSRA
         L     R15,D4(,R15)         GET CURRENT TCB PTR        @Y30LSRA
         L     R15,D12(,R15)       GET TIOT PTR                @Y30LSRA
         MVC   MSGAREA+D12(L8),D0(R15) GET JOBNME              @Y30LSRA
         MVC   MSGAREA+D21(L6),D8(WRKR2) GET VOLSER IN MSG     @Y30LSRA
         CLI   D4(WRKR2),ACQ       TEST FOR ACQUIRE            @Y30LSRA
         BE    MNTDA03D            YES--NO DDD                 @Y30LSRA
         CLI   D4(WRKR2),REL       TEST FOR RELINQUISH         @Y30LSRA
         BE    MNTDA03D            YES--NO DDD                 @Y30LSRA
         MVC   MSGAREA+D28(L3),UCBNAME  INSERT UNIT ID         @Y30LSRA
         B     MNTDA03E            CONTINUE PROCESSING MSG     @Y30LSRA
MNTDA03D MVI   MSGAREA+D27,BLANK   INSERT BLANK IN MSG         @Y30LSRA
         MVC   MSGAREA+D28(L3),MSGAREA+D27  BLANK DDD          @Y30LSRA
MNTDA03E CLI   D4(WRKR2),MNT       TEST FOR MOUNT              @Y30LSRA
         BNE   MNTDA03F            NO                          @Y30LSRA
         MVC   MSGAREA+D51(L11),KMNT   INSERT MOUNT IN MSG     @Y30LSRA
         B     MNTDA03K            CONTINUE PROCESSING MSG     @Y30LSRA
MNTDA03F CLI   D4(WRKR2),DMNT      TEST DEMOUNT                @Y30LSRA
         BNE   MNTDA03G            NO                          @Y30LSRA
         MVC   MSGAREA+D51(L11),KDMNT INSERT DEMOUNT IN MSG    @Y30LSRA
         B     MNTDA03K            CONTINUE PROCESSING MSG     @Y30LSRA
MNTDA03G CLI   D4(WRKR2),ACQ       TEST FOR ACQUIRE            @Y30LSRA
         BNE   MNTDA03H            NO--RELINQUIST              @Y30LSRA
         MVC   MSGAREA+D51(L11),KACQ INSERT ACQUIRE            @Y30LSRA
MNTDA03H LH    WRKR6,D26(,WRKR2)   GET REASON CODE             @ZM30037
         LTR   WRKR6,WRKR6         TEST FOR NON-ZERO           @Y30LSRA
         BNZ   MNTDA03J            YES,USE CODE IN MSG         @Y30LSRA
         L     WRKR3,D92(,WRKR2)   GET NEST LIST PTR           @Y30LSRA
         LTR   WRKR3,WRKR3         TEST FOR ZERO               @Y30LSRA
         BZ    MNTDA03J            YES,USE CODE ONLIST         @Y30LSRA
         LR    WRKR2,WRKR3         SET NEW LIST PTR            @Y30LSRA
         B     MNTDA03H            EXAMINE RESSON CODE         @Y30LSRA
MNTDA03K LH    WRKR6,D0(WRKR2)     GET REASON CODE             @Y30LSRA
MNTDA03J SLL   WRKR6,D4            SHIFT FOUR BITS             @ZM30037
         STH   WRKR6,D0(WRKR2)     RESET REASON CODE           @Y30LSRA
         UNPK  MSGAREA+D67(L3),D0(L2,WRKR2)  UNPACK CODE       @Y30LSRA
         OI    MSGAREA+D69,DECZRO  INSURE VALID DIGIT          @Y30LSRA
         TR    MSGAREA+D67(L3),ABTABLE  MAKE PRINTABLE         @Y30LSRA
         LR    WRKR3,WRKR2         SAVE PTR TO WORKAREA        @Y30LSRA
         LA    WRKR2,MSGAREA       GET ADDR OF MSGAREA         @Y30LSRA
         WTO   MF=(E,(1))          ISSUE WTO,WTP               @Y30LSRA
         LR    WRKR2,WRKR3         RESTORE PTR TO WORKAREA     @Y30LSRA
         MVI   RSRETCOD+D1,ERR049  SET MSS ERROR CODE          @ZSUT222
         B     MNTDA027            BRANCH TO EXIT ROUTINE      @Y30LSRA
MNTDA02D EQU   *                                               @Y30LSRA
         MVC   MSGAREA(19),MOUNTMS MOUNT INFO TO MESSAGE AREA.
         MVC   MSGID(6),0(DSCNTR)  VOL ID TO MESSAGE AREA.
         MVC   MSGID+6(4),RTDESC   MOVE ROUTE AND DESCRIPTOR        MCS
*                                  CODES TO MESSAGE                 MCS
*
         MVI   MSGAREA+1,MSGLEN    INSERT MSG LENGTH FOR 2321
         MVI   MSGID-1,SLASH       MOVE SLASH TO MESSAGE
         MVI   MSGID+1,COMMA       MOVE COMMA TO MESSAGE
         MVC   MSGID(1),RSIOBDAD+2 MOVE IN BINARY NUMBER
         OI    MSGID,SIGNOFF       CONVERT TO DECIMAL NUMBER
         MVC   MSGID+2(6),0(DSCNTR) VOL ID TO MESSAGE AREA
         MVC   MSGID+8(4),RTDESC   MOVE ROUTE AND DESCRIPTOR        MCS
*                                  CODES TO MESSAGE                 MCS
*
MNTDA030 EQU   *
*
         OI    SRTEDMCT,MOUNTON         SET MOUNT SW ON          A42221
         MVC   MSGUCB(3),UCBNAME   UNIT NAME
*
*
         LA    WRKR2,MSGAREA       MESSAGE AREA ADDRESS IN REG. 1
*
         WTO   MF=(E,(1))          WRITE TO OPERATOR
         ST    WRKR2,RSMWOFST      SAVE MSGID FOR DOM               MCS
         OI    RSMWOFST,X'80'      INDICATE DOM MUST BE ISSUED      MCS
*
***********************************************************************
*
* PREPARE TO READ IN VOLUME SERIAL NUMBER
*
***********************************************************************
*
MNTDA040 EQU   *
*
         MVI   RSIOBDAD+7,REC3     CYL 0 - TRK 0 - REC 3
         MVI   RSDEBUCB,FILEMASK   SET FILE MASK
*
* TO READ VOLUME LABEL AND CONVERT VTOC ADDRESS TO TTR, DEB EXTENTS
* MUST BE SET TO COVER ENTIRE VOLUME.  LOW CCHH IS ZERO, AND HIGH
* CC + 1 IS OBTAINED FROM SYSTEM DEVICE CHARACTERISTICS TABLE.
*
         L     WRKR2,CVTPTR        LOAD CVT POINTER              M0187
         USING CVT,WRKR2                                         M0187
         L     WRKR2,CVTZDTAB      LOAD DEVTAB POINTER           M0187
         DROP  WRKR2                                             M0187
         IC    WRKR6,UCBTBYT4      GET DEVICE TYPE BYTE          M0187
         LA    WRKR1,X'0F'         GENERATE MASK                 M0187
         NR    WRKR6,WRKR1         USE LO-ORDER BITS FOR INDEX   M0187
         AR    WRKR2,WRKR6         POINT TO DEVTAB ENTRY         M0187
         IC    WRKR6,0(WRKR6,WRKR2) PICK UP NEXT INDEX           M0187
         XC    RSDEBSCC(8),RSDEBSCC CLEAR DEB EXTENTS            M0187
         MVC   RSDEBECC,0(WRKR2)   SET HIGH CYLINDER ADDR.       M0187
*
*        SEARCH ID
*        TIC
*        READ
*
         LA    WRKR2,RSIOBDAD+3    DISK ADDR OF VOL LAB
         ST    WRKR2,RSCCW1        PLACE IN CHANNEL PROGRAM
         MVI   RSCCW1,SEARCH       COMMAND CODE TO CCW1 (SEARCH ID EQ)
         MVC   RSCCW1+4(4),CHAIN5  RESTORE FLAG AND COUNT FIELDS M4597
*
         MVI   RSCCW2,TIC          RESTORE TIC COMMAND           M4597
         MVC   RSCCW2+1(K3),RSIOBCPA+1 NEXT CCW ADDR TO TIC CCW  A27515
*
         LA    WRKR1,RSJFCB        JFCB AREA ADDRESS
         ST    WRKR1,RSCCW3        ADDRESS TO CCW
         MVI   RSCCW3,READDA       RESTORE OP CODE (READ)
         LA    WRKR1,LBLLEN        FLAGS AND DATA LENGTH         M4597
         ST    WRKR1,RSCCW3+4      RESTORE FLAG AND DATA LENGTH  M4597
*
*        READ IN VOLUME LABEL
*
         BAL   DCBR,MNTDA135       EXCP/WAIT ROUTINE
*
         CLC   0(6,DSCNTR),RSJFCB+4 WAS CORRECT VOLUME MOUNTED
         BE    MNTDA045            YES, CONTINUE AS USUAL      @Y30LSRA
         TM    UCBTBYT2,VIRTDASD   VIRT VOL MOUNT              @Y30LSRA
         BZ    MNTDA028            NO, GO REQUEST REMOUNT      @Y30LSRA
         B     MNTDA026            YES, ERROR -ABEND JOB       @ZM30037
MNTDA045 EQU   *                                               @Y30LSRA
*
         MVC   UCBVOLI(6),RSJFCB+4 MOVE VOL SER NO. TO UCB       YM7868
         NI    UCBDMCT,MOUNTOFF    RESET MOUNT SW                YM7868
         LA    CTABLR,0(CTABLR)    CLEAR HIGH ORDER BYTE
         CL    CTABLR,RSCKDCB      IS THIS THE CHECKPOINT DCB
         BE    MNTDA042            BRANCH IF YES
         L     WRKR1,UCBDMCT-3     GET WORD WITH D/M COUNT       YM7868
MNTDA041 EQU   *                   RETRY ENTRY                   YM7868
         LR    WRKR2,WRKR1         GET CURRENT VALUE FOR UPDATE  YM7868
         A     WRKR2,F1            BUMP D/M COUNT BY 1           YM7868
         CS    WRKR1,WRKR2,UCBDMCT-3 ATTEMPT TO UPDATE UCB       YM7868
         BNE   MNTDA041            TRY AGAIN IF UPDATE FAILED    YM7868
MNTDA042 EQU    *
*
* CONVERT VTOC ADDR TO TTR FORM AND PLACE IN UCB
*
         MVC   RSIOBDAD+3(5),RSJFCB+11 GET CCHHR VTOC ADDR FROM LABEL
         ST    TCBR,RSSTAT1        SAVE REGISTER
         LA    TCBR,RSJFCB+88      REG. SAVE AREA
         STM   BASER,WRKR5,0(TCBR) STORE REGISTERS
         LA    WRKR2,RSDEB         DEB ADDRESS TO WRKR2
         L     WRKR6,CVTPTR        GET CVT ADDRESS
         L     WRKR6,CVTPRLTV-CVT(WRKR6) PICK UP CONVERT RTN ADDRESS
         LA    DCBR,RSIOBDAD       MBBCCHHR ADDRESS
         BALR  WRKR5,WRKR6         GO TO CONVERT (MBBCCHHR TO TTR)
*
         LM    BASER,WRKR5,0(TCBR) RESTORE REGS.
         L     TCBR,RSSTAT1        RESTORE TABLE POINTER
*
* PLACE VTOC TTR ADDRESS INTO UCB
*
         ST    WRKR1,RSJFCB+80     TTR IN REG. 0 ON RETURN
         MVC   UCBVTOC(3),RSJFCB+80 PLACE VTOC TTR IN UCB        YM7868
*
***********************************************************************
*
* SWAP UCB'S I.E. THE POSITION OF VOL SER IN THE JFCB SHOULD
* CORRESPOND TO THE POSITION OF UCB (IN THE TIOT) ON WHICH THAT
* VOLUME IS MOUNTED.
*
***********************************************************************
*
         L     DCBR,0(TIOTR,WRKR5) UCB ON WHICH VOL IS MOUNTED   M2763
         L     WRKR2,0(TIOTR,TCBR) UCB IN 1ST AVAIL SLOT         M2763
         ST    WRKR2,0(TIOTR,WRKR5) SAVE UCB IN 1ST AVAIL SLOT   M2763
         ST    DCBR,0(TIOTR,TCBR)  MOUNTED UCB TO 1ST AVAIL SLOT M2763
*
         LA    WRKR2,0(TIOTR,TCBR) ADDR OF 1ST UCB ADDR POSITION A30003
         OI    0(WRKR2),DSONDEV    SET 'DATA SET IS ON DEVICE'   A30003
*                                                                YM7807
*****************************************************************YM7807
*                                                                YM7807
*        THE VOLUME SERIAL NUMBER IN EACH EXTENT (PLACED THERE   YM7807
*        BY IHJQCP32) WILL BE COMPARED WITH THE VOLUME SERIAL    YM7807
*        NUMBER IN THE UCB.  IF EQUAL, THE UCB ADDRESS WILL      YM7807
*        BE PLACED IN THE EXTENT.  THE EXTENT SECTION IN EACH    YM7807
*        DA DEB (EXCLUDING DUMMY, SUBSYSTEM, AND VSAM) HAS THE   YM7807
*        FOLLOWING FORMAT:                                       YM7807
*                                                                YM7807
*      0 +++++++++++                                             YM7807
*        + VOL SER +      VOL SER NO.= VOLUME SERIAL NUMBER      YM7807
*      4 +++++++++++                                             YM7807
*        + NO.+ CC +      CCHH = EXTENT INFORMATION IN DEB       YM7807
*      8 +++++++++++                                             YM7807
*        + *H + CC +      * = SAVE AREA FOR OVERLAYED FILE MASK  YM7807
*     12 +++++++++++                                             YM7807
*        + HH + TT +      TT = NUMBER OF TRACKS IN EXTENT        YM7807
*     16 +++++++++++                                             YM7807
*                                                                YM7807
*****************************************************************YM7807
*                                                                YM7807
MNTDA070 EQU   *
         BAL   WRKR3,MNTDA110      SET UP TO SPIN THRU DEB
         LTR   WRKR6,WRKR6         ANY DEB EXTENTS               YM7550
         BZ    MNTDAZIP            IF NOT, SKIP DEB UPDATE       YM7550
*
         USING DEBDASD,DCBR        DEB EXTENT ADDRESSABILITY     YM7807
***************************************************************@Y30LSRA
*        FOR VIRTUAL DASD, SPACE MUST BE ACQUIRED ON A REAL    @Y30LSRA
*        PACK FOR STAGING THE VIRTUAL PACK.  THE QUEUE MGR     @Y30LSRA
*        WORK AREA IS USED FOR A PARM LIST TO PASS TO MSS.     @ZM30037
***************************************************************@Y30LSRA
         L     WRKR5,QMNPRMWA      GET JES Q-MGR WK AREA       @Y30LSRA
         LA    WRKR5,QMWRKOFT(,WRKR5) POINT TO ACTUAL WRK AREA @Y30LSRA
         SR    WRKR1,WRKR1         ASSUME ZERO ENTRYS          @Y30LSRA
         XC    D0(L100,WRKR5),D0(WRKR5) ZERO OUT SOME SPACE    @Y30LSRA
         TM    UCBTBYT2,VIRTDASD   IS UCB FOR VIRT DEVICE      @Y30LSRA
         BNO   MNTDA075            NO, EX - OR WAS WASTED      @Y30LSRA
         TM    TABDSORG,DA+PO+PS   NON VSAM OR NON ISAM        @Y30LSRA
         BZ    MNTDA075            NO, FORGET PARM LIST        @Y30LSRA
         MVI   D3(WRKR5),ACQPLN    MOVE HEADER LENGTH          @Y30LSRA
         MVC   D8(L6,WRKR5),UCBVOLI MOVE IN THE VOLID          @Y30LSRA
         LA    WRKR3,D28(,WRKR5)   SKIP NUM OF ENTRYS BYTE     @Y30LSRA
*                                                              @Y30LSRA
MNTDA075 EQU   *                                                 YM7807
*                                                                YM7807
         NI    TABFLG3,X'FE'       RESET VOLSER MISMATCH FLAG  @ZA31668
*                                                              @ZA31668
MNTDA076 EQU   *                                               @ZA31668
*                                                              @ZA31668
         TM    DEBENDHH,SWON       HAS EXTENT BEEN PROCESSED?    YM7807
         BO    MNTDA080            YES, CHECK NEXT EXTENT        YM7807
         CLC   DEBUCBAD(D6),UCBVOLI  ARE THE VOL SERS EQUAL?     YM7807
         BE    MNTDA077            YES, CONTINUE               @ZA31668
         OI    TABFLG3,X'01'       SET VOLSER MISMATCH FLAG    @ZA31668
         B     MNTDA080            CHECK NEXT EXTENT           @ZA31668
*                                                                YM7807
MNTDA077 EQU   *                                               @ZA31668
*                                                              @ZA31668
         ST    UCBR,DEBUCBAD       PUT UCB POINTER IN EXTENT     YM7807
         MVC   DEBDVMOD(D1),DEBSTRHH  RESTORE FILE MASK          YM7807
         XC    DEBBINUM(D2),DEBBINUM  ZERO OUT BIN NUMBER        YM7807
         MVI   DEBSTRHH,D0         ZERO OUT FILE MASK TEMP HOLD  YM7807
*                                  AREA.                         YM7807
         OI    DEBENDHH,SWON       TURN ON 'PROCESSED' SWITCH    YM7807
*                                                                YM7807
*****************************************************************YM7807
*                                                                YM7807
*        SINCE ALL VIO DATA SETS HAVE THE SAME VOLUME ID         YM7807
*        (BLANKS), ONLY ONE EXTENT (EXCLUDING USER LABELS),      YM7807
*        AND THE DEB EXTENTS ARE IN DD CARD SEQUENCE FOR PO      YM7807
*        CONCATENATION, UPDATE ONLY ONE DEB EXTENT PER VIO       YM7807
*        DD ENTRY.  NOTE - PO CONCATENATION IS THE ONLY MULTI-   YM7807
*        DD, PARALLEL MOUNT SITUATION THAT CAN EXIST FOR VIO.    YM7807
*        ISAM IS NOT AN ALLOWABLE ACCESS METHOD TYPE FOR VIO.    YM7807
*                                                                YM7807
*****************************************************************YM7807
*                                                                YM7807
         TM    UCBJBNR,UCBVRDEV    IS THIS A VIO UCB             YM7807
         BO    MNTDAZIP            IF YES, SKIP RECURSION        YM7807
         TM    D3(WRKR5),ACQPLN    WAS A HEADER BUILT          @Y30LSRA
         BZ    MNTDA080            NO, THEN NO VIRT VOL        @Y30LSRA
         CLC   D6(L4,DCBR),BUNCHFFS VALID EXTENT               @Y30LSRA
         BE    MNTDA080            NO, DONT ACQ THIS EXT       @Y30LSRA
         MVC   D0(L2,WRKR3),D6(DCBR) MOVE LO CC TO ENTRY       @Y30LSRA
         MVC   D2(L2,WRKR3),D10(DCBR) MOVE HI CC TO ENTRY      @Y30LSRA
         AH    WRKR1,ONEMOR        INCR NUM OF ENTRYS          @Y30LSRA
         LA    WRKR3,D4(,WRKR3)    POINT TO NEXT ENTRY         @Y30LSRA
*
MNTDA080 EQU   *
         LA    DCBR,16(DCBR)       INCREMENT TO NEXT XTENT
         BCT   WRKR6,MNTDA076      PROCESS NEXT EXTENT IF ANY  @ZA31668
         DROP  DCBR                                              YM7807
*
************************************************************** @Y30LSRA
*        IF ANY EXTENTS WERE FOUND, GO GET SPACE FOR THEM.     @Y30LSRA
************************************************************** @Y30LSRA
         LTR   WRKR1,WRKR1         NO VIR DASD OR NO ENTRY     @Y30LSRA
         BZ    MNTDA08A            NONE, SO SKIP ACQUIRE       @Y30LSRA
         STC   WRKR1,D7(,WRKR5)    STORE NUM OF ENTRYS         @Y30LSRA
         MVI   4(WRKR5),X'02'      SET COMMAND CODE FOR MACRO  @ZA18267
         LR    WRKR3,WRKR2         SAVE CONTENTS OF REG 1      @Y30LSRA
         MVI   AROP(WRKR5),ACQ     ACQUIRE OPCODE              @ZM44640
         ICBACREL TYPE=ACQ,MF=(E,(14))                         @Y30LSRA
         LTR   WRKR6,WRKR6         ANY ERRORS                  @Y30LSRA
         BNZ   MNTDA02C            YES, GO ABEND THE JOB       @Y30LSRA
         LR    WRKR2,WRKR3         RESTORE REG 1               @Y30LSRA
         SR    WRKR1,WRKR1         ZERO OUT NUM OF EXTENTS     @Y30LSRA
MNTDA08A EQU   *                                               @Y30LSRA
*                                                              @Y30LSRA
***********************************************************************
*
*        CHECK TO SEE IF THERE IS ANOTHER VOLUME SERIAL NUMBER
*        FOR THIS TABLE ENTRY.
*
***********************************************************************
*
MNTDAZIP EQU   *                   ENTRY IF NO DEB EXTENTS       YM7550
         LR    WRKR5,TCBR          AVAILABLE UCB'S ADDRESS-4
         LA    TCBR,4(TCBR)        INCREMENT PTR TO 1ST AVAILABLE UCB
         LA    DSCNTR,6(DSCNTR)    INCREMENT VOL SER POINTER
         LA    WRKR6,MNTDA085      ESTABLISH BR ADDRESS          A30003
         TM    TABDSORG,PS         IS DATA SET P.S.
         BCR   1,WRKR6             BR IF YES TO 'MNTDA085'       A30003
*
*   IF THE USER IS PROCESSSING ISAM OR BDAM DATA SETS            YM5512
*   USING EXCP, TREAT IT THE SAME AS A PS DATA SET               YM5512
         TM    TABDSORG,DA+IS      IS IT ISAM OR BDAM            YM5512
         BZ    MNTDA081            NO,CHECK FOR MORE VOLS        YM5512
         TM    DCBMACRF,EXCHPGM    IS THIS EXCP -IS OR DA        YM5512
         BCR   1,WRKR6             YES,TREAT AS PS FOR           YM5512
MNTDA081 EQU   *                   VOL MOUNTING PURPOSES         YM5512
         CLI   0(DSCNTR),EOVOLSER  IS THERE ANOTHER VOL SER IN TABLE
         BNE   MNTDA015            BRANCH TO GET NEXT UCB
         TM    TABFLG2,TABG5V      JFCB EXTENSION TO BE READ IN
         BCR   8,WRKR6             BR IF NO TO 'MNTDA085'        A30003
         OC    TABJFCB(3),TABJFCB  TEST IF JFCBX EXISTS
         BCR   8,WRKR6             BR IF NO TO 'MNTDA085'
MNTDA083 EQU   *                                                 A33983
*
         BAL   DCBR,MNTDA130       READ IN JFCB EXTENTSION
*
         MVC   TABJFCB(3),RSJFCB1  TTR OF NEXT JFCB EXTENSION
         MVI   RSJFCB1+94,EOVOLSER FLAG END OF VOL SER LIST
*
         B     MNTDA015            GO TO MOUNT THIS VOL SER
*
MNTDA085 EQU   *
*
         L     DCBR,RSJFCB+160     SET UP TO CHECK END OF DD ENTRY
*
***********************************************************************
*                                                                     *
*        IF P. O. DATA SET IS CONCATENATED READ IN JFCB, IF NOT       *
*        GO TO NEXT TABLE ENTRY.                                      *
*                                                                     *
***********************************************************************
*
* IS NEXT DD ENTRY BLANK
*
MNTDA090 EQU   *
         LA    WRKR6,MNTDA095      ESTABLISH BR ADDRESS          A30003
         CLI   0(DCBR),ZERO        IS THIS END OF TIOT           A30003
         BCR   8,WRKR6             BR IF YES TO 'MNTDA095'       A30003
*
         CLI   4(DCBR),BLANK       IS DDNAME BLANK
         BCR   7,WRKR6             BR IF NEXT ENTRY IS NOT       A30003
*                                  BLANK TO 'MNTDA095'
*
*   IF THE USER IS PROCESSING AN ISAM DATA SET                   YM5512
*   USING EXCP, ONLY ONE VOLUME SHOULD BE MOUNTED                YM5512
         TM    TABDSORG,PO         IS THIS A PART D.S.           YM5512
         BO    MNTDA092            YES, GO ON                    YM5512
         TM    TABDSORG,IS         IS THIS AN ISAM D/S           YM5512
         BCR   8,WRKR6             BR IF NO TO MNTDA095          YM5512
         TM    DCBMACRF,EXCHPGM    IS THIS AN EXCP DCB           YM5512
         BCR   1,WRKR6             BR IF YES TO MNTDA095         YM5512
***********************************************************************
*
*                RESET END OF DD ENTRY POINTER
*
***********************************************************************
*
MNTDA092 EQU   *                                                 YM5512
         SR    WRKR6,WRKR6         CLEAR REG
         IC    WRKR6,0(DCBR)       LOAD LENGTH OF DD ENTRY
         AR    WRKR6,DCBR          TRUE CORE POSITION            M0187
         ST    WRKR6,RSJFCB+160    SAVE END OF DD ENTRY POINTER
*
* READ IN JFCB FOR THIS DD ENTRY
*
         LA    WRKR5,12(TCBR)      ADDR-4 OF 1ST UCB OF BLANK DDNAME
         MVC   TABJFCB(3),12(DCBR) TTR OF JFCB TO TABLE
         LA    TCBR,4(WRKR5)       PNT TO BEGIN'G OF UCB'S TO BE CHECK
         BAL   DCBR,MNTDA130       READ IN JFCB
*
         MVC   TABJFCB(3),RSJFCB1+JFCBEXAD-JFCBDSNM TTR OF XT TO TABLE
         MVC   RSJFCB1+4(30),RSJFCB1+JFCBVOLS-JFCBDSNM VOL SER NO
         MVI   RSJFCB1+34,EOVOLSER FLAG END OF VOL SER LIST
*
*   DETERMINE IF JFCB EXTENSION IS REQUIRED BEFORE               YM5513
*   ATTEMPTING TO READ IT                                        YM5513
         NI    TABFLG2,X'FF'-TABG5V TURN OFF JFCB EXT SW         YM7550
         CLI   RSJFCB1+JFCBNVOL-JFCBDSNM,FIVE                    YM5513
*                                  IS JFCBNVOL GR THAN 5         YM5513
         BNH   MNTDA093            NO,JFCB EXT NOT REQRD         YM5513
         OI    TABFLG2,TABG5V      YES, TURN ON JFCB EXT SW      YM7550
MNTDA093 EQU   *                                                 YM5513
         TM    TABDSORG,PO         P.O. CONCAT.
         BZ    MNTDA015            BRANCH IF NO
         OI    TABFLG2,TABPOCAT    SET P.O. CONCAT. SW
         B     MNTDA015            BRANCH TO GET NEXT UCB
*
***********************************************************************
*
* CLEAR UCB ADDRESS MODIFIED BIT FROM ALL EXTENTS IN DEB
*
***********************************************************************
*
MNTDA095 EQU   *
         TM    TABFLG3,X'01'   ANY VOLSER MISMATCHES ??        @ZA31668
         BZ    MNTDA097        NO, BRANCH                      @ZA31668
* ABEND JOB VOLSER NOT SAME AT RESTART AS WAS AT CHECKPOINT    @ZA31668
         MVI   RSRETCOD+1,ERR050   SET ERROR CODE 50           @ZA31668
         B     MNTDA027            GO TO XCTL                  @ZA31668
MNTDA097 EQU   *                                               @ZA31668
         BAL   WRKR3,MNTDA110      SET UP TO SPIN THRU DEB
         LTR   WRKR6,WRKR6         ANY DEB EXTENTS               YM7550
         BZ    MNTDA105            IF NOT, SKIP DEB UPDATE       YM7550
*
MNTDA100 EQU   *
         USING DEBDASD,DCBR        DEB EXTENT ADDRESSABILITY     YM7807
         NI    DEBENDHH,SWOFF      TURN OFF 'PROCESSED' SWITCH   YM7807
         LA    DCBR,16(DCBR)       GO TO NEXT XTENT
         BCT   WRKR6,MNTDA100      BRANCH IF NOT LAST XTENT
         DROP  DCBR                                              YM7807
*
MNTDA105 EQU   *
*
         MVC   TABJFCB(3),RSJFCB+164 RESTORE JFCB TTR.
MNTDA106 EQU   *                   INSTR MUST FOLLOW             Y02076
         TM    TABFLG1,TABLAST     HAS THE LAST ENTRY BEEN PROCESSED
         BO    MNTDA155            YES,BRANCH TO ENDMOD
*
         LA    WRKR4,TABENT(WRKR4) INCREMENT TO NEXT ENTRY
         B     MNTDA005            BRANCH TO INITIALIZE PTRS
*                                                                     *
***********************************************************************
*                                                                     *
*      SET UP REGISTERS NECESSARY TO SPIN THRU DEB
*                                                                     *
***********************************************************************
*                                                                     *
         USING DEBBASIC,DCBR       DEB                           YM7837
*
MNTDA110 EQU   *
         SR    WRKR6,WRKR6         CLEAR REG.
         LR    WRKR1,TABLR         SAVE REG                      Y02076
         L     DCBR,DCBDEBAD       PICK UP DEB ADDRESS           YM7837
         ICM   WRKR6,D1,DEBNMEXT   FETCH/TEST EXTENT COUNT       YM7550
         BZR   WRKR3               RETURN IF NO EXTENTS          YM7550
         LA    TABLR,DEBBASND      GET ADR-END BASIC SECT.       Y02076
         USING DEBDASD,TABLR                                     Y02076
         LA    DCBR,DEBDVMOD       LOAD ADDRESS OF 1ST XTENT
         DROP  DCBR,TABLR          DEB AND DEB EXTENT            YM7837
         LR    TABLR,WRKR1         RESTORE REG                   Y02076
         TM    TABDSORG,IS         ISAM DATA SET
         BCR   8,WRKR3             BRANCH IF NO
         LA    DCBR,16(DCBR)       ISAM DATA SET INCREMENT POINTER
         BCTR  WRKR6,0             ADJUST EXTENT COUNT BY -1     YM7550
         BR    WRKR3               RETURN
*
***********************************************************************
*
*    INCREMENT TO THE NEXT UCB ADDRESS IN THE NEW TIOT AND CHECK TO
*    SEE IF IT IS THE LAST UCB.
*
***********************************************************************
*
MNTDA115 EQU   *
         LA    WRKR5,4(WRKR5)      INCREMENT TO NEXT UCB
         LA    WRKR6,0(TIOTR,WRKR5) CURRENT UCB ADDRESS PLUS 4.
         L     DCBR,RSJFCB+160     LOAD 'END OF DD ENTRY' POINTER
         CR    DCBR,WRKR6          END OF DD ENTRY
         BCR   13,WRKR2            BR IF YES (EQU OR LOW)        A33983
MNTDA116 EQU   *
         L     UCBR,0(TIOTR,WRKR5) GET UCB ADDRESS               YM7359
         LA    UCBR,0(,UCBR)       CLEAR HI-BYTE                 YM7359
         XC    RSIOBDAD(8),RSIOBDAD CLEAR MBBCCHHR
         ST    UCBR,RSDEBUCB       UNIT ADDRESS TO DEB
         MVI   RSDEBBIN+1,ZERO     CLEAR BIN NUMBER FROM DEB IN WK AREA
         CR    DCBR,WRKR6          RESTORE CONDITION CODE        YM7331
         BR    WRKR2               RETURN
*
***********************************************************************
*
*  COMPLETE QMNGRIO PARM LIST THEN ISSUE QMNGRIO TO READ JFCB         *
*
***********************************************************************
*
MNTDA130 EQU   *
*
         LA    WRKR1,RSJFCB1       GET JFCB BUFFER ADDRESS       YM7868
         L     WRKR2,QMNPRMWA      GET ADR OF QMNGR P.L.         Y02076
         USING QMIOP,WRKR2         ADDRESS QMNGR PARAMETERS      Y02076
         ST    WRKR1,QMIRECAD      STORE JFCB READ IN ADR        YM7868
         L     WRKR1,TABNVOLS      LOAD TTR INTO REG. 0
         SLL   WRKR1,8             LEFT JUSTIFY TTR
         ST    WRKR1,QMIDSKAD      STORE TTR IN PARM LIST        Y02076
         DROP  WRKR2                                             Y02076
*
         LA    DSCNTR,RSJFCB1+4    SET VOL SER NO POINTER
         STM   WRKR4,WRKR5,RSERAS02 SAVE REG 13 & 14             YM7359
         LA    WRKR4,RSREGSAV      GET REG SAVEAREA ADDR         YM7359
*
*  READ IN JFCB
*
         QMNGRIO                   READ IN JFCB                  Y02076
         LM    WRKR4,WRKR5,RSERAS02 RESTORE REG 13 & 14          YM7359
         LTR   WRKR6,WRKR6         TEST QMNGRIO RET. CODE        Y02076
         BNZ   MNTDA140            BR IF JFCB READ ERROR         Y02076
         BR    DCBR                RETURN IF NO ERROR            Y02076
*
*             EXCP ROUTINE                                            *
*                                                                     *
MNTDA135 EQU   *
         EXCP  RSIOB               EXCP CHANNEL PROGRAM . CHANNEL
*
         WAIT  ,ECB=RSECBAD        WAIT
         TM    RSMWOFST,X'80'      MUST A DOM BE ISSUED             MCS
         BZ    TESTERR             BRANCH IF NO                     MCS
         LA    WRKR2,RSMWOFST      LOAD ADDR OF MSGID               MCS
         DOM   MSGLIST=(1)         ISSUE DOM                        MCS
         NI    RSMWOFST,X'7F'      TURN OFF DOM INDICATOR           MCS
TESTERR  EQU   *                                                    MCS
*
         TM    RSECBAD,PERMERR     I/O ERROR
         BCR   NOMIX,DCBR          RETURN IF NO ERROR            A27515
*                                                                     *
***********************************************************************
*                                                                     *
*                     ERROR RETURN CODES                              *
*                                                                     *
***********************************************************************
*                                                                     *
MNTDA140 EQU   *
         MVI   RSRETCOD+1,ERR048   UNRECOVERABLE I/O ERROR     @ZSUT222
*                                  RETURN CODE 48
         B     MNTDA027            BR TO SET UP FOR XCTL         A30003
*
***********************************************************************
*
*              TRANSFER TO NEXT MODULE
*
***********************************************************************
*
MNTDA155 EQU   *
*
         TM    RSDCBFLG,NONDAFLG   ANY TAPE DATA SETS
         BO    MNTDA160            BRANCH IF YES
*
         MVI   RSPPM+4,C'N'        XCTL TO IGC0N05B                 MCS
MNTDA160 EQU   *
*                                                                YM7890
*        AT THIS POINT, WITH ALL MOUNT REQUESTS SATISFIED, THE   YM7890
*        MEMORY CAN AGAIN BE ENABLED FOR SWAP-OUT.               YM7890
*                                                                YM7890
         SYSEVENT OKSWAP           ENABLE SWAP-OUT               YM7890
*                                                                YM7890
         ICM   WRKR1,ADDRBYTS,QMNPRMLN LENGTH OF PRM LIST + WA   Y02076
         ICM   WRKR1,HIORDER,SP253 SUBPOOL 253                   Y02076
         L     WRKR2,QMNPRMWA      GET ADR OF PARM LIST          Y02076
         FREEMAIN  R,LV=(0),A=(1)  ISSUE FREEMAIN                Y02076
         LA    WRKR6,RSPPM+8                                        MCS
         XC    RSERAS00(D40),RSERAS00 CLEAR SCRATCH SPACE        Y02076
*******************   **************   ***********   *********   ****
         LR    WRKR2,BUFR          POINT REG. 1 TO THE RESTART W/A
         LR    CTABLR,TABLR        PASS TBL ADR TO NXT LOAD      Y02049
         LR    WRKR3,BUFR          POINT REG 12 TO RS W/A        Y02049
*******************   **************   ***********   *********   ****
*
         XCTL  EPLOC=RSPPM,SF=(E,(15))                              MCS
*
         EJECT
***********************************************************************
*
*     CONSTANTS USED IN REPI/O
*
***********************************************************************
*
MOUNTMS  DC    X'00188000'         LENGTH OF MESSAGE                MCS
         DC    C'IEC403A M YYY,'   MOUNT MESSAGE
RTDESC   DC    X'14004000'         ROUTE AND DESCRIPTOR CODES       MCS
CHAIN5   DC    X'40000005'         1ST CCW FLAG AND COUNT FIELDS M4597
QMNPRMLN DC    AL3(280)                 QMNGRIO PARM LST + WA    Y02076
SP253    DC    AL1(253)                 SUBPOOL 253              Y02076
F1       DC    F'1'                     FULLWORD CONSTANT OF 1   YM7868
         DS    0F                  FULL WORD ALIGNMENT         @Y30LSRA
SCRTCH   DC    CL6'SCRTCH'         SCRATCH PACK COMPARATOR     @Y30LSRA
KMNT     DC    CL11'  MOUNT '      MOUNT                       @Y30SLRS
KDMNT    DC    CL11' DEMOUNT '     DEMOUNT                     @Y30LSRA
KACQ     DC    CL11' ACQUIRE '          ACQUIRE                @Y30LSRA
ZEROS    DC    XL6'000000000000'   NOT MOUNTED COMPARATOR      @Y30LSRA
BLANKS   DC    XL6'404040404040'   NOT MOUNTED COMPARATOR      @Y30LSRA
BUNCHFFS DC    X'FFFFFFFF'         INVALID EXT COMPARATOR      @Y30LSRA
ONEMOR   DC    H'1'                ONE                         @Y30LSRA
SIXTEEN  DC    H'16'               MAX NUMB OF EXTENTS         @Y30LSRA
ABTABLE  EQU   *-240                    BEGIN TR TABLE         @Y30LSRA
         DC    C'0123456789ABCDEF'      TRANSLATE TABLE        @Y30LSRA
MSSMSG   WTO   'IEC466I JOBNAMED,VOLSER,DDD MSS FAILURE DURING RELINQUIX
               SH CODE=NNN',DESC=4,ROUTCDE=(2,11),MF=L
MSGLENTH EQU   *                                               @Y30LSRA
ADDRBYTS EQU   7                        GETMAIN/FREEMAIN PARMS   Y02076
HIORDER  EQU   8                        HIGH ORDER BYTE          Y02076
QMWRKOFT EQU   24                       WORK AREA OFFSET         Y02076
JFCBLNGH EQU   176                      JFCB LENGTH              Y02076
MODID    DC    CL8'IGC0M05B'            MODULE IDENT.          @ZSUT222
*
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0M05B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         EJECT
         IEFQMIOP                                                Y02076
         EJECT
         IEFJESCT                                                Y02076
         EJECT
MNTTIOT  DSECT
         IEFTIOT1
         EJECT
         IEFUCBOB
         EJECT
         IHJDSTAB                                                Y02076
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSBUFSEG DS    0CL176
RSJFCB   EQU   RSBUFSEG
*
***********************************************************************
*
*                  JFCB
*
***********************************************************************
*
         IEFJFCBN                                                Y02076
         EJECT
CVT      DSECT
         CVT
         EJECT
*
*
*   TASK CONTROL BLOCK
*
*
         CNOP  0,4
MNTTCB   DSECT
TCBRBP   DS    F                       POINTER TO EXECUTING RB
TCBPIE   DS    F                       POINTER TO PROG. INTERRUPT EL.
TCBDEB   DS    F                       POINTER TO DEB QUEUE
TCBTIO   DS    F                       POINTER TO TIOT
TCBCMP   DS    F                       TASK COMPLETION CODE
TCBTRN   DS    F                       TESTRAN FIELD
TCBMSS   DS    F                       DATA BLOCK QUEUE ELEMENT POINTER
TCBPRTK  DS    CL1                     PROTECTION TAG
TCBFLGS  DS    FL5                     FLAG BYTES
TCBLMP   DS    CL1                     LIMIT PRIORITY
TCBDSP   DS    CL1                     DISPATCHING PRIORITY
TCBLLS   DS    F                       POINTER TO LOAD LIST
TCBJLB   DS    F                       POINTER TO JOBLIB DCB
TCBJSE   DS    F                       LIST OF INACTIVE PROGRAMS ADDR.
TCBGRS   DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDF   DS    CL1                     TCB IDENTIFIER FIELD
TCBFSA   DS    CL3                     POINTER TO 1ST PROB.PROG.SAVEAR
TCBTCB   DS    F                       NEXT TCB ON READY QUEUE POINTER
TCBTME   DS    F                       POINTER TO TIMER ELEMENT
         EJECT
         DCBD  DSORG=PS
         EJECT
*
*
*   DATA EXTENT BLOCK
*
         IEZDEB                                                  Y02076
*
         EJECT
         IEEVRSWA   VER=3     AOS2 VERSION OF WA
*
*    THE MESSAGE AREA USED TO WRITE-TO-OPERATOR IS IN THE WORKAREA
*    THE FOLLOWING EQUATES DEFINE THE MESSAGE AREA.
*
*                   IGGXXXXX M YYY,XXXXXX                             *
*
MSGLN    EQU   RSJFCB+90      MESSAGE LENGTH
MSGAREA  EQU   RSJFCB+94      MESSAGE NUMBER
MSGUCB   EQU   RSJFCB+108     UNIT
MSGID    EQU   RSJFCB+112     VOLUME SERIAL
*
RSJFCB1  EQU   RSJFCB+304
QMNPRMWA EQU   RSERAS00                 LOC FOR SAVE OF QMNG PL  Y02076
RSSTAT1  EQU   RSERAS01                 SAVE LOCATION            Y02076
*
*
*
         END
