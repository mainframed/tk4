         TITLE 'IGC0N05B SYSIN/SYSOUT AND D.A. POSITIONING MODULE 1'
IGC0N05B CSECT
*
*
***********************************************************************
*
*TITLE-  SYSIN/SYSOUT AND DIRECT ACCESS DATA SET POSITIONING MODULE 1
*
*FUNCTION    1.READS VSAM SSCRS FROM THE RESTART DATA SET IF THERE
*              ARE ANY, CHAINS THEM TOGETHER, LOADS THE VSAM
*              PROCESSING MODULE(IDA0C05B), TRANSFERS CONTROL T0
*              THE MODULE, AND THEN DELETES IT.
*            2.READS SUBSYSTEM SSCR RECORDS FROM THE RESTART DATA SET
*              IF THERE ARE ANY, CALLING THE SUBSYSTEM ROUTINE FOR EACH
*              ONE VIA THE IEFSSREQ MACRO. COUNTS AND BUILDS A TABLE OF
*            3.COUNTS AND BUILDS A TABLE OF UCB ADDRESSES FOR DIRECT
*              ACCESS DATA SETS.
*            4.FOR EACH DIRECT ACCESS ENTRY IN THE FORTY EIGHT BYTE
*              TABLE,THE JFCB IS READ,THE UCB TABLE INDICATES WHETHER
*              PASSWORD CHECKING HAS BEEN DONE,IF NOT,THE DATA SET
*              DSCB IS READ TO DETERMINE IF A PASSWORD CHECK IS
*              TO BE MADE. WHEN A PASSWORD CHECK IS MADE, SECLOADA
*              IS CALLED TO REQUEST THE PASSWORD FROM THE OPERATOR
*              BEFORE PROCESSING IS ALLOWED TO CONTINUE.
*              RAC DEFINED DATA SETS ARE AUTHORIZATION         @Z40RSGD
*              CHECKED AND IF THE USER IS AUTHORIZED           @Z40RSGD
*              PASSWORD CHECKING IS BYPASSED, OTHERWISE        @Z40RSGD
*              IGCMSG6C IS CALLED TO PROVIDE A MESSAGE.        @Z40RSGD
*              RACHECKS ARE BYPASSED IF JSCBPASS IS SET.       @G32DSPD
*ENTRY POINTS-
*               IGC0N05B - CAN BE ENTERED VIA XCTL FROM IGC0M05B OR
*                          IGC0L05B.
*
*
*INPUT.        REGISTER 8 - BEGINNING OF DATA SET TABLE
*              REGISTER 1 - RESTART WORKAREA
*              REGISTER 10 - RESTART WORKAREA
*
*
*
*OUTPUT-
*           NOT APPLICABLE
*
*EXTERNAL ROUTINES
*              SECLOADA - FOR PASSWORD CHECK                     YM7337
*              IGC0Q05B - FOR CHKPT D.S. SECURITY CHECK          YM7337
*              IDA0C05B - FOR VSAM SSCR PROCESSING             @Z30SSDT
*
*EXITS
*              (1) IGC0R05B - DA PROCESSING
*              (2) IGC0V05B WITH ONE OF THE FOLLOWING ERROR CODES
*                  SET IN THE RESTART WORK AREA:
*                  39 - I/O ERROR READING CHECKPOINT DATA SET
*                  73 - I/O ERROR READING JFCB OR DSCB
*                 207 - TABLE ENTRY FOR SUBSYS. DATASET NOT FOUND
*                 208 - NONZERO R/C FROM JES PROCESSING ROUTINE
*                 220 - DSCB ADDRESS CHANGED SINCE CHECKPOINT
*                 221 - PASSWORD ERROR
*                 236 - UNEXPECTED RECORD TYPE FROM CHECKPOINT D/S
*                 254 - RAC ERROR
*
* OS/VSA RELEASE 030 ADDS/DELETIONS/CHANGES
*A191666-191696                                                @ZA08277
*
* OS/VS2 RELEASE 037 ADDS/DELETIONS/CHANGES
*D191666-191696                                                @ZA12948
* APAR OZ31489 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C131840,136659,137748,137910,181166,575000,599061             @ZSUT222
*C599375,599385,599453,604901                                  @ZSUT222
*A136879,596105-596115,616200                                  @ZSUT222
* CHANGES ADDITIONS DELETIONS FOR SU 8
*A489509                                                       @ZA29067
*
* OS/VS2 SU 32 ADDS/DELETIONS/CHANGES                          @G32DSPD
*D604564,A604206-604230,A604793,A885000-910000                 @G32DSPD
*
*TABLES/WORKAREAS - SEE BELOW AND DSECT AT END
***********************************************************************
         EJECT
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
         EJECT
*
*********      ***************     **********     **********     ******
*                                                                     *
*              OFFSETS TO BE USED IN REP I/O PHASE                    *
*                                                                     *
*********      ***************     **********     **********     ******
*                                                                     *
IS       EQU   X'80'                    INDEXED SEQUENCIAL
SAVWK4R  EQU   48
PS       EQU   X'40'                    PHYSICAL SEQUENCIAL
DA       EQU   X'20'                    DIRECT ACCESS
PO       EQU   X'02'                    PARTITIONED ORGANIZATION
NULL     EQU   X'80'                    NULLFILE OR SYSCHECK
INOROUT  EQU   X'40'                    SYSIN OR SYSOUT DATA SET
DADEV    EQU   X'20'                    DA DEVICE
TPDEV    EQU   X'10'                    TAPE DEVICE
LASTENT  EQU   X'08'                    LAST ENTRY
UNITREC  EQU   X'04'                    UNIT RECORD EQUIPMENT
ERRINNSL EQU   X'80'                    ERROR IN NSL ROUTINE
NSLMTSW  EQU   X'40'                    NSL MOUNT SWITCH
NSLCOMU  EQU   X'20'                    NSL COMMUNICATION BIT
BYPASS   EQU   X'10'                    BYPASS LABEL PROCESSING
NSL      EQU   X'04'                    NON-STANDARD LABEL
SL       EQU   X'02'                    STANDARD LABEL
NL       EQU   X'01'                    NO LABEL
GTR5VOL  EQU   X'80'                    GREATER THAN 5 VOLUMES
POCONCAT EQU   X'40'                    P.O. CONCATENATED
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
NONDAFLG EQU   X'40'                    NON-DA DATA SET FLAG
NSLFLAG  EQU   X'10'                    NSL ROUTINE FLAG
TYPERST  EQU   X'80'                    IMMEDIATE RESTART
TABENT   EQU   48                       TABLE ENTRY LENGTH
WRITE    EQU   X'01'                    WRITE ON TAPE
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
SENSE    EQU   X'04'                    SENSE
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
UNLOAD   EQU   X'0F'                    REWIND AND UNLOAD
WTM      EQU   X'1F'                    WRITE TAPE MARK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
SEARCH   EQU   X'31'                    SEARCH
SRCHCNT  EQU   X'05'                    COUNT FOR SEARCH ID
TIC      EQU   X'08'                    TIC
READDA   EQU   X'06'                    READ FOR DA
LENJFCB  EQU   X'B0'                    LENGTH OF JFCB
LBLLEN   EQU   X'50'                    LENGTH OF LABEL
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR073   EQU   73                       ERROR READING DSCB     @ZSUT222
CHAIN    EQU   X'40'                    CHAINING FLAG
EXCHPGM  EQU   X'80'                    EXCP
OUTP     EQU   X'04'                    OUT OR OUTIN (DEBOPATB)  A27241
PCI      EQU   X'20'                    CHAIN SCHEDULING
ZEROM    EQU   X'00'                    CONSTANT ZERO FOR M OF DA ADDR.
WRITEDA  EQU   X'05'                    WRITE FOR DA
READKND  EQU   X'0E'                    READ KEY AND DATA
LENGTH   EQU   X'8C'                    LENGTH OF KEY AND DATA
SUBIDLN  EQU   19                       LN-1 OF SUB RTN ID IN DEB
LNGBFID  EQU   87                       LN-1 OF DEB PREFIX+BASIC+SUBRTN
*                                            ID SECTIONS
TAPEPOS  EQU   C'P'                     TAPE POS                 Y02076
NAMERS   EQU   C'V'                     RESTART MOD
SP253    EQU   253                      SUB POOL NUMBER          Y02076
UCBSIZE  EQU   4                        SIZE OF A UCB ENTRY      Y02049
ZEROBYTE EQU   0                        HIGH ORDER BYTE MASK     Y02076
PASSCHK  EQU   X'FF'                    PASSWORD CHK DONE IND    Y02049
PASSWCHK EQU   X'10'                    PASSWORD CHK MASK        Y02049
WRITECHK EQU   X'04'                    WRITE ONLY MASK          Y02049
INONLY   EQU   X'0F'                    INPUT ONLY (REVERSE TEST)Y02049
ISAMDEB  EQU   X'80'                    ISAM ACCESS METHOD FLG   Y02049
BDAMDEB  EQU   X'40'                    BDAM ACCESSMETHOD ID     YM7523
ISAMSEC  EQU   16                       ISAM DEP SECT OFFSET     Y02049
EXTLNGTH EQU   16                       EXTENT LENGTH            Y02049
ECBBGADR EQU   32                       ECB ADR OFFSET           Y02049
DCBBGADR EQU   4                        DCB ADR OFFSET           Y02049
CCW      EQU   96                       CCW OFFSET               Y02049
ERR220   EQU   220                      LABEL ADR CHANGED        Y02049
ERR221   EQU   221                      WRONG PASSWORD GIVEN     Y02049
ERR236   EQU   236                      ERROR CODE FOR UN-     @ZSUT222
*                                       EXPECTED RECORD READ FROMYM6509
*                                       CHECKPOINT DATA SET      YM6509
PASSCKID EQU   X'01'                    ENTRY FROM PASSWORD CHK  Y02049
ENDTAB   EQU   X'08'                    END OF DATA SET TABLE    Y02049
TABENTL  EQU   48                       DATA SET TAB ENTRY LENGTHY02049
ERR207   EQU   207                      SUBSYSTEM FAILURE ERR CD Y02076
ERR208   EQU   208                      SUBSYSTEM FAILURE ERR. @ZSUT222
DUMMYDS  EQU   X'80'                    DUMMY DATA SET FLAG MASK Y02076
DEBBGOFF EQU   48                       OFFSET FROM PREFIX TO UCBY02049
ECRMASK  EQU   X'FF'                    END CHK PT DATA SET ID   Y02076
SUBSYSIF EQU   X'00'                    SUBSYSTEM SSCR IDENT     Y02076
HIORDER  EQU   8                        HIGH ORDER BYTE MASK     Y02076
ADRBYTES EQU   7                        LOW ORDER 3 BYTES MASK   Y02076
DE       EQU   14                       HI THREE BYTES           Y02049
D0       EQU   0                        CONSTANT ZERO            Y02076
D1       EQU   1                        CONSTANT ONE             Y02076
D2       EQU   2                        CONSTANT TWO             Y02049
D3       EQU   3                        CONSTANT THREE           Y02076
D4       EQU   4                        CONSTANT FOUR            Y02076
D5       EQU   5                        CONSTANT FIVE            Y02076
D6       EQU   6                        CONSTANT SIX             Y02076
D7       EQU   7                        CONSTANT SEVEN           Y02076
D8       EQU   8                        CONSTANT EIGHT           Y02076
D9       EQU   9                        CONSTANT NINE            Y02076
D12      EQU   12                       CONSTANT 12              Y02049
D24      EQU   24                       CONSTANT TWENTY FOUR     Y02049
D40      EQU   40                       CONSTANT FORTY           Y02076
D44      EQU   44                       CONSTANT FORTY FOUR      Y02049
D68      EQU   68                       CONSTANT SIXTY EIGHT     Y02049
D164     EQU   164                      CONSTANT 164             Y02049
D128     EQU   128                      CONSTANT ONE TWENTY EIGHTY02049
ERR039   EQU   39                       ERROR READING SSCRS    @ZSUT222
JFCBDSN  EQU   16                       OFST JFCB DSN FR SWA RCD YM7523
DSCBCKDS EQU   X'01'                    FMT1 CHKPT D/S INDR      YM7337
LNRIDEN  EQU   2                        SHIFT CONSTANT FOR     @Z40RSGD
*                                       LENGTH RID ENTRY       @Z40RSGD
DS1RACDF EQU   X'40'                    DS1DSIND-RAC DEFINED   @Z40RSGD
SP230    EQU   230                      SUBPOOL RID TABLE      @Z40RSGD
KEY5     EQU   X'50'                    KEY RIDTABLE           @Z40RSGD
ERR254   EQU   254                      RAC ERROR              @ZSUT222
*                                                                     *
*********      ***************     **********     **********     ******
*
*
         EJECT
*
         USING DEBBASIC,DEBR            DEB                      Y02076
         USING IHADCB,DCBR              DCB
*
***********************************************************************
*
*   REGISTER CONVENTION TO BE USED
*
***********************************************************************
*
WRKR1    EQU   0                        WORK/PARM
R0       EQU   0                        REG 0                    YM7543
WRKR2    EQU   1                        WORK/PARM
R1       EQU   1                        REG 1                    YM7543
DCBR     EQU   2                        CURRENT DCB REGISTER
R2       EQU   2                        REG 2                    YM7543
BASER    EQU   3                        BASE REGISTER
DEBR     EQU   4                        CURRENT DEB REGISTER
R4       EQU   4                        REG 4                    YM7543
UCBR     EQU   5                        CURRENT UCB REGISTER
R5       EQU   5                        REG 5                    YM7543
TIOTR    EQU   6                        NEW TIOT REGISTER
R6       EQU   6                        WORK REG                 YM7523
TCBR     EQU   7                        TCB REGISTER
RETNREG  EQU   7                        VSAM READ RETURN REG     Y02076
R7       EQU   7                        WORK REG                 YM7523
TABLR    EQU   8                        START OF DCB TABL REG.
R8       EQU   8                        WORK REG                 YM7523
CTABLR   EQU   9                        CURRENT DCB IN TABL REG.
BUFR     EQU   10                       USER BUFFER AREA
RA       EQU   10                       REG 10                   YM7543
DSCNTR   EQU   11                       NUMBER OF DATA SETS
BUFADR   EQU   11                       VSAM BUFFER ADR REG      Y02076
RB       EQU   11                       WORK REG                 YM7523
WRKR3    EQU   12                       WORK REGISTER
WRKR4    EQU   13                       WORK REGISTER
RD       EQU   13                       REG 13                   YM7543
WRKR5    EQU   14                       WORK/PARM REGISTER
RE       EQU   14                       REG 14                   YM7543
WRKR6    EQU   15                       WORK/PARM REGISTER
RF       EQU   15                       REG 15                   YM7543
*
***********************************************************************
*
*
*
         EJECT
         BALR  BASER,0                  SET UP BASE REGISTER
         USING *,BASER
         B     BEGIN                    BR AROUND EYE CATCHER    Y01909
         CNOP  0,8                      ALIGN TO DBL WORD BNDRY  Y01909
         DC    CL8'IGC0N05B'            MODULE NAME            @ZSUT222
         DC    CL8'&SYSDATE'            LAST DATE SHIPPED      @ZSUT222
         DC    CL8'@ZSUT222'            LAST CODE SHIPPED      @ZSUT222
         DC    CL8'@SU83200'            SELECTABLE UNIT ID     @ZSUT222
***********************************************************************
*              TEST FOR ENTRY FROM PASSWORD PROCESSING                *
***********************************************************************
BEGIN    EQU   *                                                 Y01909
         MODESET EXTKEY=ZERO                                     Y02049
         USING TABL,CTABLR                                       Y02049
         TM    TABFLG2,TABSW            SECLOADA RETURN          Y02049
         BNZ   PASSWORD                 YES  PROCESS RESULTS     YM7523
         USING RSTWA,BUFR               RESTART WORK AREA        Y02049
         ST    TABLR,REG8SAVE           SAVE REG 8               Y02049
***********************************************************************
*               ROUTINE TO HANDLE THE PROCESSING OF VSAM SSCR         *
*               RECORDS.                                              *
***********************************************************************
VSAMCR00 EQU   *                        INSTR MUST FOLLOW        Y02076
         L     WRKR3,SSCRSIZE                                    Y02076
         STH   WRKR3,RSLNGTH1           SET BUFFER LENGTH TO 4K  Y02076
         LR    WRKR3,BUFR               BASE ADR                 Y02076
         A     WRKR3,RSBFOFST           1ST BUFFER ADR           Y02076
         ST    WRKR3,RSBUFADC           STORE ADR OF BUFFER      Y02076
         ST    WRKR3,SSCRCMPA           SAV WRK BUF ADR FOR CMP ZA00600
         XC    RSSSCR(D4),RSSSCR        ZERO ANCHOR FIELD        Y02076
***********************************************************************
*               SET SYNAD ADDRESS IN RESTART DCB                      *
***********************************************************************
         LA    WRKR3,RSBDCB             RS DCB ADR               Y02076
         USING IHADCB,WRKR3                                      Y02076
         LA    WRKR6,RPM127             SYSNAD ROUTINE ADDRESS   Y02076
         STCM  WRKR6,ADRBYTES,DCBSYNAD+D1   STORE IN RS DCB      Y02076
         DROP  WRKR3                                             Y02076
***********************************************************************
*               READ IN VSAM SSCR RECORD (0R SUB SYS SSCR)            *
***********************************************************************
         L     BUFADR,RSBUFADC          BUFFER ADDRESS           Y02076
         CLC   0(2,BUFADR),SPIEREC      TEST FOR SPIE REC        Y02049
         BE    VSAMCRX                  BR IF YES                Y02049
VSAMCR01 EQU   *                        INSTR MUST FOLLOW        Y02076
         CLC   0(2,BUFADR),SSREC        TEST FOR SS REC          Y02049
         BE    VSAMCR04                 BR IF YES                Y02049
         CLC   0(2,BUFADR),VSAMREC      TEST FOR VSAM            Y02049
         BE    VSAMCRY                  BR IF YES                Y02049
         CLC   0(2,BUFADR),ENDREC       TEST FOR END REC         Y02049
         BE    VSAMCR04                 BR IF YES               ZA00600
SSCRERR  EQU   *
         MVI   RSRETCOD+D1,ERR236       ERROR-UNEXPECTED RECORD@ZSUT222
         B     INOUT750                 GO TO ERROR EXIT RTN   @Z30SSDT
         USING SSCR,BUFADR                                       Y02076
***********************************************************************
*               UPDATE CHAIN OF VSAM SSCR'S                           *
***********************************************************************
VSAMCRY  CLC   RSSSCR(D4),ZEROWORD      1ST SSCR                 Y02076
         BNZ   VSAMCR02                 NO                       Y02076
         MVC   RSSSCR(D4),RSBUFADC      SAV ADR 1ST SSCR IN CHAINY02076
         B     VSAMCR03                 SET UP PREVIOUS ADR      Y02076
VSAMCR02 EQU   *                        INSTR MUST FOLLOW        Y02076
         L     BUFADR,RSBUFADP          PREV SSCR ADR            Y02076
         MVC   SSCRFCHN(D4),RSBUFADC    STR CUR SSCR ADR IN PREV Y02076
         DROP  BUFADR                                            Y02076
VSAMCR03 EQU   *                        INSTR MUST FOLLOW        Y02076
         MVC   RSBUFADP(D4),RSBUFADC    CURRENT BECOMES PREVIOUS Y02076
***********************************************************************
*               GET STORAGE FOR NEXT SSCR                             *
***********************************************************************
         L     WRKR1,SSCRSIZE           GET 4K BYTES             Y02076
         ICM   WRKR1,HIORDER,SBP253                              Y02076
         GETMAIN R,LV=(WRKR1)           GET STORAGE              Y02076
         ST    WRKR2,RSBUFADC           SAVE ADR OF NEW BLOCK    Y02076
         LR    BUFADR,WRKR2             OBTAIN BUFFER ADDRESS    YM6509
VSAMCRX  BAL   RETNREG,VSAMREAD         READ RECORD              Y02076
         B     VSAMCR01                 VALIDITY CHECK NEXT RCD  Y02076
***********************************************************************
*               PROCESS VSAM SSCR'S IF THERE ARE ANY                  *
***********************************************************************
VSAMCR04 EQU   *                        INSTR MUST FOLLOW        Y02076
         CLC   RSSSCR(D4),ZEROWORD      TEST ANCHOR WORD         Y02076
         BZ    VSAMCR07                 NO VSAM SSCR'S           Y02076
***********************************************************************
*               LOAD VSAM SSCR PROCESSING MODULE IDA0C05B             *
***********************************************************************
         MVC   VSAMLOAD(D8),VSAMODUL    SET UP EPLOC             Y02076
         LOAD  EPLOC=VSAMLOAD           GET MODULE               Y02076
         ST    WRKR1,VSAMODAD           SAVE ADR OF MODULE       Y02076
         MVI   VSAMODAD,ZEROBYTE                                 Y02076
         LA    WRKR4,RSREGSAV           REGISTER 13 = SAVEAREA @Z30SSDT
         L     WRKR6,VSAMODAD                                    Y02076
         LR    WRKR2,BUFR               REG 1 = ADR RSTWA        Y02076
***********************************************************************
*               BRANCH TO VSAM MODULE TO PROCESS VSAM SSCR'S          *
***********************************************************************
         BALR  WRKR5,WRKR6              IDA0C05B               @Z30SSDT
*
         ST    WRKR6,VSAMRTCD           SAVE RETURN CODE         Y02076
***********************************************************************
*               TEST VSAM PROCESSING ROUTINE RETURN CODE              *
***********************************************************************
         LTR   WRKR6,WRKR6              WERE THERE ANY ERRORS  @Z30SSDT
         BNZ   INOUT750                 YES, XCTL TO IGC0V05B  @Z30SSDT
***********************************************************************
*               FREEMAIN ANY STORAGE GOTTEN FOR VSAM SSCR'S           *
***********************************************************************
         L     WRKR2,RSSSCR             GET 1ST OF SSCR CHAIN    Y02076
         XC    RSSSCR(D4),RSSSCR        CLEAR ANCHOR FIELD       Y02076
         USING SSCR,WRKR2                                        Y02076
         L     WRKR2,SSCRFCHN           DON'T FREE RWA BUFFER  @Z30SSDT
VSAMCR05 EQU   *                        INSTR MUST FOLLOW        Y02076
         L     WRKR3,SSCRFCHN           SAVE NEXT SSCR ADR       Y02076
         LTR   WRKR2,WRKR2              IS THERE A BLOCK TO REL  Y02076
         BZ    VSAMCR06                 NO                       Y02076
         L     WRKR1,SSCRSIZE           AMOUNT TO RELEASE        Y02076
         ICM   WRKR1,HIORDER,SBP253     SUBPOOL 253              Y02076
         FREEMAIN R,LV=(WRKR1),A=(WRKR2)  RELEASE STORAGE        Y02076
         LR    WRKR2,WRKR3              NEXT SSCR BLK ADR        Y02076
         B     VSAMCR05                 RELEASE AGAIN IF REQUIREDY02076
***********************************************************************
*               DELETE VSAM SSCR PROCESSING MODULE                    *
***********************************************************************
VSAMCR06 EQU   *                        INSTR MUST FOLLOW        Y02076
         DELETE EPLOC=VSAMLOAD                                   Y02076
         L     WRKR3,TABFLG1            RELOAD WORK AREA ADDR  @Z30SSDT
***********************************************************************
*               DETERMINE IF SUBSYSTEM SSCR IS TO BE PROCESSED        *
***********************************************************************
VSAMCR07 EQU   *                        INSTR MUST FOLLOW        Y02076
         L     WRKR2,RSBUFADC           GET SSCR ADDRESS         Y02076
         CLI   SSCRID,ECRMASK           TEST FOR END CKT DATA SETY02076
         BE    INOUTX00                 NO SSCRS REL LAST BUFFERZA00600
         CLI   SSCRSSID,SUBSYSIF                                 Y02076
         BE    INOUT900                 PROCESS SUBSYSTEM SSCR   Y02076
         B     SSCRERR                  ERROR-UNEXPECTED RCD     YM6509
INOUTX00 EQU   *                        INSTR MUST FOLLOW       ZA00600
         CLC   SSCRCMPA(D4),RSBUFADC    SPACE  OUTSIDE WRK AREA ZA00600
         BE    INOUT000                 NO   CONTINUE           ZA00600
         L     WRKR1,SSCRSIZE           YES GET SIZE            ZA00600
         ICM   WRKR1,HIORDER,SBP253     SUBPOOL NO.             ZA00600
         FREEMAIN R,LV=(WRKR1),A=(WRKR2) RELEASE STORAGE        ZA00600
         EJECT                                                   YM7523
INOUT000 EQU   *                                                 Y02049
*
*        AT RESTART TIME, IF THE CHECKPOINT DATA SET IS ON TAPE,
*        THE CHECKPOINT DCB IN THE PROBLEM PROGRAM MUST BE UPDATED
*        FROM THE CHECKPOINT DCB IN THE RESTART WORK AREA
*
         TM    RSFLAG1,RSTAPE           IS CHKPT DS ON TAPE?     YM6589
         BNO   INOUT001                 NO, CONTINUE             YM6589
         L     WRKR4,RSCKDCB            POINT TO OLD CHKPT DCB   YM6589
         MVC   BLKCT(D4,WRKR4),RSBDCB+BLKCT  CORRECT BLKCT IN    YM6589
*                                       USER'S CHKPT DCB         YM6589
         EJECT
***********************************************************************
*                                                                     *
*        NOW READ IN THE FORMAT1 DSCB FOR EVERY DATA SET OPEN         *
*        AND DETERMINE ITS PROTECTION STATUS AS WELL AS WHETHER       *
*        THE DSCB REPRESENTED BY THE DEB HAS BEEN MOVED               *
*                                                                     *
***********************************************************************
INOUT001 EQU   *                                                 YM6589
         L     CTABLR,REG8SAVE          GET FIRST TAB ADR        YM7523
***                                                              YM7543
*        GET DADSM-LIKE WORK AREA FOR BOTH SECLOADA CALL         YM7543
*        AND CALL TO Q05B                                        YM7543
***                                                              YM7543
         LA    RF,RSREGSAV              GET ADDR SAVE AREA       YM7543
         STM   R2,RF,D0(RF)             SAVE REGS                YM7543
         XR    R1,R1                    PHONY PREV WORK AREA     YM7543
         IECRES GET,LV=256,A=(R1),ID=N05B,PREFIX=YES             YM7543*
                                        GET SECLOADA WORK AREA   YM7543
         USING IECEXTPR,R1              W/A ADDR                 YM7543
         MODESET EXTKEY=ZERO            RET FROM GET IS KEY=5    YM7543
         LM    R2,RF,D0(RF)             RESTORE REGS             YM7543
         MVC   WTGWTOPR(D4),WTGCODE     SET WTO FLAGS            YM7543
         ST    R1,SECSWICH              SAVE CORE ADDR           YM7543
         DROP  R1                       R1 = BLAH                YM7543
INOUT040 EQU   *                        CHECK TABS               YM7523
         L     WRKR3,TABFLG1            PTR WEG W/A              YM7523
         USING RSDSECT,WRKR3            SEG W/A ADDRESSABILITY   YM7523
         L     DCBR,TABDSORG            PTR DCB                  YM7523
         L     DEBR,DCBDEBAD            PTR DEB                  YM7523
         TM    TABFLG1,TABSYS           CHK - SUBSYS DATA SET    YM7523
         BO    INOUT060                 Y - NO DSCB              YM7523
         TM    TABFLG2,TABRSDS          CHK RESTART DCB          YM7523
         BO    INOUT060                 Y - NO DSCB CHK          YM7523
         TM    TABFLG1,TABDA            CHK DA                   YM7523
         BO    INOUT080                 Y - CHK DSCB             YM7523
INOUT060 EQU   *                        CHK NEXT ENTRY           YM7523
         TM    TABFLG1,TABLAST          CHK LAST ENTRY           YM7523
         BO    INOUT720                 Y - EXIT                 YM7523
         LA    CTABLR,TABENT(,CTABLR)   GET NEXT TAB ENTRY       YM7523
         B     INOUT040                 TRY IT                   YM7523
         EJECT
***********************************************************************
*        FOR DA THERE ARE 4 VARIATIONS:                               *
*        1. PS - THE DEB REPRESENTS 1 DATA SET ON 1 VOLUME            *
*        2. BDAM - THE DEB REPRESENTS 1 DATA SET ON N VOLUMES         *
*        3. ISAM - THE DEB REPRESENTS 1 DATA SET ON N VOLUMES AND     *
*              THE DSCB ADDR IN THE DEB IS FOR THE INDEX/PRIME FMT1   *
*              WHICHEVER COMES FIRST                                  *
*        4. PO CONCAT - THE DEB REPRESENTS N DATA SETS, EACH ON 1     *
*              VOLUME AND THE DSCB ADDR IN THE DEB IS FOR THE FIRST   *
*              DATA SET                                               *
***********************************************************************
INOUT080 EQU   *                        INIT ENTRY               YM7523
         MVI   TABFLG5,D0               DEFAULT - 1ST EXTENT FOR YM7523
*                                       DSCB ADDR CHK            YM7523
         SH    DEBR,DEBPROFF            PT DEB PREFIX            YM7523
         USING DEBPREFX,DEBR            DEB PREFIX               YM7523
         L     WRKR2,DEBXTNP            PTR DEBX                 YM7523
         L     RB,DEBXDSAB-DEBXTN(,WRKR2) PTR DSAB               YM7523
         L     WRKR2,DSABTIOT-DSAB(,RB) PTR TIOT                 YM7523
         MVC   TABJFCB,TIOEJFCB-TIOENTRY(WRKR2) DEFALT JFCB ADR  YM7523
         CLI   DEBAMTYP,ISAMDEB         CHK IF ISAM DEB          YM7523
         BE    INOUT100                 BR IF ISAM               YM7523
         CLI   DEBAMTYP,BDAMDEB         CHK IF BDAM DEB          YM7523
         BE    INOUT160                 BR IF BDAM DEB           YM7523
         TM    TABFLG2,TABPOCAT         CHK IF PO CONCAT         YM7523
         BO    INOUT200                 BR IF PO CONCAT          YM7523
***********************************************************************
*        ASSUME PS LIKE DATA SET                                      *
*              1 DATA SET ON 1 VOL                                    *
***********************************************************************
         LA    R6,D1                    1 SET OF EXTENTS         YM7523
         LA    R7,D1                    1 EXTENT TO CHK          YM7523
         LA    R8,DEBBASND              PTR TO 1ST EXTENT        YM7523
         B     INOUT300                 CONTIN                   YM7523
***********************************************************************
*        ISAM - CHK OVERFLOW,PRIME,AND INDEX FOR MULTI VOL            *
***********************************************************************
INOUT100 EQU   *                        ISAM                     YM7523
         LA    R6,D3                    3 SETS OF EXTENTS        YM7523
INOUT120 EQU   *                        ISAM NTH EXTENT          YM7523
         LA    WRKR2,D3                 GET EXTENT GROUP         YM7523
         SR    WRKR2,R6                 INDEX FOR CURRENT EXTENT YM7523
         SLL   WRKR2,2                  1 WORD PER EXTENT PTR    YM7523
         L     R8,DEBISAM-DEBPREFX(DEBR,WRKR2) ADDR OF EXTENT    YM7523
         SR    R7,R7                    CLEAR REG                YM7523
         IC    R7,DEBISAM-DEBPREFX(DEBR,WRKR2) GET NO. OF EXTNTS YM7523
         LTR   R8,R8                    CHK NO EXTENT            YM7523
         BZ    INOUT610                 CHK NEXT EXTENT          YM7523
         B     INOUT300                 CONTIN                   YM7523
***********************************************************************
*        BDAM - ALLOW FOR MULTI-VOL DATA SET                          *
***********************************************************************
INOUT160 EQU   *                        BDAM                     YM7523
         LA    R6,D1                    1 SET OF EXTENTS         YM7523
         SR    R7,R7                    CLEAR REG                YM7523
         IC    R7,DEBNMEXT              GET NO. DEXTENTS         YM7523
         LA    R8,DEBBASND              PT FIRST EXTENT          YM7523
         B     INOUT300                 CONTIN                   YM7523
***********************************************************************
*        PO CONCANTENATION - ALLOW FOR MULTIPLE DATA SETS - EACH ON A *
*              SINGLE VOLUME                                          *
***********************************************************************
INOUT200 EQU   *                        PO CONCAT                YM7523
         SR    R6,R6                    CLEAR REG                YM7523
         IC    R6,DEBAMLNG              NO. OF DDS -1            YM7523
         LA    R6,D1(,R6)               NO. OF DDS               YM7523
         LA    R7,D1                    CHK 1 EXTENT             YM7523
         LA    R8,DEBBASND              PTR 1ST EXTENT           YM7523
         B     INOUT300                 CONTIN                   YM7523
***                                                              YM7523
*        PO CONCAT - NTH EXTENT                                  YM7523
***                                                              YM7523
INOUT220 EQU   *                        PO CONCAT                YM7523
         LA    R7,D1                    1 EXTENT                 YM7523
         SR    WRKR2,WRKR2              CLEAR REG                YM7523
         IC    WRKR2,DEBAMLNG           NO. OF DDS -1            YM7848
         SR    WRKR2,R6                 CURRENT DD NO. (=-1)     YM7523
         LA    WRKR6,D2(,WRKR2)         CURRENT DD NO. (=1)      YM7523
         L     WRKR4,DEBXTNP            PTR DEB EXTENSION        YM7523
         L     RB,DEBXDSAB-DEBXTN(,WRKR4) PTR DSAB               YM7523
         B     INOUT260                 SCAN FOR CURRENT DSAB    YM7523
INOUT240 EQU   *                        SCAN DSAB                YM7523
         L     RB,DSABFCHN-DSAB(,RB)    GET NEXT DSAB            YM7523
INOUT260 EQU   *                        SCAN DSAB                YM7523
         BCT   WRKR6,INOUT240           FIND THE DSAB            YM7523
         L     WRKR4,DSABTIOT-DSAB(,RB) PTR CURRENT TIOT         YM7523
         MVC   TABJFCB,TIOEJFCB-TIOENTRY(WRKR4) SET JFCB ADDR    YM7523
*                                                                YM7523
*        NOW LOCATE THE CURRENT DEB EXTENT                       YM7523
*                                                                YM7523
         SR    R8,R8                    CLEAR REG                YM7523
         IC    R8,DEBNMEXT              NO. OF EXTENTS           YM7523
         SLL   R8,D4                    NO. EXTS * 16 = A/M SECT YM7523
         AR    R8,WRKR2                 OFFSET TO A/M BYTE       YM7523
         SR    WRKR4,WRKR4              CLEAR REG                YM7523
         IC    WRKR4,DEBBASND-DEBPREFX(DEBR,R8) NO. EXTS TO DD   YM7523
         SLL   WRKR4,D4                 NO. EXTS * 16 = EXT      YM7523
         LA    R8,DEBBASND-DEBPREFX(DEBR,WRKR4) PT TO EXTENT     YM7523
         B     INOUT300                 CONTIN                   YM7523
         EJECT
***********************************************************************
*                                                                     *
*        READ DSCB AND CHK FOR PASSWORD                               *
*              R2 = PTR DCB(USER)                                     *
*              R4 = PTR DEBPREFX                                      *
*              R6 = NO. OF EXTENT GROUPS                              *
*              R7 = NO. OF EXTENTS                                    *
*              R8 = EXTENT DESCRIPTION                                *
*              R9 = PTR TAB                                           *
*              RA = PTR RESTART WORK AREA                             *
*              RB = DSAB PTR                                          *
*              RC = PTR SEG WORK AREA                                 *
***********************************************************************
INOUT300 EQU   *                        GET DSCB                 YM7523
         L     UCBR,DEBDVMOD-DEBDVMOD(,R8) GET UCB ADDR          YM7523
         LA    UCBR,D0(,UCBR)           CLEAR HI-ORDER BYTE      YM7523
         USING MNTUCB,UCBR              UCB ADDRESSABILITY       YM7523
         TM    UCBJBNR,UCBVRDEV         CHK FOR VIO UCB          YM7523
         BO    INOUT490                 BR IF VIO                YM7523
***********************************************************************
*              DSCB IS NOW READ IN FOR CHECKING                       *
***********************************************************************
         MVC   RSDEBMOD(6),DEBDVMOD-DEBDVMOD(R8) UCB ADR TO SYS  YM7523
* DEB IN THE WORK AREA                                           YM7523
* TO CONVERT VTOC ADDR FROM TTR TO ABSOLUTE AND THEN READ FROM IT,
* DEB EXTENTS MUST COVER THE ENTIRE VOLUME.  STARTING CCHH IS
* ZERO, AND ENDING CCHH IS OBTAINED FROM THE SYSTEM DEVICE
* CHARACTERISTICS TABLE.
*
         L     WRKR6,CVTPTR             FOLLOW POINTER CHAIN     M0187
         L     WRKR6,CVTZDTAB-CVTMAP(WRKR6) ADDR CHARACTERISTICS Y02049
*                                       TABLE                    M0187
         IC    WRKR5,UCBTBYT4           PICK UP DEVITYPE BYTE    M0187
         N     WRKR5,MASK1              USE LO-ORDER 4 BITS      M0187
         IC    WRKR5,0(WRKR6,WRKR5)     GET INDEX TO TYPE ENTRY  M0187
         AR    WRKR6,WRKR5              POINT TO ENTRY           M0187
         XC    RSDEBSCC(8),RSDEBSCC     CLEAR EXTENT AREA        M0187
         MVC   RSDEBECC,0(WRKR6)        GET HI CC FROM DEVTAB    M0187
         SPACE 3
**************      ***************     ***************     ***********
*
*        GET VTOC ADDR. FROM UCB FOR READING DSCB- CONVERT TTR TO
*        MBBCCHHR.
*
**************      ***************     ***************     ***********
*
*
         L     WRKR1,SRTEFSCT      GET VTOC TTR FROM UCB.
*
*
         SRL   WRKR1,8                  RIGHT JUSTIFY.
         BCTR  WRKR1,0                  DECR R BY ONE FOR SEEK.
         SLL   WRKR1,8                  LEFT JUSTIFY.
         LA    WRKR2,RSDSCB             SAVE AREA ADDR TO REG.   YM7523
         STM   WRKR1,WRKR6,0(WRKR2)     SAVE REGISTERS 0-15.     YM7523
         LR    R6,WRKR2                 SAVE REG ACCROSS CALL    YM7523
         L     WRKR6,CVTPTR             CVT ADDRESS
         LA    WRKR2,RSDEB              LOAD DEB ADDR-WK AREA
         LA    DCBR,RSIOBDAD            LOCATION OF RESULTS.
         L     WRKR6,CVTPCNVT-CVTMAP(WRKR6) GET ADR OF CNVRT RTN Y02049
         BALR  WRKR5,WRKR6              GO TO CONVERT.
         LM    WRKR1,WRKR6,0(R6)        RESTORE REGISTERS 0-15.  YM7523
         SPACE 3
**************      ***************     ***************     ***********
*
*  BUILD CHANNEL PROGRAM TO BE USED TO READ IN DSCB.
*
*  CHN PROG- SEARCH ID-TIC-READ COUNT-SEARCH KEY EQ-TIC-READ DATA
*
**************      ***************     ***************     ***********
*
         L     WRKR2,TABJFCB-D1         GET JFCB PREFIX ADDR     YM7523
         MVC   RSDSN(44),JFCBDSN(WRKR2) SET DSN FOR SEARCH ID    YM7523
*                                       NOTE THE DSN NOT IN JFCB AREA
*                                       BECAUSE 6 CCW'S ARE NEEDED TO
*                                       READ IN THE DSCB AND ITS ADDR.
*                                       NOTE THAT THERE IS ONLY SPACE
*                                       FOR 3 CCW'S IN THE RSDSECT.
*                                       THUS THIS CHNL PROG WILL EXTEND
*                                       INTO THE JFCB AREA.
*
         XC    RSCCW1(48),RSCCW1        CLEAR CCW AREA.          YM5512
         LA    WRKR5,RSIOBDAD+3         GET ADR OF SEARCH ARG    YM5515
         ST    WRKR5,RSCCW1             ST IN SRCH CCW           YM5515
         LA    WRKR5,RSCCW1             GET TIC TO ADR           YM5515
         ST    WRKR5,RSCCW2             STORE IN TIC CCW         YM5515
         LA    WRKR5,RSCCW3             LOAD READ COUNT CCW ADDRESS.
         ST    WRKR5,RSCCW3+16          STORE ADDRESS AT TIC AFTER
*                                       SEARCH KEY EQ.
         LA    WRKR5,RSDSN              LOAD ADDR OF KEY(DSN)    YM7523
         ST    WRKR5,RSCCW3+8           STORE ADDRESS AT SEARCH KEY EQ.
         LA    WRKR5,RSDSCB             AREA DSCB TO BE READ-IN  YM7523
         ST    WRKR5,RSCCW3+24          STORE ADDRESS AT READ DATA.
         LA    WRKR5,RSRDCNT            BUFFER AREA FOR READ CNT YM7523
         ST    WRKR5,RSCCW3             BUF ADDRESS TO RD COUNT CCW
         OC    RSCCW1(48),DSCBCP        READ DSCB CHANNEL PROG   YM5515
*
*                              READ IN DSCB
*
         BAL   WRKR5,INOUT700           BAL TO EXCP RTN          YM7523
*
*
***********************************************************************
*              DSCB IS NOW BEING CHECKED                              *
***********************************************************************
         SPACE 1                                                 YM7523
***********************************************************************
*              TEST FOR CHANGE OF ADDRESS OF THE DATA SET LABEL       *
***********************************************************************
         TM    TABFLG5,D1               CHK IF DSCB TTR CHK      YM7523
         BO    INOUT420                 BR IF NO CHK             YM7523
         CLC   DEBDSCBA+D2(D5),RSRDCNT  CCHHR FIELDS MATCH       YM7523
         BE    INOUT420                 YES  RESTORE DEB ADDRESS YM7523
         MVI   RSRETCOD+D1,ERR220       LABEL MOVED SINCE CKT PT Y02049
         B     INOUT750                 SEND ERROR MSG           YM7523
INOUT420 EQU   *                        INSTR MUST FOLLOW        Y02049
         OI    TABFLG5,D1               SET DSCB NOT CHK         YM7523
***********************************************************************
*              DETERMINE IF PASSWORD CHECK IS TO BE MADE              *
***********************************************************************
         LA    WRKR2,RSDSCB             DSCB START ADDRESS       YM7523
         USING DS1FMTID,WRKR2           DSCB ADDRESSABILITY      YM7523
*   BYPASS PASSWORD CHECKING IF DATA SET IS RAC DEFINED.       @Z40RSGD
         TM    DS1DSIND,DS1RACDF        RAC DEFINED            @Z40RSGD
         BO    RACDS000                 YES-SKIP PASSWORD      @Z40RSGD
         TM    DS1DSIND,PASSWCHK        PASSWORD FLAG SET        Y02049
         BNO   INOUT500                 NO  GO TO NEXT EXTENT    YM7523
         TM    DS1DSIND,WRITECHK        WRITE ONLY FLAG SET      Y02049
         BNO   INOUT440                 NO  PASSWD CHK IS REQ    YM7523
         TM    DEBOPATB,INONLY          INPUT ONLY DATA SET      Y02049
         BZ    INOUT500                 YES  GO TO NEXT EXTENT   YM7523
         DROP  WRKR2                                             YM7337
         EJECT
***********************************************************************
*              SET UP TO DO PASSWORD VERIFICATION                     *
*                                                                     *
*        INTERFACE TO SECLOADA AS FOLLOWS:                            *
*              R1 = PTR DSAB                                          *
*              R4 = PTR FMT1 IF DA                                    *
*              R5 = PTR DEB                                           *
*              RA = 4(D/A) - HI-ORDER BYTE                            *
*              RB = PTR DATA SET NAME                                 *
*              RD = PTR DADSM TYPE W/A                                *
*              RE = 0                                                 *
*                                                                     *
*        RETURN AS FOLLOWS:                                           *
*              R1-RD RESTORED                                         *
*              RA = HI-ORDER BYTE (0) = O.K.                          *
*                   HI-ORDER BYTE (NOT = 0) = BAD                     *
***********************************************************************
INOUT440 EQU   *                        INSTR MUST FOLLOW        YM7523
         STM   R0,RF,RSREGSAV           SAVE REGS BEFORE SETUP   YM7543
         LA    R6,RSREGSAV              GET REG SAVE AREA        YM7543
         OI    TABFLG2,TABSW            IND SECLOADA CALL        YM7543
         LR    R1,RB                    R1 PTR DSAB              YM7543
         LA    R4,RSDSCB                R4 PTR DSCB              YM7543
         LA    R5,DEBBASIC              R5 PTR DEB               YM7543
         ICM   RA,HIORDER,DAIND         INDR - CALL FROM N05B    YM7543
         LA    RB,RSDSN                 RB PTR DSN               YM7543
         L     RD,SECSWICH              RD PTR DADSM-LIKE W/A    YM7543
         USING IECEXTPR,RD              SECLOADA W/A ADDR        YM7543
         IECRES LOAD,MODNM=SECMODNM,EXTPR=(RD),BRCODE=0,         YM7543*
               BRANCH=DIRECT            EXIT TO SECLOADA         YM7543
***********************************************************************
*              TEST SECLOADA RESPONSE; RIGHT PASSWORD GIVEN.          *
***********************************************************************
PASSWORD EQU   *                        INSTR MUST FOLLOW        YM7523
         MODESET EXTKEY=ZERO            ENSURE KEY 0             YM7543
         STCM  RA,HIORDER,4*RA(R6)      SAVE RET CODE            YM7543
         LM    R0,RF,D0(R6)             RESTORE REGS             YM7543
         NI    TABFLG2,X'FF'-TABSW      RESET SECLOADA CALL      YM7543
         CLI   RSREGSAV+4*RA,D0         CHK FOR PASSWORD ERROR   YM7543
         BE    INOUT500                 BR IF NO PASSWORD ERROR  YM7543
         ST    RA,TABVLID1+D2           SAV RET COD FOR PROB DET YM7543
         MVI   RSRETCOD+D1,ERR221       SET PASSWORD ERROR       YM7543
         B     INOUT750                 GO TO ERROR EXIT         YM7543
***********************************************************************
INOUT490 EQU   *                        VIO UCB                  YM7523
         OI    TABFLG5,D1               INDIC NO DSCB-DEB CHK    YM7523
         MVC   RSDSCB(LVDSCB),VDSDSCB-VDSUCB+L'JFCBDSNM(R5)      YM7337*
                                        GET VIO DSCB             YM7337
         EJECT
***********************************************************************
*        CHECK IF FORMAT1 INDICATES THAT THIS IS A CHECKPOINT         *
*        DATA SET.  IF IT DOES THEN SET UP TO CALL Q05B.              *
*                                                                     *
*        INPUT TO Q05B AS FOLLOWS:                                    *
*              R1 = 0(CHKPT D.S. CHECK)                               *
*                   4(OLD CHKPT D.S. AND THE D.S. IS NOT CHKPT)       *
*              R5 = PTR UCB                                           *
*              R9 = PTR TAB ENTRY                                     *
*              RA = PTR RESTART WORK AREA                             *
*              RE = RETURN ADDRESS                                    *
*                                                                     *
*        OUTPUT FROM Q05B AS FOLLOWS:                                 *
*              ALL REGS SAVED AND RESTORED                            *
*              DSABCKVL SET IF VOL SECURE.  Q05B XCTL TO V05B IF ERR. *
***********************************************************************
INOUT500 EQU   *                        CHK IF CHECKPOINT D.S.   YM7543
         XR    R1,R1                    Q05B CHKPT D.S. CHECK    YM7337
         LA    RF,RSDSCB                GET PTR DSCB             YM7337
         USING DS1FMTID,RF              DSCB ADDRESSABILITY      YM7337
         TM    DS1DSIND,DSCBCKDS        CHK IF IS CHKPT D.S.     YM7337
         BO    INOUT520                 GO DO CHKPT CHECK        YM7337
         LA    R1,D4                    SET INVALID CHKPT D.S.   YM7337
         TM    DSABFLG4-DSAB(RB),DSABCKDS CHK IF WAS CHKPT D/S   YM7337
         BNO   INOUT600                 BR IF NOT CHKPT D.S.     YM7337
INOUT520 EQU   *                        CHECK CURRENT STATUS     YM7337
         LA    RE,INOUT600              GET RETURN ADDR          YM7337
         L     RD,SECSWICH              ADDR O/C/E WORK AREA     YM7337
         IECRES LOAD,MODNM=COMMODNM,EXTPR=(RD),BRCODE=(14),      YM7337*
               BRANCH=DIRECT            GO CHECK SECURITY        YM7337
         DROP  RF                                                YM7337
         SPACE 3                                                 YM7543
***********************************************************************
*              PROCESS NEXT EXTENT,IF THERE IS ONE. OTHERWISE         *
*              GO BACK TO PROCESS NEXT DATA SET.                      *
***********************************************************************
INOUT600 EQU   *                        INSTR MUST FOLLOW        YM7523
         BCT   R7,INOUT620              CHK ANY MORE EXTENTS     YM7523
INOUT610 EQU   *                        NO EXTENTS LEFT          YM7523
         BCT   R6,INOUT640              CHK ANY MORE EXT GRPS    YM7523
         XC    TABFLG5,TABFLG5          CLEAR DSCB CHK FLAG      YM7523
         B     INOUT060                 END OF THIS DEB          YM7523
*                                                                YM7523
*        MORE EXTENTS TO CHK                                     YM7523
*                                                                YM7523
INOUT620 EQU   *                        MORE EXTENTS             YM7523
         LA    R8,EXTLNGTH(,R8)         PT NEXT EXTENT           YM7523
         L     WRKR2,DEBDVMOD-DEBDVMOD(,R8) GET UCB NEXT         YM7523
         LA    WRKR2,D0(,WRKR2)         CLEAR HI-ORDER BYTE      YM7523
         CR    WRKR2,UCBR               CHK SAME UCB             YM7523
         BE    INOUT600                 IF SAME - IGNORE         YM7523
         B     INOUT300                 NOT SAME THEN CHK        YM7523
*                                                                YM7523
*        MORE EXTENT GROUPS                                      YM7523
*                                                                YM7523
INOUT640 EQU   *                        MORE EXTENT GRPS         YM7523
         CLI   DEBAMTYP,ISAMDEB         CHK IF ISAM              YM7523
         BE    INOUT120                 BR IF ISAM               YM7523
         B     INOUT220                 BR PO CONCAT             YM7523
         SPACE 3
         SPACE 3
**************      ***************     ***************     ***********
*
*                    EXCP -WAIT AND CHECK FOR ERROR
*
**************      ***************     ***************     ***********
*
INOUT700 EQU   *                                                 YM7523
*
         EXCP  RSIOB                    EXCP CHANNEL PROGRAM
*
         WAIT  ,ECB=RSECBAD             WAIT FOR I/O COMP        YM7523
*
         TM    RSECBAD,PERMERR          I/O ERROR
         BCR   1,WRKR5                  RETURN IF NOT
*
**************      ***************     ***************     ***********
*
*  PERMANENT I/O ERROR WHILE READING IN JFCB OR DSCB FOR REALLOCATED
*  DATA SET.
*
**************      ***************     ***************     ***********
         MVI   RSRETCOD+1,ERR073        DSCB I/O ERROR  73     @ZSUT222
         B     INOUT750                 GO TO ERROR EXIT         YM7523
         EJECT
**************      ***************     ***************     ***********
*
*                   TRANSFER TO NEXT MODULE
*
**************      ***************     ***************     ***********
INOUT720 MVC   RSJFCB(8),NEXTMOD        NO SYSIN/SYSOUT PROC     YM7523
         TM    RSDCBFLG,NONDAFLG        ANY TAPE DS              Y02049
         BNO   INOUT730                 NO                       YM7523
         MVI   RSJFCB+D4,TAPEPOS        IGC0P05B                 Y02049
INOUT730 EQU   *                        NO TAPE                  YM7523
         NC    SECSWICH,SECSWICH        TEST FOR SECLOADA CORE   YM7523
         BZ    INOUT740                 NONE  NO RELEASE REQ     YM7523
         LA    RF,RSREGSAV              GET REG SAVE AREA        YM7543
         STM   R0,RF,D0(RF)             SAVE REGS                YM7543
         L     R1,SECSWICH              GET DADSM-LIKE W/A       YM7543
         IECRES FREE,A=(R1),PREFIX=YES  FREE DADSM-LIKE W/A      YM7543
         MODESET EXTKEY=ZERO            KEY 0                    Y02049
         LM    R0,RF,D0(RF)             RESTORE REGS             YM7543
***************     ***************     **********     **********
INOUT740 EQU   *                        INSTR MUST FOLLOW        YM7523
         LA    WRKR6,RSJFCB+8
         LR    WRKR2,BUFR               PT REG. 1 TO REST W/A
         L     TABLR,REG8SAVE           RESTORE TABL ADR         Y02049
         XC    RSERAS00(D40),RSERAS00   CLEAR SCRTCH AREA        Y02076
***************     ***************     **********     **********
*
         XCTL  EPLOC=RSJFCB,SF=(E,(15)) TRANSFER CONTROL TO NEXT MOD
***************     ***************     **********     **********
*        ERROR EXIT - TRY NOT TO DESTROY USEFUL INFO             YM7523
***************     ***************     **********     **********
INOUT750 EQU   *                        INSTR MUST FOLLOW        YM7523
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       DETECTING THE ERROR.   @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
         MVC   TABVLID2(D8),ERRMOD      SET XCTL TO V05B         YM7523
         LA    WRKR6,TABVLID2+D8        ERROR MOD ID + 8         YM7523
         LR    WRKR2,BUFR               PT REG. 1 TO REST W/A    YM7523
         L     TABLR,REG8SAVE           RESTORE TABL ADR         YM7523
         XC    RSERAS00(D40),RSERAS00   CLEAR SCRTCH AREA        YM7523
***************     ***************     **********     **********
*
         XCTL  EPLOC=TABVLID2,SF=(E,(15)) XFER CTL TO NEXT MOD   YM7523
         EJECT                                                   YM7523
***********************************************************************
*                                                                     *
*                                                                     *
*              REPOSITIONING LOGIC FOR SYSIN/SYSOUT SUBSYSTEM         *
*              DATA SETS.                                             *
*                                                                     *
*                                                                     *
***********************************************************************
INOUT900 EQU   *                        INSTR MUST FOLLOW        Y02076
         L     DSCNTR,RSBUFADC          SSCR ADDRESS             Y02076
         USING SSCR,DSCNTR              SSCR ADDRESSABILITY      Y02076
         L     CTABLR,REG8SAVE          DATA SET TABLE ADDRESS   Y02076
         USING TABL,CTABLR              ADDRESSABILITY           Y02076
***********************************************************************
*              SEARCH RESTART WORK AREA FOR CORRECT SUBSYSTEM         *
*              DATA SET DCB.                                          *
***********************************************************************
INOUT910 EQU   *                        INSTR MUST FOLLOW        Y02076
         CLC   TABDCBAD(D3),SSCRDCBA+1  CORRECT DCB ADDRESS      YM5300
         BE    INOUT930                 YES  TEST FOR DUMMY      Y02076
         TM    TABFLG1,TABLAST          END OF TABLE             YM5300
         BO    INOUT920                 YES  DCB ADR NOT FOUND   YM5300
         LA    CTABLR,TABENTL(CTABLR)   INCR TO NEXT TAB ENT     YM5300
         B     INOUT910                 TEST NEXT TABLE ENTRY    Y02076
INOUT920 EQU   *                        INSTR MUST FOLLOW        Y02076
         MVI   RSRETCOD+D1,ERR207       SET ERR0R CODE           Y02076
         B     INOUT750                 SEND ERR0R MESSAGE     @Z30SSDT
INOUT930 EQU   *                        INSTR MUST FOLLOW        Y02076
         TM    TABFLG1,TABNULL          TEST FOR DUMMY DATA SET  YM5300
         BO    VSAMCRX                  READ NEXT SSCR           YM5300
         ST    WRKR2,REG1SAVE           SAVE REGISTER ONE        Y02076
         SR    WRKR5,WRKR5                                       Y02076
         ICM   WRKR5,D7,TABDCBAD        DCB ADDRESS              Y02076
         USING IHADCB,WRKR5             DCB ADDRESSABILITY       Y02076
         ICM   WRKR5,D7,DCBDEBA         DEB ADDRESS              Y02076
         USING DEBBASIC,WRKR5           DEB ADDRESSABILITY       Y02076
         LA    WRKR5,DEBBASND           END OF DEBBASIC SECT     Y02076
         LA    WRKR5,D4(WRKR5)          ADDR OF SSIB             Y02076
         USING SSIB,WRKR5                                        Y02076
         AH    WRKR5,SSIBLEN            ADDR OF SSOB             Y02076
         USING SSOB,WRKR5               SSOB ADDRESSABILITY      Y02076
         LR    WRKR2,WRKR5                                       Y02076
         MVI   SSOBFUNC+D1,SSOBREST     SET RESTART ID IN SSOB   YM5300
         TM    RSFLAG1,HIGHOBIT         AUTOMATIC RESTART        Y02076
         BO    INOUT940                 YES                      Y02076
         MVI   SSDARESF,SSDADEFR        SET DEFERRED RS BIT SSOB Y02076
         B     INOUT945                 SET UP REGISTER 13       Y02076
INOUT940 EQU   *                        INSTR MUST FOLLOW        Y02076
         MVI   SSDARESF,SSDAAUTO        SET AUTO RS BIT IN SSOB  Y02076
INOUT945 EQU   *                        INSTR MUST FOLLOW        Y02076
         LA    WRKR4,RSREGSAV           REGISTER SAVE AREA       YM5300
         ST    WRKR2,RSERAS04           SS0B ADDR IN PARM WD     YM5300
         LA    WRKR2,RSERAS04           ADDR PARM WD IN REG1     YM5300
         MVI   RSERAS04,HIGHOBIT        SET HI ORDER BIT-PARM WD YM5300
         LA    WRKR1,SSCRDATA           GET ADR OF DATA AREA     YM5300
         ST    WRKR1,SSDABUFR           STORE IN SSOB            YM5300
***********************************************************************
*              CALL SUBSYSTEM PROCESSING ROUTINE                      *
***********************************************************************
         IEFSSREQ                                                Y02076
         L     WRKR5,RSERAS04           RESTORE REG 14           YM5300
         L     WRKR2,REG1SAVE           RESTORE REGISTER ONE     Y02076
         A     WRKR6,SSOBRETN           SUM RETURN CODES         Y02076
         BZ    VSAMCRX                  ZERO  READ NEXT SSCR     YM5300
         MVI   RSRETCOD+D1,ERR208       NONZERO SET ERROR CODE @ZSUT222
         B     INOUT750                 SEND ERROR MESSAGE     @Z30SSDT
         EJECT
***********************************************************************
*              ROUTINE TO READ VSAM AND SUBSYSTEM SSCRS               *
***********************************************************************
VSAMREAD EQU   *                        INSTR MUST FOLLOW        Y02076
         LA    RD,RSREGSAV              GET REG SAVE             YM7805
         READ  RSDECB1,SF,,(BUFADR),,MF=E                        Y02076
         CHECK RSDECB1                                           Y02076
         CLI   RSRETCOD+D1,ERR039       I/O ERRORS             @ZSUT222
         BE    INOUT750                 YES                    @ZSUT222
         BR    RETNREG                  RETURN TO CALLER         Y02076
***********************************************************************
*              VSAM READ SYNAD ROUTINE                                *
***********************************************************************
RPM127   EQU   *                        INSTR MUST FOLLOW        Y02076
         MVI   RSRETCOD+D1,ERR039       ERROR CODE             @ZSUT222
         RETURN
         EJECT                                                 @Z40RSGD
***************************************************************@Z40RSGD
*   DATA SET IS RAC DEFINED CHECK USERS AUTHORIZATION TO IT   *@Z40RSGD
*   VIA RACHECK.                                              *@Z40RSGD
*      AUTHORIZED - INDICATE IN DEBXTN AND BYPASS             *@Z40RSGD
*                   PASSWORD CHECKING                         *@Z40RSGD
*      NOT AUTHORIZED OR NOT DEFINED - LINK IGCMSG6C TO PUT   *@Z40RSGD
*                   OUT ERROR MESSAGE, TAKE ERROR EXIT.       *@Z40RSGD
*  BYPASS RACF CHECKING IF JSCBPASS IS SET.                   *@G32DSPD
***************************************************************@Z40RSGD
RACDS000 STM   RD,R2,RSREGSAV           SAVE REGISTERS         @Z40RSGD
         USING PSA,0                    PSA HARD ADDRESSING    @G32DSPD
         L     R2,PSATOLD               GET CURRENT TCB ADDR   @G32DSPD
         USING TCB,R2                   ADDRESS THE TCB        @G32DSPD
         L     R2,TCBJSCB               GET THE JSCB           @G32DSPD
         USING IEZJSCB,R2               ADDRESS THE JSCB       @G32DSPD
         L     R2,JSCBACT               GET THE ACTIVE JSCB    @G32DSPD
         TM    JSCBSWT1,JSCBPASS        RACF BYPASS SET ?      @G32DSPD
         BO    SKIPRAC                  YES SKIP RACF CHECKS   @G32DSPD
         DROP  R2                                              @G32DSPD
         MVC   RACHECK(LRACHECK),MRACHECK                      @Z40RSGD
*   ISSUE RACHECK FOR INPUT OR OUTPUT                          @Z40RSGD
         LA    R2,ACHKTUPD              ATTRIBUTE=OUTPUT       @Z40RSGD
         TM    DEBOPATB,INONLY          INPUT                  @Z40RSGD
         BNZ   RACDSOUT                 NO - OUTPUT            @Z40RSGD
         LA    R2,ACHKTRD               ATTRIBUTE=INPUT        @Z40RSGD
RACDSOUT RACHECK ENTITY=RSDSN,          RACHECK OUTPUT         @Z40RSGDX
               VOLSER=UCBVOLI,                                 @Z40RSGDX
               ATTR=(R2),                                      @Z40RSGDX
               MF=(E,RACHECK)                                  @Z40RSGD
RACDSCHK EQU   *                        CHECK RACHECK COMP     @Z40RSGD
         LTR   RF,RF                    SUCCESSFUL             @Z40RSGD
         BNZ   RACDSERR                 NO-ERROR PROCESSING    @Z40RSGD
         LR    R2,R0                    SAVE RDSID             @Z40RSGD
*   MARK DEB THAT DATASET IS RAC DEFINED.                      @Z40RSGD
         L     RF,DEBXTNP               DEB EXTENSION          @Z40RSGD
         OI    DEBXFLG1-DEBXTN(RF),DEBXDSSI SET RACF INDICATOR @Z40RSGDX
                                        FOR DATASET            @Z40RSGD
SKIPRAC  EQU   *                        JSCBPASS SAYS SKIP RACF@G32DSPD
         LM    RD,R2,RSREGSAV           RESTORE REGISTERS      @Z40RSGD
         B     INOUT500                 BYPASS PASSWORD        @Z40RSGD
         EJECT                                                 @Z40RSGD
***************************************************************@Z40RSGD
*   USER WAS NOT AUTHORIZED TO DATA SET CALL IGCMSG6C AND     *@Z40RSGD
*   TERMINATE RESTART.                                        *@Z40RSGD
***************************************************************@Z40RSGD
RACDSERR MVC   OPID,N05BID              CALLER=IGC0N05B        @Z40RSGD
         STH   RF,OPRETCOD              RETURN CODE            @Z40RSGD
         LA    RF,RSDSN                 DATA SET NAME          @Z40RSGD
         ST    RF,OPADDDSN                                     @Z40RSGD
         LA    RF,UCBVOLI               VOLSER                 @Z40RSGD
         ST    RF,OPADDVOL                                     @Z40RSGD
         LM    RD,R2,RSREGSAV           RESTORE REGS           @Z40RSGD
         LA    RF,OPID                                         @Z40RSGD
         ST    RF,OPPARM                                       @Z40RSGD
         LA    R1,OPPARM                                       @Z40RSGD
         LA    RD,RSREGSAV       LOAD SAVE AREA POINTER        @ZA29067
         LINK  EP=IGCMSG6C,             SEND MESSAGE           @Z40RSGD
         MVI   RSRETCOD+1,ERR254        RAC ERROR CODE         @ZSUT222
         B     INOUT750                 ERROR EXIT             @Z40RSGD
         EJECT                                                 @Z40RSGD
***************************************************************@Z40RSGD
*                                                             *@Z40RSGD
*                             CONSTANTS                       *@Z40RSGD
*                                                             *@Z40RSGD
***************************************************************@Z40RSGD
DSCBCP   EQU   *                                                 YM5515
         DC    X'3100000040000005'      SEARCH ID =              YM5515
         DC    X'0800000020000001'      TIC                      YM5515
         DC    X'9200000060000008' READ COUNT
         DC    X'A90000004000002C' SEARCH EQ KEY
         DC    X'0800000020000001' TIC
         DC    X'8600000000000060' READ DSCB
H36      DC    H'0036'             USED TO DECR TO DEB PREFIX.
MASK1    DC    F'15'                    MASK OF LOW-ORDER 4 BITS M0187
*                                                                     *
*                                                                     *
MVSUBID  MVC   0(0,WRKR6),0(WRKR5)      SUBRTN ID'S FROM OLD TO NEW
*                                       DEB.
*                                                                     *
NEXTMOD  DC    C'IGC0R05B'              DA POSITIONING           Y02076
ERRMOD   DC    C'IGC0V05B'              ERROR MOD                YM7523
MODID    DC    CL8'IGC0N05B'            MODULE ID              @ZSUT222
         DS    0F                       FULLWORD BASE            YM7337
SECMODNM DC    C'SECLOADA'              PASSWORD                 Y02049
         DC    VL4(SECLOADA)            VCON FOR SECLOADA        YM7337
COMMODNM DC    C'IGC0Q05B'              COMMON MOD               YM7337
         DC    VL4(IGC0Q05B)            VCON FOR Q05B            YM7337
SSCRSIZE DC    F'4096'                  SSCR RECORD SIZE         Y02049
ZEROWORD DC    F'0'                     ZEROWORD MASK            Y02076
DEBPROFF DC    H'16'                    DEB PREFIX OFFSET        Y02049
TIOTOFFS DC    H'16'                    TIOT OFFSET TO DEVICE ENTY02049
HIGHOBIT EQU   X'80'                    HIGH ORDER BIT CONSTANT  Y02049
QMNGWALN DC    AL3(280)                 PARM LIST + WA LNGTH     Y02049
SBP253   DC    AL1(253)                 SUBPOOL 253              Y02049
SBP230   DC    AL1(230)                 SUBPOOL 230              Y02049
WTGCODE  DC    X'000C0000'              WTG CODE                 Y02049
DAIND    DC    X'04'                    SECLOADA DA IND          Y02049
SSREC    DC    X'0100'                  SUBSYSTEM RECORD         Y02076
VSAMREC  DC    X'0101'                  VSAM RECORD              Y02076
SPIEREC  DC    X'0102'                  SPIE RECORD              Y02076
ENDREC   DC    X'FFFF'                  END RECORD               Y02076
ADDRBYTS EQU   7                        GETMAIN/FREEMAIN PARSM   Y02049
N05BID   DC    H'0'                     CALLER=N05B            @Z40RSGD
QMNWAOFT EQU   24                       QMNGR WA OFFSET          Y02049
JFCBLNGH EQU   176                      JFCB LENGTH              Y02049
VSAMODUL DC    C'IDA0C05B'              VSAM MODULE NAME         Y02076
MRACHECK RACHECK CLASS=CDATASET,        RACHECK PARM LIST      @Z40RSGDX
               DSTYPE=N,                                       @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACHECK EQU   *-MRACHECK                                      @Z40RSGD
CDATASET DC    AL1(7),C'DATASET'        CLASS = DATASET        @Z40RSGD
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0N05B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         EJECT
         IECDSECS MAIN,PREFX,DSAB,EXPAND=YES                     YM7523
         EJECT
         ICHACHKL                                              @Z40RSGD
         EJECT                                                   YM7523
         IEZDEB LIST=YES                                         YM7523
         EJECT
         IDDVDSCB                                                YM7337
LVDSCB   EQU   L'VDSDSCB-L'JFCBDSNM     LENGTH OF VDSCB W/O DSN  YM7337
         EJECT
         IEFQMIOP                                                Y02076
         EJECT
FORMAT1  DSECT                                                   Y02076
         IECSDSL1 (1)                                            Y02076
         EJECT
         IEFJSSIB                                                Y02076
         IEFJSSOB (DA),CONTIG=YES                                Y02076
         EJECT
         IEFJESCT                                                Y02076
         EJECT
SSCR     DSECT                                                   Y02076
SSCRID   DS    XL1                      CHECK POINT ID           Y02076
SSCRSSID DS    XL1                      SUBSYSTEM IDENT
SSCRHDRL DS    XL2                      SSCR HEADER LENGTH
SSCRFCHN DS    F                        SSCR CHAIN POINTER
SSCRFLG1 DS    XL1                      FLAG BITS
         DS    XL1                      RESERVED
SSCRDATL DS    XL2                      DATA LENGTH
SSCRDCBA DS    F                        ADDRESS OF ASSOCIATED DCB
SSCRDATA DS    0F                       SUBSYSTEM DATA
         EJECT
MNTTIOT  DSECT
         IEFTIOT1
         EJECT
MNTUCB   DSECT
         IEFUCBOB
         EJECT
         IHJDSTAB                                                Y02076
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSBUFSEG DS    0CL176
RSJFCB   EQU   RSBUFSEG
RSDSN    EQU   RSBUFSEG+24              DSN FOR SEARCH           YM7523
RSDSCB   EQU   RSDSN+44                 DSCB READ-IN AREA        YM7523
RSRDCNT  EQU   RSDSCB+96                READ COUNT AREA          YM7523
         ORG   RSCCW1                                          @Z40RSGD
*   PARAMETER LIST FOR IGCMSG6C                                @Z40RSGD
OPPARM   DS    A                        ADDRESS PARM LIST      @Z40RSGD
RACHECK  EQU   RSCCW1                   RACHECK PARM LIST      @Z40RSGD
OPID     DS    H                        MODULE IDENTIFIER      @Z40RSGD
OPRETCOD DS    H                        RETURN CODE            @Z40RSGD
OPADDDSN DS    A                        ADDRESS DATA SET NAME  @Z40RSGD
OPADDVOL DS    A                        ADDRESS VOLSER         @Z40RSGD
         EJECT
         CVT   DSECT=YES,PREFIX=YES,LIST=YES                     Y02076
CVTFIX   DSECT                                                   Y02049
CVT      EQU   CVTMAP                                            Y02049
         EJECT
*
*
*   TASK CONTROL BLOCK
*
*
         IKJTCB                                               Y02076
         EJECT
         DCBD  DSORG=PS
BLKCT    EQU   DCBBLKCT-IHADCB          DISPLACEMENT TO BLKCT IN DCB
*
*
*
         EJECT                                                 @G32DSPD
***      PSA        ***                                        @G32DSPD
         IHAPSA                                                @G32DSPD
         EJECT                                                 @G32DSPD
***      JSCB       ***                                        @G32DSPD
         IEZJSCB                                               @G32DSPD
         EJECT
         IEEVRSWA  VER=3                AOS2 VERSION OF WA
SECSWICH EQU   RSERAS02                 WORK SPACE GOTTEN IND    Y02049
REG1SAVE EQU   RSERAS00                 REGISTER 1 SAVE AREA     Y02049
RST      EQU   RSERAS01                 TIOT ADR                 Y02049
RSJF     EQU   RSERAS03                 JFCB TTR                 Y02049
SSCRCMPA EQU   RSERAS09                 1ST SSCR BUFFER ADR     ZA00600
UCBWKTAB EQU   RSERAS05                 UCB WORK TABLE ADDRESS   Y02049
UCBINFO  EQU   RSERAS08                 UCB GETMAIN INFORMATION  Y02049
*                                       AND UCB ADDRESS COMPARE  Y02049
QMNPRMWA EQU   RSPPEL                   SAVE ADR OF QMNGR P.L.   Y02049
VSAMLOAD EQU   RSERAS01                 ADR EP LOC               Y02076
VSAMODAD EQU   RSERAS03                 ADR VSAM MODULE          Y02076
VSAMRTCD EQU   RSERAS04                 VSAM MODULE RETURN CODE  Y02076
REG8SAVE EQU   RSERAS06                 CONTENTS REG 8           Y02049
RSBUFADC EQU   RSERAS08                 BUFFER ADR PTR           Y02076
RTNCDPWC EQU   RSERAS07                 CONTENTS REG 10          Y02049
SECIOBAD EQU   RSERAS02                 ADR OF IOB SECLOADA      Y02049
SECCCWAD EQU   RSERAS03                 ADR OF CCW'S SECLOADA    Y02076
RSBUFADP EQU   RSERAS05                 PREV VSAM BUF ADR        Y02076
*
         END
