         TITLE 'IGC0G95B JFCB PROCESSOR - TABLE BUILD MODULE'
IGC0G95B CSECT
*
*
*          RELEASE 23 DELETIONS/CHANGES
*          RELEASE 22 DELETIONS/CHANGES
*          RELEASE 21 DELETIONS/CHANGES
*0000                                                            S21940
*1066390600-391500                                               M0187
*1066526500,546300,621100-621200                                 A43757
*1066581400-584100,591300-592200                                 A41442
*          RELEASE 20 DELETIONS/CHANGES
*0000                                                            A33701
*          VS2-RELEASE3 CHANGES/ADDITIONS
*559800-559900                                                 @ZA02507
* APAR OZ31484 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C148460,630000,634700,639600,666160                           @ZSUT222
*A639630-639660,657500                                         @ZSUT222
*                                                                M3408
*
* STATUS CHANGE LEVEL 002
*
*THIS MODULES IS A SPLIT OF IGC0G05B IN RELEASE 20.1
*
*
*TITLE -       TABLE BUILD MODULE
*
*STATUS -      INITIAL CODE
*
*FUNCTION -    THIS MODULE IS THE SECOND HALF OF A SPLIT OF MODULE
*              IGC0G05B MADE FOR RELEASE 20.
*
*              THE JFCB ASSOCIATED WITH EACH DATA SET IS READ INTO
*              THE I/O BUFFER PROVIDED FOR EACH 48 BYTE ENTRY. JFCB
*              INFORMATION ABOUT THE DATA SET IS USED AS A BASIS
*              FOR FILLING OUT THE TABLE ENTRY. SOME INFO ABOUT THE
*              DATA SET WHICH IS PLACED IN THE TABLE ENTRY CONSISTS
*              OF: DCB ADR,DEVICE TYPE,DATA SET ORGN,NUMBER OF
*              VOLUMES,LABEL INFO,FILE SEQ NUMBER. AN INDICATOR IS SET
*              IN THE TABLE ENTRY TO FLAG AN ISAM/VSAM CI DATA SET.
*              AN INDICATOR IS ALSO SET WHEN A VAM DATA SET IS
*              ENCOUNTERED SO THAT AN ENTRY WILL BE MADE TO MODULE
*              IGC0M05B TO PROCESS IT.
*
*              FOR DATA SETS OTHER THAN IS OR DA THE VOLUME SERIAL NO.
*              OF THE VOLUME TO BE MOUNTED IS MOVED TO THE FIRST VOLID
*              POSITION IN THE TABLE ENTRY. FOR IS AND DA, UP TO FIVE
*              VOLID'S ARE PLACED IN EACH TABLE ENTRY.  IF MORE THAN 5
*              VOLUMES ARE TO BE MOUNTED, A BIT IS SET IN THE ENTRY
*              TO INDICATE THAT A JFCB EXTENSION IS TO BE READ IN A
*              SUBSEQUENT MODULE.
*
*ENTRY POINT - IGC0G95B  CSECT
*
*INPUT -       REGISTER 1 - POINTER TO THE RESTART WORKAREA (RSTWA)
*                           SEE DSECT AT END OF MODULE
*
*              REGISTER 8 - POINTER TO BEGINNING OF DATA SET INFO TAB
*
*OUTPUT -      REGISTER 8 - POINTER TO BEGINNING OF DATA SET INFO TABLE
*
*              REGISTER 1 - POINTER TO BEGINNING OF RSTWA WORKAREA
*                           (SEE DSECT AT END OF TABLE)
*
*EXTERNAL RTN- RESIDENT CONVERT (TTR TO MBBCCHAR) ROUTINE VIA A BALR
*
*EXITS -       NORMAL TO IGC0I05B VIA XCTL
*
*              ON ERROR CONDITION TO IGC0V05B VIA XCTL
*                   RET CODE = 24 - ERROR WHILE PROCESSING JFCB
*                              82 - TCAM NOT ACTIVE AT RESTART
*TABLES/WORKAREAS
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*           A  DCBTABLE,
*
*           B  BUFFER AREA,
*
*           C  SEE DSECTS AT END OF LISTING.
*
*ATTRIBUTES
*
*          A RE-ENTRANT
*          B RE-USABLE
*          C ENABLED
*          D PRIVIALEGED
*
*********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0                        WDRK/PARAMETER REGISTER
WRKR2    EQU   1                        WDRK/PARAMETER REGISTER
DCBR     EQU   2                        CURRENT DCB REGISTER
BASER    EQU   3                        BASE REGISTER
DEBR     EQU   4                        CURRENT DEB REGISTER
UCBR     EQU   5                        CURRENT UCB REGISTER
TIOTR    EQU   6                        NEW TIOT REGISTER
TCBR     EQU   7                        TCB REGISTER
TABLR    EQU   8                        BEGINNING TO DCB TABLE REG
CTABLR   EQU   9                        CURRENT ENTRY IN DCB TABLE
BUFR     EQU   10                       USER BUFFER AREA
DSCNTR   EQU   11                       WORK REGISTER
WRKR3    EQU   12                       WORK REGISTER
WRKR4    EQU   13                       WORK REGISTER
WRKR5    EQU   14                       WORK/PARAMETER REGISTER
WRKR6    EQU   15                       WORK/PARAMETER REGISTER
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
IS       EQU   X'80'                    INDEXED SEQUENCIAL
PS       EQU   X'40'                    PHYSICAL SEQUENCIAL
DA       EQU   X'20'                    DIRECT ACCESS
PO       EQU   X'02'                    PARTITIONED ORGANIZATION
DADEV    EQU   X'20'                    DA DEVICE
LASTENT  EQU   X'08'                    LAST ENTRY
AL       EQU   X'08'                    ASCII LABEL              S20038
GTR5VOL  EQU   X'80'                    GREATER THAN 5 VOLUMES
TABENT   EQU   48                       TABLE ENTRY LENGTH
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR024   EQU   24                       ERROR IN READING JFCB  @ZSUT222
TIOTBASE EQU   24
BUSY     EQU   X'80'
EXCHPGM  EQU   X'80'                    EXCP
ISORDA   EQU   IS+DA                    IS OR DA
RDBACK   EQU   X'03'                    READ BACKWARDS (DEBOPATB)
ZERO     EQU   0                        ZERO VALUE               A33701
BLANK    EQU   C' '                     BLANK CHAR               A33701
PSORPO   EQU   PS+PO                    PS OR PO
TYTAPE   EQU   X'80'                    TAPE DEVICE (UCBTBYT3)
SYSINOUT EQU   X'20'                    SYSTEM INPUT OR OUTPUT
DEBID    EQU   X'0F'                    DEB IDENTIFICATION
MAXEXT   EQU   X'CA'                    MAXIMUM NO. OF EXTENT
UNRELCC  EQU   X'42'                    UNRELATED FLAG, COMMAND CHAIN
ASCII    EQU   X'40'                    ASCII LABEL BIT IN       S20038
*                                       JFCBLTYP                 S20038
NOT      EQU   X'FF'                    MASK TO TURN OFF BITS    S20038
ERREXIT  EQU   C'V'                     RESTART EXIT LOAD ID     A26097
COMMON   EQU   X'10'                    COMMON INTERFACE         YM5512
RSTCAM   EQU   X'04'                    MASTER TCAM FLAG
TCAMMODJ EQU   C'J'                     TCAM MODULE ID
D0       EQU   0                        ZERO                     Y02076
D1       EQU   1                        ONE                      Y02076
D2       EQU   2                        TWO                      Y02076
D3       EQU   3                        THREE                    Y02076
D4       EQU   4                        FOUR                     Y02076
D5       EQU   5                        FIVE                     Y02076
D6       EQU   6                        SIX                      Y02076
D7       EQU   7                        SEVEN                    Y02076
D8       EQU   8                        EIGHT                    Y02076
D9       EQU   9                        NINE                     Y02076
D16      EQU   16                       SIXTEEN                  Y02076
D24      EQU   24                       TWENTY FOUR              Y02076
*
***********************************************************************
*
         BALR  BASER,0                  ESTABLISH ADDRESSABILITY
         USING *,BASER                  ESTABLISH BASE REGISTER
         B     BEGIN               BRANCH AROUND EYE CATCHER     Y01909
         CNOP  0,8                 ALIGN TO A DBL WORD BOUNDARY  Y01909
         DC    CL8'IGC0G95B'       MODULE NAME                 @ZSUT222
         DC    CL8'&SYSDATE'       DATE LAST SHIPPED           @ZSUT222
         DC    CL8'@ZSUT222'       LAST CODE SHIPPED           @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
         USING IHADCB,DCBR
         USING UCBOB,UCBR
         USING RSDSECT,TIOTR                                     Y02076
         USING DEBBASIC,DEBR                                     Y02076
         USING TCB,TCBR
         USING TABL,CTABLR
         USING RSTWA,BUFR
*
         LR    BUFR,WRKR2               GET WORK AREA (RESTART) ADDR
*
         L     WRKR2,RSWAOFST           OFFSET TO REPI/O AREA
         LA    TABLR,0(WRKR2,BUFR)      POINT TO REPI/O AREA
*
         L     TCBR,RSTCBAD             GET USER TCB
         LA    WRKR4,RSREGSAV           REG13 PTS TO SAVAREA     Y02076
*
         L     DEBR,RSINT               GET 1ST DEB ADDR         A28676
         MVC   RSPPM(8),NORMALXT        SET UP XCTL LIST         A26097
         USING CVTMAP,WRKR6             ADDRESS CVT              Y02076
         L     WRKR6,ADRCVT(D0,D0)      GET CVT PTR              Y02076
         L     WRKR6,CVTXAPG            GET ADR APPEND VEC TBL   Y02076
         DROP  WRKR6                                             Y02076
         ICM   WRKR6,HIORDER,EXTSCALE   SET EXTENT SCALE         Y02076
         LR    CTABLR,TABLR             LOAD TBL PTR REG         Y02076
         LR    WRKR5,WRKR3              GET NO. OF ENTRIES       Y02076
REPDCB09 EQU   *                        INIT. DEB/DCB/IOB        Y02076
         BCTR  DSCNTR,0                 REDUCE D/S COUNT BY 1    Y02076
         L     TIOTR,TABSEGAD-1         GET CURRENT BUFF SEG     Y02076
         ST    TCBR,RSDEBTCB            STORE TCB ADR            Y02076
         LA    WRKR1,RSDCBREP           GET DCB ADR              Y02076
         ST    WRKR1,RSDEBDCB           ST DCB ADR IN DEB        Y02076
         ST    WRKR1,RSIOBDCB           ST DCB ADR IN IOB        Y02076
         ST    WRKR6,RSDEBAPP           ST ADR APP VECT TBL      Y02076
         MVI   RSDEBID,DEBID            SET DEB ID               Y02076
         MVC   RSDEBNTR(2),MAXTRKNO     MAX NO. OF TRKS          Y02076
         MVI   RSDEBUSR,NUMEXTS         SET NO. EXTS=1           Y02076
         LA    WRKR1,RSDEB              GET DEB ADR              Y02076
         ST    WRKR1,RSDCBDEB           SET DEB ADR IN DCB       Y02076
         XC    RSIOBFG1(4),RSIOBFG1     CLEAR IOB 1ST WORD       Y02076
         MVI   RSIOBFG1,UNRELCC         SET UNRELATED FLG IN IOB Y02076
         LA    WRKR1,RSECBAD            GET ECB FOR IOB          Y02076
         ST    WRKR1,RSIOBECB           STORE IN IOB             Y02076
         LA    WRKR1,RSCCWLST           GET ADR OF CCWLIST       Y02076
         ST    WRKR1,RSIOBCPA           STORE IN IOB             Y02076
         LA    WRKR1,RSIOBDAD+3         GET ADR OF SRCH ARG      Y02076
         ST    WRKR1,RSCCW1             STORE IN SRCH CCW        Y02076
         LA    WRKR1,RSCCW1             GET ADR OF SRCH CCW      Y02076
         ST    WRKR1,RSCCW2             STORE IN TIC CCW         Y02076
         LA    WRKR1,RSBUFSEG           GET BUFF SEG ADR         Y02076
         ST    WRKR1,RSCCW3             STORE IN READ CCW        Y02076
         OC    RSCCWLST(24),CCWLIST     SET CONSTANTS IN CP      Y02076
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TO NXT ENTRY   Y02076
         LTR   DSCNTR,DSCNTR            TEST FOR ZERO            Y02076
         BZ    REPDCB0A                 YES-BRANCH               Y02076
         BCT   WRKR5,REPDCB09           RETURN FOR NEXT ENTRY    Y02076
***********************************************************************
*   GET SPACE REQUIRED FOR QMNGRIO PARAMETER LIST AND WORK AREA AND   *
*   INITIALIZE IT.  QMNGRIO IS USED FOR READING IN THE JFCB FROM      *
*   THE SCHEDULER WORK AREA (SWA) FOR EACH DATA SET.                  *
***********************************************************************
REPDCB0A EQU   *                        SET UP FOR QMNGRIO       Y02076
         ICM   WRKR1,ADDRBYTS,QMNGWALN  WA + PRM LST LNGTH IN R0 Y02076
         ICM   WRKR1,HIORDER,SP253      SUBPOOL 253              Y02076
         GETMAIN  R,LV=(0)              ISSUE GETMAIN            Y02076
         USING QMIOP,WRKR2                                       Y02076
         XC    QMITCBAD(D24),QMITCBAD   CLEAR PARAMETER LIST     Y02076
         LA    WRKR1,QMWAOFST           GET OFFSET TO WRK AREA   Y02076
         AR    WRKR1,WRKR2              CALC ADR OF WRK AREA     Y02076
         ST    WRKR1,QMIWRKAD           STO WRK AREA ADR IN P.L  Y02076
         ST    TCBR,QMITCBAD            STORE TCB ADR IN P.LIST  Y02076
         LA    WRKR1,JFCBLNTH           GET JFCB LENGTH          Y02076
         STH   WRKR1,QMIRECL            STO RECORD LNGTH IN P.L  Y02076
         MVI   QMIFLAGS,QMIOREAD        SET READ FUNCTION        Y02076
         ST    WRKR2,QMNPRMWA           SAVE QMNGRIO P LST ADR   Y02076
***********************************************************************
*
************        MAIN READ/PROCESS ROUTINE   ***********************
*
***********************************************************************
*
*    THIS ROUTINE READS INTO THE PREASSIGNED WORKAREAS FOR EACH       *
*    DATA SET, THE JFCB ASSOCIATED WITH THE DATA SET.  PRIOR TO       *
*    THIS EACH DATA SET HAS BEEN ASSIGNED A SEGMENT OF BUFFER INTO    *
*    WHICH THE JFCB IS TO BE READ.                                    *
*     AFTER THE JFCB                                                  *
*    HAS BEEN READ THE INFORMATION WHICH IT CONTAINS IS PLACED IN     *
*    THE TABEL ENTRY WHICH CORRESPONDS TO IT.                         *
*
***********************************************************************
*
         LR    CTABLR,TABLR             INIT. TO FIRST ENTRY
REPDCB10 EQU   *
         TM    TABFLG1,TABSYS           IS THIS A SUB SYSTEM DS? YM7529
         BO    REPDCB48                 YES, BYPASS PROCESSING   YM7529
         L     TIOTR,TABSEGAD-D1        GET WORK AREA            Y02076
         LA    TIOTR,0(TIOTR)           CLEAR HI ORDER BYTE      Y02076
         L     WRKR2,QMNPRMWA           GET ADR OF QMNGR P.L.    Y02076
         LA    WRKR1,RSJFCB             GET JFCB READ IN ADDR    Y02076
         ST    WRKR1,QMIRECAD           STORE IN QMNGR PARM LIST Y02076
         L     WRKR1,TABJFCB-D1         GET TTR ADR OF JFCB      Y02076
         SLL   WRKR1,HIORDER            CLEAR LO ORDER BYTE      Y02076
         ST    WRKR1,QMIDSKAD           SVA ADR INTO P.L.        Y02076
         QMNGRIO                        ISSUE QMNGRIO-READ JFCB  Y02076
         LTR   WRKR6,WRKR6              TEST RETURN CODE         Y02076
         BNZ   REPDCB56                 BR TO SET ERR CODE       Y02076
***********************************************************************
*   JFCB SUCCESSFULLY READ IN - MOVE APPROPRIATE FIELDS TO TABL ENTRY *
***********************************************************************
         CLC   JFCBDSNM(8),NULLFILE     DUMMY DATA SET
         BE    REPDCB44                 YES BRANCH
*
         L     DCBR,TABDCBAD-1          GET ENTRY DCB
         L     DEBR,DCBDEBAD       GET DEB ADDRESS               Y02049
         LR    WRKR3,DEBR          SAVE DEB ADDR FOR CALC        Y02049
         LA    WRKR2,DEBPRFLN      GET LENGTH OF DEB PREFIX      Y02049
         SR    WRKR3,WRKR2         POINT TO DEB PREFIX           Y02049
         USING DEBPREFX,WRKR3                                    Y02049
         L     WRKR2,DEBXTNP       GET POINTER TO DEB EXTENSION  Y02049
         USING DEBXTN,WRKR2                                      Y02049
         DROP  WRKR3                                             Y02049
         MVC   TABDSORG(1),DEBXDSO1     GET DSORG FROM DEB       Y02049
         TM    TABFLG1,TABTCAM          Q - TCAM D/S
         BZ    REPDCB18                 NO, SKIP TCAM PROCESSING
         MVC   TABVLID1(8),JFCBDSNM     SAVE TCAM QNAME
         B     REPDCB48                 BYPASS NONTCAM PROCESSING
REPDCB18 EQU   *
         L     TCBR,RSTCBAD             GET TCB ADDR             YM7042
         L     TCBR,TCBTIO              GET NEW TIOT ADDR        YM7042
         AH    TCBR,DCBTIOT             POINT TO DD ENTRY        YM7042
         L     UCBR,TIOESTTB-TIOENTRY(,TCBR)                     YM7042
*                                 GET FIRST UCB FROM TIOT        YM7042
         LA    UCBR,D0(,UCBR)     ZERO OUT HI BYTE               YM7529
*
         TM    DEBXMCF1,DCBMRECP        EXCP USED?               Y02049
         BZ    REPDCB21                 NO, GO CHECK DSORG       A26097
         TM    DEBXMCF1,DCBMRCI         COMMON INTERFACE PRESENT Y02049
         BO    REPDCB21                 YES, GO CHECK DSORG      A26097
         MVC   TABDSORG(1),JFCDSORG     GET DSORG FROM JFCB      A26097
         DROP  WRKR2                                             Y02049
*
***********************************************************************
*
******** NOTE THAT ISAM DATA SETS HAVE NON-STANDARD DEBS SO THEY
*        REQUIRE ADDING 16 BYTES TO GET THE UCB ADDRESS               *
*
***********************************************************************
*
REPDCB21 EQU   *                                                 A26097
*
         TM    TABDSORG,IS              IS DSORG ISAM?           A26097
         BC    12,REPDCB27              NO - BRANCH
*
* FOR AN ISAM DATA SET CHECK TO SEE IF OTHER THAN THE FIRST
* DD CARD (THREE POSSIBLE) HAVE BEEN SPECIFIED AS DUMMY.
*
         SR    WRKR2,WRKR2              CLEAR WORK REG           YM7042
REPDC23A EQU   *                                                 A33701
         IC    WRKR2,0(TCBR)            GET ENTRY LENGTH         YM7042
         AR    TCBR,WRKR2               POINT TO NEXT ENTRY      YM7042
         CLI   0(TCBR),ZERO             Q-END OF TIOT            A33701
         BE    REPDC25A                 IF YES, BR               A33701
         CLI   4(TCBR),BLANK            Q-BLANK DD NAME          A33701
         BNE   REPDC25A                 IF NOT, BR               A33701
         OC    16(4,TCBR),16(TCBR)      Q-DUMMY ENTRY            A33701
         BZ    REPDCB44                 IF YES, GO SET NULL IND  A33701
         B     REPDC23A                 LOOP BACK                A33701
REPDC25A EQU   *                                                 A33701
REPDCB27 EQU   *
*
         TM    UCBTBYT3,TYTAPE          MAGNETIC TAPE DEVICE
         BO    REPDCB26                 YES BRANCH
*
         TM    UCBTBYT3,DADEV           DIRECT ACCESS DEVICE
         BZ    REPDCB46                 NO BRANCH
**********************************************************************
*   DETERMINE IF ENTRY IS FOR A VAM DATA SET - IF SO, SET FLAGS
*   FOR FORCING AN ENTRY TO IGC0M05B AND BYPASS UNNECESSARY
*   DA PROCESSING                                                Y02076
**********************************************************************
         LR    WRKR2,DEBR               CALC ADDR OF DEB PREFIX  Y02076
         LA    WRKR1,DEBPRFLN           GET LENGTH OF DEB PREFIX Y02076
         SR    WRKR2,WRKR1              WRKR2 PTS TO DEB PREFIX  Y02076
         USING DEBPREFX,WRKR2                                    Y02076
         L     WRKR2,DEBXTNP            GET DEB EXTENTION PTR    Y02076
         DROP  WRKR2                                             Y02076
         USING DEBXTN,WRKR2                                      Y02076
         L     WRKR2,DEBXDSAB           GET DSAB POINTER         Y02076
         DROP  WRKR2                                             Y02076
         USING DSAB,WRKR2                                        Y02076
         TM    DSABFLG3,DSABVAM         TEST FOR VAM             Y02076
         BZ    REPDC27A                 BRANCH IF NOT VAM        Y02076
         OI    TABFLG2,TABVIODS         SET VIO IN TABL ENTRY    Y02076
         DROP  WRKR2                                             Y02076
REPDC27A EQU   *                        INSTR MUST FOLLOW        Y02076
         OI    TABFLG1,TABDA            SET DA FLAG
REPDC27B EQU   *                        INSTR MUST FOLLOW        Y02076
         LA    TCBR,1                   LOAD TCBR
         TM    TABDSORG,PS              IS DSORG PS?             A26097
         BZ    REPDCB28                 NO - BRANCH
*
         SR    WRKR2,WRKR2              CLEAR REG 1
         IC    WRKR2,DEBNMEXT           GET NUMBER OF EXTENTS
         SLL   WRKR2,D4                 NUMBER X SIXTEEN
         LA    WRKR5,DEBBASND           ADR OF DEBBASIC END      Y02076
         AR    WRKR2,WRKR5              ADR OF ACCESS METH SECT  Y02076
         USING DEBACSMD,WRKR2                                    Y02076
         IC    TCBR,DEBVOLSQ+D1         GET VOLUME SEQ NUMBER    Y02076
         DROP  WRKR2                                             Y02076
         B     REPDCB28                 BRANCH TO GET VOL SER NUMBER
*
REPDCB26 EQU   *
*
         OI    TABFLG1,TABTAPE          SET TAPE FLAG ON
         LA    WRKR5,DEBBASND           ADR OF DEBBASIC END      Y02076
         LA    WRKR5,D4(WRKR5)          INDEX PAST MAG TPE SECT  YM5980
         USING DEBACSMD,WRKR5                                    Y02076
         SR    TCBR,TCBR                CLEAR REGISTER           Y02076
         IC    TCBR,DEBVOLSQ+D1         TAPE VOLUME SEQ NUMBER   Y02076
         DROP  WRKR5                                             Y02076
*
         MVC   TABTPLBL(1),JFCBLTYP     SAVE LABEL INFORMATION
*
         NI    TABTPLBL,NOT-AL          TURN OFF BIT 4 OF        S20038
*                                       TABTPLBL IF              S20038
*                                            SUL IS SPECIFIED SO NOT TO
*                                            CONFUSE WITH AL BIT
         TM    JFCBLTYP,ASCII           IS ASCII LABEL SPECIFIED S20038
         BZ    REPDCB29                 BRANCH IF NO TO GET FILE S20038
*                                       SEQ N                    S20038
*
         MVI   TABTPLBL,AL              SET AL BIT ON IN TABLE   S20038
*
REPDCB29 EQU   *                                                 S20038
*
         MVC   TABFLG5(1),JFCBFLSQ+1    LOGICAL FILE SEQNO.     OX01653
         MVC   TABFSQNO(1),JFCBFSEQ     PHYS SEQ NO. ON REEL    OX01653
*
REPDCB28 EQU   *
*
         MVC   TABVLID1(30),JFCBVOLS    5 POSSIBLE VOL SERIAL NUMBERS
         MVC   TABNVOLS(1),JFCBNVOL     TOTAL VOLUMES
         TM    TABDSORG,ISORDA          TEST DATA SET TYPE       A43757
         BZ    REPDCB2A                 CONTINUE IF NOT IS OR DA A43757
         CLI   JFCBNVOL,D5              GREATER THAN 5 VOLS    @ZA02507
         BNH   REPDCB48                 BRANCH IF NOT          @ZA02507
         OC    JFCBEXAD,JFCBEXAD        TEST JFCBX ADDRESS       A43757
         BZ    REPDCB48            SKIP IF NO JFCBX              A43757
         EX    0,SAVEXTTR               SAVE EXTENSION TTR       A43757
         OI    TABFLG2,TABG5V           SET MORE-THAN-5-VOLS     A43757
*                                       FLAG                     A43757
         B     REPDCB48                 FINISHED THIS DATA SET   A43757
*
REPDCB2A EQU   *                                                 A43757
*
         CH    TCBR,FIVE                VOL SEQ NO. GT 5         A26097
         BH    REPDCB50                 YES BRANCH
*
***********************************************************************
*
*    AT THIS TIME FOR SEQ. DATA SETS CORRECT SERIAL IS IN FIRST FIVE
*    NUMBERS LISTED... MUST MOVE CORRECT SERIAL TO TOP OF LIST.......
*
***********************************************************************
*
         LR    WRKR3,DEBR          GET DEB ADDRESS FOR CALC      Y02049
         LA    WRKR2,DEBPRFLN      GET LENGTH OF DEB PREFIX      Y02049
         SR    WRKR3,WRKR2         POINT TO DEB PREFIX           Y02049
         USING DEBPREFX,WRKR3                                    Y02049
         L     WRKR2,DEBXTNP       GET ADDR OF DEB EXTENSION     Y02049
         USING DEBXTN,WRKR2                                      Y02049
         DROP  WRKR3                                             Y02049
         TM    DEBXMCF1,DCBMRECP   EXCP USED?                    Y02049
         BO    REPDCB34                 YES BRANCH
*
         TM    TABDSORG,PSORPO          SEQUENTIAL OR PO ORGN
         BZ    REPDCB48                 NO, BRANCH
*
REPDCB34 EQU   *
*
         BCTR  TCBR,0                   REDUCE VOL SEQ NO. FOR   A41442
*                                       OFFSET COMPUTATION
         MH    TCBR,SIX                 OFFSET TO SERIAL NUMBERS
         LA    TCBR,TABVLID1(TCBR)      CORRECT SERIAL PLUS SIX
*
*    AT THIS POINT TCBR SHOULD POINT TO CURRECT SERIAL NUMBER
*
         MVC   TABVLID1(6),0(TCBR)      CORRECT SERIAL TO TOP OF LIST
SAVVOL1  MVC   TABVLID3(6),JFCBVOLS     SAVE 1ST SER FOR UCB     A41442
         B     REPDCB48                 BRANCH TO GET NEXT ENTRY
*
REPDCB44 EQU   *
*
         OI    TABFLG1,TABNULL          NULLFILE/NONPROCESS FLAG Y02076
***********************************************************************
*   IF ISAM/VSAM(CI) DATA SET WAS MADE DUMMY AT RESTART - SET
*    TABFLG3 WITH X'20' BIT                                      Y02076
***********************************************************************
         L     DCBR,TABDCBAD-D1         GET DUMMY DS DCB ADR     Y02076
         L     DEBR,DCBDEBAD            GET DUMMY DS DEB ADR     Y02076
         LR    WRKR2,DEBR               CALC ADR OF DEB PREFIX   Y02076
         LA    WRKR1,DEBPRFLN           GET DEB PREFIX LENGTH    Y02076
         SR    WRKR2,WRKR1              WRKR2 PTS TO PREFIX      Y02076
         USING DEBPREFX,WRKR2                                    Y02076
         CLI   DEBAMTYP,ISAMCODE        IS IT AN ISAM DATA SET   Y02076
         BNE   REPDCB48                 IF NOT-GET NEXT ENTRY    Y02076
         CLI   DEBEXSCL,SCALEQZO        IS DEBEXSCL=0            Y02076
         BNE   REPDCB48                 IF NOT-GET NEXT ENTRY    Y02076
         TM    DEBFLGS1,DEBCINDI        IS CI BIT ON             Y02076
         BZ    REPDCB48                 BRANCH IF NOT CI         Y02076
         OI    TABFLG2,TABCIDS          SET IS/VS CI DUMMY CODE  Y02076
         DROP  WRKR2                                             Y02076
         B     REPDCB48                 BRANCH TO GET NEXT ENTRY
*
REPDCB46 EQU   *
*
         OI    TABFLG1,TABUR            UNIT RECORD OR OTHER FLAG BIT
*
REPDCB48 EQU   *
*
         TM    D4(CTABLR),LASTENT       LAST ENTRY IN TBLE       Y02076
         BO    REPDCBNM                 BRANCH IF YES            Y02076
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TO NEXT ENTRY
         B     REPDCB10                 BR TO PROCESS NEXT ENTRY Y02076
*
REPDCB50 EQU   *
*
         OI    TABFLG2,TABG5V           SET ON VOL GREATER THAN 5 FLAG
         STH   TCBR,TABVLID5            SAVE ADJUSTED VOL SEQ NO
         EX    0,SAVVOL1                SAVE 1ST SER FOR UCB     A41442
*
         MVC   TABVLID5+3(3),TABJFCB    SAVE JFCB TTR IN TABVLID5
*
REPDCB54 EQU   *
*
SAVEXTTR MVC   TABJFCB(3),JFCBEXAD MOVE IN JFCBX TTR             A33983
         B     REPDCB48                 BRANCH TO GET NEXT ENTRY
*
*     MUST TERMINATE REPI/O DUE TO UNRECOVERABLE ERRORS IN PROCESSING
*
REPDCB56 EQU   *
*
         MVI   RSRETCOD+1,ERR024        SET JFCB READ ERROR    @ZSUT222
*
         MVI   RSPPM+4,ERREXIT     SET RESTART EXIT LOAD ID      A33983
         B     REPDCBER                 GO XCTL                @ZSUT222
REPDCBNM EQU   *
         TM    RSFLAG2,RSTCAM           Q - ANY TCAM D/S'S
         BZ    REPDCBEX                 NO, GO XCTL TO IGC0I05B
         MVI   RSPPM+4,TCAMMODJ         SETUP TO XCTL TO IGC0J05B
         L    WRKR6,CVTPTR
         L    WRKR6,AVTCVTPT(WRKR6)     GET TAM ADDR            S21940
         LTR  WRKR6,WRKR6               IS TAM ACTIVE           S21940
         BNZ  REPDCBEX                  YES, BRANCH             S21940
         MVI  RSRETCOD+1,ERR082         NO, SET UP FOR ERR     @ZSUT222
         MVI  RSPPM+4,ERREXIT           TCAM NOT IN SYSTEM      S21940
REPDCBER EQU   *                                               @ZSUT222
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       DETECTING ERROR        @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
REPDCBEX EQU   *
         ICM   WRKR1,ADDRBYTS,QMNGWALN  SET UP FREEMAIN          Y02076
         ICM   WRKR1,HIORDER,SP253      SUBPOOL 253              Y02076
         L     WRKR2,QMNPRMWA           ADR OF P.L. + WA         Y02076
         FREEMAIN  R,LV=(0),A=(1)                                Y02076
         LA    WRKR6,RSPPM+8            SET UP FOR XCTL          A26097
*********************************************************************
         LR    WRKR2,BUFR               POINT REG 1 TO THE RESTART W/A
*********************************************************************
*
***********************************************************************
*
         XCTL  EPLOC=RSPPM,SF=(E,(15))                           A26097
*
*********************************************************************
*
*     CONSTANTS USED IN REPI/O
*
NULLFILE DC    CL8'NULLFILE'            NULLFILE
NORMALXT DC    C'IGC0I05B'              TABLE COMPLETION LOAD
MODID    DC    CL8'IGC0G95B'            MODULE ID              @ZSUT222
*
*     CHANNEL PROGRAM USED BY REPI/O
*
         DS    0H                                                A26097
CCWLIST  DC    X'3100000040000005'      SEARCH
         DC    X'08'                    TIC
CONSTANT DC    X'00000000067FFF'        SPACE-SAVING CONSTANTS   A26097
         DC    X'06000000000000B0'      READ
QMNGWALN DC    AL3(280)                 256(WA) + 24(P.L.)       Y02076
SP253    DC    AL1(253)                 SUBPOOL 253              Y02076
EXTSCALE DC    X'04'                    EXTENT SCALE             Y02076
HIORDER  EQU   8                        GETMAIN PARAMS           Y02076
ADDRBYTS EQU   7                        LOW ORDER BYTES          Y02076
QMWAOFST EQU   24                       WORK AREA OFFSET         Y02076
JFCBLNTH EQU   176                      JFCB LENGTH              Y02076
SCALEQZO EQU   0                        FOR IS/VS(CI) DUMMY TST  Y02076
ISAMCODE EQU   X'80'                    ISAM CODE IN DEBAMTYP    Y02076
DEBPRFLN EQU   16                       DEB PREFIX LENGTH        Y02076
DADSFLG  EQU   X'80'                    DA DATA SET FLAG         Y02076
*
AVTCVTPT EQU    240                     OFFSET INTO CVT OF TCAM
*                                           AVT PTR
ADRCVT   EQU   16                       ADDRES OF CVT            Y02076
NUMEXTS  EQU   X'01'                    NUMBER OF EXTENTS        Y02076
ERR082   EQU   82                       TCAM NOT IN SYSTEM     @ZSUT222
FIVE     EQU   CCWLIST+6                CONSTANT OF 5            A26097
SIX      EQU   CONSTANT+3               CONSTANT OF 6            A26097
MAXTRKNO EQU   CONSTANT+5               MAXIMUM NO. OF TRACKS    A26097
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0G95B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         EJECT
         IEEVRSWA VER=3                 USE AOS2 VERSION OF WA
QMNPRMWA EQU   RSERAS00                 SAVE ADR FOR QMNGRIO P.L Y02076
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSBUFSEG DS    0CL176
RSJFCB   EQU   RSBUFSEG
         EJECT
         IEFJFCBN                                                Y02076
         EJECT
         IEFQMIOP                                                Y02076
         EJECT
         IEFJESCT                                                Y02076
         EJECT
CVT      DSECT
         CVT
         EJECT
*
*
*   TASK CONTROL BLOCK
*
*
         CNOP  0,4
TCB      DSECT
TCBRBP   DS    F                       POINTER TO EXECUTING RB
TCBPIE   DS    F                       POINTER TO PROG. INTERRUPT EL.
TCBDEB   DS    F                       POINTER TO DEB QUEUE
TCBTIO   DS    F                       POINTER TO TIOT
TCBCMP   DS    F                       TASK COMPLETION CODE
TCBTRN   DS    F                       TESTRAN FIELD
TCBMSS   DS    F                       DATA BLOCK QUEUE ELEMENT POINTER
TCBPRTK  DS    CL1                     PROTECTION TAG
TCBFLGS  DS    FL5                     FLAG BYTES
TCBLMP   DS    CL1                     LIMIT PRIORITY
TCBDSP   DS    CL1                     DISPATCHING PRIORITY
TCBLLS   DS    F                       POINTER TO LOAD LIST
TCBJLB   DS    F                       POINTER TO JOBLIB DCB
TCBJSE   DS    F                       LIST OF INACTIVE PROGRAMS ADDR.
TCBGRS   DS    CL64                    GENERAL REGISTER SAVE AREA
TCBIDF   DS    CL1                     TCB IDENTIFIER FIELD
TCBFSA   DS    CL3                     POINTER TO 1ST PROB.PROG.SAVEAR
TCBTCB   DS    F                       NEXT TCB ON READY QUEUE POINTER
TCBTME   DS    F                       POINTER TO TIMER ELEMENT
         EJECT
         DCBD  DSORG=PS
         EJECT
*
*
*   DATA EXTENT BLOCK
         IEZDEB                                                  Y02076
         EJECT
         IHADSAB                                                 Y02076
         EJECT
         IHJDSTAB                                               Y02076
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
SRT      DSECT
         IEFUCBOB
*
*
*
         END
