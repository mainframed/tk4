         TITLE 'IGC0K05B  MOUNT/VERIFICATION PROCESSOR - NON-DIRECT ACC*
               ESS    REPOSITION I/O  RESTART-SVC 52  OS/360'
IGC0K05B START
*              OS
*                                                                A48235
*                                                                A50338
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*0522225900,238500,557100                                        A25775
*0522415800                                                      A25997
*0522277200,329400-330300                                        A25937
*0522510300                                                      M3946
*          RELEASE 20 DELETIONS
*1380279000,313200,371700,385200,459900,490500,529200,617400,    S20038
*1380650700,652500,656100,666900                                 S20038
*1380208800                                                      M3408
*1380438600-438900                                               A35767
*1380261400,372100,631500                                        A36340
*          RELEASE 21 DELETIONS
*0987390600,438600                                               A46376
*0987                                                            A41442
*0987591300,666000                                               A40520
*              OS/VS2
*          RELEASE 2 CHANGES/DELETIONS
*                                                               YA03211
*          RELEASE 3 DELETIONS
*0000579600                                                     ZA01325
*336939-337259                                                 @Z30AAHP
*D56730018,D56750018                                           @ZA02206
*C263300,372100,391000,631200,631500,645300                    @ZA07612
*C334800                                                       @ZA09631
*A23221018,C28730019,A31501018-31509018                        @ZA11144
*C22230018-22234018                                            @ZA11641
*C147640                                                       @ZA19100
*C147640                                                       @ZA19100
*D870300-890100                                                @ZA18506
*C440100,507600                                                @ZA18506
* APAR OZ31487 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C147540-147580,148639,603000,605000,607000,609000,611000      @ZSUT222
*C621040                                                       @ZSUT222
*A612500-613500,657500                                         @ZSUT222
*                                                              @G32DSMI
*           VS2 SU32 DELETIONS                                 @G32DSFS
*                                                              @G32DSFS
*                                                              @ZM45144
*A120033                                                       @ZA29067
*C279840                                                       @ZA30100
*A280040-280240,282100,315906                                  @ZA30100
* STATUS CHANGE LEVEL 004
*
*TITLE
*
*     NON-DIRECT ACCESS MOUNT/VERIFICATION PROCESSOR
*
*STATUS
*
*FUNCTION/OPERATION
*
*        CHECK VOLUME SERIAL IN TABLE AGAINST VOLUME SERIAL IN THE
*        SRTUCB INDICATED BY THE DATA SET'S TIOT ENTRY.
*
*        IF THE CORRECT VOLUME IS NOT MOUNTED, CHECK ALL THE SECONDARY
*        STRUCB'S INDICATED AND IF THE VOLUME IS FOUND TO BE MOUNTED
*        ON ONE OF THEM, EXCHANGE IT WITH THE PRIMARY SRTUCB.
*
*        IF THE CORRECT VOLUME IS NOT MOUNTED ANYWHERE FIND A USEABLE
*        UCB & ISSUE A MOUNT MESSAGE - ERROR IF NO AVAILABLE UCB.
*
*        AS SOON AS THE VOLUME IS READY, READ THE VOLUME LABEL AND
*        VERIFY THAT THE CORRECT VOLUME WAS MOUNTED - IF NOT, REPEAT
*        THE MOUNTING PROCEDURE.
*
*        REPEAT THE ABOVE FOR EACH VOLUME SERIAL IN EACH ENTRY OF THE
*        TABLE(EXCEPT THE RESTART DATA SET) - TAPE ONLY. FOR SYSIN,
*        SYSOUT,UNIT RECORD, OR GRAPHIC DATA SETS UPDATE THE DEB.
*        DIRECT ACCESS IS PROCESSED IN THE NEXT LOAD. NO PROCESSING
*        IS PERFORMED FOR A NULLFILE.
*        FOR RACF DEFINED DATA SETS THE USERS AUTHORIZATION    @G32DSMI
*        IF THE DEQ-AT-DISMOUNT FACILITY WERE ACTIVE, IT IS    @ZA18506
*        IS CHECK USING A RACHECK.                             @G32DSMI
*        REESTABLISHED AND ALL PRECEEDING VOLUMES ARE DEQED.   @ZA18506
*
*ENTRY POINTS -
*
*              IGC0K05B  INITIAL ENTRY VIA XCTL FROM IGC0I05B
*                        ALSO ENTRY VIA RETURN FROM NSLRHRDI
*                        (NONSTANDARD LABEL ROUTINE)
*
*INPUT
*
*    REGISTER 8 - START OF DATA SET TABLE
*    REGISTER 1 - RESTART WORKAREA
*
*OUTPUT
*
*     NOT APPLICABLE
*
*EXTERNAL ROUTINES
*
*              NONE
*
*EXITS
*
*        (1) TO NONSTANDARD LABEL PROCESSING ROUTINE - NSLRHDRI
*        (2) D.A. MOUNT ROUTINE - IGC0M05B
*        (3) NON-DA SYSIN/SYSOUT ROUTINE - IGC0L05B
*        (4) ERROR EXIT TO IGC0V05B WITH ONE OF THE FOLLOWING ERROR
*            CODES SET IN THE RESTART WORK AREA:
*            26 - ERROR IN READ JFCB
*            30 - I/O ERROR IN NSL ROUTINE
*            40 - I/O ERROR READING VOLUME LABEL
*            44 - NO UCB AVAILABLE
*            46 - NO SCU FOR 1275 1419
*           255 - RACF ERROR
*
*TABLES/WORKAREAS-
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*ATTRIBUTES -
*
*       REENTRANT, ENABLED, PRIVILEGED.
*
***********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0         WORK/PARM REGISTER
WRKR2    EQU   1         WORK/PARM REGISTER
DCBR     EQU   2         CURRENT DCB REGISTER
BASER    EQU   3         BASE REGISTER
DEBR     EQU   4         CURRENT DEB REGISTER
UCBR     EQU   5         CURRENT UCB REGISTER
TIOTR    EQU   6         NEW TIOT REGISTER
TCBR     EQU   7         TCB REGISTER
TABLR    EQU   8         START OF DCB TABL REG
CTABLR   EQU   9         CURRENT DCB IN TABL REG
BUFR     EQU   10        USER BUFFER AREA
DSCNTR   EQU   11        NUMBER OF DATA SETS
WRKR3    EQU   12        WORK REGISTER
WRKR4    EQU   13        WORK REGISTER
WRKR5    EQU   14        WORK/PARM REGISTER
WRKR6    EQU   15        WORK/PARM REGISTER
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
IS       EQU   X'80'                    INDEXED SEQUENCIAL
PS       EQU   X'40'                    PHYSICAL SEQUENCIAL
DA       EQU   X'20'                    DIRECT ACCESS
PO       EQU   X'02'                    PARTITIONED ORGANIZATION
INOROUT  EQU   X'40'                    SYSIN OR SYSOUT DATA SET
DADEV    EQU   X'20'                    DA DEVICE
TPDEV    EQU   X'10'                    TAPE DEVICE
DEV1275  EQU   X'1F'                    1275 OPT CHR RDR        YM05550
DEV1419  EQU   X'1D'                    1419 MAG INK CHR RDR    YM05550
UNITREC  EQU   X'04'                    UNIT RECORD EQUIPMENT
ERRINNSL EQU   X'80'                    ERROR IN NSL ROUTINE
NSLMTSW  EQU   X'40'                    NSL MOUNT SWITCH
NSLCOMU  EQU   X'20'                    NSL COMMUNICATION BIT
BYPASS   EQU   X'10'                    BYPASS LABEL PROCESSING
AL       EQU   X'08'                    ASCII LABEL              S20038
NSL      EQU   X'04'                    NON-STANDARD LABEL
SL       EQU   X'02'                    STANDARD LABEL
NL       EQU   X'01'                    NO LABEL
POCONCAT EQU   X'40'                    P.O. CONCATENATED
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
NONDAFLG EQU   X'40'                    NON-DA DATA SET FLAG
NSLFLAG  EQU   X'10'                    NSL ROUTINE FLAG
TYPERST  EQU   X'80'                    IMMEDIATE RESTART
TABENT   EQU   48                       TABLE ENTRY LENGTH
WRITE    EQU   X'01'                    WRITE ON TAPE
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
SENSE    EQU   X'04'                    SENSE
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
UNLOAD   EQU   X'0F'                    REWIND AND UNLOAD
WTM      EQU   X'1F'                    WRITE TAPE MARK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
CCWFSR   EQU   X'37'                    FORWARD SPACE RECORD CMD  99223
SEARCH   EQU   X'31'                    SEARCH
SRCHCNT  EQU   X'05'                    COUNT FOR SEARCH ID
TIC      EQU   X'08'                    TIC
READDA   EQU   X'06'                    READ FOR DA
LENJFCB  EQU   X'B0'                    LENGTH OF JFCB
LBLLEN   EQU   X'50'                    LENGTH OF LABEL
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR026   EQU   26                       ERROR READING IN JFCB  @ZSUT222
ERR030   EQU   30                       I/O ERROR IN NSL RTN   @ZSUT222
ERR040   EQU   40                       ERROR IN READ VOL LABEL@ZSUT222
ERR044   EQU   44                       NO UCB AVAILABLE       @ZSUT222
ERR046   EQU   46                       NO SCU FOR 1275 1419   @ZSUT222
INTECEPT EQU   X'44'                    INTERCEPT CMND CODE     YM05549
TCAM     EQU   X'02'                    TABFLG1 TCAM FLAG        M3408
DMCOUNT0 EQU   X'7F'                    DATA MANAGEMENT COUNT  @ZA19100
PERMRES  EQU   X'24'                    PERMANENT RESIDENT OR RESERVED
NOTREADY EQU   X'40'                    NOT READY SWITCH
OUTP     EQU   X'03'                    OUTPUT (DEBOPATB)
SLIFLAG  EQU   X'20'                    SLI FLAG
FILEPROT EQU   X'02'                    FILE PROTECTED
FSROP    EQU   X'37'                    FORWARD SPACE RECORD    99223
INOUT    EQU   X'0C'                    INOUT (DEBOPATB)
ONE      EQU   X'01'                    CONSTANT ONE
COMPCODE EQU   X'00'                    COMPLETION CODE
RINGIN   EQU   C'F'                     INSERT FILE PROTECT RING
USED     EQU   C'U'                     VOLUME CAN BE USED
MOUNTON  EQU   X'80'                    MOUNT SWITCH ON
MOUNTOFF EQU   X'00'                    MOUNT SWITCH OFF
UNITCHK  EQU   X'02'                    UNIT CHECK
UNITEXP  EQU   X'01'                    TAPE MARK INDCIATOR     ZA01325
WRONGLEN EQU   X'40'                    WRONG LENGTH RECORD
MODECLR  EQU   X'C0'                    DENSITY SET
SETMODE  EQU   X'2B'                    EVEN PAR. TRANS MODE. CNVT OFF
SLASH    EQU   C'/'                     SLASH
TWO      EQU   2                        CONSTANT OF TWO          S20038
FOUR     EQU   4                        CONSTANT OF FOUR         S20038
SIX      EQU   6                        CONSTANT OF SIX          S20038
NINE     EQU   9                        CONSTANT OF NINE         S20038
D0       EQU   0                        ZERO                     Y02076
D1       EQU   1                        ONE                      Y02076
D2       EQU   2                        TWO                      Y02076
D3       EQU   3                        THREE                    Y02076
D4       EQU   4                        FOUR                     Y02076
D5       EQU   5                        FIVE                     Y02076
D6       EQU   6                        SIX                      Y02076
D7       EQU   7                        SEVEN                    Y02076
D8       EQU   8                        EIGHT                    Y02076
D9       EQU   9                        NINE                     Y02076
D15      EQU   15                       NO. OF VOLS IN JFCBX   @ZA18506
D24      EQU   24                       TWENTY FOUR              Y02076
ERR255   EQU   255                      RACF RELATED ERROR     @ZSUT222
*
***********************************************************************
*
         USING TABL,WRKR4          CURRENT TABLE ENTRY
         USING MNTTIOT,TIOTR       NEW TIOT
         USING MNTUCB,UCBR         UCB
         USING DEBBASIC,DEBR       DEB                           Y02076
         USING RSDSECT,WRKR3       WORK AREA
         USING IHADCB,CTABLR       DCB
         USING RSTWA,BUFR         RESTART WORK AREA
*
         BALR  BASER,0             SET UP BASE REGISTER
         USING *,BASER
         B     BEGIN               BRANCH AROUND EYE CATCHER     Y01909
         CNOP  0,8                 ALIGN TO A DBL WORD BOUNDARY  Y01909
         DC    CL8'IGC0K05B'       MODULE NAME                 @ZSUT222
         DC    CL8'&SYSDATE'       LAST DATE SHIPPED           @ZSUT222
         DC    CL8'@ZSUT222'       LAST CODE SHIPPED           @ZSUT222
         DC    CL8'@SU83200'       SELECTABLE UNIT ID          @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
         XC    RSMWOFST(4),RSMWOFST     ZERO FOR DOMING         ZA02206
         TM   RSDCBFLG,NSLFLAG    ARE WE COMING FROM NSL RTN
         BO    MNTTP085           BRANCH IF YES
*
************  ********** ***************  ************  ***************
*                                                                     *
*               INITIALIZE REGISTERS                                  *
*                                                                     *
************  ********** ***************  ************  ***************
*
*        IN ORDER TO PREVENT A NON-CANCELABLE SITUATION IN THE   YM7890
*        EVENT THE MEMORY IS SWAPPED OUT WITH AN OUTSTANDING     YM7890
*        MOUNT, ISSUE A SYSEVENT TO INHIBIT SWAP-OUT.            YM7890
*                                                                YM7890
         SYSEVENT DONTSWAP         INHIBIT SWAP-OUT              YM7890
*                                                                YM7890
         XC    QMNPRMWA,QMNPRMWA   ZERO OUT QMNGR PARM LIST      YM5965
*                                  POINTER AREA                  YM5965
         MVC   RSPPM(8),NAMEDA     SET UP XCTL                      MCS
         L     TCBR,RSTCBAD        PICK UP TCB ADDR
         USING TCB,TCBR            TCB                         @ZM45144
         L     TIOTR,TCBTIO        LOAD TIOT ADDR.
         DROP  TCBR                                            @ZM45144
         LR    WRKR4,TABLR         TABLE ADDRESS TO WRKR4
*
MNTTP005 EQU   *
         L     CTABLR,TABDCBAD-1   PICK UP DCB ADDRESS
         LH    WRKR5,DCBTIOT       PICK UP TIOT OFFSET (TIOTR + WRKR5
*                                  POINTS TO DDNAME
         L     DEBR,DCBDEBAD       PICK UP DEB ADDRESS
         LA    WRKR5,16(WRKR5)    DISPLACEMENT TO 1ST UCB
         L     UCBR,0(TIOTR,WRKR5) PICK UP UCB ADDRESS
         LA    WRKR6,0(TIOTR,WRKR5)    ADDR OF 1ST UCB
*
         L     WRKR3,TABFLG1      PICK UP WORKAREA ADDRESS
*
************       ***********         ***********         ************
*
*        CHECK FOR- (1) D.A. - TO BE MOUNTED IN NEXT MODULE
*                       NULLFILE - NO MOUNTING REQUIRED
*
*                   (2) SYSIN/SYSOUT(TAPE/UNIT RECORD) - UPDATE UCB IN
*                                                        DEB
*
*                   (3) UNIT RECORD OR GRAPHIC - UPDATE UCB IN DEB
*
************       ***********         ***********         ************
*
         TM    TABFLG1,TABDA+TABNULL+TABTCAM   DA,NULL,TCAM      Y02076
         BC    5,MNTTP070          BRANCH IF YES
*
         ST    WRKR6,TABVLID2      STORE ADDR OF 1ST UCB
         TM    TABFLG1,TABSYS+TABUR SYSIN,SYSOUT, UR,GRAPHIC     Y02076
         BC    5,MNTTP055          BRANCH IF YES
         TM    TABFLG2,TABRSDS     CHPT DS USED FOR RSTRT        Y02076
         BNO   MNTTP010            IF NOT, CONT WITH MOUNTING    YM7579
         L     CTABLR,RSDCB        GET RESTART'S DCB ADDR        YM7579
         L     CTABLR,DCBDEBAD     GET RESTART'S DEB ADDR        YM7579
         MVC   DEBSUCBB(D3),DEBSUCBB-DEBBASIC(CTABLR) UPDATE     YM7579
*                                  USER'S DEB UCB ADDR           YM7579
         B     MNTTP070            BYPASS MOUNT PROCESSING       YM7579
*
************   ************   ************   ************   ***********
*
*              CHECK TO SEE IF THIS VOLUME IS MOUNTED ON ANY ONE
*              OF THE ALLOCATED UCB'S IN THE NEW TIOT
*
************   ************   ************   ************   ***********
*
MNTTP010 EQU   *
         TM    SRTEDMCT,MOUNTON    IS MOUNT SW ON
         BNO   MNTTP998            NO BRANCH                   @ZA11641
         TM    UCBFL2,NOTREADY     IS UCB NOT READY BIT ON ?   @ZA11641
         BO    MNTTP150            YES FORM CHANNEL PROGRAM    @ZA11641
MNTTP998 EQU   *                                               @ZA11641
         CLC   TABVLID1,SRTEVOLI   IS THE CORRECT VOLUME MOUNTED
         BE    MNTTP150            BRANCH TO FORM CHANNEL PROGRAM
*
         BAL   DSCNTR,MNTTP105     GO TO 'GET NEXT UCB' ROUTINE  A25775
*
         BNE   MNTTP010            NOT LAST UCB - CONDITION CODE SET
*                                  IN 'GET NEXT UCB' ROUTINE
*
*  THE VOLUME WAS NOT MOUNTED - FIND AN AVAILABLE UCB AND MOUNT THE
*  VOLUME.
*
MNTTP999 EQU   *                                               @ZA11144
         LH    WRKR5,DCBTIOT       PICK UP TIOT OFFSET
         LA    WRKR5,16(WRKR5)    DISPLACEMENT TO 1ST UCB
         L     UCBR,0(TIOTR,WRKR5) PICK UP UCB ADDRESS
         B     MNTTP020            BRANCH TO SEE IF VOLUME MOUNTED
*
MNTTP015 EQU   *
         BAL   DSCNTR,MNTTP105     GO TO 'GET NEXT UCB' ROUTINE  A25775
         BE    MNTTP135            ERROR IF LAST UCB
*
MNTTP020 EQU   *
         TM    SRTEDMCT,DMCOUNT0   DATA MANAGEMENT COUNT=0
         BC    5,MNTTP015         BRANCH IF NOT ZERO
*
************   ************   ************   ************   ***********
*
*  DATA MANAGEMENT COUNT EQUAL ZERO REQUEST OPERATOR TO MOUNT VOLUME
*  ON THIS UCB IF UCB IS AVAILABLE. I.E. NOT PERM. RESIDENT OR RESERVED
*
************   ************   ************   ************   ***********
*
MNTTP025 EQU   *
         TM    SRTESTAT,PERMRES    IS THIS DEVICE RESERVED OR
*                                  PERMANENTLY RESIDENT.
         BC    5,MNTTP015          BRANCH IF ANSWER IS YES
*
************   ************   ************   ************   ***********
*
*    VOLUME CAN BE MOUNTED ON THIS UCB PREPARE TO ISSUE MOUNT MESSAGE
*    TO OPERATOR
*
************   ************   ************   ************   ***********
*
MNTTP030 EQU   *
         BAL   DSCNTR,MNTTP145    FORM MOUNT MESSAGE
         MVI   MSGID+53,RTCD28     MOVE ROUTE CODE TO MSG      @ZA07612
*
MNTTP035 EQU   *
         OI    SRTEDMCT,MOUNTON    SET MOUNT SW ON
         OI    UCBSTAB,UCBBNUL          SET DOM FLAG            ZA02205
         LA    WRKR2,MSGAREA      MESSAGE AREA ADDR IN REG. 1
*
         WTO   MF=(E,(1))          WRITE TO OPERATOR
         ST    WRKR2,RSMWOFST      SAVE MSGID FOR DOM               MCS
         OC    UCBFSER(3),UCBFSER       ANY DOM MSGID HERE      ZA02205
         BNZ   MNTTP036                 YES MSGID HERE          ZA02205
         MVC   UCBFSER(3),RSMWOFST+1    MOVE MSGID IN           ZA02205
         XC    RSMWOFST(4),RSMWOFST     ZERO MSGID FIELD        ZA02205
         B     MNTTP037                 BRANCH AROUND           ZA02205
MNTTP036 EQU   *                                                ZA02205
         OC    UCBFSER+3(3),UCBFSER+3   ANY MSGID HERE          ZA02205
         BNZ   MNTTP037                 YES MSGID HERE          ZA02205
         MVC   UCBFSER+3(3),RSMWOFST+1  MOVE MSGID IN           ZA02205
         XC    RSMWOFST(4),RSMWOFST     ZERO MSGID FIELD        ZA02205
MNTTP037 EQU   *                                                ZA02205
*
************   ************   ************   ************   ***********
*
*        REWIND AND UNLOAD AND PREPARE TO CHECK VOLUME LABEL AFTER
*        OPERATOR MOUNTS NEW TAPE.
*
************   ************   ************   ************   ***********
*
MNTTP040 EQU   *
         BAL   DSCNTR,MNTTP115    BUILD CCW
         TM    UCBFL2,NOTREADY    DEVICE READY
         BO    MNTTP045           BRANCH IF NO
*        AFTER IPL, THE UCB NOT-READY BIT CAN BE FALSELY OFF.
*        DO NOT SET NOT-READY BIT IN THIS CASE, BECAUSE THE TAPE WILL
*        NOT GIVE A READY INTERRUPT UNTIL ENABLED BY A SIO AFTER IPL.
*        AN UNKNOWN TAPE MAY BE PHYSICALLY MOUNTED AND READY, HOWEVER.
         CLI   SRTEVOLI,X'00'      IS A VOLUME MOUNTED           A25937
         BNE   AHEAD               BR IF YES                   @ZA30100
*
         TM    TABFLG2,X'01'       FIRST PASS MOUNT SW ON ?    @ZA30100
         BNO   MNTTP045            NO BRANCH                   @ZA30100
         NI    TABFLG2,X'FE'       TURN OFF BIT                @ZA30100
*        ISSUE EXCP TO REWIND AND UNLOAD TAPE
*
AHEAD    EQU   *                                               @ZA30100
         BAL   DSCNTR,MNTTP110     EXCP/WAIT ROUTINE
*
         OI    UCBFL2,NOTREADY     SET UCB NOT READY BIT ON
*
MNTTP045 EQU   *
         MVI   RSCCW1,REWIND       MAKE CHN PROG. OP CODE 'REWIND'
*                                                              @ZA11144
         OI    RSMWOFST,X'80'      INDICATE THAT DOM MUST BE ISSUED MCS
         BAL   DSCNTR,MNTTP110    REWIND TAPE
*
         TM    TABTPLBL,BYPASS     BYPASS LABEL PROCESSING
         BO    MNTTP055            BRANCH IF YES
*
************   ************   ************   ************   ***********
*
*      PREPARE TO READ IN VOLUME LABEL
*
************   ************   ************   ************   ***********
*
         MVI   RSCCW1,READ         MAKE CHANNEL COMMAND OP CODE READ
         MVI   RSCCW1+7,LBLLEN     MAKE LENGTH DECIMAL 80
*
************   ************   ************   ************   ***********
*
*    ISSUE EXCP TO READ IN VOLUME ID
*
************   ************   ************   ************   ***********
*
         OI    RSDEBOFL,RSDEBRER        SET REDUCED ERR RECOV   YA00628
         BAL   DSCNTR,MNTTP110     EXCP/WAIT ROUTINE
         NI    RSDEBOFL,X'FF'-RSDEBRER  RESET ERR RECOV         YA00628
*
* REWIND TAPE
*
         MVI   RSCCW1,REWIND       MAKE CHN PROG. OP CODE REW
         BAL   DSCNTR,MNTTP110    REWIND TAPE
*
         TM    TABTPLBL,SL+AL           IS SL OR AL USED         S20038
         BZ    MNTTP050                 BRANCH IF NO             S20038
*
         TM    TABTPLBL,SL         STANDARD LABELS SPECIFIED
         BO    MNTTP052                 BRANCH IF YES TO COMPARE S20038
*                                       VOLID                    S20038
*
* MUST BE ASCII LABEL, SET UP TO TRANSLATE LABEL BEFORE PROCESSING
*
         LA    WRKR1,SIX                LENGTH OF VOLID          S20038
         LA    WRKR2,RSJFCB+FOUR        ADDRESS OF VOLID         S20038
*
         XLATE (1),(0),TO=E             TRANSLATE LABEL TO       S20038
*                                       EBCIDIC                  S20038
*
MNTTP052 EQU   *                                                 S20038
*
*
         CLC   TABVLID1,RSJFCB+4   IS CORRECT VOLUME MOUNTED
         BE    GOODVOL             YES COMPLETE PROCESSING     @ZA11144
*                                  FOR THE LABEL JUST READ     @ZA11144
         BAL   DSCNTR,MNTTP105     GET THE NEXT UCB FOR THIS   @ZA11144
*                                  TIOT ENTRY                  @ZA11144
         BNE   MNTTP010            BRANCH IF THERE IS ANOTHER  @ZA11144
*                                  UCB WITHIN THE TIOT         @ZA11144
         OI    TABFLG2,X'01'       SET FIRST PASS SWITCH       @ZA30100
         B     MNTTP999            VOLUME WAS NOT MOUNTED      @ZA11144
*                                  BRANCH TO FIND A UCB IN THE @ZA11144
*                                  TIOT WE CAN ISSUE MOUNT TO  @ZA11144
GOODVOL  EQU   *                                               @ZA11144
         TM    TABTPLBL,SL              STANDARD LABEL           99223
         BNO   MNTTP055                 NO.  BRANCH              99223
         CLI   UCBTBYT4,X'03'           3400 TAPE                99223
         BNE   MNTTP055                 NO.  BRANCH              99223
         L     DSCNTR,UCBEXTPT          GET UCB COMMON EXT ADDR  YM5965
         USING UCBCMEXT,DSCNTR          ADDRESS UCB COMMOM EXT   YM5965
         CLI   UCBSNSCT,24              TAPE HAVE 24 SENSE BYTS  99223
         DROP  DSCNTR                   UCB COMMON EXT           YM5965
         BNE   MNTTP055                 NO.  BRANCH              99223
*                                                                99223
         BAL   DSCNTR,MNTTP115          YES. BUILD CCW           99223
*                                                                99223
         TM    DEBOPATB,OUTP            OUTPUT FILE              99223
         BNO   MNTTP047                 NO.  PROCESS INPUT       99223
         MVI   RSCCW1,SENSE             YES. SETCCW TO OBTAIN    99223
         MVI   RSCCW1+4,SLIFLAG         SENSE BYTES  CONTAINING  99223
         MVI   RSCCW1+7,24              UNIT SERIAL NUMBER       99223
*                                                                99223
         BAL   DSCNTR,MNTTP110          EXCP/WAIT ROUTINE        99223
*                                                                99223
         L     DSCNTR,UCBXTN            GET UCB EXTENTION ADDRS  99223
         USING UCBMT,DSCNTR                                      99223
         MVC   UCBCTD,RSJFCB+15         UNIT SERIAL              99223
*                                       TO UCB EXTENTION         99223
         B     MNTTP055                 RETURN TO MAIN LINE      99223
         DROP  DSCNTR                                            99223
*                                                                99223
MNTTP047 EQU   *                                                 99223
         MVC   RSCCW3,RSCCW1            INPUT. SET CCWS          99223
         MVI   RSCCW3,READ              TO READ HDR2 WHICH       99223
         MVI   RSCCW1+4,X'40'           CONTAINS UNIT SERIAL     99223
         MVI   RSCCW1,FSROP             NUMBER OF CREATING UNIT  99223
         MVC   RSCCW2,RSCCW1            *                        99223
         BAL   DSCNTR,MNTTP110          EXCP/WAIT ROUTINE        99223
*                                                                99223
         MVI   RSCCW1,REWIND            REWIND TAPE              99223
         MVI   RSCCW1+4,X'00'           ONLY ONE CCW             99223
         BAL   DSCNTR,MNTTP110          EXCP/WAIT ROUTINE        99223
*                                                                99223
         CLC   HDR2,RSJFCB              HDR2 RECPRD OBTAINED     99223
         BNE   MNTTP055                 NO.  CONTINUE            99223
*        IF A TAPE ON A BIRCH DRIVE WAS CREATED ON A NON BIRCH  YA03211
*        DRIVE, THE UNIT SERIAL NUMBER WILL NOT BE PRESENT.     YA03211
         TM    RSJFCB+46,X'F0'          IS A SERIAL NO. PRESENT YA03211
         BNO   MNTTP055                 NO, CONTINUE            YA03211
         PACK  RSCCW3,RSJFCB+42(5)      CONVERT EBCDIC TO        99223
         CVB   WRKR6,RSCCW3             BINARY                   99223
         L     DSCNTR,UCBXTN            GET UCB EXTENTION ADDR   99223
         USING UCBMT,DSCNTR                                      99223
         STH   WRKR6,UCBCTD             STORE SERIAL NUMBER      99223
         DROP  DSCNTR                                            99223
         B     MNTTP055                 GO TO MAIN LINE          99223
MNTTP050 EQU   *
         CLC   RSJFCB(4),VOL1      IS A VOLUME LABEL PRESENT
         BE    MNTTP030           BRANCH TO RE-ISSUE MOUNT MESSAGE
*                                  YES
         CLC   RSJFCB(FOUR),ASCIVOL     ASCII VOLUME LABEL       S20038
*                                       PRESENT                  S20038
         BE    MNTTP030                 BRANCH YES TO RE-ISSUE   S20038
*                                       MOUNT                    S20038
*
************   ************   ************   ************   ***********
*
*   UPDATE UCB - (VOL SER & DATA MANAGEMENT COUNT)
*   MAKE THE CURRENT UCB THE 1ST UCB IN THE NEW TIOT
*
************   ************   ************   ************   ***********
*
MNTTP055 EQU   *
         LA    WRKR6,0(WRKR5,TIOTR)  ADDR OF CURRENT UCB POINTER A25937
         L     DSCNTR,TABVLID2     ADDR OF 1ST UCB IN TIOT
         MVC   0(4,WRKR6),0(DSCNTR)     1ST TO CURRENT
         ST    UCBR,0(DSCNTR)           CURRENT TO 1ST
         MVC   DEBSUCBB(D3),D1(DSCNTR)  UCB ADR TO DEB           Y02076
         TM    TABFLG1,TABSYS+TABUR SYSIN,SYSOUT,UR,OR GRAPHIC @ZA09631
         BZ    MNTTP060                 BR IF NOT               YM05550
         CLI   UCBTBYT4,DEV1275         IS IT 1275 OPCHRDR      YA03685
         BE    MNTTP056                 BR IF YES               YM05550
         CLI   UCBTBYT4,DEV1419         IS IT 1419 MAG CHR RDR  YA03685
         BNE   MNTTP070                 BR IF NOT               YM05550
*   1275 OPT CHAR READER AND 1419 MAG INK CHAR RDR PROCESSING   YM05550
*   UPDATE DEB TO REFLECT NEW SECONDARY CONTROL UNIT (SCU) ADR
*   DETERMINE ADR FROM UCB LOOK UP TABLE                        YM05550
MNTTP056 EQU   *                                                YM05550
         LH    WRKR2,UCBCHA             LD CHAN & DEV ADR       YM05550
         SLL   WRKR2,21                 CLEAR INDICATORS        YM05550
         SRL   WRKR2,21                 REPOS CHAN & DEV ADR    YM05550
         LA    WRKR2,1(,WRKR2)          INCR TO SCR ADR         YM05550
         L     DSCNTR,CVTPTR            LOAD CVT ADDR           YM05550
         USING CVT,DSCNTR               CVT ADDRESSABILITY      YM05550
         L     DSCNTR,CVTILK2           GET ADR UCB LU TBL      YM05550
         DROP  DSCNTR                                           YM05550
MNTTP057 EQU   *                                                YM05550
         SLR   WRKR5,WRKR5              CLEAR REG              @Z30AAHP
         ICM   WRKR5,3,0(DSCNTR)        INSERT UCB-TEST 0      @Z30AAHP
         BZ    MNTTP058                 IF FILLER BRANCH       @Z30AAHP
         CLM   WRKR5,3,=X'FFFF'         END OF TABLE?          @Z30AAHP
         BE    MNTTP131                 YES - BRANCH           @Z30AAHP
         LH    WRKR6,4(WRKR5)           LD CHAN & DEV ADR       YM05550
*                                       FROM UCB POINTED TO     YM05550
*                                       BY LOOK-UP TBL ENTRY    YM05550
         SLL   WRKR6,21                 CLEAR INDICATORS        YM05550
         SRL   WRKR6,21                 REPOS CHAN & DEV ADR    YM05550
         CR    WRKR6,WRKR2              ARE CHAN&DEV ADRS=      YM05550
         BE    MNTTP059                 BR IF YES TO UPDATE DEB YM05550
*                                       WRKR5 CONTAINS SCU ADR  YM05550
MNTTP058 EQU   *                                                YM05550
         LA    DSCNTR,2(,DSCNTR)        GET NXT LU TBL NTRY     YA03685
         B     MNTTP057                 BR TO REPEAT TESTS      YM05550
MNTTP059 EQU   *                                                YM05550
         STH   WRKR5,DEBSUCBB+5         ST SCU ADR IN           YM05550
*                                       SECOND DEB EXTENT       YM05550
         B     MNTTP070                 BR CONT PROCESSING      YM05550
*
MNTTP060 EQU   *                                                YM05550
         MVC   SRTEVOLI,TABVLID1        VOL SER TO UCB
         MVC   UCBFSER(6),TABVLID3      1ST VOLSER OF D.S. TO    A41442
*                                       UCB                      A41442
         MVI   SRTEDMCT,ONE          SET DMCT TO ONE             Y02076
         MVC   UCBFSCT(D2),CONSTONE     SET FSCT TO 1            Y02076
         MVC   UCBFSEQ(D2),CONSTONE     SET FSEQ = 1             Y02076
*
************   ************   ************   ************   ***********
*
*         CHECK TO SEE IF AN OUTPUT FILE IS FILE PROTECTED
*         OR IF RAC PROTECTED TAPES EXIST CHECK FOR A VOLUME   @G32DSMI
*         AUTHORIZED FOR INPUT THAT WAS MOUNTED WITH THE RING. @G32DSMI
*
************   ************   ************   ************   ***********
*
         BAL   DSCNTR,MNTTP115    BUILD CCW
         L     WRKR2,CVTPTR             CVT ADDRESSABILITY     @G32DSMI
         USING CVT,WRKR2                                       @G32DSMI
         L     WRKR2,CVTRAC             RACF CVT ADDRESSABILITY@G32DSMI
         LTR   WRKR2,WRKR2              RACF ACTIVE            @G32DSMI
         BZ    MNTRAC00                 BYPASS RACF TAPE TEST  @G32DSMI
         USING RCVT,WRKR2                                      @G32DSMI
         TM    RCVTSTA1,RCVTTAPE        TAPE PROTECTION ACTIVE @G32DSMI
         BO    MNTRAC01                 YES - RACHECK NEEDED   @G32DSMI
         DROP  WRKR2                                           @G32DSMI
MNTRAC00 EQU   *                                               @G32DSMI
*
         TM    DEBOPATB,OUTP       OUTPUT PROCESSING
         BC    12,MNTTP070        BRANCH IF NO
*
MNTRAC01 EQU   *                        CHECK FILE PROTECTION  @G32DSMI
         MVI   RSCCW1,SENSE        MAKE CHANNEL PROGRAM A SENSE OP
         MVI   RSCCW1+7,SRCHCNT    MAKE LENGTH 5
         MVI   RSCCW1+4,SLIFLAG    SUPPRESS WRONG LENGTH RECORD
*
************   ************   ************   ************   ***********
*
*                   ISSUE EXCP TO SENSE FOR FILE PROTECT
*
************   ************   ************   ************   ***********
*
         BAL   DSCNTR,MNTTP110     EXCP/WAIT ROUTINE
*
         TM    RSJFCB+1,FILEPROT   IS VOLUME FILE PROTECTED
         BZ    MNTRAC10                 NOT FILE PROTECTED     @G32DSMI
         TM    DEBOPATB,OUTP            OPEN FOR OUTPUT        @G32DSMI
         BO    MNTRAC20                 YES-PERFORM MOUNT WITH @G32DSMI
*                                       RING                   @G32DSMI
         BAL   DSCNTR,RACINPUT          NO-INPUT CHECK RAC     @G32DSMI
*                                       AUTHORIZATION          @G32DSMI
         B     MNTTP070                 AUTHORIZED-CONTINUE    @G32DSMI
MNTRAC10 EQU   *                        NOT FILE PROTECTED     @G32DSMI
         BAL   DSCNTR,RACOUTPT          CHECK OUTPUT           @G32DSMI
*                                       AUTHORIZATION          @G32DSMI
         B     MNTTP070                 AUTHORIZED CONTINUE    @G32DSMI
MNTRAC20 EQU   *                        MOUNT WITH RING        @G32DSMI
*
************   ************   ************   ************   ***********
*
*   OUTPUT VOLUME IS FILE PROTECT DETERMINE WHAT ACTION TO TAKE
*
************   ************   ************   ************   ***********
*
         BAL   DSCNTR,MNTTP145    FORMAT MOUNT MESSAGE
*
         TM    DEBOPATB,INOUT      IS DATA SET OPEN FOR 'INOUT'
         MVC   MSGAREA+NINE(FOUR),FPMSG1 FILE PROTECT MSG TO     S20038
*                                       WRITE ARE                S20038
         MVI   MSGID+53,RTCD20     MOVE ROUTE CODE TO MSG      @ZA07612
         BC    5,MNTTP035         BRANCH NOT INOUT - WRITE MESSAGE TO
*                                  OPERATOR INFORMING HIM THAT VOLUME
*                                  IS FILE PROTECTED, AND REISSUE
*                                  MOUNT MESSAGE.
*
************   ************   ************   ************   ***********
*
*   A DATA SET OPENED FOR 'INOUT' IS ON A FILE PROTECTED VOLUME, CHECK
*   TO SEE IF VOLUME SHOULD BE USED - THAT IS - WRITE TO OPERATOR WITH
*   A REPLY
*
************   ************   ************   ************   ***********
*
         MVC   MSGAREA+NINE(TWO),FPMSG2 FILE PROTECT MSG2 TO     S20038
*                                       WRITE ARE                S20038
         LA    WRKR6,REPLY              PICK UP REPLY ADDRESS
         ST    WRKR6,REPLYLTH           STORE REPLY ADDRESS
         MVI   REPLYLTH,ONE        REPLY LENGTH
         LA    WRKR6,RSECBAD       PICK UP ECB ADDRESS
         ST    WRKR6,REPLYECB           STORE ECB ADDRESS
         MVI   MSGID+53,RTCDA0     MOVE ROUTE CODE TO MESSAGE  @ZA07612
*
MNTTP065 EQU   *
         MVI   RSECBAD,COMPCODE    RESET COMPLETION FLAG IN ECB
         LA    WRKR2,REPLYLTH           MESSAGE BUFFER AREA
*
         WTOR  MF=(E,(1))               WRITE TO OPERATOR
*
*                   WAIT FOR OPERATOR'S REPLY
*
         WAIT  ,ECB=RSECBAD        WAIT                         YM05548
*
         CLI   REPLY,RINGIN        OPERATOR WILL INSERT FILE PROT RING
         BE    MNTTP040            BRANCH IF YES
*
         CLI   REPLY,USED          SHOULD VOLUME BE USED
         BNE   MNTTP065            NO, REISSUE MOUNT MESSAGE
*                                  USE VOLUME - CONTINUE
*
*   CHECK IF USER AUTHORIZED FOR INPUT                         @G32DSMI
         L     DSCNTR,CVTPTR            CVT                    @G32DSMI
         L     DSCNTR,CVTRAC-CVT(DSCNTR) RAC CVT               @G32DSMI
         TM    RCVTSTA1-RCVT(DSCNTR),RCVTTAPE IS TAPE          @G32DSMI
*                                       PROTECTION ACTIVE      @G32DSMI
         BZ    MNTTP070                 NO-CONTINUE            @G32DSMI
         BAL   DSCNTR,RACINPUT          CHECK AUTHORIZATION    @G32DSMI
************   ************   ************   ************   ***********
*
*              DETERMINE IF WE ARE COMING FROM THE NONSTANDARD LABEL
*              ROUTINE.
*
************   ************   ************   ************   ***********
*
MNTTP070 EQU   *
         TM    RSDCBFLG,NSLFLAG    ARE WE COMING FROM NSL RTN
         BO    MNTTP077            BRANCH IF YES                 A25997
*
* INCREMENT TO NEXT TABLE ENTRY-IF NOT LAST CONTINUE PROCESSING-IF LAST
* ENTRY GO TO  -  NSL PROCESSING -
*
         TM    TABFLG1,TABLAST     IS THIS THE LAST ENTRY
         LA    WRKR4,TABENT(WRKR4) INCREMENT TO NEXT ENTRY
         BZ    MNTTP005            BRANCH IF NOT LAST ENTRY
*
************   ************   ************   ************   ***********
*
*  AT THIS POINT ALL TAPE ENTRIES IN THE TABLE HAVE BEEN PROCESSED.
*  WE WILL NOW SPIN THRU THE TABLE TO SEE IF THERE ARE ANY NSL TAPE
*  ENTRIES. IF THERE ARE WE WILL EXIT TO THE USER'S NONSTANDARD
*  LABEL PROCESSING ROUTINE FOR EACH NONSTANDARD LABEL ENTRY.
*
*  THE USER IS PASSED A POINTER TO THE TABLE. EACH ENTRY IN THE TABLE
*  CONTAINS A POINTER TO A DCB AND ALSO TO A CONTROL BLOCK AREA.
*  THE FORMAT OF THE TABLE ENTRIES AND THE CONTROL BLOCK AREA ARE
*  CONTAINED IN A DSECT AT THE END OF THIS PROGRAM.
*
************   ************   ************   ************   ***********
*
         LR    WRKR4,TABLR         TABLE ADDRESS TO WRKR4
MNTTP072 EQU   *
         TM    TABFLG1,TABTAPE          IS THIS A TAPE DEVICE    A46376
         BZ    MNTTP090           IF NOT, BRANCH                 A35767
         TM    TABTPLBL,NSL        NONSTANDARD LABEL SPECIFIED
         BZ    MNTTP087            BRANCH IF NO                @ZA18506
         B     MNTTP077            BRANCH TO READ JFCB
*
************   ************   ************   ************   ***********
*
*  PREPARE TO READ IN THE JFCB FOR THIS NONSTANDARD TAPE LABEL ENTRY
*
* WHEN THIS MODULE RECEIVED CONTROL THE CONTROL BLOCKS IN THE WORKAREA
* WERE SET UP TO READ IN A JFCB. HOWEVER IN ORDER TO READ IN THE TAPE
* LABEL AND REWIND THE TAPE IT WAS NECESSARY TO ALTER THE FIELDS IN THE
*WORKAREA. NOW THAT WE WANT TO READ IN THE JFCB WE MUST RESTORE THE
*FIELDS.
*
************   ************   ************   ************   ***********
*
MNTTP075 EQU   *
         L     WRKR3,TABFLG1       LOAD WORK AREA ADDRESS-POINTS TO DEB
         LA    DEBR,RSBUFSEG        SAVE DATA ADDRESS
         ICM   WRKR2,ALLBYTS,QMNPRMWA   GET QMNGR PARM LIST ADDR YM5965
         BNZ   MNTTP073            BRANCH IF PARM ADDR NON-ZERO  YM5965
***********************************************************************
*   GET SPACE FOR QMNGRIO PARAMETER LIST AND WORK AREA THE INITIALIZE *
*   IT.  QMNGRIO IS USED TO READ IN THE JFCB FROM SCHEDULER WORK      *
*   AREA (SWA) FOR EACH NON STANDARD LABEL (NSL) DATA SET ENTRY.      *
***********************************************************************
         ICM   WRKR1,ADDRBYTS,QMNGWALN  SET QMNGR P.L.+W.A.LGTH  YM5965
         ICM   WRKR1,HIORDER,SP253      SUBPOOL 253              YM5965
         GETMAIN  R,LV=(0)              ISSUE GETMAIN            YM5965
         USING QMIOP,WRKR2                                       YM5965
         XC    QMITCBAD(D24),QMITCBAD   CLEAR PARM LIST          YM5965
         LA    WRKR1,QMWAOFST           GET WORK AREA OFFSET     YM5965
         AR    WRKR1,WRKR2              CALC ADDR OF WORK AREA   YM5965
         ST    WRKR1,QMIWRKAD           STORE IN PARM LIST       YM5965
         L     WRKR1,RSTCBAD            GET TCB ADDR             YM5965
         ST    WRKR1,QMITCBAD           STORE TCB ADR IN PRM LST YM5965
         LA    WRKR1,JFCBLNGH           GET LENGTH OF JFCB       YM5965
         STH   WRKR1,QMIRECL            STORE REC LNGTH IN P.L.  YM5965
         MVI   QMIFLAGS,QMIOREAD        SET READ FUNCTION        YM5965
         ST    WRKR2,QMNPRMWA           SAVE PARM LIST ADDR      YM5965
*
MNTTP073 EQU   *                                                 YM5965
         ST    DEBR,QMIRECAD            STORE JFCB READ IN ADR   Y02076
         L     WRKR1,TABVLID5+2   LOAD TTR INTO REG. 0
         TM    TABFLG2,TABG5V      MORE THAN 5 VOLUMES
         BO    MNTTP076           BRANCH IF YES
*
         L     WRKR1,TABNVOLS     JFCB TTR-LOAD
*
MNTTP076 EQU   *
*
         SLL   WRKR1,8             LEFT JUSTIFY TTR
         ST    WRKR1,QMIDSKAD           STORE TTR IN PARM LST    Y02076
         STM   WRKR4,WRKR5,RSERAS01     SAVE REGS ACROSS QMNGRIO YM5965
         LA    WRKR4,RSREGSAV           POINT TO SAVE AREA       YM5965
*                                       FOR QMNGRIO              YM5965
         QMNGRIO                        READ IN JFCB             Y02076
         LM    WRKR4,WRKR5,RSERAS01     RESTORE REGISTERS        YM5965
         LTR   WRKR6,WRKR6              TEST QMNGRIO RET. CODE   Y02076
         BNZ   MNTTP120                 ERR-BR TO SET CODE-EXIT  Y02076
         L     CTABLR,TABDCBAD-1   LOAD DCB ADDRESS
         L     DEBR,DCBDEBAD      LOAD DEB ADDRESS
         BR    TCBR                RETURN
*
*********      **********     **********     **********     ***********
*
MNTTP077 EQU   *
*
         BAL   TCBR,MNTTP075       READ IN JFCB
*
         L     UCBR,DEBSUCBA            LOAD UCB ADDRESS         Y02076
         MVC   RSDEBUCB(D4),DEBSUCBA    UCB ADR TO WORKAREA(DEB) Y02076
*
************   ************   ************   ************   ***********
*
*               TRANSFER CONTROL TO USER'S NONSTANDARD LABEL ROUTINE
*
************   ************   ************   ************   ***********
*
MNTTP080 EQU   *
         OI    RSDCBFLG,NSLFLAG    TURN ON NSL ENTRY INDICATOR
         LR    CTABLR,WRKR4        TABLE ADDRESS TO REG. 9
         MVC   TABVLID1+10(8),NAMENSL
         LA    WRKR6,TABVLID1+18
*
         XCTL  EPLOC=TABVLID1+10,SF=(E,(15))
*
************   ************   ************   ************   ***********
*
*                   NONSTANDARD LABEL PROCESSING ROUTINE.
*
************   ************   ************   ************   ***********
*
MNTTP085 EQU   *
         TM    TABTPLBL,ERRINNSL   DID AN ERROR OCCUR IN NSL ROUTINE
         BO    MNTTP125       BRANCH IF YES
*
         TM    SRTEDMCT,MOUNTON    WAS CORRECT VOLUME MOUNTED
         BZ    MNTTP087           BRANCH IF CORRECT VOL        @ZA18506
*
         NI    SRTEDMCT,MOUNTOFF   MOUNT SW OFF - DATA MANG. COUNT TO 0
         XC    SRTEVOLI+1(5),SRTEVOLI+1 CLEAR 5 BYTES OF VOL SER M3946
         B     MNTTP005           BRANCH - INCORRECT VOLUME MOUNTED
*                                                              @ZA18506
MNTTP087 EQU   *                  TEST DEQ-AT-DISMOUNT         @ZA18506
*                                                              @ZA18506
         BAL   DSCNTR,MNTTP118    TEST DEQ STATUS              @ZA18506
*                                                              @ZA18506
************   ************   ************   ************   ***********
*
*              CHECK FOR LAST ENTRY DOING NONSTANDARD LABEL PROCESSING
*
************   ************   ************   ************   ***********
*
MNTTP090 EQU   *
         TM    TABFLG1,TABLAST     LAST TABLE ENTRY
         LA    WRKR4,TABENT(WRKR4) INCREMENT TO NEXT ENTRY
         BZ    MNTTP072            BRANCH IF NOT LAST ENTRY
*
************   ************   ************   ************   ***********
*
*                   PREPARE TO EXIT TO NEXT MOD
*
************   ************   ************   ************   ***********
*
MNTTP095 EQU   *
         ICM   WRKR1,ADDRBYTS,QMNGWALN  SET UP FREEMAIN PARMS    Y02076
         ICM   WRKR1,HIORDER,SP253      SUBPOOL 253              Y02076
         ICM   WRKR2,ALLBYTS,QMNPRMWA   GET ADR OF QMNGRIO P.L.  YM5965
         BZ    MNTTP096                 BRANCH IF ADDR IS ZERO   YM5965
         FREEMAIN  R,LV=(0),A=(1)       ISSUE FREEMAIN           Y02076
MNTTP096 EQU   *                                                 YM5965
         TM    RSDCBFLG,DAFLAG     WAS A DA DATA SET PROCESSED
         BO    MNTTP100            BRANCH TO GET WORKAREA FOR XCTL
*
         MVI   RSPPM+4,C'L'        XCTL TO IGC0L05B                 MCS
*
MNTTP100 EQU   *
*                                                                YM7890
*        AT THIS POINT, WITH ALL MOUNT REQUESTS SATISFIED, THE   YM7890
*        MEMORY CAN AGAIN BE ENABLED FOR SWAP-OUT.               YM7890
*                                                                YM7890
         SYSEVENT OKSWAP           ENABLE SWAP-OUT               YM7890
*                                                                YM7890
         LA    WRKR6,RSPPM+8                                        MCS
*******************   **************   ***********   *********   ****
         LR    WRKR2,BUFR         POINT REG. 1 TO THE RESTART W/A
*******************   **************   ***********   *********   ****
*
         NI    RSDCBFLG,X'FF'-NSLFLAG                            A50338
*                                 TURN OFF NSL RETURN IND.       A50338
         XCTL  EPLOC=RSPPM,SF=(E,(15))                              MCS
*
************   ************   ************   ************   ***********
*
* INCREMENTS POINTER TO NEXT UCB IN TIOT & CHECKS FOR LAST ENTRY
*
************   ************   ************   ************   ***********
*
MNTTP105 EQU   *
         LA    WRKR5,4(WRKR5)      INCREMENT TO NEXT DDNAME
         LH    DCBR,DCBTIOT       LOAD TIOT OFFSET
         SR    WRKR6,WRKR6        CLEAR REGISTER
         IC    WRKR6,0(TIOTR,DCBR) PICK UP LENGTH OF DD ENTRY
         AR    DCBR,TIOTR
         AR    DCBR,WRKR6         DCBR POINTS TO END OF DD ENTRY
         LA    WRKR6,0(TIOTR,WRKR5)  CURRENT UCB ADDRESS PLUS 4
         CR    DCBR,WRKR6         END OF DD ENTRY
         L     UCBR,0(TIOTR,WRKR5) PICK UP UCB ADDRESS
         BR    DSCNTR              RETURN                        A25775
*
************   ************   ************   ************   ***********
*
*                EXCP ROUTINE - RETURN ON REGISTER 15
*
************   ************   ************   ************   ***********
*
MNTTP110 EQU   *
         EXCP  RSIOB               EXCP CHANNEL PROGRAM
*
         WAIT  ,ECB=RSECBAD       WAIT
         TM    RSMWOFST,X'80'      MUST A DOM BE ISSUED             MCS
         BZ    TESTERR                  BRANCH IF NO                MCS
         LA    WRKR2,RSREGSAV+12        GET ADDRESS OF DOM LIST ZA02206
         XC    RSREGSAV+12(12),RSREGSAV+12  ZERO 3 WORDS        ZA02206
         OC    RSREGSAV+13(3),UCBFSER   MOVE MSGID              ZA02206
         BZ    MNTTP900                 NO MAGID                ZA02206
         LA    WRKR2,4(WRKR2)           NEXT MSGID FIELD        ZA02206
MNTTP900 EQU   *                                                ZA02206
         OC    1(3,WRKR2),UCBFSER+3      MOVE SECOND MSGID      ZA02206
         BZ    MNTTP901                 NO MSID                 ZA02206
         LA    WRKR2,4(WRKR2)           NEXT MSGID FIELD        ZA02206
MNTTP901 EQU   *                                                ZA02206
         OC    1(3,WRKR2),RSMWOFST+1      MOVE IN ID            ZA02206
         BZ    MNTTP902                 NO MSGID                ZA02206
         LA    WRKR2,4(WRKR2)           NEXT MSGID              ZA02206
MNTTP902 EQU   *                                                ZA02206
         LA    WRKR1,4                                          ZA0206
         SR    WRKR2,WRKR1              MOVE BACK 4 BYTES       ZA02206
         MVI   0(WRKR2),X'80'           END OF DOM LIST FLAG    ZA02206
         LA    WRKR2,RSREGSAV+12        ADDR OF FIRST MSGID     ZA02206
         DOM   MSGLIST=(1)                                          MCS
         XC    RSMWOFST(4),RSMWOFST      ZERO MSGID DOM         ZA02206
         XC    UCBFSER(6),UCBFSER       ZERO MSGID              ZA02206
         NI    UCBSTAB,X'FF'-UCBBNUL    ZERO MSGID BIT          ZA02206
TESTERR  EQU   *                                                    MCS
*
         TM    RSECBAD,PERMERR     I/O ERROR
         BCR   1,DSCNTR                 NO BRANCH
         CLI   RSCCW1,SEARCH       READING IN JFCB
         BE    MNTTP120       BRANCH IF YES
         CLI   RSECBAD,INTECEPT         TST FOR INTERCEPT       YM05549
         BNE   MNTTP112                 BR IF NOT               YM05549
         CLI   RSCCW1,REWIND            REWIND COMMAND          YM05549
         BE    MNTTP110                 YES-REISSUE REWIND      YM05549
         B     MNTTP130                 NO-BR TO ERR RTN        YM05549
MNTTP112 EQU   *                                                YM05549
*
         TM    TABTPLBL,SL         STANDARD LABELS
         BCR   8,DSCNTR                 NO  BRANCH
*
         TM    RSIOBCSW+4,UNITCHK  UNIT CHECK
         BO    MNTTP130            YES BRANCH PERM I/O ERROR
*
         TM    RSIOBCSW+5,WRONGLEN WRONG LENGTH RECORD
         BZ    MNTTP130            NO BRANCH PERM I/O ERROR
*
         TM    RSIOBCSW+4,UNITEXP       TAPE MARK FOUND?        ZA01325
         BNO   MNTTP130                 NO BRANCH               ZA01325
         CLI   RSCCW1,CCWFSR            FORWARD SPACE CMD?      ZA01325
         BNE   MNTTP130                 NO BRANCH               ZA01325
         MVI   RSCCW1,REWIND            REWIND TAPE CMD         ZA01325
         MVI   RSCCW1+4,X'00'           ONLY ONE CCW            ZA01325
         LA    DSCNTR,MNTTP055          RETURN ADDR FROM REWIND ZA01325
         B     MNTTP110                 GO REWIND THE TAPE      ZA01325
*
************   ************   ************   ************   ***********
*
*      FORM CCW & PLACE UNIT ADDRESS IN DEB
*
************   ************   ************   ************   ***********
*
MNTTP115 EQU   *
         ST    UCBR,RSDEBUCB  PLACE UCB ADDRESS IN DEB
         MVC   RSDEBUCB(D1),DEBSDVM     SET MODE CODE            Y02076
         TM    RSDEBUCB,MODECLR         IS THIS NINE TRACK       99223
         BO    MNTTP116                 YES. BRANCH              99223
         NI    RSDEBUCB,MODECLR    CLEAR ALL BUT DENSITY
         OI    RSDEBUCB,SETMODE    SET EVEN PAR.,TRANS MODE,CONVERT OFF
MNTTP116 EQU   *                                                  99223
         LA    TCBR,X'50'              SET CCW BYTE COUNT        A40520
         ST    TCBR,RSCCW1+4                                     A40520
         LA    TCBR,RSJFCB        LOAD DATA AREA ADDRESS
         ST    TCBR,RSCCW1        DATA AREA ADDRESS TO CHANNEL PROGRAM
         MVI   RSCCW1,X'0F'            SET REWIND - UNLOAD       A40520
*                                       COMMAND                  A40520
         BR    DSCNTR             RETURN
         EJECT
*
************   ************   ************   ************   ***********
*  TEST IF DEQ AT DISMOUNT FACILITY WERE ACTIVE AND CAN BE     @ZA18506
*  REESTABLISHED. IF SO, DEQ ALL VOLUME SERIALS UP TO BUT NOT  @ZA18506
*  INCLUDING THE ONE TO WHICH THE DCB IS NOW OPEN.             @ZA18506
************   ************   ************   ************   ***********
*                                                              @ZA18506
MNTTP118 EQU   *                  CHECK FOR DEQ                @ZA18506
*                                                              @ZA18506
         TM    TABFLG1,TABTAPE    IS THIS A TAPE               @ZA18506
         BZR   DSCNTR             RETURN IF NO                 @ZA18506
         LA    TCBR,TABJFCB       JFCB TTR IF LESS THAN OR     @ZA18506*
                                  EQUAL TO 5 VOLUMES           @ZA18506
         TM    TABFLG2,TABG5V     ARE THERE 5 VOLUMES          @ZA18506
         BZ    MNTTP12A           BRANCH IF NOT 5              @ZA18506
         LA    TCBR,TABVLID5+D3   JFCBTTR IF 5 VOLUMES         @ZA18506
*                                                              @ZA18506
MNTTP12A EQU   *                  LOCATE JFCB                  @ZA18506
*                                                              @ZA18506
         IECRES LOCJFCB,(TCBR)    GET JFCB ADDR IN TCBR        @ZA18506
         TM    JFCBFLG3-INFMJFCB(TCBR),JFCDQDSP WAS THE DEQ    @ZA18506*
                                  FACILITY IN USE              @ZA18506
         BZR   DSCNTR             RETURN IF NOT                @ZA18506
         L     CTABLR,TABDCBAD-D1 DCB                          @ZA18506
         L     DEBR,DCBDEBAD      DEB                          @ZA18506
         TM    DEBOPATB,OUTP      OUTPUT TAPE                  @ZA18506
         BNOR  DSCNTR             RETURN IF INPUT/RDBACK       @ZA18506
*                                                              @ZA18506
         TESTAUTH FCTN=1          APF AUTHORIZED               @ZA18506
*                                                              @ZA18506
         LTR   WRKR6,WRKR6        ZERO IF AUTHORIZED           @ZA18506
         BNZR  DSCNTR             RETURN IF NOT AUTHORIZED     @ZA18506
*                                                              @ZA18506
*  RESTORE DEQ AT DISMOUNT FACILITY ENVIRONMENT.               @ZA18506
*  SET UCBDQDSP IN CURRENT VOLUME AND DEQ ALL VOLUME SERIALS   @ZA18506
*  IN THE JFCB AND JFCBX'S UP TO DEBVOLSQ'S VOLUME.            @ZA18506
*                                                              @ZA18506
         L     UCBR,DEBSUCBA      UCB OF CURRENT VOLUME        @ZA18506
         OI    UCBTFL1,UCBDQDSP   RESET DEQ STATUS             @ZA18506
*                                                              @ZA18506
*  SET UP FOR DOUBLE LOOP                                      @ZA18506
*    DEBR - NUMBER OF VOLUMES TO BE DEQED                      @ZA18506
*    WRKR3 - NUMBER OF VOLUMES IN JFCB(5) OR JFCBX(15)         @ZA18506
*    DCBR - ADDRESS OF NEXT JFCBX'S TTR                        @ZA18506
*    UCBR - ADDRESS OF VOLUME TO DEQ                           @ZA18506
*    TCBR - ADDRESS OF INITIATOR TCB                           @ZA18506
*                                                              @ZA18506
         LA    UCBR,DEBSUCBA+L'DEBSUCBA ACCESS METHOD SECTION  @ZA18506
         SR    DEBR,DEBR          ZERO FOR IC                  @ZA18506
         IC    DEBR,DEBVOLSQ-DEBACSMD+D1(UCBR) VOLUME SEQUENCE @ZA18506
         CH    DEBR,CONSTONE      RESTART ON FIRST VOLUME      @ZA18506
         BER   DSCNTR             RETURN IF NONE TO DEQ        @ZA18506
         BCTR  DEBR,0             NUMBER OF VOLUMES TO DEQ     @ZA18506
         LA    DCBR,JFCBEXAD-INFMJFCB(TCBR) ADDR OF JFCBX TTR  @ZA18506
         LA    WRKR3,L'JFCBVOLS/L'UCBVOLI NUMBER OF JFCB VOLS  @ZA18506
         LA    UCBR,JFCBVOLS-INFMJFCB(TCBR) FIRST VOLUME       @ZA18506
         L     TCBR,RSTCBAD       TCB                          @ZA18506
         USING TCB,TCBR                                        @ZA18506
         L     TCBR,TCBJSCB       JSCB                         @ZA18506
         DROP  TCBR                                            @ZA18506
         L     TCBR,JSCBTCBP-IEZJSCB(TCBR) INITIATOR TCB       @ZA18506
         MVC   DEQPLIST,DEQLIST   MOVE LIST FOR DEQ            @ZA18506
*                                                              @ZA18506
MNTTP12C EQU   *                  LOOP FOR JFCB AND EACH JFCBX @ZA18506
*                                                              @ZA18506
MNTTP12E EQU   *                  LOOP FOR EACH VOLUME         @ZA18506
*                                                              @ZA18506
         DEQ   (,(UCBR)),TCB=(TCBR),RET=HAVE,MF=(E,DEQ) DEQ    @ZA18506
         BCT   DEBR,MNTTP12G      BRANCH IF MORE VOLUMES LEFT  @ZA18506
*                                                              @ZA18506
         BR    DSCNTR             RETURN IF NO MORE VOLUMES    @ZA18506
*                                                              @ZA18506
MNTTP12G EQU   *                  MORE VOLUMES LEFT TO DEQ     @ZA18506
*                                                              @ZA18506
         LA    UCBR,L'UCBVOLI(,UCBR) INCREMENT TO NEXT VOLSER  @ZA18506
         BCT   WRKR3,MNTTP12E     BR IF MORE VOLS IN JFCB(X)   @ZA18506
         IECRES LOCJFCB,(DCBR)    GET NEXT JFCBX               @ZA18506
         LA    UCBR,JFCBXVOL-JFCBX(,DCBR) ADDR OF FIRST VOLSER @ZA18506
         LA    DCBR,JFCBXTTR-JFCBX(,DCBR) NEXT JFCBX TTR ADDR  @ZA18506
         LA    WRKR3,D15          NUMBER OF VOLSERS IN JFCBX   @ZA18506
         B     MNTTP12C           BR TO DEQ VOLS IN JFCBX      @ZA18506
         EJECT
*
************   ************   ************   ************   ***********
*
*                   ERROR RETURN CODES
*
************   ************   ************   ************   ***********
*
MNTTP120 EQU   *
*
         MVI   RSRETCOD+1,ERR026   26 ERROR READING IN JFCB    @ZSUT222
         B     MNTTP140            BRANCH TO XCTL
*
MNTTP125 EQU   *
         MVI   RSRETCOD+1,ERR030   30 I/O ERROR IN NSL ROUTINE @ZSUT222
         B     MNTTP140            BRANCH TO XCTL
*
MNTTP130 EQU   *
         MVI   RSRETCOD+1,ERR040   40 ERROR IN READ VOL LABEL  @ZSUT222
         B     MNTTP140            BRANCH TO XCTL
*
MNTTP131 EQU   *                                                YM05550
         MVI   RSRETCOD+1,ERR046        NO SCU ERROR           @ZSUT222
         B     MNTTP140                 BR TO XCTL              YM05550
*
MNTTP135 EQU   *
         MVI   RSRETCOD+1,ERR044   44 NO UCB AVAILABLE         @ZSUT222
*
MNTTP140 EQU   *
         MVC   RSREGSAV(8),MODID   SAVE NAME OF MODULE THAT    @ZSUT222
*                                  HAS DETECTED THE ERROR.     @ZSUT222
         STM   0,15,RSREGSAV+8     SAVE CURRENT REGISTERS.     @ZSUT222
         MVI   RSPPM+4,C'V'        XCTL TO IGC0V05B                 MCS
*
         B     MNTTP100            BRANCH TO GET WORKAREA FOR XCTL
         EJECT                                                 @G32DSMI
***************************************************************@G32DSMI
*   RAC INPUT AUTHORIZATION CHECK                             *@G32DSMI
***************************************************************@G32DSMI
RACINPUT TM    TABFLG4,TABRCINP         PREVIOUSLY CHECKED OK  @G32DSMI
         BOR   DSCNTR                   YES-BYPASS CHECK       @G32DSMI
         L     WRKR2,CVTPTR             ADDRESS OF CVT         @G32DSMI
         USING CVT,WRKR2                                       @G32DSMI
         L     WRKR2,CVTRAC             ADDRESS OF RACV CVT    @G32DSMI
         LTR   WRKR2,WRKR2              RACF ACTIVE            @G32DSMI
         BZR   DSCNTR                   RACF NOT ACTIVE RETURN @G32DSMI
         USING RCVT,WRKR2                                      @G32DSMI
         TM    RCVTSTA1,RCVTTAPE        TAPE OPTION SET        @G32DSMI
         BZR   DSCNTR                   NOT SET - RETURN       @G32DSMI
         DROP  WRKR2                                           @G32DSMI
**  BYPASS RACF CHECKING IF JSCBPASS IS SET                    @G32DSPD
         USING PSA,0                    ADDRESS THE PSA        @G32DSPD
         L     WRKR2,PSATOLD            GET CURRENT TCB ADDR   @G32DSPD
         USING TCB,WRKR2                ADDRESS THE TCB        @G32DSPD
         L     WRKR2,TCBJSCB            GET THE JSCB           @G32DSPD
         USING IEZJSCB,WRKR2            ADDRESS THE JSCB       @G32DSPD
         L     WRKR2,JSCBACT            GET ACTIVE JSCB        @G32DSPD
         TM    JSCBSWT1,JSCBPASS        BYPASS RACF SET ?      @G32DSPD
         BOR   DSCNTR                   YES,RETURN             @G32DSPD
         DROP  WRKR2                                           @G32DSPD
         MVC   RACHECK(LRACHECK),MRACHECK INITLZE PARM LIST    @G32DSMI
         RACHECK ENTITY=UCBVOLI,        ISSUE RACHECK          @G32DSMIX
               ATTR=READ,                                      @G32DSMIX
               MF=(E,RACHECK)                                  @G32DSMI
         B     RACITAB(WRKR6)           CHECK RETURN CODE      @G32DSMI
RACITAB  EQU   *                        BRANCH TABLE RACHECK   @G32DSMI
         OI    TABFLG4,TABBYPSW         AUTHORIZED-NO PASSWORD @G32DSMI
         B     RACINP10                 AUTHORIZED OR NOT DEF  @G32DSMI
         B     RACERR00                 NOT AUTHORIZED-ERROR   @G32DSMI
RACINP10 EQU   *                        AUTHORIZED OR NOT DEF  @G32DSMI
         OI    TABFLG4,TABRCINP         AUTHORIZED INPUT       @G32DSMI
         BR    DSCNTR                   RETURN                 @G32DSMI
***************************************************************@G32DSMI
*   RAC OUTPUT AUTHORIZATION CHECK                            *@G32DSMI
***************************************************************@G32DSMI
RACOUTPT EQU   *                                               @G32DSMI
         L     WRKR2,CVTPTR             CVT ADDRESSABILITY     @G32DSMI
         USING CVT,WRKR2                                       @G32DSMI
         L     WRKR2,CVTRAC             RACF CVT ADDRESSABILITY@G32DSMI
         LTR   WRKR2,WRKR2              RACF ACTIVE            @G32DSMI
         BZR   DSCNTR                   NO - RETURN            @G32DSMI
         USING RCVT,WRKR2                                      @G32DSMI
         TM    RCVTSTA1,RCVTTAPE        TAPE PROTECTION ACTIVE @G32DSMI
         BZR   DSCNTR                   NO-AUTHORIZED RETURN   @G32DSMI
         DROP  WRKR2                                           @G32DSMI
**  BYPASS RACF CHECKING IF JSCBPASS IS SET                    @G32DSPD
         USING PSA,0                    ADDRESS THE PSA        @G32DSPD
         L     WRKR2,PSATOLD            GET CURRENT TCB ADDR   @G32DSPD
         USING TCB,WRKR2                ADDRESS THE TCB        @G32DSPD
         L     WRKR2,TCBJSCB            GET THE JSCB           @G32DSPD
         USING IEZJSCB,WRKR2            ADDRESS THE JSCB       @G32DSPD
         L     WRKR2,JSCBACT            GET ACTIVE JSCB        @G32DSPD
         TM    JSCBSWT1,JSCBPASS        BYPASS RACF SET ?      @G32DSPD
         BOR   DSCNTR                   YES,RETURN             @G32DSPD
         DROP  WRKR2                                           @G32DSPD
         MVC   RACHECK(LRACHECK),MRACHECK INITLZE PARM LIST    @G32DSMI
         RACHECK ENTITY=UCBVOLI,        ISSUE RACHECK          @G32DSMIX
               ATTR=UPDATE,                                    @G32DSMIX
               MF=(E,RACHECK)                                  @G32DSMI
         B     RACOTAB(WRKR6)           CHECK RETURN CODE      @G32DSMI
RACOTAB  EQU   *                        BRANCH TABLE RACHECK   @G32DSMI
         OI    TABFLG4,TABBYPSW         AUTHORIZED NO PASSWORD @G32DSMI
         B     RACOUT10                 AUTHORIZED OR NOT DEF  @G32DSMI
         TM    DEBOPATB,OUTP            OPEN FOR INPUT         @G32DSMI
         BO    RACERR00                 NO-OUTPUT ERROR        @G32DSMI
         BAL   DSCNTR,RACINPUT          INPUT AUTHORIZED       @G32DSMI
*   FORMAT MESSAGE IEC068A AND ISSUE.                          @G32DSMI
         BAL   DSCNTR,MNTTP145          FORMAT MOUNT MESSAGE   @G32DSMI
         MVC   MSGAREA+7(L'FPMSG068),FPMSG068 FORMAT MESSAGE   @G32DSMI
         WTO   MF=(E,MSGAREA)           WTO PARM LIST          @G32DSMI
         B     MNTTP040                 UNLOAD TAPE            @G32DSMI
RACOUT10 EQU   *                        AUTHORIZED FOR OUTPUT  @G32DSMI
         OI    TABFLG4,TABRCOUT         SET FLAG FOR TRACE     @G32DSMI
         BR    DSCNTR                   RETURN TO CALLER       @G32DSMI
         EJECT                                                 @G32DSMI
***************************************************************@G32DSMI
*   USER NOT AUTHORIZED TO RAC VOLUME SEND MESSAGE            *@G32DSMI
***************************************************************@G32DSMI
RACERR00 MVI   RSRETCOD+1,ERR255        RAC TYPE ERROR         @ZSUT222
*   SET UP PARAMETER LIST FOR IGCMSG6C.                        @G32DSMI
         MVC   OPID,K05BID              CALL ER=K05B           @G32DSMI
         MVC   OPRETCOD,K05BID          RETURN FOR IHJ102I     @G32DSMI
         LA    WRKR6,UCBVOLI            VOLSER                 @G32DSMI
         ST    WRKR6,OPADDVOL                                  @G32DSMI
         LA    WRKR2,OPID                                      @G32DSMI
         ST    WRKR2,OPPARM                                    @G32DSMI
         LA    WRKR2,OPPARM                                    @G32DSMI
         LA    WRKR4,RSREGSAV     SET UP SAME AREA FOR MSG6C   @ZA29067
         LINK  EP=IGCMSG6C              SEND MESSAGE           @G32DSMI
         B     MNTTP140                                        @G32DSMI
*
************   ************   ************   ************   ***********
*
*                   FORMAT MOUNT MESSAGE
*
************   ************   ************   ************   ***********
*
MNTTP145 EQU   *
*
         BAL   TCBR,MNTTP075       READ IN JFCB
*
         MVC   MSGID+7(44),JFCBDSNM     D.S. NAME TO MOUNT MSG
         MVI   MSGID+6,SLASH
         MVC   MSGAREA(19),MOUNTMS MOUNT INFO TO MESSAGE AREA
         MVC   MSGUCB(3),UCBNAME    UNIT NAME
         MVC   MSGID(6),TABVLID1   VOL ID TO MESSAGE AREA
         XC    MSGID+51(4),MSGID+51 CLEAR ROUTE AND DESC CODES @ZA07612
         MVI   MSGID+51,DESCODE    MOVE DESCRIPTOR CODE TO MSG @ZA07612
         BR    DSCNTR             RETURN
*
MNTTP150 EQU   *
         BAL   DSCNTR,MNTTP115    FORM CHANNEL PROGRAM
*
         B     MNTTP045            BRANCH TO SET CCW OP CODES
*
***********************************************************************
*
*     CONSTANTS USED IN REPI/O
*
***********************************************************************
*
CONSTONE DC    X'0001'               DMCT                        Y02076
*
MOUNTMS  DC    X'00458000'         LENGTH OF MESSAGE           @ZA07612
         DC    C'IEC400A M YYY,'  MOUNT MESSAGE
*
VOL1     DC    C'VOL1'             COMPARE AGAINST 1ST FOUR CHARACTERS
*                                  OF TAPE LABEL
ASCIVOL  DC    X'564F4C31'              ASCII CODE FOR 'VOL1'    S20038
*
HDR2     DC    C'HDR2'                  CONSTANT FOR HDR2 LABEL   99223
FPMSG1   DC    C'1A F'                  FILE PROTECT MESSAGE 1   S20038
*
FPMSG2   DC    C'2D'                    FILE PROTECT MESSAGE 2   S20038
FPMSG068 DC    C'068A U'                                       @G32DSMI
*                NAMES OF MODULES THAT CONTROL MAY BE PASSED TO       *
*                FROM THIS MODULE.                                    *
*
NAMENSL  DC    C'NSLRHDR'               NONSTANDARD LABEL        S20038
*                                       ROUTINE NAME             S20038
NAMEDA   DC    C'IGC0M05B'          D.A. MOUNT
MODID    DC    CL8'IGC0K05B'        MODULE ID                  @ZSUT222
*
DEQLIST  DS    0F                   START OF VOLUME DEQ LIST   @ZA18506
         DEQ   (SYSZVOLS,,6,SYSTEM),TCB=0,MF=L DEQ PARMLIST    @ZA18506
DEQLNGTH EQU   *-DEQLIST            LENGTH OF LIST TO MOVE     @ZA18506
SYSZVOLS DC    C'SYSZVOLS'          MAJOR NAME                 @ZA18506
HW8      DC    H'8'                     LENGTH DEB PREFIX      @G32DSMI
K05BID   DC    H'4'                     D05B ID IGCMSG6C       @G32DSMI
DUMYPFX  DS    0CL6                     DUMMY PREFIX           @G32DSMI
***********************************************************************
*
*     CHANNEL PROGRAM USED BY REPI/O
*
***********************************************************************
*
CCWSCR   DC    X'40000005'              SEARCH CCW               S20038
QMNGWALN DC    AL3(280)                 24(P.L.)+256(W.A.)       Y02076
SP253    DC    AL1(253)                 SUBPOOL 253              Y02076
ADDRBYTS EQU   7                        GETMAIN/FREEMAIN PARMS   Y02076
HIORDER  EQU   8                        HIGH ORDER BYTE          Y02076
ALLBYTS  EQU   15                       FOUR BYTE ICM MASK       YM5965
QMWAOFST EQU   24                       QMNGR WA OFSET FRM P.L.  Y02076
JFCBLNGH EQU   176                      JFCB LENGTH              Y02076
RTCD20   EQU   X'20'                                                MCS
RTCD28   EQU   X'28'                                                MCS
RTCDA0   EQU   X'A0'                                                MCS
DESCODE  EQU   X'40'                                                MCS
CPDSURST EQU   X'40'                    CHKPT DS USED FOR RSTRT  Y02076
*
*   RACHECK PARAMETER LIST                                     @G32DSMI
*
MRACHECK RACHECK CLASS='TAPEVOL',       RACHECK PARM LIST      @G32DSMIX
               MF=L                                            @G32DSMI
LRACHECK EQU   *-MRACHECK               LENGTH PARM LIST       @G32DSMI
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0K05B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         IEFQMIOP                                                Y02076
*        ICHPRCVT                                              @G32DSMI
         ICHPRCVT
         EJECT
         IEFJESCT                                                Y02076
         EJECT
MNTTIOT  DSECT
         IEFTIOT1
         EJECT
MNTUCB   DSECT
         IEFUCBOB
         EJECT
         IHJDSTAB                                                Y02076
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBRER EQU   X'01'                    REDUCED ERROR RECOVERY  YA00628
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSBUFSEG DS    0CL176
RSJFCB   EQU   RSBUFSEG
*
***********************************************************************
*
*                  JFCB
*
***********************************************************************
         IEFJFCBN                                                Y02076
         EJECT
CVT      DSECT
         CVT
         EJECT
         IKJTCB                                                @G32DSPD
         EJECT                                                 @G32DSPD
         DCBD  DSORG=PS
         EJECT                                                 @G32DSPD
JFCBX    DSECT                                                 @ZA18506
         IEFJFCBX                                              @ZA18506
         EJECT                                                 @G32DSPD
         IHAPSA                                                @G32DSPD
         EJECT                                                 @G32DSPD
         IEZJSCB                                               @G32DSPD
         EJECT                                                 @G32DSPD
*
*
         IEZDEB                                                  Y02076
         EJECT
         IEEVRSWA VER=3            AOS2 VERSION OF WORK AREA     Y01909
*
*        THE MESSAGE AREA USED TO WRITE-TO-OPERATOR IS IN THE WORKAREA*
*        THE FOLLOWING EQUATES DEFINE THE MESSAGE AREA                *
*                                                                     *
*                   IGGXXXXX M YYY,XXXXXX                             *
*
MSGAREA  EQU   RSJFCB+92           LL00   LENGTH
MSGUCB   EQU   RSJFCB+106          UNIT
MSGID    EQU   RSJFCB+110          VOL ID
*
*              OPERATOR'S REPLY READ IN AND MESSAGE AREA AND ECB.     *
*
REPLY    EQU   RSJFCB+142          READ IN AREA
REPLYLTH EQU   RSJFCB+84          MESSAGE TO OPERATOR
REPLYECB EQU   RSJFCB+88          ECB
*
BLKCT    EQU   DCBBLKCT-IHADCB      DISPL TO BLOCK COUNT IN DCB
QMNPRMWA EQU   RSERAS00           SAVE QMNGRIO PARM LST ADR      Y02076
*
         ORG   RSREGSAV           VOLUME DEQ PARAMETER LIST    @ZA18506
DEQPLIST DS    0CL(DEQLNGTH)      START OF PARMLIST-TCB ADDR   @ZA18506
         DS    F                  TCB ADDRESS                  @ZA18506
DEQ      EQU   *                  MACRO CALL PARM LIST         @ZA18506
*
         ORG   RSREGSAV                                        @G32DSMI
*   PARAMETER LIST FOR IGCMSG6C                                @G32DSMI
OPPARM   DS    A                        PARAMETER LIST         @G32DSMI
OPID     DS    H                        MODULE IDENTIFIER      @G32DSMI
OPRETCOD DS    H                        RETURN CODE            @G32DSMI
OPADDVOL DS    A                        ADDRESS VOLSER         @G32DSMI
         ORG   RSREGSAV                                        @G32DSMI
RACHECK  EQU   *                                               @G32DSMI
         END
