*
         COPY  LCGASMSW
*
IGC0S06C CSECT
         TITLE 'IGC0S06C (IHJACP70) CHKPT MESSAGE MODULE'
***********************************************************************
*                                                                     *
*TITLE   CHKPT MESSAGE MODULE                                         *
*                                                                     *
*STATUS  CHANGE LEVEL 000                                             *
*                                                                     *
*FUNCTION/OPERATION - IGC0S06C WILL DO THE FOLLOWING                  *
*                                                                     *
*   1.) ISSUE A GETMAIN FOR 160 BYTES (SUBPOOL 250) TO BE USED AS A   *
*       REGISTER SAVE AREA AND A MESSAGE AREA                         *
*                                                                     *
*   2.)  WRITE ONE OF THE FOLLOWING MESSAGES TO THE CONSOLE -         *
*        A.) IHJ000I CHKPT JJJJJJJJ (DDDDDDDD) NOT TAKEN (XXX)        *
*            WHERE                                                    *
*              JJJJJJJJ = JOBNAME                                     *
*              DDDDDDDD = DDNAME OF THE DD STATEMENT FOR THE CHKPT    *
*                         DATA SET                                    *
*              XXX      = ERROR MESSAGE CODE                          *
*            THIS MESSAGE IS ISSUED WHEN AN ENVIRONMENT ERROR IS      *
*            DISCOVERED BY ONE OF THE CHECKPOINT MODULES              *
*                                                                     *
*            IF THE ERROR CODE IS 001, INDICATING THAT AN INVALID     *
*            PARAMETER LIST HAD BEEN PASSED TO CHECKPOINT, THE DDNAME *
*            FIELD OF THE MESSAGE WILL BE BLANK.                      *
*                                                                     *
*        B.) IHJ001I JJJJJJJJ (DDDDDDDD,UUUUU,SSSSSS) INVLD CCCCCCCCCCC
*                                              CCCCC (XXX)            *
*            WHERE                                                    *
*              JJJJJJJJ = JOB NAME                                    *
*              DDDDDDDD = DDNAME                                      *
*              UUUUU    = UNIT NAME                                   *
*              SSSSSS   = VOLUME SERIAL NUMBER                        *
*              CCCCCCCC = CHECKID                                     *
*              XXX      = ERROR MESSAGE CODE                          *
*            THIS MESSAGE IS ISSUED WHEN AN ERROR OCCURS AFTER THE    *
*            CHECKPOINT HEADER RECORD HAS BEEN WRITTEN                *
*                                                                     *
*        C.) IHJ002I JJJJJJJJ (DDDDDDDD,UUUUU,SSSSSS) ERROR CCCCCCCCCCC
*                                              CCCCC  (XXX)           *
*            (SYMBOLS SAME AS IN MESSAGE B)                           *
*                                                                     *
*            THIS MESSAGE IS ISSUED WHEN A VALID CHECKPOINT ENTRY HAS *
*            BEEN WRITTEN BUT, EITHER AN I/O ERROR OCCURRED WHEN      *
*            IGC0Q06C TRIED TO WRITE THE UPDATED JCT BACK TO THE      *
*            SCHEDULER WORK AREA, OR ERRORS OCCURRED WHEN WIJOURN     *
*            MACRO WAS ISSUED TO CHECKPOINT VIO DATA SETS TO THE JOB  *
*            JOURNAL, OR AN ERROR OCCURRED WHEN RESTORING I/O REQUESTS*
*            THAT WERE PURGED IN IGC0506C.                            *
*                                                                     *
*        D.) IHJ005I JJJJJJJJ (DDDDDDDD,UUUUU,SSSSSS) ENQS  CCCCCCCCCCC
*                                              CCCCC                  *
*            (SYMBOLS SAME AS IN MESSAGE B)                           *
*                                                                     *
*            THIS MESSAGE INDICATES THAT A VALID CHECKPOINT ENTRY HAS *
*            BEEN WRITTEN AND NO ERRORS HAVE OCCURRED.  HOWEVER, THE  *
*            USER WAS ENQUEUED ON RESOURCES WHEN THE CHKPT WAS TAKEN  *
*            AND IS WARNED BY THIS MESSAGE THAT THE ENQUEUES WILL NOT *
*            BE RE-ESTABLISHED IF RESTART OCCURS.                     *
*                                                                     *
*            E.) IHJ004I JJJJJJJJ (DDDDDDDD,UUUUU,SSSSSS) CHKPT CCCCCCC
*                                              CCCCC                  *
*            (SYMBOLS SAME AS IN MESSAGE B)                           *
*                                                                     *
*            THIS MESSAGE INDICATES THAT A VALID CHECKPOINT ENTRY HAS *
*            BEEN WRITTEN AND NO ERRORS HAVE OCCURRED.                *
*                                                                     *
*   3.) IF A RESTORE ERROR WAS ENCOUNTERED, AFTER ANOTHER ERROR WAS   *
*       PREVIOUSLY SET, THE MODULE SETS UP THE MSG CODE (215) AND THE *
*       RETURN CODE (X'18), THEN PRINTS A SECOND MESSAGE.             *
*                                                                     *
*   4.) CLOSE THE CHKPT DATA SET IF CHKPT OPENED IT                   *
*                                                                     *
*   5.) FREE THE WORK AREA                                            *
*                                                                     *
*   6.) PLACE THE RETURN CODE IN REGISTER 15 AND RETURN (SVC 3) TO THE
*        USER                                                         *
*                                                                     *
*ENTRY POINTS  IGC0S06C VIA XCTL FROM IGC0Q06C                        *
*                                                                     *
*INPUT   1.) ADDRESS OF CHKPT'S SVRB IN REGISTER 1                    *
*                                                                     *
*        2.) RETURN CODE IN THE FIRST TWO BYTES OF THE SVRB EXTENDED  *
*            SAVE AREA, THAT IS: CERRETCD=(00XX) WHERE XX = RETURN    *
*            CODE 00,08,0C OR 18. IF CERRETCD=(18XX), THIS INDICATES  *
*            THAT A SECOND MESSAGE (RESTORE ERROR) MUST BE PRINTED.   *
*                                                                     *
*        3.) A MESSAGE CODE IN THE SECOND TWO BYTES OF THE SVRB       *
*            EXTENDED SAVE AREA                                       *
*                  MESSAGE       MESSAGE CODE BYTES (CERMSGCD)        *
*                     A              X'00XX' (XX=ERROR CODE IN HEX)   *
*                     B              X'03XX' (XX = ERROR CODE IN HEX) *
*                     C              X'02XX' (XX = ERROR CODE IN HEX) *
*                     D              X'0100'                          *
*                     E              X'0000'                          *
*                                                                     *
*        4.) FOR MESSAGE A, THE JOBNAME AND DDNAME WILL BE IN BYTES   *
*            16-31 OF THE EXTENDED SAVE AREA.  IF THE ERROR CODE IS 01,
*            THE DDNAME WILL NOT BE PRESENT                           *
*                                                                     *
*        5.) IF MESSAGE B,C,D, OR E IS TO BE ISSUED, BYTES 16 - 31    *
*            OF THE SVRB EXTENDED SAVE AREA WILL CONTAIN THE CHECKID, *
*            BYTES 32-35 THE TIOT ADDRESS.                            *
*        6.) ADDRESS OF THE DCB FOR THE CHKPT DATA SET WITH HIGH ORDER
*            BYTE SET TO X'80' IF CHKPT OPENED THE DCB.               *
*                                                                     *
*OUTPUT  RETURN CODE IN REGISTER 15 AND CONSOLE MESSAGE AS DESCRIBED  *
*        ABOVE                                                        *
*                                                                     *
*EXTERNAL ROUTINES  NONE                                              *
*                                                                     *
*SVCS USED  GETMAIN/FREEMAIN (SVC 10), WTO (SVC 35), CLOSE (SVC 20),  *
*           EXIT (SVC 3)                                              *
*                                                                     *
*EXITS-NORMAL RETURN TO CALLER OF CHKPT VIA SVC 3                     *
*     -ERROR  NONE                                                    *
*                                                                     *
*TABLES/WORKAREAS-CREATED  MSG1SECT AND MSG2SECT TO DESCRIBE THE MSGS.*
*                 -REFERENCED CERSECT,TCB,TIOT,UCB,DCB                *
*                                                                     *
*ATTRIBUTES  REENTRANT,SUPERVISOR STATE, TYPE 4 SVC ROUTINE           *
*                                                                     *
*RESTRICTIONS  NONE                                                   *
*                                                                     *
*NOTES  NONE                                                          *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         BALR  RB,ZERO             ESTABLISH MODULE BASE
         USING *,RB
         B     BEGIN               BRANCH AROUND EYE CATCHER
         CNOP  0,8                 ALIGN TO A DOUBLE WORD BOUNDARY
         DC    C'IGC0S06C'         CSECT NAME
BEGIN    EQU   *
         LR    R9,R1               GET SVRB ADDRESS FROM R1
         USING CERSECT,R9          ESTABLISH ADDRESSABILITY
         L     R0,CMGETLN          LOAD LENGTH OF MESSAGE AREA
         GETMAIN   R,LV=(0)
         LR    RD,R1               GET ADDRESS OF AREA TO FREE
BEGIN2   EQU   *                   'BRANCH TO' PT. FOR 2ND MSG   Y02076
         LA    R8,CON72(ZERO,RD)   SAVE AREA+72 = MSG. AREA
         MVI   ZERO(R8),SPACE      BLANK OUT
         MVC   ONE(CON87,R8),ZERO(R8)   MESSAGE AREA
         CLI   CERRETC1,HEXZERO    IS THE RETURN CODE 0
         BE    CMMSG2              BRANCH IF YES TO ISSUE TYPE 2 MSG.
         CLI   CERMSGCD,HEXZERO    IS TYPE 2 MSG. INDICATED
         BNE   CMMSG2              BRANCH IF YES
         SPACE
*  MESSAGE A IS TO BE ISSUED, JOBNAME AND DDNAME ARE IN BYTES 16-31
*  OF THE SVRB EXTENDED SAVE AREA
         SPACE
         USING MSG1SECT,R8
         MVC   MSG1LN(PLIST1LN),CMNOTMSG     MOVE IN MSG. 1 SHELL
         MVC   MSG1JOBN(8),CERJOBNM    MOVE JOB NAME TO MESSAGE
         CLI   CERMSGC1,HEXONE     BAD PARAMETER LIST ERROR
         BE    CMGOCNV             BRANCH IF YES--DDNAME NOT AVAILABLE
         MVC   MSG1DDNM(8),CERDDNM     MOVE DDNAME TO MESSAGE
CMGOCNV  BAL   R3,CMCVD            GO TO CONVERT CODE TO EBCDIC
         MVC   MSG1CODE(THREE),MSG1WK1N    MOVE CODE TO MESSAGE  Y02076
CMWTO    LR    R1,R8               SET UP R1 FOR WTO
         WTO   ,MF=(E,(1))         ISSUE WTO
***********************************************************************
*  IF RESTORE ERROR, SET IN N06C, WAS DETECTED AFTER A PREVIOUS ERROR *
*  WAS ENCOUNTERED, SET UP FOR PRINTING A SECOND MSG (215).           *
***********************************************************************
CMTWOMSG CLI   CERRETCD,RESTERR    TEST IF RESTORE ERROR         Y02076
         BNE   CEROPTST            BRANCH IF NOT                 Y02076
         MVI   CERMSGCD,CMERRID    SET 'ERROR' MSG CODE(2)       Y02076
         MVI   CERMSGC1,RESTMSGC   SET RESTORE ERROR(215)        Y02076
         MVI   CERRETCD,HEXZERO    ZERO FIRST BYTE-RET CODE      Y02076
         MVI   CERRETC1,RESTERR    SET RET CODE (X'18')          Y02076
         B     BEGIN2              GO ISSUE RESTORE ERR MSG      Y02076
CEROPTST EQU   *                   PREPARE FOR EXIT              Y02076
         L     R4,CERDCBAD         LOAD DCB ADDRESS              Y02076
         USING IHADCB,R4           ADDRESS DCB                   YM3983
         TM    DCBOFLGS,CKDCBOP    IS CHKPT D/S OPEN             YM3983
         BZ    CERFREEM            IF NOT, GO FREEMAIN & EXIT    YM3983
         L     R5,DCBDEBAD         FETCH DEB ADDRESS             YM5921
         LA    R6,DEBBASIC-DEB     GET PREFIX LENGTH             YM5921
         SR    R5,R6               POINT TO DEB PREFIX           YM5921
         USING DEB,R5              ADDRESS DEB PREFIX            YM5921
         L     R7,DEBTCBAD         FETCH TCB ADDRESS             YM5932
         USING TCB,R7              ADDRESS TCB                   YM5932
         L     R6,DEBXTNP          FETCH DEB EXT ADDRESS         YM5921
         USING DEBXTN,R6           ADDRESS DEB EXTENSION         YM5921
         L     R6,DEBXDSAB         FETCH DSAB ADDRESS            YM5921
         USING DSAB,R6             ADDRESS DSAB                  YM5921
         LR    R1,R4               INIT CLOSE DCB ADDR           YM5921
*                                                                     *
***********************************************************************
*                                                                     *
*        TEST FOR SECURITY INTERFACE. IF ONE EXISTS, UPDATE THE       *
*        USER'S DCB BEFORE RETURNING TO HIM.                          *
*                                                                     *
***********************************************************************
*                                                                     *
         TM    DSABFLG4,DSABCKSI   DOES S/I EXIST                YM5921
         BZ    CERNOTSI            IF NOT, BRANCH                YM5921
         CLM   R1,M7,DEBDCBB       IF ADDRESSES MATCH, R1 IS     YM6560
         BNE   CERUSER             POINTING TO THE PROTECTED     YM6560
*                                  DCB - OTHERWISE, IT ALREADY   YM6560
*                                  POINTS TO THE USER DCB        YM6560
         LA    RF,FOUR             GET ADDR OF USER DCB ADDR VIA YM5921
         SR    R1,RF               PROTECTED DCB ADDR -4         YM5921
         L     R1,0(,R1)           FETCH USER'S DCB ADDR         YM5921
CERUSER  EQU   *                   R1 = USER DCB ADDR            YM6560
         TM    CERDCBAD,CHRWRTTN   HAS A CHR BEEN WRITTEN        YM6560
         BZ    CERNOTSI            IF NOT, SKIP USER DCB UPDATE  YM6560
         MODESET KEYADDR=TCBPKF,WORKREG=10 ASSUME CALLER KEY     YM5932
         MVC   DCBRELAD-IHADCB(LUPDATE1,R1),DCBRELAD UPDATE USER YM5921
         MVC   DCBDEBAD-IHADCB(L'DCBDEBAD,R1),DCBDEBAD DCB       YM5921
         MODESET EXTKEY=ZERO       RESUME KEY ZERO               YM5932
CERNOTSI EQU   *                   NON-S/I ENTRY                 YM5921
         TM    CERDCBAD,CERMCLS    DID CHKPT OPEN DATA SET
         BZ    CERFREEM            IF NOT, GO FREEMAIN & EXIT    Y02083
         ST    R1,CERDCBAD         UPDATE CLOSE DCB ADDR         YM5921
         TM    DEBOFLGS,DBMOD      IS THIS A MOD DATA SET        YM5744
         BO    CERNOTMD            BRANCH IF NOT MOD
         MVI   CERDCBAD,CERLEAVE   FOR A MOD DATA SET, CLOSE OPTION
*                                  IS LEAVE
         B     CERCLOSE            GO CLOSE DATA SET
CERNOTMD EQU   *
         MVI   CERDCBAD,CERRWIND   CLOSE OPTION IS REWIND
CERCLOSE EQU   *
         MODESET KEYADDR=TCBPKF,WORKREG=10 ASSUME CALLER KEY     YM5932
         CLOSE MF=(E,CERDCBAD)
         MODESET EXTKEY=ZERO       RESUME KEY ZERO               YM5744
CERFREEM EQU   *
         L     R0,CMGETLN          GET LENGTH TO FREE
         LR    R1,RD               ADDRESS OF AREA TO BE FREED
         FREEMAIN  R,LV=(0),A=(1)
         LH    RF,CERRETCD         LOAD RETURN CODE
         SVC   3                   RETURN TO CALLER
*                                                                     *
         DROP  R4,R5,R6,R7         DCB, DEB, DSAB, & TCB         YM5932
         EJECT
*  THIS ROUTINE CONVERTS THE TWO BYTE ERROR CODE TO A PRINTABLE
*  FORMAT.  IT IS ENTERED WHEN MESSAGE A OR B IS TO BE ISSUED.  THE
*  DOUBLE WORD BEGINNING AT MSG1WORK+80 IS USED IN THE CVD INSTRUCTION.
*  SINCE THE DISPLACEMENTS OF MSG1WORK+80 AND MSG2WORK+80 FROM THE
*  BEGINNING OF THE MESSAGE AREA ARE EQUAL, THE ROUTINE MAY BE USED IN
*  BOTH CASES
CMCVD    EQU   *
         SR    R4,R4               CLEAR REGISTER 4
         IC    R4,CERMSGCD+1       GET ERROR CODE
         CVD   R4,MSG1WORK
         UNPK  MSG1WK1N(THREE),MSG1WK6(TWO)       UNPACK TWO BYTE CODE
         OI    MSG1WK1,EBCDICMK    CONVERT SECOND BYTE TO EBCDIC
         BR    R3
         EJECT
*  MESSAGE B, C, D, OR E IS TO BE ISSUED.  THE JOBNAME AND DDNAME ARE
*  TAKEN FROM THE TIOT, THE UNIT NAME AND VOLUME SERIAL NUMBER FROM
*  THE UCB AND THE CHECKID FROM BYTES 16-31 OF THE SVRB EXTENDED SAVE
*  AREA.
         SPACE
         DROP  R8
CMMSG2   EQU   *
         USING MSG2SECT,R8
         CLI   CERMSGCD,CMNVLDID   Q. INVALID CHECKPT
         BE    CMMVIMSG            YES--BRANCH TO USE INVLID MSG SHELL
         CLI   CERMSGCD,CMERRID    IS IT 'ERROR' MSG             Y02076
         BE    CMMVIMSG            USE INVLD SHELL IF YES        Y02076
         MVC   MSG2LN(PLIST2LN),CMMESG2 NO--MOVE IN MSG2 SHELL
CMTIOTAD EQU   *
         L     R6,CERTIOAD         GET ADDRESS OF TIOT
         USING TIOTSECT,R6
         MVC   MSG2JOBN(LJOBNM),TIOCNJOB     MOVE JOBNAME TO MESSAGE
         L     R4,CERDCBAD         GET ADDRESS OF DCB
         USING IHADCB,R4           ADDRESS DCB                   YM5921
         AH    R6,DCBTIOT          GET POINTER TO DD ENTRY
         USING TIOELNGH,R6
         MVC   MSG2DDNM(8),TIOEDDNM
         L     R6,TIOEFSIN         GET THE UCB ADDRESS
CMGOTMN  EQU   *
         USING UCBSECT,R6
         MVC   MSG2VOL(LVOLSER),SRTEVOLI     MOVE VOL. SER. NR. TO MSG
CMMVNAME EQU   *
         MVC   MSG2UNIT(LUNITNM),UCBNAME     MOVE UNIT NAME TO MESSAGE
         MVC   MSG2CHID(LCHKID),CERCHKID     MOVE CHECK ID TO MESSAGE
         CLI   CERRETC1,HEXZERO    IS RETURN CODE = 0
         BE    CMWTO               BRANCH TO WTO AND RETURN      A45624
CMCHKENQ EQU   *
         CLI   CERMSGCD,CMENQID    Q. POSSIBLE ERROR INDICATED
         BNE   CMWTO               BRANCH IF NOT TO WTO--INVLD MSG
*                                  SHELL COMPLETE
         MVC   MSG2DISP(LDISP),CMENQS        DISPOSITION = ENQS
         MVI   MSG2MCOD,MSGCD5     MOVE IN MESSAGE CODE
         B     CMWTO               BRANCH TO WTO AND RETURN
CMMVIMSG EQU   *
         MVC   MSG2LN(PLIST3LN),CMNVMSG MOVE IN INVLD MSG SHELL
         CLI   CERMSGCD,CMERRID    IS IT 'ERROR' MSG             Y02076
         BNE   CMMVIM2             BRANCH IF NO                  Y02076
         MVC   MSG2LN+MSGDESOF(LDISP),CMERROR  MOVE CHARS 'ERROR'Y02076
         MVI   MSG2LN+MSGNUMOF,MSGCD2     MOVE IN MSG. NO.       Y02076
CMMVIM2  EQU   *                   BRANCH TO CONVERT             Y02076
         BAL   R3,CMCVD            GET ERROR CODE CONVERTED TO EBCDIC
         MVC   MSG2CODE(THREE),MSG2WORK  MOVE ERROR CODE TO MSG  Y02076
         B     CMTIOTAD            BRANCH TO FILL IN SHELL
         DS    0F
CMGETLN  DC    X'FD0000A0'         GETMAIN PARAMETER FOR MESSAGE WA
*                                  SUBPOOL 253, LENGTH=160 BYTES
*
*        PARAMETER LIST FOR WTO FOR UNSUCCESSFUL CHKPT
*
         SPACE
* SET UP PARAMETER LISTS FOR WTO *
         SPACE
* MSG1 FORMAT = IHJ000I CHKPT JOBNAME  (DDNAME  ) NOT TAKEN (XXX)
CMNOTMSG WTO   'IHJ000I CHKPT          (        ) NOT TAKEN (   )',    *
               MF=L,DESC=(6),ROUTCDE=(2,11)
*
*        SUCCESSFUL CHKPT CONSOLE MESSAGE
*
         SPACE
         SPACE
* MSG2 FORMAT = IHJ004I JOBNAME  (DDNAME  ,UNIT=,VOLSER) CHKPT CHKID
CMMESG2  WTO   'IHJ004I          (        ,     ,      ) CHKPT         *
                       ',MF=L,DESC=(6),ROUTCDE=(2,11)
         SPACE
         SPACE
* MSG3 FORMAT=IHJ001I JOBNAME  (DDNAME  ,UNIT=,VOLSER) INVLD CHKID(XXX)
CMNVMSG  WTO   'IHJ001I          (        ,     ,      ) INVLD         *
                        (   )',MF=L,DESC=(6),ROUTCDE=(2,11)      Y02076
         SPACE
CMERROR  DC    C'ERROR'
CMENQS   DC    C'ENQS '
PLIST1LN EQU   57                  NO. OF BYTES - MSG1           Y02076
PLIST2LN EQU   71                  NO. OF BYTES - MSG2
PLIST3LN EQU   77                  NO. OF BYTES - MSG3           Y02076
MSGDESOF EQU   45                  OFFSET TO DESCRIPTOR          Y02076
MSGNUMOF EQU   9                   OFFSET TO MSG NO.             Y02076
RESTERR  EQU   X'18'               RESTORE ERROR RET. CODE       Y02076
RESTMSGC EQU   215                 RESTORE ERROR MSG. CODE       Y02076
CMNVLDID EQU   3
CMERRID  EQU   2                   MESSAGE ID IHJ002I(I/O ERROR JCT)
CMENQID  EQU   1                   MESSAGE ID IHJ001I(OUTSTANDING ENQ)
*                                                                     *
*        MAINTENANCE SPACE                                            *
*                                                                     *
PATCH    DC    XL((*-IGC0S06C)/20)'00'   FIVE PERCENT MAINTENANCE SPACE
*                                                                     *
*
*        MAPPING OF CHKPT SVRB AND EXTENDED SAVE AREA USED TO PASS
*        INFORMATION TO BUILD WTO MESSAGE
*
CERSECT  DSECT
CERSVRB  DS    24F                 BASIC SECTION
CERRETCD DS    0H                  RETURN CODE
         DS    CL1
CERRETC1 DS    CL1
CERMSGCD DS    0H                  MESSAGE ERROR CODE
         DS    CL1
CERMSGC1 DS    CL1
CERMSGMD DS    2F                  N/A
CERXCTL  DS    F                   N/A
CERFLAG  EQU   CERXCTL
CERJOBNM DS    2F                  MESSAGE A-JOBNAME
CERDDNM  DS    2F                  MESSAGE A-DDNAME
CERCHKID EQU   CERJOBNM            MESSAGE B-E CHECKID
CERTIOAD DS    F                   MESSAGE B-E TIOT ADDRESS
CERDCBAD DS    F                   DCB ADDRESS
CERMCLS  EQU   X'80'               CHKPT OPENED DATA SET
CERLEAVE EQU   X'B0'
CERRWIND EQU   X'90'
DBOFLAGS EQU   8
DBMOD    EQU   X'40'
         SPACE
*  THE FOLLOWING DSECT DESCRIBES MESSAGE A
         SPACE
MSG1SECT DSECT
MSG1LN   DS    F                   WTO PARMLST (LENGTH AND 2 BYTES 0)
MSG1BGIN DS    14C                 BASIC SECTION MSG
MSG1JOBN DS    8C                  JOB NAME
         DS    2C                  SEPARATORS (, )
MSG1DDNM DS    8C                  CHKPT DS DDNAME
         DS    2C                  SEPARATORS (, )
MSG1NTTK DS    11C                 MESSAGE 'NOT TAKEN'
MSG1CODE DS    2C                  ERROR MESSAGE IDENTIFIER CODE Y02076
MSG1CDE2 DS    1C
MSG1WORK EQU   MSG1LN+80
MSG1WK1  EQU   MSG1LN+81
MSG1WK6  EQU   MSG1LN+86
MSG1WK1N EQU   MSG1LN+79
         SPACE
*THE FOLLOWING DSECT DESCRIBES MESSAGES B-E
         SPACE
MSG2SECT DSECT
MSG2LN   DS    F                   WTO PARMLST (LENGTH AND 2 BYTES 0)
MSG2BGIN DS    5C                  BASIC SECTION WTO MESSAGE IDENTIFIER
MSG2MCOD DS    1C
         DS    2C                  CONSTANTS 'I '
MSG2JOBN DS    8C                  JOB NAME
         DS    2C                  SEPARATORS (, )
MSG2DDNM DS    8C                  CHKPT DS DDNAME
         DS    1C                  COMMA
MSG2UNIT DS    CL3                 CHKPT ENTRY UNIT NO.
MSG2UT3  DS    CL1                 SLASH WHEN CHKPT DS ON 2321
MSG2UT4  DS    CL2                 BIN NO FOR 2321 DATA CELL
MSG2VOL  DS    6C                  VOLUME SERIAL NO OF CHKPT ENTRY
         DS    2C                  SEPARATORS ') '
MSG2DISP DS    5C                  CONSTANT 'CHKPT'
         DS    1C                  BLANK
MSG2CHID DS    16C                 CHECKID
         DS    1C                  BLANK
MSG2PRNS DS    1C                  LEFT PAREN
MSG2CODE DS    3C                  ERROR MESSAGE CODE            Y02076
         DS    1C                  RIGHT PAREN
MSG2WORK EQU   MSG2LN+79           MESSAGE 2 WORK AREA           Y02076
TIOTSECT DSECT
         IEFTIOT1
UCBSECT  DSECT
         IEFUCBOB
         DCBD  DSORG=(PS,PO),DEVD=(TA,DA)
LUPDATE1 EQU   DCBTRBAL-IHADCB+L'DCBTRBAL LENGTH OF 1ST DCB UPDT Y02083
         IEZDEB                                                  Y02083
         IHADSAB                                                 Y02083
         IKJTCB                                                  YM5932
*
*        DECIMAL CONSTANTS, CODES, POSITIONS, LENGTHCODES.
*
ZERO     EQU   0                   DECIMAL   0
ONE      EQU   1                             1
TWO      EQU   2                             2
THREE    EQU   3                             3
FOUR     EQU   4                             4
FIVE     EQU   5                             5
CON16    EQU   16                            16
CON56    EQU   56                            56
CON72    EQU   72                            72
CON87    EQU   87                            87
*
SPACE    EQU   C' '                SPACE
SLASH    EQU   C'/'                SLASH
MSGCD1   EQU   C'1'                CODE 1
MSGCD2   EQU   C'2'                CODE 2
MSGCD5   EQU   C'5'                CODE 5
*        POSITIONS IN RELATION TO PREVIOUSLY DEFINED AREAS
TIOEFSIN EQU   TIOEFSRT-1          *
*
LMSG2SHL EQU   46        LENGTH OF MESSAGE2 SHELL
LJOBNM   EQU   8                   JOB NAME
LVOLSER  EQU   6                   VOLUME SERIAL NUMBER
LUNITNM  EQU   3                   UNIT NAME
LCHKID   EQU   16                  CHECK ID
LDISP    EQU   5                   DISPOSITION
LPRNS    EQU   4                   PARENTHESIS FIELD
LERRCD   EQU   2                   ERROR CODE
*
*        HEXADECIMAL CONSTANTS, MASKS
*
HEXZERO  EQU   X'00'               HEXADECIMAL  0
HEXONE   EQU   X'01'               HEXADECIMAL  1
EBCDICMK EQU   X'F0'               EBCDIC MASK
MUCBMK   EQU   X'FF'               MAIN UCB MASK
CKDCBOP  EQU   X'10'               DCB OPEN TEST MASK            YM3983
CHRWRTTN EQU   X'40'               CHR-WRITTEN FLAG              YM6511
M7       EQU   7                   REG MASK FOR LO-ORDER 3 BYTES YM6560
*
         END
