*
         COPY  LCGASMSW
*
         TITLE 'IGC0206C (IHJACP02) CHKPT HOUSEKEEPING RTN - 3RD LOAD'
***********************************************************************
*
*TITLE:  CHKPT HOUSEKEEPING - 3RD LOAD
*
*STATUS CHANGE LEVEL 000
*
*FUNCTION/OPERATION:  THIS ROUTINE WILL DO THE FOLLOWING:
*        1.) GET SPACE FOR QMNGRIO PARAMETER LIST AND WORK AREA.  SET
*            UP PARAMETER LIST FOR READING CONTROL BLOCKS FROM THE
*            SCHEDULER WORK AREA (SWA).
*        2.) READ IN THE JCT VIA QMNGRIO.
*        3.) GIVE CONTROL TO THE CHKPT EXIT ROUTINE IF 'CANCEL' WAS
*            REQUESTED.
*        4.) CONSTRUCT CHECKPOINT HEADER RECORD (CHR).
*        5.) UPDATE THE JCTNRCKP AND JCTCKIDL FIELDS IN THE JCT.
*        6.) GENERATE A CHECKID IF USER DID NOT SUPPLY A CHECKID.
*        7.) CALL THE VSAM CHECKPOINT ROUTINE IF ANY VSAM DATA @Z30SSDT
*            SETS ARE OPEN.                                    @Z30SSDT
*
*ENTRY POINTS:  IGC0206C
*
*INPUT:  ADDRESS OF CHKPT WORK AREA IN REGISTER 1.
*
*OUTPUT:  IF AN ERROR WAS FOUND WHEN READING THE JCT VIA QMNGRIO,
*        A RETURN CODE OF X'0C' IS PLACED IN CHKWA TO INDICATE A
*        CHKPT I/O ERROR AND A MESSAGE CODE OF X'19' IS PLACED @Z30SSDT
*        IN CHKWA.  CONTROL IS PASSED TO THE ERROR EXIT        @Z30SSDT
*        ROUTINE FOR A CANCELLED CHECKPOINT, AN I/O ERROR,     @Z30SSDT
*        OR A VSAM CHECKPOINT ERROR.                           @Z30SSDT
*
*EXTERNAL ROUTINES:  SWA MANAGER ROUTINE
*                    VSAM CHECKPOINT ROUTINE
*
*SVCS USED:  XCTL, GETMAIN, FREEMAIN
*
*EXITS-NORMAL:  XCTL TO CHKDCB, IGC0506C, UNLESS CANCEL WAS REQUESTED
*        THEN XCTL TO CHKPT EXIT ROUTINE IGC0Q06C
*
*EXITS-ERROR:  IF AN ERROR WAS FOUND WHEN READING THE JCT, CONTROL IS
*        PASSED TO IGC0Q06C
*
*TABLES/WORKAREAS CREATED:  NONE
*
*TABLES/WORKAREAS REFERENCED:  TCB,CHKWA,CVT,DCB,JCT,TIOT,QMIOP,
*      JESCT,PARMSECT,JSCB,CHR
*
*ATTRIBUTES:  REENTRANT, SUPERVISOR STATE, TYPE 4 SVC ROUTINE
*
*RESTRICTIONS ON USE OF ROUTINE:  USE ONLY ON OS/VS2/2
*
*NOTES:  NONE
*
***********************************************************************
         EJECT
IGC0206C CSECT
         BALR  RB,0                BASE ADDR
         USING *,RB                ADDRESS MODULE.
         B     BEGIN               BRANCH AROUND EYE CATCHER
         CNOP  0,8                 ALIGN TO A DOUBLE WORD BOUNDARY
         DC    C'IGC0206C'         CSECT NAME
BEGIN    EQU   *
         USING TCB,R4              ADDRESS TCB.
         USING CHKWA,RC            ADDRESS WORK AREA.
         LR    RC,R1               SAVE W.A. ADDRESS.
         LA    RD,CKREGSAV         INITIALIZE SAVE AREA REG.
         L     R4,CKTCBAD          GET ADDR OF TCB.
**********************************************************************
* GET PARM LIST AND WORK AREA SPACE FOR QMNGRIO (24+256 BYTES)   Y02076
*                      AND                                       Y02076
* GET THE SVA OF THE JCT FROM THE JSCB                           M0367
*                                                                     *
**********************************************************************
CHRMVT2  EQU   *
         ICM   R0,ADDRBYTS,QMNGWALN     WA + PARM LST LNGH IN R0 Y02076
         ICM   R0,HIORDER,SP253         INSERT SUBPOOL NO. IN R0 Y02076
         GETMAIN R,LV=(R0)              GET QMNGRIO WRK AREA     Y02076
         ST    R1,QMGRPRMA              SAVE P.L. ADR - FREEMAIN Y02076
         LR    R9,R1                    SAVE PARM LIST ADDR      Y02076
         L     R1,TCBJSCB         ADDRESS OF P/P JSCB            M0367
         USING IEZJSCB,R1                                        M0367
         L     R0,JSCBJCT         SVA OF JCT                     M0367
         SLL   R0,HIORDER         CLEAR LOW ORDER BYTE           M0367
         TM    JSCBOPTS,JSCBAUTH        Q-USER AUTH FOR MODESET  Y02076
         BZ    CHRNAUTH                 BR IF NOT AUTH           Y02076
         OI    CKFLAG1,USERAUTH         SET 'USER AUTH' BIT      Y02076
CHRNAUTH EQU   *                        SET UP QMNGRIO PARM LIST Y02076
         USING QMIOP,R1                 BASE REG FOR PARM LIST   Y02076
         LR    R1,R9                    RESTORE ADR OF PARM LIST Y02076
         XC    QMITCBAD(LPL),QMITCBAD   CLEAR QMNGRIO PARM LST   Y02076
         ST    R0,QMIDSKAD              ST JCT SVA ADDR IN PARM  Y02076
         LA    R0,LPL                   GET OFFSET TO WORK AREA  Y02076
         AR    R0,R1                    CALC WORK AREA ADDRESS   Y02076
         ST    R0,QMIWRKAD              ST WA ADDR IN P.L.       Y02076
         ST    R4,QMITCBAD              STORE TCB ADDR IN P.LIST Y02076
         LA    R0,LNJCT                 GET LENGTH OF JCT        Y02076
         STH   R0,QMIRECL               STORE JCT LENGTH IN P.L  Y02076
         LA    R0,INJMJCT               GET ADDR FOR JCT READ IN Y02076
         ST    R0,QMIRECAD              STORE IN PARM LIST       Y02076
         MVI   QMIFLAGS,QMIOREAD        SET READ FUNC IN PRM LST Y02076
         QMNGRIO                        READ IN JCT              Y02076
         LTR   RF,RF                    SUCCESSFUL READ          Y02076
         BNZ   CHRQERRW                 NO-BRANCH TO ERR ROUTINE Y02076
***********************************************************************
*                                                                     *
*        FOR CANCEL REQUEST, BRANCH TO XCTL TO EXIT ROUTINE           *
*                                                                     *
***********************************************************************
         TM    CKFLAG1,CKCANCEL         WAS CANCEL REQUESTED
         BO    CHRQCOM                  YES-GO TO EXIT ROUTINE
         L     R8,CKPARMAD              GET ADDR OF PARM LIST
         LR    RA,RC                    GET ADDR OF W.A.
         A     RA,CKBFOFST         GET ADDR OF BUFFER.
         L     R5,CKDCBAD          GET ADDR OF CHKPT DCB.
         USING IHADCB,R5           ADDRESS CHKPT DCB.
         USING CHRSECT,RA
**********************************************************************
*                                                                     *
*        INCREMENT JCTNRCKP FIELD IN JCT BY ONE                       *
*                                                                     *
**********************************************************************
         LH    RF,JCTNRCKP         GET NO. CHKPT'S TAKEN.
         LA    RF,ADDONE(RF)       UPDATE NO. CHKPT'S TAKEN
         STH    RF,JCTNRCKP        STORE UPDATED COUNT IN JCT
**********************************************************************
*                                                                     *
*        BRANCH TO GENERATE CHECKID IF USER DID NOT SUPPLY CHECKID    *
*                                                                     *
**********************************************************************
         TM    CKFLAG2,CKUSPCHD    DID USER SUPPLY CHECKID
         BZ    CHRGNID             NO-GO TO GENERATE ID.
         XR    R1,R1
         USING PARMSECT,R8         MAPPING OF CHKPT PARMLST
         IC    R1,LNCHKID          GET LENGTH OF CHECKID
         L     RF,IDADDR           GET ADDR OF CHECKID
**********************************************************************
*                                                                     *
*        UPDATE JCTCKIDL FIELD IN JCT                                 *
*        CONSTRUCT CHECKPOINT HEADER RECORD                           *
*                  CHRCOUNT - NUMBER CHECKPOINTS TAKEN                *
*                  CHRCKIDL - LENGTH OF CHECKID                       *
*                                                                     *
**********************************************************************
CHRSKP4  EQU   *
         STH   R1,CHRCKIDL         MOVE CHECKID LENGTH TO BUFFER.
         MVC   CHRCOUNT(CHRCKIDL-CHRCOUNT),JCTNRCKP
*                                  PUT NO. OF CHKPT IN CHR.
         STC   R1,JCTCKIDL         MOVE CHECKID LENGTH TO JCT.
**********************************************************************
*                                                                     *
*        SET VIRTUAL = REAL FLAG, AND                                 *
*        INITIALIZE CHRCHKID FIELD IN JCT WITH CHECKID                *
*                                                                     *
**********************************************************************
CHRAG1   EQU   *
         TM    TCBFLGS6,TCBRV      TEST FOR VIRTUAL = REAL       Y02076
         BZ    CHRAG1A             BRANCH IF NO                  Y02076
         OI    CKFLAG1,CKVEQR      SET V=R FOR MOVE TO CHR       Y02076
CHRAG1A  EQU   *                   PREPARE TO MOVE CHECKID       Y02076
         MVI   CHRCHKID,BLANK      INITIALIZE CHECKID FIELD WITH BLANKS
         MVC   CHRCKID2(LNG15),CHRCHKID
         BCTR  R1,0                DECREMENT COUNT FOR MOVES.
         EX    R1,CHRMVC1          MOVE CHECKID TO BUFFER.
**********************************************************************
*                                                                     *
*        RETURN SYSTEM-GENERATED CHECKID TO USER IF REQUESTED.        *
*                                                                     *
**********************************************************************
         L     RF,CKPARMAD         GET ADDR OF PARM LIST
         USING PARMSECT,RF         UPDATE NO. CHKPT'S TAKEN
         CLI   PARMFLG,NOID        REQUEST FOR RETURN OF GEN. CHECKID
         BE    CHRMVR              NO-SKIP CODE TO RETURN CHECKID
         CLI   LNCHKID,RETCKID     REQUEST FOR RETURN OF GEN. CHECKID
         BNE   CHRMVR              NO-SKIP CODE TO RETURN CHECKID.
         L     RF,IDADDR           GET ADDR OF CHECKID-RETURN-AREA
         DROP  RF
         MVC   0(LNGENID,RF),CHRCHKID
*                                  MOVE CHECKID TO USER SPECIFIED
*                                  RETURN AREA
**********************************************************************
*                                                                     *
*        BUILD REMAINDER OF CHR                                       *
*                                                                     *
**********************************************************************
CHRMVR   EQU   *
         L     RF,16(0,0)          LOAD CVT POINTER            @Z30JSSR
         USING CVTMAP,RF           MOVE SYSTEM ID              @Z30JSSR
         MVC   CHRSYSID(CHRIDENT-CHRSYSID),CVTDCB              @Z30JSSR
         DROP  RF                                              @Z30JSSR
         LH    RF,DCBTIOT          GET OFFSET TO CHKPT ENTRY IN TIOT.
         L     RE,TCBTIO           GET ADDR OF TIOT.
         AR    RE,RF               GET ADDR OF CHKPT ENTRY IN TIOT.
         USING TIOELNGH,RE         ADDRESS CHKPT DD ENTRY IN TIOT.
*                                  FILL IN CHR WITH INFORMATION THAT
*                                  WILL BE NEEDED AT RESTART TIME
         MVC   CHRDDNM(CHRPPM-CHRDDNM),TIOEDDNM
         MVC   CHRPPM(CHRBLKSI-CHRPPM),CKPPM
         MVC   CHRPPML(CHRSYSID-CHRPPML),CKPPML                @Z30JSSR
         MVC   CHRIDENT(CHRPADH-CHRIDENT),CHRID                @Z30JSSR
         MVC   CHRBLKSI(CHRTIOTL-CHRBLKSI),DCBBLKSI
         MVC   CHRTIOTL(CHRFLAGS-CHRTIOTL),CKTIOTLN
         MVC   CHRFLAGS(CHRWACL-CHRFLAGS),CKFLAG1
         ST    RC,CHRCKWAD
         MVC   CHRFLAG2(CHRWACL-CHRFLAGS),CKFLAG2
         MVC   CHRWACL(CHRFLAG2-CHRWACL),CKWACL1
         MVC   CHRSVRB(CHRPPML-CHRSVRB),TCBRBP    ADDR OF CHKPT SVRB
         NI    CKFLAG1,AUTHOFF          TURN OFF AUTH BIT AFTER  Y02076
*                                         MOVE TO CHR BUFFER     Y02076
         TM    CKFLAG1,CKTAPE           CHKPT D/S ON TAPE       YA00142
         BZ    CHRMVR2                  SKIP IF NOT             YA00142
         L     R3,DCBDEBAD              GET DEB ADR             YA00142
         MVC   CHRSVRB(LNG1),DEBVLSQ(R3) SAV VOL SEQ IN CHR     YA00142
CHRMVR2  EQU   *                        COMPLETE CHR            YA00142
**********************************************************************
*                                                                     *
*        PAD REMAINDER OF BUFFER WITH ONES.                           *
*                                                                     *
**********************************************************************
         LR    R9,RC               CALCULATE NUMBER
         A     R9,CKWACL           OF BYTES IN BUFFER
         LA    RF,CHRPADH          THAT NEED TO BE PADDED WITH ONES.
         SR    R9,RF
CHRAG2   EQU   *
         MVI   CHRPADH,CHRPAD      MOVE A BYTE OF ONES TO BUFFER
         BCTR  R9,0                DECREMENT COUNT.
CHRBPAD  EQU   *
         CH    R9,=H'256'          ARE THERE MORE THAN 256 BYTES LEFT
         BH    CHRPADNG            YES-GO TO PAD 256 BYTES.
         BCTR  R9,0                DECREMENT
         EX    R9,CERMVC3          PAD REST OF BUFFER WITH ONES.
**********************************************************************
*                                                                     *
*        SET PARAMETER REGISTER AND XCTL TO IGC0506C.                 *
*      IF THERE ARE ANY VSAM DATA SETS OPEN, LOAD THE VSAM     @Z30SSDT
*      CHECKPOINT MODULE, IDA0C06C, AND BALR.                  @Z30SSDT
*                                                                     *
**********************************************************************
CHREXL   EQU   *
         USING DEBBASIC,R7              DEB ADDRESSABILITY       Y02076
         L     R7,TCBDEB                GET POINTER TO FIRST DEB Y02076
CHRDEBCK L     R6,DEBDCBAD              GET PT TO THIS DCB/AMB   Y02076
         TM    EXCPTEST(R6),EXCPID      IS THIS AN EXCP DCB      Y02076
         BO    CHRNXTDB                 YES, GO GET PT NEXT DEB  Y02076
         TM    DSORGFLD(R6),ACBAMBID    IS THIS A DCB DATA SET   Y02076
         BZ    CHRNXTDB                 YES, GO GET PT NEXT DEB  Y02076
         CLI   OFFSET0(R6),AMBDSID      IS THIS AMB VSAM DATA ST Y02076
         BE    CHRVSAM                  YES, GO GET PT VSAM CHKPTY02076
         TM    ACBFLAG(R6),VSAMACB      IS THIS A VSAM ACB       Y02076
         BO    CHRVSAM                  YES, GO GET PT VSAMCKPT  Y02076
CHRNXTDB L     R7,DEBDEBAD              NO, GET PT TO NEXT DEB   Y02076
         LA    R7,0(R7)                 ZERO OUT HI ORDER BYTE   Y02076
         LTR   R7,R7                    ANY MORE DEBS ON CHAIN   Y02076
         BZ    CHRNEXT                  NO, XCTL TO IGC0506C     Y02076
         B     CHRDEBCK                 YES, GR TO CHK NEXT DEB  Y02076
         DROP  R7                                              @Z30SSDT
CHRVSAM  MVC   CHRXL(LXCTLNAM),CHRXAM0  GET PT TO VSAM CKPT      Y02076
         LOAD  EPLOC=CHRXL              LOAD VSAM CHECKPOINT   @Z30SSDT
         LR    RF,R0                    GET ENTRY POINT ADDRESS@Z30SSDT
         LA    R1,CHKWA                 LOAD PARAMETER REG 1   @Z30SSDT
         BALR  RE,RF                    CALL VSAM CHECKPOINT   @Z30SSDT
         DELETE EPLOC=CHRXL             DELETE VSAM CHECKPOINT @Z30SSDT
         LH    RF,CKRETCOD              GET THE RETURN CODE    @Z30SSDT
         LTR   RF,RF                    TEST FOR ANY ERRORS    @Z30SSDT
         BZ    CHRNEXT                  NONE, GO TO NEXT LOAD  @Z30SSDT
         MVC   CHRXL(LXCTLNAM),CHRXLST  ERROR, GO TO IGC0Q06C  @Z30SSDT
         B     CHRXIT                   GO TO XCTL ROUTINE     @Z30SSDT
CHRNEXT  MVC   CHRXL(LXCTLNAM),CHRXLIST GO TO NEXT LOAD        @Z30SSDT
CHRXIT   EQU   *
         ICM   R0,ADDRBYTS,QMNGWALN     QMNGR PL/WA LNGTH        Y02076
         ICM   R0,HIORDER,SP253         SUBPOOL 253              Y02076
         L     R1,QMGRPRMA              GET ADR OF PL/WA         Y02076
         FREEMAIN  R,LV=(R0),A=(R1)     FREE QMNGR PL/WA         Y02076
         LR    R1,RC               PLACE ADDR OF W.A. IN PARM REG.
         LA    RF,CHRXL            SET PARAMETERS FOR XCTL.
         ST    RF,CHRAD
         LA    RF,CHRAD
         XCTL  SF=(E,(15))         TRANSFER CONTROL TO CHKDCB.
CHRMVC1  MVC   CHRCHKID(1),0(RF)   EXECUTED MOVE OF CHECKID TO BUFFER.
**********************************************************************
*                                                                     *
*        ERROR ROUTINE WHEN I/O ERROR OCCURS READING JCT - SET CODE   *
*        AND XCTL TO EXIT ROUTINE, IGC0Q06C                           *
*                                                                     *
**********************************************************************
CHRQERRW EQU   *
         MVI   CKRETCD2,CKIOERR    PUT RETURN CODE IN WA
         MVI   CKMSGCD2,CKERIO7    PUT MESSAGE CODE IN WA
         OI    CKFLAG2,CKMSG1      INDICATES WTO MESSAGE=NOT TAKEN
CHRQCOM  EQU   *
         MVC   CHRXL(LXCTLNAM),CHRXLST MOVE IGCOQ06C TO XCTL PARMLST
         B     CHRXIT              GO TO TRANSFER CONTROL TO CER
**********************************************************************
*                                                                     *
*        GENERATE SYSTEM CHECKID AND STORE IN CHKWA                   *
*                                                                     *
**********************************************************************
CHRGNID  EQU   *
         CVD   RF,CHRDEC           CONVERT BINARY COUNT TO PACKED DEC.
         UNPK  CHRCON(LNCNVID),CHRCHAR4(LNG5)   CONVERT TO UNPACKED DEC
         MVZ   CHRCON10(1),CHRCONC9
         MVI   CHRCONC2,CHARC      INSERT C INTO 1ST BYTE OF CHECKID
         LA    RF,CHRCONC2
         MVC   CKCHEKID(LNGENID),CHRCONC2
*                                  MOVE GENERATED CHECKID TO CHKWA
         LA    R1,LNGENID          SUPPLY LENGTH OF GENERATED CHECKID
         B     CHRSKP4             GO TO UPDATE FIELDS IN JCT
**********************************************************************
*                                                                     *
*        ROUTINE TO PAD BUFFER WITH 256 BYTES OF ONES.                *
*                                                                     *
**********************************************************************
CHRPADNG EQU   *
         MVC   1(256,RF),0(RF)     PAD 256 BYTES OF BUFFER WITH ONES.
         AH    RF,=H'256'          UPDATE POINTER TO NEXT BYTE IN BUF.
         SH    R9,=H'256'          UPDATE NUMBER-OF-BYTES-LEFT-COUNTER.
         B     CHRBPAD             GO TO CHECK IF BUFFER ALL PADDED
CERMVC3  MVC   1(1,RF),0(RF)       EXECUTE MOVE.PROPAGATES ONES THROUGH
*                                  REST OF BUFFER.
CHRXLST  DC    C'IGC0Q06C'         CHKPT EXIT RTN(ERROR OR CANCEL)
CHRXLIST DC    C'IGC0506C'         CHECK I/O(NORMAL FLOW)
CHRXAM0  DC    C'IDA0C06C'              VSAM CHKPT NORMAL FLOW @Z30SSDT
*        MASK  USED FOR CONVERTING CHECKID TO UNPACKED DEC            *
CHREDIT  DC    X'2120202020202020'
         DC    X'2020'
USERAUTH EQU   X'10'                    USER AUTH FOR MODESET    Y02076
AUTHOFF  EQU   X'EF'                    MSK - TURN OFF AUTH BIT  Y02076
HIORDER  EQU   8         USED TO SHIFT TTR TO HIGH ORDER BYTES    MFTCR
SP253    DC    AL1(253)                 SUBPOOL NO. FOR GETMAIN  Y02076
ADDRBYTS EQU   7                        ADDR BITS FOR ICM INSTR  Y02076
CKVEQR   EQU   8                        V = R FLAG               Y02076
QMNGWALN DC    AL3(280)       256 BYTE QMNGRIO WA + 24(PARM LST) Y02076
LPL      EQU   24                       LNGTH OF QMNGRIO PRM LST Y02076
LNJCT    EQU   176                      LNGTH OF JCT IN SWA      Y02076
CHRID    DC    C'$$/%@/$ CHR %@/$//%'
*
*                                                                     *
*        MAINTENANCE SPACE                                            *
*                                                                     *
PATCH    DC    XL((*-IGC0206C)/20)'00'   FIVE PERCENT MAINTENANCE SPACE
         IEZDEB                                                  Y02076
         IEFQMIOP                                                Y02076
         IEFJESCT                                                Y02076
*                                                                     *
*                                                                     *
*        MAPPING OF ECB                                               *
*                                                                     *
ECBSECT  DSECT
IOCMPFLG DS    1C        COMPLETION FLAG FOR I/O EVENT
IORBPNT  DS    3C        RB ADDR WHILE WAITING FOR EVENT              *
*                                                                     *
*        MAPPING OF CHKPT PARAMETER LIST                              *
*                                                                     *
PARMSECT DSECT
PARMFLG  DS    1C        BYTE INDICATING USER/SYSTEM/SYSTEM-RETURN CKID
PARMDCB  DS    3C        ADDR OF CHKPT DCB
IDADDR   DS    0F
LNCHKID  DS    CL1       LENGTH OF CHECKID OR INDICATES RETURN OF
*                        SYSTEM-GENERATED CHECKID
         DS    CL3       CHECKID ADDR
*
*        MAPPING OF CHECKPOINT HEADER RECORD(CHR)                     *
*
CHRSECT  DSECT
         DS    0D
CHRCOUNT DS    H    NUMBER OF CHKPTS TAKEN
CHRCKIDL DS    H    LENGTH OF CHECKID
CHRCHKID DS    4F   CHECKID
CHRDDNM  DS    2F   DDNAME OF CHECKPOINT DATA SET.
CHRPPM   DS    CL4       LOW ORDER ADDR P/P CORE
CHRPPE   DS    CL4       HIGH ORDER ADDRESS P/P CORE
CHRBLKSI DS    CL2       CHKPT D.S.  BLKSIZE
CHRTIOTL DS    CL2       LENGTH OF TIOT
CHRFLAGS DS    CL1       CHKPT FLAG 1
CHRWACL  DS    CL3       CHKPT W.A. LENGTH
CHRCKWAD DS    0F
CHRFLAG2 DS    CL1       CHKPT FLAG 2
CHRWAAD  DS    CL3       CHKPT W.A. ADDR
CHRSVRB  DS    CL4       ADDR OF CHKPT SVRB
CHRPPML  DS    CL4       LOW ORDER ADDR CHKPT SVRB
CHRPPEL  DS    CL4       HIGH ORDER ADDR CHKPT SVRB
CHRSYSID DS    CL1                 SYSTEM ID (CVTDCB)          @Z30JSSR
CHRIDENT DS    CL19                CHR RECORD IDENT            @Z30JSSR
CHRCKID2 EQU   CHRCHKID+1
CHRPADH  EQU   *    PADDING BEGINS HERE.
         IEEVCHWA   CHRWA,VER=3
*                                                                     *
*        WORK AREA USED FOR CONVERTING CHECKID TO PRINTABLE CHARACTERS*
*                                                                     *
CHRDEC   DS    0D
CHRCHAR1 DS    3C        AREA FOR CHECKID TO BE CONVERTED
CHRCHAR4 DS    1C
CHRCHAR5 DS    4C
CHRCON   DS    0H        AREA  FOR CONVERTED CHECKID
CHRCONC1 DS    1C        EXTRA BYTE USED FOR CONVERSION
         DS    1C
CHRCONC2 DS    3H        GENERATED NUMBER
CHRCONC9 DS    CL1
CHRCON10 DS    CL2       ZONE BYTE MUST BE UPDATED IN CONVERTED ID
CHRXL    DS    2F      NAME OF MODULE TO TRANSFER CONTROL TO
CHRAD    DS    0F        POINTER TO XCTL PARMLST(ALSO,WORK SPACE)
         DS    1C
CHRAD1   DS    3C
QMGRPRMA EQU   CKERAS00                 STORE ADR OF PARM LIST   Y02076
*
*        JOB QUEUE WORK AREA                                          *
*
QJOB     DSECT
SCALADCB DS    13F
SCADEB   DS    12F
SCATALLY DS    F
SCASTRKS DS    H    TT OF FIRST TRACT IN Q.
SCALTRKS DS    H    TT OF LAST TRACK IN Q.
SCARECPT DS    CL1  NUMBER OF RECORDS PER PHYSICAL TRACK.
         IEFSD005
         IEEBASEA
         IEZJSCB
TIOTSECT DSECT
         IEFTIOT1
CVTSECT  DSECT
         CVT
         IKJTCB
         DCBD  DSORG=(BS,PO),DEVD=(DA,TA)
NOTREL   EQU   X'42' INDICATES COMMAND CHAINING AND  NON-RELATED CP.
NOID     EQU   X'80'               SIGNIFIES LAST WORD IN PARM LIST.
DDL      EQU   8         LENGTH OF TIOEDDNM FIELD
CHRPAD   EQU   X'FF'     PADDING FOR CHR
PREL     EQU   4              LENGTH OF CHECKID LENGTH FIELD IN CHR.
CCWL     EQU   24   LENGTH OF CHANNEL PROGRAM TO READ OR WRITE TO JOB Q
EICL     EQU   68   LENGTH OF  ECB/IOB/CCW WORK AREA
CHRL     EQU   24   LENGTH OF PARM LIST IN CHR.
SUREAD   EQU   X'7F'     RETURN CODE FOR SUCCESSFUL I/O COMPLETION.
CKMSG1   EQU   32                  WTO MSG-NOT TAKEN-ENVIRONMENT ERROR
CKERIO7  EQU   X'19'    I/O ERROR WHILE READING IN JCT
*
*        ADDRESSING BYTES WITHIN DSECTS
*
DXDASEEK EQU   DXDAADR+3           ADDR OF IOBSEEK FIELD         Y02076
CKTIOTLN EQU   CKTIOLN+2           ADDRESSING TIOT LNG IN CHKWA
DXCCW11  EQU   DXCCW1+1            1ST CCW
DXCCW21  EQU   DXCCW2+1            2ND CCW
CKTIOTL2 EQU   CKTIOLN+2           LENGTH OF TIOT IN CHKWA
CKWACL1  EQU   CKWACL+1            LENGTH OF CHKWA
CKRETCD2 EQU   CKRETCOD+1          CHKPT RETURN CODE
CKMSGCD2 EQU   CKMSGCOD+1     CHKPT MESSAGE CODE
LXCTLNAM EQU   8         LENGTH OF MODULE NAME FOR XCTL PARMLST
LNADDR   EQU   3         LENGTH OF ADDRESS
ADDONE   EQU   1         INCREMENT QUANTITY
ADJR     EQU   8         USED TO ADJUST R OF TTR
ADJTT    EQU   16        USED TO ADJUST TT OF TTR
BLANK    EQU   C' '      BLANKS USED TO INITIALIZE CHECKID FIELD IN CHR
LNG15    EQU   15        MAXIMUM LENGTH OF CHECKID MINUS ONE
RETCKID  EQU   X'FF'     INDICATES USER REQ. RETURN OF GEN.CHECKID
LNCNVID  EQU   10             LENGTH OF CHECKID TO BE CONVERTED
LNGENID  EQU   8              LENGTH OF GENERATED CHECKID
LNJOBNAM EQU   8              JOB NAME LENGTH IN CSCB
CHARC    EQU   C'C'      USED TO ALTER MODULE NAME TO IGC0206C
LNG5     EQU   5         LNG USED IN UNPACK INSTRUC FOR CHECKID
DEBVLSQ  EQU   X'25'                    TAPE DEB DISP           YA00142
*                                       TO VOL SEQ NO.          YA00142
LNG1     EQU   1                        LNGTH OF 1              YA00142
*
*        THE FOLLOWING EQUATES ARE FOR VSAM DATA SETS            Y02076
*
EXCPTEST EQU   42                  OFFSET TO DCB MACRF FIELD     Y02076
DSORGFLD EQU   27                  OFFSET TO ACB/AMB DSORG FLD   Y02076
ACBAMBID EQU   X'08'               MASK ACB/AMB DATA SET TEST    Y02076
EXCPID   EQU   X'80'               MASK FOR EXCP TEST ON MACRF   Y02076
OFFSET0  EQU   0                   OFFSET TO AMB AMBID FIELD     Y02076
AMBDSID  EQU   X'40'               MASK FOR AMB ID TEST          Y02076
VSAMACB  EQU   X'11'               MASK FOR ACB VSAM DS TEST     Y02076
ACBFLAG  EQU   43                  OFFSET TO ACB IND. FLAG FLD   Y02076
 END
