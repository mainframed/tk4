         TITLE 'IGC0U05B DATA SET PROCESSOR, DOS TAPE DATA SET POSITION*
               ING   REPOSITION I/O  RESTART-SVC 52  OS/360'
IGC0U05B CSECT
*
*     VS2 RELEASE 037 DELETIONS/CHANGES
* APAR OZ31494 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C173000-174200,183000,707000,709000,713000                    @ZSUT222
*A714200-714800,816500                                         @ZSUT222
*         RELEASE 23 DELETIONS/CHANGES
*         RELEASE 22 DELETIONS/CHANGES
*         RELEASE 21 NEW MODULE
*
*
* STATUS CHANGE LEVEL 000
*
***********************************************************************
*
*
* FUNCTION - POSITIONS TAPES WHICH HAD BYPASS EMBEDDED DOS CHKPT RCDS
*    AND/OR BYPASS OPTIONAL LEADING TAPE MARK OPTION(S) SPECIFIED. TO
*    POSITION A TAPE WHICH MAY HAVE A LEADING TAPE MARK IT IS NECESSARY
*    TO ISSUE A READ AND TEST THE STATUS INFORMATION.  IF THE STATUS
*    INDICATES THAT A TAPE MARK WAS SENSED, THE LEADING TAPE MARK HAS
*    BEEN BYPASSED.  OTHERWISE THE TAPE MUST BE BACKSPACED ONE BLOCK
*    SUCH THAT CORRECT POSITIONING MAY BE PERFORMED.
*
*    TO CORRECTLY POSITION A TAPE TO THE CORRECT RECORD WITHIN A DATA
*    SET CONTAINING EMBEDDED DOS CHKPT RCDS, IT IS NECESSARY TO READ
*    AND TEST EACH BLOCK FOR THE CHKPT HDR AND TRLR RCDS.  WHEN A CHKPT
*    HDR RCD IS ENCOUNTERED, TABFLG2 BIT 2 WILL BE SET AND THE BLOCK
*    COUNT FIELD (TABBLK2) WILL NOT BE INCREMENTED.  IT WILL THEN
*    CONTINUE READING AND NOT UPDATING TABBLK2 UNTIL THE CHKPT TRLR
*    RCD IS ENCOUNTERED, AT WHICH TIME TABFLG2 BIT 2 IS TURNED OFF TO
*    INDICATE EMBEDDED CHKPT RCDS ARE NOT BEING PASSED.  IF NEXT RCD
*    READ IS NOT A CHKPT HDR RCD, TABBLK2 WILL BE INCREMENTED TO IND.
*    THAT IT WAS A USER'S RCD AND WAS SPACED OVER.
*
*    POSITIONING - A. POSITIONS TAPE TO CORRECT DATA SET USING FILE
*                     SEQUENCE NUMBER IN JFCB WHICH CAN BE OBTAINED
*                     FROM THE 48 BYTES TABLE ENTRY WHICH IS USED IN
*                     THE RESTART PORTION OF CHECKPOINT/RESTART.
*
*                  B. POSITIONS TAPE TO CORRECT RECORD WITHIN A DATA
*                     SET USING DCB POSITIONING INFORMATION
*
***********************************************************************
*
* ENTRY POINTS -
*
*         IGC0U05B FROM IGC0S05B
*
***********************************************************************
*
* INPUT -
*
*    REGISTER 8   BEGINNING OF DCB TABLE
*    REGISTER 1   USER BUFFER AREA
*
*    ALL OPENED DCB(S) WITH THEIR ASSOCIATED CONTROL BLOCKS
*    THE 48 BYTE TABLE ENTRY (IES) THAT IS (ARE) USED IN RESTART
*    RESTART WORKAREA
*
***********************************************************************
*
* OUTPUT -
*
*    REGISTER 8   BEGINNING OF DCB TABLE
*    REGISTER 1   USERS BUFFER AREA
*    DOS TAPE POSITIONED AT CORRECT RECORD WITHIN DATA SET
*
***********************************************************************
*
* EXTERNAL REFERENCES -
*
*         USERS PROGRAM DCB
*
***********************************************************************
*
* EXITS,NORMAL -
*
*         FINAL EXIT IS MADE VIA XCTL TO THE NEXT MODULE OF REPI/O.
*         THIS MAY BE IGC0R05B OR IGC0T05B.
*
***********************************************************************
*
* EXITS,ERROR -
*
*         ERROR EXITS ARE MADE VIA XCTL TO RESTART EXIT IGC0V05B
*         WITH RETURN CODES IN 'RSRETCOD' FIELD -
*
*         65 - ERRORS IN TRYING TO POSITION TO CORRECT DAT SET
*
*         64 - ERRORS IN TRYING TO POSITION TO CORRECT RECORD
*              WITHIN THE DATA SET
*
***********************************************************************
*
* TABLES/WORKAREAS - THE WORKAREA USED IS DESCRIBED BY THE DSECTS AT
*                    THE END OF THE LISTING.
*
*    THE WORKAREAS AND TABLE ENTRIES HAVE BEEN COMPLETED IN
*    IGC0P05B AND IGC0S05B WITH THE EXCEPTION OF THE CHANNEL
*    PROGRAM REQUIRED TO BYPASS THE EMBEDDED CHKPT RCDS.  THE
*    FOURTH WORKAREA SEGMENT WILL BE USED AS BUFFER SEGMENTS.
*
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*
***********************************************************************
* ATTRIBUTES -
*
*    REENTRANT
*    REUSABLE
*    ENABLED
*    PRIVILEGED
*
***********************************************************************
*
* CHARACTER CODE DEPENDENCY -
*
*     OPERATION OF THIS MODULE IS NOT DEPENDENT UPON A PARTICULAR
*     INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.
*
***********************************************************************
*
* NOTES -
*
***********************************************************************
         EJECT ,                                                 A27694
*
***********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0                        WORK/PARAMETER REGISTER
WRKR2    EQU   1                        WORK/PARAMETER REGISTER
DCBR     EQU   2                        CURRENT DCB REGISTER
BASER    EQU   3                        BASE RIGISTER
DEBR     EQU   4                        CURRENT DEB REGISTER
UCBR     EQU   5                        CURRENT UCB REGISTER
TIOTR    EQU   6                        NEW TIOT RESISTER
TCBR     EQU   7                        TCB REGISTER
TABLR    EQU   8                        BEGINNING TO DCB TABLE REGISTER
CTABLR   EQU   9                        CURRENT ENTRY IN DCB TABLE
BUFR     EQU   10                       USER BUFFER AREA
DSCNTR   EQU   11                       NUMBER OF DATA SETS
WRKR3    EQU   12                       WORK REGISTER
WRKR4    EQU   13                       WORK REGISTER
WRKR5    EQU   14                       WORK/PARAMETER REGISTER
WRKR6    EQU   15                       WORK/PARAMETER REGISTER
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
TPDEV    EQU   X'10'                    TAPE DEVICE
LASTENT  EQU   X'08'                    LAST ENTRY
TABENT   EQU   48                       TABLE ENTRY LENGTH
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
TIC      EQU   X'08'                    TIC
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR065   EQU   65                       ERROR IN DATA SET      @ZSUT222
*                                       POSITIONING.           @ZSUT222
ERR064   EQU   64                       ERROR IN RECORD        @ZSUT222
*                                       POSITIONING.           @ZSUT222
FLAGS    EQU   X'30'
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
COUNT    EQU   X'14'                    CCW BYTE COUNT
ONE      EQU   X'01'                    CONSTANT ONE
DOSTAPE  EQU   X'11'                    DOS TAPE TABLE ENTRY
CKPTRCDS EQU   X'10'                    TEST FOR CHKPT RCDS IND.
CHKPT    EQU   X'02'                    PERFORM CHKPT RCD BYPASS
CHKOFF   EQU   X'FD'                    TURN OFF DOS CHKPT MASK
RCDPOS   EQU   X'18'                    TEST FOR RCD POSITIONING
TAPEMARK EQU   X'21'                    TEST FOR LEADING TM IND.
LTM      EQU   X'01'                    PERFORM BYPASS OF TM
SLI      EQU   X'20'                    SET SLI FLAG ON IN CCW
BYPASS   EQU   X'20'                    BYPASS CHKPT RCDS FLAG
READOP   EQU   X'F1'                    READ OR READ BACK CCW
DAMOD    EQU   X'D9'                    DA MODULE - IGC0R05B
AMMOD    EQU   X'E3'                    ACCESS METHOD - IGC0T05B
UE       EQU   X'01'
RDBACK   EQU   X'03'                    READ BACKWARDS (DEBOPATB)
ERRORS   EQU   ERR065+ERR064            ERROR CODES            @ZSUT222
ERRCHKPT EQU   X'C0'                    PERMANENT ERROR AT CHECKPOINT
NOOPS    EQU   X'FF'
RESET    EQU   X'FE'                    RESET SL FLAG            A32901
REW      EQU   X'80'                    REWIND MASK FOR TABOPS
FSF      EQU   X'40'                    FORWARD SPACE FILE MASK
BSF      EQU   X'20'                    BACK SPACE FILE MASK
RDOP     EQU   X'10'                    READ FORWARD MASK
RDBK     EQU   X'08'                    READ BACKWARD MASK
BUSY     EQU   X'80'
NOTBUSY  EQU   X'00'
BLANK    EQU   X'40'
IBITS    EQU   X'0C'                    UNIQUE DEB INPUT BITS    A33655
EOFRST   EQU   X'DF'                    DEB EOF RESET MASK       A33655
BYPSSOFF EQU   X'7F'                    TURN OFF BYPASS FLAG
ZERO     EQU   0
WAIT     EQU   7
EQUAL    EQU   8
NOTMIX   EQU   9
ENDBUFF  EQU   19                       POINT TO END OF BUFFER
D0       EQU   0
D1       EQU   1
D3       EQU   3
D4       EQU   4
D7       EQU   7
D8       EQU   8
L1       EQU   1
L4       EQU   4
L8       EQU   8
L18      EQU   18
L23      EQU   23
L24      EQU   24
L26      EQU   26
L384     EQU   384
*
***********************************************************************
*
         EJECT ,                                                 A27694
         BALR  BASER,ZERO               ESTABLISH ADDRESSABILITY
         USING *,BASER                  ESTABLISH BASE REG
         B     BEGIN               BRANCH AROUND EYE CATCHER     Y01909
         CNOP  0,8                 ALIGN TO A DBL WORD BOUNDARY  Y01909
         DC    CL8'IGC0U05B'       MODULE NAME                 @ZSUT222
         DC    CL8'&SYSDATE'       LAST DATE SHIPPED           @ZSUT222
         DC    CL8'@ZSUT222'       LAST CODE SHIPPED           @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
         USING IHADCB,DCBR
         USING TABL,CTABLR
         USING RSTWA,BUFR
         USING RSDSECT,WRKR4
         USING DEBBASIC,DEBR
*
*
         LR    CTABLR,TABLR             INITIALIZE TABL POINTER
         LR    BUFR,WRKR2               SAVE POINTER TO RSWA
         L     WRKR4,TABSEGAD-D1        WORKAREA SEGMENT ADDRESS
         LA    WRKR5,D3
         LA    WRKR3,L384(WRKR4)        POINT TO FOURTH
*                                       WORKAREA SEGMENT
         SR    WRKR6,WRKR6              DOS TAPE COUNTER - NEED TO
*                                       BUILD ONLY THREE CCWS
REPDCB00 EQU   *
*
         TM    TABFLG1,TABDOSTP         DOS TAPE ENTRY
         BNO   REPDCB15                 BRANCH IF NO TO GET NEXT ENTRY
*
*   *** LOAD NECESSARY ADDRESSES ***
*
         L     WRKR4,TABSEGAD-D1        WORKAREA SEGMENT ADDRESS
         L     DCBR,TABDCBAD-D1         DCB ADDRESS FOR THIS ENTRY
*
*   *** DETERMINE WHICH BYPASS OPTION WAS SPECIFIED ***
*
         TM    DCBMACRF,X'80'           IS THIS EXCP            SA64062
         BO    REPDCB05                 YES-BYPASS CHKPT TEST   SA64062
         TM    DCBOPTCD,CKPTRCDS        BYPASS EMBEDDED CHKPT RCDS
         BZ    REPDCB05                 BRANCH NO - BYPASS LEADING TM
*
         OI    TABOPS,CHKPT             SET CODE FOR BYPASS CHKPT RCDS
***
*        IF A CHECKPOINT WAS TAKEN WHILE THE ACCESS METHOD ROUTINES
*        WERE SKIPPING OVER AN EMBEDDED CHECKPOINT, THE DEB BYPASS
*        FLAG WILL STILL BE ON, CAUSING INCORRECT POSITIONING
***
         L     DEBR,DCBDEBAD            LOAD ADDRESS OF DEB
         LA    DEBR,DEBBASND            DEPEND SEC ADR           Y02076
         USING DEBDASD,DEBR                                      Y02076
         NI    DEBBYPAS,BYPSSOFF        TURN OFF BYPASS BIT
         L     DEBR,DCBDEBAD            LOAD ADR OF DEB          Y02076
         USING DEBBASIC,DEBR                                     Y02076
*
         TM    TABTPLBL,TAPEMARK        BYPASS LEADING TAPE MARK
         BNO   REPDCB10                 BRANCH ON NO
*
REPDCB05 EQU   *
*
         OI    TABOPS,LTM               SET CODE FOR BYPASS LEADING TM
*
REPDCB10 EQU   *
*
         LA    WRKR6,D1(WRKR6)          INCR DOS TAPE ENTRY COUNTER
         CR    WRKR6,WRKR5              HAVE THREE CCWS BEEN BUILT
         BH    REPDCB15                 BRANCH YES
*
*   *** INITIALIZE CHANNEL PROGRAM ***
*
         XC    RSCCW1(L26),RSCCW1       CLEAR CCW AND END OF
*                                       WORK SPACE
*
         MVI   RSCCW1+D4,SLI            SET SLI BIT ON
         MVI   RSCCW1+D7,COUNT          SET BYTE COUNT TO TWENTY
         ST    WRKR3,RSCCW1             SET DATA ADDRESS TO SEGMENT
*                                         OF FOURTH WORKAREA
         LA    WRKR3,COUNT(WRKR3)       INCREMENT BUFFER POINTER
*
REPDCB15 EQU   *
*
         TM    TABFLG1,TABLAST          IS THIS THE LAST ENTRY
         BO    REPDCB20                 BRANCH YES TO INIT I/O
*
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TABLE POINTER
         B     REPDCB00                 BRANCH TO TEST NEXT ENTRY
*
REPDCB20 EQU   *
*
***********************************************************************
*
*        THIS ROUTINE WILL PERFORM ALL THE NECESSARY I/O OPERATIONS
*        ACCORDING TO THE TABLE BUILT IN THE END OF EACH TABLE ELEMENT.
*
***********************************************************************
*
         LR    CTABLR,TABLR             INITIALIZE TABL POINTER
         SR    WRKR3,WRKR3              TURN OFF SPIN SWITCH
         SR    WAIT,WAIT                TURN ON DO NOT WAIT SWITCH
*
REPDCB22 EQU   *
*
         L     WRKR4,TABSEGAD-D1        WORK AREA SEGMENT ADDRESS
         TM    TABFLG1,TABDOSTP         IS IT DOS TAPE
         BNO   REPDCB52                 BRANCH NO TO GET NEXT ELT
*
         TM    TABOPS,NOOPS             ANY I/O NEEDED FOR THIS ELT
         BZ    REPDCB52                 BRANCH NO TO GET NEXT ELT
         LA    WRKR3,ONE                TURN ON SPIN SWITCH
         TM    RSSTAT1,BUSY             IS WORK AREA BUSY
         BZ    REPDCB24                 BRANCH NO TO CONTINUE
         BAL   WRKR5,REPDCB56           GO TO WAIT ROUTINE
*
REPDCB24 EQU   *
*
         TM    TABOPS,LTM               IS OPTIONAL TM INDICATED
         BZ    REPDCB32                 BRANCH NO TO CONTINUE
*
*        SET READ FORWARD TO TEST FOR TAPE MARK (UNIT EXCEPTION)
*
         MVI   RSCCW1,READ              SET OP CODE TO READ FWD
         B     REPDCB48                 GO TO EXCP
*
REPDCB32 EQU   *
*
         TM    TABOPS,REW               IS REWIND NECESSARY
         BZ    REPDCB34                 BRANCH NO REWIND
*
*        REWIND ROUTINE
*
         XI    TABOPS,REW               PEEL OFF REWIND MASK
*
         MVI   RSCCW1,REWIND            SET CCW OP CODE TO REWIND
         B     REPDCB48                 GO TO EXCP
*
REPDCB34 EQU   *
*
*        FORWARD SPACE FILE ROUTINE
*
         TM    TABOPS,FSF               IS FSF NECESSARY
         BZ    REPDCB38                 BRANCH NO TO CHECK BSF
*
*        FSF
*
         SR    WRKR6,WRKR6
         IC    WRKR6,TABFSFN2           GET NUMBER OF FSF ALREADY DONE
         LA    WRKR6,D1(WRKR6)          ADD ONE
         STC   WRKR6,TABFSFN2           SAVE NUMBER OF FSF'S
         CLC   TABFSFN1(L1),TABFSFN2    WILL THIS BE ENOUGH
         BNE   REPDCB36                 BRANCH NO NOT ENOUGH
*
         XI    TABOPS,FSF               PEEL OFF FSF MASK
*
*        TURN OFF BYPASS DOS CHKPT RCD MASK IF NO RECORD
*        POSITIONING IS INDICATED
*
         TM    TABOPS,RCDPOS            RCD POSIT. INDICATED
         BNZ   REPDCB36                 BR IF YES
*
         NI    TABOPS,CHKOFF            TURN OFF DOS CHKPT MASK
*
*
REPDCB36 EQU   *
*
*
         MVI   RSCCW1,FSFOP             SET FSF OP CODE IN CCW
         B     REPDCB48                 GO TO EXCP
*
*
*
REPDCB38 EQU   *
*
*        BACK SPACE FILE ROUTINE
*
         TM    TABOPS,BSF               IS BACK SPACE FILE NECESSARY
         BZ    REPDCB40                 BRANCH NO TO CHECK READ FWD
*
*BSF
*
         XI    TABOPS,BSF               PEEL OFF BSF MASK
*
*
         MVI   RSCCW1,BSFOP             SET BSF OP CODE IN CCW
         B     REPDCB48                 GO TO EXCP
*
*
*
REPDCB40 EQU   *
*
*        READ FORWARD ROUTINE
*
         TM    TABOPS,RDOP              IS READ FWD NECESSARY
         BZ    REPDCB44                 BRANCH NO TO CHECK READ BACK
*
*        TEST FOR BYPASS FLAG ON - NO BLOCK COUNT INCR IF SET
*
         TM    TABFLG2,TABSW            BYPASSING CHKPT RCDS
         BO    REPDCB42                 BRANCH YES - SET OP CODE
*
*
         L     WRKR6,TABBLK2            GET BLK CT
         LA    WRKR6,D1(WRKR6)          INCREMENT BY ONE
         ST    WRKR6,TABBLK2            SAVE BLK CT
         CLC   TABBLK1(L4),TABBLK2      COMPARE BLOCK COUNTS
         BNL   REPDCB42                 BR NOT LOW TO CONTINUE
*
         NI    TABOPS,X'FF'-RDOP-CHKPT  PEEL OFF READ FWD AND    YM5600
*                                       DOS CHKPT MASKS
         B     REPDCB52                 GET NEXT ELEMENT
*
REPDCB42 EQU   *
*
         MVI   RSCCW1,READ              SET OP CODE TO READ FWD
         B     REPDCB48                 GO TO EXCP
*
*
*
REPDCB44 EQU   *
*
*        READ BACKWARD ROUTINE
*
         TM    TABOPS,RDBK              IS READ BACKWARD NECESSARY
         BZ    REPDCB52                 BRANCH NO MORE OPS FOR THIS ELT
*
*        TEST FOR BYPASS FLAG ON - NO BLOCK COUNT INCREMENT IF SET
*
         TM    TABFLG2,TABSW            BYPASS CHKPT RCDS IND.
         BO    REPDCB46                 BRANCH YES - SET OP CODE
*
*        RDBK
*
         L     WRKR6,TABBLK2            GET BLOCK COUNT
         LA    WRKR6,D1(WRKR6)          ADD ONE
         ST    WRKR6,TABBLK2            SAVE NLOCK COUNT
         CLC   TABBLK1(L4),TABBLK2      COMPARE BLOCK COUNTS
         BNL   REPDCB46                 BR NOT LOW TO CONTINUE
*
         NI    TABOPS,X'FF'-RDBK-CHKPT  PEEL OFF READ BACKWRD    YM5600
*                                       AND DOS CHKPT RCD MASKS
         B     REPDCB52                 GET NEXT ELEMENT
*
REPDCB46 EQU   *
*
         LA    WRKR6,ENDBUFF            ADD NINETEEN TO CCW DATA
         A     WRKR6,RSCCW1              ADDRESS TO POINT TO END
         ST    WRKR6,RSCCW1              OF BUFFER FOR READBACK
*
         MVI   RSCCW1,READBACK          SET OP CODE TO READ BACKWARD
*
*
REPDCB48 EQU   *
*
         MVC   RSDEBUCB(L4),TABUCB      ADJUST UCB POINTER IN WORK AREA
REPDCB49 EQU   *
         MVI   RSSTAT1,BUSY             TURN ON WORK AREA BUSY SWITCH
*
REPDCB50 EQU   *
*
*        EXCP  ROUTINE
*
*
*
         XC    RSECBAD(L4),RSECBAD      INITIALIZE ECB
*
*
         EXCP  RSIOB
*
*
         LTR   WAIT,WAIT                SHOULD WE WAIT
         BNZ   REPDCB56                 BRANCH YES TO WAIT
*
REPDCB52 EQU   *
*
         TM    TABFLG1,TABLAST          IS THIS THE LAST ENTRY
         BO    REPDCB54                 BRANCH YES TO CHECK IF DONE
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TABL POINTER
         B     REPDCB22                 CONTINUE PROCESSING
*
REPDCB54 EQU   *
*
*        LAST ENTRY HAS BEEN PROCESSED, ARE ALL ELTS COMPLETE
*
         LTR   WRKR3,WRKR3              TEST SPIN SWITCH
         BZ    REPDCB58                 SWITCH OFF - STOP SPINNING
         B     REPDCB20                 SPIN THRU TABLE ELEMENTS
*
*
*        WAIT ROUTINE
*
REPDCB56 EQU   *
*        WAIT FOR CE FOR CONTROL OPERATIONS, WAIT FOR CE AND DE FOR ALL
*        OTHERS,  NOP BRINGS IN CE AND DE SO CHECKING CAN BE DONE
*        FOR ERRORS BEFORE THE NEXT OPERATION IS STARTED.
*
*
         WAIT  ECB=RSECBAD
*
         MVI   RSSTAT1,NOTBUSY          TURN OFF WORK AREA
*                                       BUSY SWITCH
*
         TM    TABOPS,LTM               LEADING TAPEMARK IND.
         BZ    REPDCB57                 BRANCH NO
*
         TM    RSIOBCSW+4,UE            UNIT EXCEPTION INDICATED
         BO    REPDCB80                 BRANCH YES
*
REPDCB57 EQU   *
*
         TM    RSECBAD,PERMERR          CHECK FOR PERMANENT I/O ERRORS
         BM    REPDCB76                 BRANCH YES TO CHECK ERRORS
*
*
         CLI   RSCCW1,NOPOP             HAS NOP BEEN ISSUED
         BCR   EQUAL,WRKR5              BR YES TO CONTINUE PROCESSING
*
*        IF READ OR READ BACK GO TEST FOR CHKPT RCDS/LEADING TM
*
         TM    RSCCW1,READOP            OP CODE READ OR READBACK
         BZ    REPDCB80                 BRANCH YES TO TEST RCD
*
         MVI   RSCCW1,NOPOP             CHANGE OP CODE TO NOP
         B     REPDCB49                 GO TO EXCP
*
*
*
*
REPDCB58 EQU   *
*        WAIT ON ALL WORK AREAS TO BE SURE ALL HAVE BEEN CHECKED
*        FOR I/O ERRORS
*
         LR    CTABLR,TABLR             INIT TABL POINTER
*
REPDCB60 EQU   *
*
         TM    TABFLG1,TABDOSTP         IS IT DOS TAPE
         BNO   REPDCB62                 BRANCH NO TO CONTINUE
*
         L     WRKR4,TABSEGAD-D1        WORK AREA SEGMENT ADDRESS
         TM    RSSTAT1,BUSY             IS WORK AREA BUSY
         BZ    REPDCB62                 BRANCH NO TO CONTINUE
*
         LA    WAIT,ONE                 TURN ON WAIT SWITCH
         BAL WRKR5,REPDCB56             GO TO WAIT ROUTINE
*
         MVI   TABVLID2,BLANK           RESTORE BLANKS
         MVC   TABVLID2+D1(L23),TABVLID2     TO TABL AREA
*
REPDCB62 EQU   *
*
         TM    TABFLG1,TABLAST          IS THIS THE LAST ENTRY
         BO    REPDCB68                 BRANCH YES TO EXIT
*
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TABL POINTER
         B     REPDCB60                 CONTINUE WAIT PROCESSING
*
*    ******************************************************************
*
REPDCB64 EQU   *
*
*    ******************************************************************
*
*    *** SET ERROR CODES ***
*
*    ******************************************************************
*
         MVI   RSRETCOD+D1,ERR065       SET ERR CODE FOR D.S.  @ZSUT222
*                                            POSITIONING IN RSTWA
         B     REPDCBER                 BRANCH TO XCTL RESTART @ZSUT222
*
REPDCB66 EQU   *
*
         MVI   RSRETCOD+D1,ERR064       SET ERR CODE FOR RECORD@ZSUT222
*                                            POSITIONING IN RSTWA
REPDCBER EQU   *                                               @ZSUT222
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       DETECTING THE ERROR    @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
REPDCB68 EQU   *
*
         L     UCBR,TABUCB              POINT TO UCB             A37817
         LR    CTABLR,TABLR             REINITIALIZE TABL POINTER
         L     WRKR4,TABSEGAD-D1        POINTER TO FIRST WORK AREA
*
         LA    WRKR3,RSCCW2             SET UP WORK AREA FOR XCTL
*
*
*    ******************************************************************
*
*    *** DETERMINE WHICH EXIT MODULE TO TAKE ***
*
*    ******************************************************************
*
         MVC   D0(L8,WRKR3),RSTMODNM    NAME OF RESTART MODULE
*
         TM    RSRETCOD+D1,ERRORS       IS ERROR CODE SET
         BNE   REPDCB72                 BRANCH YES TO XCTL TO
*                                        IGC0V05B
         TM    RSDCBFLG,DAFLAG          DA DEVICE INDICATED
         BNO   REPDCB70                 BRANCH NO
*
         MVI   D4(WRKR3),DAMOD          SET MODULE NAME TO DA
         B     REPDCB72                  MODULE IGC0R05B - XCTL
*
REPDCB70 EQU   *
*
         MVI   D4(WRKR3),AMMOD          SET NEW MODULE ID TO
*                                       ACCESS METHOD DISP.
REPDCB72 EQU   *                        MODULE IGC0T05B
*
         LA    WRKR6,D8(WRKR3)          SET UP FOR XCTL
         LR    WRKR2,BUFR               POINT REG 1 TO RESTART
*                                        WORK AREA
         XCTL  EPLOC=(WRKR3),SF=(E,(15))
*
REPDCB76 EQU   *
*
*    ******************************************************************
*
*    *** ERROR FOUND ***
*
*        THIS PORTION OF CODE MAY BE TAKEN OUT WHEN I/O SUPERVISOR HAS
*        PUT THE FIXES IN
*
*        THIS IS THE CURRENT THOUGHT PERSISTING TO THE HANDLING OF I/O
*        ERRORS
*
*        ERRORS THAT HAVE OCCURRED AT CHECKPOINT TIME IS ACCEPTED
*
*    ******************************************************************
*
         CLI   RSCCW1,READ              IS ERROR IN READ FORWARD
         BE    REPDCB78                 BRANCH YES
*
         CLI   RSCCW1,READBACK          IS ERROR IN READ BACKWARD
         BNE   REPDCB64                 BR NO TO SET D.S. POSITIONING
*                                            ERROR CODE
*
*
REPDCB78 EQU   *
*
         CLC   TABBLK1(L4),TABBLK2      HAS POSITIONING BEEN COMPLETED
         BNE   REPDCB66                 BRANCH NO TO SET ERROR CODE
*
         TM    DCBIFLGS,ERRCHKPT        IS THERE PERMANENT ERR AT CHKPT
         BNO   REPDCB66                 BRANCH IF NOT TO SET ERROR CODE
*
         B     REPDCB52                 GO TO CONTINUE PROCESSING
*
REPDCB80 EQU   *
*
***********************************************************************
*
*    THIS SECTION OF CODE TESTS FOR THE LEADING TAPE MARK AND EMBEDDED
*    CHKPT RCDS.  FOR THE OPTIONAL LEADING TM IT SETS TABOPS FOR REWIND
*    IF THE TM IS NOT PRESENT AND PEELS THE TM TABOPS MASK OFF.  SETS
*    THE BYPASS FLAG WHEN ENCOUNTERING THE CHKPT HDR RCD - TURNS IT OFF
*    WHEN ENCOUNTERING THE CHKPT TRLR RCD.
*
***********************************************************************
*
         TM    TABOPS,LTM               LEADING TAPE MARK IND.
         BZ    REPDCB82                 BRANCH NO
*
         XI    TABOPS,LTM               PEEL OFF LEADING TM MASK
*
         TM    RSIOBCSW+4,UE            UNIT EXCEPTION INDICATED
         BO    ZERO(WRKR5)              BRANCH YES TO CONTINUE
*
         OI    TABOPS,REW               SET CODE FOR REWIND
         BR    WRKR5                    CONTINUE PROCESSING
*
REPDCB82 EQU   *
*
         TM    TABOPS,CHKPT             BYPASS CHKPT RCDS IND.
         BZ    ZERO(WRKR5)              BRANCH NO
*
         CLI   RSCCW1,READBACK          IS OP CODE READBACK
         BNE   REPDCB84                 BRANCH NO
*
         LA    WRKR6,ENDBUFF            NINETEEN
         L     WRKR2,RSCCW1             CCW DATA ADDRESS LESS
         SR    WRKR2,WRKR6               NINETEEN TO POINT TO
         ST    WRKR2,RSCCW1              START OF 20 BYTE BUFFER
*
REPDCB84 EQU   *
*
         L     WRKR6,RSCCW1             CCW DATA ADDRESS
*
         TM    TABFLG2,TABSW            BYPASS CHKPT RCD FLAG ON
         BO    REPDCB86                 BRANCH YES
*
         CLC   CHKPTID,ZERO(WRKR6)      CHKPT HDR RCD
         BNE   ZERO(WRKR5)              BRANCH NO TO CONTINUE
*
         OI    TABFLG2,TABSW            TURN ON BYPASS FLAG
*
         L     WRKR6,TABBLK2            GET BLOCK COUNT
         BCTR  WRKR6,ZERO               SUBTRACT ONE
         ST    WRKR6,TABBLK2            STORE UPDATED BLOCK CNT
         BR    WRKR5                    CONTINUE PROCESSING
*
REPDCB86 EQU   *
*
         CLC   CHKPTID,ZERO(WRKR6)      CHKPT TRLR RCD
         BNE   ZERO(WRKR5)              BRANCH NO
*
         NI    TABFLG2,X'FF'-TABSW      TURN OFF BYPASS FLAG     Y02076
         BR    WRKR5                    CONTINUE PROCESSING
***********************************************************************
*
*     CONSTANTS USED IN REPI/O
*
***********************************************************************
*
RSTMODNM DC    CL8'IGC0V05B'            RESTART EXIT MOD
MODID    DC    CL8'IGC0U05B'            MODULE ID              @ZSUT222
CHKPTID  DC    CL12'/// CHKPT //'       CHKPT HDR/TRLR ID
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0U05B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         EJECT
         IEEVRSWA  VER=3                AOS2 VERSION OF WA
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
GETSAVE  EQU   RSDEB
GOTLOC   EQU   GETSAVE+72
FREELIST EQU   GOTLOC+8
         ORG   FREELIST                 ORG TO DEFINE FREEMAIN LIST
         FREEMAIN  V,A=GOTLOC,MF=L
         ORG   RSDEB                    RESET I.C.
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSSTATUS DS    0CL8
RSSTAT1  DS    CL1                      STATUS BYTE 1
RSSTAT2  DS    CL1                      STATUS BYTE 2
RSSTAT3  DS    CL1                      STATUS BYTE 3
RSSTAT4  DS    CL1                      STATUS BYTE 4
         DS    F                        RESERVED FOR FUTURE USE
         EJECT
         DCBD  DSORG=PS
         EJECT
         IEZDEB                                                  Y02076
DEBBYPAS EQU   DEBSTRHH                 EQUATE FOR BYPASS FLG
         EJECT
         IHJDSTAB                                                Y02076
TABPOS   EQU   TABVLID2
TABOPS   EQU   TABPOS
TABFSFN1 EQU   TABPOS+1
TABFSFN2 EQU   TABPOS+2
TABBLK1  EQU   TABPOS+4
TABBLK2  EQU   TABPOS+8
TABUCB   EQU   TABPOS+12
         EJECT
SRT      DSECT
         IEFUCBOB
         END
