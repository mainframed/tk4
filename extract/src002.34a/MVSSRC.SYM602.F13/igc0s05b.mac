         TITLE 'IGC0S05B  DATA SET PROCESSOR - NON-DA DATA SET POSITIONX
               ING    REPOSITION I/O  RESTART-SVC 52  OS/360'
IGC0S05B CSECT
*                                                                A50330
*                                                                A47745
*          RELEASE 20 DELETIONS
*0483                                                            A37817
*0483374000                                                      A33655
*0483                                                            A32901
*0483351000-353000,419000-420000,450000-451000                   A31340
*0483326000                                                      S20038
*0483337000,343000,345000                                        A33101
*0483324500                                                      A38125
*          RELEASE 21 DELETIONS
*0970                                                            A46650
*0970649000-651000                                               A41420
*0970046000,268000,273000-273200,429000,433000,473000,489000-    S21040
*0970490000,618000-619000,656000-660000,676000-677000,743000-    S21040
*0970774000,817000-818000                                        S21040
*
* VS2 RELEASE 3 CHANGES ADDITIONS DELETIONS
*
*                                                              @ZA02527
*                                                              @ZA02883
*744500,797500,806500                                          @ZA02208
*A354010-354030                                                @ZA14566
* APAR OZ31492 HAS BEEN FLAGGED AS @ZSUT222                    @ZSUT222
*C172500-173500,532808,745000,796500,806500                    @ZSUT222
*A745100-745500,816002                                         @ZSUT222
*          VS2 RELEASE 3 SU32
*                                                              @G32DSMI
*D733500-733940                                                @ZA19615
*A742100-742700                                                @ZA19615
*A796510                                                       @ZA19617
*C405360                                                       @ZA20448
*A39750003-39750007                                            @ZA26571
*STATUS CHANGE LEVEL 003
*
***********************************************************************
*
*TITLE - NON-DA DATA SET REPOSITIONING
*
*FUNCTION/OPERATION - A. FOR ALL IBM STANDARD LABELED TAPES BEING USED
*                        VERIFY THE DATA SET LABEL BY COMPARING THE
*                        LABEL IN THE JFCB AGAINST THE DATA SET LABEL
*                        IN THE TAPE LABEL. IF THE TAPE LABEL INDICATES
*                        PASSWORD PROTECTION A PASSWORD IS REQUIRED OF
*                        THE OPERATOR BEFORE PROCESSING CAN CONTINUE.
*                        IF THE TAPE LABEL INDICATES A CHECKPT   YM7337
*                        DATA SET, OR IF THE DSAB INDICATES THAT YM7337
*                        AT CHECKPOINT THE DATA SET WAS A CHECK- YM7337
*                        POINT DATA SET, THEN IGC0Q05B WILL BE   YM7337
*                        CALLED TO VERIFY THE SECURITY OF SAID   YM7337
*                        DATA SETS.                              YM7337
*
*                     B. POSITION TAPE TO CORRECT DATA SET USING FILE
*                        SEQUENCE NUMBER IN JFCB WHICH CAN BE OBTAINED
*                        FROM THE 48 BYTE TABLE ENTRY WHICH IS USED IN
*                        THE RESTART PORTION OF CHECKPOINT/RESTART.
*
*                     C. POSITION TAPE TO CORRECT RECORD WITHIN DATA
*                        SET USING DCB POSITIONING INFORMATION.
*
*                     D. INITIALIZES, BUT DOES POSITION, TABLE
*                        ENTRIES FOR TAPES WHICH HAVE THE BYPASS
*                        OPTIONAL LEADING TAPE MARK AND/OR BYPASS
*                        EMBEDDED CHKPT RECORDS OPTION(S)
*                        SPECIFIED (DOS TAPES).  THESE TAPES ARE
*                        POSITIONED BY IGC0U05B.
*
*ENTRY POINTS - IGC0S05B - INITIAL ENTRY TO THIS MODULE BY MEANS OF AN
*                          XCTL FROM IGC0L05B OR IGC0P05B.
*
*INPUT - REGISTER 8   BEGINNING OF DCB TABLE
*        REGISTER 1   USER BUFFER AREA
*        REGISTER 10  USER BUFFER AREA
*        REGISTER 12  USER BUFFER AREA
*        REGISTER 6   POINTER TO SECONDARY WORK AREA
*
*        ALL OPENED DCB (S) WITH THEIR ASSOCIATED CONTROL BLOCKS
*        THE 48 BYTE TABLE ENTRY (IES) THAT IS (ARE) USED IN RESTART
*        RESTART WORKAREA
*
*OUTPUT - REGISTER 8   BEGINNING OF DCB TABLE
*         REGISTER 1   USER BUFFER AREA
*         REGISTER 10  USER BUFFER AREA
*         TAPE POSITIONED AT CORRECT RECORD WITHIN DATA SET
*
*EXTERNAL ROUTINE - SECLOADA
*                   IGC0Q05B - FOR RE-VERIFYING CHKPT DATA SETS  YM7337
*
*EXITS - NORMAL - FINAL EXIT IS MADE VIA XCTL TO THE NEXT MODULE OF
*                 REPI/O. WILL XCTL TO IGC0U05B IF ANY TAPE ENTRIES
*                 HAVE BEEN FLAGGED AS DOS TAPES.  OTHERWISE WILL
*                 XCTL TO IGC0R05B OR IGC0T05B
*
*      - ERROR - ERROR EXITS ARE MADE VIA XCTL TO RESTART EXIT IGC0V05B
*                WITH RETURN CODES IN 'RSRETCOD' FIELD -
*
*                60 - ERRORS IN TRYING TO POSITION TO CORRECT DATA SET
*
*                63 - ERRORS IN TRYING TO POSITION TO CORRECT RECORD
*                     WITHIN DATA SET
*
*                219 - ERROR IN THAT CORRECT PASSWORD WAS NOT GIVEN
*
*                222 - DATA SET LABEL IN JFCB NOT SAME AS THAT IN TAPE
*                      LABEL
*
*TABLES/WORKAREAS - THE WORKAREA USED IS DESCRIBED BY THE DSECTS AT THE
*                   END OF THE LISTING.
*
***********************************************************************
*                                                                     *
*    THE FOLLOWING IS A DESCRIPTION OF THE 48 BYTE TABLE ENTRY THAT   *
*    IS USED IN THE RESTART PORTION OF CHECKPOINT/RESTART.  EACH      *
*    ENTRY IN THE TABLE (ONE FOR EACH OPEN DATA SET AT CHECKPOINT)    *
*    IS 48 BYTES LONG.                                                *
*                                                                     *
***********************************************************************
*
*        ------------------- 4 BYTES -----------------
*
*      0 +++++++++++++++++++++++++++++++++++++++++++++
*        +DATA SET  +           DCB                  +
*        + ORGN.    +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 4
*        +FLAG BYTE +    WORKAREA SEGMENT            +
*        + NO. 1    +         ADDRESS                +
*      8 +++++++++++++++++++++++++++++++++++++++++++++
*        +NUMBER    +         JFCB TTR               +
*        + OF VOLS  +         ADDRESS                +
*        +++++++++++++++++++++++++++++++++++++++++++++ 12
*
*     12 +++++++++++++++++++++++
*        +TAPE LABL + FILE SEQ +        DEVICE = TAPE
*        +INFO BYTE + NUMBER   +
*        +++++++++++++++++++++++
*
*     12 +++++++++++++++++++++++
*        +    OLD   TIOT       +        DA AND UNIT RECORD
*        +      OFFSET         +
*        +++++++++++++++++++++++
*
*                              +++++++++++++++++++++++
*                              +FLAG BYTE +FLAG BYTE +
*                              +  NO. 2   +  NO. 3   +
*     16 +++++++++++++++++++++++++++++++++++++++++++++
*        +FLAG BYTE +FLAG BYTE +                     +
*        + NO. 4    + NO. 5    +   VOLUME ID NO. 1   +
*        +++++++++++++++++++++++                     + 20
*        +                                           +
*        +                                           +
*     24 +++++++++++++++++++++++++++++++++++++++++++++
*        +                                           +
*        +   VOLUME ID NO. 2                         +
*        +                     +++++++++++++++++++++++ 28
*        +                     +                     +
*        +                     +   VOLUME ID NO. 3   +
*     32 +++++++++++++++++++++++                     +
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 36
*        +                                           +
*        +   VOLUME ID NO. 4                         +
*     40 +                     +++++++++++++++++++++++
*        +                     +                     +
*        +                     +                     +
*        +++++++++++++++++++++++   VOLUME ID NO. 5   + 44
*        +                                           +
*        +                                           +
*        +++++++++++++++++++++++++++++++++++++++++++++ 48
*
*
*ATTRIBUTES - REENTRANT
*             REUSABLE
*             ENABLED
*             PRIVILEGED
*
***********************************************************************
         EJECT ,                                                 A27694
*
***********************************************************************
*
*    REGISTER CONVENTION TO BE USED THRU-OUT REPI/O PHASE
*
***********************************************************************
*
WRKR1    EQU   0                        WORK/PARAMETER REGISTER
R0       EQU   0                        REG 0                    YM7337
WRKR2    EQU   1                        WORK/PARAMETER REGISTER
R1       EQU   1                        REG 1                    YM7337
DCBR     EQU   2                        CURRENT DCB REGISTER
R2       EQU   2                        REG 2                    YM7337
BASER    EQU   3                        BASE RIGISTER
R3       EQU   3                        REG 3                    YM7337
DEBR     EQU   4                        CURRENT DEB REGISTER
R4       EQU   4                        REG 4                    YM7337
UCBR     EQU   5                        CURRENT UCB REGISTER
R5       EQU   5                        REG 5                    YM7337
TIOTR    EQU   6                        NEW TIOT RESISTER
R6       EQU   6                        REG 6                    YM7337
TCBR     EQU   7                        TCB REGISTER
R7       EQU   7                        REG 7                    YM7337
TABLR    EQU   8                        BEGINNING TO DCB TABLE REGISTER
R8       EQU   8                        REG 8                    YM7337
CTABLR   EQU   9                        CURRENT ENTRY IN DCB TABLE
R9       EQU   9                        REG 9                    YM7337
BUFR     EQU   10                       USER BUFFER AREA
RA       EQU   10                       REG 10                   YM7337
DSCNTR   EQU   11                       NUMBER OF DATA SETS
RB       EQU   11                       REG 11                   YM7337
WRKR3    EQU   12                       WORK REGISTER
RC       EQU   12                       REG 12                   YM7337
WRKR4    EQU   13                       WORK REGISTER
R13      EQU   13
RD       EQU   13                       REG 13                   YM7337
WRKR5    EQU   14                       WORK/PARAMETER REGISTER
RE       EQU   14                       REG 14                   YM7337
WRKR6    EQU   15                       WORK/PARAMETER REGISTER
RF       EQU   15                       REG 15                   YM7337
*
***********************************************************************
*
*    OFFSETS TO BE USED IN REPI/O PHASE
*
***********************************************************************
*
INOROUT  EQU   X'40'                    SYSIN OR SYSOUT DATA SET
TPDEV    EQU   X'10'                    TAPE DEVICE
LASTENT  EQU   X'08'                    LAST ENTRY
BLP      EQU   X'10'                    BYPASS LABEL PROCESSING  A31340
AL       EQU   X'08'                    ASCII LABEL              S20038
SL       EQU   X'02'                    STANDARD LABEL
NL       EQU   X'01'                    NO LABEL
DAFLAG   EQU   X'80'                    DA DATA SET FLAG
TYPERST  EQU   X'80'                    IMMEDIATE RESTART
TABENT   EQU   48                       TABLE ENTRY LENGTH
READ     EQU   X'02'                    READ FOR TAPE
NOPOP    EQU   X'03'                    NOP
REWIND   EQU   X'07'                    REWIND
READBACK EQU   X'0C'                    READBACK
BSFOP    EQU   X'2F'                    BACKWARD SPACE FILE
FSFOP    EQU   X'3F'                    FORWARD SPACE FILE
TIC      EQU   X'08'                    TIC
PERMERR  EQU   X'7F'                    PERMANENT ERROR
ERR060   EQU   60                       ERROR IN DATA SET POSIT@ZSUT222
ERR063   EQU   63                       ERROR IN RECORD POSIT. @ZSUT222
ERR219   EQU   219                      ERR ID WRONG PASSWORD  @ZSUT222
ERR222   EQU   222                      ERR ID NO DS LABEL VERIFYY02049
FLAGS    EQU   X'30'
COUNT    EQU   X'0D'                                             A27280
ONE      EQU   X'01'                    CONSTANT ONE
SLFLAG   EQU   X'01'                    FLAG FOR SL IN UCB
ALFLAG   EQU   X'04'                    FLAG FOR AL IN UCB       S20038
IN       EQU   X'80'                    SYSIN DATA SET (UCBWGT)
EXCHPGM  EQU   X'80'                    EXCP
DADEVDPT EQU   X'0C'                    DA DEVICE DEPENDENT SECTION
RDBACK   EQU   X'03'                    READ BACKWARDS (DEBOPATB)
ERRORS   EQU   X'FF'                    ERROR CODE MASK          Y02049
ERRCHKPT EQU   X'C0'                    PERMANENT ERROR AT CHECKPOINT
NOOPS    EQU   X'FF'
RESET    EQU   X'FE'                    RESET SL FLAG            A32901
REW      EQU   X'80'                    REWIND MASK FOR TABOPS
FSF      EQU   X'40'                    FORWARD SPACE FILE MASK
BSF      EQU   X'20'                    BACK SPACE FILE MASK
RDOP     EQU   X'10'                    READ FORWARD MASK
RDBK     EQU   X'08'                    READ BACKWARD MASK
BUSY     EQU   X'80'
NOTBUSY  EQU   X'00'
BLANK    EQU   X'40'
IBITS    EQU   X'0C'                    UNIQUE DEB INPUT BITS    A33655
EOFRST   EQU   X'DF'                    DEB EOF RESET MASK       A33655
ZERO     EQU   0
WAIT     EQU   7
EQUAL    EQU   8
NOTMIX   EQU   9
D0       EQU   0
D1       EQU   1
D2       EQU   2                        TWO                      Y02049
D3       EQU   3                        OFFSET 3                 Y02049
D4       EQU   4
D7       EQU   7
D8       EQU   8
D16      EQU   16                       DEB OFFSET BSAM-QSAM SEC Y02049
C17      EQU   17                       TAPE LABEL LENGTH        YM7509
D24      EQU   24                       24 BYTES                 Y02049
D40      EQU   40                       10 WORDS                 Y02049
D80      EQU   80                       HDR LENGTH               Y02049
D83      EQU   83                       OFFSET 83                Y02049
D160     EQU   160                      STORAGE CONSTANT         Y02049
D280     EQU   280                      OFFSET TO JFCB IN WRAREA Y02049
D323     EQU   323                      OFFSET TO LAST NAME CHAR Y02049
DX2      EQU   X'02'                    PASSWORD TEST ID         Y02049
L1       EQU   1
L4       EQU   4
L8       EQU   8
L18      EQU   18
L23      EQU   23
L24      EQU   24
L26      EQU   26                                                S21040
AMMOD    EQU   X'E3'      CHARACTER T - ACCESS METHOD DISP. MOD. S21040
DAMOD    EQU   X'D9'      CHARACTER R - DIRECT ACCESS MODULE     S21040
DOSMOD   EQU   X'E4'      CHARACTER U - DOS TAPE POSITION MODULE S21040
NOTMIXED EQU   11                       BRANCH ON NOT MIXED      S21040
DOSTAPE  EQU   X'01'                    DOS TAPE MASK            S21040
READOP   EQU   X'F1'                    OP CODE IS READ OR READ  S21040
*                                       BACK IF THESE BITS ARE 0
D44      EQU   44                       MAX NO. DATA SET NM CHARSY02049
D43      EQU   43                       DATA SET NAME OFFSET     Y02049
PASSIND  EQU   X'F7'                    RESET MASK PASSWORD CHK  Y02049
DF1      EQU   X'F1'                    CHAR ONE                 Y02049
DF2      EQU   X'F2'                    CHAR TWO                 Y02049
D128     EQU   128                      SECLOADA SPACE CONSTANT  Y02049
ECBBGADR EQU   32                       ECB ADR OFFSET           Y02049
IOBCCWOF EQU   96                       OFFSET FOR SECLOADA CCWS Y02049
GOTSTOR  EQU   X'FF'                    SECLOADA STOR GOTTEN IND Y02049
RTNSW    EQU   X'02'                    RTN FROM SECLOADA SW     Y02049
READTAPE EQU   X'02'                    READ TAPE OP CODE        Y02049
BYTECNT  EQU   80                       HDR1&HDR2 RECORD SIZE    Y02049
HIORDER  EQU   8                        ICM&STCM MASK            Y02049
ADRBYTES EQU   7                        ICM&STCM MASK            Y02049
JFCBLNTH EQU   176                      JFCB LENGTH              Y02049
INPUTMSK EQU   X'04'                    OPEN FOR INPUT MASK      Y02049
PASSWDID EQU   X'04'                    PASSWORD POS REQ IND     Y02049
RLOCKSW  EQU   X'00'                    RESET MASK WRK AREA LK SWY02049
WRITEFLG EQU   X'30'                    PASSWORD WRITE CHK IND   Y02049
RDWTRFLG EQU   X'10'                    PASSWORD RD/WTR CHK IND  Y02049
RESETFLG EQU   X'00'                    FLAGS RESET MASK         Y02049
LOCKSW   EQU   X'01'                    WORKAREA LOCK SW         Y02049
DEBPRFLN EQU   16                       LENGTH OF DEB PREFIX     Y02049
QMWAOFST EQU   24                       WA OFFSET                YM7077
MODECLR  EQU   X'C0'                    DENSITY SET              YM7551
SETMODE  EQU   X'2B'                    EVEN PAR TRANS MD CVT OFFYM7551
CHKPTFLG EQU   C'C'                     HDR2 CHKPT D.S. FLAG     YM7337
*
***********************************************************************
*
         EJECT ,                                                 A27694
         BALR  BASER,ZERO               ESTABLISH ADDRESSIBILITY
         USING *,BASER                  ESTABLISH BASE REG
         B     BEGIN                    BR AROUND EYE CATCHER    Y01909
         CNOP  0,8                      ALIGN TO A DBL WRD BNDRY Y01909
         DC    CL8'IGC0S05B'            MODULE NAME            @ZSUT222
         DC    CL8'&SYSDATE'            LAST DATE SHIPPED      @ZSUT222
         DC    CL8'@ZSUT222'            LAST CODE SHIPPED      @ZSUT222
         DC    CL8'@SU83200'            SELECTABLE UNIT ID     @ZSUT222
BEGIN    EQU   *                                                 Y01909
*
         USING IHADCB,DCBR
         USING DEBBASIC,DEBR                                     Y02049
         USING UCBOB,UCBR
         USING TABL,CTABLR
         USING RSTWA,BUFR
         USING RSDSECT,WRKR4
***********************************************************************
*              TEST FOR RETURN FROM SECLOADA                          *
***********************************************************************
         MODESET EXTKEY=ZERO            KEY 0                    Y02049
         TM    TABFLG2,TABSW            TEST SW IN CURRENT TAB   Y02049
         BO    PASSWORD                 PROCESS SECLOADA RTN COD YM7337
***                                                              YM7337
*        GET DADSM-LIKE WORK AREA FOR BOTH SECLOADA CALL         YM7337
*        AND CALL TO Q05B                                        YM7337
***                                                              YM7337
         LA    RF,RSREGSAV              GET ADDR SAVE AREA       YM7337
         STM   R0,RF,D0(RF)             SAVE REGS                YM7337
         XR    R1,R1                    PHONY PREV WORK AREA     YM7337
         IECRES GET,LV=256,A=(R1),ID=S05B,PREFIX=YES             YM7337*
                                        GET SECLOADA WORK AREA   YM7337
         USING IECEXTPR,R1              W/A ADDR                 YM7337
         MODESET EXTKEY=ZERO            RET FROM GET IS KEY=5    YM7337
         LM    R2,RF,D2*4(RF)           RESTORE REGS             YM7337
         MVC   WTGWTOPR(D4),WTGCODE     SET WTO FLAGS            YM7337
         ST    R1,SECSWICH              SAVE CORE ADDR           YM7337
         DROP  R1                       R1 = BLAH                YM7337
         LM    R0,R1,RSREGSAV           RESTORE REGS 0 AND 1     YM7337
*
*
         LR    BUFR,WRKR2               SAVE POINTER TO RSWA
         LR    CTABLR,TABLR             INITIALIZE TABL PTR
         L     WRKR4,TABSEGAD-D1        WORKAREA SEGMENT ADDR
*
*
REPDCB00 EQU   *
*
         TM    TABFLG1,TABTAPE          IS IT TAPE DEVICE
         BNO   REPDCB26                 BRANCH IF NOT TO GET NEXT ENTRY
*
         TM    TABFLG2,TABRSDS          IS THIS THE WORKING      YM7358
*                                       RESTART DATA SET?        YM7358
         BNO   REPDCB01                 NO, CONTINUE PROCESSING  YM7358
         MVI   TABOPS,ZERO              INDICATE REPOSITIONING   YM7358
*                                       NOT TO TAKE PLACE ON THE YM7358
*                                       WORKING RESTART DATA SET YM7358
         B     REPDCB26                 GO GET NEXT ENTRY        YM7358
*
*    ******************************************************************
*
*    *** ALL TAPES OTHER THAN THOSE FOR SYSIN DATA SETS AND
*        THOSE THAT HAVE NON-STANDARD LABELS ARE ASSUMED TO BE
*        POSITIONED AT LOAD POINT UPON ENTRY TO THIS MODULE ***
*
*    ******************************************************************
*
*    *** SYSIN DATA SETS ***
*
*        THE SCHEDULER WOULD HAVE POSITIONED THE TAPE AT THE INTER-
*        RECORD GAP IMMEDIATELY PRECEDING THE FIRST DATA RECORD IN THE
*        USER'S INPUT STREAM
*
*    *** NON-STANDARD LABELS ***
*
*        THE USER PROVIDED LABEL PROCESSING ROUTINE WOULD HAVE ALREADY
*        REPOSITIONED UP TO THE CORRECT DATA SET, LEAVING THE TAPE AT
*        THE INTERRECORD GAP THAT PRECEDES THE INITIAL RECORD OF THE
*        DATA SET ON THE CURRENT VOLUME
*
*    ******************************************************************
*
*    *** PICK UP NECESSARY ADDRESSES ***
*
REPDCB01 EQU   *                                                 YM7358
         TM    TABFLG2,TABG5V          GREATER THEN 5 VOLS ?   @ZA02883
         BZ    REPDCB02                BRANCH IF NOT           @ZA02883
         MVC   TABJFCB(D3),TABVLID5+D3 RESTORE JFCB TTR        @ZA02527
REPDCB02 XC    TABVLID2(L24),TABVLID2   ZERO WORK SPACE IN TAB @ZA02883
         L     WRKR4,TABSEGAD-D1        WORKAREA SEGMENT ADDR
         L     DCBR,TABDCBAD-D1         DCB ADDR IN THIS ENTRY
         L     DEBR,DCBDEBAD            DEB ADDR ASSOC WITH THIS DCB
         L     UCBR,DEBSUCBA            UCB ADDR ASSOC WITH THIS DEB
*
         ST    UCBR,TABUCB              POINTER TO UCB IN TABL
*
*    *** INITIALIZE CHANNEL PROGRAM ***
*
         XC    RSCCW1(L26),RSCCW1       CLEAR CCW THROUGH END    S21040
*                                       OF WORK SPACE
*
         MVI   RSCCW1+D4,FLAGS          SET SLI, SKIP BITS ON
         MVI   RSCCW1+D7,COUNT          SET BYTE COUNT TO ONE
*
         CLI   TABFSQNO,ZERO            IS FILE SEQ NO. ZERO     A27694
         BNE   REPDCB90                 BR IF NOT               OX01653
         MVI   TABFSQNO,ONE             SET FILE SEQ NO. = 1    OX01653
REPDCB90 EQU   *                                                OX01653
*
         SR    DSCNTR,DSCNTR            CLEAR REG
         IC    DSCNTR,TABFSQNO          GET FILE SEQ NO. IN JFCB
*
***********************************************************************
*        SET UP TO DO POSSIBILE PASSWORD CHECKS FOR SL LABELED TAPES  *
***********************************************************************
REPDCB06 EQU   *
         TM    TABTPLBL,SL              STANDARD LABELED TAPE    Y02049
         BNO   REPDCX06                 NO  CONTINUE             Y02049
         LA    WRKR2,RSTLABEL           TAPE LABEL BUFFER ADR    Y02049
         STCM  WRKR2,ADRBYTES,RSCCW2+D1 PUT BUFFER ADR IN CCW    Y02049
         MVI   RSCCW2,READTAPE          OP CODE FOR TAPE READ    Y02049
         MVI   RSCCW2+D7,BYTECNT        READ 80 BYTES OF DATA    Y02049
         XC    RSCCW2+D4(D1),RSCCW2+D4  DATA TRANS/NO WRONG LNG  Y02049
         MVI   RSPASSFL,D0              CLEAR PASSWORD FLAG BYTE Y02049
*
*    ******************************************************************
*
*    *** CHECK LABEL TO DETERMINE PROCESSING METHOD ***
*
*    ******************************************************************
*
REPDCX06 EQU   *                        INSTR MUST FOLLOW        Y02049
         LR    WRKR3,DSCNTR             SAVE FILE SEQ NUMBER     A38125
         NI    SRTESTAT,RESET           RESET SL FLAG IN UCB     A32901
         TM    TABTPLBL,SL+AL           IS IT SL OR AL           S20038
         BZ    REPDCB10                 BRANCH IF NOT TO CHECK   S20038
*                                       FOR NL                   S20038
*
         TM    TABTPLBL,SL              IS IT STANDARD LABEL
         BZ    REPDCB09                 BRANCH IF NOT - MUST BE  S20038
*                                       AL                       S20038
*
*    *** POSITION TO CORRECT DATA SET FOR STANDARD LABEL ***
*
         OI    SRTESTAT,SLFLAG          SET FLAG IN UCB FOR SL
*
REPDCB07 EQU   *                                                 S20038
*
         OI    TABOPS,FSF               SET TABOPS CODE FOR FSF
*
         CLI   TABFSQNO,ONE             IS FILE SEQ NO. ONE
         BNE   REPDCB08                 BRANCH NO TO SET NO. FOR FSF
         MVI   TABFSFN1,ONE             SET NUMBER OF FSF TO ONE
         B     REPDCB12                 GO TO UPDATE UCB FILE SEQ NO
*
REPDCB08 EQU   *
*
         BCTR  DSCNTR,ZERO              SUBTRACT ONE FOR FIRST FILE
         LR    TCBR,DSCNTR              MULTIPLY FILE SEQ NUMBER A33101
         AR    DSCNTR,DSCNTR            BY THREE AND ADD ONE     YM7567
         LA    DSCNTR,D1(DSCNTR,TCBR)   FOR FIRST FILE LABEL     YM7567
         STC   DSCNTR,TABFSFN1          SET FSQNO FOR FSF
         B     REPDCB12                 BRANCH TO POSITION RECORD
*
REPDCB09 EQU   *                                                 S20038
*
         OI    SRTESTAB,ALFLAG          SET FLAG IN UCB FOR AL   S20038
         B     REPDCB07                 BRANCH TO POSITION AS    S20038
*                                       FOR SL                   S20038
*
*
REPDCB10 EQU   *
*
         TM    TABTPLBL,BLP+NL          IS IT BLP OR UNLABELED   A31340
         BZ    REPDCB14                 BR IF NOT, MUST BE NSL   A31340
*
         TM    TABTPLBL,NL              IS IT NL ONLY ?        @ZA14566
         BNO   *+8                      NO BRANCH AHEAD        @ZA14566
         OI    UCBTFL1,UCBNLTP          SET NL IN UCB          @ZA14566
*    *** POSITION TO CORRECT DATA SET FOR UNLABELED TAPE ***
*
*
         CLI   TABFSQNO,ONE             IS FILE SEQ NO. ONE
         BE    REPDCB12                 BRANCH YES TO POSITION RECORD
*
*
         OI    TABOPS,FSF               SET TABOPS CODE FOR FSF
*
         BCTR  DSCNTR,ZERO              SUBTRACT ONE FOR FIRST FILE
         STC   DSCNTR,TABFSFN1          SAVE NUMBER OF FSF'S
*
*
REPDCB12 EQU   *
*
         MVC   SRTEFSEQ+1(1),TABFLG5    LOG SEQ NO. TO UCB      OX01653
         MVI   SRTEFSEQ,0               CLEAR HI ORDER BYTE     OX01653
         STH   WRKR3,SRTEFSCT           PUT UPDATED FILE SEQ CNT IN UCB
*
REPDCB14 EQU   *
*                                                                A33655
* THE DEBOFLGS-EOF-BIT IS RESET FOR ALL INPUT TAPE DATA SETS TO  A33655
* PREVENT A TAPE POSITIONING ERROR AT CLOSE TIME.  THIS PROBLEM  A33655
* OCCURS IF A TAPE DATA SET ENCOUNTERS EOF AND A CHECKPOINT IS   A33655
* TAKEN BEFORE IT IS CLOSED.                                     A33655
*                                                                A33655
         TM    DEBOPATB,IBITS           Q - INPUT D/S            A33655
         BNZ   REPDCB15                 IF NOT, BR               A33655
         NI    DEBOFLGS,EOFRST          RESET DEB-EOF-FLAG IF ON A33655
REPDCB15 EQU   *                                                 A33655
*    ******************************************************************
*
*    *** RECORD POSITIONING IS PERFORMED ONLY IF THE PHYSICAL BLOCK
*        COUNT IS PRESENT IN THE DCB***
*
*    *** DATA SETS ARE POSITIONED IN A FORWARD DIRECTION TO THE CORRECT
*        RECORD ACCORDING TO THE POSITIVE PHYSICAL BLOCK COUNT ONLY,
*        WITH THE ONE EXCEPTION, WHERE THE TAPE IS NOT LABELED AND IS
*        BEING PROCESSED BACKWARDS ***
*
*    *** ALL OTHER TAPES ARE POSITIONED TO EITHER THE BEGINNING OR THE
*        END OF THE DATA SET, DEPENDING ON WHETHER THEY WERE OPENED FOR
*        FORWARD OR BACKWARD PROCESSING ***
*
*    ******************************************************************
*
         SR    TCBR,TCBR                CLEAR REGISTER
*
         LR    DSCNTR,DEBR              GET ADDR OF DEB FOR CALC Y02049
         LA    UCBR,DEBPRFLN            GET LENGTH OF DEB PREFIX Y02049
         SR    DSCNTR,UCBR              POINT TO DEB PREFIX      Y02049
         USING DEBPREFX,DSCNTR                                   Y02049
         L     DSCNTR,DEBXTNP           POINT TO DEB EXTENSION   Y02049
         USING DEBXTN,DSCNTR                                     Y02049
         TM    DEBXMCF1,DCBMRECP        IS IT EXCP               Y02049
         BNO   REPDCB16                 BRANCH IF NOT TO CHECK BLKCT
*
         TM    DEBXMCF2,DCBMR5WD+DCBMR4WD                        Y02049
*                                       IS DEV DEPENDANT SEC PRESENT
         BZ    REPDCB24                 BRANCH IF NOT TO CHECK RDBACK
         DROP  DSCNTR                                            Y02049
         L     DSCNTR,DCBBLKCT          SET UP BLOCK COUNT     @ZA26571
         LTR   DSCNTR,DSCNTR            SET UP CONDITION CODE  @ZA26571
         BZ    REPDCB22                 BRANCH IF BLKCOUNT 0   @ZA26571
         BM    REPDCB18                 BRANCH IF NEGATIVE     @ZA26571
         B     TESTBLK                  BRANCH IF POSITIVE     @ZA26571
*
REPDCB16 EQU   *
*
         L     DSCNTR,DCBBLKCT          SET CTR TO POSITION RECORD
         LTR   DSCNTR,DSCNTR            GET CONDITION CODE
         BZ    REPDCB22                 BRANCH IF BLKCT IS ZERO
         BM    REPDCB18                 BRANCH IF NEGATIVE TO CHECK NL
* IF THERE WAS A CHECKPOINT TAKEN AFTER THE EOF WAS DETECTED   @ZA10259
* BY THE SAM APPENDAGE BUT NOT CHECKED BY THE SYNCHRONIZING    @ZA10259
* OR CHECK MODULE THUS RESULTING IN AN SVC 55 (END OF VOLUME)  @ZA10259
* THEN WE ADD ONE TO THE BLOCKCOUNT FOR CHAIN SCHEDULING.      @ZA10259
         TM    DCBCIND2,DCBCNCHS USING CHAIN SCHEDULING ??     @ZA20448
         BNO   TESTBLK           NO BRANCH                     @ZA10259
         L     WRKR3,DCBIOBA     GET THE CURRENT IOB ADDRESS   @ZA10259
         LA    WRKR3,0(WRKR3)    CLEAR HIGH ORDER BYTE         @ZA10259
         TM    20(WRKR3),ONE     ARE WE POSTED UNIT EXCEPTION  @ZA10259
         BO    SETBLK            YES ADD ONE TO FSF COUNT      @ZA10259
         L     WRKR4,0(WRKR3)    GET NEXT IOB/ICB              @ZA10259
BACK     EQU   *                                               @ZA10259
         LA    WRKR4,0(WRKR4)    CLEAR HIGH ORDER BYTE         @ZA10259
         CR    WRKR3,WRKR4       ARE THEY EQUAL                @ZA10259
         BE    TESTBLK           YES ONLY 1 IOB OR LAST        @ZA10259
TESTUE   EQU   *                                               @ZA10259
         TM    20(WRKR4),ONE     IS UNIT EXCEPTION ON ?        @ZA10259
         BNO   GETNEXT           NO GET NEXT IOB/ICB           @ZA10259
SETBLK   EQU   *                                               @ZA10259
         OI    TABDSORG,X'08'    SET FLAG                      @ZA10259
         LA    WRKR4,1           SET REG TO 1                  @ZA10259
         AR    DSCNTR,WRKR4      INCREMENT REG                 @ZA10259
         B     TESTBLK           BRANCH                        @ZA10259
GETNEXT  EQU   *                                               @ZA12059
         L     WRKR4,0(WRKR4)    GET NEXT IOB/ICB              @ZA10259
         B     BACK              BRANCH BACK                   @ZA10259
*
TESTBLK  EQU   *                                               @ZA10259
*    *** POSITION TO CORRECT RECORD FOR ALL TAPES ***
         OI    TABOPS,RDOP              SET TABOPS CODE FOR RD FWD
         ST    DSCNTR,TABBLK1           SAVE BLOCK COUNT FOR READ
*
*
         B     REPDCB26                 BRANCH TO GET NEXT ENTRY
*
REPDCB18 EQU   *
*
*    *** POSITION TO CORRECT RECORD ONLY IF UNLABELED AND READ BACK ***
*
          STM   WRKR5,WRKR3,RSREGSAV+12    SAVE REG  FOR ERROR  ZA02208
         TM    TABTPLBL,BLP+NL          IS IT BLP OR UNLABELED   A31340
         BZ    REPDCB64                 BR IF NO TO SET ERR CODE A31340
*
         TM    DEBOPATB,RDBACK          IS IT RDBACK
         BC    NOTMIX,REPDCB64          BRANCH IF NOT TO SET ERROR CODE
*
REPDCB20 EQU   *
*
*    *** POSITION TO END OF DATA SET ***
*
         OI    TABOPS,FSF+BSF           INDICATE BOTH FSF-BSF TO S21040
*                                       POSITION TO END OF DATA SET
         SR    WRKR5,WRKR5              ZERO OUT REGISTER        YM7567
         IC    WRKR5,TABFSFN1           GET REQUIRED NO OF FSF'S YM7567
         LA    WRKR5,D1(,WRKR5)         INCREMENT BY 1 FOR END   YM7567
*                                       OF DATA SET              YM7567
         STC   WRKR5,TABFSFN1           STORE FSF COUNT          YM7567
*
         LTR   TCBR,TCBR                IS BYPASS SWITCH ON
         BNZ   REPDCB26                 BRANCH IF YES TO GET NEXT ENTRY
*
*
*    *** POSITION TO CORRECT RECORD FOR READ BACKWARD ***
*
         OI    TABOPS,RDBK              SET TABOPS CODE FOR RD BACKWARD
         LPR   DSCNTR,DSCNTR            GET BLOCK COUNT POSITIVE
         ST    DSCNTR,TABBLK1           SAVE BLKCT IN TABL
         B     REPDCB26                 BRANCH TO GET NEXT ENTRY
*
REPDCB22 EQU   *
*
*    *** RECORD POSITIONING IS NOT NECESSARY ***
*
         TM    TABTPLBL,BLP+NL          IS IT BLP OR UNLABELED   A31340
         BZ    REPDCB26                 BR IF NOT                A31340
*
REPDCB24 EQU   *
*
         TM    DEBOPATB,RDBACK          IS IT RDBACK
         BC    NOTMIX,REPDCB26          BRANCH IF NOT TO GET NEXT ENTRY
*
         LA    TCBR,ONE                 SET SWITCH TO BYPASS RECORD
*                                            POSITIONING
         B     REPDCB20                 BRANCH TO POSITION TO END OF
*                                            DATA SET
REPDCB26 EQU   *
*
*    ******************************************************************
*
*    *** DETERMINE IF MORE ENTRIES ARE TO BE PROCESSED ***
*
*    ******************************************************************
*
         SR    TCBR,TCBR                TURN BYPASS SWITCH OFF
*
         TM    TABFLG1,TABLAST          IS THIS LAST ENTRY       Y02049
         BO    REPDCB27                 BR YES TO INIT I/O       S21040
*
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TABL PTR
         B     REPDCB00                 BRANCH TO PICK UP NEXT ENTRY
         EJECT                                                   YM7337
*    ******************************************************************
*
*        THIS ROUTINE WILL PERFORM ALL THE NECESSARY I/O OPERATIONS
*        ACCORDING TO THE TABLE BUILT IN THE END OF EACH TABL ELEMENT.
*
*
*    ******************************************************************
REPDCB27 EQU   *                                                 S21040
         SR    DSCNTR,DSCNTR            DOS TAPE INDICATOR
REPDCB28 EQU   *
         LR    CTABLR,TABLR             INITIALIZE TABL POINTER
         SR    WRKR3,WRKR3              TURN OFF SPIN SWITCH
         SR    WAIT,WAIT                TURN ON DO NOT WAIT SWITCH
REPDCB30 EQU   *
         L     WRKR4,TABSEGAD-D1        WORK AREA SEGMENT ADDRESS
         TM    TABFLG1,TABTAPE+TABDOSTP  NON DOS TAPE            Y02049
         BC    NOTMIXED,REPDCB52        BR NO TO GET NEXT ENTRY  S21040
*
         TM    TABOPS,NOOPS             ANY I/O NEEDED FOR THIS ELT
         BZ    REPDCB52                 BRANCH NO TO GET NEXT ELT
         LA    WRKR3,ONE                TURN ON SPIN SWITCH
         TM    RSSTAT2,LOCKSW           WORK AREA LOCK SW ON     Y02049
         BO    REPDCBC0                 YES  SEE WHO IS REQ USE  Y02049
REPDCX30 EQU   *                        INSTR MUST FOLLOW        Y02049
         TM    RSSTAT1,BUSY             IS WORK AREA BUSY
         BZ    REPDCB32                 BRANCH NO TO CONTINUE
         BAL   WRKR5,REPDCB56           GO TO WAIT ROUTINE
*
REPDCB32 EQU   *
*
         TM    TABOPS,REW               IS REWIND NECESSARY
         BZ    REPDCB34                 BRANCH NO REWIND
*
*        REWIND ROUTINE
*
         XI    TABOPS,REW               PEEL OFF REWIND MASK
*
         MVI   RSCCW1,REWIND            SET CCW OP CODE TO REWIND
         B     REPDCB48                 GO TO EXCP
*
REPDCB34 EQU   *
*
*        FORWARD SPACE FILE ROUTINE
*
         TM    TABOPS,PASSWDID          PASSWORD CHECK REQUIRED  Y02049
         BO    REPDCBA0                 YES READ HEADER LABELS   Y02049
         TM    TABOPS,FSF               IS FSF NECESSARY
         BZ    REPDCB38                 BRANCH NO TO CHECK BSF
*
*        FSF
*
*        FOR STANDARD LABEL TAPES, THE FSF ROUTINE WILL DO N-1   YM7567
*        FSF'S, BASED ON THE NUMBER IN TABFSFN1.  IF GOING TO    YM7567
*        THE SECOND FILE HDR RECORDS, TABFSFN1 WILL BE SET TO    YM7567
*        FOUR, AND THREE FSF'S WILL BE DONE.                     YM7567
*        FOR NON-LABELED TABES, THE FSF ROUTINE WILL DO N        YM7567
*        FSF'S BASED ON THE NUMBER IN TABFSFN1.                  YM7567
*
         SR    WRKR6,WRKR6
         IC    WRKR6,TABFSFN2           GET NUMBER OF FSF ALREADY DONE
         LA    WRKR6,D1(WRKR6)          ADD ONE
         STC   WRKR6,TABFSFN2           SAVE NUMBER OF FSF'S
         CLC   TABFSFN1(L1),TABFSFN2    WILL THIS BE ENOUGH
         BNE   REPDCB36                 BRANCH NO NOT ENOUGH
*
         XI    TABOPS,FSF               PEEL OFF FSF MASK
         TM    TABTPLBL,SL              TEST FOR STANDARD LABEL  Y02049
         BNO   REPDCB36                 NO STANDARD LABEL        Y02049
         OI    TABOPS,PASSWDID          IND POSSIBLE PASSWORD CK YM7055
***********************************************************************
*              ROUTINE TO VERIFY DATA SET LABELS AND TO DO            *
*              PASSWORD PROTECTION IF REQUIRED.                       *
***********************************************************************
REPDCBA0 EQU   *                        INSTR MUST FOLLOW        Y02049
         TM    RSPASSFL,DX2             PASSWORD TEST PASS ID ON Y02049
         BO    REPDCBA6                 YES SEE IF PASSWORD CK RQY02049
         TM    RSPASSFL,D1              DATA SET LBL TEST FL ON  Y02049
         BO    REPDCBA1                 YES VERIFY DS LABEL      Y02049
REPDCBAA EQU   *                                                 YM7055
         MVC   RSCCW1(D8),RSCCW2        GET TAPE READ CCW        Y02049
         MVI   RSPASSFL,D1              SET DS LABEL TEST FLAG   Y02049
         MVC   RSTABAD(D3),TABSEGAD     ST ADR OF USING ELEMENT  Y02049
         MVI   RSSTAT2,LOCKSW           SET WORK AREA LOCK SW    Y02049
         B     REPDCB48                 READ HDR1 FROM TAPE      Y02049
***********************************************************************
*              VERIFY HDR1 RECORD READ  (1ST REC OF IBM TAPE LABEL)   *
***********************************************************************
REPDCBA1 EQU   *                        INSTR MUST FOLLOW        Y02049
         CLI   RSHDRNUM,DF1             REC NUM MATCH            Y02049
         BNE   REPDCBB5                 NOT HDR1 ABORT           Y02049
         CLC   RSHDR,HDRMASK1           'HDR'                    Y02049
         BE    REPDCBA2                 GO CHECK HDR1 LABEL      YM7055
         CLC   RSHDR,VOLMASK            IS THIS THE VOL1 LABEL?  YM7055
         BNE   REPDCBB5                 NOT HDR1 OR VOL1, ERROR  YM7055
         B     REPDCBAA                 GO READ HDR1 LABEL       YM7055
***********************************************************************
*             PERFORM LABEL VERIFICATION FOR DATA SET                 *
***********************************************************************
REPDCBA2 EQU   *                        INSTR MUST FOLLOW        Y02049
         L     R1,TABJFCB-D1            GET TTR ADR OF JFCB      YM7337
         LA    RE,D16(R1)               GET ADDR OF DSN IN JFCB  YM7337
         USING INFMJFCB,RE                                       YM7337
         LA    RF,L'JFCBDSNM-D1         GET INDEX LAST CHAR DSN  YM7337
REPDCBA3 EQU   *                        CHECK LENGTH             YM7337
         LA    R1,JFCBDSNM-INFMJFCB(RE,RF) GET CHAR TO CHK       YM7337
         CLI   D0(R1),BLANK             CHK IF BLANK             YM7337
         BNE   REPDCBA4                 CONT TIL FIRST NON-BLNK  YM7337
         BCT   RF,REPDCBA3              DECR OFFSET TO NON-BLANK YM7337
REPDCBA4 EQU   *                        COMPARE DSN              YM7337
         LA    RF,D1(,RF)               GET NUMBER OF CHARS      YM7337
         SH    RF,MAXNAME               CHK IF GRTR 17 CHAR LBL  YM7337
         BP    REPDCBX4                 BR - GRTR 17 CHAR        YM7337
         XR    RF,RF                    COMPARE FROM START       YM7337
REPDCBX4 EQU   *                        CHK DSN                  YM7337
         AR    RE,RF                    GET FIRST CHAR TO CMPR   YM7337
         CLC   JFCBDSNM-INFMJFCB(C17,RE),RSDATAID SAME DSN?      YM7337
         BNE   REPDCBB5                 ERROR NOT SAME DSN       YM7337
         DROP  RE                                                YM7337
***********************************************************************
*              SET UP TO READ HDR2 RECORD OF TAPE LABEL               *
***********************************************************************
REPDCBA5 EQU   *                        INSTR MUST FOLLOW        Y02049
         SR    WRKR2,WRKR2                                       Y02049
         ICM   WRKR2,HIORDER,RSDSSECR   GET HDR1 SECURITY BYTE   Y02049
         SLL   WRKR2,D4                 STRIP OFF HIGH ORDER BITSY02049
         STCM  WRKR2,HIORDER,RSPASSFL   SAV SEC RESET OTHER FLGS Y02049
         OI    RSPASSFL,DX2             SET PASSWORD TEST ID     Y02049
         B     REPDCB48                 READ HDR2 REC FROM TAPE  Y02049
***********************************************************************
*              VERIFY HDR2 RECORD READ (2ND REC OF IBM TAPE LABEL)    *
***********************************************************************
REPDCBA6 EQU   *                        INSTR MUST FOLLOW        Y02049
         XI    TABOPS,PASSWDID          RESET PASSWORD CHK IND   YM7055
         CLI   RSHDRNUM,DF2             REC NUM MATCH            Y02049
         BNE   REPDCBB5                 ABORT NOT HDR2           Y02049
         CLC   RSHDR,HDRMASK1           'HDR'                    Y02049
         BNE   REPDCBB5                 ABORT NOT HDR2           Y02049
***********************************************************************
*              DETERMINE IF PASSWORD CHECK IS TO BE MADE              *
***********************************************************************
REPDCBA7 EQU   *                        INSTR MUST FOLLOW        Y02049
         MVI   RSSTAT2,RLOCKSW          RESET WRK AREA LOCK SW   Y02049
         TM    TABFLG4,TABBYPSW         IS THE USER RACF       @G32DSMI
*                                       AUTHORIZED TO THE VOL  @G32DSMI
         BO    REPDCBA9                 YES - BYPASS PASSWORD  @G32DSMI
*                                       CHECKING               @G32DSMI
         TM    RSPASSFL,WRITEFLG        TEST SECURITY FLAGS      Y02049
         BO    REPDCBA8                 WRITE PROTECTED          Y02049
         TM    RSPASSFL,RDWTRFLG        TEST SECURITY FLAGS      Y02049
         BO    REPDCBB0                 READ/WRITE PROTECTED     Y02049
         B     REPDCBA9                 NO PASSWORD CHK REQ      Y02049
***********************************************************************
*              IF DATA SET IS OPEN FOR INPUT NO PASSWORD CHK REQ      *
***********************************************************************
REPDCBA8 EQU   *                        INSTR MUST FOLLOW        Y02049
         L     WRKR2,TABDCBAD-D1        DCB ADR                  Y02049
         USING IHADCB,WRKR2                                      Y02049
         L     DEBR,DCBDEBA-D1          DEB ADR THIS DCB         Y02049
         TM    DEBACCS,INPUTMSK         TEST FOR OUTPUT          Y02049
         BNO   REPDCBA9                 NO PASSWORD CHK          YM7337
         EJECT                                                   YM7337
***********************************************************************
*              SET UP FOR PASSWORD CHECK                              *
*                                                                     *
*        INTERFACE TO SECLOADA AS FOLLOWS:                            *
*              R1 = PTR DSAB                                          *
*              R5 = PTR DEB                                           *
*              RA = 5(TAPE) - HI-ORDER BYTE                           *
*              RB = PTR DATA SET NAME                                 *
*              RD = PTR DADSM TYPE W/A                                *
*              RE = 0                                                 *
*                                                                     *
*        RETURN AS FOLLOWS:                                           *
*              R1-RD RESTORED                                         *
*              RA = HI-ORDER BYTE (0) = O.K.                          *
*                   HI-ORDER BYTE (NOT = 0) = BAD                     *
***********************************************************************
REPDCBB0 EQU   *                        INSTR MUST FOLLOW        Y02049
         STM   R0,RF,RSREGSAV           SAVE REGS BEFORE SETUP   YM7337
         LA    R6,RSREGSAV              GET REG SAVE AREA        YM7337
         OI    TABFLG2,TABSW            IND SECLOADA CALL        YM7337
         L     R1,TABDCBAD-D1           PTR DCB                  YM7337
         L     R5,DCBDEBAD-IHADCB(,R1)  R5 PTS TO DEB            YM7337
         LR    R1,R5                    GET DEB PTR              YM7337
         SH    R1,PFXCON                BACKUP TO PREFIX         YM7337
         L     R1,DEBXTNP-DEBPREFX(,R1) PTR DEB EXTENSION        YM7337
         L     R1,DEBXDSAB-DEBXTN(,R1)  R1 PTS TO DSAB           YM7337
         ICM   BUFR,HIORDER,RTNRETID    SET RETURN FOR S05B      YM7337
         L     RB,TABJFCB-D1            GET SVA OF JFCB          YM7337
         LA    RB,D16(RB)               ADDR DSN - SKIP SWA CTL  YM7337
         L     RD,SECSWICH              RD PTR DADSM-LIKE W/A    YM7337
         USING IECEXTPR,RD              SECLOADA W/A ADDR        YM7337
         IECRES LOAD,MODNM=SECMODNM,EXTPR=(RD),BRCODE=0,         YM7337*
               BRANCH=DIRECT            EXIT TO SECLOADA         YM7337
         DROP  RD                                                YM7337
         USING RSDSECT,WRKR4            PT RESTART W/A           YM7337
***********************************************************************
*              TEST SECLOADA RESPONSE; RIGHT PASSWORD GIVEN.          *
***********************************************************************
PASSWORD EQU   *                        INSTR MUST FOLLOW        YM7337
         MODESET EXTKEY=ZERO            ENSURE KEY 0             YM7337
         STCM  RA,HIORDER,4*RA(R6)      SAVE RET CODE            YM7337
         LM    R0,RF,D0(R6)             RESTORE REGS             YM7337
         NI    TABFLG2,X'FF'-TABSW      RESET SECLOADA CALL      YM7337
         CLI   RSREGSAV+4*RA,D0         CHK FOR PASSWORD ERROR   YM7337
         BE    REPDCBA9                 BR IF NO PASSWORD ERROR  YM7337
         ST    RA,TABVLID2              SAV RET COD FOR PROB DET YM7337
         MVI   RSRETCOD+D1,ERR219       SET PASSWORD ERROR     @ZSUT222
         B     REPDCB58                 GO TO ERROR EXIT         YM7337
         SPACE 3                                                 YM7337
***********************************************************************
*        CHECK IF HEADER2 INDICATES THAT THIS IS A CHECKPOINT         *
*        DATA SET.  IF IT DOES THEN SET UP TO CALL Q05B.              *
*                                                                     *
*        INPUT TO Q05B AS FOLLOWS:                                    *
*              R1 = 0(CHKPT D.S. CHECK)                               *
*                   4(OLD CHKPT D.S. AND THE D.S. IS NOT CHKPT)       *
*              R5 = PTR UCB                                           *
*              R9 = PTR TAB ENTRY                                     *
*              RA = PTR RESTART WORK AREA                             *
*              RE = RETURN ADDRESS                                    *
*                                                                     *
*        OUTPUT FROM Q05B AS FOLLOWS:                                 *
*              ALL REGS SAVED AND RESTORED                            *
*              DSABCKVL SET IF VOL SECURE.  Q05B XCTL TO V05B IF ERR. *
***********************************************************************
REPDCBA9 EQU   *                        INSTR MUST FOLLOW        YM7337
         L     RF,SECSWICH              GET ADDR O/C/E/D W/A     YM7337
         STM   R0,RF,MYREGSAV-IECEXTPR(RF) SAVE REGS             YM7337
         LR    R6,RF                    TUCK REGSAV IN TIDY PLAC YM7337
         USING IECEXTPR,R6              ADDRESSABILITY FOR W/A   YM7337
         L     RE,TABDCBAD-D1           PTR DCB                  YM7337
         L     RE,DCBDEBAD-IHADCB(,RE)  PTR TO DEB               YM7337
         SH    RE,PFXCON                BACKUP TO PREFIX         YM7337
         L     R5,DEBSUCBA-DEBPREFX(,RE) GET UCB REG 5           YM7337
         L     RE,DEBXTNP-DEBPREFX(,RE) PTR DEB EXTENSION        YM7337
         L     RE,DEBXDSAB-DEBXTN(,RE)  PTR DSAB                 YM7337
         XR    R1,R1                    INDR OLD CHKPT D.S.      YM7337
         CLI   RSDSIND,CHKPTFLG         CHK IF OLD CHKPT D.S.    YM7337
         BE    REPDCA10                 BR IF OLD CHKPT D.S.     YM7337
         LA    R1,D4                    OLD CHKPT D.S. - NEW NOT YM7337
         TM    DSABFLG4-DSAB(RE),DSABCKDS CHK OLD CHKPT D.S.     YM7337
         BNO   REPDQ05B                 BR NOT OLD CHKPT D.S.    YM7337
REPDCA10 EQU   *                        GO TO Q05B               YM7337
         LA    RE,REPDQ05B              SET RETURN ADDRESS       YM7337
         IECRES LOAD,MODNM=COMMODNM,EXTPR=(R6),BRCODE=(14),      YM7337*
               BRANCH=DIRECT            EXIT TO Q05B             YM7337
***********************************************************************
*              RESUME NORMAL POSITIONING MODE                         *
***********************************************************************
REPDQ05B EQU   *                        RETURN FROM Q05B         YM7337
         LM    R0,RF,MYREGSAV           RESTORE REGS             YM7337
         DROP  R6                                                YM7337
         MVI   RSCCW1+D4,FLAGS          RESTORE CCW1 FLAGS       Y02049
         XC    RSCCW1+D1(D3),RSCCW1+D1  CLEAR STORAGE ADR        Y02049
         MVI   RSCCW1+D7,COUNT          RESTORE CCW1 COUNT TO 1  Y02049
         MVI   RSPASSFL,RESETFLG        RESET FLAGS              Y02049
         B     REPDCB36                 SPACE OVER FILE MARK     YM7345
**********************************************************************
*              SET ERR CODE DATA SET LABEL DOESN'T VERIFY            *
**********************************************************************
REPDCBB5 EQU   *                        INSTR MUST FOLLOW        Y02049
         MVI   RSRETCOD+D1,ERR222       SET CODE 222             Y02049
         B     REPDCB58                 CLOSE DOWN PROCESSING    Y02049
***********************************************************************
*               TEST IF WORK AREA LOCKED FOR CURRENT REQUESTOR        *
***********************************************************************
REPDCBC0 EQU   *                        INSTR MUST FOLLOW        Y02049
         CLC   TABSEGAD(D3),RSTABAD     48 BYTE ENTRY ADRS MATCH Y02049
         BE    REPDCX30                 YES CONTINUE PROCESSING  Y02049
         B     REPDCB52                 NO FIND OWNER OR DIF WA  Y02049
**********************************************************************
*                                                                    *
*        END OF THE ROUTINE TO VERIFY DATA SET LABELS AND PASSWORDS  *
*                                                                    *
**********************************************************************
*
REPDCB36 EQU   *
*
*
         MVI   RSCCW1,FSFOP             SET FSF OP CODE IN CCW
         B     REPDCB48                 GO TO EXCP
*
*
*
REPDCB38 EQU   *
*
*        BACK SPACE FILE ROUTINE
*
         TM    TABOPS,BSF               IS BACK SPACE FILE NECESSARY
         BZ    REPDCB40                 BRANCH NO TO CHECK READ FWD
*
*BSF
*
         XI    TABOPS,BSF               PEEL OFF BSF MASK
*
*
         MVI   RSCCW1,BSFOP             SET BSF OP CODE IN CCW
         B     REPDCB48                 GO TO EXCP
*
*
*
REPDCB40 EQU   *
*
*        READ FORWARD ROUTINE
*
         TM    TABOPS,RDOP              IS READ FWD NECESSARY
         BZ    REPDCB44                 BRANCH NO TO CHECK READ BACK
*
*
         L     WRKR6,TABBLK2            GET BLK CT
         LA    WRKR6,D1(WRKR6)          INCREMENT BY ONE
         ST    WRKR6,TABBLK2            SAVE BLK CT
         CLC   TABBLK1(L4),TABBLK2      COMPARE BLOCK COUNTS
         BNE   REPDCB42                 BRANCH NOT EQUAL TO CONTINUE
*
         XI    TABOPS,RDOP              PEEL OFF READ FWD MASK
*
REPDCB42 EQU   *
*
         MVI   RSCCW1,READ              SET OP CODE TO READ FWD
         B     REPDCB48                 GO TO EXCP
*
*
*
REPDCB44 EQU   *
*
*        READ BACKWARD ROUTINE
*
         TM    TABOPS,RDBK              IS READ BACKWARD NECESSARY
         BZ    REPDCB52                 BRANCH NO MORE OPS FOR THIS ELT
*
*        RDBK
*
         L     WRKR6,TABBLK2            GET BLOCK COUNT
         LA    WRKR6,D1(WRKR6)          ADD ONE
         ST    WRKR6,TABBLK2            SAVE NLOCK COUNT
         CLC   TABBLK1(L4),TABBLK2      COMPARE BLOCK COUNTS
         BNE   REPDCB46                 BRANCH NOT EQUAL TO CONTINUE
*
         XI    TABOPS,RDBK              PEEL OFF READ BACKWARD MASK
*
REPDCB46 EQU   *
*
         MVI   RSCCW1,READBACK          SET OP CODE TO READ BACKWARD
*
*
REPDCB48 EQU   *
*
         MVC   RSDEBUCB(L4),TABUCB      ADJUST UCB POINTER IN WORK AREA
         TM    TABOPS,PASSWDID          READING TAPE LABELS?     YM7551
         BNO   REPDCB49                 NO                       YM7551
         NI    RSDEBUCB,MODECLR         CLEAR ALL BUT DENSITY    YM7551
         OI    RSDEBUCB,SETMODE         EVEN PAR TRANS MD CVT MD YM7551
REPDCB49 EQU   *
         MVI   RSSTAT1,BUSY             TURN ON WORK AREA BUSY SWITCH
*
REPDCB50 EQU   *
*
*        EXCP  ROUTINE
*
*
*
         XC    RSECBAD(L4),RSECBAD      INITIALIZE ECB
*
*
         EXCP  RSIOB
*
*
         LTR   WAIT,WAIT                SHOULD WE WAIT
         BNZ   REPDCB56                 BR YES TO WAIT ROUTINE   S21040
*
REPDCB52 EQU   *
*
         TM    TABFLG1,TABTAPE+TABDOSTP  DOS TAPE ENTRY          Y02049
         BNO   REPDCB53                 BRANCH ON NO             S21040
         LA    DSCNTR,D1(DSCNTR)        INCREMENT DOS TAPE COUNT
*
REPDCB53 EQU   *                                                 S21040
         TM    TABFLG1,TABLAST          IS THIS THE LAST ENTRY
         BO    REPDCB54                 BRANCH YES TO CHECK IF DONE
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TABL POINTER
         B     REPDCB30                 CONTINUE PROCESSING
*
REPDCB54 EQU   *
*
*        LAST ENTRY HAS BEEN PROCESSED, ARE ALL ELTS COMPLETE
*
         LTR   WRKR3,WRKR3              TEST SPIN SWITCH
         BZ    REPDCB58                 SWITCH OFF - STOP SPINNING
         B     REPDCB28                 SPIN THRU TABL ELEMENTS AGAIN
*
*
*        WAIT ROUTINE
*
REPDCB56 EQU   *
*        WAIT FOR CE FOR CONTROL OPERATIONS, WAIT FOR CE AND DE FOR ALL
*        OTHERS,  NOP BRINGS IN CE AND DE SO CHECKING CAN BE DONE
*        FOR ERRORS BEFORE THE NEXT OPERATION IS STARTED.
*
*
         WAIT  ECB=RSECBAD
*
*
         TM    RSECBAD,PERMERR          CHECK FOR PERMANENT I/O ERRORS
         MVI   RSSTAT1,NOTBUSY         TURN OFF WORK AREA BUSY   A41420
*                                       SW                       A41420
         BM    REPDCB76                 BRANCH YES TO CHECK      A41420
*                                       ERRORS                   A41420
*
         CLI   RSCCW1,NOPOP             HAS NOP BEEN ISSUED
         BCR   EQUAL,WRKR5              BR YES TO CONTINUE PROCESSING
*
         TM    RSCCW1,READOP            OP CODE READ/READ BACK   S21040
         BZ    ZERO(WRKR5)              BR YES NOP NOT NEEDED    S21040
*
         MVI   RSCCW1,NOPOP             CHANGE OP CODE TO NOP
         B     REPDCB49                 GO TO EXCP
*
*
*
*
REPDCB58 EQU   *
*        WAIT ON ALL WORK AREAS TO BE SURE ALL HAVE BEEN CHECKED
*        FOR I/O ERRORS
*
         LR    CTABLR,TABLR             INIT TABL POINTER
*
REPDCB60 EQU   *
*
         TM    TABFLG1,TABTAPE+TABDOSTP  IS  IT  NON-DOS TAPE    Y02049
         BC    NOTMIXED,REPDCB62        BRANCH NO TO CONTINUE    S21040
*
         TM    TABFLG2,TABRSDS          IS THIS WORKING CHKPT DS YM7358
         BO    REPDCB62                 YES - DON'T PROCESS      YM7358
*                                                                YM7358
         L     WRKR4,TABSEGAD-D1        WORK AREA SEGMENT ADDRESS
         TM    RSSTAT1,BUSY             IS WORK AREA BUSY
         BZ    REPDCB62                 BRANCH NO TO CONTINUE
*
         LA    WAIT,ONE                 TURN ON WAIT SWITCH
         BAL WRKR5,REPDCB56             GO TO WAIT ROUTINE
*
         MVI   TABVLID2,BLANK           RESTORE BLANKS
         MVC   TABVLID2+D1(L23),TABVLID2     TO TABL AREA
*
REPDCB62 EQU   *
*
         TM    TABFLG1,TABLAST          IS THIS THE LAST ENTRY
         BO    REPDCB68                 BRANCH YES TO EXIT
*
         LA    CTABLR,TABENT(CTABLR)    INCREMENT TABL POINTER
         B     REPDCB60                 CONTINUE WAIT PROCESSING
*
*    ******************************************************************
*
**********************************************************************
*              RELEASE STORAGE GOTTEN FOR TAPE OPS WORK AREAS        *
**********************************************************************
REPDCB68 EQU   *
*
         LR    CTABLR,TABLR             REINITIALIZE TABL POINTER
         L     WRKR4,TABSEGAD-D1        POINTER TO FIRST WORK AREA
*
         LA    WRKR3,RSCCW2             SET UP WORK AREA FOR XCTL
*
         LH    WRKR2,RSSTAT3            GET SIZE OF SECONDARY W.A.
         LTR   WRKR2,WRKR2              IS THERE SECONDARY SPACE
         BZ    REPDCB69                 BRANCH NO TO XCTL
*
         ST    TIOTR,GOTLOC             LOCATION OF SECONDARY SPACE
         ST    WRKR2,GOTLOC+D4          SIZE OF SECONDARY SPACE
*
         LA    R1,FREELIST              POINTER TO LIST FOR FREEMAIN
         LA    R13,GETSAVE              POINTER TO SAVE AREA
*
         FREEMAIN V,A=GOTLOC,SP=250,MF=(E,(1))
*
*
REPDCB69 EQU   *
*
*    ******************************************************************
*
*    *** DETERMINE WHICH EXIT MODULE TO TAKE ***
*
*    ******************************************************************
*
         NC    SECSWICH,SECSWICH        TEST FOR SECLOADA CORE @ZA19615
         BZ    PASSFREE                 NONE  NO RELEASE REQ   @ZA19615
         LA    RF,RSREGSAV              GET REG SAVE AREA      @ZA19615
         STM   R0,RF,D0(RF)             SAVE REGS              @ZA19615
         L     R1,SECSWICH              GET DADSM-LIKE W/A     @ZA19615
         IECRES FREE,A=(R1),PREFIX=YES  FREE DADSM-LIKE W/A    @ZA19615
         MODESET EXTKEY=ZERO            KEY 0                  @ZA19615
         LM    R0,RF,D0(RF)             RESTORE REGS           @ZA19615
PASSFREE EQU   *                                               @ZA19615
         MVC   D0(L8,WRKR3),RSTMODNM    ASSUME RESTART EXIT MOD. S21040
         TM    RSRETCOD+D1,ERRORS       IS ERROR CODE SET        S21040
         BZ    AROUND                   NO BRANCH AROUND       @ZSUT222
         MVC   RSREGSAV(8),MODID        SAVE NAME OF MODULE    @ZSUT222
*                                       THAT DETECTED ERROR.   @ZSUT222
         STM   0,15,RSREGSAV+8          SAVE CURRENT REGISTERS @ZSUT222
         B     REPDCB75                 BRANCH TO ERROR XCTL   @ZSUT222
AROUND   EQU   *                                               @ZSUT222
*
*    *** TEST FOR DOS TAPES ***
*
         LTR   DSCNTR,DSCNTR            ANY DOS TAPES            S21040
         BZ    REPDCB70                 BRANCH NO                S21040
*
         MVI   D4(WRKR3),DOSMOD         DOS TAPE POSITIONING     S21040
         B     REPDCB74                  MODULE IGC0U05B         S21040
*
REPDCB70 EQU   *                                                 S21040
         TM    RSDCBFLG,DAFLAG          DA DEVICE INDICATED      S21040
         BNO   REPDCB72                 BRANCH NO                S21040
*
         MVI   D4(WRKR3),DAMOD          DA MODULE IGC0R05B       S21040
         B     REPDCB74                 BRANCH TO XCTL           S21040
*
REPDCB72 EQU   *                                                 S21040
         MVI   D4(WRKR3),AMMOD          SET NEXT MODULE ID TO    S21040
*                                       ACCESS METHOD DISP. MOD.
         B     REPDCB74            BRANCH TO XCTL               ZA02208
REPDCB75 EQU   *                                                ZA02208
         L     UCBR,RSMWOFST       GET UCB ADDR IN ERROR        ZA02208
REPDCB74 EQU   *                          IGC0T05B               S21040
*
         LA    WRKR6,D8(WRKR3)          SET UP FOR XCTL          S21040
         XC    RSERAS00(D40),RSERAS00   CLEAR SCRATCH AREA       Y02049
         LR    WRKR2,BUFR               POINT REG 1 TO RESTART   S21040
*                                        WORK AREA
         NI    TABFLG2,X'FF'-TABSW      RESET  RETURN  SW        Y02049
         XCTL  EPLOC=(WRKR3),SF=(E,(15))                         S21040
*
REPDCB76 EQU   *
*
*    ******************************************************************
*
*    *** ERROR FOUND ***
*
*        THIS PORTION OF CODE MAY BE TAKEN OUT WHEN I/O SUPERVISOR HAS
*        PUT THE FIXES IN
*
*        THIS IS THE CURRENT THOUGHT PERSISTING TO THE HANDLING OF I/O
*        ERRORS
*
*        ERRORS THAT HAVE OCCURRED AT CHECKPOINT TIME IS ACCEPTED
*
*    ******************************************************************
*
         STM   WRKR5,WRKR3,RSREGSAV+12   SAVE REG               ZA02208
         LR    CTABLR,TABLR        GET FIRST TABLE ENTRY        ZA02208
REPDCB61 EQU   *                                                ZA02208
         CLC   TABUCB+1(3),RSDEBUCB+1   UCB EQUAL RIGHT ENTRY   ZA02208
         BE    REPDCB63            BRANCH IF EQUAL              ZA02208
         TM    TABFLG1,LASTENT     LAST ENTRY                   ZA02208
         BO    REPDCB66            ERROR                        ZA02208
         LA    CTABLR,TABENT(CTABLR)    NEXT ENTRY              ZA02208
         B     REPDCB61            PROCESS NEXT ENTRY           ZA02208
REPDCB63 EQU   *                                                ZA02208
         L     UCBR,TABUCB              POINT TO UCB FOR V05B    A47745
*                                       IN CASE ERROR IS REAL    A47745
         ST    UCBR,RSMWOFST       SAVE UCB IN ERROR            ZA02208
         CLI   RSCCW1,READ              IS ERROR IN READ FORWARD
         BE    REPDCB78                 BRANCH YES
*
         CLI   RSCCW1,READBACK          IS ERROR IN READ BACKWARD
         BE    REPDCB78                 BR YES TO CHECK FURTHER  A47745
REPDCB64 MVI   RSRETCOD+D1,ERR060       SET ERR CODE FOR D.S.  @ZSUT222
         ST    UCBR,RSMWOFST            SET UCB IN ERROR       @ZA19617
*                                       POSITIONING IN RSTWA     A47745
         B     REPDCB81            CLEAN UP OUTSTANDING         ZA02208
*                                       I/O                      A47745
*
REPDCB78 EQU   *
*
         CLC   TABBLK1(L4),TABBLK2      HAS POSITIONING BEEN COMPLETED
         BNE   REPDCB66                 BRANCH NO TO SET ERROR CODE
*
         L     DCBR,ZERO(,CTABLR)       GET CURRENT DCB          A46650
         TM    DCBIFLGS,ERRCHKPT        IS THERE PERMANENT ERR AT CHKPT
         BO    REPDCB80                BR IF SO TO CONTINUE     ZA02208
         TM    TABDSORG,X'08'           IS FLAG ON ?           @ZA10259
         BNO   REPDCB66                 NO BRANCH              @ZA10259
         NI    TABDSORG,X'F7'           YES TURN IT OFF        @ZA10259
         B     REPDCB80                 BRANCH                 @ZA10259
REPDCB66 MVI   RSRETCOD+D1,ERR063       SET ERR CODE FOR RECORD@ZSUT222
*                                       POSITIONING IN RSTWA     A47745
REPDCB81 LM    WRKR5,WRKR3,RSREGSAV+12  RESTORE REG             ZA02208
         B     REPDCB58                 GO CLEAN UP OUTSTANDING  A47745
*                                       I/O                      A47745
REPDCB80 LM    WRKR5,WRKR3,RSREGSAV+12  RESTORE REG             ZA02208
         B     REPDCB52            GO CLEAN UP OUTSTANDING IO   ZA02208
*
***********************************************************************
*
*     CONSTANTS USED IN REPI/O
*
***********************************************************************
*
RSTMODNM DC    CL8'IGC0V05B'            RESTART EXIT MOD
MODID    DC    CL8'IGC0S05B'            MODULE ID              @ZSUT222
         DS    0F                       FULLWORD BOUNDARY        YM7337
SECMODNM DC    C'SECLOADA'              EP FOR XCTL              Y02049
         DC    VL4(SECLOADA)            VCON FOR SECLOADA        YM7337
COMMODNM DC    C'IGC0Q05B'              COMMON FCTN MOD          YM7337
         DC    VL4(IGC0Q05B)            VCON FOR IGC0Q05B        YM7337
VOLMASK  DC    C'VOL'                   VOLUME LABEL ID          YM7055
HDRMASK1 DC    C'HDR'                   LABEL ID                 Y02049
SP253    DC    AL1(253)                 SUBPOOL 253              Y02049
SPACERQ1 DC    AL3(160)                 160 BYTES OF STORAGE     Y02049
SPACERQ2 DC    AL3(280)                 256(WA)+24(P.L.)         Y02049
RTNRETID DC    X'05'                    SECLOADA RTN TO ROUT SW  Y02049
CHKMODNM DC    C'IGC0Q05B'              MOD FOR CHKPT D/S CHK    YM7337
         DC    F'0'                     UNRESOLVED VCON          YM7337
C44      DC    H'44'                    DATA SET NAME LNGTH CONSTY02049
MAXNAME  DC    H'17'                    TAPE LABEL LENGTH        YM7509
SP230    DC    AL1(230)                 SUBPOOL 230              Y02049
PFXCON   DC    H'16'                    DEB PREFIX OFFSET        Y02049
WTGCODE  DC    X'00C0'                  Y02049                   Y02049
*                                                                     *
*        MAINTENANCE SPACE                                       Y01909
*                                                                     *
PATCH    DC    XL((*-IGC0S05B)/20)'00'   FIVE PERCENT SPACE      Y01909
*                                                                     *
         EJECT
         IECDSECS PREFX,EXPAND=YES                               YM7337
MYREGSAV DS    18F                      REGISTER SAVE AREA       YM7337
         IECDSECS MAIN,DSAB,EXPAND=YES                           YM7337
         EJECT
         CVT   DSECT=YES,PREFIX=YES,LIST=NO                      Y02049
CVTFIX   DSECT                                                   Y02049
CVT      EQU   CVTMAP                                            Y02049
         EJECT
         IEEVRSWA  VER=3                AOS2 VERSION OF WA
SECSWICH EQU   RSERAS02                 SPACE IND FOR SECLOADA   Y02049
SECIOBAD EQU   RSERAS02                 ADR OF IOB FOR SECLOADA  Y02049
SECCCWAD EQU   RSERAS03                 ADR OF CCW'S FOR SECLOADAY02049
         EJECT
         IEZDEB                                                  Y02049
         EJECT
         IEFQMIOP                                                Y02049
         EJECT
         IEFJESCT                                                Y02049
         EJECT
RSDSECT  DSECT
*
*    DATA EXTENT BLOCK
*
RSDEB    DS    0CL48
GETSAVE  EQU   RSDEB
GOTLOC   EQU   GETSAVE+96                                       SA65000
FREELIST EQU   GOTLOC+8
         ORG   FREELIST                 ORG TO DEFINE FREEMAIN LIST
         FREEMAIN  V,A=GOTLOC,MF=L
         ORG   RSDEB                    RESET I.C.
RSDEBTCB DC    X'00000000'              TCB ADDRESS
RSDEBDEB DC    X'00000000'              DEB ADDRESS
*
*    DATA CONTROL BLOCK
*
RSDEBOFL DS    0CL1
RSDEBIRB DC    X'00000000'              IRB ADDRESS
RSDEBSYS DC    X'00000000'              1ST IOB ADDR IN SYS.PURGE CHAIN
RSDEBUSR DC    X'00000000'              1ST IOB ADDR IN USER PRGE CHAIN
RSDEBECB DC    X'00000000'              PARM.LIST ADDR TO PURGE ECB
RSDEBID  DS    0CL1
RSDEBDCB DC    AL4(RSDCBREP)            DCB ADDR
RSDEBAPP DS    CL4                      I/O APPENDAGE VECTOR TABLE
RSDEBMOD DS    0CL1
RSDEBUCB DS    F                        UCB ADDRESS
RSDEBBIN DS    H                        BIN NUMBER
RSDEBSCC DS    H                        CYLINDER START ADDRESS
RSDEBSHH DS    H                        TRACK START ADDRESS
RSDEBECC DS    H                        CYLINDER END ADDRESS
RSDEBEHH DS    H                        TRACK END ADDRESS
RSDEBNTR DS    H                        NO. OF TRACKS IN THIS EXTENT
*
*    EVENT CONTROL BLOCK
*
RSECBAD  DS    CL4                      ECB ADDRESS
RSDCBDEB DC    AL4(RSDEB)               DEB ADDRESS
*
RSDCBREP EQU   RSDEB+8                  POINT TO RELATIVE BEGINNING DCB
*
*    INPUT OUTPUT BLOCK
*
RSIOB    DS    0CL40
RSIOBFG1 DC    X'00'                    I/O FLAGS BYTE 1
RSIOBFG2 DC    X'00'                    I/O FLAGS BYTE 2
RSIOBSN1 DS    CL1                      FIRST SENSE BYTE
RSIOBSN2 DS    CL1                      SECOND SENSE BYTE
RSIOBECB DC    AL4(RSECBAD)             ECB ADDRESS
RSIOBCSW DS    D                        LAST CSW
RSIOBCPA DS    AL4(RSCCW1)              CHANNEL PROGRAM ADDRESS
RSIOBDCB DS    AL4(RSDCBREP)            DCB ADDRESS
RSIOBRCP DS    CL4                      RESTART ADDRESS FOR IOS
RSIOBINC DS    H                        INCREMENT BLOCK COUNT
RSIOBECT DS    H                        NO. OF ERROR ENTRIES
RSIOBDAD DS    D                        SEEK ADDRESS FOR DA
*
*    CHANNEL PROGRAM
*
RSCCWLST DS    0CL24
RSCCW1   DS    D                        CCW1
RSCCW2   DS    D                        CCW2
RSCCW3   DS    D                        CCW3
*
*    BUFFER SEGMENT FOR EXTERNAL BLOCKS
*
RSSTATUS DS    0CL8
RSSTAT1  DS    CL1                      STATUS BYTE 1
RSSTAT2  DS    CL1                      STATUS BYTE 2
RSSTAT3  DS    CL1                      STATUS BYTE 3
RSSTAT4  DS    CL1                      STATUS BYTE 4
         DS    0F                                                Y02049
RSPASSFL DS    AL1                      PASSWORD CHK IND         Y02049
RSTABAD  DS    AL3                      ADR OF CURR USING ENT    Y02049
RSTLABEL DS    0CL80                    TAPE HDR RECORD          Y02049
RSHDR    DS    CL3                      LABEL IDENT              Y02049
RSHDRNUM DS    CL1                      LABEL NO.                Y02049
RSDATAID DS    CL17                     DATA SET IDENT           Y02049
         DS    CL32                                              Y02049
RSDSSECR DS    CL1                      SECURITY IND(DATA SET)   Y02049
         DS    CL26                     REST OF HDR1             YM7337
         ORG   RSTLABEL                 DECLARE HDR2             YM7337
         DS    CL47                     FRONT OF HDR2            YM7337
RSDSIND  DS    CL1                      CHKPT D.S. INDR          YM7337
         DS    CL32                     REST OF HDR2             YM7337
RSSEGEND EQU   *                        LN OF SEG W/A FOR TAPE   YM7337
         EJECT
         DCBD  DSORG=PS
         EJECT
         IHJDSTAB                                                Y02076
TABPOS   EQU   TABVLID2
TABOPS   EQU   TABPOS
TABFSFN1 EQU   TABPOS+1
TABFSFN2 EQU   TABPOS+2
TABBLK1  EQU   TABPOS+4
TABBLK2  EQU   TABPOS+8
TABUCB   EQU   TABPOS+12
         EJECT
SRT      DSECT
         IEFUCBOB
         END
