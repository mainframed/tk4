*
         COPY  LCGASMSW
*
         TITLE 'IGC0Q06C - CHKPT EXIT ROUTINE (IHJACP50)'
IGC0Q06C CSECT
***********************************************************************
*                                                                     *
*STATUS CHANGE LEVEL 000                                              *
*                                                                     *
*FUNCTION/OPERATION - FOR NORMAL PROCESSING THIS ROUTINE WILL DO      *
*                   THE FOLLOWING                                     *
*                                                                     *
*                     1.)  ISSUE A STOW MACRO ON THE CHECKID IF THE   *
*                          CHKPT DATA SET IS A PARTIONED DATA SET.    *
*                     2.)  CALLS WIJOURN MACRO TO CHECKPOINT          *
*                          THE VIO DATA SETS (FOR AUTOMATIC           *
*                          RESTART) TO THE JOB JOURNAL.               *
*                     3.)  UPDATE THE JCT AND WRITE IT OUT TO THE     *
*                          SCHEDULER WORK AREA (SWA)                  *
*                     4.)  FREEMAIN FOR THE CHKPT WORK AREA           *
*                     5.)  XCTL TO MESSAGE MODULE                     *
*                                                                     *
*                     FOR ERROR PROCESSING THIS ROUTINE WILL DO THE   *
*                     FOLLOWING                                       *
*                                                                     *
*                     1.)  FREEMAIN FOR CHKPT WORK AREA IF CHKPT      *
*                          HOUSEKEEPING GOT CORE FOR IT               *
*                     2.)  IF THE CHR WAS WRITTEN, WRITE THE JCT WITH *
*                          NO UPDATING                                *
*                     3.)  XCTL TO MESSAGE MODULE IGC0S06C            *
*                                                                     *
*                     FOR PROCESSING A CANCEL REQUEST OR A VIO ERROR  *
*                     (CODE 205), DO THE FOLLOWING                    *
*                                                                     *
*                     1.)  ZERO OUT THOSE FIELDS IN THE JCT THAT ARE  *
*                          MAINTAINED BY CHKPT (I.E. JCTDEVT,JCTCKTTR,*
*                          JCTCKIDL, JCTCKIDT).                       *
*                     2.)  WRITE OUT THE JCT TO THE SWA.              *
*                     3.)  FREEMAIN FOR THE WORK AREA.                *
*                     4.)  PUT X'00' RETURN CODE IN REGISTER 15.      *
*                     5.)  RETURN CONTROL TO THE USER.                *
*                                                                     *
*ENTRY POINT  IGC0Q06C                                                *
*                                                                     *
*INPUT   ADDRESS OF THE CHKPT WORK AREA IN REGISTER 1.
*        IF REGISTER 1 IS ZERO UPON ENTRY, CORE WAS NOT OBTAINED FOR
*        THE WORK AREA.  IN THIS CASE REGISTER 5 WILL CONTAIN THE
*        ADDRESS OF CHKPT'S SVRB.  BYTES 0-3 OF THE EXTENDED SAVE AREA
*        WILL CONTAIN THE RETURN CODE AND MESSAGE CODE, BYTES 33-35 THE
*        TIOT ADDRESS AND BYTES 37-39 THE DCB ADDRESS OR ZERO (IF A BAD
*        PARAMETER LIST WAS PASSED).  BIT 3 (HKPCLOSE) OF BYTE 32
*        (HKPFLAG) WILL BE 1 IF CHKPT HOUSEKEEPING OPENED THE CHKPT
*        DATA SET.                                                    *
*                                                                     *
*OUTPUT  CANCEL REQUEST                                               *
*              RETURN CODE IN REGISTER 15                             *
*        NON CANCEL REQUEST                                           *
*              1.) ADDRESS OF SVRB IN REGISTER 1                      *
*              2.) RETURN CODE AND MESSAGE CODE IN FIRST 4 BYTES OF   *
*                  SVRB EXTENDED SAVE AREA                            *
*              3.) IF ERROR OCCURRED BEFORE CHR WAS WRITTEN           *
*                    BYTES IN SVRB        CONTENTS                    *
*                        16-23               JOBNAME                  *
*                        24-31               DDNAME (OR 0 IF ERROR CODE
*                                                       IS 01)        *
*                        36-39               DCB ADDRESS              *
*              4.) IF ERROR OCCURRED AFTER CHR WAS WRITTEN, OR NO ERROR
*                  OCCURRED                                           *
*                    BYTES IN SVRB        CONTENTS                    *
*                        16-31               CHECKID                  *
*                        32-35               TIOT ADDRESS             *
*                        36-39               DCB ADDRESS (HIGH ORDER  *
*                                                BYTE=X'80' IF CHKPT  *
*                                                OPENED THE DATA SET  *
*                                                                     *
*EXTERNAL ROUTINES  NONE                                              *
*                                                                     *
*SVC USED  FREEMAIN,XCTL,EXIT,STOW,GETMAIN                            *
*                                                                     *
*EXITS-NORMAL 1.) FOR CANCEL-RETURN CONTROL TO USER WITH RETURN CODE  *
*                                 IN REGISTER 15                      *
*             2.) IF NOT CANCEL-XCTL TO CHKPT MESSAGE MODULE IGC0S06C *
*     -ERROR NONE                                                     *
*                                                                     *
*TABLES/WORK AREAS-CREATED-CERSECT (CONTAIN INFO FOR MESSAGE MODULE)  *
*                  -REFERENCED- TCB,TIOT,JCT,UCB,CHKWA,DC,QMIOP,RPL,  *
*                               JESCT,JSCB,CVT                        *
*                                                                     *
*ATTRIBUTES - REENTRANT, SUPERVISOR STATE, TYPE 4 SVC ROUTINE.        *
*                                                                     *
*RESTRICTIONS ON USE OF ROUTINE - VS/2-REL 2  ONLY.                   *
*                                                                     *
*NOTES - NONE.                                                        *
*                                                                     *
* VS2-REL 3 CHANGES:
*186500-187000,187900-187920                                     ZM0467
* VS2 RELEASE 037 CHANGES ADDITIONS DELETIONS
*C150000,A151000                                               @ZA16894
*D293700,C294200,A295200-297700,568800                         @ZA27494
***********************************************************************
         EJECT
         USING CHKWA,RC
         BALR  RB,ZERO             SET UP MODULE ADDRESSABILITY
         USING *,RB
         B     BEGIN               BRANCH AROUND EYE CATCHER
         CNOP  0,8                 ALIGN TO A DOUBLE WORD BOUNDARY
         DC    C'IGC0Q06C'         CSECT NAME
         DC    C'@ZA27494'         LAST CODE SHIPPED           @ZA27494
         DC    C'&SYSDATE'         LAST DATE SHIPPED           @ZA27494
BEGIN    EQU   *
         LTR   R1,R1              IS THERE A CHKPT WA
         BZ    CERERCHK            NO-CHECK TO DETERMINE ACTION
         LR    RC,R1              SET UP CHKPT WA ADDRESSABILITY
         LA    RD,CKREGSAV         INITIALIZE SAVE AREA REG.
         LA    R7,INJMJCT          GET ADDR OF JCT WRITE-OUT AREA.
         L     R4,CKTCBAD          GET THE TCB ADDRESS
         USING TCB,R4
         L     R9,TCBRBP           GET ADDRESS OF CHECKPOINTS SVRB
         USING CERSECT,R9
         MVC   CERRETCD(CERMSGMD-CERRETCD),CKRETCOD
*                                       CODES FOR MESSAGE MODULE
         MVC   CERFLAG(LFLAG),CKFLAG1   MOVE FLAG FOR COMMON ADDRESSING
         TM    CKFLAG1,CKCANCEL    WAS CANCEL REQUESTED
         BO    CERCANC             BRANCH TO PROCESS IF YES
         L     R8,CKDCBAD          GET ADDRESS OF CHEKPT DCB
         LA    R8,0(R8)            CLEAR HIGH ORDER BYTE
         ST    R8,CERDCBAD         SAVE ADDRESS FOR MSG. MODULE
         USING IHADCB,R8
         L     R2,TCBTIO           GET TIOT ADDRESS
         USING TIOTSECT,R2
         TM    CKFLAG2,CKCHR       WAS THE CHR WRITTEN
         BO    CERGETID            BRANCH IF YES
*                                                                     *
***********************************************************************
*                                                                     *
*   SET UP PARAMETER LIST FOR THE MESSAGE MODULE.  SINCE THE CHR WAS
*   NOT WRITTEN, ONLY THE JOBNAME AND DDNAME ARE REQUIRED FOR THE MSG.
*                                                                     *
***********************************************************************
*                                                                     *
         MVC   CERJOBNM(LJOBNM),TIOCNJOB     MOVE IN JOBNAME FROM TIOT.
         MVC   CERDDNM(L'DCBDDNAM),DCBDDNAM INIT DDNAME FROM DCB YM3983
         TM    DCBOFLGS,CKDCBOP    IS CHKPT DCB OPEN             YM3983
         BZ    CERSYNR             IF NOT, USE DDNAME FROM DCB   YM3983
*                                  OTHERWISE, FALL THRU AND GET  YM3983
*                                  DDNAME FROM TIOT ENTRY        YM3983
         AH    R2,DCBTIOT          POINT AT DD ENTRY IN TIOT
         USING TIOELNGH,R2
         MVC   CERDDNM(CERTIOAD-CERDDNM),TIOEDDNM
*                                  MOVE DDNAME TO MSG MOD PARMLST
         B     CERSYNR             BRANCH TO FREEMAIN AND CLOSE
*                                                                     *
***********************************************************************
*                                                                     *
*  THE CHR WAS WRITTEN.  THEREFORE THE CHECKID, TIOT ADDRESS AND THE
*  DCB ADDRESS WILL BE PASSED TO THE MSG. MODULE
*                                                                     *
***********************************************************************
*                                                                     *
CERGETID EQU   *
         OI    CERDCBAD,CHRWRTTN   TELL SO6C CHR WRITTEN         YM6511
         MVI   CERCHKID,SPACE                BLANK OUT THE CHECKID
         MVC   CERCKID1(LCHKID),CERCHKID     FIELD IN THE PARAM AREA.
         ST    R2,CERTIOAD         SAVE TIOT ADDRESS FOR MSG. MOD.
         TM    CKFLAG2,CKUSPCHD    DID USER SUPPLY THE CHECKID
         BZ    CERGETGN            BRANCH IF NO TO GET GENERATED ONE
         L     R6,CKPARMAD         GET ADDRESS OF PARAMETER LIST
         USING CHKPTPML,R6         MAPPING CHKPT PARM
         L     R4,IDADDR           GET ADDR OF THE CHECKID
         XR    R2,R2               CLEAR REGISTER 2 FOR INSERT
         IC    R2,LUSERID          GET LENGTH OF CHECKID
         BCTR  R2,ZERO             SUBTRACT ONE FOR EXECUTE
         B     CERMOVE             GO TO MOVE CHECKID TO PARMLST
CERGETGN EQU   *
         LA    R4,CKCHEKID         GET ADDRESS OF GENERATED CHKID
         LA    R2,LENGTH1          LENGTH-1 FOR EXECUTE
CERMOVE  EX    R2,CERMOVID         MOVE CHECKID TO PARAM AREA
         DROP  R4,R2,R6
*                                                                     *
***********************************************************************
*                                                                     *
*        FOR BPAM CHECKPOINT DATA SET, WHEN NO ERRORS HAVE BEEN       *
*        ENCOUNTERED(EXCEPT OUTSTANDING ENQUEUES) STOW CHKPT ENTRY    *
*        UNDER CHECKID AS MEMBER                                      *
*                                                                     *
***********************************************************************
*                                                                     *
CERCKCD  EQU   *
         CLI   CKRETCD1,CKPSBERR   DOES RETURN CODE INDICATE ONLY
*                                  A POSSIBLE ERROR.
         BE    CERSKP1             YES-SKIP ERROR CHECK.
         CLI   CKRETCD1,HEXZERO    HAVE ANY ERRORS BEEN ENCOUNTERED
         BNZ   CERSKP2             YES-SKIP CODE TO STOW CHKPT ENTRY
CERSKP1  TM    CKFLAG1,CKBPAM      WAS CHKPT DATA SET OPENED FOR BPAM
         BZ    CERSKP2             NO-DO NOT STOW ENTRY
         L     R1,CKDCBAD               SET UP
         LA    R0,CERSTOW               PARAMETERS
         MVC   CERSTOW(IDL),CERCHKID    FOR STOW MACRO
         XC    CERSTOW8(LTTR),CERSTOW8  ZERO STOW TTR FIELD    @ZA16894
         MVC   0(LTTR,R1),CKTTR         SAVE TTR FOR STOW      @ZA16894
         STOW  (1),(0),R
         B     *+4(RF)             BRANCH TABLE DETERMINES PROCESSING
*                                  TO BE DONE DEPENDING UPON THE RETURN
*                                  CODE FROM STOW
         B     CERSKP2             OK-CONTINUE
         B     CER10               I/O ERROR-GO TO MOVE ERRCODE TO WA
         B     CERSKP2             OK-CONTINUE
         B     CER0C               NOT ENOUGH ROOM IN DIRECTORY-GO TO
*                                  INDICATE PROGRAMMER ERROR
         B     CER10               I/O ERROR-GO TO MOVE ERRCODE TO WA
*                                                                     *
***********************************************************************
*                                                                     *
*        GET UCB ADDR IN ORDER TO PUT DEVICE TYPE INTO JCT FIELD      *
*        'JCTDEVT'                                                    *
*                                                                     *
***********************************************************************
*                                                                     *
CERSKP2  EQU   *
         L     R6,CKTCBAD          GET THE TCB ADDRESS
         USING TCB,R6
         L     R3,TCBTIO                                        ZA00617
         AH    R3,DCBTIOT                                       ZA00617
         USING TIOELNGH,R3                                      ZA00617
         L     R6,TIOTUCB          GET THE UCB ADDRESS FROM TIOT
*                                                                     *
***********************************************************************
*                                                                     *
*        IF CHR WAS NOT WRITTEN DO NOT UPDATE JCT OR WRITE JCT TO JOB *
*        QUEUE, OTHERWISE, MOVE CHECKID TO JCT                        *
*        IF AN ERROR OCCURRED OTHER THAN OUTSTANDING ENQUEUES OR      *
*        IMMEDIATE RESTARTS SUPPRESSED BRANCH TO WRITE JCT TO JOB Q   *
*                                                                     *
***********************************************************************
*                                                                     *
CERFD    EQU   *
         USING UCBSECT,R6          ADDRESS UCB
         TM    CKFLAG2,CKCHR       WAS CHR WRITTEN
         BZ    CERSYNR             IF NOT, BR TO FREEMAIN AND CLOSE
CERFDCAN L     R4,CKTCBAD          GET TCB ADDR                  YM5773
         USING TCB,R4              ADDRESS TCB                   YM3988
         L     R4,TCBJSCB-TCB(,R4) GET JSCB ADDR                 YM3988
         USING IEZJSCB,R4          ADDRESS JSCB                  YM3988
         MVC   SVAJCTA(E4),JSCBJCTA SAVE JCT SVA ADDR            YM3988
         TM    CKFLAG1,CKCANCEL         WAS CANCEL REQUESTED     YM5773
         BO    CERJCTW                  YES-BR TO WRITE JCT      YM5773
         CLI   CERRETC1,CKPSBERR   RETURN CODE INDICATE POSSIBLE ERROR
*                                  A POSSIBLE ERROR
         BE    CERAFER             YES-UPDATE JCT
         CLI   CERRETC1,HEXZERO    HAS AN ERROR OCCURED
         BNE   CERJCT1             BRANCH IF YES--SKIP UPDATING THE JCT
CERAFER  EQU   *
         L     R7,CKTCBAD               GET TCB ADDR             ZM0467
         WIJOURN TCB=(R7),CALLER=CKPT   VIO JOURNLING            ZM0467
         LTR   RF,RF                    ANY VIO ERRORS          ZA00617
         BZ    CERAFER2                 BRANCH IF NO            ZA00617
         MVI   CERMSGCD,VAMSGTYP        MSG SHELL ID            ZA00617
         MVI   CERRETC1,CKIOERR         SET RETURN CODE         ZA00617
         LA    R7,VAMERR1               IS IT RET. CODE 4        ZM0467
         CR    RF,R7                    COMPARE                  ZM0467
         BE    CERAFER1                 BR IF IT IS 4           ZA00617
         MVI   CERMSGCD+E1,ERRMSGC2     SET ERR CODE 205        ZA00617
         B     CERCANC                  BR TO CANCEL AUTO RSTRT ZA00617
CERAFER1 MVI   CERMSGCD+E1,ERRMSGC1     SET ERR CODE 204        ZA00617
CERAFER2 EQU   *                        UPDATE JCT AS REQUIRED  ZA00617
         TM    JCTRSW2,JCTNORST    ARE IMMEDIATE RESTARTS SUPPRESSED
         BO    CERJCT1             BRANCH IF YES
*                                                                     *
***********************************************************************
*                                                                     *
*        UPDATE THE FOLLOWING FIELDS IN JCT:                          *
*            JCTCKID - CHKPT ID                                  YM3988
*            JCTCKTTR - CHKPT D/S JFCB SVA ADDRESS               YM3988
*            JCTRSW1 - SWITCH - CHKPT TAKEN                           *
*            JCTDEVT - DEVICE TYPE CHKPT D.S.                         *
*            JCTRSW2 - SWITCH - SYSCHK                                *
*            JCTVOLSQ - VOLUME SEQUENCE NO CHKPT D.S.                 *
*            JCTSMRBA - RBA OF SYS MSG DATA SET                  Y02076
***********************************************************************
*                                                                     *
         L     R4,JSCBSMLR-IEZJSCB(,R4) GET SYS MSG D/S RPL ADDR YM3988
         USING IFGRPL,R4           ADDRESS RPL                   YM3988
         MVC   JCTSMRBA(E8),RPLRBAR RBA OF MSG D/S TO JCT        YM3988
         DROP  R4                  RPL ADDRESSABILITY            YM3988
         ICM   R4,E7,JCTSMRBA+E5   BUMP THE LOGICAL RECORD NR BY YM5984
         LA    R4,E1(,R4)          1 TO ACCOUNT FOR THE CHKPT    YM5984
         STCM  R4,E7,JCTSMRBA+E5   MESSAGE ISSUED OUT OF S06C    YM5984
         NI    JCTRSW2,AUTOREST    RESET AUTO RS INELIG BIT      Y02076
         MVI   JCTCKIDT,SPACE      BLANK OUT CHK ID IN JCT       A32184
         MVC   JCTCKID1(CKL),JCTCKIDT                            A32184
         EX    R2,CERMVID          EX MOVE OF CHK ID TO JCT      A32184
         MVC   JCTCKTTR(CKTTRL),TIOEJFCB
         OI    JCTRSW1,JCTCKFT     TURN ON CHKPT TAKEN BIT.
         MVC   JCTDEVT(DEVTL),UCBTYP MOVE DEVICE TYPE INFO TO JCT.
         NI    JCTRSW2,SYSCHKOF    TURN OFF POSSIBLE SYSCHK BIT
         L     R8,DCBDEBAD         GET ADDR OF CHKPT DATA SET'S DEB.
         DROP  R8
*                                                                     *
***********************************************************************
*                                                                     *
*        FOR BPAM CHKPT DS VOLSEQ NO IN JCT SET TO ONE.               *
*        OTHERWISE VOL SEQ NO IS MOVED FROM DEB TO JCT                *
*                                                                     *
***********************************************************************
*                                                                     *
         TM    CKFLAG1,CKBPAM      Q. CHKPT DATA SET OPENED FOR BPAM
         BO    CERPVOL             YES-FILL IN JCTVOLSQ FIELD
         TM    UCBTBYT3,UCB3TAPE   IS DATA SET ON MAGNETIC TAPE
         BO    CERJCT1              IF SO, ACP25 HAS SET VLSEQ  YA00142
         LA    RF,DAEXT            GET NO. OF BYTES PER DEVICE ENTRY.
         XR    RE,RE               CLEAR REGISTER.
         XR    R1,R1               CLEAR REGISTER.
         IC    R1,DEBNMEXT(R8)     GET NUMBER OF EXTENTS.
         MR    RE,R1               COMPUTE SIZE OF DEB DEVICE
*                                  DEPENDENT SECTION.
CERCOMV  EQU   *
         AR    RF,R8               COMPUTE OFFSET TO VOL SEQ FIELD.
         MVC   JCTVOLSQ(ONE),DEBBAS1(RF)     MOVE SEQ NO. TO JCT.
CERJCT1  EQU   *
         LA    R7,INJMJCT          LOAD ADDR OF WRITE OUT AREA.
*                                                                     *
***********************************************************************
*                                                                     *
*        WRITE JCT TO JOB QUEUE                                       *
*                                                                     *
***********************************************************************
*                                                                     *
CERJCTW  EQU   *
         BAL   RA,CERQW            GO TO WRITE OUT JCT.
*                                                                     *
***********************************************************************
*                                                                     *
*        RESTORE CHKPT DCB SYNAD ADDR EXCECT FOR CHKPT CANCEL REQUEST *
*                                                                     *
***********************************************************************
*                                                                     *
CERSYNR  EQU   *
         TM    CKFLAG1,CKCANCEL    WAS CANCEL REQUESTED.
         BO    CERTURN             YES-SKIP CODE TO RESTORE SYNAD ADDR.
         L     R8,CKDCBAD          GET ADDR OF CHKPT DCB.
         USING IHADCB,R8           ADDRESS CHKPT DCB.
         MVC   SYNAD1(CKPARMAD-CKSYNAD1),CKSYNAD1
*                                  RESTORE SYNAD ADDR IN CHKPT DCB
*                                                                     *
***********************************************************************
*                                                                     *
*        RESTORE CHKPT DCBBLKSIZE IF CHKPT SUPPLIED BLKSIZE           *
*                                                                     *
***********************************************************************
*                                                                     *
CERTURN  EQU   *
CERCON2  EQU   *
         L     R8,CKDCBAD          ADDRESS CHKPT DCB
         MVC   DCBBLKSI(LBLKSIZ),CKDCBSI
*                                  RESTORE USER BLOCKSIZE
         L     R2,CKTCBAD          ADDR TCB
*                                                                     *
***********************************************************************
*                                                                     *
*        FREEMAIN CHKPT WORK AREA (SUBPOOL 252 V=R SUBPOOL 253 V=V)   *
*                                                                     *
***********************************************************************
*                                                                     *
CERFREWA EQU   *
         USING TCB,R2
         L     R0,CKWACL           SET UP FREEMAIN
         ICM   R0,HIORDER,SP253    INDICATE SP 253.            @ZA27494
         LA    R1,CHKWA            PARAMETER REGISTERS
         TM    TCBFLGS6,TCBRV      IS THIS TASK V=R            @ZA27494
         BNO   CONT                NO,LEAVE SP 253             @ZA27494
         ICM   R0,HIORDER,SP252    YES,INDICATE SP 252         @ZA27494
CONT     EQU   *                                               @ZA27494
         L     R2,TCBRBP           ADDR CHKPT SVRB             @ZA27494
         DROP  R2                                              @ZA27494
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
*                                                                     *
***********************************************************************
*                                                                     *
*        SET FLAG IN PARMLST FOR MSG.MOD. TO CLOSE CHKPT D.S. IF      *
*        CHKPT OPENED D.S.                                            *
***********************************************************************
*                                                                     *
*                                                                     *
         TM    CERFLAG,CKOPEN      DID CHKPT OPEN DATA SET
         BZ    CERRET              NO-RETURN TO USER
CERSTCLS EQU   *
         OI    CERDCBAD,CERMCLS    SET BIT TO HAVE MSG. MOD. CLOSE
*                                  CHKPT DATA SET
*                                                                     *
***********************************************************************
*                                                                     *
*        IF CANCEL WAS REQUESTED RETURN TO CALLER VIA SVC 3, ELSE     *
*        GO TO XCTL TO MSG.MOD.(IHJACP70)                             *
*                                                                     *
***********************************************************************
*                                                                     *
CERRET   EQU   *
         TM    CERFLAG,CKCANCEL    WAS CANCEL REQUESTED
         BZ    CERMSGX             BRANCH IF NO TO MSG. MOD EXIT
         LH    RF,CERRETCD         LOAD RETURN CODE
         SVC   3                   RETURN TO CALLING PROGRAM
CERMSGX  EQU   *
         MVC   CERMSGMD(LMODNAME),CERMSGID   MOVE MOD.NAME TO XCTL PARM
         LA    R7,CERMSGMD         ADDRESS OF MODULE NAME
         ST    R7,CERXCTL          PUT IN PARM LIST FOR XCTL
         LA    RF,CERXCTL
         LR    R1,R9               PUT ADDRESS OF SVRB IN R1
         XCTL  SF=(E,(15))         GO TO MESSAGE MODULE
*                                                                     *
***********************************************************************
*                                                                     *
*        SET MSG AND RET CODE IN PARMLST WHEN I/O ERROR OCCURS DURING *
*        STOW AND THEN CONTINUE PROCESSING                            *
**                          RETURN CODE  = 0C(HEX)                    *
*                           MESSAGE CODE = 26(DEC)                    *
*                                                                     *
***********************************************************************
*                                                                     *
CER10    EQU   *
         MVI   CERRETC1,CKIOERR    MOVE IN RETURN CODE
         LA    RA,CKERIO5          LOAD MESSAGE CODE
         STH   RA,CERMSGCD         PUT IN PAR AREA FOR MSG. MODULE
         B     CERSKP2             CONTINUE PROCESSING
CERPVOL  EQU   *
         MVI   JCTVOLSQ,HEXONE     VOL.SEQ.NO IN JCT=1 FOR BPAM D.S.
         B     CERJCT1             GO TO WRITE OUT JCT
*                                                                     *
***********************************************************************
*                                                                     *
*        INITIALIZES PARMLST TO MSG.MOD. WHEN ERROR OCCURRED BEFORE   *
*        CHKPT GETMAIN'D FOR WORKAREA                                 *
*                                                                     *
***********************************************************************
*                                                                     *
CERERCHK EQU   *
         USING HKPSECT,R5
         LR    R9,R5               PUT ADDRESS OF SVRB IN R9
         MVC   CERFLAG(LFLAG),HKPFLAG   MOVE FLAG TO COMMON AREA
         L     R4,HKPTIOT          GET TIOT ADDRESS
         DROP  R3                                               ZA00617
         USING TIOTSECT,R4
         L     R8,HKPDCB           GET DCB ADDRESS
         LA    R8,ZERO(R8)         CLEAR HIGH ORDER BYTE
         ST    R8,CERDCBAD         SAVE DCB ADDRESS FOR MSG. MOD.
         MVC   CERJOBNM(LJOBNM),TIOCNJOB     MOVE JOBNAME TO MSG. PARMS
         LTR   R8,R8               Q. IS THERE A DCB ADDRESS
         BZ    CERMSGX             BRANCH IF NO TO MESSAGE MODULE
         TM    DCBOFLGS,CKDCBOP    IS THE DCB OPENED
         BZ    CERMVDD             BRANCH IF NOT--GET DDNAME FROM DCB
*                                  IF YES, GET DDNAME FROM TIOT
         AH    R4,DCBTIOT          POINT TO TIOT ENTRY
         USING TIOELNGH,R4
         MVC   CERDDNM(LDDNM),TIOEDDNM  MOVE DDNAME TO MESG. MOD. PARMS
         TM    CERFLAG,HKPCLOSE    DID CHECKPOINT OPEN THE DATA SET
         BO    CERSTCLS            BRANCH TO SET CLOSE BIT FOR MSG. MOD
         B     CERMSGX             BRANCH TO GO TO MESSAGE MODULE
CERMVDD  MVC   CERDDNM(LDDNM),DCBDDNAM  MOVE DDNAME TO MESSAGE PARMS.
         B     CERMSGX             BRANCH TO GO TO MESSAGE MODULE
         DROP  R4,R5
*                                                                     *
***********************************************************************
*                                                                     *
*        CHKPT CANCEL PROCESSING - IF A CHKPT HAS BEEN TAKEN DURING   *
*        THIS STEP,CHKPT FIELDS IN JCT ARE ZERO'D OUT SO THAT IT WILL *
*        APPEAR THAT A CHKPT HAS NOT BEEN TAKEN AND AN IMMEDIATE      *
*        RESTART IS NOT POSSIBLE                                      *
*                                                                     *
***********************************************************************
*                                                                     *
CERCANC  EQU   *
         TM    JCTRSW1,JCTCKFT     HAS A CHKPT BEEN TAKEN IN THIS STEP
         BZ    CERCON2             NO-GO TO FREE WORK AREA
CERZERO  EQU   *
         XC    JCTDEVT(LJCT),JCTDEVT    ZERO OUT JCT FIELDS.
         XC    JCTCKTTR(CKTTRL),JCTCKTTR
         XC    JCTCKIDL(TWO),JCTCKIDL
         MVI   JCTCKIDT,SPACE      BLANK OUT CHECKID FIELD IN JCT.
         MVC   JCTCKID1(CKL),JCTCKIDT
         XI    JCTRSW1,JCTCKFT     TURN OFF CHKPT TAKEN BIT.
         B     CERFDCAN            GO TO WRITE OUT JCT.          YM5773
*                                                                     *
***********************************************************************
*                                                                     *
*        SET MESSAGE AND RETURN CODE IN PARMLST FOR MSG.MOD WHEN      *
*        STOW MACRO FAILED BECAUSE DIRECTORY OF CHKPT BPAM D.S.       *
*        RAN OUT OF SPACE                                             *
*                             RETURN CODE  = 08                       *
*                             MESSAGE CODE = 17(DEC)                  *
*                                                                     *
***********************************************************************
*                                                                     *
CER0C    EQU   *
         MVI   CERRETC1,CKPGMERR   MOVE RETURN CODE TO MSG. PARMS
         LA    RA,CKERPG17         GET MSG. CODE
         STH   RA,CERMSGCD         PUT IN MSG. PARMS
         B     CERSKP2             RETURN TO MAIN-LINE CODE AFTER STOW
*                                                                     *
***********************************************************************
*                                                                     *
*        SUBROUTINE TO GET SPACE FOR QMNGRIO PARM LIST & WORK AREA    *
*        THEN WRITE JCT TO SWA VIA QMNGRIO                       Y02076
*                                                                     *
***********************************************************************
*                                                                     *
CERQW    EQU   *                        WRITE JCT TO SWA         Y02076
         ICM   R0,ADDRBYTS,QMNGWALN     INSERT LNGTH OF WA IN R0 Y02076
         ICM   R0,HIORDER,SP253         PUT SUBPOOL NO. IN R0    Y02076
         ST    R0,CKERAS02              SAVE GETMAIN PARM REG    Y02076
         GETMAIN R,LV=(R0)              R1 WILL HAVE ADDR OF WA  Y02076
         ST    R1,CKERAS01              SAVE PARM LIST ADDR      Y02076
         USING QMIOP,R1                                          Y02076
         XC    QMITCBAD(E24),QMITCBAD   CLEAR QMNGRIO PARM LIST  Y02076
         L     R0,SVAJCTA               GET SVA ADDR OF JCT      Y02076
         IC    R0,ZEROBYTE              CLEAR SVA LO ORDER BYTE  Y02076
         ST    R0,QMIDSKAD              ST JCT SVA ADR IN P.L.   Y02076
         LA    R0,E24                   GET OFFSET TO WORK AREA  Y02076
         AR    R0,R1                    CALC ADDR OF WORK AREA   Y02076
         ST    R0,QMIWRKAD              ST ADDR OF WA IN P.L.    Y02076
         LA    R0,INJMJCT               GET CORE ADDR OF JCT     Y02076
         ST    R0,QMIRECAD              ST ADDR IN P.L.          Y02076
         L     R0,CKTCBAD               GET ADDR OF TCB          Y02076
         ST    R0,QMITCBAD              STORE IN QMNGRIO P.LIST  Y02076
         LA    R0,E176                  GET LENGTH OF JCT        Y02076
         STH   R0,QMIRECL               STORE IN QMNGRIO P.LIST  Y02076
         MVI   QMIFLAGS,QMIOWRTE        SET FLAGS TO 'WRITE'     Y02076
         QMNGRIO                        WRITE JCT TO SWA         Y02076
         LTR   RF,RF                    TEST IF WRITE WAS GOOD   Y02076
         BNZ   CERIO                    BR TO SET CODES IF BAD   Y02076
         L     R1,CKERAS01              GET ADR OF QMNGR P.L.    Y02076
         L     R0,CKERAS02              GETMAIN PARM REG         Y02076
         FREEMAIN  R,LV=(R0),A=(R1)     FREE UP P.L. & WORK A.   Y02076
         BR    RA                       RETURN TO CALLER.
CERIO    EQU   *                        JCT WRITE ERROR          Y02076
         L     R1,CKERAS01              GET ADR OF QMNGR P.L.    Y02076
         L     R0,CKERAS02              GETMAIN PARM REG         Y02076
         FREEMAIN  R,LV=(R0),A=(R1)     FREE UP P.L. & WORK A.   Y02076
         CLI   CERMSGCD,E0              PREVIOUS ERR OCCUR       Y02076
         BE    CERJCTER                 BRANCH IF NO             Y02076
         CLI   CERRETC1,CKPSBERR        POSSIBLE ERROR           Y02076
         BNE   CERSYNR                  BRANCH IF NO             Y02076
CERJCTER MVI   CERMSGCD+E1,ERR25        SET JCT ERR CODE 25      Y02076
         MVI   CERMSGCD,SHELL2          SET MSG SHELL CODE 2     Y02076
         MVI   CERRETC1,CKIOERR         SET RET CODE 0C          Y02076
         B     CERSYNR                  BR TO FREE WORK AREA     Y02076
*                                                                     *
*        EXECUTED INSTRUCTION                                         *
*                                                                     *
CERMVID  MVC   JCTCKIDT(ONE),CERCHKID   MOVE CHECKID TO JCT.     VS4686
CERMOVID MVC   CERCHKID(ONE),ZERO(R4)   EXECUTED INSTRUCTION
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
CERMSGID DC    CL8'IGC0S06C'       MODULE NAME FOR XCTL PARMLST
         DS    0F
SP252    DC    X'FC000000'         SPECIFY SUBPOOL 252 FOR V=R @ZA27494
SP253    DC    X'FD000000'         SPECIFY SUBPOOL 253 FOR V=V
QMNGWALN DC    AL3(280)                256 BYT QMNGRIO WA+24(PL) Y02076
VAMSG204 DC    H'204'                   NO AUTO RSTRT-CURR^CHKPT Y02076
VAMSG205 DC    H'205'                   NO AUTO RSTRT-ANY CHKPT  Y02076
ZEROBYTE DC    X'00'                    CLEAR LO BYTE SVA ADR    Y02076
ADDRBYTS EQU   7                        ADDRESS BYTES MASK       Y02076
HIORDER  EQU   8                        HI ORDER BYTE MASK       Y02076
AUTOREST EQU   X'BF'                    RESET AUTO RST INELIG    Y02076
SYSCHKOF EQU   X'7F'                    TURN OFF SYSCHK BIT      Y02076
ERR25    EQU   25                       JCT WRITE ERROR CODE     Y02076
SHELL2   EQU   2                        MSG SHELL 2              Y02076
E0       EQU   0                        CONSTANT 0               Y02076
E1       EQU   1                        CONSTANT 1               Y02076
E2       EQU   2                        CONSTANT 2               Y02076
E3       EQU   3                        CONSTANT 3               Y02076
E4       EQU   4                        CONSTANT 4               Y02076
E5       EQU   5                        CONSTANT 5               Y02076
E6       EQU   6                        CONSTANT 6               Y02076
E7       EQU   7                        CONSTANT 7               Y02076
E8       EQU   8                        CONSTANT 8               Y02076
E9       EQU   9                        CONSTANT 9               Y02076
E10      EQU   10                       CONSTANT 10              Y02076
E24      EQU   24                       CONSTANT 24              Y02076
E176     EQU   176                      CONSTANT 176             Y02076
VAMERR1  EQU   4                        WIJOURN ERR RET 4       ZA00617
ERRMSGC2 EQU   205                      VIO JOURNAL ERR 205     ZA00617
VAMSGTYP EQU   2                        MSG SHELL TYPE CODE     ZA00617
ERRMSGC1 EQU   204                      VIO JOURNAL ERR 204     ZA00617
*                                                                     *
*        MAINTENANCE SPACE                                            *
*                                                                     *
PATCH    DC    XL((*-IGC0Q06C)/20)'00'   FIVE PERCENT MAINTENANCE SPACE
         IEFQMIOP                                                Y02076
         IFGRPL                                                  Y02076
         IEFJESCT                                                Y02076
         IEZJSCB                                                 Y02076
*                                                                     *
*                                                                     *
*        MAPPING OF PARAMETER LIST FOR CHKPT
*                                                                     *
CHKPTPML DSECT
DCBADDR  DS    0F
FLAGBYTE DS    CL1       INDICATES USER/SYS-GEN/SSS-GEN AND RETURN ID
DCBAD    DS    CL3       CHKPT D.S. DCB
IDADDR   DS    0F
LUSERID  DS    CL1       LENGTH USER CHKID/RETURN SYSTEM-GEN CHKID
CHKIDADR DS    CL3       ADDR OF CHECKID
CKCHR    EQU   128  INDICATES CHKPT WROTE OUT CHR
*
*        MAPPING OF CHKPT SVRB AND EXTENDED SAVEAREA USED TO PASS
*        INFORMATION TO EXIT MODULE ON ERROR CONDITIONS.
*
HKPSECT  DSECT
HKPSVRB  DS    24F       BASIC SECTION OF SVRB
HKPGML2  DS    F         SAVE AREA FOR ERROR RETURN AND MESSAGE CODES
HKPGML   DS    F         N/A
HKPGMLAD DS    2F        N/A
HKPGLIST DS    2F        N/A
         DS    F         N/A
HKPTIOTL DS    H         LENGTH OF TIOT
HKPBUFL  DS    H         N/A
HKPTIOT  DS    0F
HKPFLAG  DS    1C        FLAG BYTE
HKPCLOSE EQU   X'10'     INDICATES EXIT RTN MUST CLOSE CHKPT D.S.
HKPTIOAD DS    3C        ADDRESS OF TIOT
HKPDCB   DS    0F
HKPSP    DS    CL1       N/A
HKPDCBAD DS    3C        ADDRESS CHKPT DCB
HKPSAVRN DS    F         N/A
*
*        ALTERNATE MAPPING OF CHKPT SVRB AND EXTENDED SAVE AREA USED
*        TO PASS INFORMATION TO MESSAGE MODULE TO BUILD WTO MESSAGE
*
CERSECT  DSECT
CERSVRB  DS    24F       BASIC SECTION OF SVRB
CERRETCD DS    H         RETURN CODE
CERMSGCD DS    H         MESSAGE CODE
CERMSGMD DS    2F        MODULE NAME FOR XCTL PARAMETER LIST
CERXCTL  DS    F         POINTER TO MODULE NAME FOR XCLL PARMLST
CERFLAG  EQU   CERXCTL   FLAG BYTE FROM CHKWA 'CKFLAG1' FOR COMMON
*                        ADDRESSING ON BOTH ERROR AND NORMAL ENTRY
CERJOBNM DS    2F        JOB NAME            FILLED WHEN ERROR BEFORE
CERCHKID EQU   CERJOBNM  OTHERWISE CONTAINS CHECKID
CERDDNM  DS    2F        CHKPT D.S. DDNAME   CHR WAS WRITTEN
CERTIOAD DS    F         ADDR OF TIOT
CERDCBAD DS    F         ADDR OF CHKPT DCB
CERMCLS  EQU   X'80'
         IEEVCHWA VER=3                USE AOS2 VERSION OF WA
         CNOP  2,4
CERSTOW  DS    6H    STOW PARAMETER LIST
CERCLOSE DS    F    CLOSE'S PARAMETER LIST
CERAD    DS    F
         DCBD  DSORG=(BS,PO),DEVD=(DA,TA)
TIOTSECT DSECT
         IEFTIOT1
UCBSECT  DSECT
         IEFUCBOB
CVTSECT  DSECT
         CVT
         IKJTCB
NOID     EQU   X'80'     SIGNIFIES LAST WORD IN PARM LIST.
CHRWRTTN EQU   X'40'               CHR-WRITTEN FLAG              YM6511
CLOSEOPT EQU   128  OPTION BYTE FOR CLOSE'S PARM LIST.
TAPE     EQU   X'80'     UCBTYP FIELD-INDICATES TAPE
DEBBASIC EQU   32   LENGTH OF DEB'S BASIC SECTION.
DEBNMEXT EQU   16   OFFSET IN DEB TO NUMBER-OF-EXTENTS FIELD.
TAEXT    EQU   4    LENGTH DEB DEVICE DEPENDENT SECTION FOR TAPE.
DAEXT    EQU   16   LENGTH DEB DEVICE DEPENDENT SECTION FOR DIR. ACC.
DEVTL    EQU   4    LENGTH OF UCBTYP FIELD IN UCB.
CKTTRL   EQU   3    LENGTH OF JCTCKTTR FIELD IN JCT.
PCPSP    EQU   254
GR       EQU   60   OFFSET TO REG 15 IN SVRB REG SAVE AREA.
GR15     EQU   62   RBEXSAVE FIELD-OFFSET LOW ORDER 1/2 WORD IN REG 15.
IOCC     EQU   X'7F' SUCCESSFUL I/O COMPLETION CODE
DDL      EQU   8     LENGTH OF TIOEDDNM FIELD
IDL      EQU   8    LENGTH OF CHECKID FOR BPAM
CKL      EQU   15   LENGTH OF CHKID FIELD IN JCT MINUS ONE
CKMSG1   EQU   32    INDICATES WTO MSG-NOT TAKEN
CKMSG2   EQU   64
CKERPG17 EQU   X'0311'
CKERIO5  EQU   X'031A'             I/O ERROR ON STOW,MSG CODE = 26
CKERIO6  EQU   X'02'
CKDCBOP  EQU   X'10'
CKSPBKSZ EQU   8
*
*        DECIMAL CONSTANTS, POSITIONS, LENGTH-CODES
*
ZERO     EQU   0              DECIMAL - 0
ONE      EQU   1                      - 1
TWO      EQU   2                      - 2
FOUR     EQU   4                      - 4
DEC56    EQU   56                     - 56
SPACE    EQU   C' '           BLANK
*
LENGTH1  EQU   7
*
CERCKID1 EQU   CERCHKID+1
CKRETCD1 EQU   CKRETCOD+1
CERSTOW8 EQU   CERSTOW+8
TIOTUCB  EQU   TIOESTTB            UCB POINTER IN TIOT
JCTCKID1 EQU   JCTCKIDT+1
CERRETC1 EQU   CERRETCD+1
DEBBAS1  EQU   DEBBASIC+1
SYNAD1   EQU   DCBSYNAD+1
CKSYNAD1 EQU   CKSYNAD+1
TIOTADD  EQU   HKPTIOAD-1
DCBADD   EQU   HKPDCBAD-1
SVAJCTA  EQU   CKERAS00                 AREA FOR SAVING JCT SVA  Y02076
*
LCODES   EQU   4         LENGTH OF RETURN AND MESSAGE CODE
LFLAG    EQU   1                   FLAGS
LJOBNM   EQU   8                   JOBNAME
LDDNM    EQU   8                   DDNAME
LCHKID   EQU   15                  CHECKID
LJCTMB   EQU   8                   JCT MBBCCHHR ADDRESS
LSYNAD   EQU   3                   SYNAD
LBLKSIZ  EQU   2                   BLOCKSIZE
LMODNAME EQU   8                   MODULE NAME
LJCT     EQU   4                   JCT
PERSUB   EQU   4         CONSTANT USED INSHIFT INSTR(= MULTIPLY BY 16)
LTTR     EQU   4                   TTR
*
*        HEXADECIMAL CONSTANTS (MASKS)
*
HEXZERO  EQU   X'00'               HEXADECIMAL - 0
HEXONE   EQU   X'01'                           - 1
MAINUCB  EQU   X'FF'               UCB ID FOR MAIN UCB
 END
