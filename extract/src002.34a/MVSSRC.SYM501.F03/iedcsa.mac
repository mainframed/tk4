         TITLE 'MACRO GSAVTADR USED BY SUBROUTINES IN IEDCSA'
***********************************************************************
*        THE PARAMETERS TO THIS MACRO ARE AS FOLLOWS                  *
*        R=    THE REGISTER TO RECEIVE THE ADDRESS                    *
*        I=    SAVT OR AVT DEPENDING ON THE DESIRED ADDRESS           *
*THIS MACRO PUTS THE ADDRESS OF EITHER THE SAVT OR AVT IN THE         *
*SPECIFIED REGISTER AND PERFORMS A USING ON THAT REGISTER             *
***********************************************************************
         SPACE 2
         MACRO
&NAME    GSAVTADR  &R=R1,&I=SAVT
&NAME    L     &R,CVTADDR               GET CVT ADDRESS
         L     &R,AVTCVTPT(&R)          GET AVT POINTER
         L     &R,TCXAVT-IEDQTCX(&R)    GET TCAM AVT ADDRESS
         USING IEDQAVTD,&R              AVT ADDRESSABILITY
         AIF   ('&I' EQ 'AVT').NS
         L     &R,AVTSAVTP              GET SAVT ADDRESS
         DROP  &R
         USING IEDNSVTD,&R              SAVT ADDRESSABILITY
.NS      ANOP
         MEND
         TITLE 'BASE MACRO USED BY COMMON SUBROUTINES OF IEDCSA'
***********************************************************************
* THIS MACRO PERFORMS THE FOLLOWING FUNCTIONS                         *
*     : ESTABLISHES  *  ADDRESSABILITY WITHIN THE INVOKING CSECT      *
*       USING REGISTER SPECIFIED BY R=  DEFAULT IS R=R1               *
*     : OPTIONALLY GENERATES (INSTRUCTION OPERAND) AFTER THE USING    *
*       STATEMENT.  INTENDED FOR GENERATING BRANCHES                  *
*     : OPTIONALLY GENERATES CODE TO COMPUTE OFFSETS OF THE FORM      *
*       BCTR  REG,0                                                   *
*       MH    REG,ITEM                                                *
***********************************************************************
         SPACE
         MACRO
&NAME    BASE  &R=R1,&IN,&OPRND,&OFFS,&ITEM,&REG
&NAME    BALR  &R,0                     SET LOCATION COUNTER
         USING *,&R                     TELL ASSEMBLER
         AIF   ('&IN' EQ '').NOIN
         &IN   &OPRND
.NOIN    ANOP
         AIF   ('&OFFS' EQ '').NOOFF
         BCTR  &REG,0                   REDUCE FOR OFFSET CALC
         MH    &REG,&ITEM               COMPUTE OFFSET
.NOOFF   ANOP
         MEND
         TITLE 'BADRET MACRO USED BY COMMON SUBR OF IEDCSA'
***********************************************************************
* THIS MACRO ISINTENDED FOR GENERATION OF BAD RETURN CODES FOR COMMON *
*SUBROUTINES OF IEDCSA                                                *
* : CLEARS RETURN CODE REG SPECIFIED BY R=  DEFAULT IS R=R15          *
* : GENERATES BR REG SPECIFIED BY RET=  DEFAUL IS RET=R14             *
***********************************************************************
         SPACE
         MACRO
&NAME    BADRET &R=R15,&RET=R14
&NAME    SR    &R,&R                    CLEAR RETURN CODE REG
         BR    &RET                     RETURN TO CALLER
         MEND
         TITLE 'PROLOGUE'
IEDCSA   CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A-000000-999999                                               @Y17XADZ
*-A696000                                                      @OX21215
***********************************************************************
* MODULE NAME : IEDCSA                                                *
*                                                                     *
* DESCRIPTION NAME : TCAM COMMON SUBROUTINES                          *
*                                                                     *
* COPYRIGHT : 'NONE'                                                  *
*                                                                     *
* STATUS:  CHANGE LEVEL 10                                            *
*                                                                     *
* FUNCTION:   THIS MODULE CONTAINS THE COMMON SUBROUTINES FOR         *
*            THE FOLLOWING  CONVERSIONS                               *
*            IEDIAP03--CONVERTS A NETWORK ADDRESS TO A TTCIN          *
*            IEDIAP04--CONVERTS A TTCIN TO NETWORK ADDRESS            *
*            IEDIAP05--CONVERTS A TTCIN TO EITHER TTE ADDRESS         *
*                                           OR  MH TABLE ENTRY        *
*            IEDIAP06--CONVERTS SUBAREA ADDR TO NCP LCB ADDR          *
* ENTRY POINTS:IEDIAP03                                               *
*              IEDIAP04                                               *
*              IEDIAP05                                               *
*              IEDIAP06                                               *
* INPUTS:IEDIAP03--R1 =NETWORK ADDRESS RIGHT ADJUSTED                 *
*                 R15=ENTRY POINT ADDRESS                             *
*                 R14=RETURN ADDRESS
*       IEDIAP04--R1 =INDEX RIGHT ADJUSTED                            *
*                 R15=ENTRY POINT ADDRESS
*                 R14=RETURN ADDRESS                                  *
*       IEDIAP05--R1 =INDEX RIGHT ADJUSTED                            *
*                 R15=ENTRY POINT ADDRESS                             *
*                 R14=RETURN ADDRESS                                  *
*       IEDIAP06--R1 =NETWORK ADDRESS RIGHT ADJUSTED                  *
*                 R15=ENTRY POINT ADDRESS                             *
*                 R14=RETURN ADDRESS                                  *
* OUTPUT:IEDIAP03-R0 =DESTROYED                                       *
*                 R1 =ADDRESS OF RVT ENTRY                            *
*                 R15= 0  BAD RETURN CODE CONVERSION NOT PERFORMED    *
*                     ^0  DESIRED TTCIN                               *
*        IEDIAP04-R0 =DESTROYED                                       *
*                 R1 =ADDRESS OF NAT ENTRY                            *
*                 R15=DESIRED NETWORK ADDRESS                         *
*        IEDIAP05-R0 =DESTROYED                                       *
*                 R1 =TTE ADDRESS IF SIGN POSITIVE                    *
*                    =MH TABLE ENTRY ADDRESS IF SIGN IS NEGATIVE      *
*                 R15=DESTROYED                                       *
*                 R14=SAME AS ON ENTRY                                *
*        IEDIAP06-R0 =DESTROYED                                       *
*                 R1 =ADDRESS OF SAT ENTRY                            *
*                 R15= 0  BAD RETURN CODE CONVERSION NOT PERFORMED    *
*                     ^0  TTE ADDRESS OR MHTABLE TABLE ENTRY ADDRESS  *
*                                                                     *
* EXTERNAL ROUTINES: TTE CONVERT ROUTINE POINTED TO BY AVTRNMPT       *
*                                                                     *
* EXITS NORMAL: VIA BR 14                                             *
*              BY BRANCH TO ROUTINE AT AVTRNMPT                       *
*                                                                     *
* EXITS ERROR:  N/A                                                   *
*                                                                     *
* TABLES/WORKAREAS:  N/A                                              *
*                                                                     *
* ATTRIBUTES: REENTRANT                                               *
*                                                                     *
* CHARACTER CODE DEPENDENCY - RHE OPERATION OF THIS MODULE DOES NOT   *
*   DEPEND UPON A PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL  *
*   CHARACTER SET.                                                    *
*                                                                     *
* NOTES - NONE                                                        *
*                                                                     *
***********************************************************************
         TITLE 'EQUATES COMMON TO ALL SUBROUTINES OF IEDCSA'
***********************************************************************
*       REGISTER USAGE                                                *
***********************************************************************
         SPACE
R1       EQU   1                        INPUT REGISTER
R0       EQU   0                        WORK REGISTER
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       WORK/BASE REGISTER
         SPACE
***********************************************************************
*        EQUATES                                                      *
***********************************************************************
         SPACE
CVTADDR  EQU   16                       ADDRESS OF CVT AT THIS LOC
BYTE     EQU   8                        NO OF BITS IN A BYTE
TWOB     EQU   16                       NO OF BITS IN TWO BYTES
THREEB   EQU   24                       NO OF BITS IN THREE BYTES
BYTE3    EQU   1                        PICK UP LO ORDER BYTE
ALLBYTES EQU   15                       PICK UP ALL BYTES
BYTE2    EQU   2                        PICK UP BYTE 2
INIT     EQU   0                        INITIALIZED INDICATOR
         SPACE 2
   USING *,R15
IEDCSA IEDHJN CPAST
         TITLE 'IEDIAP03--NETWORK ADDRESS TO TTCIN CONVERSION '
IEDIAP03 CSECT
         USING *,R15
         N     R1,IAP03CHI              ELIMINATE HI ORDER
         LR    R0,R1                    SAVE INPUT REG
         CLI   IAP03L,INIT              IS THIS FIRST ENTRY
         BNE   IAP03SET                 NO
         SPACE
***********************************************************************
*        PERFORM INITIALIZATION ON FIRST ENTRY TO THIS CSECT          *
*                IAPO3L        = TO SAVTSUBL                          *
*                IAP03A        = TO SAVTSUBA                          *
*                IAP03SAT      = TO SAVTSAT                           *
*                IAPO3EA       = TO 16 MINUS SUBAREA LENGTH IN BITS   *
***********************************************************************
         SPACE
         GSAVTADR
         MVC   IAP03L(1),SAVTSUBL       INIT SUBAREA LENGTH
         MVC   IAP03A(1),SAVTSUBA       INIT MAX SUBAREA VALUE
         MVC   IAP03SAT,SAVTSAT         INIT ADDR OF SAT TABLE
         LA    R1,TWOB                  NO OF BITS IN TWO BYTES
         S     R1,IAP03LA               SUBTRACT NO OF BITS IN SUBAREA
         ST    R1,IAP03EA               SAVE FOR SUBSEQUENT USE
         LR    R1,R0                    RESET INPUT REG
***********************************************************************
*        END OF FIRST ENTRY INITIALIZATION CODE                       *
***********************************************************************
         SPACE
IAP03SET EQU   *
***********************************************************************
*       ISOLATE SUBAREA ADDRESS                                       *
***********************************************************************
         SPACE
         L     R15,IAP03EA              GET LENGTH TO SHIFT
         SRL   R1,0(R15)                ELIMINATE ALL BUT SUBAREA
         BASE  R=R15                    REESTABLISH ADDRESSABILITY
         SPACE
***********************************************************************
*        VALIDATE SUBAREA ADDRESS                                     *
***********************************************************************
         SPACE
         C     R1,IAP03AA               COMPARE TO MAXSUBA VALUE
         BH    BAD                      BRANCH IF HIGHER THAN MAX
         SPACE
**********************************************************************
*        DEVELOP SAT ENTRY FOR THIS SUBAREA                          *
**********************************************************************
         SPACE
         BCTR  R1,0                     REDUCE FOR OFFSET CALCULATION
         MH    R1,SATLNG                DEVELOP OFFSET
         A     R1,IAP03SAT              DEVELOP SAT ENTRY ADDRESS
         SPACE
***********************************************************************
*        DEVELOP RVT ADDRESS FOR THIS SUBAREA                         *
***********************************************************************
         SPACE
         L     R1,SATRNRVT-IEDSATD(R1)  GET RVT ADDRESS FROM SAT
         LTR   R1,R1                    DOES RVT EXIST
         BZ    BAD                      BRANCH ERROR IF NOT
         SPACE
***********************************************************************
*        DEVELOP ELEMENT ADDRESS                                      *
***********************************************************************
         SPACE
         L     R15,IAP03LA              GET SUBAREA LENGHT IN BITS
         SLL   R0,TWOB(R15)             ELIMINATE NETWORK ADDRESS
         SRL   R0,TWOB(R15)             MOVE ELEMENT ADDR TO LO ORDER
         BASE  R=R15                    REESTABLISH ADDRESSABILITY
         SPACE
**********************************************************************
*        DEVELOP RVT OFFSET FOR THIS ELEMENT ADDRESS                 *
**********************************************************************
         CLM   R0,BYTE2+BYTE3,RVTNUM-IEDRVTD(R1) CHECK ADDRESS @YM06515
         BH    BAD                      BRANCH IF IT'S TOO BIG @YM06515
         MH    R0,RVTLNG                COMPUTE RVT OFFSET
         SPACE
***********************************************************************
*        DEVELOP RVT ENTRY ADDRESS                                    *
***********************************************************************
         SPACE
         AR    R1,R0                    CALCULATE RVT ENTRY ADDRESS
         SPACE
***********************************************************************
*        DEVELOP TTCIN FOR THE SPECIFIED NETWORK ADDRESS              *
***********************************************************************
         XR    R15,R15                  CLEAR OUTPUT REG
         ICM   R15,BYTE3+BYTE2,RVTINDEX-IEDRVTD(R1) GET INDEX  @YM07638
         LA    R1,RVTINDEX-IEDRVTD(R1)  POINT TO RVT ENTRY     @YM07638
         BR    R14                      RETURN TO CALLER
BAD      BADRET
         DS    0F                       ALLIGN
IAP03LA  DC    A(0)
IAP03L   EQU   IAP03LA+3                SUBAREA LENGTH IN BITS
IAP03AA  DC    A(0)
IAP03A   EQU   IAP03AA+3                MAX SUBAREA VALUE
IAP03SAT DC    A(0)                     ADDR OF SAT TABLE
IAP03EA  DC    A(0)                     16-SUBAREA LENGTH
IAP03CHI DC    X'0000FFFF'              MASK TO CLEAR HI ORDER
SATLNG   DC    AL2(SATLEN)
RVTLNG   DC    AL2(RVTLEN)
         TITLE 'IEDIAP04--TNT/MH INDEX TO NETWORK ADDR CONVERT SUBROUT'
IEDIAP04 CSECT
         USING *,R15
         B     AFTERLNG                 BRANCH AROUND LENGTH   @OX21215
         DC    A(IEDIAP05-IEDIAP04)     LENGTH FOR PAGE FIX    @0X21215
AFTERLNG EQU   *                                               @OX21215
         N     R1,IAP04CHI              CLEAR HI ORDER OF INPUT
         TM    IAP04INT,IAP4INIT        IS THIS FIRST ENTRY
         BO    IAP04SET                 BRANCH IF NOT
         LR    R0,R1                    PRESERVE INPUT
         GSAVTADR
         OI    IAP04INT,IAP4INIT        INDICATE NOT FIRST ENTRY
         MVC   IAP04DX(2),SAVTMHDX      INIT MH INDEX
         MVC   IAP04DL(2),SAVTNADL      INIT NAT GAS
         MVC   IAP04NAT,SAVTNAT         INIT NAT ADDRESS
         LR    R1,R0                    RESTORE INPUT
IAP04SET EQU   *
         C     R1,IAP04DXA              IS IT AN MH INDEX
         BL    TTNMH                    BRANCH IF TTCIN
         S     R1,IAP04DLA              SUBTRACT GAS IN NAT
TTNMH    BCTR  R1,0                     REDUCE FOR OFFSET CALC @YM06888
         MH    R1,NATLG                 COMPUTE NAT OFFSET     @YM06888
         A     R1,IAP04NAT              ADDRESS OF NAT ENTRY
         SR   R15,R15                   CLEAR RETURN REG
         ICM   R15,BYTE3+BYTE2,NATODAF-IEDNATD(R1) GET NET ADDR
         BR    R14                      RETURN TO CALLER
         DS    0F                       ALLIGN
IAP04DXA DC    A(0)                     MH INDEX
IAP04DX  EQU   IAP04DXA+2
IAP04DLA DC    A(0)                     AMOUNT OF GAS IN NAT
IAP04DL  EQU   IAP04DLA+2
IAP04NAT DC    A(0)                     ADDRESS OF NAT
IAP04CHI DC    X'0000FFFF'              CLR HI ORDER MASK
NATLG    DC    AL2(NATLEN)
IAP04INT DC    X'00'                    FIRST ENTRY SWITCH
IAP4INIT EQU   X'80'                    SUBSEQUENT ENTRY VALUE
         TITLE 'IEDIAP05--TNT/MH INDEX TO TTE / MHTABLE ADDRESS CONV'
IEDIAP05 CSECT
         USING *,R15
         N     R1,HIOFF                 CLEAR HI ORDER         @YM05744
         TM    IAP05INT,IAP5INIT        IS THIS FIRST ENTRY    @YM06946
         BO    IAP05SET                 BRANCH IF NOT
         OI    IAP05INT,IAP5INIT        SET FIRST TIME SWITCH  @YM06946
         LR    R0,R1                    SAVE INPUT             @YM06910
         GSAVTADR I=AVT
         MVC   IAP05PT,AVTRNMPT         INIT TNT CONVERT ADDRESS
         L     R1,AVTSAVTP              GET SAVT ADDRESS       @YM06946
         DROP  R1
         USING IEDNSVTD,R1              SAVT ADDRESSABILITY    @YM06946
         MVC   IAP05DX(2),SAVTMHDX      INIT MH INDEX
         MVC   IAP05TBA,SAVTMHTB        INIT MH TABLE ADDRESS  @YM06909
         LR    R1,R0                    RESTORE INPUT
IAP05SET EQU   *
         C     R1,IAP05DXA              IS IT MH INDEX
         BL    NOTMH                    BRANCH IF NOT
         S     R1,IAP05DXA              POSITION TO MH INDEX
         MH    R1,MHTABLG               COMPUTE OFFSET
         A     R1,IAP05TBA              MH TABLE ENTRY
         L     R1,MHENTRY-IEDMHTD(R1)   MH ADDRESS
         O     R1,TMHI                  INDICATE MH ADDRESS
         BR    R14                      RETURN TO CALLER
NOTMH    L     R15,IAP05PT              GET IEDQTNT ADDRESS
         BR    R15                      GO TO CONVERT ROUTINE WHO WILL
*                                       BR ON REG14 TO MY CALLER
MHTABLG  DC    AL2(MHTABLEN)
         DS    0F
TMHI     DC    X'80000000'
HIOFF    DC    X'0000FFFF'                                     @YM05744
IAP05DXA DC    A(0)
IAP05DX  EQU   IAP05DXA+2
IAP05TBA DC    A(0)
IAP05PT  DC    A(0)
IAP05INT DC    X'00'                    FIRST ENTRY SWITCH     @YM06946
IAP5INIT EQU   X'80'
         TITLE 'IEDIAP06--FIND LCB ADDRESS FOR A GIVEN SUBAREA'
IEDIAP06 CSECT
         USING *,R15
         N     R1,P06CHI                CLEAR HI ORDER OF INPUT
         LR    R0,R1                    PRESERVE INPUT
         CLI   P06SUBL,INIT             IS THIS FIRST ENTRY
         BNE   P06SET                   BRANCH IF NOT
         SPACE
**********************************************************************
*        PERFORM INITIALIZATION ON FIRST ENTRY TO THIS CSECT         *
**********************************************************************
         SPACE
         GSAVTADR
         MVC   P06SUBL(1),SAVTSUBL      INIT SUBAREA LENGTH
         MVC   P06SUBA(1),SAVTSUBA      INIT MAX SUBA VALUE
         MVC   P06SAT,SAVTSAT           INIT SAT POINTER
         LA    R1,TWOB                  16 BITS IN TWO BYTES
         S     R1,P06SBLA               MINUS SUBAREA BIT LENGTH
         ST    R1,P06SBLA               SAVE FOR LATER USE
*********************************************************************
*        END OF FIRST ENTRY INITIALIZATION CODE                     *
*********************************************************************
         SPACE
P06SET   EQU   *
         SPACE
***********************************************************************
*        DEVELOP SUBAREA ADDRESS                                      *
***********************************************************************
         SPACE
         L     R1,P06SBLA                SUBAREA BIT LENGHT
         SRL   R0,0(R1)                  SHIFT OUT ELEMENT ADDRESS
         SPACE
***********************************************************************
*        VALIDATE SUBAREA ADDRESS                                     *
***********************************************************************
         SPACE
         C     R0,P06SUBAA               IS IT GT THAN MAX ALLOWED
         BH    SBAD                      BRANCH ERROR IF YES
         SPACE
**********************************************************************
*        DEVELOP OFFSET INTO SAT FOR THIS SUBAREA                    *
**********************************************************************
         LR    R1,R0                     COPY TO CALC REG
         BCTR  R1,0                      REDUCE FOR OFFSET CAL @YM06889
         MH    R1,SATLNG1                CALCULATE OFFSET
         SPACE
**********************************************************************
*        CALCULATE SAT ENTRY ADDRESS                                 *
**********************************************************************
         SPACE
         A     R1,P06SAT                 ADD TO SAT ADDRESS
         SPACE
*********************************************************************
*        EXTRACT LCB ADDRESS                                        *
*********************************************************************
         SPACE
         L     R15,SATRNLCB-IEDSATD(R1)  GET LCB FROM SAT
         BR    R14                       RETURN TO CALLER
SBAD     BADRET
         DS    0F                        ALLIGN
P06CHI   DC    X'0000FFFF'               CONSTANT TO CLR HI ORDER
P06SBLA  DC    A(0)                      SUBAREA LENGTH
P06SUBL  EQU   P06SBLA+3
P06SUBAA DC    A(0)                      MAXSUBA VALUE
P06SUBA  EQU   P06SUBAA+3
P06SAT   DC    A(0)                      SAT POINTER
SATLNG1  DC    AL2(SATLEN)
         TITLE 'AVT/SAVT DSECTS'
         TAVTD
         TITLE 'TCX DSECT'
         TTCXD SYS
         TITLE 'MESSAGE HANDLER TABLE DSECT'
         TMHTABD
         TITLE 'NETWORK ADDRESS TABLE DSECT'
         TNATD
         TITLE 'RESOURCE VECTOR TABLE DSECT'
         TRVTD
         TITLE 'SUB AREA ADDRESS TABLE DSECT'
         TSATD
         END
