         TITLE 'IEDAYM - TSO MESSAGE GENERATION ROUTINE'
IEDAYM   CSECT
         SPACE 3
*                    CHANGE ACTIVITY AS FOLLOWS
**************************MICROFICHE FLAGS********************SUPT CODE
*C000000-999999                                                @Y17XAYP
*C576600,577200                                                @OY15597
*A591600                                                       @OY16109
*A819600                                                       @OY16357
*A073800,078000,104400,653400,659400,693000,847800             @OY13623
*C044400,069600,097800,120600,128400,277200,288000,332400      @OY13623
*A357000,466200,503400,529800,556800,561000,612000,729000      @OY13623
*A735600,273000,433200,534000,817200                           @OY13623
*D817800                                                       @OY13623
*A151800,592200,817450,849600                                  @G36XRYP
*C256800,271200,393000,417000,431400                           @G36XRYP
*D058800,152400-156600,592800-597000,817460-817540             @G36XRYP
*D848000-848200,850200                                         @G36XRYP
*C831600                                                       @OY18057
*A296400,838200                                                @OZ26884
*C304800,315000-316800                                         @OZ26884
*A731400                                                       @OY20502
***************************************************************
*TITLE -- IEDAYM: TSO MESSAGE GENERATION ROUTINE
*
*MODULE NAME -- IEDAYM            (TCAM,TSO)                   @G36XRYP
*
*DESCRIPTIVE NAME -- TSO MESSAGE GENERATION ROUTINE
*
*COPYRIGHT -- NONE
*
*STATUS -- VERSION 10.0                                        @G36XRYP
*
*FUNCTION:
*    THIS ROUTINE BUILDS MSGGEN MESSAGES FOR TRANSMISSION TO
*    TSO TERMINALS.  THESE MESSAGES ARE SENT EITHER FOR INFOR-
*    MATIONAL REASONS OR PURPOSES OF TERMINAL CONTROL. SOURCE
*    TEXT IS CONTAINED IN THE MSGGEN CSECT AND IS MOVED INTO
*    THE SCB FOR TRANSMISSION TO OX/EP TERMINALS OR BUFFER
*    UNITS FOR TRANSMISSION TO NCP CONNECTED TERMINALS.
*
*ENTRY POINTS:
*    THE FIRST INSTRUCTION -- VIA BRANCH FROM IEDQBD, OR ONE
*    OF THE FOLLOWING:  IEDAYA,IEDAYO,IEDAYS,IEDAYZ,IGG019Q1,IEDAYJ
*    THE PRIMARY QCB -- VIA POST FROM LINEEND APPENDAGE OR
*    DEBLOCK ROUTINES FOR SCREEN ERASURE.
*    THE ERB RETURN QCB -- VIA POST FROM IEDQGA WHEN REQUESTED
*    BUFFERS HAVE BEEN ALLOCATED.
*
*
*INPUT -- TSO MSGGEN TEXT TO BE TRANSMITTED.
*
*OUTPUT -- BUILT AND EDITED MESSAGE READY FOR CONTACT WITH
*    DESTINATION TERMINAL TO BE MADE.
*
*
*
*EXTERNAL ROUTINES
*   IEDQTNT - TO LOCATE THE TERMINAL ENTRY
*   IEDQAE - TO LOCATE A TRANSLATION TABLE OPTION FIELD FOR TRA
*   IEDAYE - TO EDIT THE MESSAGE
*   IEDQGA - TO GET A BUFFER
*
*EXITS-NORMAL -- TO THE DISPATCHER CHAIN FUNCTION
*
*EXITS-ERROR  -- NONE
*
*TABLES/WORKAREAS -- CVT, TSCVT, AVT, LCB, QCB, SCB, DCB, TSB,
*   TERMINAL ENTRY, TPRIOR, ERB, DCT, PRF, LGB.
*
*ATTRIBUTES -- REENTRANT, REFRESHABLE, ENABLED, RESIDENT, PROBLEM
*   PROGRAM MODE
*
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER
*   SET.
***************************************************************
         EJECT
R0       EQU   0                        REGISTER ZERO
R1       EQU   1                        REGISTER ONE
R2       EQU   2                        REGISTER TWO
RSCB     EQU   3                        SCB REGISTER
RLCB     EQU   4                        LCB REGISTER
R5       EQU   5                        REGISTER FIVE
R6       EQU   6                        REGISTER SIX
RQCB     EQU   7                        QCB REGISTER
R8       EQU   8                        REGISTER EIGHT
R9       EQU   9                        REGISTER NINE
R10      EQU   10                       REGISTER TEN
R11      EQU   11                       REGISTER ELEVEN        @OY13623
R12      EQU   12                       REGISTER TWELVE
R13      EQU   13                       REGISTER THIRTEEN
R14      EQU   14                       REGISTER FOURTEEN
R15      EQU   15                       REGISTER FIFTEEN
TIMEOUT  EQU   1                        TIMEOUT MASK
OFFSET   EQU   14                       DATA OFFSET
ZERO     EQU   C'0'                     ZERO
RESET    EQU   X'42'                    RESET DEVICE QUEUES
X01      EQU   X'01'                    ONE
X03      EQU   X'03'                    THREE
X04      EQU   X'04'                    FOUR
X05      EQU   X'05'                    FIVE
X07      EQU   X'07'                    SEVEN
X0C      EQU   X'0C'                    HEX 0C
XFE      EQU   X'FE'                    HEX FE
BLANK    EQU   C' '                     BLANK
ERASECOM EQU   X'05'                    3270 ERASE COMMAND
ASTERISK EQU   C'*'
NEWLINE  EQU   X'15'                    NEW LINE CHARACTER
IDLE     EQU   X'17'                    IDLE CHARACTER
ERASE    EQU   X'40'                    2260 REMOTE ERASE
ADDRCHAR EQU   X'20'                    ADDRESSING CHARACTERS
CCWWRITE EQU   X'01'                    WRITE OPERATION CODE
C3270    EQU   X'04'                    3270 TERMINAL
PROFILE2 EQU   X'22'                    FMTS PROFILE 2
SHFT2BYT EQU   16
FOURTEN  EQU   14
TWELVE   EQU   12
EIGHT8   EQU   8
SEVEN    EQU   7
FOUR     EQU   4
THREE    EQU   3
TWO      EQU   2
ONE      EQU   1
SIX      EQU   6                                               @ZM47758
         USING IEDAYM,R12
         USING IEDQSCB,RSCB
         USING IEDQLCB,RLCB
         USING AVTSAVE2,R13
         USING IEDQQCB,RQCB
         USING TSB,R6
         USING IEDQTRM,R9
         USING EDIT,R11                 SET UP ADDRESSABILITY  @OY13623
         EJECT
         L     R2,4(,R8)                ASSUME MASK NOT PRESENT
         B     AYM005                   BRANCH
         DC    AL1(DSPMCPL4),AL3(*-1)   STCB
         USING *,R15
         L     R12,AYMBFRQ              LOAD BASE ADDRESS
         DROP  R15
         L     R11,VEDIT                SET UP ADDRESSABILITY  @OY13623
         B     AYM0001
IEDAYM   IEDHJN ,
AYMBFRQ  DC    A(IEDAYM)                ADDR FOR RESTORING BASE
         DC    A(0)                     LINK FIELD
STCB3705 DC    X'06'                    STCB KEY
         DC    AL3(STCB3705)            STCB CHAIN POINTER
         L     R12,AVTEZERO(,RQCB)      SET UP BASE REG
         L     R11,VEDIT                SET UP ADDRESSABILITY  @OY13623
         LA    R1,AVTEZERO(,R1)         CLEAR HIGH ORDER BYTE
         L     RQCB,AVTMSGS-1           PTR TO LIST OF QCBS
         L     RQCB,AVTEZERO(,RQCB)     ADDR OF IEDQBD QCB
         LA    RLCB,AVTEZERO(,R1)       ADDRESS OF ERB
         SH    RLCB,LCBSIZE             GET ADDRES OF LCB
         TM    LCBERBST,LCBPRCPG        ERB FROM DEBLOCK AFTER
*                                       RESET
         BZ    AYM0002                  BRANCH YES
         NI    LCBERBST,AVTEFF-LCBPRCPG CLEAR REQUEST BIT
         L     RSCB,LCBSCBA-1           ADDRESS OF SCB
         L     R8,SCBSRCE+16            RESTORE PARAMETER LIST
*                                       ADDRESS
         L     R2,4(,R8)                ASSUME MASK NOT PRESENT
         MVC   T3270(2),AVTFZERO        INITIALIZE 3270 FIELD
         MVI   LOCSWTCH,0               CLEAR LOCAL SWITCHES   @YM06995
         SR    R1,R1                    CLEAR REGISTER
         B     AYM010                   BRANCH TO THE BEGINNING
         EJECT
AYM0001  EQU   *
         LA    RLCB,AVTEZERO(,R1)       ADDRESS OF ERB
         SH    RLCB,LCBSIZE             GET ADDRESS OF LCB
AYM0002  EQU   *
         MVC   T3270(2),AVTFZERO        INITIALIZE 3270 FIELD
         MVI   LOCSWTCH,0               CLEAR LOCAL SWITCHES   @YM06995
         XC    LCBERBLK,LCBERBLK        AVOID ERROR POST
         CLI   LCBTSTSW,AVTEFF          TERMINAL DISCONNECTED
         BNE   AYM0171                  BYPASS SENDING
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM0171  EQU   *
         L     RSCB,LCBSCBA-1           ADDRESS OF SCB
         L     R8,SCBMACR-1             ADDRESS OF MACRO LIST
         TM    SCBERR2,SCBCODER         TRANSLATION ERROR
         BO    AYM450                   BRANCH YES
         TM    SCBSTATE,SCBERSDS        DISPLAY TO BE ERASED
         BO    AYM300                   BRANCH TO ERASE ROUTINE
         NI    LCBTSOB,AVTEFF-LCBSATRD  RESET POST FLAG
         B     AYM015                   BRANCH
         EJECT
AYM005   EQU   *
         L     R11,VEDIT                SET UP ADDRESSABILITY  @OY13623
         ST    R8,SCBSRCE+16            SAVE ADDR OF PARM LIST
         XC    LCBERBCH,LCBERBCH        CLEAR BUFFER CHAIN
         MVC   T3270(2),AVTFZERO        INITIALIZE 3270 FIELD
         MVI   LOCSWTCH,0               CLEAR LOCAL SWITCHES   @YM06995
AYM010   EQU   *
         ST    R1,LCBERBLK-1            LINK ELEMENTS FOR POST
         CLI   LCBTSTSW,AVTEFF
         BE    AYM160                   BYPASS MSGGEN
         TM    SCBSTATE,SCBERSDS        DISPLAY TO BE ERASED
         BO    AYM300                   GO TO ERASE ROUTINE
         TM    SCBERR2,SCBCODER+SCBOLTR INVALID OLT REQUEST
*                                       AND DYNAMIC TRANSLATION
         BO    AYM160                   BRANCH YES
         TM    SCBERR2,SCBCODER         TRANSLATION ERROR
         BO    AYM400                   BRANCH ON YES
         NI    LCBTSOB,AVTEFF-LCBSATRD  RESET POST FLAG
         TM    1(R8),X0C                IS MASK PRESENT
         BC    9,AYM100                 BRANCH IF IT IS
         CLC   0(2,R2),X01FF            AUTO LINE OR PROMPT
         BNE   AYM110                   BRANCH ON NO
         LA    R6,IEDAYM                ADDRESS OF THIS ROUTINE
         NC    LCBERBLK,LCBERBLK        BUFFER ALREADY POSTED
         BZ    AYM015                   BRANCH ON NO
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
AYM160   EQU   *
         XC    SCBERR1(4),SCBERR1       CLEAR ERROR BYTES
         MVI   LCBSENS0,AVTEZERO        CLEAR SENSE ERRORS
         NI    SCBSTATE,AVTEFF-SCBCODE  NO TRANSLATE REQUEST
         LA    R5,X0100                 SET UP FOR BUFFER DISP
         STCM  R5,7,SCBMACR             REMAINING INMSG/OUTMSG
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
AYM015   EQU   *
         LH    R1,LCBLNENT              GET LINE ENTRY
         CLI   LCBFLAG1,LCBPLCB         3705 RESOURCE        @YM07750
         BE    USETTCIN                 USE TTCIN            @YM07750
         TM    LCBSTAT2,LCBDIAL         IS THIS A DIAL LINE
         BO    AYM017                   BRANCH IF YES
USETTCIN EQU   *                                             @YM07750
         LH    R1,LCBTTCIN              GET CONNECTED INDEX
AYM017   EQU   *
         N     R1,AVTCLRHI
         L     R15,AVTRNMPT             TERMINAL NAME ROUTINE
         BALR  R14,R15                  BRANCH TO ROUTINE
         LR    R9,R1                    SAVE TERM ENTRY ADDRESS
         L     RQCB,TRMDESTQ-1          GET QCB ADDRESS
         TM    AVTBIT3,AVTTSAB          TSO ABEND
         BO    AYM030X                  BRANCH YES
         TM    SCBERR2,SCBALN           AUTO LINE OR PROMPT
         BO    AYM030A                  BRANCH ON YES
AYM030X  EQU   *
         TM    LCBSTAT1,LCBSENDN        IS LINE SENDING
         BO    AYM0181                  RETURN ON YES
         TM    QCBRETCT,QCBCR+QCBLF     CARRIAGE RETURNED
         BO    AYM0181                  BRANCH YES
         TM    SCBERR2,SCBSOHE          IS THIS 3270 SOH%R MSG
         BO    AYM0181                  RETURN ON YES
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM030B                  BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBSATTN+SCBXPI+SCBXPD
*                                       ANY THING IN MASK
         BM    AYM100                   BRANCH IF YES
         TM    SCBERR1-SCBERRST+3(R8),SCBCUTFN  CUTOFF ERROR
         BO    AYM100                   BRANCH IF YES
         TM    SCBERR4-SCBERRST+3(R8),SCBTXTTN  TEXT ERROR
         BO    AYM100                   BRANCH IF YES
AYM030B  EQU   *
         TM    LCBSENS0,TIMEOUT         WAS THERE A TIME OUT
         BO    AYM0181                  BRANCH ON YES
         SR    R2,R2                    SET FOR LEFT ADJUST
         B     AYM110                   BRANCH
AYM030A  EQU   *
         L     R6,CVTPTR                GET CVT ADDRESS        @G36XRYP
         L     R6,CVTASVT-CVT(R6)       GET ASVT ADDRESS       @G36XRYP
         LA    R6,ASVTENTY-ASVT(R6)     GET ASCB LIST ADDRESS  @G36XRYP
         LH    R2,QCBTJID               GET ASID               @G36XRYP
         BCTR  R2,0                     DECREMENT FOR ZERO     @G36XRYP
*                                       ORIGIN                 @G36XRYP
         SLL   R2,2                     MULTIPLY BY 4          @G36XRYP
         L     R6,AVTEZERO(R2,R6)       GET ASCB ADDRESS       @G36XRYP
         L     R6,ASCBTSB-ASCB(R6)      GET TSB ADDRESS        @G36XRYP
         TM    TSBFLG2,TSBAUTOC         PROMPT REQUESTED
         BZ    AYM050                   BRANCH ON NO
         LA    R2,TSBAUTOS              ADDRESS OF MSG + LENGTH
         B     AYM110                   BRANCH
AYM050   EQU   *
         TM    TSBFLG2,TSBAULST         OR IS IT AUTO LINE NO
         BZ    AYM030X                  IF NEITHER GO BACK
         L     RQCB,TSBAUTOS            GET AUTO LINE NUMBER
         CVD   RQCB,AVTDOUBL            CONVERT TO DECIMAL
         UNPK  SCBDESTL+1(8),AVTDOUBL   UNPACK
         OI    SCBDESTL+8,ZERO          OR IN NUMBER ZONE
         LA    R2,SCBDESTL              ADDRESS OF NUMBER
         LA    RQCB,3                   SCAN THREE ZEROES
AYM060   EQU   *
         CLI   1(R2),ZERO               SCANNING FOR NUMBER OF
         BNE   AYM070                   BRANCH IF NOT ZERO
         LA    R2,1(,R2)                UPDATE TO NEXT BYTE
         BCT   RQCB,AYM060              CONTINUE
AYM070   EQU   *
         AH    RQCB,FIVE                COMPUTE LENGTH OF MSG
         STC   RQCB,AVTEZERO(,R2)       STORE LENGTH
         B     AYM110                   BRANCH
         EJECT
AYM100   EQU   *
         L     R2,8(,R8)                GET ADDRESS OF MESSAGE
AYM110   EQU   *
         L     R5,8(,R8)                ASSUME TRAN TABLE + NO
         CLC   0(2,8),X0100             END OF INMSG/OUTMSG
         BE    AYM150                   BRANCH ON YES
         TM    2(R8),AVTE80             TRANSLATION TABLE
         BO    AYM150                   BRANCH ON NO
         TM    1(R8),X0C                IS MASK PRESENT
         BM    AYM200                   BRANCH IF NOT
         L     R5,12(,R8)               GET TABLE ADDRESS
         B     AYM200                   BRANCH
AYM150   EQU   *
         CLI   LCBFLAG1,LCBPLCB         3705 RESOURCE?      @YM07750
         BE    AYM150A                  DON'T USE LCBLNENT  @YM07750
         TM    LCBSTAT2,LCBDIAL         IS THIS DIAL LINE
         BZ    AYM150A                  BRANCH ON NO
         MVC   LCBTTCIN(2),LCBLNENT     SET CONNECTED INDEX
AYM150A  EQU   *
         L     R5,LCBDCBPT              DCB ADDRESS
         L     R5,DCBTRANS-1-IHADCB(,R5) GET TRANSLATE TABLE
         TM    0(R5),AVTE80             IS IT A TRANSLIST MACRO
         BZ    AYM200                   BRANCH ON NO
         ST    R14,AVTPARM              SAVE REG
         LA    R1,AVTPARM3              ADDRESS OF PARM LIST
         MVC   AVTPARM3,AELIST          MOVE IN LIST
         MVC   AVTPARM3+2(1),1(R5)      OFFSET TO OPTION FIELD
         STM   2,12,28(R13)             SAVE AS IEDQUI DOES
         LA    R14,LOCRTN               SET RETURN ADDRESS
         ST    R14,12(,R13)             TO SAVE AREA
         L     R9,CVTPTR                SEQ TO FIND AVT ADDRESS
         L     R9,AVTCVTPT(,R9)         *
         L     R9,AVTEZERO(,R9)         *
         LR    R12,R13                  LOAD CALLERS ADDR
         LA    R13,72(,R13)             LOAD AE SAVE ADDR
         ST    R12,4(,R13)              STORE BACK CHAIN
         ST    R13,8(,R12)              STORE FORWARD CHAIN
         L     R12,AVTMSGS-1-AVTSVSIZ   AVT REG AT SAVE 3 NOW
         L     R12,20(,R12)             OFFSET TO IEDQAE VCON
         BR    R12                      GO TO LOCOPT
LOCRTN   EQU   *
         L     R14,AVTPARM              RETRIEVE REG
         L     R5,AVTEZERO(,R15)        ADDRESS OF OPTION FIELD
         LTR   R15,R15                  OPTION FIELD PRESENT
         BZ    AYM0181                  BRANCH ON NO
         LTR   R5,R5                    TRANSLATE TABLE STORED
         BZ    AYM0181                  BRANCH ON NO
         TM    SCBERR2,SCBCODER         TRANSLATION ERROR
         BNZ   AYM0181                  BRANCH YES
AYM200   EQU   *
         LA    R14,AYM225               EDIT RETURN ADDRESS
         LH    R1,LCBLNENT              GET LINE ENTRY
         CLI   LCBFLAG1,LCBPLCB         3705 RESOURCE?       @YM07750
         BE    USELCB                   USE LCBTTCIN         @YM07750
         TM    LCBSTAT2,LCBDIAL         IS THIS A DIAL LINE
         BO    AYM206                   BRANCH IF YES
USELCB   EQU   *                                             @YM07750
         LH    R1,LCBTTCIN              GET CONNECTED INDEX
AYM206   EQU   *
         N     R1,AVTCLRHI              CLEAR HIGH HALF
         L     R15,AVTRNMPT             ADDRESS OF NAME ROUTINE
         LR    R9,R14                   SAVE RETURN ADDRESS
         BALR  R14,R15                  BRANCH
         LR    R14,R9                   RESTORE RETURN ADDRESS
         LR    R9,R1                    SAVE TERM ENTRY ADDRESS
         L     RQCB,TRMDESTQ-1          ADDRESS OF QCB
         LA    R1,TRMPRFSZ              PICK UP PREFIX SIZE
         DROP  R9
         SR    R9,R1                    BACK UP TO PREFIX
         USING IEDNTRM,R9
         L     R15,AVTTSOPT             GET ADDR OF TSO QCB
*
*  MOVE THE DCT ENTRY FROM THE DCT TO THE TSO WORK AREA AND
*  SET THE DCT3270 BIT IF THE TTE IS AN LU TYPE 0,2, OR 3
*
   IEDDCT REG=R1,FLD=TSITSW-IEDQTSI+TSWDCT-IEDQTSW(R15),LEN=6
         DROP  R9
         LA    R9,TRMPRFSZ(,R9)         INCREMENT PAST PREFIX
         USING IEDQTRM,R9
         USING IEDDCT,R1                DCT ADDRESSABILITY
         MVC   T3270+ONE(1),DCTBYTE1    MOVE DCT BYTE WITH
*                                       3270 BIT
         TM    T3270+ONE,DCT3270        IS THIS A 3270 TERM
         BO    AYM306A1                 YES, SKIP 2260 CHECKS
         TM    DCTBYTE3,DCTNOIDL        THIS 2260 REMOTE
         BO    AYM306A1                 BRANCH ON YES
         TM    DCTBYTE2,DCTLOCAL        THIS 2260 LOCAL
         BNO   AYM306D1                 BRANCH ON NO
AYM306A1 EQU   *
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM306D1                 BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBXPI
         BNO   AYM306B1                 BRANCH ON NO
         LA    R2,DISPXPI               !I FOR DISPLAYS
         B     AYM306F1                 BRANCH
AYM306B1 EQU   *
         TM    SCBERR3-SCBERRST+3(R8),SCBXPD
         BNO   AYM306C1                 BRANCH ON NO
         LA    R2,DISPXPD               !D FOR DISPLAYS
         B     AYM306F1                 BRANCH
AYM306C1 EQU   *
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBSATTN
         BZ    AYM306D1                 BRANCH ON NO
         LA    R2,DISPATTN              ! FOR DISPLAYS
AYM306F1 EQU   *
         CLI   QCBCARCT,AVTEFF          CARRIAGE TO BE RETURNED
         BNE   AYM306D1                 BRANCH ON NO
         TM    DCTBYTE1,DCT3270         3270 TERMINAL
         BO    AYM306G1                 YES, BRANCH
         LA    R2,15(,R2)               POINT TO PROPER MESSAGE
AYM306G1 EQU   *
         MVI   QCBCARCT,AVTEZERO        RESET CARRIAGE COUNT
         NI    QCBRETCT,AVTEFF-QCBNL    RESET CARRIAGE FLAGS
AYM306D1 EQU   *
         SR    R0,R0                    CLEAR REGISTER
         IC    R0,AVTSCBSZ              SCB SIZE
         SH    R0,NOTUSED               UNUSABLE PART OF SCB
         DROP  R1
         LA    R1,SCBMBSSA              SCB DATA AREA ADDRESS
         TM    QCBTSOF2,QCBDSSMI        IS SMI BEING SENT
         BO    AYM2091                  BRANCH ON YES
         LTR   R2,R2                    ONLY LEFT ADJUST
         BZ    AYM2201                  BRANCH ON YES
         O     R1,JUSTIFY               LEFT JUSTIFICATION
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM306E1                 BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBXPI+SCBXPD
         BM    AYM209B1                 BRANCH ON YES
AYM306E1 EQU   *
         CLI   1(R2),XFE                NO LEFT ADJUST
         BNE   AYM2081                  BRANCH YES
         LA    R2,1(,R2)                SKIP FE FLAG
         B     AYM2101                  BRANCH
AYM2081  EQU   *
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM2201                  BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBXPI+SCBXPD
         BZ    AYM2201                  BRANCH ON NO
         B     AYM2101                  NO LEFT JUSTIFICATION
AYM2091  EQU   *
         CLI   1(R2),ASTERISK           SIMATTN PROMPT
         BE    AYM209A1                 BRANCH ON YES
         O     R1,NOJUST                NO JUSTIFICATION
         B     AYM2201                  BRANCH
AYM209A1 EQU   *
         O     R1,JUSTIFY               LEFT JUSTIFICATION
         B     AYM2201                  BRANCH
AYM209B1 EQU   *
         TM    T3270+1,DCT3270          IS IT A 3270           @G36XRYP
         BO    AYM209C1                 IS A 3270 TERMINAL
         MVI   QCBCARCT,120             PRESET FOR MAX IDLES
AYM209C1 EQU   *
         NI    QCBRETCT,AVTEFF-QCBNL    INDICATE NL/LF NOT SENT
AYM2101  EQU   *
         X     R1,LEAVE                 NO LEFT JUSTIFICATION
         NC    0(4,R5),0(R5)            EBCD TRANSLATE TABLE
         BZ    AYM2201                  BRANCH ON YES
         MVC   LCBCPA(1),1(R2)          MOVE BYTE TO WORK AREA
         L     R8,0(,R5)                GET ADDR OF TRANS TABLE
         TR    LCBCPA(1),0(R8)          TRANS TO LINE CODE
         TR    LCBCPA(1),4(R5)          TRANS TO EBCDIC
         CLC   LCBCPA(1),1(R2)          EQUAL TO ORIGINAL
         BE    AYM2201                  BRANCH IF THE SAME
         MVC   SCBDESTL+1(4),2(R2)      MSG TO WORK AREA
         IC    R2,AVTEZERO(,R2)         GET LENGTH OF MESSAGE
         BCTR  R2,0                     REDUCE BY ONE
         STC   R2,SCBDESTL              SET UP MESSAGE LENGTH
         LA    R2,SCBDESTL              ADDRESS OF MESSAGE
AYM2201  EQU   *
         TM    TRMSTATE,TRMPREF         IS THERE A PREFIX
         BO    NCPSNA                   BRANCH YES, NCP OR SNA
         LR    R8,R5                    SAVE TABLE ADDRESS
         TM    T3270+1,DCT3270          3270 DEVICE            @G36XRYP
         BNO   GOEDIT                   BRANCH NO
         O     R1,FRSTUNIT              SET FIRST MSGGEN
         B     EDIT3270                 EDIT 3270 DATA         @OY13623
AYM0181  EQU   *
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
AYM400   EQU   *
         L     R1,SCBDESTQ-1            DESTINATION OF MSG
         LA    R1,AVTEZERO(,R1)         ZERO HIGH-ORDER BYTE
         LA    R2,AVTBFRTB              BUFFER RETURN QUEUE
         CR    R1,R2                    BUFFER TO RETURN
         BE    AYM4001                  BRANCH ON NO
         XC    SCBERR1(4),SCBERR1       CLEAR ERROR BYTES
         MVI   LCBSENS0,AVTEZERO        CLEAR SENSE ERRORS
         NI    SCBSTATE,AVTEFF-SCBCODE  NO TRANSLATE REQUEST
         LA    R5,X0100                 SET UP FOR BUFFER DISP
         STCM  R5,7,SCBMACR             REMAINING INMSG/OUTMSG
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM4001  EQU   *
         L     R5,8(,R8)                ASSUME TABLE IN MACRO
         TM    2(R8),AVTE80             IS TRAN TABLE IN MACRO
         BZ    AYM1201                  BRANCH ON YES
         L     R5,LCBDCBPT              DCB ADDRESS
         L     R5,DCBTRANS-1-IHADCB(,R5) GET TRANLIST MACRO
         IC    R5,3(,R5)                NUMBER OF TABLES
         STC   R5,SCBMBSSA              SAVE COUNT
AYM450   EQU   *
         LH    R1,LCBLNENT              GET LINE ENTRY
         CLI   LCBFLAG1,LCBPLCB         3705 RESOURCE?       @YM07750
         BE    GETTCIN                  USE LCBTTCIN         @YM07750
         TM    LCBSTAT2,LCBDIAL         IS THIS DIAL LINE
         BO    AYM450A                  BRANCH ON YES
GETTCIN  EQU   *                                             @YM07750
         LH    R1,LCBTTCIN              GET CONNECTED INDEX
AYM450A  EQU   *
         TM    SCBMBSSA,X'F0'           WAS LAST MSG INCOMPLETE@OZ26884
         BZ    AYM450B                  NO                     @OZ26884
         LA    R6,SCBMBSSA+1            DATA MOVE DESTINATION  @OZ26884
         L     R5,LCBDCBPT              DCB ADDRESS            @OZ26884
         L     R5,DCBTRANS-1-IHADCB(,R5) GET TRANSLIST MACRO   @OZ26884
         SR    R2,R2                    CLEAR REG              @OZ26884
         IC    R2,SCBMBSSA              GET NUMBER             @OZ26884
         SLR   R2,4                         OF STRINGS LEFT    @OZ26884
         NI    SCBMBSSA,X'0F'           ERASE STRING COUNT     @OZ26884
         SR    R9,R9                    CLEAR REG              @OZ26884
         IC    R9,3(,R5)                GET NO. OF TABLES      @OZ26884
         SLL   R9,2                     MULTIPLY BY FOUR       @OZ26884
         LA    R8,4(R5,R9)              GET ADDRESS OF STRING  @OZ26884
         IC    R9,2(,R5)                GET TOTAL STRING COUNT @OZ26884
         SR    R1,R1                    CLEAR  REG             @OZ26884
SKIPCHAR IC    R1,AVTEZERO(R8,R1)       GET STRING LENGTH      @OZ26884
         LA    R8,1(R8,R1)              POINT TO NEXT STRING   @OZ26884
         BCT   R9,0                     REDUCE COUNT           @OZ26884
         CR    R9,R2                    IS THIS CORRECT STRING @OZ26884
         BH    SKIPCHAR                 NO                     @OZ26884
         LA    R9,X'11'                 DATA LENGTH TO MOVE    @OZ26884
         EX    R9,MOVE                  MOVE REST OF DATA STRIN@OZ26884
         SR    R1,R1                    CLEAR DATA COUNT       @OZ26884
         B     AYM460                   DECIDE WHERE TO PUT    @OZ26884
*                                       NL AND IDLES           @OZ26884
AYM450B  EQU   *                                               @OZ26884
         N     R1,AVTCLRHI              CLEAR HIGH HALF
         L     R15,AVTRNMPT             ADDRESS OF NAME ROUTINE
         BALR  R14,R15                  BRANCH AND LINK
         LR    R9,R1                    SAVE TERMINAL ENTRY
         L     RQCB,TRMDESTQ-1          ADDRESS OF QCB
         LA    R2,ENTER                 ADDRESS OF MSG TO SEND
         LA    R0,SCBTRANS-(SCBMBSSA+1) MAX SIZE MSGGEN IN SCB
         LA    R1,SCBMBSSA+1            LOCATION IN SCB
         O     R1,NOJUST                NO LEFT JUSTIFICATION
         L     R15,AVTTSOPT             TSO QCB ADDRESS
         L     R15,TSIEDIT-IEDQTSI(,R15) POINT TO IEDAYE
         BALR  R14,R15                  BRANCH TO AYE
         LA    R6,SCBMBSSA+1(R1)        DATA MOVE DESTINATION
         LA    R9,X'2E'                 SAVE ROOM FOR NL & IDLE@OZ26884
         SR    R9,R1                    CALCULATE SIZE OF DATA
         L     R5,LCBDCBPT              DCB ADDRESS
         L     R5,DCBTRANS-1-IHADCB(,R5) GET TRANLIST MACRO
         SR    R2,R2
         IC    R2,3(,R5)                GET NUMBER OF TABLES
         SLL   R2,2                     MULTIPLY BY FOUR
         LA    R8,4(R5,R2)              GET ADDRESS OF CHARS
         BCTR  R9,0                     REDUCE BY ONE
         EX    R9,MOVE                  MOVE CHARACTERS
         SR    R2,R2
         IC    R2,2(,R5)                GET NUMBER OF STRINGS
AYM460   EQU   *
         IC    R9,AVTEZERO(,R6)         LENGTH OF STRING
         MVI   0(R6),BLANK              OVERLAY NUMBER
         LA    R6,1(R6,R9)              UPDATE TO NEXT STRING
         LA    R1,1(R1,R9)              ADD LENGTH OF CHARACTER
         CLM   R1,1,TWOE                WAS DATA TRUNCATED     @OZ26884
         BNH   CKSTRNG                  NO, CONTINUE           @OZ26884
         SR    R1,R1                    CLEAR REG              @OZ26884
         IC    R1,SCBMBSSA              GET NO. TABLES LEFT    @OZ26884
         SLL   R2,4                     STR NO. IN HIGH ORDER  @OZ26884
         LA    R9,AVTEZERO(R1,R2)       COMBINE STR & TAB CNT  @OZ26884
         LR    R2,R1                    SAVE TABLE COUNT       @OZ26884
         LR    R1,R8                    GET LAST DATA LENGTH   @OZ26884
         SLL   R2,2                     SIZE OF EACH TABLE     @OZ26884
         LA    R8,AVTEZERO(R5,R2)       ADDRESS TABLE          @OZ26884
         B     AYM490                   SET UP TO RETURN       @OZ26884
CKSTRNG  LR    R8,R1                    SAVE DATA LENGTH       @OZ26884
         BCT   R2,AYM460                SEE IF MORE STRINGS    @OZ26884
         MVC   0(9,R6),NLIDLES          MOVE NL & IDLES        @OZ26884
         LA    R1,9(R1)                 AND COUNT THEM         @OZ26884
         IC    R2,SCBMBSSA              NUMBER OF TABLES LEFT
         LR    R9,R2
AYM465   EQU   *
         LR    R2,R9
         SLL   R2,2                     SIZE OF EACH TABLE
         LA    R8,AVTEZERO(R5,R2)       ADDRESS TABLE
         CLI   0(R8),X01                IS IT A 5041 LINE
         BL    AYM480                   BRANCH ON NO
         BH    AYM470                   BRANCH IF 1050
         TM    LCBTSOB,LCB2741N         IS IT A 2741
         BO    AYM480                   BRANCH  ON YES
         BCT   R9,AYM465                BRANCH IF MORE TABLES
         B     AYM475                   BRANCH IF NO MORE TABLE
AYM470   EQU   *
         TM    LCBTSOB,LCB2741N         IS IT A 1050
         BZ    AYM480                   BRANCH ON YES
         BCT   R9,AYM465                BRANCH IF MORE TABLES
AYM475   EQU   *
         STC   R9,SCBMBSSA              REINITIALIZE
         NI    LCBTSOB,AVTEFF-LCBSATRD  SET BIT TO POST TO BD
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM480   EQU   *
         BCT   R9,AYM490                BRANCH IF MORE TABLES
         NI    LCBTSOB,AVTEFF-LCBSATRD  SET BIT TO POST TO BD
         LA    R9,X0100                 ADDRESS INMSG/OUTMSG
         STCM  R9,7,SCBMACR             SET MACRO ADDRESS
         B     AYM495                   BRANCH
AYM490   EQU   *
         OI    LCBTSOB,LCBSATRD         SET BIT TO POST TO AYM
AYM495   EQU   *
         STC   R9,SCBMBSSA              RESET COUNT
         L     R8,AVTEZERO(,R8)         GET ADDRESS OF TABLE
         BCTR  R1,0                     REDUCE FOR EXECUTE
         LA    R8,AVTEZERO(,R8)         CLEAR HIGH BYTE
         LTR   R8,R8                    ADDR OF TRANS TABLE
         BZ    AYM496                   NO
         USING AYMTRAN,R8
         L     R8,TRANSLAT              ADDRESS OF OUTPUT TABLE
         LTR   R8,R8                    ADDR
         BZ    AYM496                   NO
         EX    R1,ERRTRANS              TRANSLATE
AYM496   EQU   *
         LA    R6,SCBMBSSA+1            ADDRESS OF MESSAGE
         ST    R6,LCBCPA                PUT ADDRESS IN CCW
         OI    LCBSTAT2,LCBMSGNN        SET MSGGEN FLAG
         MVI   LCBCPA,CCWWRITE          SET WRITE OP CODE
         LA    R1,1(,R1)                ADJUST COUNT
         ST    R1,LCBCPA+4              PUT LENGTH IN CCW
         LH    R6,LCBTTCIN              GET TERMINAL INDEX
         STH   R6,LCBTTBIN              SET FOR ACTIVATE
         SR    R6,R6                    CLEAR REGISTER
         STH   R6,LCBTTCIN              CLEAR CURRENT CONNECTED
         STH   R6,LCBTPCD               SET TP OP CODES
         MVI   LCBERBPY,PRIACTIV        PRIORITY
         TM    QCBFLAG,QCBTSSES         TSO SESSION IN PROGRESS
         BZ    AYM309A                  BRANCH IF NO
         OI    LCBTSOB,LCBTSBUF         SET TSO BUFFER
AYM309A  EQU   *
         LA    R6,AVTACTIB              I/O GENERATOR QCB
         ST    R6,LCBERBQB-1            FOR POST
         LA    R1,LCBERB                ELEMENT
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM1201  EQU   *
         TM    1(R8),X0C                IS MASK PRESENT
         BM    AYM2001                  BRANCH IF NOT
         L     R5,12(,R8)               TRANSLATE TABLE ADDRESS
AYM2001  EQU   *
         LA    R14,AYM225               EDIT RETURN ADDRESS
         LH    R1,LCBLNENT              GET LINE ENTRY
         TM    LCBSTAT2,LCBDIAL         IS THIS A DIAL LINE
         BO    AYM2061                  BRANCH IF YES
         LH    R1,LCBTTCIN              GET CONNECTED INDEX
AYM2061  EQU   *
         N     R1,AVTCLRHI              CLEAR HIGH HALF
         L     R15,AVTRNMPT             ADDRESS OF NAME ROUTINE
         LR    R9,R14                   SAVE RETURN ADDRESS
         BALR  R14,R15                  BRANCH
         LR    R14,R9                   RESTORE RETURN ADDRESS
         LR    R9,R1                    SAVE TERM ENTRY ADDRESS
         L     RQCB,TRMDESTQ-1          ADDRESS OF QCB
         LA    R1,TRMPRFSZ              PICK UP PREFIX SIZE
         DROP  R9
         SR    R9,R1                    BACK UP TO PREFIX
         USING IEDNTRM,R9
         L     R15,AVTTSOPT             GET ADDR OF TSO QCB
*
*  MOVE THE DCT ENTRY FROM THE DCT TO THE TSO WORK AREA AND
*  SET THE DCT3270 BIT IF THE TTE IS AN LU TYPE 0,2, OR 3
*
   IEDDCT REG=R1,FLD=TSITSW-IEDQTSI+TSWDCT-IEDQTSW(R15),LEN=6
         DROP  R9
         LA    R9,TRMPRFSZ(,R9)        INCREMENT PAST PREFIX
         USING IEDQTRM,R9
         USING IEDDCT,R1                DCT ADDRESSABILITY
         MVC   T3270+ONE(1),DCTBYTE1    MOVE DCT BYTE WITH
*                                       3270 BIT
         TM    T3270+ONE,DCT3270        IS THIS A 3270 TERM
         BO    AYM306A                  YES,SKIP 2260 CKS
         TM    DCTBYTE3,DCTNOIDL        THIS 2260 REMOTE
         BO    AYM306A                  BRANCH ON YES
         TM    DCTBYTE2,DCTLOCAL        THIS 2260 LOCAL
         BNO   AYM306D                  BRANCH ON NO
AYM306A  EQU   *
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM306D                  BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBXPI
         BNO   AYM306B                  BRANCH ON NO
         LA    R2,DISPXPI               !I FOR DISPLAYS
         B     AYM306F                  BRANCH
AYM306B  EQU   *
         TM    SCBERR3-SCBERRST+3(R8),SCBXPD
         BNO   AYM306C                  BRANCH ON NO
         LA    R2,DISPXPD               !D FOR DISPLAYS
         B     AYM306F                  BRANCH
AYM306C  EQU   *
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBSATTN
         BZ    AYM306D                  BRANCH ON NO
         LA    R2,DISPATTN              ! FOR DISPLAYS
AYM306F  EQU   *
         CLI   QCBCARCT,AVTEFF          CARRIAGE TO BE RETURNED
         BNE   AYM306D                  BRANCH ON NO
         TM    1(R1),C3270              IS THIS A 3270 TERMINAL
         BO    AYM306G                  YES, BRANCH
         LA    R2,15(,R2)               POINT TO PROPER MESSAGE
AYM306G  EQU   *
         MVI   QCBCARCT,AVTEZERO        RESET CARRIAGE COUNT
         NI    QCBRETCT,AVTEFF-QCBNL    RESET CARRIAGE FLAGS
AYM306D  EQU   *
         SR    R0,R0                    CLEAR REGISTER
         IC    R0,AVTSCBSZ              SCB SIZE
         SH    R0,NOTUSED               UNUSABLE PART OF SCB
         LA    R1,SCBMBSSA              SCB DATA AREA ADDRESS
         TM    QCBTSOF2,QCBDSSMI        IS SMI BEING SENT
         BO    AYM209                   BRANCH ON YES
         LTR   R2,R2                    LEFT ADJUST REQUESTED
         BZ    AYM220                   BRANCH ON YES
         O     R1,JUSTIFY               LEFT JUSTIFICATION
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM306E                  BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBXPI+SCBXPD
         BM    AYM209B                  BRANCH ON YES
AYM306E  EQU   *
         CLI   1(R2),XFE                NO LEFT ADJUST
         BNE   AYM208                   BRANCH YES
         LA    R2,1(,R2)                SKIP FE FLAG
         B     AYM210                   BRANCH
AYM208   EQU   *
         TM    0(R8),X01                IS MASK PRESENT
         BO    AYM220                   BRANCH ON NO
         TM    SCBERR3-SCBERRST+3(R8),SCBATTN+SCBXPI+SCBXPD
         BZ    AYM220                   BRANCH ON NO
         B     AYM210                   NO LEFT JUSTIFICATION
AYM209   EQU   *
         CLI   1(R2),ASTERISK           SIMATTN PROMPT
         BE    AYM209A                  BRANCH ON YES
         O     R1,NOJUST                NO JUSTIFICATION
         B     AYM220                   BRANCH
AYM209A  EQU   *
         O     R1,JUSTIFY               LEFT JUSTIFICATION
         B     AYM220                   BRANCH
AYM209B  EQU   *
         TM    T3270+1,DCT3270          IS IT A 3270           @G36XRYP
         BO    AYM209C                  IS A 3270 TERMINAL
         MVI   QCBCARCT,120             PRESET FOR MAX IDLES
AYM209C  EQU   *
         NI    QCBRETCT,AVTEFF-QCBNL    INDIC  NL/LF NOT SENT
AYM210   EQU   *
         X     R1,LEAVE                 NO LEFT JUSTIFICATION
         NC    0(4,R5),0(R5)            EBCD TRANSLATE TABLE
         BZ    AYM220                   BRANCH ON YES
         MVC   LCBCPA(1),1(R2)          MOVE BYTE TO WORK AREA
         L     R8,AVTEZERO(,R5)         GET ADDR OF TRANS TABLE
         TR    LCBCPA(1),0(R8)          TRANS TO LINE CODE
         TR    LCBCPA(1),4(R5)          TRANS TO EBCDIC
         CLC   LCBCPA(1),1(R2)          CHARACTERS EQUAL
         BE    AYM220                   BRANCH IF THE SAME
         MVC   SCBDESTL+1(4),2(R2)      MSG TO WORK AREA
         IC    R2,AVTEZERO(,R2)         GET LENGTH OF MESSAGE
         BCTR  R2,0                     REDUCE BY ONE
         STC   R2,SCBDESTL              SET UP MESSAGE LENGTH
         LA    R2,SCBDESTL              ADDRESS OF MESSAGE
AYM220   EQU   *
         TM    TRMSTATE,TRMPREF         IS TERMINAL VIA 3705
         BO    NCPSNA                   BRANCH YES
         LR    R8,R5                    SAVE TABLE ADDRESS
         TM    T3270+1,DCT3270          3270 DEVICE            @G36XRYP
         BNO   GOEDIT                   BRANCH NO
         O     R1,FRSTUNIT              SET FIRST MSGGEN
         B     EDIT3270                 EDIT 3270 DATA         @OY13623
         EJECT
AYM300   EQU   *
         LH    R1,LCBTTCIN              GET TERMINAL INDEX
         N     R1,AVTCLRHI              CLEAR HIGH ORDER BYTES
         L     R15,AVTRNMPT             TERMINAL NAME ROUTINE
         BALR  R14,R15                  LINK TO ROUTINE
         LR    R9,R1                    TERM ENTRY ADDRESS
         L     RQCB,TRMDESTQ-1          GET ADDRESS OF DEST QCB
         TM    TRMDEVFL,ADDRCHAR        ARE ADDR CHARS PRESENT
         BNO   AYM302                   BRANCH ON NO
         LA    R5,2                     NUMBER OF BITS TO CHECK
         LR    R2,R5                    SAME IN REG 2
         LA    R6,AVTE80                MASK FOR EXECUTED TM
AYM304   EQU   *
         EX    R6,TEST                  EXECUTE TEST UNDER MASK
         BO    AYM305                   BRANCH IF BIT ON
         BCTR  R5,0                     REDUCE BIT COUNT
AYM305   EQU   *
         SRL   R6,1                     SHIFT MASK RIGHT ONE
         BCT   R2,AYM304                BRANCH IF NOT ALL CHECK
         LA    R6,TRMOPNO               ADDRESS OF OPTIONS
         SR    R2,R2                    CLEAR REGISTER
         TM    TRMSTATE,TRMOPTFN        ARE OPTIONS PRESENT
         BNO   AYM301                   BRANCH ON NO
         IC    R2,TRMOPNO               NUMBER OF OPTIONS
         LA    R6,3(R2,R6)              BUMP PAST OPTION FIELD
AYM301   EQU   *
         LTR   R5,R5                    ANY BITS ON IN TRMDEVFL
         BZ    AYM307                   BRANCH ON NO
AYM306   EQU   *
         IC    R2,AVTEZERO(,R6)         FIELD LENGTH
         LA    R6,1(R2,R6)              BUMP PAST FIELD
         BCT   R5,AYM306                BRANCH IF MORE TO SKIP
AYM307   EQU   *
         LR    R2,R6                    SAVE ADDRESS
         CLI   0(R2),X03                IS NUMBER OF CHARS 3
         BE    AYM302                   YES, BRANCH
         CLI   0(R2),X05                IS NUMBER OF CHARS 5
         BE    AYM302                   YES, BRANCH
         CLI   0(R2),X04                IS NUMBER OF CHARS 4
         BNE   AYM1604                  NO, BRANCH
         CLI   4(R2),AVTEFF             CONTROL CHAR FOR 2260
         BE    AYM302                   YES, BRANCH
AYM1604  EQU   *
         XC    SCBERR1(4),SCBERR1       CLEAR ERROR BYTES
         MVI   LCBSENS0,AVTEZERO        CLEAR SENSE ERRORS
         NI    SCBSTATE,AVTEFF-SCBCODE  NO TRANSLATION
         LA    R5,X0100                 SET UP FOR BUFFER DISP
         STCM  R5,7,SCBMACR             REMAINING INMSG/OUTMSG
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM302   EQU   *
         LA    R1,TRMPRFSZ              PICK UP PREFIX SIZE
         DROP  R9
         SR    R9,R1                    BACK UP TO PREFIX
         USING IEDNTRM,R9
         L     R1,AVTTSOPT              GET ADDR OF TSO QCB
*
*  MOVE THE DCT ENTRY FROM THE DCT TO THE TSO WORK AREA AND
*  SET THE DCT3270 BIT IF THE TTE IS AN LU TYPE 0,2, OR 3
*
   IEDDCT REG=R5,FLD=TSITSW-IEDQTSI+TSWDCT-IEDQTSW(R1),LEN=6
         DROP  R9
         LA    R9,TRMPRFSZ(,R9)        INCREMENT PAST PREFIX
         USING IEDQTRM,R9
         USING IEDDCT,R5                DCT ADDRESSABILITY
         TM    DCTBYTE2,DCTLOCAL        IS IT A LOCAL DEVICE
         BO    AYM308                   BRANCH ON YES
         TM    DCTBYTE3,DCTNOIDL        IS IT 2260 REMOTE
         BNO   AYM310                   BRANCH ON NO
         MVC   SCBMBSSA(2),STXETX       MOVE MESSAGE TO SCB
         LA    R1,1                     SET UP COUNT
         OI    3(R2),ERASE              SET TO ERASE
         OI    LCBTSOB,LCBSATRD         SET POST TO AYM
         NI    SCBSTATE,AVTEFF-SCBERSDS RESET ERASE REQUEST
         B     AYM230                   SEND MESSAGE
AYM308   EQU   *
         LA    R6,SCBSRCE               GET DATA ADDRESS
         ST    R6,LCBCPA                STORE IN CCW
         TM    DCTBYTE1,DCT3270         IS THIS A 3270 TERMINAL
         BO    AYM308A                  YES, SET TO ERASE
         MVI   LCBCPA,X07               SET TO ERASE
AYM308B  EQU   *
         LA    R1,1                     SET COUNT
         ST    R1,LCBCPA+4              STORE IN CCW
         OI    LCBSTAT2,LCBMSGNN        SET MSGGEN
         OI    LCBTSOB,LCBSATRD         SET POST BACK TO AYM
         NI    SCBSTATE,AVTEFF-SCBERSDS RESET ERASE REQUEST
         B     AYM309                   BRANCH
AYM308A  EQU   *
         MVC   SCBMBSSA(1),ERASELOC     MOVE MESSAGE TO SCB
         LA    R6,SCBMBSSA              GET DATA ADDRESS
         ST    R6,LCBCPA                PUT ADDRESS IN CCW
         MVI   LCBCPA,ERASECOM          SET TO ERASE 3270 LOCAL
         OI    QCBRETCT,QCBIEND         SET QCBIEND ON FOR
*                                       SCREEN FORMAT ON OUTPUT
         B     AYM308B                  BRANCH TO COMPLETE
AYM310   EQU   *
         MVC   T3270(1),DCTBYTE1        MOVE 3270
         MVC   T3270+ONE(1),DCTBYTE1    INDICATORS
         TM    T3270,DCT3270            IS THIS A 3270 ERASE
         BO    AYM1609                  BRANCH YES
         XC    SCBERR1(4),SCBERR1       CLEAR ERROR BYTES
         MVI   LCBSENS0,AVTEZERO        CLEAR SENSE ERRORS
         NI    SCBSTATE,AVTEFF-SCBCODE  NO TRANSLATE REQUEST
         LA    R5,X0100                 SET UP FOR BUFFER DISP
         STCM  R5,7,SCBMACR             REMAINING INMSG/OUTMSG
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM1609  EQU   *
         TM    TRMSTATE,TRMPREF         IS TERMINAL VIA 3705
         BO    NCPSNA                   GO GET BUFFERS
         MVC   SCBMBSSA(5),ERASEREM     MOVE MESSAGE TO SCB
         LA    R1,5                     SET DATA COUNT
         DROP  R5
         L     R5,LCBDCBPT              GET DCB ADDR
         L     R5,DCBTRANS-1-IHADCB(,R5)  TRANSLATE TABLE
         OI    LCBTSOB,LCBSATRD
         NI    SCBSTATE,AVTEFF-SCBERSDS RESET ERASE REQUESTED
         OI    QCBRETCT,QCBIEND         SET QCBIEND ON
         LA    R5,AVTEZERO(,R5)         CLEAR HIGH BYTE
         LTR   R8,R5                    ADDR OF TRANS TABLE
         BZ    AYM230                   NO
         LTR   R1,R1                    ANYTHING TO TRANSLATE
         BZ    AYM0183                  BRANCH NO
         BCTR  R1,0                     REDUCE BY ONE
         USING AYMTRAN,R8
         L     R8,TRANSLAT              ADDRESS OUTPUT TABLE
         LTR   R8,R8                    ADDR
         BZ    AYM230                   NO
         EX    R1,AYMTRANS              TRANSLATE
AYM230   EQU   *
         LA    R6,SCBMBSSA
         ST    R6,LCBCPA                PUT ADDRESS IN CCW
         OI    LCBSTAT2,LCBMSGNN        SET MSGGEN FLAG
         MVI   LCBCPA,CCWWRITE          SET WRITE OP CODE
         LA    R1,1(,R1)                ADJUST COUNT
         ST    R1,LCBCPA+4              PUT LENGTH IN CCW
AYM309   EQU   *
         LH    R6,LCBTTCIN              GET TERMINAL INDEX
         STH   R6,LCBTTBIN              SET FOR ACTIVATE
         SR    R6,R6                    CLEAR REGISTER
         STH   R6,LCBTTCIN              CLEAR CURRENT CONNECTED
         STH   R6,LCBTPCD               SET TP OP CODES
         MVI   LCBERBPY,PRIACTIV        PRIORITY
         TM    QCBFLAG,QCBTSSES         TSO SESSION IN PROGRESS
         BZ    AYM309A4                 BRANCH IF NO
         OI    LCBTSOB,LCBTSBUF         SET TSO BUFFER
AYM309A4 EQU   *
         LA    R6,AVTACTIB              I/O GENERATOR QCB
         ST    R6,LCBERBQB-1            FOR POST
         LA    R1,LCBERB                ELEMENT
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM0183  EQU   *
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
EDIT3270 EQU   *                  @OY13623
         BAL   R14,SETGMAIN             INITIALIZE WORK AREA   @OY13623
         L     R15,AVTTSOPT             ADDR OF TIME SHARING   @OY13623
         L     R15,TSI3270-IEDQTSI(,R15) ADDR OF 3270 EDIT     @OY13623
         BALR  R14,R15                  GO TO IEDAYQ TO EDIT   @OY13623
         LR    R1,R15                   GET LENGTH OF DATA MOVE@OY13623
         SRL   R1,SHFT2BYT              GET LENGTH IN LOW HALF @OY13623
         B     AYM225                   CONTINUE NORMAL PROCESS@OY13623
         EJECT
GOEDIT   EQU   *                        BRANCH TO EDIT
         L     R15,AVTTSOPT             ADDRESS OF TIME SHARING
         L     R15,TSIEDIT-IEDQTSI(,R15) ADDRESS OF EDIT
         BALR  R14,R15                  BRANCH TO IEDAYE
AYM225   EQU   *
         LA    R5,AVTEZERO(,R5)         CLEAR HIGH BYTE
         LTR   R8,R5                    ADDRESS TRANSLATE TABLE
         BZ    AYM2303                  NO
         LTR   R1,R1                    ANYTHING TO TRANSLATE
         BZ    AYM0184                  BRANCH NO
         BCTR  R1,0                     REDUCE BY ONE
         USING AYMTRAN,R8
         L     R8,TRANSLAT              ADDRESS OUTPUT TABLE
         LTR   R8,R8                    ADDRESS PRESENT
         BZ    AYM2303                  NO
         EX    R1,AYMTRANS              TRANSLATE
AYM2303  EQU   *
         LA    R6,SCBMBSSA
         ST    R6,LCBCPA                PUT ADDRESS IN CCW
         OI    LCBSTAT2,LCBMSGNN        SET MSGGEN FLAG
         MVI   LCBCPA,CCWWRITE          SET WRITE OP CODE
         LA    R1,1(,R1)                ADJUST COUNT
         ST    R1,LCBCPA+4              PUT LENGTH IN CCW
         LH    R6,LCBTTCIN              GET TERMINAL INDEX
         STH   R6,LCBTTBIN              SET FOR ACTIVATE
         SR    R6,R6                    CLEAR REGISTER
         STH   R6,LCBTTCIN              CLEAR CURRENT CONNECTED
         STH   R6,LCBTPCD               SET TP OP CODES
         MVI   LCBERBPY,PRIACTIV        PRIORITY
         TM    QCBFLAG,QCBTSSES         TSO SESSION IN PROGRESS
         BZ    AYM309A3                 BRANCH IF NO
         OI    LCBTSOB,LCBTSBUF         SET TSO BUFFER
AYM309A3 EQU   *
         LA    R6,AVTACTIB              IO GENERATOR QCB
         ST    R6,LCBERBQB-1            FOR POST
         LA    R1,LCBERB                OF
         L     R11,AVTEA                GET DISPATCHER ADDR    @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
AYM0184  EQU   *
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
**************************************************************
*
*        TERMINALS ATTACHED VIA NCP AND SNA TERMINALS ARE
*        PROCESSED HERE. TRM ADDRESSABILITY IS SET UP TO
*        THE PREFIX.
*
**************************************************************
NCPSNA   EQU   *                        CHECK FOR ERASE OF LU
         DROP  R9                       RELEASE TRM REG
         LH    R1,LCBTTCIN              GET THE TTCIN
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF
         L     R15,AVTRNMPT             GET TNT CONVERT RTN
         BALR  R14,R15                  GET THE TERMINAL ADDR
         LR    R9,R1                    EST. ADDRESSABILITY
         LA    R1,TRMPRFSZ              GET PREFIX LENGTH
         SR    R9,R1                    BACKUP TO THE PREFIX
         USING IEDNTRM,R9               EST. ADDRESSABILITY
         TM    TRMBYTE0,TRMSNA          SNA RESOURCE?
         BO    TSOSNA                   YES,CHK SNA DEPENDENCY
         TM    TRMBYTE0,TRMDIAL         DIAL?
         BZ    NONDIAL                  DIAL FALL THRU
         TM    TRMPRE1,TRMSESSN         IN NCP SESSION?
         BZ    AYM160A                  CAN'T SEND MSGGEN
NONDIAL  EQU   *
         TM    TRMPRE1,TRMOCNI          STOP IN PROGRESS       @OY15597
         BZ    CHKSTPND                 BR NO                  @OY15597
         TM    TRMPRE,TRMSTMM           STOPLINE,I             @OY15597
         BO    AYM160A                  BR YES                 @OY15597
CHKSTPND EQU   *                                               @OY15597
         TM    TRMPRE,TRMSTPND          IS STATUS PENDING
         BO    AYM160A                  BRANCH YES
         CLI   TRMTYPE,TRMCLUST         IF A CLUSTER
         BE    AYM160A                  DON'T SEND THE MSGGEN
         B     CKBFR                    SEND MSGGEN
TSOSNA   EQU   *
         USING IEDGENDS,R8                                     @YM06037
         L     R1,4(R8)                 ASSUME NO MASK         @YM06037
*                                       GET MESSAGE ADDRESS    @YM06037
         TM    GENFLAGS,GENNOMSG        WAS MSG DATA CODED     @YM06037
         BZ    HAVEMSG                  BRANCH MSG CODED       @YM06037
         OI    LOCSWTCH,GENNOMSG        SET LOCAL NOMSG SWITCH @YM06037
HAVEMSG  EQU   *                                               @YM06037
         TM    GENLNGTH,TWELVE          WAS A MASK CODED       @YM06995
         BZ    CKSES                    SEND MSGGEN            @YM06995
         BM    HAVEDATA                 DATA WAS               @YM06635
         L     R1,8(R8)                 GET MESSAGE ADDRESS    @YM06635
HAVEDATA EQU   *                                               @YM06635
         CLC   0(L'X01FF,R1),X01FF      THIS LAST MSGGEN       @YM06635
         BNE   CKSES                    BRANCH NOT LAST        @YM06635
         TM    AVTBIT3,AVTTSAB          IS TSO ABENDING        @YM06635
         BO    CKSES                    BRANCH YES CK SESSION  @YM06635
         TM    QCBFLAG,QCBTSSES         IS TERM IN TSO SESSION @YM06635
         BZ    CKSES                    BRANCH NO CK SESSION   @YM06635
         TM    T3270,DCT3270            3270 ERASE             @OY16109
         BO    CKSES                    BR YES                 @OY16109
         L     R1,CVTPTR                GET CVT ADDRESS        @G36XRYP
         L     R1,CVTASVT-CVT(R1)       GET ASVT ADDRESS       @G36XRYP
         LA    R1,ASVTENTY-ASVT(R1)     GET ASCB LIST ADDRESS  @G36XRYP
         LH    R14,QCBTJID              GET ASID               @G36XRYP
         BCTR  R14,0                    DECREMENT FOR ZERO     @G36XRYP
*                                       ORIGIN                 @G36XRYP
         SLL   R14,2                    MULTIPLY BY 4          @G36XRYP
         L     R1,AVTEZERO(R1,R14)      GET ASCB ADDRESS       @G36XRYP
         L     R14,ASCBTSB-ASCB(R1)     GET TSB ADDRESS        @G36XRYP
         TM    TSBFLG2-TSB(R14),TSBBRKIN  IS THIS INPUT FROM   @YM06635
*                                       A BREAKIN              @YM06635
         BO    AYM160A                  YES DON'T SEND NEW LINE@YM06635
*                                       UNTIL TPUT BRK DATA    @YM06635
*                                       IS SENT                @YM06635
CKSES    EQU   *                                               @YM06635
         SR    R1,R1                    CLEAR
         ICM   R1,7,TRMSIBPT            GET THE SIB POINTER
         LTR   R1,R1                    SIB POINTER?
         BZ    AYM160A                  NO, GET OUT
         TM    SIBSESSN-IEDSIBD(R1),SIBDAPND+SIBDRPND DATA TRAFFIC
*                                       ACTIVE?
         BO    CKBFR                    SEND MSGGEN
AYM160A  EQU   *
         XC    SCBERR1(4),SCBERR1       CLEAR ERROR BYTES
         MVI   LCBSENS0,AVTEZERO        CLEAR SENSE ERRORS
         NI    SCBSTATE,AVTEFF-SCBCODE  NO TRANSLATE REQUEST
         LA    R5,X0100                 SET UP FOR BUFFER DISP
         STCM  R5,7,SCBMACR             REMAINING INMSG/OUTMSG
         L     R6,AVTMSGS-1             GET ADDRESS
         L     R6,AVTEZERO(,R6)         IEDQBD
         MVI   LCBERBPY,PRIRCQCB        PRIORITY
         ST    R6,LCBERBQB-1            QCB ADDRESS
         LA    R1,LCBERB                ELEMENT TO POST
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
CKBFR    EQU   *
         NC    LCBERBCH,LCBERBCH        BUFFER ASSIGNED?
         BNZ   RCVDBFR                  YES, GO SEND MSGGEN
         BAL   R14,GETBFR               GO GET A BUFFER
         STCM  R15,SEVEN,LCBERBCH       PUT BFR REC'D ON CHAIN
*                                       ERROR LOCK TO IEDQNKA
**************************************************************
*
*        USE THE UNITS ON THE ERB CHAIN TO SEND THE MSGGEN
*
**************************************************************
RCVDBFR  EQU   *
         ICM   R10,SEVEN,LCBERBCH       GET ADDRESS OF FIRST
*                                       UNIT OF BUFFER
*                                       FOR NIR GENERATOR
         USING IEDQPRF,R10              BFR ADDRESSABILITY
         BAL   R14,BLDPRF               GO BUILD BUFFER PREFIX
         USING IEDNSVTD,R8              SAVT ADDRESSABILITY
         L     R8,AVTSAVTP              GET THE ADDRESS OF THE
*                                       SECONDARY AVT
         MVC   LCBERBQB(THREE),SAVTDNIR+ONE  SET QCB ADDRESS
*                                       TO DATA NIR GENERATOR
         MVI   LCBERBPY,PRIOUTBD        SET POST PRIORITY
         TM    LOCSWTCH,GENNOMSG        IS THIS A RH ONLY      @YM06995
*                                       MSGGEN                 @YM06995
         BZ    CKERSE                   NO CK FOR ERASE        @YM06995
**************************************************************
*
*        PROCESS A MSSGEN THAT HAD ONLY A RH CODED.
*        FOR SNA 3270 NULL RU CANNOT BE SENT, SEND A WRITE
*        NULL.
*
**************************************************************
         TM    TRMBYTE0,TRMSNA          IS THIS SNA TERMINAL   @YM06995
         BZ    CKERSE                   NO CK FOR ERASE        @YM06995
         TM    T3270+ONE,DCT3270        IS THIS SNA 3270       @YM06995
         BNO   EDIT                     EDIT                   @YM06995
         MVC   PRFSHDR(TWO),WRNUL       MOVE WRITE COMMAND     @YM06995
         LA    R15,TWO                  INDICATE TWO BYTES OF  @YM06995
*                                       TEXT MOVED             @YM06995
         B     ALLUSED                                         @YM06995
CKERSE   EQU   *                                               @YM06995
         TM    T3270,DCT3270            IS THIS A 3270 ERASE
         BNO   EDIT                     NO,GO TO TSO OUTPUT
*                                       EDIT
**************************************************************
*
*        MOVE THE PROPER ERASE COMMAND SEQUENCE TO THE
*        BUFFER
*
**************************************************************
         MVC   PRFSHDR(THREE),ERAS3270  MOVE ERASE COMMAND TO
*                                       BUFFER
         LA    R15,THREE                INDICATE THREE BYTES
*                                       OF TEXT MOVED
         OI    QCBRETCT,QCBIEND         INDICATE THAT THE
*                                       SCREEN REQUIRES
*                                       FORMATTING BEFORE NEXT
*                                       OUTPUT
         OI    LCBTSOB,LCBSATRD         INDICATE SIMATTN READ
*                                       IN PROGRESS SO DEBLOCK
*                                       WILL POST ERB BACK TO
*                                       IEDAYM TO SEND THE
*                                       MSGGEN AFTER THE ERASE
         NI    SCBSTATE,AVTEFF-SCBERSDS  INDICATE ERASE NO
*                                       LONGER REQUIRED
         B     ALLUSED                  GO POST ERASE BUFFER
*                                       TO DATA NIR GENERATOR
VEDIT    DC    A(EDIT)                  EDIT SUBROUTINE        @OY13623
         EJECT
**************************************************************
*
*        USE THE TSO OUTPUT EDITOR TO EDIT THE MSGGEN A UNIT
*        AT A TIME. CONTINUE EDITING UNTIL ALL OF THE MSGGEN
*        HAS BEEN EDITED (RETURN CODE= 0, TOTAL COUNT OF TEXT
*        MOVED IN THE HI-ORDER 2 BYTES OF REG 15.
*
**************************************************************
EDIT     EQU   *
         TM    T3270+ONE,DCT3270        IS THIS 3270           @OY13623
         BO    EDITBFR                  EDIT ENTIRE BFR        @OY13623
         LA    R1,PRFSHDR               GET THE ADDRESS TO
*                                       THE TEXT IN THE FIRST
*                                       UNIT
         O     R1,FRSTUNIT              INDICATE TO TSO OUTPUT
*                                       EDIT THIS FIRST UNIT
         MVI   PRFNBUNT,ONE             SET UNIT COUNT TO ONE
EDITLOOP EQU   *                        CONTINUE EDIT
         SR    R0,R0                    INDICATE TO TSO OUTPUT
*                                       BUFFER IS TO BE USED
         L     R15,AVTTSOPT             GET ADDRESS OF TSINPUT
*                                       QCB
         USING IEDQTSI,R15              TSINPUT QCB
*                                       ADDRESSABILITY
         L     R15,TSIEDIT              GET ADDRESS OF TSO
*                                       OUTPUT EDIT
         BALR  R14,R15                  GO EDIT THE TEXT
**************************************************************
*
*        RETURN FROM THE TSO OUTPUT EDITOR
* REG 15 **************************************************
*        *  TOTAL COUNT         *       RETURN            *
*        *  DATA MOVED          *        CODE             *
*        **************************************************
* RETURN CODE    0 = EDIT COMPLETE
*             X'C' = GET ANOTHER UNIT FOR EDIT
**************************************************************
         CLM   R15,THREE,AVTFZERO       WAS EDIT COMPLETED
         BE    FREEUNIT                 YES,GO FREE ANY UNUSED
*                                       UNITS AND POST TO DATA
*                                       NIR GENERATOR
         EJECT
**************************************************************
*
*        GET THE ADDRESS OF THE NEXT UNIT TO BE EDITED,
*        SAVE IT AS THE CURRENT UNIT BEING EDITED, AND
*        INCREMENT PRFNBUNT TO INDICATE THE CURRENT NUMBER
*        OF UNITS IN THE MSGGEN BUFFER,THEN RETURN TO CONTINUE
*        EDITING.
*
**************************************************************
NEXTUNIT EQU   *                        GET NEXT UNIT TO EDIT
         L     R10,SCBSRCE+TWELVE       GET CURRENT UNIT ADDR
         ICM   R10,SEVEN,PRFTI0         GET ADDR OF NEXT UNIT
         STCM  R10,SEVEN,SCBSRCE+TWELVE UPDATE CURRENT UNIT
*                                       ADDRESS
         LA    R1,PRFSUNIT              GET ADDRESS FOR TSO
*                                       OUTPUT EDIT TO MOVE
*                                       TEXT FOR SUBSEQUENT
*                                       UNITS
         L     R10,SCBSRCE+EIGHT8       GET ADDR OF FIRST UNIT
         SR    R8,R8                    CLEAR FOR IC
         IC    R8,PRFNBUNT              GET CURRENT UNIT COUNT
         LA    R8,ONE(R8)               INCREMENT CURRENT UNIT
         STC   R8,PRFNBUNT              UPDATE CURRENT COUNT
*                                       OF UNITS IN BUFFER
         B     EDITLOOP                 CONTINUE EDITING
         EJECT
EDITBFR  EQU   *                                               @OY13623
         BAL   R14,SETGMAIN             SET UP WORK AREA       @OY13623
         LA    R1,PRFSHDR               ADDR OF WHERE TO MOVE  @OY13623
         SR    R0,R0                    PARM FOR EDIT          @OY13623
         L     R15,AVTTSOPT             ADDR OF TIME SHARING   @OY13623
         L     R15,TSI3270-IEDQTSI(,R15)  ADDR OF 3270 EDIT    @OY13623
         BALR  R14,R15                  GO TO IEDAYQ           @OY13623
         LR    R1,R15                   SAVE DATA MOVE COUNT   @OY13623
         SRL   R1,SHFT2BYT              MOVE DATA COUNT TO LOW @OY13623
         LA    R1,AVTHDRSZ(,R1)         ADD PREFIX SIZE TO CNT @OY13623
         LH    R10,AVTKEYLE             GET UNIT SIZE          @OY13623
         SR    R0,R0                    CLEAR FOR DIVIDE       @OY13623
         DR    R0,R10                   UNITS USED             @OY13623
         LTR   R0,R0                    IS THERE A REMAINDER   @OY13623
         BZ    UNITCNT                  NO, BRANCH             @OY13623
         LA    R1,ONE(,R1)              ADD UNIT FOR REMAINDER @OY13623
         SPACE
UNITCNT  EQU   *                                               @OY13623
         L     R10,SCBSRCE+EIGHT8       GET ADDRESS OF FIRST
*                                       UNIT OF MSGGEN         @OY13623
         STC   R1,PRFNBUNT              SAVE NUMBER OF UNITS   @OY13623
         LA    R10,SCBSRCE              SET UP FOR LOOP        @OY13623
         SPACE
FINDLAST EQU   *                                               @OY13623
         L     R10,PRFTIC               GET NEXT UNIT          @OY13623
         BCT   R1,FINDLAST              GET TO LAST UNIT       @OY13623
         ST    R10,SCBSRCE+TWELVE       SAVE CURRENT UNIT      @OY13623
         EJECT
**************************************************************
*
*        FREE ANY UNITS NOT USED DURING THE EDITING AND
*        EXIT TO DSPCHAIN TO POST THE CHAIN OF ELEMENTS
*        ON LCBERBLK.
*
**************************************************************
FREEUNIT EQU   *                        FREE ANY UNUSED UNITS
         SRL   R15,SHFT2BYT             MOVE DATA COUNT TO LOW
*                                       ORDER TWO BYTES
         L     R10,SCBSRCE+TWELVE       GET CURRENT UNIT ADDR
         CLC   PRFTIC,TIC               WERE ALL UNITS USED
         BE    ALLUSED                  YES, NO UNITS TO FREE
         ICM   R1,SEVEN,LCBERBLK        GET CHAIN OF ELEMENTS
         MVC   LCBERBLK,PRFTI0          CHAIN IN UNITS TO BE
*                                       FREED FOR DSPCHAIN
         MVC   PRFTIC,TIC               PUT INVALID TIC IN
*                                       LAST MSGGEN UNIT
         ICM   R10,SEVEN,LCBERBLK       GET ADDR OF FIRST UNIT
*                                       TO BE FREED
         MVI   PRFNBUNT,AVTEZERO        CLEAR FOR BUFFER RETURN
         LA    R5,AVTBFRTB              ADDR BUFFER RETURN QCB
         STCM  R5,SEVEN,PRFQCBA         SET QCB ADDRESS TO
*                                       BUFFER RETURN QCB
         MVI   PRFPRI,PRIBFRTB          SET POST PRIORITY
         STCM  R1,SEVEN,PRFLINK         LINK IN CHAIN OF
*                                       ELEMENTS FOR DSPCHAIN
ALLUSED  EQU   *                        COMPLETE PREFIX
         LA    R1,LCBERB                GET ADDRESS OF ERB FOR
*                                       POST TO NIR GENERATOR
         LA    R15,AVTHDRSZ(R15)        ADD PREFIX SIZE TO
*                                       LENGTH OF TEXT MOVED
         L     R10,SCBSRCE+EIGHT8       GET ADDRESS OF FIRST
*                                       UNIT OF MSGGEN
         STH   R15,PRFSIZE              SET PRFSIZE
         LA    R14,AVTHDRSZ             GET HDR PREFIX SIZE
         TM    LCBSTAT5,LCBLUNIT        IS THIS A LU           @YM06037
         BZ    CKLEN                    NO DONT SEND ZERO      @YM06037
*                                       LENGTH MSGGEN          @YM06037
         TM    LOCSWTCH,GENNOMSG        IS THIS RH ONLY MSGGEN @YM06037
         BO    SNDNUL                   YES, SEND NULL RU      @YM06037
CKLEN    EQU   *                                               @YM06037
         CR    R14,R15                  WAS MSGGEN EDITED
         BE    NOMSGGEN                 NO, NO   MSGGEN
SNDNUL   EQU   *                                               @YM06037
         MVI   LCBISZE,AVTEZERO         INDICATE NO RESERVES
         TM    LCBSTAT5,LCBLUNIT        LU?
         BNO   NOIBUMP                  BRANCH NO
         TM    T3270+ONE,DCT3270        3270 COMPATIBLE
         BNO   NOIBUMP                  BRANCH NO
         LA    R14,1                    SET IDLE COUNT TO 1
         STC   R14,LCBISZE              BUMP PAST ESCAPE
NOIBUMP  EQU   *
         OI    LCBSTAT2,LCBMSGNN        SET MSGGEN FLAG
         TM    QCBFLAG,QCBTSSES         TERMINAL IN TSO SESSION
         BZ    EXIT                     NO, BRANCH
         OI    LCBTSOB,LCBTSBUF         INDICATE TSO ON LINE
EXIT     EQU   *
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
*                                       FREE UNUSED UNITS AND
*                                       POST MSGGEN BUFFER TO
*                                       DATA NIR GENERATOR
NOMSGGEN EQU   *                        NO MSGGEN, FREE UNITS
         CLM   R10,SEVEN,LCBERBLK       CURRENT UNIT ON RETURN @OY20502
         BE    ERBLKOK                  NO NEED TO SWAP        @OY20502
         CLC   LCBERBLK(THREE),AVTFZERO CHAIN UNITS TO CURRENT @OY20502
         BE    RETOK                    NO UNITS TO CHAIN      @OY20502
         MVC   PRFTI0,LCBERBLK          CHAIN UNITS TO CURRENT @OY20502
RETOK    EQU   *                                               @OY20502
         STCM  R10,SEVEN,LCBERBLK       ADDR OF UNIT TO FREE   @OY20502
         MVI   PRFNBUNT,AVTEZERO        CLEAR FOR BUFFER RETURN@OY20502
         MVI   PRFPRI,PRIBFRTB          SET POST PRIORITY      @OY20502
         LA    R5,AVTBFRTB              ADDR BUFFER RETURN QCB @OY20502
         STCM  R5,SEVEN,PRFQCBA         SET QCB ADDRESS IN BUFF@OY20502
ERBLKOK  EQU   *                                               @OY20502
         LA    R1,LCBERB                GET ADDRESS OF ERB FOR
*                                       POST
         L     R14,AVTMSGS-ONE          GET BUFFER DISPOSITION
         L     R14,AVTEZERO(,R14)       ADDRESS
         STCM  R14,SEVEN,LCBERBQB       SET ERB QCB TO QBD
         MVI   LCBERBPY,PRIRCQCB        POST PRIORITY
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         EJECT
**************************************************************
*
*        THIS SUBROUTINE  IS EXECUTED FOR THE FIRST UNIT OF
*        EVERY MSGGEN. THE TCAM BUFFER PREFIX IS BUILT WITH
*        THE FIELDS REQUIRED BY BOTH THE CONTROL NIR
*        GENERATOR AND THE DATA NIR GENERATOR. OTHER FIELDS
*        ARE FILLED IN LATER.
*
**************************************************************
BLDPRF   EQU   *                        BUILD TCAM PREFIX
         ST    R10,SCBSRCE+EIGHT8       SAVE THE BEGINNING
*                                       OF BUFFER ADDRESS
         ST    R10,SCBSRCE+TWELVE       SAVE THE ADDRESS OF
*                                       CURRENT UNIT
         STCM  RLCB,SEVEN,PRFLCB        PUT PLCB ADDR IN PRF
         LH    R1,LCBTTCIN              GET TNT INDEX
         STH   R1,PRFDEST               SET THE DESTINATION
         NI    PRFSTAT1,AVTEFF-PRFNLSTN-PRFNHDRN MAKE BUFFER
*                                       HEADER/LAST
         MVI   PRFNBUNT,ONE             SET UNIT COUNT = ONE
         TM    TRMBYTE0,TRMSNA          IS IT A SNA TERMINAL
         BZ    RETURN                   NO, RETURN
         LA    R1,PRF2LEN               GET LENGTH OF PREFIX
         LR    R5,R10                   GET BFR ADDRESS
         SR    R5,R1                    BACK UP TO PREFIX
         USING IEDPF1,R5                PREFIX ADDRESSABILITY
         XC    IEDPF1(PRF2LEN),IEDPF1   CLEAR PREFIX
         L     R1,TRMSIBPT-1            GET ADDRESS OF THE SIB
         TM    QCBFLAG,QCBTSSES         TERMINAL IN TSO SESSION
         BO    NOBREQ                   BRANCH YES
         USING IEDSIBD,R1               SIB ADDRESSABILITY
         TM    SIBSTAT1,SIBINB          IN BRACKET STATE
         BZ    NOBREQ                   NO END BRACKET REQUIRED
         OI    PRF1RH+(TRHBYTE2-IEDRH),TRHEB  INDICATE END BKT
NOBREQ   EQU   *
         DROP  R1
         USING IEDGENDS,R8
         TM    GENFLAGS,GENRHINC        IS THERE A RH
         BZ    RETURN                   NO, USE TSO DEFAULT
         SR    R1,R1                    CLEAR FOR IC
         IC    R1,GENLNGTH              GET LENGTH OF PARAMETR
*                                       LIST
         SRL   R1,2                     SHIFT OUT FLAG BITS
         SLL   R1,2                     SHIFT BACK TO LENGTH
         SH    R1,AVTHA4                BACK UP TO RH PTR LENGTH
         L     R1,0(R1,R8)              GET RH ADDRESS
         MVC   PRF1RH(TRH1LEN),0(R1)    MOVE RH TO NEGATIVE
*                                       BUFFER PREFIX
         DROP  R8
         DROP  R5
RETURN   EQU   *
         BR    R14                      RETURN TO CALLER
         EJECT
**************************************************************
*
*        COMPUTE THE NUMBER OF UNITS REQUIRED TO CONTAIN THE
*        EDITED MSGGEN AND A RESET ERROR LOCK IF REQUIRED.
*        USE THE BUFFER STEAL ROUTINE TO TRY TO OBTAIN ONE
*        BUFFER OF THE REQUIRED NUMBER OF UNITS.  IF THIS IS
*        UNSUCCESSFUL POST THE ERB TO REQUEST ONE BUFFER OF
*        OF THE REQUIRED NUMBER OF UNITS. WHEN ERB REQUEST
*        IS SATISFIED THE ERB IS POSTED BACK TO A QCB
*        (AYMBFRQ).
*
**************************************************************
GETBFR   EQU   *                        GET BFR FOR MSGGEN
         LA    R1,ONE                   ASSUME 3270 ERASE
         TM    T3270,DCT3270            IS THIS A 3270 ERASE
         BO    STEALBFR                 YES,REQUEST ONE UNIT
         SR    R1,R1                    CLEAR FOR IC
         LTR   R2,R2                    LEFT JUSTIFY REQUIRED
         BZ    TEST3270                 BRANCH YES
         IC    R1,AVTEZERO(,R2)         GET LENGTH OF MSGGEN
*                                       FROM MACRO EXPANSION
TEST3270 EQU   *
         TM    T3270+ONE,DCT3270        IS THIS A 3270 TERMINAL
         BZ    NOT3270                  NO,BRANCH
         LA    R1,FOURTEN(R1)           INCREMENT LENGTH BY
*                                       MAX NUMBER OF BYTES
*                                       TSO OUTPUT EDIT WILL
*                                       INSERT
         B     CONCOMP                  CONTINUE COMPUTATION
NOT3270  EQU   *
         LA    R1,FOUR(R1)              INCREMENT LENGTH BY
*                                       MAX NUMBER OF BYTES
*                                       TSO OUTPUT EDIT WILL
*                                       INSERT
CONCOMP  EQU   *                        CONTINUE COMPUTATION
         LA    R1,AVTHDRSZ(R1)          ADD HEADER PREFIX SIZE
         LH    R10,AVTKEYLE             GET UNIT SIZE
         SR    R0,R0                    CLEAR FOR DIVIDE
         DR    R0,R10                   DIVIDE TOTAL NUMBER OF
*                                       BYTES BY THE UNIT SIZE
         LTR   R0,R0                    IS THERE A REMAINDER
         BZ    STEALBFR                 NO,BRANCH
         LA    R1,ONE(R1)               ADD ONE UNIT FOR REMAINDER
STEALBFR EQU   *
         LR    R0,R1                    UNIT COUNT FOR BUFFER
*                                       STEAL ROUTINE
         LA    R1,ONE                   ONE BFR COUNT FOR
*                                       BUFFER STEAL ROUTINE
         LR    R10,R14                  SAVE MAINLINE ADDRESS
         L     R15,AVTSTEAL             ENTRY POINT ADDRESS
         BALR  R14,R15                  GO TO BUFFER STEAL
         EJECT
**************************************************************
*
*        RETURN FROM BUFFER STEAL
*        REG 15          0=BUFFER NOT AVAILABLE
*                    NOT 0=ADDRESS OF BUFFER
*
**************************************************************
         LR    R14,R10                  RESTORE MAINLINE
*                                       RETURN ADDRESS
         LTR   R15,R15                  BFR STEAL SUCCESSFUL
         BNZR  R14                      YES,RETURN TO SEND
*                                       MSGGEN
**************************************************************
*
*        POST ERB TO REQUEST ONE BUFFER WITH THE COMPUTED
*        NUMBER OF UNITS. BUFFER WILL BE RETURNED ON ERB
*        POSTED TO AYMBFRQ .
*
**************************************************************
         LA    R14,AVTBFREB             AVAILABLE BUFFER QCB
         LA    R5,AYMBFRQ               REENTRY QCB ADDR
         ST    R5,LCBRCQCB              RETURN QUEUE
         MVI   LCBERBPY,PRIINTRQ        POST PRIORITY
         STH   R0,LCBERBCT              SET UNIT COUNT TO
*                                       COMPUTED COUNT
         STC   R1,LCBERBCT              SET BFR COUNT TO ONE
         OI    LCBERBST,LCBPRCPG        INDICATE POST BACK
         STCM  R14,SEVEN,LCBERBQB       BD QCB ADDRESS
         LA    R1,LCBERB                ADDR OF ERB
         L     R11,AVTEA                GET DISPATCHER ADDRESS @OY13623
         BAL   R14,DSPCHAIN-IEDQDISP(,R11) BR TO DISPATCHER    @OY13623
         DROP  R15                                             @OY13623
         EJECT
SETGMAIN EQU   *                                               @OY13623
         USING IEDQTSI,R8                                      @OY13623
         ST    R14,AVTSAVE3             SAVE R14               @OY13623
         OI    LCBSTAT2,LCBMSGNN        INDICATE MSGGEN        @OY13623
         L     R8,AVTTSOPT              GET TSINPUT QCB        @OY13623
         XC    TSIGMAIN(GMXTNT-SIX),TSIGMAIN CLR EDIT WORKAREA @ZM47758
         TM    TRMSTATE,TRMPREF         NCP OR SNA?            @OY13623
         BZ    NOTNCP                   NO                     @OY13623
         MVC   GMCRBUF,SCBSRCE+EIGHT8   GET BUFFER ADDR        @OY13623
         SPACE
*      GET DEVICE CHARACTERISTICS                              @OY13623
         SPACE
NOTNCP   EQU   *                                               @OY13623
         MVC   GMCARCT+ONE(ONE),QCBCARCT SAVE CARRIAGE COUNT   @OY13623
         MVC   GMSATCT+ONE(ONE),QCBSATCT  AND LINE COUNT       @OY13623
         MVI   GMLNSZ,40                GET DEFAULT LINE SIZE  @OY13623
         MVI   GMLNNO,12                GET DEFAULT LINE NO.   @OY13623
         TM    QCBFLAG,QCBTSSES         IN TSO SESSION         @ZM47752
         BZ    DEFLNNO                  BRANCH, NO             @ZM47752
         SPACE
*     GET TSB ADDRESS                                          @OY13623
         SPACE
         USING CVT,R14                                         @OY13623
         L     R14,CVTPTR               LOAD CVT ADDR          @OY13623
         L     R15,CVTAQAVT             GET TCX ADDRESS        @G36XRYP
         L     R15,TCXRPT-IEDQTCX(R15)  GET TIOCRPT ADDRESS    @G36XRYP
         LTR   R15,R15                  ZERO IF TSO NOT ACTIVE @G36XRYP
         BZ    DEFLNNO                  NO, USE DEFAULT VALUES @G36XRYP
         LH    R15,QCBTJID              GET ASID               @G36XRYP
         BCTR  R15,0                    DECREMENT FOR ZERO     @G36XRYP
*                                       ORIGIN                 @G36XRYP
         SLL   R15,2                    MULTIPLY BY 4          @G36XRYP
         L     R14,CVTASVT              GET ASVT ADDRESS       @G36XRYP
         DROP  R14                                             @G36XRYP
         USING ASVT,R14                 ASVT ADDRESSABILITY    @G36XRYP
         LA    R14,ASVTENTY             GET ASCB LIST ADDRESS  @ZM47673
         L     R14,AVTEZERO(R15,R14)    GET ASCB ADDRESS       @ZM47673
         DROP  R14                                             @G36XRYP
         USING ASCB,R14                 ASCB ADDRESSABILITY    @G36XRYP
         L     R14,ASCBTSB              GET TSB ADDRESS        @G36XRYP
         DROP  R14                                             @OY13623
         SPACE
*        SETUP LINE SIZE AND LINE NUMBER                       @OY13623
         SPACE
         USING TSB,R14                                         @OY13623
         SR    R6,R6                    CLEAR REG              @OY13623
         IC    R6,TSBLNSZ               GET LINE SIZE          @OY13623
         LTR   R6,R6                    LINE SIZE SPECIFIED    @OY13623
         BZ    DEFLNSZ                  BRANCH NO              @OY13623
         STC   R6,GMLNSZ                SAVE NUMBER            @OY13623
         SPACE
DEFLNSZ  EQU   *                                               @OY13623
         IC    R6,TSBLNNO               NUMBER OF LINES        @OY13623
         LTR   R6,R6                    SPECIFIED?             @OY13623
         BZ    DEFLNNO                  BRANCH NO              @OY13623
         STC   R6,GMLNNO                SAVE NUMBER            @OY13623
         SPACE
DEFLNNO  EQU   *                                               @OY13623
         ST    R2,GMTSBUF               SETUP ADDR OF MSGGEN   @OY13623
         ST    R1,GMTCBUF               SETUP ADDR IN OF SCB   @OY13623
         L     R14,AVTSAVE3             GET RETURN ADDRESS     @OY13623
         BR    R14                      RETURN                 @OY13623
         DROP  R14                                             @OY13623
         EJECT
ERRTRANS TR    SCBMBSSA+1(1),0(R8)      TRANSLATE
AYMTRANS TR    SCBMBSSA(1),0(R8)        TRANSLATE
MOVE     MVC   0(0,R6),0(R8)            MOVE TRANLIST CHARACTER
         DROP  R9                                              @OY16357
         USING IEDQTRM,R9                                      @OY16357
TEST     TM    TRMDEVFL,0               CHECK DEVICE DEPENDENT
*                                       FLAGS
         EJECT
PATCH    DC    30F'0'                   PATCH AREA
LEAVE    DC    X'03000000'              RESET LEFT JUSTIFY
JUSTIFY  DC    X'05000000'              LEFT JUSTIFICATION
NOJUST   DC    X'06000000'              NO LEFT JUSTIFICATION
LEN3270  DC    X'00030000'              LENGTH
FRSTUNIT DC    X'10000000'              FIRST UNIT OF 3705 MSGGEN
TIC      DC    X'08000002'              INVALID TIC
T3270    DS    H                        3270 TERMINAL
LOCSWTCH DS    X                        LOCAL SWICHES          @YM06995
ERAS3270 DC    X'27F540'                ERASE REQUEST
WRNUL    DC    X'27F1'                  WRITE NULL             @YM06995
FIVE     DC    H'5'                     HALFWORD OF FIVE
NOTUSED  DC    AL2(SCBMBSSA-IEDQSCB)    UNUSED PORTION OF SCB
LCBSIZE  DC    AL2(LCBERB-IEDQLCB)      TO FIND START OF LCB
X01FF    DC    X'01FF'                  AUTO LINE OR PROMPT
X0100    DC    X'0100'                  END OF INMSG/OUTMSG
AELIST   DC    XL4'1404000F'            AEOF,,OPTOF,REG        @OY18057
DISPXPI  DC    X'034FC91540'            SIMULATED
DISPXPD  DC    X'034FCC4150'            *
DISPATTN DC    X'024F154040'            ATTENTION
         DC    X'04154FC915'            *
         DC    X'04154FC415'            PROMPT
         DC    X'03154F1540'            *
STXETX   DC    X'0203'                  2260 STX/ETX
ERASEREM DC    X'0227F54003'            3270 REMOTE ERASE
ERASELOC DC    X'40'                    3270 LOCAL ERASE
ENTER    DC    X'10'                    MSGGEN ENTER
         DC    C'IKJ53020A ENTER '      MESSAGE
TWOE     DC    X'2E'                    MAX DATA LENGTH        @OZ26884
NLIDLES  DC    X'151717171717171717'    NL AND IDLES           @OZ26884
AYMTRAN  DSECT                          USE TO OBTAIN THE
TRANSLAT DS    A                        ADDRESS OF OUTPUT TABLE
         EJECT
IEDGENDS DSECT
GENINDEX DS    X                        AVTMSGS INDEX TO IEDQBL
GENMSKSP EQU   X'01'                    MASK SPECIFIED
GENLNGTH DS    X                        PARM LIST LENGTH
GENFLAGS DS    X                        FLAG BYTE
GENUSDCB EQU   X'80'                    USE TABLE IN DCB
GENRHINC EQU   X'40'                    RH DATA INCLUDED
GENNOMSG EQU   X'20'                    NOMSG CODED
GENOCODE EQU   X'10'                    CODE=NO CODED
GENMASK  DS    XL5                      MSGGEN MASK
GENMSGAD DS    A                        ADDR MSGGEN DATA
GENCODE  DS    A                        TRANSLATE TABLE ADDR
GENRHADR DS    A                        ADDR RH DATA
         EJECT
CVT      DSECT
         CVT
         IKJTIOCP
         IKJTSB
         TSIBD
         TTSWD
         TSCBD
         TLCBD
         TAVTD
         TQCBD
         TTSID
         TRHD
         TPRIOR
         TTRMD
         TDCTD
         TDISPD
         DCBD  DSORG=TX
         TPRFD
         TLGBD
         TTCXD
         EJECT
         IHAASVT
         EJECT
         IHAASCB
         END
