         TITLE 'IEDDFOUT, DFC OUTBOUND                                 *
                        '
IEDDFOUT CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         DC    A(0)                     QCB
         DC    A(0)
         DC    X'06'
         DC    AL3(*-1)                 STCB
         USING *,RBASE
         LR    RBASE,R15                SET UP ADDRESSIBILITY
IEDDFOUT IEDHJN START,HJN
*                                                                  0430
*/********************************************************************/
*/*                                                                  */
*/*   M A I N   R O U T I N E                                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0430
*   RPRF=RPARM;                     /* PIU BUFFER ADDRESS            */
         LR    RPRF,RPARM                                          0430
*   PIUPTR=ADDR(PRFPIUO)+PRFPIUO;   /* PIU(TH-RH-RU) ADDRESSABILITY  */
         LA    PIUPTR,PRFPIUO(,IEDQPPTR)                           0431
         SLR   @09,@09                                             0431
         IC    @09,PRFPIUO(,IEDQPPTR)                              0431
         ALR   PIUPTR,@09                                          0431
*   IF TTHOAF=SAVTSCPT THEN         /* SSCP FLOW                     */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0432
         CLC   TTHOAF(2,PIUPTR),SAVTSCPT(@09)                      0432
         BNE   @RF00432                                            0432
*     CALL SSCPRTN;                 /* YES-DO SSCP FLOW PROCESSING   */
         BAL   @14,SSCPRTN                                         0433
*   ELSE                            /* NOT SSCP FLOW                 */
*     DO;                                                          0434
         B     @RC00432                                            0434
@RF00432 DS    0H                                                  0435
*       RPARM=TTHDAF;               /* DAF TNT INDEX         @YM08991*/
         SLR   RPARM,RPARM                                         0435
         ICM   RPARM,3,TTHDAF(PIUPTR)                              0435
*       CALL IEDQTNT;               /* GET DAF TRM ENTRY     @YM08991*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0436
         BALR  @14,@15                                             0436
*       RTRM=RPARM;                 /* SET TRM BASE          @YM08991*/
         LR    RTRM,RPARM                                          0437
*       SIBPTR=TRMSIBPT;            /* SET SIB BASE          @YM08991*/
         LR    @09,IEDQTPTR                                        0438
         AL    @09,@CF02212                                        0438
         SLR   @05,@05                                             0438
         ICM   @05,7,TRMSIBPT-7(@09)                               0438
         ST    @05,SIBPTR                                          0438
*       IF SIBFTERM=ON THEN         /* FORCED TERMINATE?     @YM08991*/
         TM    SIBFTERM(@05),B'00100000'                           0439
         BNO   @RF00439                                            0439
*         CALL CHKTERM;             /* YES, SEE IF PIU SHOULD BE   0440
*                                      ALLOWED TO GO OUT     @YM08991*/
         BAL   @14,CHKTERM                                         0440
*       IF TTHEFI=OFF&              /* NORMAL FLOW AND...            */
*           (TRHRUCAT=TRHFMD×       /* FM DATA OR ...                */
*           TRHRUCAT=TRHDFC) THEN   /* DATA FLOW CONTROL             */
@RF00439 TM    TTHEFI(PIUPTR),B'00000001'                          0441
         BNZ   @RF00441                                            0441
         LA    @09,10                                              0441
         ALR   @09,PIUPTR                                          0441
         TM    TRHRUCAT(@09),B'01100000'                           0441
         BZ    @RT00441                                            0441
         TM    TRHRUCAT(@09),B'01000000'                           0441
         BNO   @RF00441                                            0441
         TM    TRHRUCAT(@09),B'00100000'                           0441
         BNZ   @RF00441                                            0441
@RT00441 DS    0H                                                  0442
*         DO;                       /* YES                           */
*           RQCB=TRMDESTQ;          /* SET QCB ADDRESSABILITY        */
         L     RQCB,TRMDESTQ-1(,IEDQTPTR)                          0443
         LA    RQCB,0(,RQCB)                                       0443
*           RLCB=QCBPLCBA;          /* SET LCB ADDRESSABILITY        */
         LR    @09,IEDQQPTR                                        0444
         AL    @09,@CF02213                                        0444
         L     RLCB,QCBPLCBA-5(,@09)                               0444
         LA    RLCB,0(,RLCB)                                       0444
*/*                                                                  */
*                                                                  0445
*           CALL CHAINMGR;          /* DO CHAIN MANAGEMENT           */
         BAL   @14,CHAINMGR                                        0445
*           IF RC=GO THEN           /* EVERYTHING O.K.               */
         CLI   RC,0                                                0446
         BNE   @RF00446                                            0446
*             DO;                   /* YES                           */
*               IF SAVTBSM^=0&      /* BRACKET MANAGER LOADED AND    */
*                   SIBBRACK=ON THEN/* RUNNING BRACKETS THIS SESSION */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0448
         L     @09,SAVTBSM(,@09)                                   0448
         LTR   @09,@09                                             0448
         BZ    @RF00448                                            0448
         L     @09,SIBPTR                                          0448
         TM    SIBBRACK(@09),B'00000100'                           0448
         BNO   @RF00448                                            0448
*                 CALL BRACKMGR;    /* DO BRACKET MANAGEMENT         */
         BAL   @14,BRACKMGR                                        0449
*               ELSE                                               0450
*                 DO;                                              0450
         B     @RC00448                                            0450
@RF00448 DS    0H                                                  0451
*                   RQCB=ADDR(IEDCMOUT);/* ADDR OF IEDCMOUT'S QCB    */
         L     RQCB,@CV02133                                       0451
*                   RSTCB=QCBSTCHN; /* ADDR OF IEDCMOUT'S STCB       */
         L     RSTCB,QCBSTCHN-1(,IEDQQPTR)                         0452
         LA    RSTCB,0(,RSTCB)                                     0452
*                   RPARM=RPRF;     /* SET PIU BUFFER AS ELEMENT     */
         LR    RPARM,RPRF                                          0453
*                   R15=ADDR(DSPBYPAS);/* EXIT- DSPBYPAS             */
         LA    R15,DSPBYPAS(,RDISP)                                0454
*                 END;                                             0455
*             END;                                                 0456
*           ELSE                    /* NO GOOD RETURN CODE           */
*             R15=ADDR(DSPDISP);    /* EXIT TO DSPDISP               */
         B     @RC00446                                            0457
@RF00446 LA    R15,DSPDISP(,RDISP)                                 0457
*         END;                                                     0458
*       ELSE                                                       0459
*         DO;                                                      0459
         B     @RC00441                                            0459
@RF00441 DS    0H                                                  0460
*           RQCB=ADDR(IEDCMOUT);    /* ADDR OF IEDCMOUT'S QCB        */
         L     RQCB,@CV02133                                       0460
*           RSTCB=QCBSTCHN;         /* ADDR OF IEDCMOUT'S STCB       */
         L     RSTCB,QCBSTCHN-1(,IEDQQPTR)                         0461
         LA    RSTCB,0(,RSTCB)                                     0461
*           RPARM=RPRF;             /* SET PIU BUFFER AS ELEMENT     */
         LR    RPARM,RPRF                                          0462
*           R15=ADDR(DSPBYPAS);     /* EXIT TO DSPBYPAS              */
         LA    R15,DSPBYPAS(,RDISP)                                0463
*         END;                                                     0464
*     END;                                                         0465
*                                                                  0465
@RC00441 DS    0H                                                  0466
*/*                                                                  */
*                                                                  0466
*   GEN(BALR R14,R15);              /* EXIT TO DISPATCHER (NO RETURN)*/
@RC00432 DS    0H                                                  0466
         BALR R14,R15
*/********************************************************************/
*/*  E N D   O F   M A I N   R O U T I N E                           */
*/********************************************************************/
*                                                                  0467
*                                                                  0467
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE BUILDS A CANCEL COMMAND IN THE PIU BUFFER.          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0467
*BLDCANCL:                                                         0467
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0467
@EL00001 DS    0H                                                  0467
@EF00001 DS    0H                                                  0467
@ER00001 BR    @14                                                 0467
BLDCANCL DS    0H                                                  0468
*   R14SV01=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV01                                         0468
*/*                                                                  */
*                                                                  0469
*   TTHDCF=LENGTH(IEDRH)+1;         /* LENGTH OF CANCEL RH/RU        */
         MVC   TTHDCF(2,PIUPTR),@CH00330                           0469
*   IEDRH=CANCELRH;                 /* SET UP CANCEL RH              */
         MVC   IEDRH+10(3,PIUPTR),@CB02152                         0470
*   RU(1)=CD1CANCL;                 /* CANCEL COMMAND CODE           */
         MVI   RU+13(PIUPTR),X'83'                                 0471
*   IF PRFTIC^=INVALTIC THEN        /* NOT LAST UNIT IN BUFFER       */
         CLC   PRFTIC(4,IEDQPPTR),@CB01337                         0472
         BE    @RF00472                                            0472
*     DO;                           /* YES                           */
*       RPARM=PRFTIC;               /* ADDRESS OF 2ND UNIT IN BUFFER */
         L     RPARM,PRFTIC(,IEDQPPTR)                             0474
*       CALL DISCARD;               /* DISCARD 2ND THRU LAST UNITS   */
         BAL   @14,DISCARD                                         0475
*       PRFTIC=INVALTIC;            /* SET INVALID TIC IN 1ST UNIT   */
         MVC   PRFTIC(4,IEDQPPTR),@CB01337                         0476
*     END;                                                         0477
*                                                                  0477
*/*                                                                  */
*                                                                  0478
*   R14=R14SV01;                    /* RESTORE RETURN ADDRESS        */
@RF00472 L     R14,R14SV01                                         0478
*   RETURN;                         /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0479
@EF00002 DS    0H                                                  0479
@ER00002 BR    @14                                                 0479
*   END BLDCANCL;                                                  0480
*                                                                  0481
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE BUILDS AN ERROR BUFFER IN THE PIU BUFFER WHOSE      */
*/* ADDRESS IS PASSED IN REGISTER 1.  AFTER BUILDING THE ERROR       */
*/* BUFFER IT IS POSTED TO THE MH.                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0481
*   RFY                                                            0481
*     IEDQPRF BASED(BUFPTR);                                       0481
*   RFY                                                            0482
*     IEDPIU BASED(PIUBEG);                                        0482
*BLDERBUF:                                                         0483
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0483
BLDERBUF DS    0H                                                  0484
*   R14SV02=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV02                                         0484
*/*                                                                  */
*                                                                  0485
*   BUFPTR=RPARM;                   /* ADDRESS OF PIU BUFFER IN WHICH
*                                      ERROR BUFFER WILL BE BUILT    */
         ST    RPARM,BUFPTR                                        0485
*   PIUBEG=ADDR(PRFPIUO)+PRFPIUO;   /* PIU(TH-RH-RU) ADDRESSABILITY  */
         L     @09,BUFPTR                                          0486
         LA    @05,PRFPIUO(,@09)                                   0486
         SLR   @02,@02                                             0486
         IC    @02,PRFPIUO(,@09)                                   0486
         ALR   @05,@02                                             0486
         ST    @05,PIUBEG                                          0486
*/* SET UP THE MH QCB ADDRESS IN THE BUFFER                          */
*                                                                  0487
*   PRFQCBA=LCBMHA;                 /* GET PROPER MH ADDRESS @YM06085*/
         MVC   PRFQCBA(3,@09),LCBMHA(IEDQLPTR)                     0487
*/*                                                                  */
*                                                                  0488
*   TRHBC=ON;                       /* FORCE BEGIN CHAIN             */
*   TRHEC=ON;                       /* FORCE END OF CHAIN            */
         OI    TRHBC+10(@05),B'00000011'                           0489
*/*                                                                  */
*                                                                  0490
*   HWSAVE=TTHDCF;                  /* SAVE DATA COUNT               */
         MVC   HWSAVE(2),TTHDCF(@05)                               0490
*   RPARM=BUFPTR;                   /* ADDRESS OF RESPONSE PIU BUFFER*/
         LR    RPARM,@09                                           0491
*   CALL IEDXFMI;                   /* TRANSFORM INTO 'TCAM' BUFFER
*                                      FORMAT                        */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0492
         L     @15,SAVTXFMI(,@09)                                  0492
         BALR  @14,@15                                             0492
*   PRF1RULN=HWSAVE-LENGTH(IEDRH);  /* SET ACTUAL RU(WHICH CONTAINS
*                                      THE RESPONSE INFORMATION)   0493
*                                      LENGTH                        */
         L     @09,BUFPTR                                          0493
         LR    @05,@09                                             0493
         SL    @05,@CF00044                                        0493
         LH    @02,HWSAVE                                          0493
         N     @02,@CF02214                                        0493
         SL    @02,@CF00065                                        0493
         STH   @02,PRF1RULN(,@05)                                  0493
*   PRF1FORM=PRF1SQLI;              /* INDICATE BOTH SEQ # AND RU  0494
*                                      LENGTH ARE PRESENT            */
         OI    PRF1FORM(@05),B'00110000'                           0494
*/*                                                                  */
*                                                                  0495
*   PRFPRI=PRIERBFR;                /* SET ERROR PRIORITY            */
         MVI   PRFPRI(@09),X'E3'                                   0495
*   PRFLCB=RLCB;                    /* SET LCB ADDRESS               */
         STCM  RLCB,7,PRFLCB(@09)                                  0496
*   PRFSIZE=0;                      /* SET 0 LENGTH                  */
         SLR   @05,@05                                             0497
         STH   @05,PRFSIZE(,@09)                                   0497
*/* SET QUEUEING POINTERS                                            */
*                                                                  0498
*   PRFCORE=SCBSCHDR;               /* SET CORE ADDR TO HDR  @YM08017*/
         L     @05,IEDQSPTR-1(,IEDQLPTR)                           0498
         LA    @05,0(,@05)                                         0498
         MVC   PRFCORE(3,@09),SCBSCHDR(@05)                        0498
*   PRFCRCD=SCBSCHDR;               /* SET CURRENT REC TO HDR      0499
*                                                            @YM08017*/
         MVC   PRFCRCD(3,@09),SCBSCHDR(@05)                        0499
*   PRFCHDR=SCBSCHDR;               /* SET CURRENT HDR TO HDR      0500
*                                                            @YM07811*/
         MVC   PRFCHDR(3,@09),SCBSCHDR(@05)                        0500
*/*                                                                  */
*                                                                  0501
*   IF QCBTSSES=ON THEN             /* IN TSO SESSION                */
         TM    QCBTSSES(IEDQQPTR),B'10000000'                      0501
         BNO   @RF00501                                            0501
*     PRFTSMSG=ON;                  /* YES, SET TSO INDICATOR        */
         OI    PRFTSMSG(@09),B'00010000'                           0502
*/* SET UP ERROR INFORMATION IN LCB                                  */
*                                                                  0503
*   LCBRCQCB=AVTMSGS->BDQCB;        /* SET RETURN QCB TO IEDQBD'S QCB*/
@RF00501 L     @09,AVTMSGS-1(,IEDQAPTR)                            0503
         L     @09,BDQCB(,@09)                                     0503
         ST    @09,LCBRCQCB(,IEDQLPTR)                             0503
*   LCBERROR=ON;                    /* SET ERROR TO STOP DISK        */
         OI    LCBERROR(IEDQLPTR),B'00000100'                      0504
*   LCBABRTN=ON;                    /* SET ABORT FLAG                */
         OI    LCBABRTN(IEDQLPTR),B'00000001'                      0505
*   LCBUSUE=ON;                     /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0506
*/*                                                                  */
*                                                                  0507
*   RPARM=BUFPTR;                   /* ADDRESS OF ERROR BUFFER       */
         L     RPARM,BUFPTR                                        0507
*   CALL DSPPOSTR;                  /* POST ERROR BUFFER TO MH       */
         LA    @15,DSPPOSTR(,RDISP)                                0508
         BALR  @14,@15                                             0508
*/*                                                                  */
*                                                                  0509
*   R14=R14SV02;                    /* RESTORE RETURN ADDRESS        */
         L     R14,R14SV02                                         0509
*   RETURN;                         /* RETURN TO CALLER              */
@EL00003 DS    0H                                                  0510
@EF00003 DS    0H                                                  0510
@ER00003 BR    @14                                                 0510
*   END BLDERBUF;                                                  0511
*   RFY                                                            0512
*     IEDQPRF BASED(IEDQPPTR);                                     0512
*   RFY                                                            0513
*     IEDPIU BASED(PIUPTR);                                        0513
*                                                                  0514
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE INTERFACES TO THE BRACKET MANAGER TO DO BRACKET     */
*/* STATE MANAGEMENT.  IT ALSO HANDLES BRACKET ERROR CONDITIONS.     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0514
*BRACKMGR:                                                         0514
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0514
BRACKMGR DS    0H                                                  0515
*   R14SV03=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV03                                         0515
*/*                                                                  */
*                                                                  0516
*   IF TRHTYPE=OFF THEN             /* REQUEST                       */
         LA    @09,10                                              0516
         ALR   @09,PIUPTR                                          0516
         TM    TRHTYPE(@09),B'10000000'                            0516
         BNZ   @RF00516                                            0516
*     DO;                           /* YES                           */
*       IF TRHBC=ON THEN            /* BEGIN CHAIN                   */
         TM    TRHBC(@09),B'00000010'                              0518
         BNO   @RF00518                                            0518
*         DO;                       /* YES                           */
*           IF SIBPEBI=OFF THEN     /* PRIMARY MAY NOT SEND EB       */
         L     @05,SIBPTR                                          0520
         TM    SIBPEBI(@05),B'00000100'                            0520
         BNZ   @RF00520                                            0520
*             TRHEB=OFF;            /* YES, TURN OFF EB              */
         NI    TRHEB(@09),B'10111111'                              0521
*/*        INSURE CORRECT BRACKET BIT SETTINGS FOR MSGGEN            */
*                                                                  0522
*           IF LCBMSGNN=ON THEN     /* MSGGEN REQUEST        @YM06886*/
@RF00520 TM    LCBMSGNN(IEDQLPTR),B'01000000'                      0522
         BNO   @RF00522                                            0522
*             DO;                   /* YES, THIS MEANS WE ARE IN THE
*                                      PROCESS OF SENDING A MSGGEN   */
*               IF SIBBSTAT=SIBBETB THEN/* 'BETWEEN BRACKET' STATE   */
         L     @09,SIBPTR                                          0524
         TM    SIBBSTAT(@09),B'00001111'                           0524
         BNZ   @RF00524                                            0524
*                 TRHBB=ON;         /* FORCE BEGIN BRACKET           */
         OI    TRHBB+10(PIUPTR),B'10000000'                        0525
*               ELSE                /* 'IN BRACKET' STATE            */
*                 TRHBB=OFF;        /* FORCE NOT BEGIN BRACKET       */
         B     @RC00524                                            0526
@RF00524 NI    TRHBB+10(PIUPTR),B'01111111'                        0526
*             END;                                                 0527
*         END;                                                     0528
*       ELSE                        /* NOT BEGIN CHAIN               */
*         DO;                                                      0529
         B     @RC00518                                            0529
@RF00518 DS    0H                                                  0530
*           TRHBB=OFF;              /* TURN OFF BB                   */
*           TRHEB=OFF;              /* TURN OFF EB                   */
         NI    TRHBB+10(PIUPTR),B'00111111'                        0531
*         END;                                                     0532
*     END;                                                         0533
*                                                                  0533
@RC00518 DS    0H                                                  0534
*/*                                                                  */
*                                                                  0534
*   PLBM=''B;                       /* INIT PARM LIST TO 0           */
@RF00516 XC    PLBM(16),PLBM                                       0534
*   PLBMSNDI=ON;                    /* INDICATE TCAM IS SENDING    0535
*                                      (OUTBOUND FLOW)               */
         LA    @09,PLBM                                            0535
         OI    PLBMSNDI(@09),B'10000000'                           0535
*   PLBMRH=IEDRH;                   /* MOVE RH TO PARM LIST          */
         LA    @05,10                                              0536
         ALR   @05,PIUPTR                                          0536
         MVC   PLBMRH(3,@09),IEDRH(@05)                            0536
*   PLBMSIB=SIBPTR;                 /* SIB POINTER TO PARM LIST      */
         L     @02,SIBPTR                                          0537
         ST    @02,PLBMSIB(,@09)                                   0537
*   PLBMLCB=RLCB;                   /* LCB POINTER TO PARM LIST      */
         ST    RLCB,PLBMLCB(,@09)                                  0538
*/*                                                                  */
*                                                                  0539
*   IF TRHRUCAT^=TRHFMD THEN        /* NOT FM DATA                   */
         TM    TRHRUCAT(@05),B'01100000'                           0539
         BZ    @RF00539                                            0539
*     PLBMCMD=RU(1);                /* YES, MOVE IN COMMAND BYTE     */
         MVC   PLBMCMD(1,@09),RU+13(PIUPTR)                        0540
*/*                                                                  */
*                                                                  0541
*   RPARM=ADDR(PLBM);               /* BRACKET PARM LIST ADDRESS     */
@RF00539 LA    RPARM,PLBM                                          0541
*   CALL IEDBSM;                    /* DO BRACKET STATE MANAGEMENT   */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0542
         L     @15,SAVTBSM(,@09)                                   0542
         BALR  @14,@15                                             0542
*   IF R15=0 THEN                   /* NO ERRORS FOUND BY BRACKET  0543
*                                      MANAGER                       */
         LTR   R15,R15                                             0543
         BNZ   @RF00543                                            0543
*     DO;                           /* YES(NO ERRORS FOUND)          */
*       RQCB=ADDR(IEDCMOUT);        /* ADDR OF CONNECTION POINT    0545
*                                      MANAGER'S QCB                 */
         L     RQCB,@CV02133                                       0545
*       RSTCB=QCBSTCHN;             /* STCB ADDRESS                  */
         L     RSTCB,QCBSTCHN-1(,IEDQQPTR)                         0546
         LA    RSTCB,0(,RSTCB)                                     0546
*       RPARM=RPRF;                 /* ADDRESS OF PIU BUFFER         */
         LR    RPARM,RPRF                                          0547
*       R15=ADDR(DSPBYPAS);         /* ADDRESS OF DSPBYPAS           */
         LA    R15,DSPBYPAS(,RDISP)                                0548
*     END;                                                         0549
*   ELSE                            /* ERROR FOUND BY BRACKET MANAGER*/
*     DO;                                                          0550
         B     @RC00543                                            0550
@RF00543 DS    0H                                                  0551
*       IF LCBCHN=LCBINC×           /* 'IN CHAIN' STATE OR...        */
*           LCBCHN=LCBWFMD THEN     /* 'BETWEEN CHAIN-WAITING FOR FM
*                                      DATA RESPONSE' STATE          */
         TM    LCBCHN(IEDQLPTR),B'00010000'                        0551
         BNO   @GL00004                                            0551
         TM    LCBCHN(IEDQLPTR),B'11100000'                        0551
         BZ    @RT00551                                            0551
@GL00004 TM    LCBCHN(IEDQLPTR),B'01000000'                        0551
         BNO   @RF00551                                            0551
         TM    LCBCHN(IEDQLPTR),B'10110000'                        0551
         BNZ   @RF00551                                            0551
@RT00551 DS    0H                                                  0552
*         DO;                       /* YES                           */
*           RPARM=RPRF;             /* PIU BUFFER ADDRESS            */
         LR    RPARM,RPRF                                          0553
*           CALL BLDERBUF;          /* CONVERT TO ERROR BUFFER AND 0554
*                                      POST TO MH                    */
         BAL   @14,BLDERBUF                                        0554
*           LCBLUSNS(1:2)=PLBMSNC;  /* MOVE ERROR SENSE TO LCB       */
         LA    @09,PLBM                                            0555
         MVC   LCBLUSNS(2,IEDQLPTR),PLBMSNC(@09)                   0555
*           LCBLUSNS(3:4)=0;        /* 0 USER SENSE BYTES            */
         SLR   @09,@09                                             0556
         STCM  @09,3,LCBLUSNS+2(IEDQLPTR)                          0556
*           LCBRSRH=ON;             /* SET EXCEPTION RESPONSE      0557
*                                      INDICATOR FOR ERRORMSG      0557
*                                                            @YM07705*/
         OI    LCBRSRH(IEDQLPTR),B'01000000'                       0557
*           LCBRHSV=IEDRH;          /* SET UP REQUEST RH WHICH HAD 0558
*                                      ERROR(FOR ERRORMSG)   @YM07705*/
         MVC   LCBRHSV(3,IEDQLPTR),IEDRH+10(PIUPTR)                0558
*           SCBTXTTN=ON;            /* SET TEXT ERROR                */
*           SCBSTERN=ON;            /* SET 'STATE' ERROR             */
         L     @10,IEDQSPTR-1(,IEDQLPTR)                           0560
         OI    SCBTXTTN(@10),B'01000010'                           0560
*         END;                                                     0561
*       ELSE                                                       0562
*         DO;                                                      0562
         B     @RC00551                                            0562
@RF00551 DS    0H                                                  0563
*           IF LCBCHN=LCBWMG THEN   /* 'WAITING FOR MSGGEN RESPONSE'
*                                      STATE                         */
         TM    LCBCHN(IEDQLPTR),B'00110000'                        0563
         BNO   @RF00563                                            0563
         TM    LCBCHN(IEDQLPTR),B'11000000'                        0563
         BNZ   @RF00563                                            0563
*             DO;                   /* YES                           */
*               RPARM=RPRF;         /* ADDRESS OF PIU BUFFER         */
         LR    RPARM,RPRF                                          0565
*               CALL DISCARD;       /* DISCARD PIU                   */
         BAL   @14,DISCARD                                         0566
*               LCBERBQB=AVTMSGS->BDQCB;/* IEDQBD'S QCB              */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0567
         MVC   LCBERBQB(3,IEDQLPTR),BDQCB+1(@10)                   0567
*               LCBERBPY=PRIEDISP;  /* POST PRIORITY                 */
         MVI   LCBERBPY(IEDQLPTR),X'E0'                            0568
*               RPARM=ADDR(LCBERB); /* ADDRESS OF ERB                */
         LA    RPARM,LCBERB(,IEDQLPTR)                             0569
*               CALL DSPPOSTR;      /* POST THE ERB TO BD            */
         LA    @15,DSPPOSTR(,RDISP)                                0570
         BALR  @14,@15                                             0570
*             END;                                                 0571
*           ELSE                                                   0572
*             DO;                                                  0572
         B     @RC00563                                            0572
@RF00563 DS    0H                                                  0573
*               IF LCBCHN=LCBWERAS THEN/* 'WAITING FOR RESPONSE TO 0573
*                                      SCREEN ERASURE' STATE         */
         TM    LCBCHN(IEDQLPTR),B'01110000'                        0573
         BNO   @RF00573                                            0573
         TM    LCBCHN(IEDQLPTR),B'10000000'                        0573
         BNZ   @RF00573                                            0573
*                 DO;               /* YES                           */
*                   RPARM=RPRF;     /* PIU BUFFER ADDRESS            */
         LR    RPARM,RPRF                                          0575
*                   CALL DISCARD;   /* DISCARD PIU                   */
         BAL   @14,DISCARD                                         0576
*                   LCBERBQB=AVTTSOPT->TSIMSGEN;/* AYM'S QCB @YM06887*/
         L     @10,AVTTSOPT(,IEDQAPTR)                             0577
         MVC   LCBERBQB(3,IEDQLPTR),TSIMSGEN+1(@10)                0577
*                   LCBERBPY=PRILNEND;/* POST PRIORITY               */
         MVI   LCBERBPY(IEDQLPTR),X'E4'                            0578
*                   RPARM=ADDR(LCBERB);/* ERB ADDRESS                */
         LA    RPARM,LCBERB(,IEDQLPTR)                             0579
*                   CALL DSPPOSTR;  /* POST ERB TO AYM               */
         LA    @15,DSPPOSTR(,RDISP)                                0580
         BALR  @14,@15                                             0580
*                 END;                                             0581
*               ELSE                                               0582
*                 ;                 /* 'SHOULD NOT OCCUR' CONDITION  */
@RF00573 DS    0H                                                  0583
*             END;                                                 0583
*         END;                                                     0584
*                                                                  0584
@RC00563 DS    0H                                                  0585
*/*                                                                  */
*                                                                  0585
*       LCBCHN=LCBBETC;             /* GO TO 'BETWEEN CHAIN-WAITING
*                                      FOR NO RESPONSES' STATE. THIS
*                                      WILL CAUSE ALL ADDITIONAL   0585
*                                      ELEMENTS OF THIS CHAIN(IF   0585
*                                      THEIR ARE ANY) TO BE        0585
*                                      DISCARDED.                    */
@RC00551 NI    LCBCHN(IEDQLPTR),B'00001111'                        0585
*       R15=ADDR(DSPDISP);          /* SET EXIT TO DSPDISP           */
         LA    R15,DSPDISP(,RDISP)                                 0586
*     END;                                                         0587
*                                                                  0587
*/*                                                                  */
*                                                                  0588
*   R14=R14SV03;                    /* RESTORE RETURN ADDRESS        */
@RC00543 L     R14,R14SV03                                         0588
*   RETURN;                         /* RETURN TO CALLER              */
@EL00004 DS    0H                                                  0589
@EF00004 DS    0H                                                  0589
@ER00004 BR    @14                                                 0589
*   END BRACKMGR;                                                  0590
*                                                                  0591
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE PERFORMS CHAIN MANAGEMENT.                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0591
*CHAINMGR:                                                         0591
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0591
CHAINMGR DS    0H                                                  0592
*   R14SV04=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV04                                         0592
*/*                                                                  */
*                                                                  0593
*   RC=GO;                          /* INIT RETURN CODE TO GO        */
         MVI   RC,X'00'                                            0593
*/*                                                                  */
*                                                                  0594
*   IF TRHTYPE=OFF THEN             /* REQUEST                       */
         LA    @09,10                                              0594
         ALR   @09,PIUPTR                                          0594
         TM    TRHTYPE(@09),B'10000000'                            0594
         BNZ   @RF00594                                            0594
*     DO;                           /* YES                           */
*       IF TRHRUCAT=TRHFMD THEN     /* FM DATA                       */
         TM    TRHRUCAT(@09),B'01100000'                           0596
         BNZ   @RF00596                                            0596
*         DO;                       /* YES                           */
*           IF TRHBC=ON THEN        /* BEGIN CHAIN                   */
         TM    TRHBC(@09),B'00000010'                              0598
         BNO   @RF00598                                            0598
*             DO;                   /* YES                           */
*               IF TRHEC=ON THEN    /* END CHAIN                     */
         TM    TRHEC(@09),B'00000001'                              0600
         BNO   @RF00600                                            0600
*                 DO;               /* YES                           */
*                   IF PRF2SMI=ON THEN/* START MI REQUEST(TSO ONLY)  */
         LR    @09,IEDQPPTR                                        0602
         AL    @09,@CF02224                                        0602
         TM    PRF2SMI(@09),B'00100000'                            0602
         BNO   @RF00602                                            0602
*                     LCBCHN=LCBWSMI;/* GO TO 'WAITING FOR START MI
*                                      RESPONSE' STATE (TSO ONLY)    */
         NI    LCBCHN(IEDQLPTR),B'10001111'                        0603
         OI    LCBCHN(IEDQLPTR),B'10000000'                        0603
*                   ELSE                                           0604
*                     DO;                                          0604
         B     @RC00602                                            0604
@RF00602 DS    0H                                                  0605
*                       IF LCBMSGNN=ON THEN/* MSGGEN INDICATOR ON    */
         TM    LCBMSGNN(IEDQLPTR),B'01000000'                      0605
         BNO   @RF00605                                            0605
*                         DO;       /* YES                           */
*                           IF LCBSATRD=ON THEN/* SIMULATED ATTN READ*/
         TM    LCBSATRD(IEDQLPTR),B'00100000'                      0607
         BNO   @RF00607                                            0607
*                             LCBCHN=LCBWERAS;/* IF BOTH LCBMSGNN AND
*                                      LCBSATRD ARE ON IT MEANS THIS
*                                      REQUEST IS A SCREEN ERASURE 0608
*                                      (FOR 3270 TSO ONLY) THEREFORE
*                                      GO TO 'WAITING FOR SCREEN   0608
*                                      ERASURE RESPONSE' STATE       */
         NI    LCBCHN(IEDQLPTR),B'01111111'                        0608
         OI    LCBCHN(IEDQLPTR),B'01110000'                        0608
*                           ELSE                                   0609
*                             LCBCHN=LCBWMG;/* REGULAR MSGGEN- GO TO
*                                      'WAITING FOR MSGGEN RESPONSE'
*                                      STATE                         */
         B     @RC00607                                            0609
@RF00607 NI    LCBCHN(IEDQLPTR),B'00111111'                        0609
         OI    LCBCHN(IEDQLPTR),B'00110000'                        0609
*                         END;                                     0610
*                       ELSE                                       0611
*                         LCBCHN=LCBWFMD;/* FM DATA- GO TO 'BETWEEN
*                                      CHAIN-WAITING FOR RESPONSE' 0611
*                                      STATE                         */
         B     @RC00605                                            0611
@RF00605 NI    LCBCHN(IEDQLPTR),B'01001111'                        0611
         OI    LCBCHN(IEDQLPTR),B'01000000'                        0611
*                     END;                                         0612
*                 END;                                             0613
*               ELSE                /* NOT END OF CHAIN              */
*                 LCBCHN=LCBINC;    /* GO TO 'IN CHAIN' STATE        */
         B     @RC00600                                            0614
@RF00600 NI    LCBCHN(IEDQLPTR),B'00011111'                        0614
         OI    LCBCHN(IEDQLPTR),B'00010000'                        0614
*             END;                                                 0615
*           ELSE                    /* NOT BEGIN CHAIN               */
*             DO;                                                  0616
         B     @RC00598                                            0616
@RF00598 DS    0H                                                  0617
*               IF TRHEC=ON THEN    /* END CHAIN                     */
         TM    TRHEC+10(PIUPTR),B'00000001'                        0617
         BNO   @RF00617                                            0617
*                 DO;               /* YES                           */
*                   IF LCBCHN=LCBINC THEN/* 'IN CHAIN' STATE         */
         TM    LCBCHN(IEDQLPTR),B'00010000'                        0619
         BNO   @RF00619                                            0619
         TM    LCBCHN(IEDQLPTR),B'11100000'                        0619
         BNZ   @RF00619                                            0619
*                     LCBCHN=LCBWFMD;/* YES, GO TO 'BETWEEN CHAIN  0620
*                                      WAITING FOR FM DATA RESPONSE'
*                                      STATE                         */
         NI    LCBCHN(IEDQLPTR),B'01001111'                        0620
         OI    LCBCHN(IEDQLPTR),B'01000000'                        0620
*                   ELSE            /* NOT 'IN CHAIN' STATE          */
*                     DO;                                          0621
         B     @RC00619                                            0621
@RF00619 DS    0H                                                  0622
*                       IF LCBCHN=LCBPURG THEN/* 'PURGING CHAIN'   0622
*                                      STATE                         */
         TM    LCBCHN(IEDQLPTR),B'00100000'                        0622
         BNO   @RF00622                                            0622
         TM    LCBCHN(IEDQLPTR),B'11010000'                        0622
         BNZ   @RF00622                                            0622
*                         DO;       /* YES                           */
*                           RPARM=LCBRSPSV;/* ADDRESS OF SAVED     0624
*                                      RESPONSE BUFFER(SAVED BY    0624
*                                      IEDRSPIN ON ERROR RESPONSE)   */
*                                                                  0624
         L     RPARM,LCBRSPSV(,IEDQLPTR)                           0624
*                           /*****************************************/
*                           /*                                       */
*                           /* SWITCH OAF AND DAF SO THAT PRFSRCE AND*/
*                           /* PRFDEST ARE SET UP CORRECTLY  @YM07009*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  0625
*                           PIUBEG=ADDR(RPARM->PRFPIUO)+RPARM->PRFPIUO;
         LA    @09,PRFPIUO(,RPARM)                                 0625
         SLR   @05,@05                                             0625
         IC    @05,PRFPIUO(,RPARM)                                 0625
         ALR   @09,@05                                             0625
         ST    @09,PIUBEG                                          0625
*                                   /* GET ADDR BEGINNING OF SAVED 0626
*                                      RESPONSE BFR          @YM07424*/
*                           HWSAVE=PIUBEG->TTHOAF;/* SAVE OAF      0626
*                                                            @YM07424*/
         MVC   HWSAVE(2),TTHOAF(@09)                               0626
*                           PIUBEG->TTHOAF=PIUBEG->TTHDAF;/* MOVE DAF
*                                      TO OAF                @YM07424*/
         MVC   TTHOAF(2,@09),TTHDAF(@09)                           0627
*                           PIUBEG->TTHDAF=HWSAVE;/* MOVE OAF TO DAF
*                                                            @YM07424*/
         MVC   TTHDAF(2,@09),HWSAVE                                0628
*                           CALL BLDERBUF;/* GO BUILD AN ERROR BUFFER*/
         BAL   @14,BLDERBUF                                        0629
*                           LCBRSPSV=0;/* 0 ADDRESS OF SAVED RESPONSE
*                                      BUFFER                        */
         SLR   @09,@09                                             0630
         ST    @09,LCBRSPSV(,IEDQLPTR)                             0630
*                           LCBCHN=LCBBETC;/* GO TO 'BETWEEN CHAIN 0631
*                                      WAITING FOR NO RESPONSE' STATE*/
         NI    LCBCHN(IEDQLPTR),B'00001111'                        0631
*                         END;                                     0632
*                       ELSE        /* NOT IN 'PURGING CHAIN' STATE  */
*                         DO;                                      0633
         B     @RC00622                                            0633
@RF00622 DS    0H                                                  0634
*                           RPARM=RPRF;/* ADDRESS OF PIU BUFFER      */
         LR    RPARM,RPRF                                          0634
*                           CALL DISCARD;/* DISCARD PIU BUFFER       */
         BAL   @14,DISCARD                                         0635
*                           RC=NOGO;/* SET 'NO GO' RETURN CODE       */
         MVI   RC,X'04'                                            0636
*                         END;                                     0637
*                     END;                                         0638
*                 END;                                             0639
*               ELSE                /* NOT END OF CHAIN              */
*                 DO;                                              0640
         B     @RC00617                                            0640
@RF00617 DS    0H                                                  0641
*                   IF LCBCHN^=LCBINC THEN/* NOT 'IN CHAIN' STATE    */
         TM    LCBCHN(IEDQLPTR),B'00010000'                        0641
         BNO   @RT00641                                            0641
         TM    LCBCHN(IEDQLPTR),B'11100000'                        0641
         BZ    @RF00641                                            0641
@RT00641 DS    0H                                                  0642
*                     DO;           /* YES                           */
*                       IF LCBCHN=LCBPURG THEN/* 'PURGING CHAIN'   0643
*                                      STATE                         */
         TM    LCBCHN(IEDQLPTR),B'00100000'                        0643
         BNO   @RF00643                                            0643
         TM    LCBCHN(IEDQLPTR),B'11010000'                        0643
         BNZ   @RF00643                                            0643
*                         DO;       /* YES                           */
*                           CALL BLDCANCL;/* CONVERT THIS PIU BUFFER
*                                      TO A CANCEL                   */
         BAL   @14,BLDCANCL                                        0645
*                           LCBCHN=LCBWCAN;/* GO TO 'BETWEEN CHAIN 0646
*                                      WAITING FOR CANCEL RESPONSE'
*                                      STATE                         */
         NI    LCBCHN(IEDQLPTR),B'01011111'                        0646
         OI    LCBCHN(IEDQLPTR),B'01010000'                        0646
*                         END;                                     0647
*                       ELSE        /* NOT 'PURGING CHAIN' STATE     */
*                         DO;                                      0648
         B     @RC00643                                            0648
@RF00643 DS    0H                                                  0649
*                           RPARM=RPRF;/* ADDRESS OF PIU BUFFER      */
         LR    RPARM,RPRF                                          0649
*                           CALL DISCARD;/* DISCARD PIU BUFFER       */
         BAL   @14,DISCARD                                         0650
*                           RC=NOGO;/* SET RETURN CODE TO 'NO GO'    */
         MVI   RC,X'04'                                            0651
*                         END;                                     0652
*                     END;                                         0653
*                 END;                                             0654
*             END;                                                 0655
*         END;                                                     0656
*       ELSE                        /* DATA FLOW CONTROL COMMAND     */
*         DO;                                                      0657
         B     @RC00596                                            0657
@RF00596 DS    0H                                                  0658
*           IF RU(1)=CD1BID THEN    /* BID COMMAND                   */
         CLI   RU+13(PIUPTR),X'C8'                                 0658
         BNE   @RF00658                                            0658
*             LCBCHN=LCBWBID;       /* YES, GO TO 'BETWEEN CHAIN   0659
*                                      WAITING FOR BID RESPONSE'   0659
*                                      STATE                         */
         NI    LCBCHN(IEDQLPTR),B'01101111'                        0659
         OI    LCBCHN(IEDQLPTR),B'01100000'                        0659
*         END;                                                     0660
*                                                                  0660
@RF00658 DS    0H                                                  0661
*/*                                                                  */
*                                                                  0661
*       IF TRHEC=ON&                /* END CHAIN AND...      @YM06990*/
*           SIBFMODE=SIBHDXFF&      /* HALF DUPLEX MODE AND..      0661
*                                                            @YM06990*/
*           TRHCDI=ON THEN          /* CHANGE DIRECTION      @YM06990*/
@RC00596 LA    @09,10                                              0661
         ALR   @09,PIUPTR                                          0661
         TM    TRHEC(@09),B'00000001'                              0661
         BNO   @RF00661                                            0661
         L     @05,SIBPTR                                          0661
         TM    SIBFMODE(@05),B'10000000'                           0661
         BNO   @RF00661                                            0661
         TM    SIBFMODE(@05),B'01000000'                           0661
         BNZ   @RF00661                                            0661
         TM    TRHCDI(@09),B'00100000'                             0661
         BNO   @RF00661                                            0661
*         SIBCD=OFF;                /* MAINTAIN CHANGE DIRECTION   0662
*                                      STATE                 @YM06990*/
         NI    SIBCD(@05),B'01111111'                              0662
*/*                                                                  */
*                                                                  0663
*     END;                                                         0663
*   ELSE                            /* RESPONSE                      */
*     DO;                                                          0664
         B     @RC00594                                            0664
@RF00594 DS    0H                                                  0665
*       IF TRHSDI=ON THEN           /* SENSE DATA INCLUDED (EXCEPTION
*                                                            @YM06990*/
         LA    @09,10                                              0665
         ALR   @09,PIUPTR                                          0665
         TM    TRHSDI(@09),B'00000100'                             0665
         BNO   @RF00665                                            0665
*         DO;                       /* RESPONSE) AND...      @YM06990*/
*           IF TRHRUCAT=TRHFMD&     /* FM DATA AND...        @YM06990*/
*               LCBCHN=LCBINC THEN  /* 'IN CHAIN' STATE      @YM06990*/
         TM    TRHRUCAT(@09),B'01100000'                           0667
         BNZ   @RF00667                                            0667
         TM    LCBCHN(IEDQLPTR),B'00010000'                        0667
         BNO   @RF00667                                            0667
         TM    LCBCHN(IEDQLPTR),B'11100000'                        0667
         BNZ   @RF00667                                            0667
*             LCBCHN=LCBPURG;       /* GO TO 'PURGING CHAIN' STATE 0668
*                                                            @YM06990*/
         NI    LCBCHN(IEDQLPTR),B'00101111'                        0668
         OI    LCBCHN(IEDQLPTR),B'00100000'                        0668
*           IF SIBFMODE=SIBHDXFF THEN/* BOUND HALF-DUPLEX FLIP-FLOP
*                                                            @YM06990*/
@RF00667 L     @09,SIBPTR                                          0669
         TM    SIBFMODE(@09),B'10000000'                           0669
         BNO   @RF00669                                            0669
         TM    SIBFMODE(@09),B'01000000'                           0669
         BNZ   @RF00669                                            0669
*             IF SIBRECOV=ON THEN   /* TCAM LU NOT RESPONSIBLE FOR 0670
*                                      RECOVERY              @YM06990*/
         TM    SIBRECOV(@09),B'00100000'                           0670
         BNO   @RF00670                                            0670
*               SIBCD=OFF;          /* INDICATE RECEIVE STATE      0671
*                                                            @YM06990*/
         NI    SIBCD(@09),B'01111111'                              0671
*             ELSE                  /* TCAM LU RESPONSIBLE FOR     0672
*                                      RECOVERY              @YM06990*/
*               SIBCD=ON;           /* INDICATE SEND STATE   @YM06990*/
         B     @RC00670                                            0672
@RF00670 L     @09,SIBPTR                                          0672
         OI    SIBCD(@09),B'10000000'                              0672
*         END;                      /*                       @YM06990*/
@RC00670 DS    0H                                                  0673
@RF00669 DS    0H                                                  0674
*     END;                                                         0674
@RF00665 DS    0H                                                  0675
*   R14=R14SV04;                    /* RESTORE RETURN ADDRESS        */
@RC00594 L     R14,R14SV04                                         0675
*   RETURN;                         /* RETURN TO CALLER              */
@EL00005 DS    0H                                                  0676
@EF00005 DS    0H                                                  0676
@ER00005 BR    @14                                                 0676
*   END CHAINMGR;                                                  0677
*                                                                  0678
*/***********************************************************@YM08991*/
*/*                                                          @YM08991*/
*/* THIS ROUTINE CHECKS PIUS BEING SENT OUT ON THE LU-LU     @YM08991*/
*/* FLOW WHILE A FORCED TERMINATE OF THE SESSION IS IN       @YM08991*/
*/* PROGRESS.  ALL RESPONSES PLUS 'CLEAR' AND 'UNBIND'       @YM08991*/
*/* REQUESTS ARE ALLOWED TO FLOW NORMALLY.  OTHER TYPES OF   @YM08991*/
*/* REQUESTS ARE FLAGGED SO THEY WILL BE STOPPED LATER BY    @YM08991*/
*/* IEDPCOUT AND PASSED TO CLEAN-UP.                         @YM08991*/
*/*                                                          @YM08991*/
*/***********************************************************@YM08991*/
*                                                                  0678
*CHKTERM:                                                          0678
*   PROC OPTIONS(SAVE(R14));        /*                       @YM08991*/
CHKTERM  ST    @14,12(,@13)                                        0678
*   IF TRHTYPE=OFF THEN             /* REQUEST PIU           @YM08991*/
         LA    @09,10                                              0679
         ALR   @09,PIUPTR                                          0679
         TM    TRHTYPE(@09),B'10000000'                            0679
         BNZ   @RF00679                                            0679
*     DO;                           /* YES                   @YM08991*/
*       IF TRHRUCAT=TRHSC&          /* SESSION CONTROL &     @YM08991*/
*           (CMDBYTE=CD1CLEAR×      /* ... CLEAR OR          @YM08991*/
*           CMDBYTE=CD1UBIND) THEN                                 0681
         TM    TRHRUCAT(@09),B'01100000'                           0681
         BNO   @RF00681                                            0681
         LA    @09,13                                              0681
         ALR   @09,PIUPTR                                          0681
         CLI   CMDBYTE(@09),X'A1'                                  0681
         BE    @RT00681                                            0681
         CLI   CMDBYTE(@09),X'32'                                  0681
         BE    @RT00681                                            0681
*         ;                         /* ... UNBIND?           @YM08991*/
*                                                                  0682
*       /*************************************************************/
*       /*                                                           */
*       /* YES, LET PIU GO OUT                               @YM08991*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0683
*       ELSE                        /* OTHER REQUEST TYPE    @YM08991*/
*         PRF2TERM=ON;              /* FLAG FOR IEDPCOUT     @YM08991*/
@RF00681 LR    @09,IEDQPPTR                                        0683
         AL    @09,@CF02224                                        0683
         OI    PRF2TERM(@09),B'00010000'                           0683
*     END;                          /*                       @YM08991*/
*   END CHKTERM;                    /* RETURN TO CALLER      @YM08991*/
@EL00006 DS    0H                                                  0685
@EF00006 DS    0H                                                  0685
@ER00006 L     @14,12(,@13)                                        0685
         BR    @14                                                 0685
*                                                                  0686
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE DISCARDS ALL THE UNITS IN A PIU BUFFER.  IT POSTS   */
*/* THEM TO BUF  RETURN(IEDQGB).                                     */
*/*       INPUT= REG1 POINTS TO PIU BUFFER TO BE DISCARDED           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0686
*DISCARD:                                                          0686
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0686
DISCARD  DS    0H                                                  0687
*   R14SV05=R14;                    /* SAVE RETURN REG               */
         ST    R14,R14SV05                                         0687
*/*                                                                  */
*                                                                  0688
*   RPARM->PRFNBUNT=0;              /* SET NUMBER OF UNITS = 0 (THIS
*                                      MEANS IEDQGB WILL CALCULATE 0688
*                                      THE NUMBER OF UNITS TO BE   0688
*                                      FREED)                        */
         MVI   PRFNBUNT(RPARM),X'00'                               0688
*   RPARM->PRFQCBA=ADDR(AVTBFRTB);  /* ADDR OF BUFFER RETURN QCB     */
         LA    @09,AVTBFRTB(,IEDQAPTR)                             0689
         STCM  @09,7,PRFQCBA(RPARM)                                0689
*   RPARM->PRFPRI=PRIBFRTB;         /* POST PRIORITY                 */
         MVI   PRFPRI(RPARM),X'E0'                                 0690
*   CALL DSPPOSTR;                  /* POST BUFFER TO BUFFER RETURN  */
         LA    @15,DSPPOSTR(,RDISP)                                0691
         BALR  @14,@15                                             0691
*/*                                                                  */
*                                                                  0692
*   R14=R14SV05;                    /* RESTORE RETURN REG            */
         L     R14,R14SV05                                         0692
*   RETURN;                         /* RETURN TO CALLER              */
@EL00007 DS    0H                                                  0693
@EF00007 DS    0H                                                  0693
@ER00007 BR    @14                                                 0693
*   END DISCARD;                                                   0694
*                                                                  0695
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CHECKS THE SIB CHAIN FOR THE SSCP SIB. A SWITCH  */
*   /* (FOUNDSW) IS SET WHEN A MATCH IS FOUND.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0695
*FINDSIB:                                                          0695
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0695
FINDSIB  DS    0H                                                  0696
*   FOUNDSW=OFF;                    /* INITIALIZE LOOP SWITCH        */
         NI    FOUNDSW,B'01111111'                                 0696
*/*                                                                  */
*                                                                  0697
*   DO WHILE SIBPTR>0&FOUNDSW=OFF;  /* CONTINUE UNTIL END OF SIB   0697
*                                      CHAIN OR MATCH FOUND          */
         B     @DE00697                                            0697
@DL00697 DS    0H                                                  0698
*     IF SIBINDEX=SAVTSCPT THEN     /* SIB FOR SSCP FLOW -YES        */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0698
         L     @05,SIBPTR                                          0698
         CLC   SIBINDEX(2,@05),SAVTSCPT(@09)                       0698
         BNE   @RF00698                                            0698
*       FOUNDSW=ON;                 /* INDICATE MATCH FOUND          */
         OI    FOUNDSW,B'10000000'                                 0699
*     ELSE                                                         0700
*       SIBPTR=SIBCHAIN;            /* GET NEXT SIB IN CHAIN         */
         B     @RC00698                                            0700
@RF00698 L     @09,SIBPTR                                          0700
         L     @09,SIBCHAIN(,@09)                                  0700
         ST    @09,SIBPTR                                          0700
*/*                                                                  */
*                                                                  0701
*   END;                                                           0701
*                                                                  0701
@RC00698 DS    0H                                                  0701
@DE00697 L     @09,SIBPTR                                          0701
         LTR   @09,@09                                             0701
         BNP   @DC00697                                            0701
         TM    FOUNDSW,B'10000000'                                 0701
         BZ    @DL00697                                            0701
@DC00697 DS    0H                                                  0702
*/*                                                                  */
*                                                                  0702
*   END FINDSIB;                    /* RETURN TO CALLER              */
@EL00008 DS    0H                                                  0702
@EF00008 DS    0H                                                  0702
@ER00008 BR    @14                                                 0702
*                                                                  0703
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE PROCESSES PIUS ON THE SSCP FLOW                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0703
*SSCPRTN:                                                          0703
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0703
SSCPRTN  DS    0H                                                  0704
*   R14SV06=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,R14SV06                                         0704
*/*                                                                  */
*                                                                  0705
*                                   /* INITIALIZATION                */
*   RPARM=TTHDAF;                   /* TNT OFFSET OF DAF             */
         SLR   RPARM,RPARM                                         0705
         ICM   RPARM,3,TTHDAF(PIUPTR)                              0705
*   CALL IEDQTNT;                   /* GET TERMINAL ADDRESS          */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0706
         BALR  @14,@15                                             0706
*   RTRM=RPARM;                     /* TERMINAL ENTRY ADDRESS        */
         LR    RTRM,RPARM                                          0707
*/*                                                                  */
*                                                                  0708
*   SIBPTR=TRMSIBPT;                /* GET FIRST SIB ADDRESS         */
         LR    @09,IEDQTPTR                                        0708
         AL    @09,@CF02212                                        0708
         SLR   @05,@05                                             0708
         ICM   @05,7,TRMSIBPT-7(@09)                               0708
         ST    @05,SIBPTR                                          0708
*   CALL FINDSIB;                   /* LOOK FOR APPROPRIATE SIB      */
         BAL   @14,FINDSIB                                         0709
*/*                                                                  */
*                                                                  0710
*   IF FOUNDSW=ON THEN              /* CORRECT SIB FOUND- YES        */
         TM    FOUNDSW,B'10000000'                                 0710
         BNO   @RF00710                                            0710
*     DO;                                                          0711
*                                                                  0711
*/*                                                                  */
*                                                                  0712
*       IF TRHRUCAT=TRHSC THEN                                     0712
         TM    TRHRUCAT+10(PIUPTR),B'01100000'                     0712
         BNO   @RF00712                                            0712
*         DO;                       /* IF THIS IS SESSION CONTROL  0713
*                                                            @XM05714*/
*           IF CMDBYTE=CD1ACTPU×CMDBYTE=CD1ACTLU THEN/* ACTPU OR   0714
*                                      ACTLU ?                       */
         LA    @09,13                                              0714
         ALR   @09,PIUPTR                                          0714
         CLI   CMDBYTE(@09),X'11'                                  0714
         BE    @RT00714                                            0714
         CLI   CMDBYTE(@09),X'0D'                                  0714
         BNE   @RF00714                                            0714
@RT00714 DS    0H                                                  0715
*             SIBSSTAT=SIBSAPND;    /* SET SESSION ACT PENDING       */
         L     @10,SIBPTR                                          0715
         NI    SIBSSTAT(@10),B'11100111'                           0715
         OI    SIBSSTAT(@10),B'00000100'                           0715
*           ELSE                                                   0716
*             DO;                                                  0716
         B     @RC00714                                            0716
@RF00714 DS    0H                                                  0717
*               IF CMDBYTE=CD1DATPU×CMDBYTE=CD1DATLU THEN          0717
         LA    @09,13                                              0717
         ALR   @09,PIUPTR                                          0717
         CLI   CMDBYTE(@09),X'12'                                  0717
         BE    @RT00717                                            0717
         CLI   CMDBYTE(@09),X'0E'                                  0717
         BNE   @RF00717                                            0717
@RT00717 DS    0H                                                  0718
*                 DO;               /* DACTPU OR DACTLU ?            */
*                   SIBSSTAT=SIBSRPND;/* SET SESSION RSET PENDING    */
         L     @10,SIBPTR                                          0719
         NI    SIBSSTAT(@10),B'11101011'                           0719
         OI    SIBSSTAT(@10),B'00001000'                           0719
*                   SIBDSTAT=SIBDRSET;/* SET DATA TRAFFIC RESET      */
         NI    SIBDSTAT(@10),B'11111100'                           0720
*                 END;                                             0721
*               ELSE                                               0722
*                 IF CMDBYTE=CD1SDT THEN/* START DATA TRAFFIC        */
         B     @RC00717                                            0722
@RF00717 CLI   CMDBYTE+13(PIUPTR),X'A0'                            0722
         BNE   @RF00722                                            0722
*                   SIBDSTAT=SIBDAPND;/* SET DATA TRAFFIC ACTIVE     */
         L     @10,SIBPTR                                          0723
         NI    SIBDSTAT(@10),B'11111101'                           0723
         OI    SIBDSTAT(@10),B'00000001'                           0723
*             END;                  /* PENDING                       */
@RF00722 DS    0H                                                  0724
@RC00717 DS    0H                                                  0725
*         END;                      /*                       @XM05714*/
@RC00714 DS    0H                                                  0726
*/*                                                                  */
*                                                                  0726
*                                   /* BYPASS TO IEDCMOUT            */
*       RPARM=RPRF;                 /* ADDRESS OF PIU                */
@RF00712 LR    RPARM,RPRF                                          0726
*       RQCB=ADDR(IEDCMOUT);        /* QCB ADDRESS                   */
         L     RQCB,@CV02133                                       0727
*       RSTCB=QCBSTCHN;             /* STCB ADDRESS                  */
         L     RSTCB,QCBSTCHN-1(,IEDQQPTR)                         0728
         LA    RSTCB,0(,RSTCB)                                     0728
*       R15=ADDR(DSPBYPAS);         /* BYPASS TO IEDCMOUT            */
         LA    R15,DSPBYPAS(,RDISP)                                0729
*     END;                                                         0730
*                                                                  0730
*/*                                                                  */
*                                                                  0731
*   ELSE                            /* CORRECT SIB NOT FOUND         */
*     DO;                                                          0731
         B     @RC00710                                            0731
@RF00710 DS    0H                                                  0732
*       RPARM=RPRF;                 /* ADDRESS OF PIU BUFFER         */
         LR    RPARM,RPRF                                          0732
*       CALL DISCARD;               /* DISCARD THIS PIU BUFFER       */
         BAL   @14,DISCARD                                         0733
*       R15=ADDR(DSPDISP);          /* EXIT TO DSPDISP               */
         LA    R15,DSPDISP(,RDISP)                                 0734
*     END;                                                         0735
*                                                                  0735
*/*                                                                  */
*                                                                  0736
*   R14=R14SV06;                    /* RESTORE RETURN ADDRESS        */
@RC00710 L     R14,R14SV06                                         0736
*   END SSCPRTN;                                                   0737
@EL00009 DS    0H                                                  0737
@EF00009 DS    0H                                                  0737
@ER00009 BR    @14                                                 0737
*   END IEDDFOUT                                                   0738
*                                                                  0738
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TLGBD   )                                       */
*/*%INCLUDE SYSLIB  (TPIUD   )                                       */
*/*%INCLUDE SYSLIB  (TPLBMD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTSID   )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0738
*       ;                                                          0738
@DATA    DS    0H
@CH00330 DC    H'4'
         DS    0F
         DS    0F
@CF00065 DC    F'3'
@CF00044 DC    F'8'
@CF02224 DC    F'-8'
@CF02212 DC    F'-7'
@CF02213 DC    F'-4'
@CF02214 DC    XL4'0000FFFF'
@CV02133 DC    V(IEDCMOUT)
         DS    0D
SIBPTR   DS    A
BUFPTR   DS    A
PIUBEG   DS    A
HWSAVE   DS    H
RC       DS    FL1
@CB01337 DC    X'08000002'
@CB02152 DC    X'4B8000'
PLBM     DS    CL16
SWITCH1  DS    BL1
         ORG   SWITCH1
FOUNDSW  DS    BL1
@NM00219 EQU   SWITCH1+0
         ORG   SWITCH1+1
         DS    CL1
R14SV    DS    CL24
         ORG   R14SV
R14SV01  DS    AL4
R14SV02  DS    AL4
R14SV03  DS    AL4
R14SV04  DS    AL4
R14SV05  DS    AL4
R14SV06  DS    AL4
         ORG   R14SV+24
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PIUPTR   EQU   @10
IEDQAPTR EQU   @13
RDISP    EQU   @11
IEDQLPTR EQU   @04
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
IEDQQPTR EQU   @07
IEDQTPTR EQU   @08
RPARM    EQU   @01
RZERO    EQU   @00
R15      EQU   @15
RSTCB    EQU   @03
RLCB     EQU   @04
RPRF     EQU   @06
RQCB     EQU   @07
RTRM     EQU   @08
RBASE    EQU   @12
RAVT     EQU   @13
R14      EQU   @14
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
@NM00003 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTMSGS  EQU   IEDQAVTD+657
AVTTSOPT EQU   IEDQAVTD+668
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTBIT4  EQU   IEDQAVTD+1064
@NM00085 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTXFMI EQU   IEDNSVTD+132
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTBSM  EQU   IEDNSVTD+240
SAVTRNMP EQU   IEDNSVTD+256
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQDISP EQU   0
DSPDISP  EQU   4
DSPBYPAS EQU   20
DSPPOSTR EQU   28
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBTSOB  EQU   IEDQLCB+19
LCBSATRD EQU   LCBTSOB
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBABRTN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBUSUE  EQU   LCBCSWUS
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBSTAT2 EQU   LCBSTATE+1
LCBMSGNN EQU   LCBSTAT2
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBQB EQU   LCBERB+1
LCBERBPY EQU   IEDQLCB+80
LCBERBST EQU   IEDQLCB+84
LCBERROR EQU   LCBERBST
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBCHN   EQU   LCBSTAT6
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDNLGB  EQU   0
LGBBUFOU EQU   IEDNLGB+20
LGBPCI   EQU   IEDNLGB+25
LGBBYTE  EQU   IEDNLGB+29
LGBOFLGS EQU   IEDNLGB+48
LGBRESER EQU   IEDNLGB+56
IEDPIU   EQU   0
PIUTH    EQU   IEDPIU
PIURH    EQU   IEDPIU+10
PIURU    EQU   IEDPIU+13
IEDPLBM  EQU   0
PLBMFLG1 EQU   IEDPLBM
PLBMSNDI EQU   PLBMFLG1
PLBMSNC  EQU   IEDPLBM+2
PLBMRH   EQU   IEDPLBM+4
PLBMCMD  EQU   IEDPLBM+7
PLBMSIB  EQU   IEDPLBM+8
PLBMLCB  EQU   IEDPLBM+12
PLBMPTR  EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
PRFLCB   EQU   IEDQPRF+13
@NM00171 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00171
PRFSIZE  EQU   PRFSVFFO+2
PRFSTAT1 EQU   IEDQPRF+20
PRFTSMSG EQU   PRFSTAT1
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCRCD  EQU   IEDQPRF+29
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1FORM EQU   PRF1FLG1
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
PRF1RULN EQU   PRF1SEQP+2
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2SMI  EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBSTCHN EQU   IEDQQCB+9
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00179 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00179+1
QCBTSOF1 EQU   @NM00179+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBLGBAD EQU   QCBDCBAD
QCBFLAG  EQU   IEDQQCB+36
QCBTSSES EQU   QCBFLAG
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHTYPE  EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
TRHBB    EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHEFI   EQU   TTHBYTE0
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
IEDQTSI  EQU   0
TSIFLAG  EQU   IEDQTSI
TSIMSGEN EQU   IEDQTSI+44
TSIDYQCB EQU   IEDQTSI+52
TSIDYQFG EQU   TSIDYQCB
TSITSW   EQU   IEDQTSI+124
TSIGMAIN EQU   TSITSW+16
GMFLAG   EQU   TSIGMAIN
GMCODE   EQU   TSIGMAIN+1
IEDTTPTR EQU   0
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBSCHDR EQU   SCBCLSEG
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDSIBD  EQU   0
SIBCHAIN EQU   IEDSIBD+4
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBSSTAT EQU   SIBSESSN
SIBDSTAT EQU   SIBSESSN
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBFTERM EQU   SIBSTAT1
SIBBSTAT EQU   SIBSTAT1
SIBSTAT2 EQU   IEDSIBD+17
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBPEBI  EQU   SIBBIND1
SIBBIND2 EQU   SIBBIND+1
SIBBRACK EQU   SIBBIND2
SIBBIND3 EQU   SIBBIND+2
SIBFMODE EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBSTAT0 EQU   IEDSIBD+23
SIBCD    EQU   SIBSTAT0
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDQTNT  EQU   0
IEDXFMI  EQU   0
IEDBSM   EQU   0
RU       EQU   0
CMDBYTE  EQU   0
BDQCB    EQU   0
DSPCHAIN EQU   12
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPOST  EQU   24
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
IEDIAP05 EQU   0
QCBLDCB  EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBRHSV  EQU   LCBRSPIN+2
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBRSRH  EQU   LCBRSPFG
LCBCOREQ EQU   LCBTPCD
@NM00132 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
IEDNLPTR EQU   QCBLGBAD
IEDQSPTR EQU   LCBSCBA
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
PRFSHDR  EQU   IEDQPRF+42
SCBRGSAV EQU   SCBEND
TRMOPT   EQU   IEDQTRM+20
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00218 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00217 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00216 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
@NM00140 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00139 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00138 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00137 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00136 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00135 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00134 EQU   @NM00132+4
LCBNCPPT EQU   @NM00132+1
@NM00133 EQU   @NM00132
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00131 EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00130 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00129 EQU   LCBCSWU1
@NM00128 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBSNS0  EQU   LCBRSPIN+1
@NM00127 EQU   LCBRSPIN
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00215 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00214 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00213 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
SIBLUTYP EQU   SIBSTAT0
@NM00212 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
SIBTSPRO EQU   IEDSIBD+18
@NM00211 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBRTRP  EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBLGOFF EQU   SIBSESSN
SIBRUSEG EQU   IEDSIBD
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00210 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBCPMEN EQU   SCBCTLUN
@NM00209 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00208 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00207 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBDESTQ EQU   IEDQSCB+1
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
GMDEVCH  EQU   TSIGMAIN+40
GMTSSIZ  EQU   TSIGMAIN+38
GMTSCNT  EQU   TSIGMAIN+36
GMLNSPC  EQU   TSIGMAIN+34
GMTCSPC  EQU   TSIGMAIN+32
GMCRUNT  EQU   TSIGMAIN+28
GMCRBUF  EQU   TSIGMAIN+24
GMTCBUF  EQU   TSIGMAIN+20
GMTSBUF  EQU   TSIGMAIN+16
GMBFRS   EQU   TSIGMAIN+14
GMHBFR   EQU   TSIGMAIN+12
GMBFUNIT EQU   TSIGMAIN+10
GMBFSIZE EQU   TSIGMAIN+8
GMSATCT  EQU   TSIGMAIN+6
GMCARCT  EQU   TSIGMAIN+4
GMLNSZ   EQU   TSIGMAIN+3
GMLNNO   EQU   TSIGMAIN+2
@NM00206 EQU   GMCODE
GMTSO    EQU   GMCODE
GMLINE   EQU   GMCODE
GMTCAM   EQU   GMCODE
@NM00205 EQU   GMCODE
@NM00204 EQU   GMFLAG
GMFRMAT  EQU   GMFLAG
GMINIT   EQU   GMFLAG
GMENCIN  EQU   GMFLAG
GMENCON  EQU   GMFLAG
@NM00203 EQU   TSITSW
TSIAYO02 EQU   IEDQTSI+120
TSIAYO   EQU   IEDQTSI+116
TSIRNSCH EQU   IEDQTSI+112
TSI3705  EQU   IEDQTSI+108
TSI270X  EQU   IEDQTSI+104
TSI3270  EQU   IEDQTSI+100
TSITSDST EQU   IEDQTSI+96
TSIATTEN EQU   IEDQTSI+92
TSICPBC  EQU   IEDQTSI+88
TSICPBI  EQU   IEDQTSI+84
TSIDEST  EQU   IEDQTSI+80
@NM00202 EQU   IEDQTSI+64
TSIDYDLY EQU   IEDQTSI+60
TSIDYLNK EQU   IEDQTSI+57
TSIDYPRI EQU   IEDQTSI+56
@NM00201 EQU   TSIDYQCB+1
@NM00200 EQU   TSIDYQFG
TSIDYQB  EQU   TSIDYQFG
@NM00199 EQU   TSIDYQFG
TSIDYPOS EQU   TSIDYQFG
@NM00198 EQU   TSIDYQFG
TSIHALT  EQU   IEDQTSI+48
TSITSAP  EQU   IEDQTSI+40
TSITSBQ  EQU   IEDQTSI+36
TSIBUFQ  EQU   IEDQTSI+32
TSISCHED EQU   IEDQTSI+28
TSISIMAT EQU   IEDQTSI+24
TSIHANG  EQU   IEDQTSI+20
TSIEDIT  EQU   IEDQTSI+16
TSISTAE  EQU   IEDQTSI+12
TSINPUT  EQU   IEDQTSI+8
TSILINK  EQU   IEDQTSI+5
TSIPRI   EQU   IEDQTSI+4
TSIELCHN EQU   IEDQTSI+1
@NM00197 EQU   TSIFLAG
TSIQCB   EQU   TSIFLAG
@NM00196 EQU   TSIFLAG
TSIPOST  EQU   TSIFLAG
@NM00195 EQU   TSIFLAG
TTHTAG2  EQU   TTHTAG+1
@NM00194 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
@NM00193 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
@NM00192 EQU   TRHBYTE2
@NM00191 EQU   TRHBYTE2
@NM00190 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00189 EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00188 EQU   TRHBYTE1
@NM00187 EQU   TRHBYTE1
@NM00186 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00185 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHFI    EQU   TRHBYTE0
@NM00184 EQU   TRHBYTE0
QCBTTCIN EQU   QCBPLCBA+1
@NM00183 EQU   QCBPLCBA
@NM00182 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00181 EQU   QCBFHDTZ
@NM00180 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00179
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00178 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00177 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBELCHN EQU   IEDQQCB+1
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00176 EQU   IEDPF2+1
@NM00175 EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1TAG2 EQU   PRF1SQID+1
@NM00174 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00173 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00172 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00171+3
PRFSRCE  EQU   PRFSVFFO
PRFTI0   EQU   PRFTIC+1
@NM00170 EQU   PRFTICC
@NM00169 EQU   PRFTICC
@NM00168 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00167 EQU   PRFTICC
@NM00166 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00165 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
@NM00164 EQU   IEDPLBM+1
@NM00163 EQU   PLBMFLG1
PLBMSTAT EQU   PLBMFLG1
LGBIVLST EQU   IEDNLGB+60
LGBRESV4 EQU   LGBRESER+3
LGBRESV3 EQU   LGBRESER+2
LGBRESV2 EQU   LGBRESER+1
LGBRESV1 EQU   LGBRESER
LGBBUFSI EQU   IEDNLGB+54
@NM00162 EQU   IEDNLGB+53
LGBILCT  EQU   IEDNLGB+52
LGBSCTAD EQU   IEDNLGB+49
@NM00161 EQU   LGBOFLGS
LGBOPEN  EQU   LGBOFLGS
@NM00160 EQU   LGBOFLGS
LGBNAME  EQU   IEDNLGB+40
@NM00159 EQU   IEDNLGB+36
LGBTRANS EQU   IEDNLGB+33
@NM00158 EQU   IEDNLGB+32
@NM00157 EQU   IEDNLGB+31
LGBOPACE EQU   IEDNLGB+30
@NM00156 EQU   LGBBYTE
LGBPACK  EQU   LGBBYTE
LGBBUFMA EQU   IEDNLGB+28
LGBDSORG EQU   IEDNLGB+26
@NM00155 EQU   LGBPCI
@NM00154 EQU   LGBPCI
LGBPCINO EQU   LGBPCI
@NM00153 EQU   LGBPCI
LGBPCIAO EQU   LGBPCI
@NM00152 EQU   LGBPCI
@NM00151 EQU   LGBPCI
@NM00150 EQU   LGBPCI
@NM00149 EQU   IEDNLGB+24
LGBMHA   EQU   IEDNLGB+21
@NM00148 EQU   LGBBUFOU
LGBPREF  EQU   LGBBUFOU
@NM00147 EQU   LGBBUFOU
LGBSUBST EQU   IEDNLGB+18
LGBTYPE  EQU   IEDNLGB+17
@NM00146 EQU   IEDNLGB
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00145 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00144 EQU   LCBXFLAG
@NM00143 EQU   LCBXFLAG
@NM00142 EQU   LCBXFLAG
@NM00141 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00126 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00125 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00124 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
LCBTTCIN EQU   IEDQLCB+90
@NM00123 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
@NM00122 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
@NM00118 EQU   LCBTSTSW
@NM00117 EQU   LCBTSTSW
@NM00116 EQU   LCBTSTSW
@NM00115 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRCLLN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00114 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
LCBRESTR EQU   LCBRCQCB
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00113 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00112 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00111 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00110 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00109 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00108 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00107 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00106 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00105 EQU   LCBINSRC
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBPRI   EQU   LCBRCB+4
LCBQCBA  EQU   LCBRCB+1
LCBKEY   EQU   LCBRCB
SAVTBITN EQU   IEDNSVTD+312
@NM00104 EQU   SAVTCKQB+8
@NM00103 EQU   SAVTCKEC+1
@NM00102 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00101 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00100 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00099 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00098 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00097 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00096 EQU   IEDNSVTD+136
@NM00095 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00094 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00093 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00092 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00091 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00090 EQU   IEDQAVTD+1170
@NM00089 EQU   IEDQAVTD+1169
@NM00088 EQU   IEDQAVTD+1168
@NM00087 EQU   IEDQAVTD+1165
@NM00086 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00084 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00083 EQU   IEDQAVTD+1068
@NM00082 EQU   IEDQAVTD+1065
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00073 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00072 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00071 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTSTEAL EQU   IEDQAVTD+988
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTKEYLE EQU   IEDQAVTD+960
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00068 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00067 EQU   IEDQAVTD+878
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00052 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00051 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00050 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00049 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00048 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00047 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+724
@NM00039 EQU   IEDQAVTD+712
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00038 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00037 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00022 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00020 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00014 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+312
AVTREADD EQU   IEDQAVTD+308
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00446 EQU   @RC00441
@RF00522 EQU   @RC00518
@RC00524 EQU   @RC00518
@RC00598 EQU   @RC00596
@RC00617 EQU   @RC00596
@RF00641 EQU   @RC00596
@RC00643 EQU   @RC00596
@RF00661 EQU   @RC00594
@RF00679 EQU   @EL00006
@RT00681 EQU   @EL00006
@PB00009 EQU   @EL00001
@RC00448 EQU   @RC00446
@RC00600 EQU   @RC00598
@RC00619 EQU   @RC00617
@RC00622 EQU   @RC00617
@PB00008 EQU   @PB00009
@RC00602 EQU   @RC00600
@RC00605 EQU   @RC00600
@PB00007 EQU   @PB00008
@RC00607 EQU   @RC00605
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEDDFOUT,(C'PLS2028',0701,77187)
