QNK      TITLE 'IEDQNK-BUILD ENVIRONMENT CHECKPOINT RECORD(S)'
IEDQNK   CSECT
         SPACE 3
*A000000-999999                                                @Y16X5C0
**************************** MICROFICHE FLAGS *************** SUPT CODE
*A576400-577600                                                 SA51078
*C226000,496000-498000                                          SA53610
*A697200,906000                                                  A47151
*C226000,700000-722000                                           A47151
*D210000                                                         A47151
*A736300-737500,906200-906400                                   SA57661
*A210000,612100-612300,905500                                   SA56611
*A789230-789350                                                 SA59171
*C016000,504000,529120,768000                                    S22024
*A616200-617400                                                  S22024
*A516001-516002,520001                                          SA59179
*A526000,592840,925500                                          SA58453
*C696330-696350                                                  Y06328
*A907600                                                         Y06328
*C526180                                                        SA66372
*C504000                                                        SA67099
*A509236                                                        SA67099
*A700000                                                       @XA05305
*C528720-528760                                                @YA05454
*A527350                                                       @SA75469
*C504000,596000,486000                                         @Y17XACT
*A529840,598000,692000,202000,517200,528160,896000,486000,     @Y17XACT
*A907600                                                       @Y17XACT
*D509536,616200-617400,696120-696390                           @Y17XACT
*A788400,788600                                                @Y17XACA
*C788600,788800,789000,789230,789320,789400,789600             @Y17XACA
*A320000,501000,504000,501700-503100,594000,782000,786500      @OX16402
*D468000-470000                                                @OX16402
*D529760-586000 COPIED TO STMT 501700                          @OX16402
*C502000,502300,502400-502450,528240                           @OX16402
*A906400                                                       @OZ26495
*C528240,529720                                                @OZ26495
*A539720,541720,545720,547720                                  @OZ30950
*C540720-541220,546720-547220                                  @OZ30950
***********************************************************************
*                                                                     *
*MODULE-NAME=IEDQNK (TCAM,CHECKPOINT/RESTART)                  @Y17XACT
*                                                                     *
*DESCRIPTIVE-NAME=BUILD ENVIRONMENT CHECKPOINT RECORDS                *
*                                                                     *
*COPYRIGHT='NONE'                                                     *
*                                                                     *
*STATUS -- VERSION 10.0                                        @Y17XACT
*                                                                     *
*FUNCTION:THIS MODULE BUILDS AN ENVIRONMENT DISK RECORD SEGMENT(S). IT*
*   DETERMINES WHETHER IT IS TO BUILD THE FIRST SEGMENT OF AN ENVIRON-*
*   MENT CHECKPOINT OR A SUBSEQUENT SEGMENT BY CHECKING THE CURRENT   *
*   EXCP SLOT (CKPEXCP); IF IT CONTAINS A POINTER TO AN ENVIRONMENT   *
*   TYPE RECORD WHICH IS TO BE CONTINUED(THE KEY FIELD CONTAINS X'20')*
*   THIS MODULE PICKS UP ITS REGISTERS FROM CKPSAVE1 AND BUILDS THE   *
*   NEXT SEGMENT IN THE GETMAIN AREA POINTED TO BY CKPEXCP. OTHERWISE *
*   IT ISSUES A GETMAIN AND PUTS ITS ADDRESS IN CKPLDRB (LAST DISK    *
*   RECORD BUILT). BEFORE MOVING A GROUP OF INFORMATION FROM THE MCP  *
*   TABLES TO THE DISK RECORD,THIS MODULE CHECKS TO SEE IF THERE IS   *
*   ROOM FOR IT IN THIS RECORD SEGMENT. IF NOT,IT PUTS X'20' IN THE   *
*   KEY FIELD,SAVES ITS REGISTERS IN CKPSAVE1,AND RETURNS TO THE      *
*   CHEKCPOINT EXECUTOR. IF IT REACHES THE END OF THE MCP TABLES      *
*   BEFORE IT REACHES THE END OF THE RECORD SEGMENT,IT PUTS X'1C' IN  *
*   THE KEY FIELD AND RETURNS TO THE CHECKPOINT EXECUTOR WITHOUT      *
*   SAVING ITS REGISTERS. IF IT JUST BUILT THE FIRST (OR ONLY) SEG.   *
*   MENT,IT RETURNS TO THE EXECUTOR WITH THE OFFSET OF THE CHECKPOINT *
*   I/O QUEUE MANAGER;IF IT JUST BUILT ANY OTHER SEGMENT IT RETURNS   *
*   WITH THE OFFSET OF THE CHECKPOINT I/O ROUTINE.(ONLY THE FIRST     *
*   SEGMENT IS ENQUEUED ON THE DISK I/O SUEUE.)                       *
*   WHEN THIS MODULE BEGINS TO BUILD A FIRST SEGMENT,IT TURNS OFF ALL *
*   REQUEST BITS IN THE ENVIRONMENT REQUEST ELEMENT(AVTCKELE) AND     *
*   TURNS ON THE CHECKPOINT IN PROGRESS FLAG IN THE REQUEST ELEMENT.  *
*   ANY SUBSEQUEST SETTINGS OF REQUEST BITS WILL CAUSE ANOTHER        *
*   ENVIRONMENT CHECKPOINT TO BE TAKEN.                               *
*                                                              @Y17XACT
*NOTES: SEE BELOW                                              @Y17XACT
*                                                              @Y17XACT
*    DEPENDENCIES = EBCDIC CHARACTER CODE DEPENDENCY           @Y17XACT
*                   CORRECTABLE BY REASSEMBLY                  @Y17XACT
*                                                              @Y17XACT
*    RESTRICTIONS = NONE                                       @Y17XACT
*                                                              @Y17XACT
*    REGISTER CONVENTIONS = SEE REGISTER ASSIGNMENTS           @Y17XACT
*                                                              @Y17XACT
*    PATCH LABEL = NONE                                        @Y17XACT
*                                                              @Y17XACT
*MODULE TYPE = PROCEDURE                                       @Y17XACT
*                                                              @Y17XACT
*    PROCESSOR = ASSEMBLER XF                                  @Y17XACT
*                                                              @Y17XACT
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY              @Y17XACT
*                                                              @Y17XACT
*    ATTRIBUTES = REENTERABLE                                  @Y17XACT
*                                                                     *
*ENTRY POINT = IEDQNK                                          @Y17XACT
*                                                                     *
*    PURPOSE = SEE FUNCTION                                    @Y17XACT
*                                                              @Y17XACT
*    LINKAGE = AT ENTRY,REG 15 CONTAINS ENTRY POINT ADDRESS    @Y17XACT
*                                                                     *
*INPUT:REGISTERS 2,3,9,12,14,15 CONTAIN THE FOLLOWING VALUES:         *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORKAREA                                  *
*   3-ADDRESS OF REQUEST ELEMENT                                      *
*   9-ADDRESS OF AVT                                                  *
*   12-BASE REGISTER FOR CHECKPOINT EXECUTOR-IEDQNF                   *
*   14-RETURN ADDRESS-IN IEDQNF                                       *
*   15-ENTRY POINT OF THIS MODULE                                     *
*                                                                     *
*OUTPUT:THE ABOVE REGISTERS 2-14 ARE UNCHANGED. THIS MODULE BUILDS AN *
*   ENVIRONMENT DISK RECORD SEGMENT IN A GETMAIN AREA POINTED TO BY   *
*   CKPEXCP OR CKPLDRB (SEE FUNCTIONS)                                *
*                                                                     *
*EXITS-NORMAL:THIS MODULE RETURNS TO THE ADDRESS IN REGISTER 14 WITH  *
*   THE OFFSET OF EITHER THE I/O QUEUE MANAGER OR THE I/O ROUTINE IN  *
*   REGISTER 15.(SEE FUNCTIONS)                                       *
*                                                                     *
*EXITS-ERROR:THIS MODULE RETURNS TO THE ADDRESS IN REGISTER 14 WITH   *
*   THE OFFSET OF THE NO CORE ROUTINE IN REGISTER 15.                 *
*                                                                     *
*EXTERNAL REFERENCES = SEE BELOW                               @Y17XACT
*                                                              @Y17XACT
*    ROUTINES = NONE                                           @Y17XACT
*                                                              @Y17XACT
*    DATA AREAS = INVITATION LIST,CHECKPOINT WORKAREA          @Y17XACT
*                 CHECKPOINT REQUEST ELEMENT, READ AHEAD       @Y17XACT
*                 QUEUE (FOR TPROCESS ENTRY ONLY)              @Y17XACT
*                                                              @Y17XACT
*    CONTROL BLOCKS = AVT,DCB,DEB,LCB,QCB,TERMINAL ENTRY       @Y17XACT
*                                                              @Y17XACT
*TABLES = OPTION TABLE, TERMNAME TABLE                         @Y17XACT
*                                                              @Y17XACT
*MACROS = GETMAIN, IEDHJN                                      @Y17XACT
*                                                              @Y17XACT
***********************************************************************
         EJECT
         SPACE 3
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0                        REG ZERO                 S22024
R1       EQU   1                        INDEX-TERMNAME TABLE
R2       EQU   2                        ADDRESS OF CKPT WORK AREA
R3       EQU   3                        ADDRESS OF REQUEST ELEMENT
R4       EQU   4                        ADDRESS OF DISK RECORD
R5       EQU   5                        LENGTH-TERMNAME
R6       EQU   6                        ADDRESS OF TERMNAME ENTRY
R7       EQU   7                        ADDRESS OF QCB
R8       EQU   8                        ADDRESS OF TERM ENTRY
RAVT     EQU   9                        ADDRESS OF AVT
R10      EQU   10                       POSITION IN DISK RECORD
R11      EQU   11                       LENGTH FOR GETMAIN
R12      EQU   12                       BASE REG FOR IEDQNF
R13      EQU   13                       BRANCH REG
R14      EQU   14                       RETURN REG-IN IEDQNF
R15      EQU   15                       ENTRY POINT FOR THIS MODULE
         SPACE
ONE      EQU   1                        ONE                    @Y17XACT
QNKMOVEL EQU   X'100'                   MAX LENGTH FOR EXECUTE     0725
QNKSTOP  EQU   X'01'                    BIT INDICATES LINE STOPPED 0728X
                                        PRIOR TO CLOSEDOWN         0728
         SPACE 3
         USING *,R15                    BASE REG
         USING IEDQAVTD,RAVT            BASE FOR AVT
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA
         SPACE
IEDQNK   IEDHJN  QNK00                                          SA56611
         USING IEDQCRED,R3              BASE FOR REQUEST ELEMENT
         USING IEDQCDRD,R4              BASE FOR DISK RECORD
         SPACE
         LH    R11,CKPBPERR             LENGTH OF ENVIRONMENT SEG
         LR    R10,R11                  SAVE TOTAL LENGTH FOR GETMN1130
         LA    R0,CDRTINFO              LENGTH OF CON TROL DATA    1201
         SR    R11,R0                   SUBTRACT LEN FROM RCD LEN  1201
         L     R4,CKPEXCP               CURRENT EXCP RCD
         LTR   R4,R4                    CHECK FOR NO RCD BEING         X
                                        WRITTEN CURRENTLY
         BZ    QNK30                    BRANCH IF 1ST SEGMENT
         CLI   CDRKEY,CDRTOTLC          CHECK FOR ENV RCD WHICH IS     X
                                        CONTINUED
         BNE   QNK30                    BRANCH IF 1ST SEG OF ENV
         SPACE 3
*THIS IS A CONTINUATION OF AN ENV CKPT
         SPACE
         LM    R13,R14,CKPSAVE1+8       RESTORE REGS
         LM    R0,R8,CKPSAVE1+20        RESTORE REGS               1109
         LA    R10,CDRDATA              ADDRESS OF DATA PORTION
         B     0(R13,R15)               LOOP POSITION AT END OF SEG
         SPACE 3
*THIS IS THE FIRST SEGMENT OF AN ENVIRONMENT CKPT. ISSUE GETMAIN
         SPACE
QNK30    EQU   *
         LA    R6,CKPLDRB               ADDRESS OF ADDR LOCATION
         LR    R7,R15                   SAVE REG
         GETMAIN EC,LV=(R10),A=(R6),MF=(E,CKPGETML) AREA FOR RCD   1130
         SPACE
         LTR   R15,R15                  CHECK RETURN CODE
         LR    R15,R7                   RESTORE REG
         BZ    QNK35                    BRANCH IF REQUEST SATISFIED
         SPACE 3
*THERE IS INSUFFICIENT CORE FOR THIS RECORD. RETURN TO CKPT
*EXECUTOR WITH THE OFFSET OF THE NO CORE MODULE.
         SPACE
         LA    R15,CKPNOCOR             OFFSET
         BR    R14                      RETURN TO EXECUTRO
         SPACE 3
*BUILD FIRST SEGMENT OF ENVIRONMENT CHECKPOINT
         SPACE
QNK35    EQU   *
         L     R4,CKPLDRB               ADDRESS OF GETMAIN RCD
         LA    R10,CDRDATA              POSITION IN RCD OF DATA
         OI    AVTCKELF,AVTCPIPN        TURN ON CKPT IN PROGRESS
         NI    AVTCKELF,X'FF'-AVTCRTLN  TURN OFF REQUEST BIT
         NI    CKPFLAGS,AVTEFF-CKPOPNEN   SET FOR QCB SCAN     @OX16402
         XI    CKPSWCH1,CKPSET1         INITIALIZE QCB SWITCH  @OX16402
         SPACE 3
*INITIALIZE FOR LOOP THROUGH TERMNAME TABLE
         SPACE
QNK47     EQU  *
         USING IEDQTNTD,R6
         L     R6,AVTRNMPT              ADDRESS OF TERMNAME TABLE
         SR    R5,R5                    CLEAR
         IC    R5,TNTENLEN              LENGTH OF TERMNAME
         LH    R1,TNTLEN                COUNT OF ENTRIES
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         LA    R6,TNTFIRST              GET FIRST ENTRY
         SPACE 3
*BEGINNING OF LOOP THROUGH TERMNAME TABLE
         SPACE
QNK50    EQU   *
         AR    R6,R5                    MOVE PAST NAME FIELD
         MVC   CKPTRMAD+1(3),0(R6)      MOVE ADDR TO WORD BOUNDARY
         L     R8,CKPTRMAD              LOAD RERMINAL TABLE ADDRESS
         USING IEDNTRM,R8               BASE FOR TERM ENTRY    @Y17XACT
         SH    R8,TRMBCKUP              PT TO NEG PRFIX        @Y17XACT
         SPACE 3
*CHECK TYPE OF TERMINAL ENTRY-SKIP CASCADE OR DISTRIBUTION LISTS.
*MOVE TERMINAL AND QCB INFO TO DISK RECORD
         SPACE
         TM    TRMDSORG,TRMLGB          IS THIS LINE GROUP ENTRY S22024
         BO    QNK65                    YES, DO NOT CHECKPOINT   S22024
         TM    TRMSTATE,TRMLIST         IS THE LIST BIT ON      SA53610
         BNO   QNK5002                  IF NOT, CKPT THIS ENTRY SA53610
         TM    TRMSTATE,TRMLOG          IS THIS LOGTYPE         SA53610
         BNO   QNK65                    IF NOT, DO NOT CKPT     SA53610
         SPACE
QNK5002  EQU   *                                                SA53610
         TM    CKPFLAGS,CKPOPNEN        TERMINAL SCAN          @OX16402
         BO    QNK60A                   YES, SKIP QCB SCAN     @OX16402
         SPACE 3                                               @OX16402
*CHECKPOINT MASTER QCB FIELDS
         SPACE
QNK55    EQU   *                                                   1109
         TM    TRMSTATE,TRMLOG          PROCESS OR LOG TYPE    @Y17XACT
         BM    QNK5501                  YES, NOT 3705 ENTRY    @Y17XACT
         TM    TRMSTATE,TRMPREF         3705 TTE               @Y17XACT
         BNO   QNK5501                  NO,DONT DO SSCP CHECK  @Y17XACT
         CLI   TRMTYPE,TRMSSCP             SSCP ENTRY          @Y17XACT
         BE    QNK65                    YES,NO VALID QCB       @Y17XACT
QNK5501  EQU   *                                               @Y17XACT
         USING IEDQQCB,R7               MASTER QCB BASE         SA58453
         L     R7,TRMDESTQ-1            ADDRESS OF MASTER QCB      1106
         TM    QCBDSFLG,QCBDISK         CHECK QUEUE TYPE           1116
         BZ    QNK65                    BRANCH IF CORE ONLY    @OX16402
         MVC   CKPSAVE1(1),QCBFLAG
         NI    CKPSAVE1,QCBCKPT         CLEAR ALL BUT CKPT BIT
         CLC   CKPSAVE1(1),CKPSWCH1     COMPARE SWITCHES
         BE    QNK65                    BRANCH IF ALREADY CKPOINTED
         XI    QCBFLAG,QCBCKPT          INVERT QCB SWITCH
         LA    R0,CKPMQBLN              LENGTH OF MASTER QCB FIEDLS
         BAL   R13,QNK90                CHECK FOR END OF RECORD
         MVI   0(R10),CKPQDELM          MOVE IN QCB DELIMITER  @OX16402
         MVC   ONE(CKPMCTLN,R10),QCBMSGCT  MOVE MSG COUNT      @OX16402
         MVC   CKPMCTLN+ONE(CKPQBKLN,R10),QCBQBACK  MOVE QBACK @OX16402
*                                         TTR                  @OX16402
         AR    R10,R0                   MOVE TO NEXT DISK POSITION
         SPACE 3
*BEGINNING OF LOOP THROUGH PRIORITY LEVEL QCBS
         SPACE
QNK60    EQU   *
         LA    R0,CKPQCBLN              LENGTH OF DISK POINTERS
         BAL   R13,QNK90                CHECK FOR END OF RECORD
         MVC   0(CKPQCBLN,R10),QCBDNHDR MOVE DISK PTRS
         AR    R10,R0                   MOVE TO NEXT DISK POSITION
         LA    R0,CKPQBKLN              LENGTH OF QBACK POINTER SA51078
         BAL   R13,QNK90                CHECK FOR END OF RECORD SA51078
         MVC   0(CKPQBKLN,R10),QCBPQBCK SET QBACK POINTER       SA51078
         AR    R10,R0                   SET NEXT POSITION       SA51078
         CLI   QCBPRIPQ,0               CHECK FOR 0 PRIORITY
         LA    R7,QCBPSIZE(0,R7)        MOVE TO NEXT PRIORITY QCB
         BNZ   QNK60                    BRANCH IF NOT LAST QCB
         SPACE
*END OF LOOP THROUGH PRIORITY LEVEL QCBS
         B     QNK65                    CHECK NEXT TNT ENTRY   @OX16402
         SPACE 3                                               @OX16402
* THE FOLLOWING INSTRUCTIONS HAVE BEEN MOVED TO UPDATE THE     @OX16402
* QCB FIELDS BEFORE THE TERMINAL ENTRY FIELDS. THIS IS FOR     @OX16402
* RESTART SO THAT IT CAN BE SURE THAT THE SEQUENCE NUMBER HAS  @OX16402
* BEEN UPDATED TO WHAT THE DISK POINTERS INDICATE.             @OX16402
QNK60A   EQU   *                                               @OX16402
         LA    R0,CKPTRMLN+CKPDELLN            LENGTH INCREMENT@ZM47916
         BAL   R13,QNK90                CHECK FOR END OF RECORD
         MVI   0(R10),CKPDELMT          TERMINAL ENTRY DELIMITER   0422
         MVC   CKPDELLN(CKPTRMLN,R10),TRMSTATE    MOVE STATUS BYTE 0218
         AR    R10,R0                   MOVE TO NEXT DISK POSITION
         USING IEDQQCB,R7               BASE FOR QCB
         L     R7,TRMDESTQ-1            ADDRESS OF QCB
         TM    TRMSTATE,TRMLOG          PROCESS ENTRY           SA59179
         BM    QNK5003                  YES,SAVE FIELDS         SA59179
         TM    TRMSTATE,TRMPREF         NEG PREFIX EXIST       @Y17XACT
         BO    QNK5002A                 YES,BRANCH             @Y17XACT
         TM    TRMSTATE,TRMSNGLE        SINGLE ENTRY           @Y17XACT
         BNZ   QNK5002B                 NO, BRANCH             @Y17XACT
         LA    R0,CKPSENSE              LENGTH OF TRMSENSE     @Y17XACT
         BAL   R13,QNK90                CHECK FOR END OF REC   @Y17XACT
         MVC   0(CKPSENSE,R10),TRMSENSE                        @Y17XACT
*                                       CHECKPOINT TRMSENSE    @Y17XACT
         AR    R10,R0                   BUMP RECORD POINTER    @Y17XACT
         B     QNK5002B                 NOT 3705               @Y17XACT
QNK5002A EQU   *                                               @Y17XACT
         CLI   TRMTYPE,TRMLUNT             LU TYPE             @Y17XACT
         BE    QNK5002B                                        @Y17XACT
         CLI   TRMTYPE,TRMPSNA              PRESNA TERM        @Y17XACT
         BE    QNK5002B                                        @Y17XACT
         CLI   TRMTYPE,TRMCTERM             CTERM TYPE         @Y17XACT
         BNE   QNK5005A                                        @Y17XACT
QNK5002B EQU   *                                               @Y17XACT
         TM    QCBDSFLG,QCBDISK         CHECK FOR DISK QUEUES
         BZ    QNK5005                  BRANCH IF CORE ONLY        1116
QNK5003  EQU   *                                                SA59179
         LA    R0,CKPSEQLN              LENGTH OF SEQUENCE NO
         BAL   R13,QNK90                CHECK FOR END OF RCD
         MVC   0(CKPSEQLN,R10),TRMINSEQ
         TM    TRMSTATE,TRMLOG          VERIFY PROCESS ENTRY    SA58453
         BNM   QNK5004                  BRANCH IF NOT PROCESS   SA66372
         CLI   QCBDSFLG,QCBFQCB         PUT PROCESS ENTRY       SA66372
         BE    QNK5004                  BRANCH IF YES           SA66372
         NC    TRMSTAT+1(2),TRMSTAT+1   PEWA ALLOCATED          SA58453
         BZ    QNK5004                  BRANCH IF NO            SA58453
         DROP  R7
         USING IEDQPEWA,R7              BASE FOR PEWA           SA58453
         L     R7,TRMSTAT               PEWA ADDRESS            SA58453
         NC    EOMSAVE+1(2),EOMSAVE+1   EOM SAVED               SA58453
         BZ    QNK50021                 BRANCH IF NO            SA58453
         L     R13,EOMSAVE              BUFFER ADDRESS          SA58453
         B     QNK50022                 SET SEQUENCE OUT        SA58453
QNK50021 EQU   *                                                SA58453
         CLC   PERAQCB+1(3),AVTDELAD+1  READ AHEAD Q EMPTY      SA58453
         BE    QNK5004                  BRANCH IF YES           SA58453
         L     R13,PERAQCB             BUFFER ADDRESS           SA58453
         TM    PRFSTAT1-IEDQPRF(R13),PRFDUPLN RETRIEVED BUFFER @SA75469
         BNO   QNK50022                 BRANCH IF NO           @SA75469
         CLC   PERAQCB+5(3),AVTDELAD+1  REGULAR BUFFER SAVED AC@SA75469
*                                       ACROSS RETRIEVE        @SA75469
         BE    QNK5004                  BRANCH IF NO           @SA75469
         L     R13,PERAQCB+4            BUFFER ADDRESS         @SA75469
         DROP  R7
QNK50022 EQU   *                                                SA58453
         MVC   2(CKPSEQLN-2,R10),PRFTQBCK+1-IEDQPRF(R13)        SA58453
*                                       SET CORRECT NUMBER      SA58453
         AR    R10,R0                   BUMP REC PTR           @Y17XACT
         B     QNK5005B                 GO PROC OPTIONS        @Y17XACT
QNK5004  EQU   *                                                SA58453
         AR    R10,R0
         SPACE 3
*SAVE NEW 3705 TTE FIELDS                                      @Y17XACT
         SPACE
QNK5005  EQU   *                         *                         1116
         TM    TRMSTATE,TRMPREF         NEG PREFIX *           @Y17XACT
         BNO   QNK5005B                 BR IF NOT *            @Y17XACT
QNK5005A EQU   *                        *                      @Y17XACT
         LA    R0,CKPNRSZ               LENGTH OF DATA *       @Y17XACT
         BAL   R13,QNK90                CHECK FOR END OF REC*  @Y17XACT
         USING CKPNRES,R10              USE CHECKPOINT DSECT*  @Y17XACT
         MVC   CKPSUBST,TRMSUBST             SAVE TRMSUBST*    @Y17XACT
         MVC   CKPCOHRT,TRMCOHRT             SAVE TRMCOHORT *  @Y17XACT
         MVI   CKPNFLG,X'00'            CLEAR FLAG *           @Y17XACT
         TM    TRMBYTE2,TRMREMB             REMB BIT SET *     @Y17XACT
         BNO   AROUND                   NO ,DONT SAVE*         @Y17XACT
         OI    CKPNFLG,CKPREMB          SAVE REMB BIT *        @Y17XACT
AROUND   EQU   *                        *                      @Y17XACT
         TM    TRMBYTE2,TRMRSACT              ACTIVE BIT SET*  @Y17XACT
         BNO   AROUND1                  NOT SET, DONT SAVE *   @Y17XACT
         OI    CKPNFLG,CKPRSACT         SAVE ACTIVE FLAG*      @Y17XACT
AROUND1  EQU   *                         *                     @Y17XACT
         TM    TRMSTATE,TRMLINE         TTE FOR LINE *         @Y17XACT
         BNO   AROUND2                  NO,DONT CHECK EPMODE*  @Y17XACT
         TM    TRMLINK,TRMEPMOD             EP MOD SET*        @Y17XACT
         BNO   AROUND2                  NO, DONT SAVE *        @Y17XACT
         OI    CKPNFLG,CKPEPMOD         SAVE EPMOD FLAG*       @Y17XACT
AROUND2  EQU   *                        *                      @Y17XACT
         CLI   TRMTYPE,TRMLUNT          TTE FOR LU*            @Y17XACT
         BNE   AROUND3                  NO, DONT CHECK TRMLU*  @Y17XACT
         TM    TRMLU,TRMLULOG             LULOG SET            @Y17XACT
         BNO   AROUND3                  NO, DONT SAVE          @Y17XACT
         OI    CKPNFLG,CKPLULOG         SAVE LU LOG BIT        @Y17XACT
AROUND3  EQU   *                                               @Y17XACT
         MVC   CKPTYPE,TRMTYPE             SAVE TRMTYPE        @Y17XACT
         AR    R10,R0                   GET NEXT DISK POSTION  @Y17XACT
         DROP  R10                                             @Y17XACT
QNK5005B EQU   *                                               @Y17XACT
         SPACE
* SAVE OPTIONS FIELDS EXCEPTS THOSE DEFINED AS ADDRESSES       @Y17XACT
         SPACE
         TM    TRMSTATE,TRMOPTFN        CHECK FOR OPTIONS DEFINED  1109
         BZ    QNK61                    BRANCH IF NOT USED     @OZ26495
         XC    CKPSAVE1+68(4),CKPSAVE1+68  CLEAR OPTION COUNT      1109
         L     R7,AVTOPTPT              ADDRESS OF OPTION TABLE    1109
         L     R3,4(,R7)                ADDR OF OPTION CHARACT TBL 1109
         SPACE 3
*BEGINNING OF LOOP THROUGH COUNT OF OPTION FIELDS FOR THIS TERMINAL1109
         SPACE
QNK51    EQU   *                                                   1109
         L     R13,CKPSAVE1+68          INDEX TO OPTION FIELD      1109
         IC    R13,TRMOPT(R13)          OFFSET                     1106
         CH    R13,QNKNOPT              CHECK FOR UNUSED ENTRY     1109
         BE    QNK54                    BRANCH IF NOT USED         1109
         LH    R7,TRMOPTBL              GET ENTRY OFFSET       @YA05454
         N     R7,AVTCLRHI              CLEAR HI HALF          @YA05454
         A     R7,AVTOPTPT              ADD OPT TBL OFFSET     @YA05454
         AR    R7,R13                   ADDR OF OPTION FIELD       1109
         IC    R13,0(R3)                LENGTH OF FIELD            1116
         CLI   1(R3),X'D0'              CHECK OPTION TYPE          1116
         BH    QNK52                    BRANCH IF  NOT ADDRESS TYPE1109
         CLI   1(R3),X'80'              CHECK OPTION TYPE          1116
         BH    QNK54                    BRANCH IF ADDRESS          1109
QNK52    EQU   *                                                   1109
         LA    R0,1(,R13)               LENGTH OF OPTION FIELD     1109
         BC    0,*                      NO-OP FOR RETURN BRANCH    1109
         BAL   R13,QNK90                CHECK FOR END OF RECORD SEG1106
         LR    R13,R0                   GET LENGTH                 1109
         BCTR  R13,0                    SUBTRACT 1 FOR EXECUTE     1106
         EX    R13,QNKMOVE              MOVE OPTION FIELD TO RCD   1106
         AR    R10,R0                   ADD LENGTH TO RCD POSITION 1106
QNK54    EQU   *                                                   1106
         LA    R3,CKPOPLTL(,R3)         GET NEXT ENTRY IN OP T CHAR1109
         L     R13,CKPSAVE1+68          GET INDEX                  1109
         LA    R13,1(,R13)              ADD 1 TO INDEX             1109
         ST    R13,CKPSAVE1+68          RESTORE INDEX              1109
         CLC   CKPSAVE1+71(1),TRMOPNO   CHEKC FOR END OF OPTION S  1109
         BNE   QNK51                    BRANCH IF NOT END OF OPT FI1109
         SPACE
*END OF LOOP THROUGH OPTION FIELDS FOR THIS TERMINAL ENTRY         1109
         SPACE 3                                               @OZ26495
QNK61    EQU   *                                               @OZ26495
         TM    TRMDEVFL,X60             DIAL DIGITS/ADDR CHAR? @OZ26495
         BZ    QNK62                    NO, BRANCH             @OZ26495
         SR    R13,R13                  CLEAR REG              @OZ26495
         TM    TRMSTATE,TRMOPTFN        OPTIONS SPECIFIED      @OZ26495
         BNO   NOOPTS                   NO, BRANCH             @OZ26495
         LA    R7,TRMOPT                START OF OPTIONS       @OZ26495
         IC    R13,TRMOPNO              NUMBER OF OPTIONS      @OZ26495
         AR    R7,R13                   START OF DEVICE FIELDS @OZ26495
         B     CKBUF                    CHECK BUFSIZE          @OZ26495
NOOPTS   EQU   *                                               @OZ26495
         LA    R7,TRMOPNO               START OF DEVICE FIELDS @OZ26495
CKBUF    EQU   *                                               @OZ26495
         TM    TRMDEVFL,X80             BUFSIZE SPECIFIED      @OZ26495
         BNO   CKDIAL                   NO, BRANCH             @OZ26495
         IC    R13,0(R7)                LENGTH OF BUFSIZE      @OZ26495
         LA    R7,ONE(R13,R7)           BUMP PAST BUFSIZE      @OZ26495
CKDIAL   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X40             DIAL DIGITS SPECIFIED  @OZ26495
         BNO   CKADDR                   NO, BRANCH             @OZ26495
         LA    R0,ONE                   SIZE OF LENGTH BYTE    @OZ30950
         BC    0,*                      NO-OP FOR RETURN BRANCH@OZ30950
         BAL   R13,QNK90                CHECK END OF RCD SEG   @OZ30950
         LA    R13,ONE                  LENGTH BYTE            @OZ30950
         BCTR  R13,0                    SUBTRACT FOR EXECUTE   @OZ30950
         EX    R13,QNKMOVE              MOVE LENGTH BYTE       @OZ30950
         LA    R10,ONE(R10)             ADJUST RECORD POSITION @OZ30950
         IC    R13,0(R7)                LENGTH OF DIAL DIGITS  @OZ26495
         LR    R0,R13                   LENGTH TO BE MOVED     @OZ30950
         B     DIALSKIP                 SKIP NEXT INSTRUCTION  @OZ30950
         B     CKDIAL                   START OVER IF NOT      @OZ30950
*                                        ENOUGH SPACE          @OZ30950
DIALSKIP EQU   *                                               @OZ30950
         BAL   R13,QNK90                CHECK - END OF RCD SEG @OZ26495
         LA    R7,ONE(R7)               BUMP PAST LEN PTR      @OZ30950
         LR    R13,R0                   LENGTH TO BE MOVED     @OZ26495
         BCTR  R13,0                    SUBTRACT 1 FOR EXECUTE @OZ26495
         EX    R13,QNKMOVE              MOVE DIAL DIGITS       @OZ26495
         AR    R10,R0                   ADJUST RECORD POSITION @OZ26495
         LA    R7,ONE(R13,R7)           BUMP PAST DIAL DIGITS  @OZ26495
CKADDR   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X20             ADDR CHAR SPECIFIED    @OZ26495
         BNO   QNK62                    NO, BRANCH             @OZ26495
         LA    R0,ONE                   SIZE OF LENGTH BYTE    @OZ30950
         BC    0,*                      NO-OP FOR RETURN BRANCH@OZ30950
         BAL   R13,QNK90                CHECK END OF RCD SEG   @OZ30950
         LA    R13,ONE                  LENGTH BYTE            @OZ30950
         BCTR  R13,0                    SUBTRACT FOR EXECUTE   @OZ30950
         EX    R13,QNKMOVE              MOVE LENGTH BYTE       @OZ30950
         LA    R10,ONE(R10)             ADJUST RECORD POSITION @OZ30950
         IC    R13,0(R7)                LENGTH OF ADDR CHAR    @OZ26495
         LR    R0,R13                   LENGTH TO BE MOVED     @OZ30950
         B     ADDRSKIP                 SKIP NEXT INSTRUCTION  @OZ30950
         B     CKADDR                   START OVER IF NOT      @OZ30950
*                                        ENOUGH SPACE          @OZ30950
ADDRSKIP EQU   *                                               @OZ30950
         BAL   R13,QNK90                CHECK - END OF RCD SEG @OZ26495
         LA    R7,ONE(R7)               BUMP PAST LENGTH BYTE  @OZ30950
         LR    R13,R0                   RESTORE LENGTH         @OZ26495
         BCTR  R13,0                    SUBTRACT 1 FOR EXECUTE @OZ26495
         EX    R13,QNKMOVE              MOVE ADDR CHAR         @OZ26495
         AR    R10,R0                   ADJUST RECORD POSITION @OZ26495
         SPACE 3
*CHECKPOINT LINE STATUS
         SPACE
QNK62    EQU   *
         USING IEDQQCB,R7                                      @OX16402
         TM    TRMSTATE,TRMPROC         PROCESS OR LOG ENTRY   @Y17XACT
         BO    QNK65                    BRANCH IF PROC OR LOG  @Y17XACT
         TM    TRMSTATE,TRMPREF         3705 RESOURCE          @Y17XACT
         BO    QNK3705                  YES DO 3705 PROCESSING @Y17XACT
         LA    R0,CKPLCBLN+CKPDCBLN     LENGTH OF LCB,DCB INFO     1012
         BAL   R13,QNK90                CHECK FOR END OF CKPT RCD  0620
         L     R7,TRMDESTQ-1            RESTORE ADDRESS OF QCB
         SR    R13,R13                  CLEAR
         IC    R13,QCBRELLN             RELATIVE LINE NO
         L     R7,QCBDCBAD-1            DCB ADDRESS
         USING IHADCB,R7                BASE FOR DCB
         MVI   0(R10),X'FF'             MARK LINE AS UNOPENED      0620
         MVI   1(R10),0                 CLEAR LCBSTAT2 TO ZERO     1001
         TM    DCBOFLGS,X'10'           CHECK FOR OPENED DCB       0620
         BZ    QNK64                    BRANCH IF NOT OPENED       1120
QNK6205  EQU   *                                                 S22024
         L     R8,DCBDEBAD              GET DEB ADDR            SA56611
         EX    R13,CKRLN                CHECK FOR UNOPENED LINE SA56611
         BL    QNK64                    BRANCH IF LCB UNOPENED  SA56611
QNK63    EQU   *                                                   0620
         LR    R8,R1                    SAVE REG                   0620
         SR    R1,R1                    CLEAR REG                  0620
         IC    R1,DCBEIOBX              GET LENGTH OF LCB          0620
         MR    R0,R13                   MULTIPLY BY REL LINE NO.   0620
         L     R0,DCBIOBAD              IOB ADDR FOR REL LINE -1   0620
         AR    R1,R0                    ADD DISPLACEMENT FOR PROPER0620X
                                        LINE                       0620
         LA    R0,LCBFLAG1-IEDQLCB      DISPLACEMENT FROM BEGINNING0729
         SR    R1,R0                    GET BEGINNING ADDR OF LCB  0729
         USING IEDQLCB,R1               BASE FOR LCB               0729
         MVC   0(CKPLCBLN,R10),LCBSTAT1 MOVE LINE STAT TO CKPT RCD 0620
         CLI   LCBPRI,PRILCBDL          CHECK FOR LCB ON SYS DELAY 1012
         BE    QNK6304                  BRANCH IF ON QUEUE-NOT STOP1012
         TM    AVTBIT1,AVTCLOSN         CHECK FOR CLOSEDOWN IN PROG0728
         BZ    QNK6305                  BRANCH IF NO CLOSEDOWN     0728
         TM    LCBSTCBA+2,QNKSTOP       CHECK FOR LINE STOPPED         X
                                        PRIOR TO CLOSEDOWN         0728
         BO    QNK6305                  BRANCH IF STOPPED PRIOR    0728
QNK6304  EQU   *                                                   1012
         OI    0(R10),LCBRECVN          MARK LCB NOT STOPPED IN    0728X
                                        CKPT RCD                   Z728
QNK6305  EQU   *                                                   0728
         LR    R1,R8                    RESTORE REG                0620
         SPACE 3
*CHECKPOINT THE INTERVAL IN THE LINE DCB
         SPACE
QNK64    EQU   *                                                   1116
         MVC   CKPLCBLN(CKPDCBLN,R10),DCBINTVL MOVE DCB INTERVAL   1116
         LA    R10,CKPLCBLN+CKPDCBLN(,R10) ADD LENGTH OF 2 FIELDS  1116
         SPACE 3
*CHECKPOINT THE INVITATION LIST,IF SPECIFIED
         SPACE
INVLIST  EQU   *                                               @Y17XACT
         TM    CKPFLAGS,CKPSTAIN        CHECK FOR INV LISTS CKPTED 0525
         BZ    QNK65                    BRANCH IF NOT TO BE CKPTED
         MVC   CKPTRMAD+1(THREE),AVTEZERO(R6) MOVE ADDR TO       S22024
*                                        WORD BOUNDARY           S22024
         L     R8,CKPTRMAD              RELOAD TERM ENTRY ADDR   S22024
         SH    R8,TRMBCKUP              BACK UP TO NEG PREF    @YM06009
         L     R7,TRMDESTQ-1            RESTORE QCB ADDRESS      S22024
         USING IEDQQCB,R7               BASE FOR QCB             S22024
         SR    R13,R13                  CLEAR FOR IC             S22024
         IC    R13,QCBRELLN             GET RELATIVE LINE NO.    S22024
         L     R7,QCBDCBAD-1            RESET DCB ADDRESS        S22024
         USING IHADCB,R7                BASE FOR DCB             S22024
         EX    R13,QNKCOMPR             CHECK FOR INVITATION LIST  1209
         BL    QNK65                    BRANCH IF NOT DEFINED INDCB1209
         BCTR  R13,0                    DECREMENT BY ONE         A47151
         SLL   R13,2                    MULTIPLY BY 4
         L     R7,DCBINVLI(R13)         ADDRESS OF INVLIST       A47151
         LA    R7,AVTEZERO(,R7)         CLEAR HI ORDER BYTE    @XA05305
         LTR   R7,R7                    INVLIST OMITTED ON GRP @XA05305
         BZ    QNK65                    BR YES                 @XA05305
         CLI   INVENTS(R7),AVTEZERO     DOES LIST HAVE ENTRIES   A47151
         BE    QNK65                    IF NO, DO NOT CHECKPOINT A47151
         TM    CKPSWCH2,CKPSET2         SWITCH FLIP OR FLOP      A47151
         BNO   QNK6403                  IF FLIP, TEST ON COND    A47151
         TM    INVSTAT(R7),CKPSET2      CHECK SW IN INVLIST      A47151
         BNO   QNK65                    BRANCH IF LIST CKPTED    A47151
         B     QNK6406                  ELSE, CHECKPOINT IT      A47151
         SPACE
QNK6403  EQU   *                                                 A47151
         TM    INVSTAT(R7),CKPSET2      CHECK SW IN INVLIST      A47151
         BO    QNK65                    BRANCH IF LIST CKPTED    A47151
         SPACE
QNK6406  EQU   *                                                 A47151
         XI    INVSTAT(R7),CKPSET2      INVERT SW TO IND CKPT    A47151
         ST    R1,CKPSAVE1              SAVE REG                   1020
         SR    R0,R0                    CLEAR                      0709
         SR    R1,R1                    CLEAR
         IC    R0,0(R7)                 GET NO. ENTRIES IN LIST
         IC    R1,2(R7)                 GET LENGTH OF ONE ENTRY
         MR    R0,R0                    GET LENGTH OF TOTAL LIST
         LA    R0,9(0,R1)               ADD LENGTH OF CONTROL AREA 0724
         TM    INVSTAT(R7),EOTBIT       IS IT EOT-FE (BSC)      SA57661
         BZ    QNK6406A                 NO, BRANCH              SA57661
         LA    R0,TEN(,R1)              ADD LENGTH OF CONTROL   SA57661
*                                       AREA FOR BSC            SA57661
QNK6406A EQU   *                                                SA57661
         LTR   R1,R11                   CHECK FOR END OF RCD SEG   0822
         BNZ   QNK6407                  BRANCH IF NOT END          0916
         BAL   R13,QNK91                WRITE OUT CURRENT SEG      0822
QNK6407  EQU   *                                                   0916
         BAL   R8,QNK95                 MOVE INV LIST TO RCD SEG   0822
         B     QNK6409                  CHECK FOR FILLED RCD SEG   0916
         SPACE 3
QNK6408  EQU   *                                                   0916
         SR    R0,R1                    SUBTRACT LENGTH MOVED FROM 0822X
                                        TOTAL LENGTH OF INV LIST   0822
         BP    QNK6407                  MOVE REST TO NEW RCD SEG   0916
         SPACE 3
*CONTROL IS RETURNED HERE IF ANOTHER RECORD SEGMENT IS REQUIRED FOR0822
*THE REMAINDER OF THE INVITATION LIST
         SPACE
         B     QNK6408                  CONTINUE MOVE            S22024
QNK6409  EQU   *                                                   0916
         BAL   R13,QNK90                CHECK FOR END OF REC SEG   0822
         SPACE 3
         L     R1,CKPSAVE1              RESTORE REG                1020
QNK65    EQU   *
         LA    R6,3(0,R6)               MOVE PAST ADDR FIELD IN TNT
         BCT   R1,QNK50                 SUBTRACT FROM NO.OF ENTRIES
         TM    CKPFLAGS,CKPOPNEN        TERMINAL SCAN DONE     @OX16402
         BO    ENDLOOP                  YES, MOVE AVT DATA     @OX16402
         OI    CKPFLAGS,CKPOPNEN        SET FOR TERM SCAN      @OX16402
         XI    CKPSWCH2,CKPSET2         INITIALIZE INV LIST SW @OX16402
         B     QNK47                    SCAN TERMINAL ENTRIES  @OX16402
         SPACE
*END OF LOOP THROUGH TERMNAME TABLE
         SPACE
ENDLOOP  EQU   *                                               @OX16402
         NI    CKPFLAGS,AVTEFF-CKPOPNEN   TURN OFF BIT         @OX16402
         LA    R0,CKPAVTLN              LENGTH OF AVT FIELDS       0208
         BAL   R13,QNK90                CHECK FOR END OF RECORD    0208
         SPACE 3
*SIGNIFICANT AVT DATA
         SPACE
         USING CKPAVT,R10               AVT CHECK POINT FIELDS @Y17XACA
         MVC   CKPOPCON,AVTOPCON        PRI OP/CNTRL TERMINAL  @Y17XACA
         MVC   CKPOPCIN,AVTOPCIN        PRI OP/CNTRL TTCIN     @Y17XACA
         MVC   CKPINTLV,AVTINTLV          SYSTEM DELAY INTERVL @Y17XACA
         MVC   CKPBIT1(2),AVTBIT1       SYS DLY IN EFFECT(BIT3)@Y17XACAX
                                        AND REUS ACTIVE-AVTBIT2    0525
         NI    CKPBIT1,AVTEFF-AVTRFULN  CLEAR BIT              @Y17XACA
         TM    AVTBIT3,AVTRFULN         IN SLOW DOWN            SA59171
         BZ    QNK80                    BRANCH IF NO            SA59171
         OI    CKPBIT1,AVTRFULN         SET SLOW DOWN IN CK REC@Y17XACA
QNK80    EQU   *                                                SA59171
         MVC   CKPNADDR(8),AVTNADDR     DISK QUEUES-REUSABLE,NO@Y17XACA
         MVC   CKPLODPT,AVTLODPT        REUS LODPT FIELD       @Y17XACA
         MVC   CKPSUBT(2),AVTSUBT       AVTSUBT & AVTIOTR      @Y17XACA
         MVI   CDRKEY,CDRTOTAL          INDICATE LAST SEGMENT
QNK81    EQU   *
         LR    R1,R15
         DROP  R15
         USING IEDQNK,R1                CHANGE PROG BASE
         LA    R3,AVTCKELE              RESTORE ADDR OF REQ ELEMNT 1109
         C     R4,CKPEXCP
         LA    R15,CKPDIOR              OFFSET FOR DISK I/O ROUTINE
         BCR   8,R14                    BRANCH IF NOT 1ST SEGMENT
         LA    R15,CKPIOQM              OFFSET FOR I/O QUEUE MGR
         BR    R14                      RETURN TO CKPT EXECUTOR
         SPACE 3
*SUBROUTINE TO CHECK FOR END OF DISK RECORD AND SAVE REGS IF END
         SPACE
QNK90    EQU   *
         DROP  R1
         USING IEDQNK,R15
         SR    R11,R0                   SUB FIELD LNGTH FROM TOTAL
         BCR   10,R13                   RETURN IF NOT END OF RCD
         SH    R13,QNKEIGHT             ADJUST BRANCH RETURN ADDR
QNK91    EQU   *
         SR    R13,R15                  GET RELATIVE ADDR-THIS         X
                                        MODULE MIGHT BE RELOADED       X
                                        INTO ANOTHER LOCATION
         MVI   CDRKEY,CDRTOTLC          SET KEY FOR CONTINUED SEG
         STM   R13,R11,CKPSAVE1+8       SAVE REGS UNTIL NEXT SEG IS    X
                                        BUILT
         B     QNK81                    RETURN TO EXECUTOR
         SPACE 3
         SPACE 3
*SUBROUTINE TO MOVE OPTION DATA OR INVITATION LISTS TO RECORD SEG  0822
         SPACE
QNK95    EQU   *                                                   0822
         ST    R11,CKPSAVE2             SAVE REG                   1006
         CR    R11,R0                   COMPARE LENGTHS            1006
         BL    QNK9505                  BRANCH IF INV LIST IS TOO  1006X
                                        LARGE TO FIT IN THIS SEG   1006
         LR    R11,R0                   USE LENGTH OF LIST FOR MOVE1006
QNK9505  EQU   *                                                   1006
         LR    R13,R11                  COPY REMAINING RCD LENGTH  0725
         SRL   R11,8                    GET NO. OF EXECUTES REQUIRD0725
         LA    R11,1(R11)               ADD 1 TO COUNT OF EXECUTES 0728
         N     R13,QNK000F              CLEAR ALL BUT LAST BYTE    0725
QNK96    EQU   *                                                   0822
         BCTR  R13,0                    SUBTRACT 1 FOR EXECUTE INST0725
         EX    R13,QNKMOVEO             MOVE OPTIONS TO DISK RCD   0725
         LA    R7,1(R7,R13)             ADD LENGTH TO ADDR OF OPTON0822
         LA    R10,1(R10,R13)           ADD LENGTH TO ADDR OF RCD  0725
         LA    R13,QNKMOVEL             GET MAX LENGTH FOR EXECUTE 0725
         BCT   R11,QNK96                CHECK FOR ANOTHER EX REQURD0822
         L     R11,CKPSAVE2             RESTORE REG                1006
         BR    R8                       RETURN                     0916
         SPACE
*END OF SUBROUTINE
         SPACE 3
QNK3705  EQU   *                                               @Y17XACT
         CLI   TRMTYPE,TRMSSCP          SSCP                   @ZM47916
         BE    QNK65                    YES NO FURTHER PROCESS @ZM47916
         CLI   TRMTYPE,TRMLNCP             NCP TYPE            @Y17XACT
         BNE   INVLIST                  PROCESS INV LIST       @Y17XACT
         LA    R0,ONE                   DATA LENGTH            @Y17XACT
         BAL   R13,QNK90                END OF REC             @Y17XACT
         MVI   0(R10),X'00'             CLEAR NEXT BYTE        @Y17XACT
         USING IEDQQCB,R7                                      @Y17XACT
         L     R7,TRMDESTQ-1            GET QCB ADDR           @Y17XACT
         L     R7,QCBDCBAD-1            GET DCB ADDR           @Y17XACT
         USING IHADCB,R7                                       @Y17XACT
         TM    DCBOFLGS,DCBOFOPN        DCB OPEN               @Y17XACT
         BZ    NOTOPEN                  BR,IF NOT OPEN         @Y17XACT
         SR    R8,R8                    CLEAR REG 8            @Y17XACT
         IC    R8,DCBEIOBX              CALCULATE..            @Y17XACT
         A     R8,DCBIOBAD                      ADDR OF...     @Y17XACT
         SH    R8,LCBBCKUP                             LCB     @Y17XACT
         USING IEDQLCB,R8                                      @Y17XACT
         TM    LCBSTAT2,LCBTRACE        TRACE INDICATED        @Y17XACT
         BNO   NOTOPEN                  NO,BRNCH AROUND        @Y17XACT
         OI    0(R10),LCBTRACE          SET TRACE BIT          @Y17XACT
NOTOPEN  EQU   *                                               @Y17XACT
         AR    R10,R0                   BUMP DISK POSTION      @Y17XACT
         B     QNK65                    DONE FOR NCP           @YM06868
         DS    0F                       WORD BNDRY                 0725
QNK000F  DC    X'000000FF'              MASK TO CLEAR ALL BUT LAST 0725
QNKNOPT  EQU   QNK000F+2                INDICATES UNUSED OPTION FLD1109
QNKMOVEO EQU   *                        MOVE OPTION DATA           0822
QNKMOVE  MVC   0(0,R10),0(R7)           MOVE INVITATION LIST       0822
QNKCOMPR CLI   DCBILCT,0                CHECK FOR INV LIST FOR REL 1209
CKRLN    CLI   DEBNMEXT-DEBNMSUB(R8),0  CK EXTS AGAINST RLN     SA56611
QNKEIGHT DC    H'8'                     USED TO ADJUST BRANCH ADDR
THREE    EQU   3                        LENGTH OF MOVE           S22024
TRMBCKUP DC    AL2(IEDQTRM-IEDNTRM)     LENGTH OF 3705 PREFIX    S22024
TEN      EQU   10                       BSC CONTROL AREA LNGTH  SA57661
EOTBIT   EQU   X'80'                    EOT-FE (BSC) IN INVLIST SA57661
X80      EQU   X'80'                    FLAG FOR BUFSIZE       @OZ26495
X60      EQU   X'60'                    FLAG FOR DIAL/ADDR     @OZ26495
X40      EQU   X'40'                    FLAG FOR DIAL DIGITS   @OZ26495
X20      EQU   X'20'                    FLAG FOR ADDR CHAR     @OZ26495
INVENTS  EQU   0                        OFFSET TO NO. OF ENTRIES A47151
INVSTAT  EQU   3                        OFFSET TO LIST STATUS    A47151
LCBBCKUP DC    AL2(LCBFLAG1-IEDQLCB)    LCB BACK UP VALUE      @Y17XACT
         SPACE 3
         TAVTD
         TCKPD 3330                     MERLIN VERSION OF DSECT
         TTNTD
         TTRMD
         TQCBD
         TLCBD
         DCBD  DSORG=TX
         TPRIOR
         TDEBD
         EJECT
         TPEWAD
         EJECT
         TPRFD
         END
