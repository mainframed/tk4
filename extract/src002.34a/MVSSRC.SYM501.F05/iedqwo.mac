         TITLE 'IEDQWO, TOTE ACCESS MANAGER                            *
                        '
IEDQWO   CSECT ,                                                01S0001
@PROLOG  DS    0H                                               01S0002
         USING *,RBASE            SET IEDQWO ADDRESSABILITY
         STM   RETADR,RBASE,12(RSAVE) SAVE CALLER S REG
         LR    RBASE,RENTRY       SET UP BASE REGISTER
         LA    RENTRY,TOTSAVE6(OLTCBPTR)  GET IEDQWO SAVE     @Y17XAU6
*                                          AREA ADDRESS       @Y17XAU6
         ST    RENTRY,8(RSAVE)    SAVE IT IN CALLER S SAVE AREA
         ST    RSAVE,4(RENTRY)    SAVE CALLER S IN IEDQWO SAVE AREA
         LR    RSAVE,RENTRY       SET IEDQWO SAVE AREA POINTER
IEDQWO   IEDHJN SKIP,HJN             MODULE ID/DATE
*                                                               02S0308
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT IS THE MAIN LINE PROCEDURE. INPUT - REG */
*   /* 2=OLTCB ADDRESS, OUTPUT - MESSAGE WRITTEN TO DEVICE   @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0308
*   DO;                                                         02S0308
*     TOTEXIT=OFF;                  /* CLEAR CONTROL FLAG    @Y17XAU6*/
         L     @09,TOTEXIT(,OLTCBPTR)                           02S0309
@GL00001 LR    @06,@09                                          02S0309
         N     @06,@CF02785                                     02S0309
         CS    @09,@06,TOTEXIT(OLTCBPTR)                        02S0309
         BNE   @GL00001                                         02S0309
*     RAVT=TOTAVTPT;                /* SET AVT BASE                  */
         L     RAVT,TOTAVTPT(,OLTCBPTR)                         02S0310
*     IF TOTCECOM=ON THEN           /* IF A CECOM REQUEST, PROCESS IT
*                                                            @Y17XAU6*/
         TM    TOTCECOM(OLTCBPTR),B'01000000'                   02S0311
         BNO   @RF00311                                         02S0311
*                                                               03S0312
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS.CECOM: THIS SEGMENT PROCESSES A CECOM REQUEST.THE */
*       /* INPUT IS REG 2=OLTCB ADDRESS, REG 4=AVT ADDRESS. THE      */
*       /* OUTPUT IS OUTPUT MESSAGE SENT TO CONTROL TERMINAL AND THE */
*       /* TOTEXIT FLAG SET                                  @Y17XAU6*/
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0312
*       DO;                                                     03S0312
*         IF TOTCTCON=ON            /* CONTROL TERMINAL EQU SYSCON?  */
*           THEN                                                03S0313
         TM    TOTCTCON(OLTCBPTR),B'00100000'                   03S0313
         BNO   @RF00313                                         03S0313
*           CALL SYSCON;            /* YES - PROCESS MSG TO SYSCON   */
         BAL   @14,SYSCON                                       03S0314
*         IF TOTEXIT=OFF THEN       /* PROCESSING INCOMPLETE AND
*                                                            @Y17XAU6*/
@RF00313 TM    TOTEXIT(OLTCBPTR),B'00010000'                    03S0315
         BNZ   @RF00315                                         03S0315
*           IF TOTCTORN=OFF THEN    /* EP/LOCAL RESOURCE?            */
         TM    TOTCTORN(OLTCBPTR),B'01000000'                   03S0316
         BNZ   @RF00316                                         03S0316
*             CALL EPLPROC;         /* YES - PROCESS EP/LOCAL REQUEST*/
         BAL   @14,EPLPROC                                      03S0317
*           ELSE                                                03S0318
*             CALL RNPROC;          /* NO - PROCESS 3705 REQUEST     */
         B     @RC00316                                         03S0318
@RF00316 BAL   @14,RNPROC                                       03S0318
*       END;                                                    03S0319
@RC00316 DS    0H                                               03S0319
@RF00315 DS    0H                                               03S0320
*     IF TOTEXIT=OFF THEN           /* IF PROCESSING INCOMPLETE 02S0320
*                                                            @Y17XAU6*/
@RF00311 TM    TOTEXIT(OLTCBPTR),B'00010000'                    02S0320
         BNZ   @RF00320                                         02S0320
*       IF TOTPRINT=ON THEN         /* AND DPRINT REQUEST, PROCESS IT
*                                                            @Y17XAU6*/
         TM    TOTPRINT(OLTCBPTR),B'10000000'                   02S0321
         BNO   @RF00321                                         02S0321
*                                                               03S0322
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.DPRINT: THIS SEGMENT PROCESSES A DPRINT REQUEST.*/
*         /* THE INPUT IS REG 2=OLTCB ADDRESS, REG 4=AVT ADDRESS. THE*/
*         /* OUTPUT IS MESSAGE WRITTEN TO ALTERNATE PRINTER AND      */
*         /* TOTEXIT FLAG SET                                        */
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0322
*         DO;                                                   03S0322
*           IF TOTAPCON=ON×(TOTPRECT=ON&TOTCTCON=ON)/* IF AP EQU
*                                      SYSCON OR AP EQU CT AND CT EQU
*                                      SYSCON                @YM07768*/
*             THEN                                              03S0323
         TM    TOTAPCON(OLTCBPTR),B'10000000'                   03S0323
         BO    @RT00323                                         03S0323
         TM    TOTPRECT(OLTCBPTR),B'00100010'                   03S0323
         BNO   @RF00323                                         03S0323
@RT00323 DS    0H                                               03S0324
*             CALL SYSCON;          /* YES - PROCESS SYSCON REQUEST  */
         BAL   @14,SYSCON                                       03S0324
*           IF TOTEXIT=OFF THEN                                 03S0325
@RF00323 TM    TOTEXIT(OLTCBPTR),B'00010000'                    03S0325
         BNZ   @RF00325                                         03S0325
*             IF TOTAPOUT=ON THEN   /* PROCESSING INCOMPLETE AND
*                                      ALTERNATE PRINTER EQU SYSOUT
*                                                            @Y17XAU6*/
         TM    TOTAPOUT(OLTCBPTR),B'01000000'                   03S0326
         BNO   @RF00326                                         03S0326
*                                                               04S0327
*               /*****************************************************/
*               /*                                                   */
*               /* PROCESS.DPRINT.SYSOUT: THIS SEGMENT PROCESSES A   */
*               /* DPRINT REQUEST FOR THE SYSTEM OUTPUT DEVICE. THE  */
*               /* INPUT IS REG 2=OLTCB ADDRESS, REG 4=AVT ADDRESS.  */
*               /* THE OUTPUT IS MESSAGE SENT TO SYSTEM OUTPUT DEVICE*/
*               /* AND TOTEXIT FLAG SET ON                           */
*               /*                                                   */
*               /*****************************************************/
*                                                               04S0327
*               DO;                                             04S0327
*                 RFY                                           04S0328
*                   RDCB RSTD;                                  04S0328
*                 RFY                                           04S0329
*                   REG6 RSTD;                                  04S0329
*                 RDCB=TOTAPDCB;    /* SYSOUT DCB ADDRESS            */
         L     RDCB,TOTAPDCB(,OLTCBPTR)                         04S0330
*                 DCBSYNAD=ADDR(SYNAD);/* SET SYNAD EXIT ADDRESS     */
         LA    @11,SYNAD                                        04S0331
         ST    @11,DCBSYNAD+52(,RDCB)                           04S0331
*                 IF DCBDEVT=PRINTER THEN/* SYSOUT A PRINTER         */
         CLC   DCBDEVT+16(1,RDCB),PRINTER                       04S0332
         BNE   @RF00332                                         04S0332
*                   DO;             /* PROCESS PRINTER DEPENDENCIES  */
*                     IF TOTFMCTL^=NOFORM&TOTFMCTL=RESTORE THEN/*
*                                      FORM CONTROL?                 */
         TM    TOTFMCTL(OLTCBPTR),B'11110000'                   04S0334
         BZ    @RF00334                                         04S0334
         TM    TOTFMCTL(OLTCBPTR),B'01000000'                   04S0334
         BNO   @RF00334                                         04S0334
         TM    TOTFMCTL(OLTCBPTR),B'10110000'                   04S0334
         BNZ   @RF00334                                         04S0334
*                       GEN(   CNTRL  (RDCB),SK,1);/* SKIP TO CHANNEL
*                                      ONE                           */
            CNTRL  (RDCB),SK,1
*                     IF TOTFMCTL=SPACE1/* CHECK FOR SPACE 1         */
*                       THEN                                    04S0336
@RF00334 TM    TOTFMCTL(OLTCBPTR),B'00010000'                   04S0336
         BNO   @RF00336                                         04S0336
         TM    TOTFMCTL(OLTCBPTR),B'11100000'                   04S0336
         BNZ   @RF00336                                         04S0336
*                       GEN(   CNTRL  (RDCB),SP,1);/* SPACE 1 LINE   */
            CNTRL  (RDCB),SP,1
*                     ELSE                                      04S0338
*                       IF TOTFMCTL=SPACE2/* CHECK FOR SPACE 2       */
*                         THEN                                  04S0338
         B     @RC00336                                         04S0338
@RF00336 TM    TOTFMCTL(OLTCBPTR),B'00100000'                   04S0338
         BNO   @RF00338                                         04S0338
         TM    TOTFMCTL(OLTCBPTR),B'11010000'                   04S0338
         BNZ   @RF00338                                         04S0338
*                         GEN(   CNTRL  (RDCB),SP,2);/* SPACE 2 LINES*/
            CNTRL  (RDCB),SP,2
*                       ELSE                                    04S0340
*                         IF TOTFMCTL=SPACE3/* CHECK FOR SPACE 3     */
*                           THEN                                04S0340
         B     @RC00338                                         04S0340
@RF00338 TM    TOTFMCTL(OLTCBPTR),B'00110000'                   04S0340
         BNO   @RF00340                                         04S0340
         TM    TOTFMCTL(OLTCBPTR),B'11000000'                   04S0340
         BNZ   @RF00340                                         04S0340
*                           GEN(   CNTRL  (RDCB),SP,3);/* SPACE 3
*                                      LINES                         */
            CNTRL  (RDCB),SP,3
*                     TOTFMCTL=''B; /* CLEAR FORM CONTROL            */
@RF00340 DS    0H                                               04S0342
@RC00338 DS    0H                                               04S0342
@RC00336 NI    TOTFMCTL(OLTCBPTR),B'00001111'                   04S0342
*                     GEN(   PRTOV  (RDCB),12);/* CHECK FOR OVERFLOW */
            PRTOV  (RDCB),12
*                   END;                                        04S0344
*                 REG7=ADDR(TOTOTBUF);/* OUTPUT DATA ADDRESS         */
@RF00332 LA    REG7,TOTOTBUF(,OLTCBPTR)                         04S0345
*                 REG6=ADDR(TOTPDECB);/* SYNAD EXIT ADDRESS  @YM08071*/
         LA    REG6,TOTPDECB(,OLTCBPTR)                         04S0346
*                 TOTPDECB=TOTPDECB&&TOTPDECB;/* CLEAR ECB           */
         XC    TOTPDECB(20,OLTCBPTR),TOTPDECB(OLTCBPTR)         04S0347
*                 GEN(    WRITE (REG6),SF,(RDCB),(REG7),'S',MF=E);/*
*                                      WRITE DATA                    */
             WRITE (REG6),SF,(RDCB),(REG7),'S',MF=E
*                 GEN(    CHECK (REG6));/* CHECK FOR ERRORS          */
             CHECK (REG6)
*                 TOTEXIT=ON;       /* SET EXIT FLAG                 */
         L     @11,TOTEXIT(,OLTCBPTR)                           04S0350
@GL00004 LR    @09,@11                                          04S0350
         O     @09,@CF02789                                     04S0350
         CS    @11,@09,TOTEXIT(OLTCBPTR)                        04S0350
         BNE   @GL00004                                         04S0350
*                 RFY                                           04S0351
*                   RDCB UNRSTD;                                04S0351
*                 RFY                                           04S0352
*                   REG6 UNRSTD;                                04S0352
*               END;                                            04S0353
*             ELSE                                              03S0354
*               IF TOTAPORN=OFF THEN/* ALTERNATE PRINTER NOT ON 3705
*                                                            @Y17XAU6*/
         B     @RC00326                                         03S0354
@RF00326 TM    TOTAPORN(OLTCBPTR),B'01000000'                   03S0354
         BNZ   @RF00354                                         03S0354
*                 CALL EPLPROC;     /* YES - PROCESS EP/LOCAL REQUEST*/
         BAL   @14,EPLPROC                                      03S0355
*               ELSE                                            03S0356
*                 CALL RNPROC;      /* NO - PROCESS 3705 REQUEST     */
         B     @RC00354                                         03S0356
@RF00354 BAL   @14,RNPROC                                       03S0356
*         END;                                                  03S0357
*       ELSE                                                    02S0358
*         IF TOTSRCE=ON THEN        /* SOURCE REQUEST        @Y17XAU6*/
         B     @RC00321                                         02S0358
@RF00321 TM    TOTSRCE(OLTCBPTR),B'00010000'                    02S0358
         BNO   @RF00358                                         02S0358
*                                                               03S0359
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.SOURCE: THIS SEGMENT PROCESSES A SOURCE       */
*           /* REQUEST TO SEND ERROR MESSAGE TO THE REQUESTING       */
*           /* TERMINAL. THE INPUT IS REG 2=OLTCB ADDRESS, REG 4=AVT */
*           /* ADDRESS. THE OUTPUT IS MESSAGE WRITTEN BACK TO SOURCE */
*           /* TERMINAL AND TOTEXIT FLAG SET                         */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0359
*           DO;                                                 03S0359
*             RFY                                               03S0360
*               RPARM RSTD;         /*                       @Y17XAU6*/
*             RFY                                               03S0361
*               RDCT RSTD;          /*                       @ZM47904*/
*             RPARM=TOTSROFF;       /* GET SOURCE TTCIN              */
         LH    RPARM,TOTSROFF(,OLTCBPTR)                        03S0362
         N     RPARM,@CF02792                                   03S0362
*             CALL IEDQTNT;         /* FIND SOURCE TTE ADDRESS       */
         L     @15,AVTRNMPT(,RAVT)                              03S0363
         BALR  @14,@15                                          03S0363
*             RTRM=RPARM;           /* SET TTE BASE          @Y17XAU6*/
         LR    RTRM,RPARM                                       03S0364
*             RTRM=RTRM-LENGTH(IEDNTRM);/* ADJUST TTE BASE TO INCLUDE
*                                      NEGATIVE PREFIX       @Y17XAU6*/
         SL    RTRM,@CF02435                                    03S0365
*/* ? IEDDCT REG(RDCT);                                              */
*                                                               03S0366
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP ADDRESSABILITY TO THE DCT ENTRY              */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0366
*             RDCT=AVTCSTCS+(TRMCHCIN-1)*AVTDCTLN;/*         @ZM47904*/
         SLR   @11,@11                                          03S0366
         IC    @11,TRMCHCIN(,RTRM)                              03S0366
         BCTR  @11,0                                            03S0366
         MH    @11,AVTDCTLN(,RAVT)                              03S0366
         AL    @11,AVTCSTCS(,RAVT)                              03S0366
         LR    RDCT,@11                                         03S0366
*             IF DCTUMASK=OFF THEN  /* IF SOURCE NOT GEN POLLED 03S0367
*                                                            @ZM47904*/
         TM    DCTUMASK(RDCT),B'00000001'                       03S0367
         BNZ   @RF00367                                         03S0367
*               IF TRMPREF=ON THEN  /* PROCESS 3705 RESOURCE @Y17XAU6*/
         TM    TRMPREF(RTRM),B'00010000'                        03S0368
         BNO   @RF00368                                         03S0368
*                                                               04S0369
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.SOURCE.RNSRC: THIS SEGMENT PROCESSES A  */
*                 /* REQUEST FOR AN ERROR MESSAGE TO BE SENT TO A    */
*                 /* REMOTE DEVICE ATTACHED TO A 3705. THE INPUT IS  */
*                 /* REG 2=OLTCB ADDRESS, REG 4=AVT ADDRESS, REG     */
*                 /* 8=SOURCE TERMINAL ENTRY ADDRESS. THE OUTPUT IS  */
*                 /* MESSAGE SENT TO REMOTE DEVICE AND TOTEXIT FLAG  */
*                 /* SET                                     @Y17XAU6*/
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0369
*                 DO;                                           04S0369
*                   CALL SCBBUILD;  /* SET UP TO REQUEST A BUFFER
*                                                            @Y17XAU6*/
         BAL   @14,SCBBUILD                                     04S0370
*                   CALL MVMSG;     /* MOVE MSG TO BUFFER            */
         BAL   @14,MVMSG                                        04S0371
*                   CALL INITHDR;   /* SET UP HEADER PREFIX          */
         BAL   @14,INITHDR                                      04S0372
*                   CALL POSTBUF;   /* POSTBUF TO QUEUE              */
         BAL   @14,POSTBUF                                      04S0373
*                   TOTEXIT=ON;     /* SET EXIT FLAG                 */
         L     @11,TOTEXIT(,OLTCBPTR)                           04S0374
@GL00005 LR    @09,@11                                          04S0374
         O     @09,@CF02789                                     04S0374
         CS    @11,@09,TOTEXIT(OLTCBPTR)                        04S0374
         BNE   @GL00005                                         04S0374
*                 END;                                          04S0375
*               ELSE                /* PROCESS EP/LOCAL RESOURCE
*                                                            @Y17XAU6*/
*                                                               04S0376
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.SOURCE.EPLSRC: THIS SEGMENT PROCESSES A */
*                 /* REQUEST FOR AN ERROR MESSAGE TO BE SENT TO A    */
*                 /* LOCAL DEVICE OR AN EP DEVICE. THE INPUT IS REG  */
*                 /* 2=OLTCB ADDRESS, REG 4=AVT ADDRESS, REG 8=SOURCE*/
*                 /* TERMINAL ENTRY ADDRESS. THE OUTPUT IS MESSAGE   */
*                 /* SENT TO SOURCE DEVICE AND TOTEXIT FLAG SET ON   */
*                 /*                                         @Y17XAU6*/
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0376
*                 DO;                                           04S0376
         B     @RC00368                                         04S0376
@RF00368 DS    0H                                               04S0377
*                   CALL SCBBUILD;  /* SET UP TO REQUEST A BUFFER
*                                                            @Y17XAU6*/
         BAL   @14,SCBBUILD                                     04S0377
*                   CALL MVMSG;     /* MOVE MSG TO BUFFER            */
         BAL   @14,MVMSG                                        04S0378
*                   CALL INITHDR;   /* SET UP HEADER PREFIX          */
         BAL   @14,INITHDR                                      04S0379
*                   CALL POSTBUF;   /* POST BUFFER TO DEST. QCB      */
         BAL   @14,POSTBUF                                      04S0380
*                   TOTEXIT=ON;     /* SET EXIT FLAG                 */
         L     @11,TOTEXIT(,OLTCBPTR)                           04S0381
@GL00006 LR    @09,@11                                          04S0381
         O     @09,@CF02789                                     04S0381
         CS    @11,@09,TOTEXIT(OLTCBPTR)                        04S0381
         BNE   @GL00006                                         04S0381
*                 END;                                          04S0382
*             ELSE                                              03S0383
*               ;                   /* SOURCE GEN POLLED, HEAD NOT
*                                      KNOWN                 @ZM47904*/
@RF00367 DS    0H                                               03S0384
*             RFY                                               03S0384
*               RDCT UNRSTD;        /*                       @ZM47904*/
@RC00367 DS    0H                                               03S0385
*             RFY                                               03S0385
*               RPARM UNRSTD;       /*                       @Y17XAU6*/
*           END;                                                03S0386
*   END;                                                        02S0387
@RF00358 DS    0H                                               02S0387
@RC00321 DS    0H                                               02S0387
@RF00320 DS    0H                                               02S0388
*                                                               02S0388
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT.            @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0388
*   GEN REFS(RSAVE) SETS(0,1,2,3,4,5,6,7,8,9,10,11,12,14,15) SEQFLOW;
*                                 /*
         L     RSAVE,4(RSAVE)     RESTORE CALLER S SAVE AREA PTR
         LM    RETADR,RBASE,12(RSAVE) RESTORE CALLER S REGISTERS
         BR    RETADR             RETURN TO CALLER
*                                                                   */
         EJECT
*                                                               02S0389
*   /*****************************************************************/
*   /*                                                               */
*   /* BISYNC: THIS INTERNAL PROCEDURE IS CALLED TO INSERT THE       */
*   /* NECESSARY LINE CONTROL CHARACTERS IN THE OUTPUT MESSAGE FOR A */
*   /* BISYNCH EP DEVICE.                                    @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0389
*BISYNC:                                                        02S0389
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0389
         B     @PB00002                                         02S0389
BISYNC   DS    0H                                               02S0390
*   RFY                                                         02S0390
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   TOTWOSV4=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV4(,OLTCBPTR)                       02S0391
*   TOTINBUF=TOTOTBUF;              /* MOVE OUTPUT DATA TO INPUT AREA*/
         MVC   TOTINBUF(80,OLTCBPTR),TOTOTBUF(OLTCBPTR)         02S0392
*   TOTOTBUF(1:1)=STX;              /* INSERT STX INTO FIRST BYTE
*                                                            @Y17XAU6*/
         MVC   TOTOTBUF(1,OLTCBPTR),STX                         02S0393
*   TOTOTBUF(2:TOTOTCNT+1)=TOTINBUF;/* OUTPUT DATA BACK TO OUTPUT
*                                      AREA                          */
         SLR   @15,@15                                          02S0394
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0394
         LR    @09,@15                                          02S0394
         BCTR  @09,0                                            02S0394
         EX    @09,@SM02793                                     02S0394
*   TOTOTBUF(TOTOTCNT+2:TOTOTCNT+4)=MSGEND;/* SET NL,ETX,EOT         */
*                                                               02S0395
         ALR   @15,OLTCBPTR                                     02S0395
         MVC   TOTOTBUF+1(3,@15),MSGEND                         02S0395
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT NEW LINE, ETX, AND EOT CHARACTERS AT END OF DATA       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0396
*   TOTOTCNT=TOTOTCNT+4;            /* INCREMENT OUTPUT COUNT BY 4   */
         SLR   @15,@15                                          02S0396
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0396
         AL    @15,@CF00256                                     02S0396
         STC   @15,TOTOTCNT(,OLTCBPTR)                          02S0396
*   RETADR=TOTWOSV4;                /* RESTORE RETURN ADDRESS        */
         L     @09,TOTWOSV4(,OLTCBPTR)                          02S0397
         LR    RETADR,@09                                       02S0397
*   RFY                                                         02S0398
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   END BISYNC;                     /* END BISYNC PROCEDURE          */
@EL00002 DS    0H                                               02S0399
@EF00002 DS    0H                                               02S0399
@ER00002 BR    @14                                              02S0399
@PB00002 DS    0H                                               02S0400
*   GEN(  EJECT);                                               02S0400
           EJECT
*                                                               02S0401
*   /*****************************************************************/
*   /*                                                               */
*   /* EPLPROC: THIS INTERNAL PROCEDURE IS ENTERED FOR PROCESSING FOR*/
*   /* A LOCAL DEVICE OR AN EP DEVICE ALTERNATE PRINTER OR CONTROL   */
*   /* TERMINAL MESSAGE.                                     @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0401
*EPLPROC:                                                       02S0401
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0401
         B     @PB00003                                         02S0401
EPLPROC  DS    0H                                               02S0402
*   RFY                                                         02S0402
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   TOTWOSV2=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV2(,OLTCBPTR)                       02S0403
*   IF TOTCECOM=ON×TOTPRECT=ON      /* CECOM REQUEST OR CT EQU AP    */
*     THEN                                                      02S0404
         TM    TOTCECOM(OLTCBPTR),B'01000000'                   02S0404
         BO    @RT00404                                         02S0404
         TM    TOTPRECT(OLTCBPTR),B'00000010'                   02S0404
         BNO   @RF00404                                         02S0404
@RT00404 DS    0H                                               02S0405
*     RDEV=ADDR(TOTCTENT);          /* CT CONTROL AREA               */
         LA    RDEV,TOTCTENT(,OLTCBPTR)                         02S0405
*   ELSE                                                        02S0406
*     RDEV=ADDR(TOTAPENT);          /* AP CONTROL AREA               */
         B     @RC00404                                         02S0406
@RF00404 LA    RDEV,TOTAPENT(,OLTCBPTR)                         02S0406
*   CALL STARTERM;                  /* ACTIVATE TERMINAL             */
@RC00404 BAL   @14,STARTERM                                     02S0407
*   CALL SCBBUILD;                  /* SET UP TO REQUEST A BUFFER    */
         BAL   @14,SCBBUILD                                     02S0408
*   CALL MVMSG;                     /* MOVE MSG TO BUFFER            */
         BAL   @14,MVMSG                                        02S0409
*   CALL INITHDR;                   /* SET UP HEADER PREFIX          */
         BAL   @14,INITHDR                                      02S0410
*   CALL POSTBUF;                   /* POST BUFFER TO DEST. QCB      */
         BAL   @14,POSTBUF                                      02S0411
*   TOTEXIT=ON;                     /* SET EXIT FLAG                 */
         L     @15,TOTEXIT(,OLTCBPTR)                           02S0412
@GL00008 LR    @09,@15                                          02S0412
         O     @09,@CF02789                                     02S0412
         CS    @15,@09,TOTEXIT(OLTCBPTR)                        02S0412
         BNE   @GL00008                                         02S0412
*   RETADR=TOTWOSV2;                /* RESTORE RETURN ADDRESS        */
         L     RETADR,TOTWOSV2(,OLTCBPTR)                       02S0413
*   RFY                                                         02S0414
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   END EPLPROC;                    /* END EPLPROC PROCEDURE         */
@EL00003 DS    0H                                               02S0415
@EF00003 DS    0H                                               02S0415
@ER00003 BR    @14                                              02S0415
@PB00003 DS    0H                                               02S0416
*   GEN(  EJECT);                                               02S0416
           EJECT
*                                                               02S0417
*   /*****************************************************************/
*   /*                                                               */
*   /* GETBUF: THIS INTERNAL PROCEDURE CALLS THE ROUTINE IN IEDQWA TO*/
*   /* REQUEST A TCAM BUFFER                                 @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0417
*GETBUF:                                                        02S0417
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0417
         B     @PB00004                                         02S0417
GETBUF   DS    0H                                               02S0418
*   RFY                                                         02S0418
*     REG0 RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0419
*     RPARM RSTD;                   /*                       @Y17XAU6*/
*   RFY                                                         02S0420
*     RRESPL RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0421
*     RSAVE RSTD;                   /*                       @Y17XAUV*/
*   RFY                                                         02S0422
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   TOTWOSV4=RETADR;                /* SAVE RETURN ADDRESS   @YM08456*/
         ST    RETADR,TOTWOSV4(,OLTCBPTR)                       02S0423
*   REG0=ADDR(TOTWKSPC);            /* GET WORK AREA ADDRESS @Y17XAU6*/
         LA    REG0,TOTWKSPC(,OLTCBPTR)                         02S0424
*   RPARM=((TOTOTCNT+AVTHDRSZ)/AVTKEYLE)+ONE;/* CALCULATE THE NUMBER
*                                      OF UNITS REQUIRED     @Y17XAU6*/
         LA    RPARM,30                                         02S0425
         SLR   @15,@15                                          02S0425
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0425
         ALR   RPARM,@15                                        02S0425
         LR    @10,RPARM                                        02S0425
         SRDA  @10,32                                           02S0425
         LH    RPARM,AVTKEYLE(,RAVT)                            02S0425
         DR    @10,RPARM                                        02S0425
         SLR   RPARM,RPARM                                      02S0425
         IC    RPARM,ONE                                        02S0425
         ALR   @11,RPARM                                        02S0425
         LR    RPARM,@11                                        02S0425
*   RRESPL=TOTRESPL;                /* GET ADDRESS OF RESPL  @Y17XAU6*/
         L     RRESPL,TOTRESPL(,OLTCBPTR)                       02S0426
*   RSAVE=ADDR(TOTSAVE2);           /* SET SAVE AREA PTR FOR ALLOCBUF
*                                                            @YM07351*/
         LA    RSAVE,TOTSAVE2(,OLTCBPTR)                        02S0427
*   CALL ALLOCBUF;                  /* CALL IEDQWA TO REQUEST A 02S0428
*                                      BUFFER                @Y17XAU6*/
         L     @15,RESABUF(,RRESPL)                             02S0428
         BALR  @14,@15                                          02S0428
*   RSAVE=ADDR(TOTSAVE6);           /* RESTORE MY SAVE AREA PTR 02S0429
*                                                            @YM07351*/
         LA    RSAVE,TOTSAVE6(,OLTCBPTR)                        02S0429
*   RPRF=RPARM;                     /* GET ADDRESS OF BUFFER RETURNED
*                                      BY TCAM               @Y17XAU6*/
         LR    RPRF,RPARM                                       02S0430
*   RETADR=TOTWOSV4;                /* RESTORE RETURN ADDRESS   02S0431
*                                                            @YM08456*/
         L     RETADR,TOTWOSV4(,OLTCBPTR)                       02S0431
*   RFY                                                         02S0432
*     REG0 UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0433
*     RPARM UNRSTD;                 /*                       @Y17XAU6*/
*   RFY                                                         02S0434
*     RSAVE UNRSTD;                 /*                       @Y17XAUV*/
*   RFY                                                         02S0435
*     RRESPL UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0436
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   END GETBUF;                     /* END GETBUF PROCEDURE          */
@EL00004 DS    0H                                               02S0437
@EF00004 DS    0H                                               02S0437
@ER00004 BR    @14                                              02S0437
@PB00004 DS    0H                                               02S0438
*   GEN(  EJECT);                                               02S0438
           EJECT
*                                                               02S0439
*   /*****************************************************************/
*   /*                                                               */
*   /* INITHDR: THIS INTERNAL PROCEDURE SETS UP THE BUFFER PREFIX IN */
*   /* ORDER TO POST THE OUTPUT MESSAGE TO THE DESTINATION QUEUE     */
*   /*                                                       @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0439
*INITHDR:                                                       02S0439
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0439
         B     @PB00005                                         02S0439
INITHDR  DS    0H                                               02S0440
*   RFY                                                         02S0440
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0441
*     RSCB RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0442
*     RRESPL RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0443
*     RLCB RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0444
*     RTTC RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0445
*     IEDQQPTR RSTD;                /*                       @OZ31587*/
*   IEDQQPTR=TRMDESTQ;              /* GET QCB ADDRESS       @OZ31587*/
         SLR   IEDQQPTR,IEDQQPTR                                02S0446
         ICM   IEDQQPTR,7,TRMDESTQ(RTRM)                        02S0446
*   TOTWOSV3=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV3(,OLTCBPTR)                       02S0447
*   PRFLCB=ADDR(TOTWKSPC)-(ADDR(LCBRCQCB)-ADDR(IEDQLCB));/* SET LCB
*                                      ADDRESS TO "DUMMY" LCB IN
*                                      WORKAREA              @Y17XAU6*/
         LA    @15,TOTWKSPC(,OLTCBPTR)                          02S0448
         LR    @11,@15                                          02S0448
         SL    @11,@CF01746                                     02S0448
         STCM  @11,7,PRFLCB(RPRF)                               02S0448
*   PRFSRCE=ZERO(1:2);              /* CLEAR SOURCE FIELD            */
         MVC   PRFSRCE(2,RPRF),ZERO                             02S0449
*   PRFSIZE=TOTOTCNT+AVTHDRSZ;      /* SIZE OF DATA IN THE BUFFER EQU
*                                      THE MESSAGE SIZE PLUS PREFIX
*                                      SIZE                  @Y17XAU6*/
         LA    @11,30                                           02S0450
         SLR   @09,@09                                          02S0450
         IC    @09,TOTOTCNT(,OLTCBPTR)                          02S0450
         ALR   @11,@09                                          02S0450
         STH   @11,PRFSIZE(,RPRF)                               02S0450
*   PRFNBUNT=((TOTOTCNT+AVTHDRSZ)/AVTKEYLE)+ONE;/* SET UNIT     02S0451
*                                      COUNT@Y17XAU6                 */
         LR    @00,@11                                          02S0451
         SRDA  @00,32                                           02S0451
         LH    @11,AVTKEYLE(,RAVT)                              02S0451
         DR    @00,@11                                          02S0451
         SLR   @11,@11                                          02S0451
         IC    @11,ONE                                          02S0451
         ALR   @01,@11                                          02S0451
         STC   @01,PRFNBUNT(,RPRF)                              02S0451
*   PRFSTAT1=PRFSTAT1&&PRFSTAT1;    /* CLEAR STATUS BYTE             */
         XC    PRFSTAT1(1,RPRF),PRFSTAT1(RPRF)                  02S0452
*   PRFSCAN=ZERO(1:2);              /* CLEAR SCAN POINTER            */
         MVC   PRFSCAN(2,RPRF),ZERO                             02S0453
*   RTTC=ADDR(TOTWKSPC);            /* SET ADDRESS FOR TCAM/TOTE
*                                      CONTROL BLOCK STRUCTURE USED
*                                      TO MAP THE LCB AND SCB   02S0454
*                                                            @Y17XAU6*/
         LR    RTTC,@15                                         02S0454
*   RSCB=ADDR(TTCSCB);              /* GET ADDRESS OF THE SCB   02S0455
*                                                            @Y17XAU6*/
         LA    RSCB,TTCSCB+40(,RTTC)                            02S0455
*   IF(QCBREUS=OFF&                 /* ANY                   @OZ31587*/
*       QCBNREUS=OFF&               /* NON-TSO               @OZ31587*/
*       QCBCORE=OFF)×               /* QUEUES                @OZ31587*/
*       QCBTSSES=ON THEN            /* TSO SESSION           @OZ31587*/
         TM    QCBREUS(IEDQQPTR),B'01110000'                    02S0456
         BZ    @RT00456                                         02S0456
         TM    QCBTSSES(IEDQQPTR),B'10000000'                   02S0456
         BNO   @RF00456                                         02S0456
@RT00456 DS    0H                                               02S0457
*     SCBDESTQ=ADDR(AVTBFRTB);      /* DO NOT SEND MSG       @OZ31587
*                                      TO TERMINAL           @OZ31587*/
         LA    @15,AVTBFRTB(,RAVT)                              02S0457
         STCM  @15,7,SCBDESTQ(RSCB)                             02S0457
*   PRFQCBA=SCBDESTQ;               /* SET ADDRESS OF QCB TO WHICH TO
*                                      POST BUFFER                   */
@RF00456 MVC   PRFQCBA(3,RPRF),SCBDESTQ(RSCB)                   02S0458
*   PRFPRI=PRIDESTQ;                /* SET PRIORITY FOR POST TO 02S0459
*                                      DESTINATION QCB       @Y17XAU6*/
         MVI   PRFPRI(RPRF),X'E4'                               02S0459
*   IF TOTSRCE=ON THEN              /* CHECK FOR SOURCE REQUEST      */
         TM    TOTSRCE(OLTCBPTR),B'00010000'                    02S0460
         BNO   @RF00460                                         02S0460
*     DO;                           /*                       @Y17XAUV*/
*       PRFDEST=TOTSROFF;           /* SET SOURCE TTCIN AND          */
         LH    @15,TOTSROFF(,OLTCBPTR)                          02S0462
         N     @15,@CF02792                                     02S0462
         STH   @15,PRFDEST(,RPRF)                               02S0462
*       IF TRMPREF=ON&              /* 3705 RESOURCE         @YM08138*/
*           TRMSNA=ON THEN          /* AND A SNA RESOURCE    @YM08138*/
         TM    TRMPREF(RTRM),B'00010000'                        02S0463
         BNO   @RF00463                                         02S0463
         TM    TRMSNA(RTRM),B'00000010'                         02S0463
         BNO   @RF00463                                         02S0463
*         DO;                                                   02S0464
*           PRFSRCE=SAVTSCPT;       /* SET SSCP TTCIN        @YM08138*/
         L     @15,AVTSAVTP(,RAVT)                              02S0465
         LH    @15,SAVTSCPT(,@15)                               02S0465
         N     @15,@CF02792                                     02S0465
         STH   @15,PRFSRCE(,RPRF)                               02S0465
*                                                               03S0466
*           /*********************************************************/
*           /*                                                       */
*           /* INITHDR.NEGPRFX: THIS SEGMENT BUILDS THE NEGATIVE     */
*           /* PREFIX FOR BUFFERS POSTED TO THE SSCP QCB.    @Y17XAUV*/
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0466
*           PRF1RH=SSCPRH;          /* SET RH                @Y17XAUV*/
         LR    @15,RPRF                                         03S0466
         SL    @15,@CF00045                                     03S0466
         MVC   PRF1RH(3,@15),@CB02709                           03S0466
*           PRF1FIDI=ON;            /* FID 1 INDICATOR       @Y17XAUV*/
         OI    PRF1FIDI(@15),B'10000000'                        03S0467
*           PRF1FORM=PRF1PTRI;      /* SET POINTER INDICATOR @Y17XAUV*/
         NI    PRF1FORM(@15),B'11011111'                        03S0468
         OI    PRF1FORM(@15),B'00010000'                        03S0468
*           PRF1SEQP=ADDR(TOTPRSN); /* SET WITH DUMMY LOCATION FOR
*                                      SEQ NUM, NOT USED     @ZM47554*/
         LA    @11,TOTPRSN(,OLTCBPTR)                           03S0469
         ST    @11,PRF1SEQP(,@15)                               03S0469
*         END;                      /*                       @YM08138*/
*     END;                          /* SET NEGATIVE PREFIX   @Y17XAUV*/
*   ELSE                                                        02S0472
*     PRFDEST=ENTTTOFF;             /* SET DUMMY TTCIN               */
         B     @RC00460                                         02S0472
@RF00460 LH    @15,ENTTTOFF(,RDEV)                              02S0472
         N     @15,@CF02792                                     02S0472
         STH   @15,PRFDEST(,RPRF)                               02S0472
*   RETADR=TOTWOSV3;                /* RESTORE RETURN ADDRESS        */
@RC00460 L     RETADR,TOTWOSV3(,OLTCBPTR)                       02S0473
*   RFY                                                         02S0474
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0475
*     RSCB UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0476
*     RRESPL UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0477
*     RLCB UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0478
*     RTTC UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0479
*     IEDQQPTR UNRSTD;              /*                       @OZ31587*/
*   END INITHDR;                    /* END INITHDR PROCEDURE         */
@EL00005 DS    0H                                               02S0480
@EF00005 DS    0H                                               02S0480
@ER00005 BR    @14                                              02S0480
@PB00005 DS    0H                                               02S0481
*   GEN(  EJECT);                                               02S0481
           EJECT
*                                                               02S0482
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT: THIS INTERNAL PROCEDURE CALLS THE TCAM BUFFER MOVE    */
*   /* ROUTINE (IEDMVBFR) TO MOVE THE OUTPUT MESSAGE FROM THE OLTCB  */
*   /* INTO THE TCAM BUFFER                                  @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0482
*INSERT:                                                        02S0482
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0482
         B     @PB00006                                         02S0482
INSERT   DS    0H                                               02S0483
*   RFY                                                         02S0483
*     IEDPLMV BASED(RPARM);         /* RESPECIFY THE BASE OF THE
*                                      PARAMETER LIST USED BY   02S0483
*                                      IEDMVBFR TO MOVE THE OUTPUT
*                                      MESSAGE TO THE TCAM BUFFER
*                                                            @Y17XAU6*/
*   RFY                                                         02S0484
*     RPARM RSTD;                   /*                       @Y17XAU6*/
*   RFY                                                         02S0485
*     RSAVE RSTD;                   /*                       @Y17XAUV*/
*   RFY                                                         02S0486
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   TOTWOSV4=RETADR;                /* SAVE RETURN ADDRESS   @Y17XAU6*/
         ST    RETADR,TOTWOSV4(,OLTCBPTR)                       02S0487
*   RPARM=ADDR(TOTWOWRK);           /* ADDRESSIBILITY TO THE MOVE
*                                      PARAMETER LIST        @Y17XAU6*/
         LA    RPARM,TOTWOWRK(,OLTCBPTR)                        02S0488
*   PLMVLNTH=TOTOTCNT;              /* SET LENGTH OF DATA TO BE MOVED
*                                                            @Y17XAU6*/
         SLR   @15,@15                                          02S0489
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0489
         STH   @15,PLMVLNTH(,RPARM)                             02S0489
*   PLMVTU=RPRF;                    /* ADDRESS OF TCAM BUFFER THAT
*                                      WILL CONTAIN THE MESSAGE 02S0490
*                                                            @Y17XAU6*/
         ST    RPRF,PLMVTU(,RPARM)                              02S0490
*   PLMVTD=ADDR(PRFSHDR);           /* LOCATION IN THE BUFFER WHERE
*                                      THE DATA IS TO BE MOVED  02S0491
*                                                            @Y17XAU6*/
         LA    @15,PRFSHDR(,RPRF)                               02S0491
         ST    @15,PLMVTD(,RPARM)                               02S0491
*   PLMVSU=ADDR(TOTOTBUF);          /* ADDRESS OF OUTPUT MESSAGE TO
*                                      BE MOVED              @Y17XAU6*/
         LA    @15,TOTOTBUF(,OLTCBPTR)                          02S0492
         ST    @15,PLMVSU(,RPARM)                               02S0492
*   PLMVSD=ADDR(TOTOTBUF);          /* ADDRESS OF OUTPUT MESSAGE TO
*                                      BE MOVED              @Y17XAU6*/
         ST    @15,PLMVSD(,RPARM)                               02S0493
*   PLMVFLG1=ZERO(1:1);             /* CLEAR FLAGS           @Y17XAU6*/
         MVC   PLMVFLG1(1,RPARM),ZERO                           02S0494
*   PLMVSCTG=ON;                    /* INDICATE THAT THE MESSAGE IS
*                                      IN A CONTIGUOUS AREA  @Y17XAU6*/
         OI    PLMVSCTG(RPARM),B'01000000'                      02S0495
*   PLMVFLG2=ZERO(1:1);             /* CLEAR FLAGS           @Y17XAU6*/
         MVC   PLMVFLG2(1,RPARM),ZERO                           02S0496
*   RSAVE=ADDR(TOTSAVE2);           /* SET SAVE AREA FOR IEDMVBFR
*                                                            @YM07336*/
         LA    RSAVE,TOTSAVE2(,OLTCBPTR)                        02S0497
*   CALL IEDMVBFR;                  /* GO PUT MESSAGE INTO TCAM 02S0498
*                                      BUFFER                @Y17XAU6*/
         L     @15,AVTMVBFR(,RAVT)                              02S0498
         BALR  @14,@15                                          02S0498
*   RSAVE=ADDR(TOTSAVE6);           /* RESTORE MY SAVE AREA PTR 02S0499
*                                                            @YM07336*/
         LA    RSAVE,TOTSAVE6(,OLTCBPTR)                        02S0499
*   RETADR=TOTWOSV4;                /* GET RETURN ADDRESS    @Y17XAU6*/
         L     RETADR,TOTWOSV4(,OLTCBPTR)                       02S0500
*   RFY                                                         02S0501
*     RPARM UNRSTD;                 /*                       @Y17XAU6*/
*   RFY                                                         02S0502
*     RSAVE UNRSTD;                 /*                       @Y17XAUV*/
*   RFY                                                         02S0503
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   END INSERT;                     /* END INSERT PROCEDURE          */
@EL00006 DS    0H                                               02S0504
@EF00006 DS    0H                                               02S0504
@ER00006 BR    @14                                              02S0504
@PB00006 DS    0H                                               02S0505
*   GEN(  EJECT);                                               02S0505
           EJECT
*                                                               02S0506
*   /*****************************************************************/
*   /*                                                               */
*   /* MVMSG: THIS INTERNAL PROCEDURE DETERMINES THE TYPE OF REMOTE  */
*   /* DEVICE AND INSERTS THE CORRECT LINE CONTROL CHARACTERS INTO   */
*   /* THE OUTPUT MESSAGE                                    @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0506
*MVMSG:                                                         02S0506
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0506
         B     @PB00007                                         02S0506
MVMSG    DS    0H                                               02S0507
*   RFY                                                         02S0507
*     RLCB RSTD;                                                02S0507
*   RFY                                                         02S0508
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0509
*     RDCT RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0510
*     RSIB RSTD;                    /*                       @Y17XAUV*/
*   RFY                                                         02S0511
*     RPARM RSTD;                   /*                       @Y17XAU6*/
*   TOTWOSV3=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV3(,OLTCBPTR)                       02S0512
*   IF TOTSRCE=ON THEN              /* SOURCE REQUEST                */
         TM    TOTSRCE(OLTCBPTR),B'00010000'                    02S0513
         BNO   @RF00513                                         02S0513
*     RLCB=TOTSRLCB;                /* GET LCB ADDRESS               */
         L     RLCB,TOTSRLCB(,OLTCBPTR)                         02S0514
*   ELSE                                                        02S0515
*     RLCB=ENTLCBAD;                /* GET LCB ADDRESS RTRM CONTAINS
*                                      TTE ADDRESS ON ENTRY          */
         B     @RC00513                                         02S0515
@RF00513 L     RLCB,ENTLCBAD-1(,RDEV)                           02S0515
         LA    RLCB,0(,RLCB)                                    02S0515
*   IF TRMPREF=ON&TRMTYPE=TRMLUNT THEN/* 3705 RESOURCE AND LU ENTRY  */
@RC00513 TM    TRMPREF(RTRM),B'00010000'                        02S0516
         BNO   @RF00516                                         02S0516
         CLI   TRMTYPE(RTRM),X'30'                              02S0516
         BNE   @RF00516                                         02S0516
*     DO;                                                       02S0517
*       IF TOTSRCE=ON THEN          /* SOURCE REQUEST        @YM08138*/
         TM    TOTSRCE(OLTCBPTR),B'00010000'                    02S0518
         BNO   @RF00518                                         02S0518
*         DO;                       /* YES                   @YM08138*/
*           RDCT=AVTCSTCS+(TRMCHCIN-1)*AVTDCTLN;/* DCT ADDRESS  02S0520
*                                                            @YM08138*/
         SLR   @11,@11                                          02S0520
         IC    @11,TRMCHCIN(,RTRM)                              02S0520
         BCTR  @11,0                                            02S0520
         MH    @11,AVTDCTLN(,RAVT)                              02S0520
         AL    @11,AVTCSTCS(,RAVT)                              02S0520
         LR    RDCT,@11                                         02S0520
*           IF DCTL3270=OFF THEN    /* NON 3270              @YM08138*/
         TM    DCTL3270(RDCT),B'01000000'                       02S0521
         BNZ   @RF00521                                         02S0521
*             DO;                   /* INSERT CONTROL CHARACTER 02S0522
*                                                            @YM08138*/
*               TOTOTBUF(TOTOTCNT+1:TOTOTCNT+1)=CRCHAR;/* INSERT CR
*                                                            @YM08138*/
         SLR   @15,@15                                          02S0523
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0523
         ALR   @15,OLTCBPTR                                     02S0523
         MVC   TOTOTBUF(1,@15),CRCHAR                           02S0523
*               TOTOTCNT=TOTOTCNT+1;/* UPDATE COUNT          @YM08138*/
         SLR   @15,@15                                          02S0524
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0524
         AL    @15,@CF00061                                     02S0524
         STC   @15,TOTOTCNT(,OLTCBPTR)                          02S0524
*             END;                  /*                       @YM08138*/
*           ELSE                    /* THIS IS 3270          @YM08138*/
*             DO;                   /* INSERT 3270 CONTROL      02S0526
*                                      CHARS@YM08138                 */
         B     @RC00521                                         02S0526
@RF00521 DS    0H                                               02S0527
*                                                               03S0527
*               /*****************************************************/
*               /*                                                   */
*               /* MVMSG.S3270: THIS SEGMENT INSERTS CONTROL         */
*               /* CHARACTERS FOR A SNA 3270 INTO THE OUTPUT BUFFER  */
*               /* IMMEDIATELY PRECEDING THE MESSAGE.        @YM08138*/
*               /*                                                   */
*               /*****************************************************/
*                                                               03S0527
*               TOTINBUF=TOTOTBUF;  /* SAVE MESSAGE IN INPUT BUFFER
*                                                            @YM08138*/
         MVC   TOTINBUF(80,OLTCBPTR),TOTOTBUF(OLTCBPTR)         03S0527
*               TOTOTBUF(1:2)=CNTS3270;/* INSERT WRITE,ERASE CHARS
*                                                            @YM08138*/
         MVC   TOTOTBUF(2,OLTCBPTR),CNTS3270                    03S0528
*               TOTOTBUF(3:TOTOTCNT+3)=TOTINBUF;/* PLACE MSG AFTER
*                                      CHARS                 @YM08138*/
         SLR   @15,@15                                          03S0529
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0529
         EX    @15,@SM02799                                     03S0529
*               TOTOTCNT=TOTOTCNT+LENGTH(CNTS3270);/* UPDATE COUNT
*                                                            @YM08138*/
         AL    @15,@CF00065                                     03S0530
         STC   @15,TOTOTCNT(,OLTCBPTR)                          03S0530
*             END;                  /*                       @YM08138*/
*           TOTEXIT=ON;             /* SET EXIT FLAG         @YM08138*/
@RC00521 L     @15,TOTEXIT(,OLTCBPTR)                           02S0532
@GL00012 LR    @11,@15                                          02S0532
         O     @11,@CF02789                                     02S0532
         CS    @15,@11,TOTEXIT(OLTCBPTR)                        02S0532
         BNE   @GL00012                                         02S0532
*           CALL GETBUF;            /* GET A BUFFER          @YM08456*/
         BAL   @14,GETBUF                                       02S0533
*           CALL INSERT;            /*                       @YM08138*/
         BAL   @14,INSERT                                       02S0534
*         END;                      /*                       @YM08138*/
*       ELSE                        /*                       @YM08138*/
*         DO;                                                   02S0536
         B     @RC00518                                         02S0536
@RF00518 DS    0H                                               02S0537
*           CALL RHPROC;            /* SET UP REQUEST HEADER @Y17XAUV*/
         BAL   @14,RHPROC                                       02S0537
*           CALL GETBUF;            /* GET A BUFFER          @YM08456*/
         BAL   @14,GETBUF                                       02S0538
*           CALL INSERT;            /* INSERT DATA IN BUFFER         */
         BAL   @14,INSERT                                       02S0539
*           TRMTDIFF=OFF;           /* INDICATES CONTROL FLOW FOR
*                                      TOTE MH USE           @Y17XAUV*/
         LA    @09,TRMTDIFF(,RTRM)                              02S0540
         LR    @06,@09                                          02S0540
         LA    @15,3                                            02S0540
         NR    @06,@15                                          02S0540
         LCR   @06,@06                                          02S0540
         ALR   @09,@06                                          02S0540
         L     @15,0(,@09)                                      02S0540
@GL00013 LR    @11,@15                                          02S0540
         N     @11,@CB02801+3(@06)                              02S0540
         CS    @15,@11,0(@09)                                   02S0540
         BNE   @GL00013                                         02S0540
*           TOTEXIT=ON;             /* SET EXIT FLAG                 */
         L     @15,TOTEXIT(,OLTCBPTR)                           02S0541
@GL00014 LR    @11,@15                                          02S0541
         O     @11,@CF02789                                     02S0541
         CS    @15,@11,TOTEXIT(OLTCBPTR)                        02S0541
         BNE   @GL00014                                         02S0541
*         END;                                                  02S0542
*     END;                                                      02S0543
*   ELSE                                                        02S0544
*     DO;                                                       02S0544
*                                                               02S0544
         B     @RC00516                                         02S0544
@RF00516 DS    0H                                               02S0545
*/* ? IEDDCT REG(RDCT);                                              */
*                                                               02S0545
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP ADDRESSABILITY TO THE DCT ENTRY                    */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0545
*       RDCT=AVTCSTCS+(TRMCHCIN-1)*AVTDCTLN;/* DCT ENTRY ADDRESS     */
         SLR   @11,@11                                          02S0545
         IC    @11,TRMCHCIN(,RTRM)                              02S0545
         BCTR  @11,0                                            02S0545
         MH    @11,AVTDCTLN(,RAVT)                              02S0545
         AL    @11,AVTCSTCS(,RAVT)                              02S0545
         LR    RDCT,@11                                         02S0545
*       IF DCT3270=ON THEN                                      02S0546
         TM    DCT3270(RDCT),B'00000100'                        02S0546
         BNO   @RF00546                                         02S0546
*         DO;                                                   02S0547
*           IF DCTBISYN=ON THEN     /* IF 3270 DEVICE AND BISYNC
*                                      DEVICE THEN PROCESS A REMOTE
*                                      3270 REQUEST          @Y17XAU6*/
         TM    DCTBISYN(RDCT),B'10000000'                       02S0548
         BNO   @RF00548                                         02S0548
*                                                               03S0549
*             /*******************************************************/
*             /*                                                     */
*             /* MVMSG.R3270: THIS SEGMENT INSERTS A STX AT THE START*/
*             /* OF THE DATA AND INSERTS A BLANK, INSERT CURSOR, ETX */
*             /* ,EOT SEQUENCE AT THE END OF THE DATA FOR AN EP      */
*             /* REMOTE 3270. A BLANK, INSERT CURSOR IS PUT AT THE   */
*             /* END OF THE DATA FOR A REMOTE 3270 ON A 3705 @Y17XAU6*/
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0549
*             DO;                                               03S0549
*               IF TRMPREF=ON       /* IF 3270 IS ON A 3705  @Y17XAU6*/
*                 THEN                                          03S0550
         TM    TRMPREF(RTRM),B'00010000'                        03S0550
         BNO   @RF00550                                         03S0550
*                 DO;               /* DO THE FOLLOWING              */
*                   TOTINBUF=TOTOTBUF;/* OUTPUT DATA TO INPUT AREA   */
         MVC   TOTINBUF(80,OLTCBPTR),TOTOTBUF(OLTCBPTR)         03S0552
*                   TOTOTBUF(1:3)=CNTR3270;/* INSERT CONTROL SEQUENCE*/
         MVC   TOTOTBUF(3,OLTCBPTR),CNTR3270                    03S0553
*                   TOTOTBUF(4:TOTOTCNT+4)=TOTINBUF;/* OUTPUT DATA
*                                      BACK TO OUTPUT AREA           */
         SLR   @15,@15                                          03S0554
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0554
         EX    @15,@SM02805                                     03S0554
*                   TOTOTBUF(TOTOTCNT+4:TOTOTCNT+5)=CURSOR;/* INSERT
*                                      BLANK AND INSERT CURSOR  03S0555
*                                      COMMAND AT END OF MESSAGE
*                                                            @Y17XAU6*/
         ALR   @15,OLTCBPTR                                     03S0555
         MVC   TOTOTBUF+3(2,@15),CURSOR                         03S0555
*                   TOTOTCNT=TOTOTCNT+5;/* INCREMENT DATA OUTPUT
*                                      COUNT BY 5            @Y17XAU6*/
         SLR   @15,@15                                          03S0556
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0556
         AL    @15,@CF00163                                     03S0556
         STC   @15,TOTOTCNT(,OLTCBPTR)                          03S0556
*                 END;                                          03S0557
*               ELSE                                            03S0558
*                 DO;                                           03S0558
         B     @RC00550                                         03S0558
@RF00550 DS    0H                                               03S0559
*                   TOTINBUF=TOTOTBUF;/* OUTPUT DATA TO INPUT AREA   */
         MVC   TOTINBUF(80,OLTCBPTR),TOTOTBUF(OLTCBPTR)         03S0559
*                   TOTOTBUF(1:1)=STX;/* INSERT STX IN FIRST BYTE    */
         MVC   TOTOTBUF(1,OLTCBPTR),STX                         03S0560
*                   TOTOTBUF(2:TOTOTCNT+1)=TOTINBUF;/* OUTPUT DATA
*                                      BACK TO OUTPUT AREA           */
         SLR   @15,@15                                          03S0561
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0561
         LR    @11,@15                                          03S0561
         BCTR  @11,0                                            03S0561
         EX    @11,@SM02793                                     03S0561
*                   TOTOTBUF(TOTOTCNT+1:TOTOTCNT+4)=BSC3270;/* INSERT
*                                      BISYNCH ENDING CONTROL AT THE
*                                      END OF THE DATA       @Y17XAU6*/
         ALR   @15,OLTCBPTR                                     03S0562
         MVC   TOTOTBUF(4,@15),BSC3270                          03S0562
*                   TOTOTCNT=TOTOTCNT+5;/* INCREMENT OUTPUT COUNT BY
*                                      5                             */
         SLR   @15,@15                                          03S0563
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0563
         AL    @15,@CF00163                                     03S0563
         STC   @15,TOTOTCNT(,OLTCBPTR)                          03S0563
*                 END;                                          03S0564
*             END;                                              03S0565
*           ELSE                    /* OTHERWISE PROCESS A LOCAL 3270
*                                      REQUEST               @Y17XAU6*/
*                                                               03S0566
*             /*******************************************************/
*             /*                                                     */
*             /* MVMSG.L3270: THIS SEGEMENT INSERTS A BLANK AND      */
*             /* INSERT CURSOR SEQUENCE AT THE END OF THE DATA FOR A */
*             /* LOCAL 3270.                                         */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0566
*             DO;                                               03S0566
         B     @RC00548                                         03S0566
@RF00548 DS    0H                                               03S0567
*               TOTOTBUF(TOTOTCNT+1:TOTOTCNT+2)=CURSOR;/* BLANK AND
*                                      INSERT CURSOR COMMAND INSERTED
*                                      AT END OF DATA        @Y17XAU6*/
         SLR   @15,@15                                          03S0567
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0567
         ALR   @15,OLTCBPTR                                     03S0567
         MVC   TOTOTBUF(2,@15),CURSOR                           03S0567
*               TOTOTCNT=TOTOTCNT+2;/* INCREMENT OUTPUT COUNT        */
         SLR   @15,@15                                          03S0568
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0568
         AL    @15,@CF00065                                     03S0568
         STC   @15,TOTOTCNT(,OLTCBPTR)                          03S0568
*             END;                                              03S0569
*           CALL GETBUF;            /* GET A BUFFER          @YM08456*/
@RC00548 BAL   @14,GETBUF                                       02S0570
*           CALL INSERT;            /* PUT DATA INTO TCAM BUFFER
*                                                            @Y17XAU6*/
         BAL   @14,INSERT                                       02S0571
*           TOTEXIT=ON;             /* SET EXIT FLAG                 */
         L     @15,TOTEXIT(,OLTCBPTR)                           02S0572
@GL00015 LR    @11,@15                                          02S0572
         O     @11,@CF02789                                     02S0572
         CS    @15,@11,TOTEXIT(OLTCBPTR)                        02S0572
         BNE   @GL00015                                         02S0572
*         END;                      /*                       @Y17XAU6*/
*       IF TOTEXIT=OFF THEN                                     02S0574
@RF00546 TM    TOTEXIT(OLTCBPTR),B'00010000'                    02S0574
         BNZ   @RF00574                                         02S0574
*         IF TRMPREF=ON THEN        /* PROCESSING INCOMPLETE AND 3705
*                                      RESOURCE                      */
         TM    TRMPREF(RTRM),B'00010000'                        02S0575
         BNO   @RF00575                                         02S0575
*           DO;                                                 02S0576
*             TOTOTBUF(TOTOTCNT+1:TOTOTCNT+1)=CRCHAR;/* INSERT CR AT
*                                      END OF DATA                   */
         SLR   @15,@15                                          02S0577
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0577
         ALR   @15,OLTCBPTR                                     02S0577
         MVC   TOTOTBUF(1,@15),CRCHAR                           02S0577
*             TOTOTCNT=TOTOTCNT+ONE;/* INCREMENT OUTPUT COUNT BY 1   */
         SLR   @15,@15                                          02S0578
         IC    @15,TOTOTCNT(,OLTCBPTR)                          02S0578
         SLR   @11,@11                                          02S0578
         IC    @11,ONE                                          02S0578
         ALR   @15,@11                                          02S0578
         STC   @15,TOTOTCNT(,OLTCBPTR)                          02S0578
*             CALL GETBUF;          /* GET A BUFFER          @YM08456*/
         BAL   @14,GETBUF                                       02S0579
*             CALL INSERT;          /* PUT DATA IN UNITS             */
         BAL   @14,INSERT                                       02S0580
*             TOTEXIT=ON;           /* SET EXIT FLAG                 */
         L     @15,TOTEXIT(,OLTCBPTR)                           02S0581
@GL00016 LR    @11,@15                                          02S0581
         O     @11,@CF02789                                     02S0581
         CS    @15,@11,TOTEXIT(OLTCBPTR)                        02S0581
         BNE   @GL00016                                         02S0581
*           END;                                                02S0582
*       IF TOTEXIT=OFF THEN                                     02S0583
@RF00575 DS    0H                                               02S0583
@RF00574 TM    TOTEXIT(OLTCBPTR),B'00010000'                    02S0583
         BNZ   @RF00583                                         02S0583
*         IF DCTNOIDL=ON THEN       /* PROCESSING INCOMPLETE AND A
*                                      2260 REMOTE                   */
         TM    DCTNOIDL(RDCT),B'00000010'                       02S0584
         BNO   @RF00584                                         02S0584
*           DO;                                                 02S0585
*             RFY                                               02S0586
*               RDCT UNRSTD;                                    02S0586
*             CALL BISYNC;          /* PROCESS REMOTE 2260      02S0587
*                                      DEPENDENCIES                  */
         BAL   @14,BISYNC                                       02S0587
*             CALL GETBUF;          /* GET A BUFFER          @YM08456*/
         BAL   @14,GETBUF                                       02S0588
*             CALL INSERT;          /* PUT DATA IN UNITS             */
         BAL   @14,INSERT                                       02S0589
*             TOTEXIT=ON;           /* SET EXIT FLAG                 */
         L     @15,TOTEXIT(,OLTCBPTR)                           02S0590
@GL00017 LR    @11,@15                                          02S0590
         O     @11,@CF02789                                     02S0590
         CS    @15,@11,TOTEXIT(OLTCBPTR)                        02S0590
         BNE   @GL00017                                         02S0590
*           END;                                                02S0591
*       IF TOTEXIT=OFF THEN                                     02S0592
@RF00584 DS    0H                                               02S0592
@RF00583 TM    TOTEXIT(OLTCBPTR),B'00010000'                    02S0592
         BNZ   @RF00592                                         02S0592
*         DO;                                                   02S0593
*           IF LCBSYNC=ON THEN      /* PROCESSING INCOMPLETE AND
*                                      BISYNC DEVICE         @Y17XAU6*/
         TM    LCBSYNC(RLCB),B'00000100'                        02S0594
         BNO   @RF00594                                         02S0594
*             CALL BISYNC;          /* PROCESS BISYNC DEPENDENCIES   */
         BAL   @14,BISYNC                                       02S0595
*           ELSE                    /* OTHERWISE, PROCESS NONBISYNC
*                                      DEPENDENCIES          @Y17XAU6*/
*                                                               03S0596
*             /*******************************************************/
*             /*                                                     */
*             /* MVMSG.NBISYNC: THIS SEGMENT INSERTS THE REQUIRED    */
*             /* LINE CONTROL FOR START/STOP CONTROL TERMINAL OR     */
*             /* ALTERNATE PRINTER MESSAGES                  @Y17XAU6*/
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0596
*             DO;                                               03S0596
         B     @RC00594                                         03S0596
@RF00594 DS    0H                                               03S0597
*               TOTOTBUF(TOTOTCNT+1:TOTOTCNT+2)=SSEND;/* INSERT NEW
*                                      LINE AND EOT AT END OF OUTPUT
*                                      DATA                  @Y17XAU6*/
         SLR   @15,@15                                          03S0597
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0597
         ALR   @15,OLTCBPTR                                     03S0597
         MVC   TOTOTBUF(2,@15),SSEND                            03S0597
*               TOTOTCNT=TOTOTCNT+2;/* INCREMENT OUTPUT COUNT BY 2   */
         SLR   @15,@15                                          03S0598
         IC    @15,TOTOTCNT(,OLTCBPTR)                          03S0598
         AL    @15,@CF00065                                     03S0598
         STC   @15,TOTOTCNT(,OLTCBPTR)                          03S0598
*             END;                                              03S0599
*           CALL GETBUF;            /* GET A BUFFER          @YM08456*/
@RC00594 BAL   @14,GETBUF                                       02S0600
*           CALL INSERT;            /* PUT DATA IN UNITS             */
         BAL   @14,INSERT                                       02S0601
*         END;                                                  02S0602
*     END;                                                      02S0603
@RF00592 DS    0H                                               02S0604
*   RETADR=TOTWOSV3;                /* RESTORE RETURN ADDRESS        */
@RC00516 L     RETADR,TOTWOSV3(,OLTCBPTR)                       02S0604
*   RFY                                                         02S0605
*     RLCB UNRSTD;                                              02S0605
*   RFY                                                         02S0606
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0607
*     RSIB UNRSTD;                  /*                       @Y17XAUV*/
*   RFY                                                         02S0608
*     RDCT UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0609
*     RPARM UNRSTD;                 /*                       @Y17XAU6*/
*   END MVMSG;                      /* END MVMSG PROCEDURE           */
@EL00007 DS    0H                                               02S0610
@EF00007 DS    0H                                               02S0610
@ER00007 BR    @14                                              02S0610
@PB00007 DS    0H                                               02S0611
*   GEN(  EJECT);                                               02S0611
           EJECT
*                                                               02S0612
*   /*****************************************************************/
*   /*                                                               */
*   /* POSTBUF: THIS INTERNAL PROCEDURE POSTS THE BUFFER TO THE      */
*   /* DESTINATION QUEUE AND AN ELEMENT WITH A LOWER PRIORITY CHAINED*/
*   /* TO IT SO THAT IEDQWO DOES NOT GET CONTROL BACK UNTIL TCAM HAS */
*   /* PROCESSED THE OUTPUT BUFFER.                          @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0612
*POSTBUF:                                                       02S0612
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0612
         B     @PB00008                                         02S0612
POSTBUF  DS    0H                                               02S0613
*   RFY                                                         02S0613
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0614
*     REG0 RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0615
*     RPARM RSTD;                   /*                       @Y17XAU6*/
*   RFY                                                         02S0616
*     RRESPL RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0617
*     RTTC RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0618
*     RLCB RSTD;                    /*                       @Y17XAU6*/
*   TOTWOSV3=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV3(,OLTCBPTR)                       02S0619
*   REG0=ADDR(TOTWAWRK);            /* GET ADDRESS OF WORK AREA TO BE
*                                      USED BY POST/WAIT ROUTINE
*                                                            @Y17XAU6*/
         LA    REG0,TOTWAWRK(,OLTCBPTR)                         02S0620
*   RPARM=RPRF;                     /* SET REGISTER 1 TO BUFFER TO BE
*                                      POSTED                @Y17XAU6*/
         LR    RPARM,RPRF                                       02S0621
*   GEN(ICM RPARM,8,REQKEY);        /* SET ELEMENT KEY IN REG 0 02S0622
*                                                            @Y17XAU6*/
         ICM RPARM,8,REQKEY
*   PRFLINK=ADDR(TOTWOWRK);         /* CHAIN WAITING ELEMENT TO THE
*                                      BUFFER                @Y17AXU6*/
         LA    @15,TOTWOWRK(,OLTCBPTR)                          02S0623
         STCM  @15,7,PRFLINK(RPRF)                              02S0623
*   RTTC=ADDR(TOTWAWRK);            /* SET ADDRESS BASE FOR TCAM/TOTE
*                                      STRUCTURE             @Y17XAU6*/
         LA    RTTC,TOTWAWRK(,OLTCBPTR)                         02S0624
*   REQQCB=ADDR(TTCQCB);            /* SET QCB TO THE QCB USED BY
*                                      IEDQWA                @Y17XAU6*/
         LA    @15,40                                           02S0625
         ALR   @15,RTTC                                         02S0625
         ST    @15,REQQCB(,OLTCBPTR)                            02S0625
*   REQLINK=ZERO;                   /* CLEAR LINK FIELD INDICATING
*                                      LAST ELEMENT          @Y17XAU6*/
         MVC   REQLINK(3,OLTCBPTR),ZERO+1                       02S0626
*   REQPRI=PRILNSCL;                /* SET PRIORITY TO ONE LEVEL
*                                      LOWER THAN QCB POST TO   02S0627
*                                      DESTINATION QCB       @OX21052*/
         MVI   REQPRI(OLTCBPTR),X'E3'                           02S0627
*   RRESPL=TOTRESPL;                /* GET ADDRESS OF RESPL  @Y17XAU6*/
         L     RRESPL,TOTRESPL(,OLTCBPTR)                       02S0628
*   CALL POSTWAIT;                  /* CALL IEDQWA TO POST OUTPUT
*                                      BUFFER AND REQUEST ELEMENT TO
*                                      TCAM                  @Y17XAU6*/
         L     @15,RESPLRVT(,RRESPL)                            02S0629
         BALR  @14,@15                                          02S0629
*   RETADR=TOTWOSV3;                /* RESTORE RETURN ADDRESS        */
         L     RETADR,TOTWOSV3(,OLTCBPTR)                       02S0630
*   RFY                                                         02S0631
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0632
*     REG0 UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0633
*     RPARM UNRSTD;                 /*                       @Y17XAU6*/
*   RFY                                                         02S0634
*     RRESPL UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0635
*     RTTC UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0636
*     RLCB UNRSTD;                  /*                       @Y17XAU6*/
*   END POSTBUF;                    /* END POSTBUF PROCEDURE         */
@EL00008 DS    0H                                               02S0637
@EF00008 DS    0H                                               02S0637
@ER00008 BR    @14                                              02S0637
@PB00008 DS    0H                                               02S0638
*   GEN(   EJECT);                                              02S0638
            EJECT
*                                                               02S0639
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.RHPROC: THIS SEGMENT SETS UP THE RH FIELDS NECESSARY  */
*   /* TO SEND THE MESSAGE TO A SNA LU.                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0639
*RHPROC:                                                        02S0639
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0639
         B     @PB00009                                         02S0639
RHPROC   DS    0H                                               02S0640
*   RFY                                                         02S0640
*     IEDRH BASED(ADDR(TOTOTBUF));  /* START OF OUTPUT BUF   @Y17XAUV*/
*   RFY                                                         02S0641
*     IEDSIBD BASED(RSIB);          /* SESSION INFO. BLOCK   @Y17XAUV*/
*   RFY                                                         02S0642
*     RSIB RSTD;                    /* SIB BASE              @Y17XAUV*/
*   RFY                                                         02S0643
*     RDCT RSTD;                    /* DCT BASE              @Y17XAUV*/
*   RFY                                                         02S0644
*     RRESPL RSTD;                  /* RESPL BASE            @Y17XAUV*/
*   RFY                                                         02S0645
*     RETADR RSTD;                  /* RETURN ADDR           @Y17XAUV*/
*   TOTINBUF=TOTOTBUF(1:LENGTH(TOTINBUF));/* SAVE TEMPORARILY   02S0646
*                                                            @Y17XAUV*/
         MVC   TOTINBUF(80,OLTCBPTR),TOTOTBUF(OLTCBPTR)         02S0646
*   IEDRH=''B;                      /* CLEAR RH              @Y17XAUV*/
         XC    IEDRH+844(3,OLTCBPTR),IEDRH+844(OLTCBPTR)        02S0647
*   TOTOTBUF(LENGTH(IEDRH)+1:MXSNALEN)=TOTINBUF;/* RESTORE CONTENTS
*                                      OF BUF PAST RH        @Y17XAUV*/
         LH    @15,MXSNALEN                                     02S0648
         LR    @11,@15                                          02S0648
         SL    @11,@CF00256                                     02S0648
         EX    @11,@SM02805                                     02S0648
*   TOTOTCNT=TOTOTCNT+LENGTH(IEDRH);/* UPDATE COUNT          @Y17XAUV*/
         LA    @11,3                                            02S0649
         SLR   @09,@09                                          02S0649
         IC    @09,TOTOTCNT(,OLTCBPTR)                          02S0649
         ALR   @11,@09                                          02S0649
         STC   @11,TOTOTCNT(,OLTCBPTR)                          02S0649
*   IF TOTOTCNT>MXSNALEN THEN       /* IF COUNT EXCEEDS MAX  @Y17XAUV*/
         CR    @11,@15                                          02S0650
         BNH   @RF00650                                         02S0650
*     TOTOTCNT=MXSNALEN;            /* SET COUNT TO MAX      @Y17XAUV*/
         STC   @15,TOTOTCNT(,OLTCBPTR)                          02S0651
*   RRESPL=TOTRESPL;                /* ADDR OF RESIDENT PL   @Y17XAUV*/
@RF00650 L     RRESPL,TOTRESPL(,OLTCBPTR)                       02S0652
*   RSIB=TRMSIBPT;                  /* GET 1ST SIB           @Y17XAUV*/
         SLR   RSIB,RSIB                                        02S0653
         ICM   RSIB,7,TRMSIBPT(RTRM)                            02S0653
*   DO WHILE(SIBINDEX^=SAVTSCPT&SIBINDEX^=RESMHSRC);/* SCAN WHILE NOT
*                                      SSCP OR TOTE SIB      @Y17XAUV*/
         B     @DE00654                                         02S0654
@DL00654 DS    0H                                               02S0655
*     RSIB=SIBCHAIN;                /* GET NEXT SIB          @Y17XAUV*/
         L     RSIB,SIBCHAIN(,RSIB)                             02S0655
*   END;                            /*                       @Y17XAUV*/
@DE00654 L     @15,AVTSAVTP(,RAVT)                              02S0656
         CLC   SIBINDEX(2,RSIB),SAVTSCPT(@15)                   02S0656
         BE    @DC00654                                         02S0656
         CLC   SIBINDEX(2,RSIB),RESMHSRC(RRESPL)                02S0656
         BNE   @DL00654                                         02S0656
@DC00654 DS    0H                                               02S0657
*   IF SIBINDEX=SAVTSCPT THEN       /* IF SSCP SIB,          @Y17XAUV*/
         L     @15,AVTSAVTP(,RAVT)                              02S0657
         CLC   SIBINDEX(2,RSIB),SAVTSCPT(@15)                   02S0657
         BNE   @RF00657                                         02S0657
*     TRHBB=ON;                     /* SET BEGIN BRACKET,    @Y17XAUV*/
         OI    TRHBB+844(OLTCBPTR),B'10000000'                  02S0658
*   ELSE                                                        02S0659
*     ;                             /* WITHIN BRACKETS       @Y17XAUV*/
@RF00657 DS    0H                                               02S0660
*   RDCT=AVTCSTCS+(TRMCHCIN-1)*AVTDCTLN;/* DCT ENTRY ADDR    @Y17XAUV*/
         SLR   @01,@01                                          02S0660
         IC    @01,TRMCHCIN(,RTRM)                              02S0660
         BCTR  @01,0                                            02S0660
         MH    @01,AVTDCTLN(,RAVT)                              02S0660
         AL    @01,AVTCSTCS(,RAVT)                              02S0660
         LR    RDCT,@01                                         02S0660
*   IF TOTREPLY=ON&DCTL3270=OFF THEN/* IF CECOM W/ REPLY & NOT A 3270
*                                      (3270 IS HDX-CTX)     @Y17XAUV*/
         TM    TOTREPLY(OLTCBPTR),B'00100000'                   02S0661
         BNO   @RF00661                                         02S0661
         TM    DCTL3270(RDCT),B'01000000'                       02S0661
         BNZ   @RF00661                                         02S0661
*     TRHCDI=ON;                    /* SET CHG DIRECTION IND @Y17XAUV*/
         OI    TRHCDI+844(OLTCBPTR),B'00100000'                 02S0662
*   ELSE                                                        02S0663
*     ;                             /* NO CHG DIRECTION      @Y17XAUV*/
@RF00661 DS    0H                                               02S0664
*   RFY                                                         02S0664
*     RETADR UNRSTD;                /* RETURN ADDR           @Y17XAUV*/
*   RFY                                                         02S0665
*     RRESPL UNRSTD;                /* RESPL BASE            @Y17XAUV*/
*   RFY                                                         02S0666
*     RDCT UNRSTD;                  /* DCT BASE              @Y17XAUV*/
*   RFY                                                         02S0667
*     RSIB UNRSTD;                  /* SIB BASE              @Y17XAUV*/
*   RFY                                                         02S0668
*     IEDSIBD BASED;                /* BASE AS ON ENTRY      @Y17XAUV*/
*   RFY                                                         02S0669
*     IEDRH BASED;                  /* BASE AS ON ENTRY      @Y17XAUV*/
*   END RHPROC;                                                 02S0670
@EL00009 DS    0H                                               02S0670
@EF00009 DS    0H                                               02S0670
@ER00009 BR    @14                                              02S0670
@PB00009 DS    0H                                               02S0671
*   GEN(  EJECT);                                               02S0671
           EJECT
*                                                               02S0672
*   /*****************************************************************/
*   /*                                                               */
*   /* RNPROC: THIS INTERNAL PROCEDURE PROCESSES A REQUEST FOR A     */
*   /* CONTROL TERMINAL OR ALTERNATE PRINTER ON A 3705       @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0672
*RNPROC:                                                        02S0672
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0672
         B     @PB00010                                         02S0672
RNPROC   DS    0H                                               02S0673
*   RFY                                                         02S0673
*     RTNT RSTD;                                                02S0673
*   RFY                                                         02S0674
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   TOTWOSV2=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV2(,OLTCBPTR)                       02S0675
*   IF TOTCECOM=ON×TOTPRECT=ON      /* CECOM REQUEST OR CT EQU AP    */
*     THEN                                                      02S0676
         TM    TOTCECOM(OLTCBPTR),B'01000000'                   02S0676
         BO    @RT00676                                         02S0676
         TM    TOTPRECT(OLTCBPTR),B'00000010'                   02S0676
         BNO   @RF00676                                         02S0676
@RT00676 DS    0H                                               02S0677
*     RDEV=ADDR(TOTCTENT);          /* CT CONTROL AREA               */
         LA    RDEV,TOTCTENT(,OLTCBPTR)                         02S0677
*   ELSE                                                        02S0678
*     RDEV=ADDR(TOTAPENT);          /* AP CONTROL AREA               */
         B     @RC00676                                         02S0678
@RF00676 LA    RDEV,TOTAPENT(,OLTCBPTR)                         02S0678
*   RTRM=ENTTNTAD;                  /* TNT ENTRY ADDRES      @YM08523*/
@RC00676 L     RTRM,ENTTNTAD(,RDEV)                             02S0679
*   RTRM=RTRM+TOTTTBEL;             /* GET ADDR OF TTE ADDR  @YM08523*/
         SLR   @15,@15                                          02S0680
         IC    @15,TOTTTBEL(,OLTCBPTR)                          02S0680
         ALR   RTRM,@15                                         02S0680
*   RTRM=RTRM->TNTTRMAD;            /* GET TTE ADDRESS       @YM08523*/
         SLR   @15,@15                                          02S0681
         ICM   @15,7,TNTTRMAD(RTRM)                             02S0681
         LR    RTRM,@15                                         02S0681
*   RTRM=RTRM-LENGTH(IEDNTRM);      /* POINT TO NEG PREFIX   @YM08523*/
         SL    RTRM,@CF02435                                    02S0682
*   IF TRMPREF=OFF×TRMSNA=OFF THEN  /* IF NOT SNA TERMINAL   @YM08523*/
         TM    TRMPREF(RTRM),B'00010000'                        02S0683
         BZ    @RT00683                                         02S0683
         TM    TRMSNA(RTRM),B'00000010'                         02S0683
         BNZ   @RF00683                                         02S0683
@RT00683 DS    0H                                               02S0684
*     DO;                           /* START TERMINAL        @YM08523*/
*/*      INFORM OP CONTROL TO USE TOTE COUNTERFEIT TTCIN     @YM08136*/
*/*      TO COMMUNICATE WITH NCP RESOURCE                    @YM08136*/
*                                                               02S0685
*       TOTOATTC=ON;                /* USE ALTERNATE TTCIN   @YM08136*/
         OI    TOTOATTC(OLTCBPTR),B'10000000'                   02S0685
*       TOTOALTT=ENTTTOFF;          /* SET ALTERNATE TTCIN   @YM08136*/
         LH    @15,ENTTTOFF(,RDEV)                              02S0686
         N     @15,@CF02792                                     02S0686
         STH   @15,TOTOALTT(,OLTCBPTR)                          02S0686
*       CALL STARTERM;              /* ACTIVATE TERMINAL             */
         BAL   @14,STARTERM                                     02S0687
*     END;                          /*                       @YM08523*/
*   ELSE                                                        02S0689
*     ;                             /*                       @YM08523*/
@RF00683 DS    0H                                               02S0690
*   CALL SCBBUILD;                  /* SET UP LCB AND SCB    @Y17XAU6*/
         BAL   @14,SCBBUILD                                     02S0690
*   CALL MVMSG;                     /* MOVE MSG TO BUFFER            */
         BAL   @14,MVMSG                                        02S0691
*   CALL INITHDR;                   /* SET UP HEADER PREFIX          */
         BAL   @14,INITHDR                                      02S0692
*   CALL POSTBUF;                   /* POST BUFFER TO DEST. QCB      */
         BAL   @14,POSTBUF                                      02S0693
*   TOTEXIT=ON;                     /* SET EXIT FLAG                 */
         L     @15,TOTEXIT(,OLTCBPTR)                           02S0694
@GL00022 LR    @06,@15                                          02S0694
         O     @06,@CF02789                                     02S0694
         CS    @15,@06,TOTEXIT(OLTCBPTR)                        02S0694
         BNE   @GL00022                                         02S0694
*   RETADR=TOTWOSV2;                /* RESTORE RETURN ADDRESS        */
         L     RETADR,TOTWOSV2(,OLTCBPTR)                       02S0695
*   RFY                                                         02S0696
*     RTNT UNRSTD;                                              02S0696
*   RFY                                                         02S0697
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   END RNPROC;                     /* END RNPROC PROCEDURE          */
@EL00010 DS    0H                                               02S0698
@EF00010 DS    0H                                               02S0698
@ER00010 BR    @14                                              02S0698
@PB00010 DS    0H                                               02S0699
*   GEN(   EJECT);                                              02S0699
            EJECT
*                                                               02S0700
*   /*****************************************************************/
*   /*                                                               */
*   /* SCBBUILD: THIS INTERNAL PROCEDURE BUILDS THE LCB AND SCB PAIR */
*   /* IN THE WORKAREA. INPUT IS REG 2=OLTCB ADDRESS, REG 4=AVT      */
*   /* ADDRESS, REG 7=TNT ADDRESS FOR CECOM OR DPRINT REQUEST, REG   */
*   /* 8=SOURCE TERMINAL ENTRY ADDRESS@Y17XAU6                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0700
*SCBBUILD:                                                      02S0700
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y17XAU6*/
         B     @PB00011                                         02S0700
SCBBUILD DS    0H                                               02S0701
*   RFY                                                         02S0701
*     RLCB RSTD;                    /* RESPECIFY LCB BASE    @Y17XAU6*/
*   RFY                                                         02S0702
*     RSCB RSTD;                    /* RESPECIFY SCB BASE    @Y17XAU6*/
*   RFY                                                         02S0703
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0704
*     RTTC RSTD;                    /*                       @Y17XAU6*/
*   TOTWOSV3=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV3(,OLTCBPTR)                       02S0705
*   RTTC=ADDR(TOTWKSPC);            /* GET WORK AREA ADDRESS         */
         LA    @15,TOTWKSPC(,OLTCBPTR)                          02S0706
         LR    RTTC,@15                                         02S0706
*   RLCB=ADDR(TOTWKSPC)-(ADDR(LCBRCQCB)-ADDR(IEDQLCB));/* MAP LCB
*                                      STRUCTURE ON THE WORKSPACE IN
*                                      THE OLTCB             @Y17XAU6*/
         SL    @15,@CF01746                                     02S0707
         LR    RLCB,@15                                         02S0707
*   RSCB=ADDR(TTCSCB);              /* GET ADDRESS BASE FOR SCB FOUND
*                                      IN THE WORKAREA       @Y17XAU6*/
         LA    @15,TTCSCB+40(,RTTC)                             02S0708
         LR    RSCB,@15                                         02S0708
*   LCBSCBA=ADDR(TTCSCB);           /* GET SCB ADDRESS       @Y17XAU6*/
         STCM  @15,7,LCBSCBA(RLCB)                              02S0709
*   SCBSTATE=ZERO(1:1);             /* CLEAR STATUS BYTE     @Y17XAU6*/
         MVC   SCBSTATE(1,RSCB),ZERO                            02S0710
*   IF TOTSRCE=ON                   /* SOURCE REQUEST                */
*     THEN                                                      02S0711
         TM    TOTSRCE(OLTCBPTR),B'00010000'                    02S0711
         BNO   @RF00711                                         02S0711
*     DO;                           /* YES                           */
*       IF TRMPREF=ON&TRMTYPE=TRMLUNT/* LU RESOURCE          @YM08097*/
*         THEN                                                  02S0713
         TM    TRMPREF(RTRM),B'00010000'                        02S0713
         BNO   @RF00713                                         02S0713
         CLI   TRMTYPE(RTRM),X'30'                              02S0713
         BNE   @RF00713                                         02S0713
*         DO;                       /* YES                           */
*           RFY                                                 02S0715
*             RSAVT RSTD;                                       02S0715
*           RSAVT=AVTSAVTP;         /* GET SAVT ADDRESS              */
         L     @15,AVTSAVTP(,RAVT)                              02S0716
         LR    RSAVT,@15                                        02S0716
*           SCBDESTQ=ADDR(SAVTSCPQ);/* POST MSG TO SSCP OUTBOUND QCB
*                                                            @Y17XAU6*/
         LA    @15,SAVTSCPQ(,@15)                               02S0717
         STCM  @15,7,SCBDESTQ(RSCB)                             02S0717
*           RFY                                                 02S0718
*             RSAVT UNRSTD;                                     02S0718
*         END;                                                  02S0719
*       ELSE                                                    02S0720
*         SCBDESTQ=TRMDESTQ;        /* NON-LU SOURCE - POST MSG TO
*                                      REAL DESTINATION QCB  @Y17XAU6*/
         B     @RC00713                                         02S0720
@RF00713 MVC   SCBDESTQ(3,RSCB),TRMDESTQ(RTRM)                  02S0720
*     END;                                                      02S0721
*   ELSE                                                        02S0722
*     DO;                           /* NON-SOURCE REQUEST            */
         B     @RC00711                                         02S0722
@RF00711 DS    0H                                               02S0723
*       RTRM=ENTTNTAD;              /* GET TNT ADDRESS               */
         L     RTRM,ENTTNTAD(,RDEV)                             02S0723
*       RTRM=RTRM+TOTTTBEL;         /* GET ADDRESS OF TTE ADDRESS    */
         SLR   @15,@15                                          02S0724
         IC    @15,TOTTTBEL(,OLTCBPTR)                          02S0724
         ALR   RTRM,@15                                         02S0724
*       RTRM=RTRM->TNTTRMAD;        /* GET TTE ADDRESS               */
         SLR   @15,@15                                          02S0725
         ICM   @15,7,TNTTRMAD(RTRM)                             02S0725
         LR    RTRM,@15                                         02S0725
*       RTRM=RTRM-LENGTH(IEDNTRM);  /* ADJUST TTE BASE               */
         SL    RTRM,@CF02435                                    02S0726
*       SCBDESTQ=TRMDESTQ;          /* POST MSG TO DUMMY QCB @Y17XAU6*/
         MVC   SCBDESTQ(3,RSCB),TRMDESTQ(RTRM)                  02S0727
*     END;                                                      02S0728
*   RETADR=TOTWOSV3;                /* RESTORE RETURN ADDRESS        */
@RC00711 L     RETADR,TOTWOSV3(,OLTCBPTR)                       02S0729
*   RFY                                                         02S0730
*     RLCB UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0731
*     RSCB UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0732
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0733
*     RTTC UNRSTD;                  /*                       @Y17XAU6*/
*   END SCBBUILD;                   /* END BFRSETUP PROCEDURE        */
@EL00011 DS    0H                                               02S0734
@EF00011 DS    0H                                               02S0734
@ER00011 BR    @14                                              02S0734
@PB00011 DS    0H                                               02S0735
*   GEN(  EJECT);                                               02S0735
           EJECT
*                                                               02S0736
*   /*****************************************************************/
*   /*                                                               */
*   /* STARTERM: THIS INTERNAL PROCEDURE BUILDS AN ACTIVATE TERMINAL */
*   /* OPERATOR CONTROL REQUEST AND CALLS THE IEDQWA POST/WAIT       */
*   /* ROUTINE TO POST THE ELEMENT TO OPERATOR CONTROL       @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0736
*STARTERM:                                                      02S0736
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0736
         B     @PB00012                                         02S0736
STARTERM DS    0H                                               02S0737
*   RFY                                                         02S0737
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0738
*     REG0 RSTD;                    /*                       @Y17XAU6*/
*   RFY                                                         02S0739
*     RPARM RSTD;                   /*                       @Y17XAU6*/
*   RFY                                                         02S0740
*     RLCB RSTD;                    /*                       @Y17XAUV*/
*   RFY                                                         02S0741
*     RRESPL RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0742
*     RTTC RSTD;                    /*                       @Y17XAU6*/
*   TOTWOSV3=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV3(,OLTCBPTR)                       02S0743
*   TOTOKEY=ZERO(1:1);              /* CLEAR REQUEST KEY     @Y17XAU6*/
         MVC   TOTOKEY(1,OLTCBPTR),ZERO                         02S0744
*   TOTOQCBA=ADDR(AVTOPCOB);        /* OP CONTROL QCB ADDRESS   02S0745
*                                                            @Y17XAU6*/
         LA    @15,AVTOPCOB(,RAVT)                              02S0745
         STCM  @15,7,TOTOQCBA(OLTCBPTR)                         02S0745
*   TOTOPRI=PRISSOLT;               /* SET POST PRIORITY     @Y17XAU6*/
         MVI   TOTOPRI(OLTCBPTR),X'DC'                          02S0746
*   TOTOLINK=ZERO;                  /* CLEAR LINK FIELD      @Y17XAU6*/
         MVC   TOTOLINK(3,OLTCBPTR),ZERO                        02S0747
*   TOTOVBCD=VERBCODE;              /* SET ACTIVATE VERB CODE   02S0748
*                                                            @Y17XAU6*/
         MVC   TOTOVBCD(1,OLTCBPTR),VERBCODE                    02S0748
*   TOTOELNG=LEN;                   /* LENGTH OF ELEMENT     @Y17XAU6*/
         MVC   TOTOELNG(1,OLTCBPTR),LEN                         02S0749
*   TOTORLN=ENTRLN;                 /* SET UP RLN            @Y17XAU6*/
         MVC   TOTORLN(1,OLTCBPTR),ENTRLN(RDEV)                 02S0750
*   TOTORTCD=ZERO(1:1);             /* CLEAR RETURN CODE     @Y17XAU6*/
         MVC   TOTORTCD(1,OLTCBPTR),ZERO                        02S0751
*   RTTC=ADDR(TOTWAWRK);            /* SET BASE FOR IEDQWA WORKAREA
*                                                            @Y17XAU6*/
         LA    RTTC,TOTWAWRK(,OLTCBPTR)                         02S0752
*   RPARM=ADDR(TTCQBECB);           /* GET ECB ADDRESS       @YM08136*/
         LA    RPARM,TTCQBECB+40(,RTTC)                         02S0753
*   GEN(STCM RPARM,7,TOTOECBA+1(OLTCBPTR));/* SET ECB ADDRESS   02S0754
*                                                            @YM08136*/
         STCM RPARM,7,TOTOECBA+1(OLTCBPTR)
*   TOTOLADR=''B;                   /* BLANK NAME FIELD      @Y17XAU6*/
         XC    TOTOLADR(8,OLTCBPTR),TOTOLADR(OLTCBPTR)          02S0755
*   TOTOLADR=NAME(1:TOTTTBEL);      /* SET RESOURCE NAME     @Y17XAU6*/
         MVI   TOTOLADR+1(OLTCBPTR),C' '                        02S0756
         MVC   TOTOLADR+2(6,OLTCBPTR),TOTOLADR+1(OLTCBPTR)      02S0756
         SLR   @15,@15                                          02S0756
         IC    @15,TOTTTBEL(,OLTCBPTR)                          02S0756
         BCTR  @15,0                                            02S0756
         L     @11,ENTTNTRA(,RDEV)                              02S0756
         EX    @15,@SM02808                                     02S0756
*   REG0=ADDR(TOTWAWRK);            /* SET WORKAREA ADDRESS TO BE
*                                      USED BY THE POST/WAIT ROUTINE
*                                                            @Y17XAU6*/
         LA    REG0,TOTWAWRK(,OLTCBPTR)                         02S0757
*   RPARM=ADDR(TOTPLIST);           /* SET OPERATOR CONTROL PARAMETER
*                                      LIST AS THE ELEMENT TO BE
*                                      POSTED                @Y17XAU6*/
         LA    RPARM,TOTPLIST(,OLTCBPTR)                        02S0758
*   GEN(ICM RPARM,8,REQKEY);        /* SET REQUEST KEY INDICATING
*                                      THAT THE THIRD WORD OF THE
*                                      PARAMTER LIST SHOULD NOT BE
*                                      CHANGED               @Y17XAU6*/
         ICM RPARM,8,REQKEY
*   RRESPL=TOTRESPL;                /* GET ADDRESS OF THE RESPL 02S0760
*                                                            @Y17XAU6*/
         L     RRESPL,TOTRESPL(,OLTCBPTR)                       02S0760
*   CALL POSTWAIT;                  /* POST OPERATOR CONTROL REQUEST
*                                      VIA IEDQWA            @Y17XAU6*/
         L     @15,RESPLRVT(,RRESPL)                            02S0761
         BALR  @14,@15                                          02S0761
*   TOTOATTC=OFF;                   /* RESET ALT TTCIN FLAG  @YM08136*/
         NI    TOTOATTC(OLTCBPTR),B'01111111'                   02S0762
*   RETADR=TOTWOSV3;                /* RESTORE RETURN ADDRESS        */
         L     RETADR,TOTWOSV3(,OLTCBPTR)                       02S0763
*   RFY                                                         02S0764
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0765
*     REG0 UNRSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0766
*     RPARM UNRSTD;                 /*                       @Y17XAU6*/
*   RFY                                                         02S0767
*     RLCB UNRSTD;                  /*                       @Y17XAUV*/
*   RFY                                                         02S0768
*     RRESPL UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0769
*     RTTC UNRSTD;                  /*                       @Y17XAU6*/
*   END STARTERM;                   /* END STARTERM PROCEDURE        */
@EL00012 DS    0H                                               02S0770
@EF00012 DS    0H                                               02S0770
@ER00012 BR    @14                                              02S0770
@PB00012 DS    0H                                               02S0771
*   GEN(  EJECT);                                               02S0771
           EJECT
*                                                               02S0772
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSCON: THIS INTERNAL PROCEDURE IS CALLED TO PROCESS A MESSAGE*/
*   /* IF THE CONTROL TERMINAL OR ALTERNATE PRINTER IS THE SYSTEM    */
*   /* CONSOLE. IF A CECOM WITH REPLY IS REQUESTED, A WTOR IS ISSUED.*/
*   /* OTHERWISE A WTO IS ISSUED                             @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0772
*SYSCON:                                                        02S0772
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0772
         B     @PB00013                                         02S0772
SYSCON   DS    0H                                               02S0773
*   RFY                                                         02S0773
*     REG9 RSTD;                                                02S0773
*   RFY                                                         02S0774
*     RETADR RSTD;                  /*                       @Y17XAU6*/
*   RFY                                                         02S0775
*     RPARM RSTD;                   /*                       @Y17XAU6*/
*   TOTWOSV2=RETADR;                /* SAVE RETURN ADDRESS           */
         ST    RETADR,TOTWOSV2(,OLTCBPTR)                       02S0776
*   TOTINBUF='';                    /* BLANK OUT INPUT BUFFER        */
         MVI   TOTINBUF(OLTCBPTR),C' '                          02S0777
         MVC   TOTINBUF+1(79,OLTCBPTR),TOTINBUF(OLTCBPTR)       02S0777
*   REG9=TOTOTCNT;                  /* GET OUTPUT COUNT              */
         SLR   REG9,REG9                                        02S0778
         IC    REG9,TOTOTCNT(,OLTCBPTR)                         02S0778
*   REG9=REG9+WTOPLST;              /* ADD WTO CTL AREA SIZE         */
         LH    @15,WTOPLST                                      02S0779
         ALR   REG9,@15                                         02S0779
*   TOTOTCNT=REG9;                  /* ADJUST OUTPUT COUNT           */
         STC   REG9,TOTOTCNT(,OLTCBPTR)                         02S0780
*   IF TOTREPLY=ON THEN             /* REPLY EXPECTED                */
         TM    TOTREPLY(OLTCBPTR),B'00100000'                   02S0781
         BNO   @RF00781                                         02S0781
*     DO;                           /* YES - PROCESS WTOR            */
*       TOTOTECB=TOTOTECB&&TOTOTECB;/* CLEAR ECB                     */
         XC    TOTOTECB(4,OLTCBPTR),TOTOTECB(OLTCBPTR)          02S0783
*       RETADR=ADDR(TOTOTBUF)-WTOPLST;/* CALCULATE WHERE TO BLD 02S0784
*                                                            @YM07362*/
         LA    RETADR,TOTOTBUF(,OLTCBPTR)                       02S0784
         SLR   RETADR,@15                                       02S0784
*       REG9=REG9+RETADR;           /* WTOR CONTROL FLAGS    @YM07362*/
         ALR   REG9,RETADR                                      02S0785
*       RPARM=ADDR(TOTINCNT);       /* SET WTOR PLIST ADDRESS   02S0786
*                                                            @YM07362*/
         LA    RPARM,TOTINCNT(,OLTCBPTR)                        02S0786
*       GENERATE REFS(1,REG9) SEQFLOW;                          02S0787
         USING TOTOLTCB,OLTCBPTR  RESPECIFY OLTCB BASE         @YM07379
         MVC   0(4,REG9),CDE102   SET CONTROL FLAGS            @YM07362
         WTOR  ,TOTINBUF,X'50',TOTOTECB,MF=(E,(1)),ROUTCDE=10,DESC=2
         WAIT  1,ECB=TOTOTECB      WAIT FOR REPLY
         DROP  OLTCBPTR                                        @YM07379
*     END;                                                      02S0788
*   ELSE                                                        02S0789
*     DO;                                                       02S0789
         B     @RC00781                                         02S0789
@RF00781 DS    0H                                               02S0790
*       RPARM=ADDR(TOTOTCNT)-1;     /* WTO PLIST ADDRESS     @Y17XAU6*/
         LA    RPARM,TOTOTCNT(,OLTCBPTR)                        02S0790
         BCTR  RPARM,0                                          02S0790
*       RETADR=ADDR(TOTOTBUF)-WTOPLST;/* CALCULATE WHERE TO BLD 02S0791
*                                                            @YM07362*/
         LA    RETADR,TOTOTBUF(,OLTCBPTR)                       02S0791
         SH    RETADR,WTOPLST                                   02S0791
*       REG9=REG9+RETADR;           /* WTO FLAG BYTES        @YM07362*/
         ALR   REG9,RETADR                                      02S0792
*       GENERATE REFS(1,REG9) SEQFLOW;                          02S0793
         MVC   0(4,REG9),CDE107   SET WTO FLAG BYTES           @YM07362
         WTO   MF=(E,(1)),ROUTCDE=10,DESC=7
*     END;                                                      02S0794
*   TOTEXIT=ON;                     /* SET EXIT FLAG                 */
@RC00781 L     @15,TOTEXIT(,OLTCBPTR)                           02S0795
@GL00024 LR    @06,@15                                          02S0795
         O     @06,@CF02789                                     02S0795
         CS    @15,@06,TOTEXIT(OLTCBPTR)                        02S0795
         BNE   @GL00024                                         02S0795
*   RETADR=TOTWOSV2;                /* RESTORE RETURN ADDRESS        */
         L     RETADR,TOTWOSV2(,OLTCBPTR)                       02S0796
*   RFY                                                         02S0797
*     REG9 UNRSTD;                                              02S0797
*   RFY                                                         02S0798
*     RETADR UNRSTD;                /*                       @Y17XAU6*/
*   RFY                                                         02S0799
*     RPARM UNRSTD;                 /*                       @Y17XAU6*/
*   END SYSCON;                     /* END SYSCON PROCEDURE          */
@EL00013 DS    0H                                               02S0800
@EF00013 DS    0H                                               02S0800
@ER00013 BR    @14                                              02S0800
@PB00013 DS    0H                                               02S0801
*   GEN(  EJECT);                                               02S0801
           EJECT
*                                                               02S0802
*   /*****************************************************************/
*   /*                                                               */
*   /* SYNAD: THIS INTERNAL PROCEDURE IS GIVEN CONTROL BY THE SYSTEM */
*   /* IF AN ERROR OCCURS WHILE WRITING A DPRINT TO THE SYSTEM OUTPUT*/
*   /* DEVICE                                                @Y17XAU6*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0802
*SYNAD:                                                         02S0802
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0802
         B     @PB00014                                         02S0802
SYNAD    DS    0H                                               02S0803
*   RFY                                                         02S0803
*     RETCDE RSTD;                                              02S0803
*   RETCDE=RETCDE&&RETCDE;          /* CLEAR RETURN CODE             */
         XR    RETCDE,RETCDE                                    02S0804
*   RFY                                                         02S0805
*     RETCDE UNRSTD;                                            02S0805
*   END SYNAD;                      /* END SYNAD PROCEDURE           */
@EL00014 DS    0H                                               02S0806
@EF00014 DS    0H                                               02S0806
@ER00014 BR    @14                                              02S0806
@PB00014 DS    0H                                               02S0807
*   GEN(  EJECT);                                               02S0807
           EJECT
*   END IEDQWO                      /* END OF IEDQWO PROCEDURE       */
*                                                               01S0808
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (TDCTD   )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (OLTCB   )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (RESPL   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTTCD   )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (CECOM   )                                       */
*/*%INCLUDE SYSUT5  (DPRINT  )                                       */
*/*%INCLUDE SYSUT5  (SYSOUT  )                                       */
*/*%INCLUDE SYSUT5  (SOURCE  )                                       */
*/*%INCLUDE SYSUT5  (RNSRC   )                                       */
*/*%INCLUDE SYSUT5  (EPLSRC  )                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (BISYNC  )                                       */
*/*%INCLUDE SYSUT5  (EPLPROC )                                       */
*/*%INCLUDE SYSUT5  (GETBUF  )                                       */
*/*%INCLUDE SYSUT5  (INITHDR )                                       */
*/*%INCLUDE SYSUT5  (NEGPRFX )                                       */
*/*%INCLUDE SYSUT5  (INSERT  )                                       */
*/*%INCLUDE SYSUT5  (MVMSG   )                                       */
*/*%INCLUDE SYSUT5  (S3270   )                                       */
*/*%INCLUDE SYSUT5  (R3270   )                                       */
*/*%INCLUDE SYSUT5  (L3270   )                                       */
*/*%INCLUDE SYSUT5  (NBISYNC )                                       */
*/*%INCLUDE SYSUT5  (POSTBUF )                                       */
*/*%INCLUDE SYSUT5  (RHPROC  )                                       */
*/*%INCLUDE SYSUT5  (RNPROC  )                                       */
*/*%INCLUDE SYSUT5  (SCBBUILD)                                       */
*/*%INCLUDE SYSUT5  (STARTERM)                                       */
*/*%INCLUDE SYSUT5  (SYSCON  )                                       */
*/*%INCLUDE SYSUT5  (SYNAD   )                                       */
*                                                               01S0808
*       ;                                                       01S0808
@EL00001 DS    0H                                               01S0808
@EF00001 DS    0H                                               01S0808
@ER00001 BR    @14                                              01S0808
@DATA    DS    0H
@SM02793 MVC   TOTOTBUF+1(0,OLTCBPTR),TOTINBUF(OLTCBPTR)
@SM02799 MVC   TOTOTBUF+2(0,OLTCBPTR),TOTINBUF(OLTCBPTR)
@SM02805 MVC   TOTOTBUF+3(0,OLTCBPTR),TOTINBUF(OLTCBPTR)
@SM02808 MVC   TOTOLADR(0,OLTCBPTR),NAME(@11)
@DATD    DSECT
         DS    0F
IEDQWO   CSECT
         DS    0F
@CF00061 DC    F'1'
@CF00065 DC    F'2'
@CF00256 DC    F'4'
@CF00163 DC    F'5'
@CF00045 DC    F'8'
@CF02435 DC    F'14'
@CF01746 DC    F'56'
@CF02792 DC    XL4'0000FFFF'
@CF02785 DC    BL4'11101111111111111111111111111111'
@CF02789 DC    BL4'00010000000000000000000000000000'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEDQWO   CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
WTOPLST  DC    XL2'04'
MXSNALEN DC    AL2(80+3)
ONE      DC    AL1(1)
@CB02709 DC    X'038000'
@CB02801 DC    B'111111111111111111111111111011111111111111111111111111C
               11'
ZERO     DC    X'00000000'
VERBCODE DC    X'46'
LEN      DC    X'18'
STX      DC    X'02'
MSGEND   DC    X'150337'
CNTS3270 DC    X'F5C2'
SSEND    DC    X'1537'
CURSOR   DC    X'4013'
CNTR3270 DC    X'27F13F'
BSC3270  DC    X'40130337'
CRCHAR   DC    X'15'
REQKEY   DC    X'E0'
CDE102   DC    X'02000002'
CDE107   DC    X'02000040'
PRINTER  DC    X'48'
         DS    CL1
PATCH    DC    XL50'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IEDQQPTR EQU   @07
LCBXPTR  EQU   @05
OLTCBPTR EQU   @02
RTRM     EQU   @08
RAVT     EQU   @04
RTNT     EQU   @09
RDCB     EQU   @10
RLCB     EQU   @03
RPRF     EQU   @05
RSCB     EQU   @06
RRESPL   EQU   @06
RDCT     EQU   @10
RTTC     EQU   @10
REG0     EQU   @00
RPARM    EQU   @01
REG6     EQU   @06
RDEV     EQU   @07
REG7     EQU   @07
REG9     EQU   @09
RSIB     EQU   @10
RSAVT    EQU   @10
RBASE    EQU   @12
RSAVE    EQU   @13
RETADR   EQU   @14
RETCDE   EQU   @15
RENTRY   EQU   @15
REG11    EQU   @11
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTCSTCS EQU   IEDQAVTD+328
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTMVBFR EQU   IEDQAVTD+444
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTBFRTB EQU   IEDQAVTD+792
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTDCTLN EQU   IEDQAVTD+1072
AVTBIT4  EQU   IEDQAVTD+1136
@NM00086 EQU   IEDQAVTD+1232
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSCPQ EQU   IEDNSVTD+108
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBCORE  EQU   QCBDSFLG
QCBDISK  EQU   QCBDSFLG
QCBNREUS EQU   QCBDISK
QCBREUS  EQU   QCBDISK
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00110 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00110+1
QCBTSOF1 EQU   @NM00110+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
QCBTSSES EQU   QCBFLAG
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IHADCB   EQU   0
DCBPTR   EQU   0
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBDEVT  EQU   DCBREL
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IEDDCT   EQU   0
DCTBYTE1 EQU   IEDDCT+1
DCT3270  EQU   DCTBYTE1
DCTUMASK EQU   DCTBYTE1
DCTBYTE2 EQU   IEDDCT+2
DCTBISYN EQU   DCTBYTE2
DCTBYTE3 EQU   IEDDCT+3
DCTNOIDL EQU   DCTBYTE3
DCTBYTE4 EQU   IEDDCT+4
DCTBYTE5 EQU   IEDDCT+5
DCTL3270 EQU   DCTBYTE5
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLPTR EQU   0
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
TOTOLTCB EQU   0
$SCTTBLE EQU   TOTOLTCB
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$TOTFLG1 EQU   $SCTTBLE+38
TOTSAVE2 EQU   TOTOLTCB+192
TOTSAVE5 EQU   TOTOLTCB+408
TOTSAVE6 EQU   TOTOLTCB+480
TOTWOSV2 EQU   TOTOLTCB+556
TOTWOSV3 EQU   TOTOLTCB+560
TOTWOSV4 EQU   TOTOLTCB+564
TOTSRENT EQU   TOTOLTCB+576
TOTSROFF EQU   TOTSRENT
TOTSRLCB EQU   TOTSRENT+4
TOTCTENT EQU   TOTOLTCB+584
TOTCTFLG EQU   TOTCTENT+22
TOTCTORN EQU   TOTCTFLG
TOTCTDFL EQU   TOTOLTCB+624
TOTCUTST EQU   TOTOLTCB+628
TOTCUFLG EQU   TOTCUTST
TOTPLIST EQU   TOTOLTCB+664
TOTOKEY  EQU   TOTPLIST
TOTOQCBA EQU   TOTPLIST+1
TOTOPRI  EQU   TOTPLIST+4
TOTOLINK EQU   TOTPLIST+5
TOTOVBCD EQU   TOTPLIST+8
TOTOELNG EQU   TOTPLIST+9
TOTORLN  EQU   TOTPLIST+10
TOTORTCD EQU   TOTPLIST+11
TOTOECBA EQU   TOTPLIST+12
TOTOFLG  EQU   TOTOECBA
TOTOATTC EQU   TOTOFLG
TOTOLADR EQU   TOTPLIST+16
TOTOALTT EQU   TOTOLTCB+688
TOTAPENT EQU   TOTOLTCB+736
TOTAPFLG EQU   TOTAPENT+22
TOTAPORN EQU   TOTAPFLG
TOTAPDFL EQU   TOTOLTCB+767
TOTAPDCB EQU   TOTOLTCB+772
TOTPDECB EQU   TOTOLTCB+776
TOTOTECB EQU   TOTOLTCB+804
TOTOLTPL EQU   TOTOLTCB+820
TOTWTORP EQU   TOTOLTCB+832
TOTINCNT EQU   TOTWTORP
TOTWTOPL EQU   TOTOLTCB+840
TOTOTCNT EQU   TOTWTOPL+1
TOTOTBUF EQU   TOTWTOPL+4
TOTINBUF EQU   TOTWTOPL+88
TOTPLNKQ EQU   TOTOLTCB+1012
TOTWKSPC EQU   TOTOLTCB+1024
TOTAVTPT EQU   TOTOLTCB+1172
TOTRESPL EQU   TOTOLTCB+1180
TOTFLG01 EQU   TOTOLTCB+1184
TOTEXIT  EQU   TOTFLG01
TOTFLG02 EQU   TOTOLTCB+1185
TOTFLG03 EQU   TOTOLTCB+1186
TOTFLG04 EQU   TOTOLTCB+1187
TOTFLG05 EQU   TOTOLTCB+1188
TOTPRINT EQU   TOTFLG05
TOTCECOM EQU   TOTFLG05
TOTREPLY EQU   TOTFLG05
TOTSRCE  EQU   TOTFLG05
TOTFLG06 EQU   TOTOLTCB+1189
TOTFLG07 EQU   TOTOLTCB+1190
TOTFLG08 EQU   TOTOLTCB+1191
TOTFMCTL EQU   TOTFLG08
TOTFLG09 EQU   TOTOLTCB+1192
TOTAPCON EQU   TOTFLG09
TOTAPOUT EQU   TOTFLG09
TOTCTCON EQU   TOTFLG09
TOTPRECT EQU   TOTFLG09
TOTFLG10 EQU   TOTOLTCB+1193
TOTTTBEL EQU   TOTOLTCB+1194
TOTPRECB EQU   TOTOLTCB+1316
TOTPRIBK EQU   TOTPRECB
TOTPRENT EQU   TOTOLTCB+1320
TOTPRFLG EQU   TOTPRENT+22
TOTPRSN  EQU   TOTOLTCB+1364
TOTPRDCB EQU   TOTOLTCB+1416
TOTSCECB EQU   TOTOLTCB+1488
TOTSCENT EQU   TOTOLTCB+1492
TOTSCFLG EQU   TOTSCENT+22
TOTSCSN  EQU   TOTOLTCB+1536
TOTSCDCB EQU   TOTOLTCB+1588
TOTCROLT EQU   TOTOLTCB+1660
TOTTDTBL EQU   TOTOLTCB+1748
@NM00225 EQU   TOTTDTBL
TOTWAWRK EQU   TOTOLTCB+1824
TOTWOWRK EQU   TOTOLTCB+1904
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLG1 EQU   IEDPLMV+18
PLMVSCTG EQU   PLMVFLG1
PLMVFLG2 EQU   IEDPLMV+19
IEDPLMVP EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFLCB   EQU   IEDQPRF+13
@NM00236 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00236
PRFSRCE  EQU   PRFSVFFO
PRFSIZE  EQU   PRFSVFFO+2
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
PRFDEST  EQU   IEDQPRF+40
IEDQPPTR EQU   0
IEDPF1   EQU   0
PRF1RH   EQU   IEDPF1
PRF1FLG1 EQU   IEDPF1+3
PRF1FIDI EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDRESPL EQU   0
RESOBQCB EQU   IEDRESPL+12
RESFLAGS EQU   IEDRESPL+49
RESQHBL  EQU   IEDRESPL+60
RESPLRVT EQU   IEDRESPL+76
RESABUF  EQU   IEDRESPL+80
RESMHSRC EQU   IEDRESPL+88
RESPLADR EQU   IEDRESPL+96
RESPLAC  EQU   RESPLADR+44
RESPL42  EQU   RESPLADR+56
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
TRHBB    EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBDESTQ EQU   IEDQSCB+1
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDQSPTR EQU   0
IEDSIBD  EQU   0
SIBCHAIN EQU   IEDSIBD+4
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBIND3 EQU   SIBBIND+2
SIBSTAT0 EQU   IEDSIBD+23
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
IEDQTDCE EQU   IEDQTNTD+46
IEDQNPTR EQU   0
IEDTNTA  EQU   0
TNTTRMAD EQU   IEDTNTA
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSNA   EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
TRMCHCIN EQU   IEDQTRM+16
IEDTTCD  EQU   0
IEDTTCP  EQU   0
IEDTTCPL EQU   0
TTCSVCPL EQU   IEDTTCPL
TTCSVCW1 EQU   TTCSVCPL
TTCSVCW2 EQU   TTCSVCPL+4
IEDTTCFD EQU   0
IEDTTCQB EQU   0
TTCQCB   EQU   IEDTTCQB
TTCQBECB EQU   TTCQCB+4
TTCSCB   EQU   IEDTTCQB+12
IEDQTNT  EQU   0
IEDMVBFR EQU   0
ALLOCBUF EQU   0
POSTWAIT EQU   0
DEVENTRY EQU   0
ENTTTOFF EQU   DEVENTRY+2
ENTRLN   EQU   DEVENTRY+8
ENTLCBAD EQU   DEVENTRY+9
ENTTNTAD EQU   DEVENTRY+12
ENTTNTRA EQU   DEVENTRY+16
ENTFLG   EQU   DEVENTRY+22
NAME     EQU   0
QCBLDCB  EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   0
TNTFIRST EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00160 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
PRFSHDR  EQU   IEDQPRF+42
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMTDIFF EQU   TRMLU
TRMLINK  EQU   TRMBYTE3
REQELEM  EQU   TOTWOWRK
REQQCB   EQU   REQELEM
@NM00272 EQU   REQELEM+4
REQPRI   EQU   @NM00272
REQLINK  EQU   @NM00272+1
SCBRGSAV EQU   SCBEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00267 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00266 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00265 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
@NM00168 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00167 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00166 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00165 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00164 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00163 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00162 EQU   @NM00160+4
LCBNCPPT EQU   @NM00160+1
@NM00161 EQU   @NM00160
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00159 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00158 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00157 EQU   LCBCSWU1
@NM00156 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00155 EQU   LCBRSPIN
@NM00271 EQU   ENTFLG
ENTORN   EQU   ENTFLG
ENTASN   EQU   ENTFLG
ENTLN    EQU   DEVENTRY+20
ENTRSID  EQU   DEVENTRY+6
ENTTROFF EQU   DEVENTRY+4
ENTUCBAD EQU   DEVENTRY
TTCQSTCB EQU   TTCQCB+8
TTCQBELC EQU   TTCQCB+1
TTCQBFLG EQU   TTCQCB
@NM00270 EQU   IEDTTCFD
@NM00269 EQU   IEDTTCPL+8
TTCLAST  EQU   TTCSVCW2
TTCFIRST EQU   TTCSVCW1+1
TTCPCODE EQU   TTCSVCW1
@NM00268 EQU   IEDTTCD
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00264 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00263 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00262 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTENLEN EQU   IEDQTNTD+40
TNTSRCHX EQU   IEDQTNTD+38
SIBLUTYP EQU   SIBSTAT0
SIBCD    EQU   SIBSTAT0
@NM00261 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBFMODE EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBBRACK EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
SIBTSPRO EQU   IEDSIBD+18
@NM00260 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
SIBFTERM EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBDSTAT EQU   SIBSESSN
SIBSSTAT EQU   SIBSESSN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBLGOFF EQU   SIBSESSN
SIBRUSEG EQU   IEDSIBD
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00259 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00258 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00257 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00256 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
@NM00255 EQU   TRHBYTE2
@NM00254 EQU   TRHBYTE2
@NM00253 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00252 EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00251 EQU   TRHBYTE1
@NM00250 EQU   TRHBYTE1
@NM00249 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00248 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00247 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
RESAPDCB EQU   IEDRESPL+180
RESTLIB  EQU   IEDRESPL+176
RESPL33  EQU   RESPLADR+76
RESPL25  EQU   RESPLADR+72
RESPLM2  EQU   RESPLADR+68
RESPL47  EQU   RESPLADR+64
RESPL44  EQU   RESPLADR+60
RESPL43  EQU   RESPL42
RESPL16  EQU   RESPLADR+52
RESPL41  EQU   RESPLADR+48
RESPL21  EQU   RESPLAC
RESPL36  EQU   RESPLADR+40
RESPL28  EQU   RESPLADR+36
RESPL37  EQU   RESPLADR+32
RESPLP2  EQU   RESPLADR+28
RESPLP1  EQU   RESPLADR+24
RESPL39  EQU   RESPLADR+20
RESPLAA  EQU   RESPLADR+16
RESPL35  EQU   RESPLADR+12
RESPLAJ  EQU   RESPLADR+8
RESPLAB  EQU   RESPLADR+4
RESPLWO  EQU   RESPLADR
RESTOTMH EQU   IEDRESPL+92
RESMHNAT EQU   IEDRESPL+90
RESFBUF  EQU   IEDRESPL+84
RESADDAF EQU   RESQHBL+12
RESADDND EQU   RESQHBL+8
RESREMEL EQU   RESQHBL+4
RESREMFR EQU   RESQHBL
RESTNTPT EQU   IEDRESPL+57
@NM00246 EQU   IEDRESPL+56
RESTRMQ  EQU   IEDRESPL+52
@NM00245 EQU   IEDRESPL+50
@NM00244 EQU   RESFLAGS
RESFIRST EQU   RESFLAGS
RESINIT  EQU   RESFLAGS
RESWBFNC EQU   IEDRESPL+48
RESSMGRA EQU   IEDRESPL+44
RESSTAEA EQU   IEDRESPL+40
RESETXRA EQU   IEDRESPL+36
RESDMTTE EQU   IEDRESPL+33
RESTNTCT EQU   IEDRESPL+32
RESEFQCB EQU   IEDRESPL+28
RESBKAVL EQU   IEDRESPL+26
RESBKTOT EQU   IEDRESPL+24
RESTTLST EQU   IEDRESPL+20
RESOBBKW EQU   RESOBQCB+4
RESOBFWD EQU   RESOBQCB
RESTECB1 EQU   IEDRESPL+8
@NM00243 EQU   IEDRESPL+5
@NM00242 EQU   IEDRESPL+4
RESTECBS EQU   IEDRESPL
PRF2SEQP EQU   PRF2WD2
@NM00241 EQU   IEDPF2+1
@NM00240 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00239 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00238 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00237 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00236+3
PRFPIUO  EQU   PRFPLQCB
PRFTI0   EQU   PRFTIC+1
@NM00235 EQU   PRFTICC
@NM00234 EQU   PRFTICC
@NM00233 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00232 EQU   PRFTICC
@NM00231 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00230 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
PLMVUNCA EQU   IEDPLMV+20
@NM00229 EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
TOTOBEND EQU   TOTOLTCB+2100
TOTSERV  EQU   TOTOLTCB+2096
@NM00228 EQU   TOTOLTCB+2044
TOTOLTEN EQU   TOTOLTCB+1820
TOTAPNAM EQU   TOTOLTCB+1812
TOTGRABP EQU   TOTOLTCB+1808
TOTWAITI EQU   TOTOLTCB+1800
@NM00227 EQU   TOTOLTCB+1798
TOTTLCNT EQU   TOTOLTCB+1796
TOTECBPT EQU   TOTOLTCB+1792
TOTWECBA EQU   TOTOLTCB+1788
TOTTDEND EQU   TOTOLTCB+1788
@NM00226 EQU   TOTTDTBL+1
TOTTSWPM EQU   @NM00225
TOTTDIAC EQU   @NM00225
TOTTDTHD EQU   @NM00225
TOTTDLST EQU   @NM00225
TOTTDORN EQU   @NM00225
TOTTDGRB EQU   @NM00225
TOTTDLIN EQU   @NM00225
TOTTDTRM EQU   @NM00225
@NM00224 EQU   TOTOLTCB+1710
TOTCONND EQU   TOTOLTCB+1710
TOTCONAP EQU   TOTOLTCB+1709
TOTCONCT EQU   TOTOLTCB+1708
TOTCONTB EQU   TOTOLTCB+1698
TOTOLTTE EQU   TOTOLTCB+1698
TOTOLTTB EQU   TOTOLTCB+1668
TOTTRMND EQU   TOTCROLT
TOTSCDEB EQU   TOTSCDCB+44
@NM00223 EQU   TOTSCDCB
TOTSCIOB EQU   TOTOLTCB+1544
TOTSTECB EQU   TOTOLTCB+1540
TOTSCSEQ EQU   TOTSCSN+2
@NM00222 EQU   TOTSCSN
@NM00221 EQU   TOTOLTCB+1535
TOTSFLGS EQU   TOTOLTCB+1534
TOTSDTCT EQU   TOTOLTCB+1532
TOTSDTBF EQU   TOTOLTCB+1528
TOTSCBUF EQU   TOTSCENT+32
TOTSCCCW EQU   TOTSCENT+28
TOTSCQCB EQU   TOTSCENT+24
@NM00220 EQU   TOTSCENT+23
@NM00219 EQU   TOTSCFLG
TOTSEXNM EQU   TOTSCFLG
TOTSCFME EQU   TOTSCFLG
TOTSCEX  EQU   TOTSCFLG
TOTSUNRD EQU   TOTSCFLG
TOTSPRSC EQU   TOTSCFLG
TOTSCLU  EQU   TOTSCFLG
TOTSCTAS EQU   TOTSCFLG
TOTSCLEN EQU   TOTSCENT+20
TOTSRTNT EQU   TOTSCENT+16
TOTSDTNT EQU   TOTSCENT+12
TOTSCLCB EQU   TOTSCENT+9
TOTSCRLN EQU   TOTSCENT+8
TOTSRSID EQU   TOTSCENT+6
TOTSCOFF EQU   TOTSCENT+4
TOTNCOFF EQU   TOTSCENT+2
TOTSCUCB EQU   TOTSCENT
TOTSCIBK EQU   TOTSCECB
TOTPRDEB EQU   TOTPRDCB+44
@NM00218 EQU   TOTPRDCB
TOTPRIOB EQU   TOTOLTCB+1372
TOTPTECB EQU   TOTOLTCB+1368
TOTPRSEQ EQU   TOTPRSN+2
@NM00217 EQU   TOTPRSN
@NM00216 EQU   TOTOLTCB+1363
TOTPFLGS EQU   TOTOLTCB+1362
TOTPDTCT EQU   TOTOLTCB+1360
TOTPDTBF EQU   TOTOLTCB+1356
TOTPRBUF EQU   TOTPRENT+32
TOTPRCCW EQU   TOTPRENT+28
TOTPRQCB EQU   TOTPRENT+24
@NM00215 EQU   TOTPRENT+23
@NM00214 EQU   TOTPRFLG
TOTPEXNM EQU   TOTPRFLG
TOTPRFME EQU   TOTPRFLG
TOTPREX  EQU   TOTPRFLG
TOTPUNRD EQU   TOTPRFLG
TOTPPRSC EQU   TOTPRFLG
TOTPRLU  EQU   TOTPRFLG
TOTPRTAS EQU   TOTPRFLG
TOTPRLEN EQU   TOTPRENT+20
TOTTNTPR EQU   TOTPRENT+16
TOTPDTNT EQU   TOTPRENT+12
TOTPRLCB EQU   TOTPRENT+9
TOTPRRLN EQU   TOTPRENT+8
TOTPRSID EQU   TOTPRENT+6
TOTPROFF EQU   TOTPRENT+4
TOTPCOFF EQU   TOTPRENT+2
TOTPRUCB EQU   TOTPRENT
TOTTRMBF EQU   TOTPRIBK
TOTPASS  EQU   TOTOLTCB+1252
TOTEXT   EQU   TOTOLTCB+1196
@NM00213 EQU   TOTOLTCB+1195
TOTOLTRS EQU   TOTFLG10
TOTOLTWT EQU   TOTFLG10
TOTOLTED EQU   TOTFLG10
TOTTNTRQ EQU   TOTFLG10
@NM00212 EQU   TOTFLG10
@NM00211 EQU   TOTFLG10
@NM00210 EQU   TOTFLG10
TOTTERMS EQU   TOTFLG10
TOTMACFT EQU   TOTFLG09
TOTLNCON EQU   TOTFLG09
TOTNOBRK EQU   TOTFLG09
TOTAPTRM EQU   TOTFLG09
@NM00209 EQU   TOTFLG08
TOTMSSRC EQU   TOTFLG07
TOTMSPRT EQU   TOTFLG07
TOTMSREP EQU   TOTFLG07
TOTMSCEC EQU   TOTFLG07
@NM00208 EQU   TOTFLG07
@NM00207 EQU   TOTFLG07
TOTSECEX EQU   TOTFLG07
TOTPRIEX EQU   TOTFLG07
TOTNPERR EQU   TOTFLG06
TOTOTACT EQU   TOTFLG06
TOTCANCL EQU   TOTFLG06
TOTABEND EQU   TOTFLG06
TOTNCMFG EQU   TOTFLG06
TOTWACAN EQU   TOTFLG06
TOTCBOPN EQU   TOTFLG06
TOTOTERM EQU   TOTFLG06
TOTNDMSG EQU   TOTFLG05
TOTEXIOF EQU   TOTFLG05
TOTTMOUT EQU   TOTFLG05
TOTSRCON EQU   TOTFLG05
TOTTTSWT EQU   TOTFLG04
@NM00206 EQU   TOTFLG04
@NM00205 EQU   TOTFLG04
TOTSCCTF EQU   TOTFLG04
TOTPRCTF EQU   TOTFLG04
TOTCLOSE EQU   TOTFLG04
TOTDTCHD EQU   TOTFLG04
TOTNUMDV EQU   TOTFLG04
@NM00204 EQU   TOTFLG03
TOTREPEX EQU   TOTFLG03
TOTTSINC EQU   TOTFLG03
TOTIMNCP EQU   TOTFLG03
TOTOPTER EQU   TOTFLG03
TOTTSTER EQU   TOTFLG03
TOTTDFER EQU   TOTFLG03
TOTAPOER EQU   TOTFLG03
TOTDEVRN EQU   TOTFLG02
TOTCONCU EQU   TOTFLG02
TOTCONMD EQU   TOTFLG02
TOTCHKSZ EQU   TOTFLG02
TOTOLTRQ EQU   TOTFLG02
TOTDEV0X EQU   TOTFLG02
TOTTSST  EQU   TOTFLG02
TOTTTSPE EQU   TOTFLG02
TOTCLNED EQU   TOTFLG01
TOTCLNST EQU   TOTFLG01
TOTPRMPT EQU   TOTFLG01
TOTAPTST EQU   TOTFLG01
TOTIPLCU EQU   TOTFLG01
TOTCONFG EQU   TOTFLG01
TOTFINAL EQU   TOTFLG01
TOTSTAE  EQU   TOTOLTCB+1176
@NM00203 EQU   TOTOLTCB+1152
TOTWKEND EQU   TOTOLTCB+1152
@NM00202 EQU   TOTOLTCB+1020
TOTPLBKW EQU   TOTPLNKQ+4
TOTPLFWD EQU   TOTPLNKQ
@NM00201 EQU   TOTOLTCB+1011
TOTRTCOD EQU   TOTOLTCB+1010
TOTOLTID EQU   TOTOLTCB+1008
@NM00200 EQU   TOTWTOPL+2
@NM00199 EQU   TOTWTOPL
TOTINECB EQU   TOTWTORP+4
TOTINADR EQU   TOTWTORP+1
TOT#TBLE EQU   TOTOLTPL+8
@NM00198 EQU   TOTOLTPL
TOTCMPCD EQU   TOTOLTCB+816
TOTTCBAD EQU   TOTOLTCB+812
TOTRESSV EQU   TOTOLTCB+808
TOTOLTMQ EQU   TOTOLTCB+800
TOTPARML EQU   TOTOLTCB+796
@NM00197 EQU   TOTOLTCB+768
@NM00196 EQU   TOTAPDFL
TOTAPIAC EQU   TOTAPDFL
TOTAPHD  EQU   TOTAPDFL
TOTAPLST EQU   TOTAPDFL
TOTAPGP  EQU   TOTAPDFL
@NM00195 EQU   TOTAPDFL
TOTAPLIN EQU   TOTAPDFL
TOTAPTER EQU   TOTAPDFL
TOTAPRNL EQU   TOTAPENT+23
TOTAPEND EQU   TOTAPENT+23
TOTAPSWD EQU   TOTAPFLG
@NM00194 EQU   TOTAPFLG
TOTAPASN EQU   TOTAPFLG
TOTAPTLN EQU   TOTAPENT+20
TOTARTNT EQU   TOTAPENT+16
TOTAPTNT EQU   TOTAPENT+12
TOTAPLCB EQU   TOTAPENT+9
TOTAPRLN EQU   TOTAPENT+8
TOTARSID EQU   TOTAPENT+6
TOTAROFF EQU   TOTAPENT+4
TOTAPOFF EQU   TOTAPENT+2
TOTAPUCB EQU   TOTAPENT
TOTUSCOR EQU   TOTOLTCB+732
TOTOPCLN EQU   TOTOLTCB+728
@NM00193 EQU   TOTOLTCB+690
@NM00192 EQU   TOTOECBA+1
@NM00191 EQU   TOTOFLG
TOTWOOPC EQU   TOTOLTCB+640
TOTCURS4 EQU   TOTCUTST+11
TOTCURS3 EQU   TOTCUTST+10
TOTCURS2 EQU   TOTCUTST+9
TOTCURS1 EQU   TOTCUTST+8
TOTCUSAV EQU   TOTCUTST+4
TOTCUCUU EQU   TOTCUTST+2
TOTCU#AD EQU   TOTCUTST+1
@NM00190 EQU   TOTCUFLG
TOTCUCUP EQU   TOTCUFLG
TOTCUDON EQU   TOTCUFLG
@NM00189 EQU   TOTOLTCB+625
@NM00188 EQU   TOTCTDFL
TOTCTIAC EQU   TOTCTDFL
TOTCTHD  EQU   TOTCTDFL
TOTCTLST EQU   TOTCTDFL
TOTCTGP  EQU   TOTCTDFL
@NM00187 EQU   TOTCTDFL
TOTCTLIN EQU   TOTCTDFL
TOTCTTRM EQU   TOTCTDFL
TOTCTNAM EQU   TOTCTENT+31
TOTCTRNL EQU   TOTCTENT+23
TOTCTEND EQU   TOTCTENT+23
TOTCTSWD EQU   TOTCTFLG
@NM00186 EQU   TOTCTFLG
TOTCTASN EQU   TOTCTFLG
TOTCTTLN EQU   TOTCTENT+20
TOTCRTNT EQU   TOTCTENT+16
TOTCTTNT EQU   TOTCTENT+12
TOTCTLCB EQU   TOTCTENT+9
TOTCTRLN EQU   TOTCTENT+8
TOTCRSID EQU   TOTCTENT+6
TOTCROFF EQU   TOTCTENT+4
TOTCTOFF EQU   TOTCTENT+2
TOTCTUCB EQU   TOTCTENT
@NM00185 EQU   TOTSRENT+2
TOTMMSPC EQU   TOTOLTCB+572
TOTBKRQD EQU   TOTOLTCB+570
TOTBKASN EQU   TOTOLTCB+568
TOTSVEND EQU   TOTOLTCB+568
TOTWOSV1 EQU   TOTOLTCB+552
@NM00184 EQU   TOTSAVE5+68
TOTOLTEP EQU   TOTSAVE5+64
@NM00183 EQU   TOTSAVE5+48
TOTOLTPT EQU   TOTSAVE5+44
@NM00182 EQU   TOTSAVE5
TOTSAVE4 EQU   TOTOLTCB+336
TOTSAVE3 EQU   TOTOLTCB+264
TOTSAVE1 EQU   TOTOLTCB+120
TOTSMGRT EQU   TOTOLTCB+116
@NM00181 EQU   $SCTTBLE+92
$EXT     EQU   $SCTTBLE+88
$PASS    EQU   $SCTTBLE+84
$TABLE   EQU   $SCTTBLE+80
$MSGIDAC EQU   $SCTTBLE+78
@NM00180 EQU   $SCTTBLE+72
@NM00179 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $SCTTBLE+69
$R241248 EQU   $SCTTBLE+68
$R233240 EQU   $SCTTBLE+67
$R225232 EQU   $SCTTBLE+66
$R217224 EQU   $SCTTBLE+65
$R209216 EQU   $SCTTBLE+64
$R201208 EQU   $SCTTBLE+63
$R193200 EQU   $SCTTBLE+62
$R185192 EQU   $SCTTBLE+61
$R177184 EQU   $SCTTBLE+60
$R169176 EQU   $SCTTBLE+59
$R161168 EQU   $SCTTBLE+58
$R153160 EQU   $SCTTBLE+57
$R145152 EQU   $SCTTBLE+56
$R137144 EQU   $SCTTBLE+55
$R129136 EQU   $SCTTBLE+54
$R121128 EQU   $SCTTBLE+53
$R113120 EQU   $SCTTBLE+52
$R105112 EQU   $SCTTBLE+51
$R097104 EQU   $SCTTBLE+50
$R089096 EQU   $SCTTBLE+49
$R081088 EQU   $SCTTBLE+48
$R073080 EQU   $SCTTBLE+47
$R065072 EQU   $SCTTBLE+46
$R057064 EQU   $SCTTBLE+45
$R049056 EQU   $SCTTBLE+44
$R041048 EQU   $SCTTBLE+43
$R033040 EQU   $SCTTBLE+42
$R025032 EQU   $SCTTBLE+41
$R017024 EQU   $SCTTBLE+40
$TOTFLG2 EQU   $SCTTBLE+39
@NM00178 EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
$TERMSEC EQU   $TOTFLG1
$TDATBLK EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00177 EQU   $SCTTBLE+37
@NM00176 EQU   $OLTFLGS
$LASTSEC EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
$CECCMIN EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$CDS8T19 EQU   $SCTTBLE+20
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
$PATHDEF EQU   $PDEVFLG
$TERMNDX EQU   $PDEVFLG
@NM00175 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
$TSSSYS1 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SPARE1  EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
@NM00174 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00173 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00172 EQU   LCBXFLAG
@NM00171 EQU   LCBXFLAG
@NM00170 EQU   LCBXFLAG
@NM00169 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00154 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00153 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00152 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
LCBTTCIN EQU   IEDQLCB+90
@NM00151 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
LCBLOGDV EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBQB EQU   LCBERB+1
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00150 EQU   LCBTSTSW
@NM00149 EQU   LCBTSTSW
@NM00148 EQU   LCBTSTSW
@NM00147 EQU   LCBTSTSW
@NM00146 EQU   LCBTSTSW
@NM00145 EQU   LCBTSTSW
@NM00144 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRCLLN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00143 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00142 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00141 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00140 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00139 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00138 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00137 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00136 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00135 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00134 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00133 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBPRI   EQU   LCBRCB+4
LCBQCBA  EQU   LCBRCB+1
LCBKEY   EQU   LCBRCB
@NM00132 EQU   DCTBYTE5
DCTSCS   EQU   DCTBYTE5
DCTTSPRF EQU   DCTBYTE4
DCTFMPRF EQU   DCTBYTE4
DCT2760  EQU   DCTBYTE3
DCTCONTN EQU   DCTBYTE3
DCTBUFF  EQU   DCTBYTE3
DCTCHECK EQU   DCTBYTE3
DCTENCTL EQU   DCTBYTE3
DCTWTTA  EQU   DCTBYTE3
DCT1050  EQU   DCTBYTE3
DCTAUDIO EQU   DCTBYTE2
DCTLOCAL EQU   DCTBYTE2
DCTCONT  EQU   DCTBYTE2
DCTXMIT  EQU   DCTBYTE2
DCTSTCTL EQU   DCTBYTE2
DCTTWX   EQU   DCTBYTE2
DCTBRDST EQU   DCTBYTE2
DCTSADEV EQU   DCTBYTE1
DCT2741  EQU   DCTBYTE1
DCT5041  EQU   DCTBYTE1
DCTATTEN EQU   DCTBYTE1
DCTBREAK EQU   DCTBYTE1
DCTINHIB EQU   DCTBYTE1
DCTBYTE0 EQU   IEDDCT
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00131 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00130 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00129 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00128 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00127 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00126 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00125 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBREADA EQU   DCBWRITA
@NM00124 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00123 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00122 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00121 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00120 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00119 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00118 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00117 EQU   DCBDSRG1
@NM00116 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBKEYLE EQU   DCBRELB
@NM00115 EQU   IHADCB
QCBTTCIN EQU   QCBPLCBA+1
@NM00114 EQU   QCBPLCBA
@NM00113 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00112 EQU   QCBFHDTZ
@NM00111 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00110
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00109 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00108 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00107 EQU   QCBELCHN+2
@NM00106 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00091 EQU   IEDQAVTD+1242
@NM00090 EQU   IEDQAVTD+1241
@NM00089 EQU   IEDQAVTD+1240
@NM00088 EQU   IEDQAVTD+1237
@NM00087 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00085 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00084 EQU   IEDQAVTD+1140
@NM00083 EQU   IEDQAVTD+1137
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00074 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00073 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00072 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00069 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00068 EQU   IEDQAVTD+950
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00053 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00052 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00051 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00050 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00049 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00048 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+796
@NM00040 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00039 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00038 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00023 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00021 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00015 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00354 EQU   @RC00321
@RC00326 EQU   @RC00321
@RF00325 EQU   @RC00321
@RC00368 EQU   @RC00367
@RF00463 EQU   @RC00460
@RC00518 EQU   @RC00516
@RC00550 EQU   @RC00548
@RC00713 EQU   @RC00711
@ENDDATA EQU   *
         END   IEDQWO,(C'PLS2006',0701,78129)
