QWR      TITLE 'IEDQWR - TOTE PLINK SERVICE MODULE'
IEDQWR   CSECT
*A000000-999999                                                @Y16X5U0
* CHANGE ACTIVITY AS FOLLOWS:                                    S22024
*C448200                                                        SA41594
*D442200                                                        SA41594
*A006050,008300-010700,242500-243500,447540-448140               S22024
*A625300-628600,924570-924920                                    S22024
*C015000,123000,260000,280000,448500,468500,469200,469900        S22024
*C470600,471300,472000,472700,473400-477600,859090-859100        S22024
*C859320-859330,965000                                           S22024
*D448900-449600                                                  S22024
*A244540,295000,427700,580000
*A244540,427700,580000,858200,865000,965000,859600             @Y17XAUU
*C881000-924500                                                @Y17XAUU
*D709000                                                       @Y17XAUU
*C381000,413000,441200,447660-447820,447540,448020             @OY12288
*C448500,451700,458000,464300,465700,472000,476200,498000      @OY12288
*A244540,580000,867000,871000                                  @OY18053
*D580070-580280                                                @OY18053
IEDQW28  EQU   *
         ENTRY IEDQW28
*
         USING IEDQWR,R15
*
IEDQW28  IEDHJN STARR,HJN
*
***********************************************************************
*                                                              * S22024
* MODULE NAME = IEDQWR (TCAM,TOTE)                             @Y17XAUU
*                                                              * S22024
* DESCRIPTIVE NAME = TOTE PLINK MODULE                         * S22024
*                                                              * S22024
* COPYRIGHT = NONE                                             * S22024
*                                                              * S22024
* STATUS --                                                    * S99528
*                                                              * S99528
*    VERSION 10.0                                              @Y17XAUU
*                                                              * S99528
* FUNCTIONS --                                                 * S99528
*                                                              * S99528
*    THIS ROUTINE LOADS OR DELETES MODULES.                    * S99528
*                                                              * S99528
*    THE PLINK MACRO REQUESTS MODULES BE LOADED AND/OR DELETED * S99528
*                                                              * S99528
*    IEDQWR EXAMINES THE CALLING ROUTINE'S PLINK PARAMETER     * S99528
*    LIST. IF A DELETE IS REQUESTED, THE MODULE(S) IS(ARE)     * S99528
*    DELETED VIA A DELETE MACRO. IF A LOAD IS REQUESTED, A     * S99528
*    BLDL MACRO IS ISSUED TO VERIFY THE AVAILABILITY OF THE    * S99528
*    MODULE AND REQUIRED CORE. THE MODULE IS THEN LOADED VIA   * S99528
*    A LOAD MACRO. THE LOAD MODULE ENTRY POINT ADDRESS IS      * S99528
*    PLACED IN THE CALLING PROGRAM'S PARAMETER LIST.           * S99528
*                                                              * S99528
*    AS MODULES ARE LOADED AND DELETED, IEDQWR UPDATES MEMORY  * S99528
*    SPACE AVAILABLE TO THE CALLING PROGRAM AND ACTIVE         * S99528
*    MODULE ID'S.                                              * S99528
*                                                              * S99528
*    AT THE COMPLETION OF THIS ROUTINE, REGISTER 15 CONTAINS   * S99528
*    ONE OF THE FOLLOWING RETURN CODES:                        * S99528
*                                                              * S99528
*         X'00' - NORMAL COMPLETION OF THE PLINK FUNCTION      * S99528
*         X'08' - I/O ERROR DURING A LOAD REQUEST              * S99528
*         X'0C' - REQUESTED LOAD MODULE NOT FOUND IN LIBRARY   * S99528
*         X'10' - INSUFFICIENT MEMORY SPACE AVAILABLE          * S99528
*                                                              * S99528
* ENTRY POINT --                                               * S99528
*                                                              * S99528
*    IEDQWR - CALLED WHEN A PLINK MACRO IS ISSUED BY THE       * S99528
*             CONFIGURATOR OR UNIT TEST.                       * S99528
*                                                              * S99528
* PURPOSE -- SEE FUNCTION                                      @Y17XAUU
*                                                              @Y17XAUU
* LINKAGE -- BALR R14,R15 FROM IEDQWA                          @Y17XAUU
*                                                              @Y17XAUU
* MODULE TYPE -- PROCEDURE                                     @Y17XAUU
*                                                              @Y17XAUU
* MODULE SIZE -- 2K MAXIMUM                                    @Y17XAUU
*                                                              @Y17XAUU
* PROCESSOR -- ASSEMBLER XF                                    @Y17XAUU
*                                                              @Y17XAUU
* MACROS -- IEDHJN,DCB,RESPL,OLTCB,LOAD,DELETE,SAVE            @Y17XAUU
*                                                              @Y17XAUU
* INPUT --                                                     * S99528
*                                                              * S99528
*    REGISTERS 01,02,13,14,15 CONTAIN THE FOLLOWING VALUES:    * S99528
*                                                              * S99528
*         01 - PLINK PARAMETER LIST ADDRESS                    * S99528
*         02 - OLTCB ADDRESS                                   * S99528
*         13 - SAVE AREA ADDRESS                               * S99528
*         14 - RETURN ADDRESS                                  * S99528
*         15 - ENTRY POINT ADDRESS                             * S99528
*                                                              * S99528
* OUTPUT --                                                    * S99528
*                                                              * S99528
*    REGISTER 15 CONTAINS ONE OF THE FOLLOWING VALUES:         * S99528
*                                                              * S99528
*         X'00' - NORMAL COMPLETION                            * S99528
*         X'08' - I/O ERROR DURING LOAD                        * S99528
*         X'0C' - REQUESTED LOAD MODULE NOT FOUND IN LIBRARY   * S99528
*         X'10' - INSUFFICIENT MEMORY SPACE AVAILABLE          * S99528
*                                                              * S99528
* EXTERNAL REFERENCES --                                       * S99528
*                                                              * S99528
*    IEDQWO - ACCESS MANAGER TO PRINT MESSAGE                  * S22024
*                                                              * S99528
* EXITS,NORMAL --                                              * S99528
*                                                              * S99528
*    BR AFTER PLK050 TO IEDQWM2 FOR TRACE FUNCTION             * S99528
*                                                              * S99528
* EXITS,ERROR --                                               * S99528
*                                                              * S99528
*    XCTL TO IEDQWM2 AFTER PLK004 (INCORRECT MACRO LEVEL)      * S99528
*                                                              * S99528
* TABLE/WORK AREAS --                                          * S99528
*                                                              * S99528
*    OLTCB                                                     * S99528
*                                                              * S99528
* ATTRIBUTES --                                                * S99528
*                                                              * S99528
*    ENABLED, PROBLEM PROGRAM MODE, TRANSIENT                  * S99528
*                                                              * S99528
* NOTES -- SEE BELOW                                           @Y17XAUU
*                                                              @Y17XAUU
*  DEPENDENCIES -- EBCDIC CHARACTER CODE                       @Y17XAUU
*                                                              @Y17XAUU
*  RESTRICTIONS -- NONE                                        @Y17XAUU
*                                                              @Y17XAUU
*  REGISTERS CONVENTION -- SEE REGISTERS ASSIGNMENT            @Y17XAUU
*                                                              @Y17XAUU
*  PATCH LABEL -- PATCH                                        @Y17XAUU
*                                                              * S99528
**************************************************************** S99528
         EJECT
R0       EQU   0                  REGISTER 0                     S99528
R1       EQU   1                  PARAMETER LIST ADDRESS         S99528
R2       EQU   2                  ADDRESS OF OLTCB               S99528
R3       EQU   3                  REGISTER 3                     S99528
R4       EQU   4                  BASE REGISTER                  S99528
R5       EQU   5                  REGISTER 5                     S99528
R6       EQU   6                  REGISTER 6                     S99528
R7       EQU   7                  REGISTER 7                     S99528
R8       EQU   8                  REGISTER 8                     S99528
R9       EQU   9                  REGISTER 9                     S99528
R10      EQU   10                 REGISTER 10                    S99528
R11      EQU   11                 REGISTER 11                    S99528
R12      EQU   12                 REGISTER 12                    S99528
R13      EQU   13                 SAVE AREA ADDRESS              S99528
R14      EQU   14                 RETURN ADDRESS                 S99528
R15      EQU   15                 ENTRY POINT ADDRESS            S99528
XFF      EQU   X'FF'              MASK SETTING                   S22024
BLANK    EQU   X'40'              BLANK CHAR                      22024
D79      EQU   79                 DISP OF 79                      22024
NOCOR    EQU   X'10'              CORE NOT AVAIL. RETURN CODE
LOA      EQU   X'80'              LOAD REQUEST
DELET    EQU   X'40'              DELETE REQUEST
D0       EQU   0                  DISP OF 0
D1       EQU   1                  DISP OF 1
D2       EQU   2                  DISP OF 2
D3       EQU   3                  DISP OF 3
D4       EQU   4                  DISP OF 4
D5       EQU   5                  DISP OF 5
D6       EQU   6                  DISP OF 6
D7       EQU   7                  DISP OF 7
D8       EQU   8                  DISP OF 8
D9       EQU   9                  DISP OF 9
D10      EQU   10                 DISP OF 10
D12      EQU   12                 DISP OF 12
D16      EQU   16                 DISP OF 16
D20      EQU   20                 DISP OF 20
D23      EQU   23                       DISP OF 23             @OY18053
DISREG2  EQU   28                 DISPLACEMENT TO REG 2        @Y17XAUU
ADRMSK7  EQU   7                  ADDRESS MASK                 @Y17XAUU
         DROP R15
         SPACE 2
         USING IEDQWR,R4
         USING TOTOLTCB,R2        OLTCB BASE                     S22024
         SPACE
         SAVE  (14,12)
*
         LR    R4,R15             LOAD BASE REG.
         LA    R15,TOTSAVE1       MY SAVE AREA                   S22024
         ST    R15,8(R13)         PUT ADDR. IN CALLER'S SAVE AREA.
         ST    R13,4(R15)         PUT ADDR. OF CALLER'S AREA IN OWN.
         LR    R13,R15            POINT TO OWN SAVE AREA.
         SPACE
         MVC   TOTSERV(END-START),START SET UP WORK AREA       @Y17XAUU
         SR    R15,R15            CLEAR RETURN CODE REG.
         LA    R5,8(R1)           GET ADDR OF CONTROL INFORMATION
         SPACE
         CLI   1(R1),X'02'        LEVEL 2 MACRO ID?
         BNE   PLK004             NO
         LA    R7,12(R1)          GET ADDRESS OF MODULES ID LIST
         SPACE
         SPACE 2
***********************************************************************
*        DELETE                                                       *
***********************************************************************
         SPACE
         TM    0(R5),X'08'        DELETE REQUEST?
         BZ    PLK008             BRANCH IF NO.
         SR    R6,R6              CLEAR R6.
         IC    R6,11(R1)          GET DELETE COUNT
         LTR   R6,R6              IS COUNT 0 ?
         BZ    PLK008             BRANCH IF YES.
         SPACE
PLK002   EQU   *
         SR    R15,R15            CLEAR RETURN CODE REG
         L     R9,TOTPLBKW              GET PLINK ELEM         @OY12288
         LA    R11,TOTPLNKQ       GET ADDR OF QCB
PLK003   EQU   *
         CR    R9,R11             IS QUEUE EMPTY ?
         BE    PLK050             YES - RETURN
*
         USING PLNKPREF,R9
         SR    R10,R10            CLEAR REG 10
         LH    R10,PLNKMPTR       GET DISPLACEMENT TO PLINK PARM
*
         AR    R10,R9             GET ADDR OF QUEUE POINTERS
         USING PLNKQPTR,R10
         CLC   PLNKNAME(8),0(R7)  MODULE ID FOUND ?
         BE    PLK005             YES - DELETE IT
         DROP  R9
*
         L     R9,PLNKQBKD              GET NEXT PLINK ELEM    @OY12288
         LA    R9,0(R9)           ZERO HIGH ORDER BYTE
         B     PLK003             CHECK NEXT ELEMENT
         SPACE
         SPACE
PLK004    EQU   *
         LA    R15,4              SET INCORRECT MACRO LEV RET CODE
         STC   R15,TOTRTCOD       SAVE RETURN CODE
         L     R13,4(R13)         RESTORE CALLER'S SAVE AREA ADDR
         L     R14,12(R13)        RESTORE REG 14
         SPACE
         USING RESPL,R5           SET RESPL ADDRESSABILITY     @Y17XAUU
         L     R5,TOTRESPL        GET RESPL ADDRESS            @Y17XAUU
         L     R15,RESPLM2        GET TRACE ROUTINE ADDRESS    @Y17XAUU
         LM    R2,R12,DISREG2(R13) RESTORE REGISTERS           @Y17XAUU
         BR    R15                EXIT TO TRACE ROUTINE        @Y17XAUU
         DROP  R5                                              @Y17XAUU
         SPACE
PLK005   EQU   *
         MVC   MODNAME(8),0(R7)   MOVE MODULE ID TO BLDL LIST
         LR    R5,R1              SAVE REG 1
*
         BLDL  0,BLDLLIST
*
         LR    R1,R5              RESTORE REG 1
*
*
         MVI   PLKFLG1,DELET      SHOW DELETE REQUEST
         BAL   R3,COREUPD         UPDATE AVAIL CORE
*
*        R10 IS BASE FOR ELEMENT QUEUE POINTERS
         L     R9,PLNKQFWD              GET NEXT ELEM          @OY12288
         LA    R9,0(R9)           CLEAR HI-ORDER BYTE
         CLC   TOTPLFWD(4),TOTPLBKW FORWARD PTR = BACKWARD PTR ?
         BNE   PLK005D            NO
*        ONLY ONE ELEMENT ON QUEUE
         ST    R11,TOTPLFWD       INIT QCB FORWARD PTR
         ST    R11,TOTPLBKW       INIT QCB BACKWARD PTR
         B     PLK006P            DELETE MODULE
*
PLK005D  EQU   *
         CR    R9,R11                   DELETE LAST ELEM ON Q? @OY12288
         BNE   PLK005F            NO                             S22024
*        MORE THAN ONE ELEMENT ON Q - DELETE FIRST ELEMENT       S22024
         L     R5,PLNKQBKD              ADDR OF ELEM TO DELETE @OY12288
         ST    R5,TOTPLBKW              SAVE IN QCB BACKWARD   @OY12288
         L     R5,PLNKQFWD              ELEM FORWARD           @OY12288
         ST    R5,QLAST                 SAVE IT                @OY12288
         L     R5,PLNKQBKD              ADR OF ELEM TO BE FIRST@OY12288
         USING PLNKPREF,R5                                       S22024
         SR    R10,R10            CLEAR REG                      S22024
         LH    R10,PLNKMPTR       DISP TO PLINK PARM             S22024
         AR    R10,R5             POINT TO ELEMENT Q             S22024
         MVC   PLNKQFWD(D4),QLAST       POINT TO Q             @OY12288
         DROP  R5                                                S22024
         B     PLK006P            DELETE FIRST ELENENT ON CHAIN  S22024
PLK005F  EQU   *                                                 S22024
*
         CL    R11,PLNKQBKD             DELETE LAST ELEM ON Q? @OY12288
         BNE   PLK005H            NO
*
         L     R5,PLNKQFWD              POINT TO FIRST ELEM    @OY12288
         ST    R5,TOTPLFWD              SET QCB FORWARD PTR    @OY12288
         DROP  R10
         USING PLNKPREF,R5
         SR    R10,R10            CLEAR REG 10
         LH    R10,PLNKMPTR       GET DISP TO PLINK PARM
*
         AR    R10,R5             SET BASE
         USING PLNKQPTR,R10
         ST    R11,PLNKQBKD             NEXT PTR TO QCB        @OY12288
         B     PLK006P            DELETE MODULE
*
         DROP  R5
         DROP  R10
*
PLK005H  EQU   *
*
         USING PLNKQPTR,R10
         L     R5,PLNKQBKD              GET LAST ELEM ADDR     @OY12288
         ST    R5,QNEXT           SAVE IT
         L     R5,PLNKQFWD              GET FIRST ELEM ON CHAIN@OY12288
         ST    R5,QLAST           SAVE IT
         DROP  R10
*
         USING PLNKPREF,R5                                       S22024
         SR    R10,R10            CLEAR REG                      S22024
         LH    R10,PLNKMPTR       DISP TO Q PTR                  S22024
         AR    R10,R5             POINT TO QUEUE PTR             S22024
         USING PLNKQPTR,R10                                      S22024
         MVC   PLNKQBKD(D4),QNEXT       SET TO NEXT ELEM       @OY12288
         SPACE
         L     R5,QNEXT           LAST ELEMENT TO UPDATE         S22024
         SR    R10,R10            CLEAR REG                      S22024
         LH    R10,PLNKMPTR       DISP TO QUEUE PTR              S22024
         AR    R10,R5             POINT TO QUEUE PTR             S22024
         MVC   PLNKQFWD(D4),QLAST       SET FORWARD POINTER    @OY12288
         DROP  R5                                                S22024
         DROP  R10                                               S22024
         SPACE
PLK006P  EQU   *
         DELETE DE=MODNAME        DELETE THE MODULE
         SPACE
PLK007   LA    R7,8(R7)           POINT TO NEXT MODULE I.D.
         BCT   R6,PLK002                TRY AGAIN              @OY12288
         B     PLK050             EXIT
         SPACE 2
***********************************************************************
*        LOAD                                                         *
***********************************************************************
         SPACE
PLK008   EQU   *
         TM    0(R5),X'80'        LOAD REQUEST ?
         BZ    PLK050             BRANCH IF NO - RETURN.
         SPACE
PLK010   L     R8,4(R1)           GET ADDR OF ENTRY POINT LIST
         SR    R6,R6              CLEAR R6.
         IC    R6,10(R1)          GET LOAD COUNT
         LTR   R6,R6              IS COUNT 0 ?
         BZ    PLK050             BRANCH IF YES - RETURN.
         SPACE
PLK012   MVC   MODNAME(8),0(R7)   MOVE I.D. TO BLDL LIST.
         BLDL  0,BLDLLIST               BUILD LIST             @OY18053
         LTR   R15,R15                  WAS BLDL OK?           @OY18053
         BZ    PLK016                   YES                    @OY18053
         CH    R15,H4                   RTN CODE=MOD NOT FOUND @OY18053
         BNE   PLK050                   NO, MUST BE I/O ERROR  @OY18053
         MVI   TOTOTBUF,BLANK           BLANK OUTPUT           @OY18053
         MVC   TOTOTBUF+D1(D79),TOTOTBUF     BUFFER            @OY18053
         MVC   TOTOTBUF(PLKMSGE-PLKMSG),PLKMSG MSG TO OLTCB    @OY18053
         MVC   TOTOTBUF+D23(8),MODNAME GET MODULE NAME FOR MSG @OY18053
         LA    R15,PLKMSGE-PLKMSG       MSG LENGTH TO OLTCB    @OY18053
         STC   R15,TOTOTCNT                                    @OY18053
         NI    TOTFLG05,XFF-TOTREPLY-TOTEXIOF-TOTPRINT         @OY18053
         OI    TOTFLG05,TOTCECOM        SHOW CECOM REQUEST     @OY18053
         LA    R13,TOTSAVE1             GET SAVE AREA          @OY18053
         L     R15,TOTRESPL             GET RESPL ADDRESS      @OY18053
         USING RESPL,R15                SET UP ADDRESSABILITY  @OY18053
         L     R15,RESPLWO              GET ACCESS ROUTINE ADDR@OY18053
         BALR  R14,R15                  IEDQWO TO WRITE MSG    @OY18053
         DROP  R15                                             @OY18053
         LA    R15,12                   SET RTN CODE-NO MODULE @OY18053
         B     PLK050                   RETURN                 @OY18053
PLK016   EQU   *                                               @OY18053
         LOAD  EPLOC=MODNAME           LOAD THE OLT ROUTINE    @Y17XAUU
         LR    R11,R0             GET ENTRY POINT ADDRESS      Y17XAUU
         SPACE
         MVI   PLKFLG1,LOA        SHOW LOAD REQUEST
         BAL   R3,COREUPD         UPDATE AVAIL. CORE
         SPACE
PLK020   EQU   *
         SR    R15,R15            CLEAR RETURN CODE REG
*
          L     R11,12(R11)        GET ADDRESS OF FIRST EX INSTR
         ST    R11,0(R8)          STORE IN CALLER'S LIST
         LA    R7,8(R7)           POINT TO NEXT MODULE ID
         LA    R8,4(R8)           POINT TO NEXT ENTRY
*
         LA    R5,TOTPLNKQ        GET ADDRESS OF PLINK QCB
          L     R9,TOTPLFWD        GET NEXT PLINK QUEUE ELEMENT
         LA    R9,0(R9)           CLEAR HIGH ORDER BYTE
*
         CR    R5,R9              IS ELEMENT THE QCB ?
          BE    PLK024             YES - Q CHAIN IS EMPTY
*
         L     R9,TOTPLBKW        POINT TO LAST ELEMENT
          ST    R9,PLKLAST         SAVE ADDRESS OF LAST ELEMENT
         USING PLNKPREF,R9
         SR    R10,R10
         LH    R10,PLNKMPTR       GET DISPLACEMENT TO PLINK PARM
          AR    R10,R9             GET ADDRESS OF QUEUE POINTERS
         DROP  R9
*
         USING PLNKQPTR,R10
         LR    R9,R0              GET ADDRESS OF ELEMENT TO BE ADDED
          ST    R9,PLNKQFWD        PUT  IT IN LAST ELEMENT
         ST    R9,TOTPLBKW        PUT IT IN QCB BACKWARD POINTER
*
         USING PLNKPREF,R9
         SR    R10,R10
         LH    R10,PLNKMPTR       GET DISPLACEMENT TO PLINK PARM
          AR    R10,R9             GET ADDRESS OF QUEUE POINTERS
         DROP  R9
*
         USING PLNKQPTR,R10
         ST    R5,PLNKQFWD        PLACE QCB ADDR IN FORWARD PTR
         MVC   PLNKQBKD(4),PLKLAST POINT BACK TO LAST ELEMENT
         B     PLK028             BR TO LOAD NEXT MODULE         S99528
          DROP  R10
         SPACE 2
PLK024   EQU   *   ADD FIRST ELEMENT
         LR    R9,R0              GET ADDRESS OF ELEMENT TO BE ADDED
          ST    R9,TOTPLFWD        PUT IT IN QCB FORWARD POINTER
         ST    R9,TOTPLBKW        PUT IT IN QCB BACKWARD POINTER
*
         USING PLNKPREF,R9
          SR    R10,R10
         LH    R10,PLNKMPTR       GET DISPLACEMENT TO PLINK PARM
          AR    R10,R9             GET ADDRESS OF QUEUE POINTERS
         DROP  R9
*
          USING PLNKQPTR,R10
         ST    R5,PLNKQFWD        PLACE QCB ADDR IN ELEMENT NEXT PTR
         ST    R5,PLNKQBKD        PLACE QCB ADDR IN ELEMENT LAST PTR
          DROP  R10
PLK028   EQU   *
         BCT   R6,PLK012          LOAD NEXT MODULE.
         SPACE 2
PLK050   L     R13,4(R13)         GET ADDR. OF CALLERS SAVE AREA.
         L     R14,12(R13)        RESTORE R14.
         STC   R15,TOTRTCOD       SAVE RETURN CODE
         TM    $OLTFLGS,$TRACE    TRACE OPTION SET ?
         BO    PLK060             YES
         TM    $RETMASK,X'FF'     ANY TERMINATE BITS SET ?
         BZ    PLK055             NO - RETURN NORMALLY
         CLI   TOTRTCOD,0         RETURN CODE OF ZERO ?
         BNE   PLK060             NO
PLK055   EQU   *
         LM    R0,R12,20(R13)     RESTORE CALLER'S REGS.
         BR    R14                RETURN.
*
*        REQUEST IEDQWM2 TO PROVIDE TRACE FUNCTION
*
PLK060   EQU   *
         USING RESPL,R5           SET RESPL ADDRESSABILITY     @Y17XAUU
         L     R5,TOTRESPL        GET RESPL ADDRESS            @Y17XAUU
         L     R15,RESPLM2        GET TRACE ROUTINE ADDRESS    @Y17XAUU
         LM    R2,R12,DISREG2(R13) RESTORE REGISTERS           @Y17XAUU
         BR    R15                EXIT TO TRACE ROUTINE        @Y17XAUU
         DROP  R5                                              @Y17XAUU
         EJECT
*
COREUPD  EQU   *   UPDATE AVAILABLE CORE
*
         STM   R8,R12,PLKSAVE1    SAVE REG
         ST    R6,PLKSAVE2        SAVE REG
         CLI   PLKFLG1,LOA        LOAD REQUEST ?
         BE    COR20              YES
*        ASSUME DELETE REQUEST
         MVC   TOTWKSPC(D3),CORENEED SIZE OF MODULE              S22024
         L     R6,TOTWKSPC        GET CORE SIZE                  S22024
         SRL   R6,D8              CLEAR HIGH ORDER BYTE
         L     R11,TOTUSCOR       CURRENT CORE IN USE            S22024
         SR    R11,R6             UPDATE IT                      S22024
         ST    R11,TOTUSCOR       REPLACE IT                     S22024
         L     R9,TOTMMSPC        GET CURRENT SPACE AVAIL.
         AR    R9,R6              UPDATE AVAIL CORE
         ST    R9,TOTMMSPC        SAVE NEW VALUE
         AR    R11,R9             GET TOTAL OF CORE IN USE AND   S22024
*                                   CORE AVAILABLE               S22024
         S     R11,K8192          SUBTRACT DEFAULT VALUE OF 8K   S22024
         LTR   R11,R11            HAS ANY CORE BEEN OBTAINED     S22024
*                                   FROM RESPL?                  S22024
         BNP   COR16              NO - BRANCH                    S22024
         SR    R8,R8              CLEAR REGISTER 8               S22024
         D     R8,K1024           DETERMINE CORE GOTTEN FROM     S22024
*                                   THE RESPL                    S22024
         LTR   R9,R9              IS IT LESS THAN 1K?            S22024
         BZ    COR16              YES - RETURN
*
         ST    R8,TOTMMSPC        SET NEW BYTE VALUE
         L     R8,TOTRESPL        GET ADDR OF RES. P-LIST
         USING RESPL,R8
         LH    R12,RESBKTOT       GET CURRENT 1K BLOCK COUNT
         AR    R9,R12             UPDATE BLOCK COUNT
         STH   R9,RESBKTOT        REPLACE BLOCK COUNT
         DROP  R8
COR16    EQU   *
         L     R6,PLKSAVE2        RESTORE REG.
         LM    R8,R12,PLKSAVE1    RESTORE REG.
         BR    R3                 RETURN
*
COR20    EQU   *   LOAD REQUEST
*
         MVC   TOTWKSPC(D3),CORENEED SIZE OF MODULE              S22024
         L     R9,TOTWKSPC        SIZE OF MODULE                 S22024
         SRL   R9,D8              CLEAR HIGH ORDER BYTE
         LR    R11,R9             AMOUNT OF CORE TO BE TAKEN     S22024
COR24    EQU   *
         CL    R9,TOTMMSPC        CORE AVAIL IN SUB-TOTAL ?
         BNH   COR32              YES
         L     R12,TOTRESPL       GET ADDR OF RES. P-LIST
         USING RESPL,R12
         LH    R8,RESBKTOT        GET CURRENT 1K BLOCK COUNT
COR28    EQU   *
         LTR   R8,R8              COUNT ZERO ?
         BZ    CORERR             YES - NOT ENOUGH CORE AVAIL.
         BCTR  R8,R0              DECREMENT COUNT
         STH   R8,RESBKTOT        UPDATE AVAIL. CORE
         L     R10,TOTMMSPC       GET SUB-TOTAL COUNT
         A     R10,K1024          ADD 1K TO SUB TOTAL
         ST    R10,TOTMMSPC       UPDATE SUB-TOTAL
         B     COR24              MAKE ANOTHER  CHECK
         DROP  R12
*
COR32    EQU   *                  ENOUGH CORE - UPDATE SUB-TOTAL
*
         L     R12,TOTMMSPC       GET SUB TOTAL
         A     R11,TOTUSCOR       UPDATE CORE IN USE BY THIS OLT S22024
         ST    R11,TOTUSCOR       REPLACE IT                     S22024
         SR    R12,R9             SUBTRACT MODULE SIZE
         ST    R12,TOTMMSPC       REPLACE SUB TOTAL
         B     COR16              RETURN
*
CORERR   EQU   *   CORE NOT AVAILABLE
*
         DELETE DE=MODNAME        DELETE THE PLINK ROUTINE     @Y17XAUU
*                                 JUST LOADED                  @Y17XAUU
         LA    R15,NOCOR          SET NOT ENOUGH CORE RET. CODE
         LM    R8,R12,PLKSAVE1    RESTORE REG.
         B     PLK050             EXIT
         EJECT
         SPACE 2
PATCH    DS    CL50               MAINTENANCE AREA.
K1024    DC    F'1024'            VALUE OF 1K                  @Y17XAUU
K8192    DC    F'8192'            VALUE OF 8K                  @Y17XAUU
H4       DC    H'4'                     CONSTANT OF FOUR       @OY18053
PLKMSG   DS    0C                       START OF MSG           @OY18053
         DC    C'IED214I '              MSGID                  @OY18053
         DC    C'OLT SUB MODULE '       PART 1 OF MSG          @OY18053
PLKNAM   DC    8XL1'40'                 MODULE NAME            @OY18053
         DC    C' NOT FOUND IN LIBRARY'  PART 2 OF MSG         @OY18053
PLKMSGE  DS    0C                       END OF MSG             @OY18053
         SPACE
START    DS    0F *************** DATA TO BE MOVE TO WORK AREA @Y17XAUU
QLDLLIST DS    0F                 BLDL P-LIST                  @Y17XAUU
         DC    XL2'0001'          NUMBER OF LIST ENTRIES
         DC    XL2'003A'          LENGTH OF EACH ENTRY
QODNAME  DC    8XL1'40'           MODULE I. D.                 @Y17XAUU
         DC    XL16'0'            ADDITIONAL DIRECTORY INFO
QORENEED DC    XL3'0'             MAIN STORAGE NEEDED FOR MOD  @Y17XAUU
         DC    XL31'0'            ADDITIONAL DIRECTORY INFO
QLKLAST  DS    F                  SAVE AREA                    @Y17XAUU
QQNEXT   DS    F                  SAVE AREA                    @Y17XAUU
QQLAST   DS    F                  SAVE AREA                    @Y17XAUU
QLKSAVE1 DS    5F                 SAVE AREA 1                  @Y17XAUU
QLKSAVE2 DS    F                  SAVE AREA 2                  @Y17XAUU
QLKFLG1  DC    X'00'              CONTROL FLAG 1               @Y17XAUU
END      DS    0C *************** END OF DATA TO BE MOVE       @Y17XAUU
         SPACE 2
PLNKPREF  DSECT
PLNKNAME  DS    CL8                MODULE ID
         DS    CL2                LEVEL                          S99528
PLNKMPTR DS    CL2                DISPLACEMENT TO QUEUE POINTERS
          SPACE 2
PLNKQPTR DSECT
PLNKQFWD  DS    F                  POINTER TO NEXT ELEMENT
PLNKQBKD DS    F                  POINTER TO LAST ELEMENT
         EJECT
RESPL    RESPL EQUATES=YES
         EJECT
         OLTCB                                                   S22024
BLDLLIST DS    0F                 BLDL PLIST                   @Y17XAUU
         DC    XL2'0001'          NUMBER OF LIST ENTRY         @Y17XAUU
         DC    XL2'003A'          LENGTH OF EACH ENTRY         @Y17XAUU
MODNAME  DC    8XL1'40'           MODULE ID                    @Y17XAUU
         DC    XL16'0'            ADDITIONAL DIRECTORY INFO    @Y17XAUU
CORENEED DC    XL3'0'             SIZE OF MODULE               @Y17XAUU
         DC    XL31'0'            ADDITIONAL DIRECTORY INFO    @Y17XAUU
PLKLAST  DS    F                  SAVE AREA                    @Y17XAUU
QNEXT    DS    F                  SAVE AREA                    @Y17XAUU
QLAST    DS    F                  SAVE AREA                    @Y17XAUU
PLKSAVE1 DS    5F                 SAVE AREA                    @Y17XAUU
PLKSAVE2 DS    F                  SAVE AREA                    @Y17XAUU
PLKFLG1  DC    X'00'              CONTROL FLAG                 @Y17XAUU
         SPACE
MODINDX  EQU   TOTWKSPC
MODINDXE EQU   TOTWKSPC+X'6E'
         END
