         TITLE 'IEDQNO-CHECKPOINT I/O QUEUE MANAGER'
IEDQNO   CSECT
         SPACE 3
*CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A680000                                                         A44868
*A680000                                                         A44868
*C395000-400000                                                  A44868
*A445000,453200                                                @SA71964
*A755000                                                       @SA73560
*A755400                                                      @ZA03099
*A542000                                                       @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*TITLE:IEDQNO-CHECKPOINT QUEUE MANAGER                                *
*                                                                     *
*        MODULE NAME = IEDQNO                                         *
*                                                                     *
*        DESCRIPTIVE NAME = CHECKPOINT I/O QUEUE MANAGER              *
*                                                                     *
*        COPYRIGHT = 'NONE'                                           *
*                                                                     *
*        STATUS:  CHANGE LEVEL 5                                      *
*                                                                     *
*FUNCTION:THIS MODULE PUTS DISK RECORDS ON THE CHECKPOINT I/O         *
*   QUEUE.IT UPDATES THE LAST REQUEST ELEMENT FOR WHICH A DISK        *
*   RECORD WAS BUILT. WHEN IT ENQUEUES AN ENVIRONMENT RECORD          *
*   SEGMENT,IT DEQUEUES ALL INCIDENT RECORDS AND DOES A FREEMAIN      *
*   FOR EACH.THEY ARE NOT WRITTEN ON DISK. AN INCIDENT OVERFLOW BIT   *
*   IN THE INCIDENT REQUEST ELEMENT IS TURNED ON TO INDICATE THAT     *
*   THE REQUEST WILL BE SATISFIED WHEN THE ENVIRONMENT RECORD(S) IS   *
*   WRITTEN.                                                          *
*                                                                     *
*ENTRY POINT                                                          *
*        IEDQNO                                                       *
*                                                                     *
*INPUT:REGISTERS 2,3,4,9,12,14,15 CONTAIN THE FOLLOWING VALUES:       *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORK AREA                                 *
*   3-ADDRESS OF LAST REQUEST ELEMENT FOR WHICH DISK RCD WAS BUILT    *
*   4-ADDRESS OF LAST DISK RECORD BUILT                               *
*   9-ADDRESS OF AVT                                                  *
*   12-BASE REG FOR IEDQNF-CHECKPOINT EXECUTOR                        *
*   14-RETURN POINT-IN IEDQNF                                         *
*   15-ENTRY POINT FOR THIS MODULE                                    *
*                                                                     *
*OUTPUT:THE CHECKPOINT I/O QUEUE IS UPDATED.THE ABOVE REGISTERS       *
*   REMAIN UNCHANGED.                                                 *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        SVC 5 (FREEMAIN)                                             *
*                                                                     *
*EXITS-NORMAL:THIS MODULE BRANCHES TO 4 PLUS THE ADDRESS IN R14.      *
*                                                                     *
*EXITS-ERROR:NONE                                                     *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   AVT(AVTCKELF,AVTCKPTB)                                            *
*   CHECKPOINT WORK AREA                                              *
*                                                                     *
*                                                                     *
*ATTRIBUTES:REENTERABLE                                               *
*                                                                     *
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         EJECT                                                 @Y17XACL
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2                        ADDR OF CKPT WORK AREA
R3       EQU   3                        ADDRESS REQUEST ELEMENT
R4       EQU   4                        ADDR OF DISK RECORD
R5       EQU   5
R6       EQU   6                        ADDR OF PREVIOUS RCD-I/O Q
R7       EQU   7
R8       EQU   8
R9       EQU   9                        ADDRESS OF AVT
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13                       ADDR OF SAVE AREA
R14      EQU   14                       RETURN REG
R15      EQU   15                       ENTRY POINT
         SPACE 3
*STANDARD LINKAGE
         SPACE
         USING IEDQNO,R15
IEDQNO   IEDHJN QNO00                                            S99240
         USING IEDQAVTD,R9              BASE FOR AVT
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA
         EJECT                                                 @Y17XACL
*PUT DISK RECORD ON I/O QUENE
         SPACE
         L     R4,CKPLDRB               ADDRESS OF LAST DISK RCD       X
                                        WHICH WAS BUILT
         L     R5,CKPIOQL               LAST RECORD ON IO QUENE
         LA    R4,0(R4)                 CLEAR HIGH ORDER BYTE  @SA71964
         LR    R6,R4                    SET THIS RECORD AS LAST  S99240
         USING IEDQCDRD,R4              BASE FOR DISK RECORD     S99240
         CLI   CDRKEY,CDROPC            IS THIS AN OP CTL RECORD S99240
         BNE   QNO05                    NO, ONLY ONE             S99240
         USING IEDQCDRD,R6                                       S99240
QNO03    OC    CDRDATE+1(3),CDRDATE+1   CHECK FOR LAST RECORD    S99240
         BZ    QNO05                    YES, INSERT ALL RECORDS  S99240
*                                        ON I/O QUEUE            S99240
         L     R6,CDRDATE               GET NEXT RECORD ADDR.    S99240
         LA    R6,0(R6)                 CLEAR HIGH ORDER BYTE  @SA71964
         B     QNO03                    AND RELOOP               S99240
         DROP  R6                                                S99240
QNO05    XC    1(3,R6),1(R6)            CLEAR LINK FIELD OF LAST S99240
         NC    CKPIOQF+1(3),CKPIOQF+1   CHECK FOR EMPTY QUEUE
         ST    R6,CKPIOQL               PUT ADDR ON I/O QUEUE    S99240
         BZ    QNO10                    BRANCH IF EMPTY QUENE
         SPACE
         IC    R6,CDRDATE-IEDQCDRD(R5)  SAVE HIGH ORDER BYTE     S99240
         ST    R4,CDRDATE-IEDQCDRD(R5)  CHAIN NEW RECORDS TO LASTS99240
         STC   R6,CDRDATE-IEDQCDRD(R5)  RESTORE HIGH ORDER BYTE  S99240
         B     QNO20                    SKIP IOQF UPDATE         S99240
QNO10    EQU   *
         ST    R4,CKPIOQF               PTR TO FIRST RECORD ON QUE
         EJECT                                                 @Y17XACL
*UPDATE LAST REQUEST ELEMENT FOR WHICH A RECORD HAS BEEN BUILT
         SPACE
QNO20    EQU   *
         ST    R3,CKPLREB               UPDATE FIELD FOR LAST REB
         MVI   CKPLREB,X'0'             CLEAR UNSATISFIED FIELD
         USING IEDQCRED,R3              BASE FOR REQUEST ELEMENT
         TM    CREKEY,X'50'             CHECK FOR TOTAL OR MCPLOSE
         BNO   4(R14)                   BRANCH IF NOT
         SPACE
         TM    AVTCKELF,AVTCINCN        CHECK FOR INCIDENT OVERFLOW0807
         BZ    QNO25                    BRANCH IF NOT REACHED YET  0807
         CLI   CKPINCNO,AVTEZERO        ARE THERE INCIDENT     @Y17XACL
*                                       RECORDS AVAILABLE      @Y17XACL
         BNE   QNO25                    YES, BRANCH            @Y17XACL
         MVC   CKPINCNO(1),CKPINCNT     INITIALIZE COUNT OF INCIDTS
         XC    CKPTTRLI(3),CKPTTRLI     INITIALIZE INCIDENT TTR
         MVC   CKPSECLI,CKPSECIN        DATA ON TRK BEFORE 1ST INCD0416
         EJECT                                                 @Y17XACL
*AN ENVIRONMENT RECORD HAS JUST BEEN PUT ON THE I/O QUENE. REMOVE
*ANY INCIDENT RECORDS ALREADY ON I/O QUENE.
         SPACE
QNO25    EQU   *                                                   0807
         LA    R6,CKPIOQF               INIT-ADDR I/O QUENE
         SPACE 3
*BEGINNING OF LOOP THROUGH RECORDS ON DISK I/O  QUENE
         SPACE
QNO30    EQU   *
         L     R4,0(0,R6)               GET NEXT RECORD ON I/O Q
         USING IEDQCDRD,R4              BASE FOR DISK RECORD
         NC    1(3,R6),1(R6)            CHECK FOR END OF CHAIN
         BZ    QNO50                    BRANCH IF END
         SPACE
         CLI   CDRKEY,CDROPC            CHECK FOR INCIDENT RECORD
         BH    QNO40                    BRANCH IF NOT INCIDENT
         SPACE
         OI    AVTCKELF,AVTCINCN        TURN ON INCIDENT OVERFLOW
         MVC   1(3,R6),1(R4)            REMOVE RECORD FROM CHAIN
         ST    R4,CKPLDRB               ADDR OF RCD FOR FREEMAIN
         SPACE
         LH    R7,CKPINCLN              LENGTH OF INCIDENT RCD
         LA    R8,CKPLDRB               RECORD ADDRESS LOCATION
         LR    R10,R15                  SAVE BASE REG
         FREEMAIN E,LV=(R7),A=(R8),MF=(E,CKPGETML)
         LR    R15,R10                  RESTORE BASE REG
         B     QNO30                    BEGINNING OF LOOP        A44868
         SPACE 3
QNO40    EQU   *
         LR    R6,R4                    SAVE ADDR OF REQUEST ELEMT
         B     QNO30                    BEGINNING OF LOOP
         SPACE
*END OF LOOP THROUGH I/O QUENE
         SPACE 3
QNO50    EQU   *
         TM    AVTCKELF,AVTCINCN        CHECK INCIDENT OVERFLOW
         BZ    4(R14)                   RETURN IF NOT ON
         SPACE 3
*LOOP THROUGH REQUEST ELEMENTS AND TURN ON INCIDENT OVERFLOW IN
*EACH REQUEST ELEMENT FOR AN INCIDENT CHECKPOINT.
         SPACE
         L     R5,AVTCKPTB              GET FIRST ELEMENT ON QCB
         USING IEDQCRED,R5              BASE FOR REQUEST ELEM  @ZA03099
         CLI   CREKEY,CREREMVE          THIS CHECKPOINT REMOVAL@SA73560
*                                       ELEMENT ?              @SA73560
         BNE   QNO55                    NO BRANCH              @SA73560
         L     R5,4(0,R5)               GET NEXT ELEMENT       @SA73560
QNO55    EQU   *                                               @SA73560
         NC    CKPEXCP,CKPEXCP          CHECK CURRENT EXCP SLOT
         BNZ   QNO70                    BRANCH IF A  RECORD IS         X
                                        BEING WRITTEN
         SPACE 3
*BEGINNING OF LOOP THROUGH REQUEST ELEMENTS IN QCB CHAIN.
         SPACE
QNO60    EQU   *
         LA    R5,0(0,R5)               CLEAR HIGH ORDER BYTE
         C     R5,CKPLREB               CHECK LAST REQUEST ELEMENT     X
                                        THAT HAS A RECORD BUILT FOR    X
                                        IT
         BE    4(R14)                   RETURN IF EQUAL
         SPACE
QNO70    EQU   *
         USING IEDQCRED,R5              BASE FOR REQ ELEMENT       0416
         L     R5,4(0,R5)               GET NEXT ELEMENT IN CHAIN
         CLI   CREKEY,CREOPC            CHECK FOR INCIDENT REQUEST
         BH    QNO60                    BRANCH IF NOT INCIDENT
         SPACE
         OI    CREKEY,CREINCOF          INDICATE INCIDENT OVERFLOW
         B     QNO60                    CHECK FOR END OF CHAIN
         SPACE
*END OF LOOP THROUGH REQUEST ELEMENTS
         EJECT                                                 @Y17XACL
         TAVTD
         EJECT                                                 @Y17XACL
         TCKPD 3330                     MERLIN VERSION OF DSECT    0419
         END
