         TITLE '***** IDCLC01: LISTCAT FSR - INITIALIZATION AND ROUTING*
               G *****  '
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCLC01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCLC01   78.033'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @09,0                                               0002
@PSTART  LA    @10,4095(,@09)                                      0002
         LA    @11,4095(,@10)                                      0002
         LA    @12,4095(,@11)                                      0002
         USING @PSTART,@09                                         0002
         USING @PSTART+4095,@10                                    0002
         USING @PSTART+8190,@11                                    0002
         USING @PSTART+12285,@12                                   0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @08,@01                                             0002
         USING @DATD,@08                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @08,8(,@13)                                         0002
         LR    @13,@08                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0273
*        CALL IDCLC02(GDTTBL,                                      0274
*                     FDTTBL);                             /*@ZA05939*/
*                                                                  0274
         L     @04,@PC00001                                        0274
         ST    @04,@AL00001                                        0274
         L     @04,@PC00001+4                                      0274
         ST    @04,@AL00001+4                                      0274
         L     @15,@CV00869                                        0274
         LA    @01,@AL00001                                        0274
         BALR  @14,@15                                             0274
*        /************************************************************/
*        /*                                                  @ZA05939*/
*        /* SAVE THE POINTER TO THE COMMON AREA RETURNED     @ZA05939*/
*        /* BY IDCLC02.                                      @ZA05939*/
*        /*                                                  @ZA05939*/
*        /************************************************************/
*                                                                  0275
*        RESPECIFY (RTNREG) RSTD;                          /*@ZA05939*/
*        COMPTR = RTNREG;                                  /*@ZA05939*/
         LR    COMPTR,RTNREG                                       0276
*        RESPECIFY (RTNREG) UNRSTD;                        /*@ZA05939*/
*                                                                  0277
*        /************************************************************/
*        /*                                                          */
*        /*  GLOBAL INITIALIZATIONS                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0278
*        RESPECIFY DARGLIST BASED(DARGPTR);                /*@ZA05939*/
*        FLAGS = ZEROAREA;                                         0279
         L     @04,COMFLGPT(,COMPTR)                               0279
         MVC   FLAGS(34,@04),ZEROAREA                              0279
*        TYPAUDIT = ZEROAREA;                                      0280
         L     @04,COMTOTPT(,COMPTR)                               0280
         MVC   TYPAUDIT(48,@04),ZEROAREA                           0280
*        SAVRC = 0;                                        /*@ZA05939*/
         SLR   @04,@04                                             0281
         L     @02,COMVARPT(,COMPTR)                               0281
         STH   @04,SAVRC(,@02)                                     0281
*        ERRARGPT = ADDR(ERRDARG);                                 0282
         L     @02,COMSWKPT(,COMPTR)                               0282
         LA    @15,ERRDARG                                         0282
         ST    @15,ERRARGPT(,@02)                                  0282
*        ERRDARG = ZEROAREA;                                       0283
         MVC   ERRDARG(44),ZEROAREA                                0283
*        PWTALLY = 0;                                              0284
         ST    @04,PWTALLY                                         0284
*        DPLISTPT = ADDR(DAS#FLGS);                                0285
*                                                                  0285
         LA    @04,DAS#FLGS                                        0285
         ST    @04,DPLISTPT(,@02)                                  0285
*        /************************************************************/
*        /*                                                  @YL026UE*/
*        /* IN TSO USERID IS THE DEFAULT IF 'ENTRY' OR 'LEVEL' IS    */
*        /* NOT SPECIFIED.  ISSUE UID MACRO TO OBTAIN USERID.        */
*        /*                                                  @YL026UE*/
*        /************************************************************/
*                                                                  0286
*                                                                  0286
*        CALL IDCSAID0(GDTTBL,UIDNM,UIDLN);                /*@YL026UE*/
*                                                                  0286
         L     @04,@PC00001                                        0286
         ST    @04,@AL00001                                        0286
         LA    @02,UIDNM                                           0286
         ST    @02,@AL00001+4                                      0286
         LA    @02,UIDLN                                           0286
         ST    @02,@AL00001+8                                      0286
         MVI   @AL00001+8,X'80'                                    0286
         L     @15,GDTUID(,@04)                                    0286
         LA    @01,@AL00001                                        0286
         BALR  @14,@15                                             0286
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE FLAG TO INDICATE ENTPROC WILL BE CALLED       */
*        /* IF APPLICABLE.                                   @YL026UE*/
*        /* PROCEED TO INTERROGATE USER'S REQUEST AND SETUP REQUIRED */
*        /* CATALOG WORKAREAS AND PARM LISTS.                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0287
*        IF ADDR(ENT) > NULLPTR × ADDR(LVL) > NULLPTR × UIDLN > 0  0287
*          THEN                                                    0287
         SLR   @04,@04                                             0287
         L     @02,@PC00001+4                                      0287
         C     @04,FDTPTR+8(,@02)                                  0287
         BL    @RT00287                                            0287
         C     @04,FDTPTR+80(,@02)                                 0287
         BL    @RT00287                                            0287
         CH    @04,UIDLN                                           0287
         BNL   @RF00287                                            0287
@RT00287 DS    0H                                                  0288
*            ENLVUDFG = ON;                                /*@YL026UE*/
*                                                                  0288
         L     @04,COMFLGPT(,COMPTR)                               0288
         OI    ENLVUDFG(@04),B'10000000'                           0288
*        /************************************************************/
*        /*                                                  @YL026UE*/
*        /* CATALOG DNAME WILL NOT BE USED. THE CATALOG WILL BE      */
*        /* OPENED BY VSAM CATALOG IF NECESSARY              @YL026UE*/
*        /*                                                  @YL026UE*/
*        /************************************************************/
*                                                                  0289
*        FDTPTR(12) = NULLPTR;         /* ADDR(CATDD)=0      @Y30SSMK*/
@RF00287 L     @04,@PC00001+4                                      0289
         SLR   @02,@02                                             0289
         ST    @02,FDTPTR+44(,@04)                                 0289
*        CALL INITPROC;                                            0290
         BAL   @14,INITPROC                                        0290
*        RESPECIFY RTNREG RSTD;                                    0291
*        TESTRC = RTNREG;                                          0292
         LR    TESTRC,RTNREG                                       0292
*        RESPECIFY RTNREG UNRSTD;                                  0293
*                                                                  0293
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF ANY ERRORS ARE ENCOUNTERED DURING INITIALIZATION,     */
*        /* SAVE THE MAXIMUM RETURN CODE, AND IF ANY ERROR   @Y30SSMK*/
*        /* MESSAGES HAVE NOT YET BEEN PRINTED, DO SO.       @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0294
*        IF TESTRC ^= 0                                            0294
*          THEN                                                    0294
         LTR   TESTRC,TESTRC                                       0294
         BZ    @RF00294                                            0294
*            DO;                                                   0295
*              SAVRC = MAX (SAVRC, TESTRC);                /*@ZA05939*/
         L     @02,COMVARPT(,COMPTR)                               0296
         LH    @15,SAVRC(,@02)                                     0296
         CR    @15,TESTRC                                          0296
         BNL   *+6
         LR    @15,TESTRC                                          0296
         STH   @15,SAVRC(,@02)                                     0296
*              IF NOMSGFLG = ON                                    0297
*                THEN                                              0297
         L     @02,COMFLGPT(,COMPTR)                               0297
         TM    NOMSGFLG(@02),B'10000000'                           0297
         BNO   @RF00297                                            0297
*                  NOMSGFLG = OFF;                                 0298
         NI    NOMSGFLG(@02),B'01111111'                           0298
*                ELSE                                              0299
*                  CALL ERRPROC;                                   0299
         B     @RC00297                                            0299
@RF00297 L     @15,@CV00872                                        0299
         BALR  @14,@15                                             0299
*            END;                                                  0300
*                                                                  0300
@RC00297 DS    0H                                                  0301
*        /************************************************************/
*        /*                                                          */
*        /* BEGIN PROCESSING EITHER AN ENTRY LIST OR THE FULL        */
*        /* CATALOG OR A SUBSET OF TYPES THEREFROM, UNLESS           */
*        /* TERMINATING CONDITIONS EXIST.                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0301
*        IF SAVRC < LASTCC12  &  CMDERRSW = OFF                    0301
*          THEN                                                    0301
@RF00294 L     @02,COMVARPT(,COMPTR)                               0301
         LH    @02,SAVRC(,@02)                                     0301
         C     @02,@CF00586                                        0301
         BNL   @RF00301                                            0301
         L     @02,COMFLGPT(,COMPTR)                               0301
         TM    CMDERRSW(@02),B'10000000'                           0301
         BNZ   @RF00301                                            0301
*            DO;                                                   0302
*              IF ENLVUDFG = ON                                    0303
*                THEN                                              0303
         TM    ENLVUDFG(@02),B'10000000'                           0303
         BNO   @RF00303                                            0303
*                  DO;                                     /*@YL026UE*/
*                    IF ADDR(CATNM) = NULLPTR /*NO CATLG HEADER LINE */
*                      THEN                                        0305
         L     @04,@PC00001+4                                      0305
         L     @04,FDTPTR+40(,@04)                                 0305
         LTR   @04,@04                                             0305
         BNZ   @RF00305                                            0305
*                        DO;                               /*@YL026UE*/
*                          SUBTFLG = ON;                   /*@YL026UE*/
         OI    SUBTFLG(@02),B'10000000'                            0307
*                          NOTTLFLG = ON;                  /*@YL026UE*/
         OI    NOTTLFLG(@02),B'10000000'                           0308
*                        END;                              /*@YL026UE*/
*                    ENTCT = 1;        /*INITIALIZE          @YL026UE*/
@RF00305 MVC   ENTCT(4),@CF00045                                   0310
*                    ETYTYP = ' ';     /*INITIALIZE          @YL026UE*/
         MVI   ETYTYP,C' '                                         0311
*                    CALL ENTPROC;                         /*@YL026UE*/
         BAL   @14,ENTPROC                                         0312
*                  END;                                    /*@YL026UE*/
*                ELSE                                              0314
*                  CALL GNXTPROC;                                  0314
         B     @RC00303                                            0314
@RF00303 BAL   @14,GNXTPROC                                        0314
*              RESPECIFY RTNREG RSTD;                              0315
@RC00303 DS    0H                                                  0316
*              TESTRC = RTNREG;                                    0316
         LR    TESTRC,RTNREG                                       0316
*              RESPECIFY RTNREG UNRSTD;                            0317
*              IF TESTRC ^= 0                                      0318
*                THEN                                              0318
         LTR   TESTRC,TESTRC                                       0318
         BZ    @RF00318                                            0318
*                  DO;                                             0319
*                    SAVRC = MAX (SAVRC, TESTRC);          /*@ZA05939*/
         L     @02,COMVARPT(,COMPTR)                               0320
         LH    @15,SAVRC(,@02)                                     0320
         CR    @15,TESTRC                                          0320
         BNL   *+6
         LR    @15,TESTRC                                          0320
         STH   @15,SAVRC(,@02)                                     0320
*                    IF NOMSGFLG = ON                              0321
*                      THEN                                        0321
         L     @02,COMFLGPT(,COMPTR)                               0321
         TM    NOMSGFLG(@02),B'10000000'                           0321
         BNO   @RF00321                                            0321
*                        NOMSGFLG = OFF;                           0322
         NI    NOMSGFLG(@02),B'01111111'                           0322
*                      ELSE                                        0323
*                        CALL ERRPROC;                             0323
         B     @RC00321                                            0323
@RF00321 L     @15,@CV00872                                        0323
         BALR  @14,@15                                             0323
*                  END;                                            0324
@RC00321 DS    0H                                                  0325
*        /************************************************************/
*        /*                                                          */
*        /* OUTPUT EOJ STATISTICS ON THE NUMBER OF ENTRIES PROCESSED */
*        /* AND SUPPRESSED.                                          */
*        /*                                                          */
*        /* UNDER TSO, EOJ STATISTICS WILL NOT BE PRINTED,     YM4128*/
*        /* AND THE NUMBER OF ENTRIES SUPPRESSED WILL ONLY     YM4128*/
*        /* BE PRINTED IF NONZERO.                             YM4128*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0325
*        IF GDTECT = NULLPTR                                 /*YM4128*/
*          THEN                                              /*YM4128*/
@RF00318 L     @02,@PC00001                                        0325
         L     @02,GDTECT(,@02)                                    0325
         LTR   @02,@02                                             0325
         BNZ   @RF00325                                            0325
*            DO;                                             /*YM4128*/
*              TOTLCNT = CTYPCNT +                                 0327
*                        DTYPCNT +                                 0327
*                        ITYPCNT +                                 0327
*                        ATYPCNT +                                 0327
*                        UTYPCNT +                                 0327
*                        VTYPCNT +                                 0327
*                        XTYPCNT +                                 0327
*                        BTYPCNT +                                 0327
*                        PTYPCNT +                         /*@Y30SSMK*/
*                        GTYPCNT +                         /*@Y30SSMK*/
*                        RTYPCNT;                          /*@Y30SSMK*/
         L     @02,COMTOTPT(,COMPTR)                               0327
         L     @15,CTYPCNT(,@02)                                   0327
         AL    @15,DTYPCNT(,@02)                                   0327
         AL    @15,ITYPCNT(,@02)                                   0327
         AL    @15,ATYPCNT(,@02)                                   0327
         AL    @15,UTYPCNT(,@02)                                   0327
         AL    @15,VTYPCNT(,@02)                                   0327
         AL    @15,XTYPCNT(,@02)                                   0327
         AL    @15,BTYPCNT(,@02)                                   0327
         AL    @15,PTYPCNT(,@02)                                   0327
         AL    @15,GTYPCNT(,@02)                                   0327
         AL    @15,RTYPCNT(,@02)                                   0327
         ST    @15,TOTLCNT(,@02)                                   0327
*              DARGSMOD = LC1ID;                                   0328
         L     @01,COMSWKPT(,COMPTR)                               0328
         L     @15,DARGPTR(,@01)                                   0328
         MVC   DARGSMOD(3,@15),@CC01155                            0328
*              DARGSENT = LCMSG07;                                 0329
         MVI   DARGSENT(@15),X'07'                                 0329
*              DARGDBP = ADDR(TYPAUDIT);                           0330
         ST    @02,DARGDBP(,@15)                                   0330
*              DARGILP = LENGTH(TYPAUDIT);                         0331
         MVC   DARGILP(2,@15),@CH01565                             0331
*              CALL LISTPROC;                                      0332
         L     @15,@CV00871                                        0332
         BALR  @14,@15                                             0332
*            END;                                            /*YM4128*/
*                                                                  0333
*              IF (PWTALLY ^= 0 & GDTECT ^= NULLPTR) ×       /*YM4128*/
*                 GDTECT = NULLPTR                           /*YM4128*/
*                THEN                                        /*YM4128*/
@RF00325 SLR   @02,@02                                             0334
         C     @02,PWTALLY                                         0334
         BE    @GL00004                                            0334
         L     @15,@PC00001                                        0334
         C     @02,GDTECT(,@15)                                    0334
         BNE   @RT00334                                            0334
@GL00004 L     @02,@PC00001                                        0334
         L     @02,GDTECT(,@02)                                    0334
         LTR   @02,@02                                             0334
         BNZ   @RF00334                                            0334
@RT00334 DS    0H                                                  0335
*                  DO;                                       /*YM4128*/
*                    DARGSMOD = LC1ID;                             0336
         L     @02,COMSWKPT(,COMPTR)                               0336
         L     @02,DARGPTR(,@02)                                   0336
         MVC   DARGSMOD(3,@02),@CC01155                            0336
*                    DARGSENT = LCMSG10;                           0337
         MVI   DARGSENT(@02),X'0A'                                 0337
*                    DARGDBP = ADDR(PWTALLY);                      0338
         LA    @15,PWTALLY                                         0338
         ST    @15,DARGDBP(,@02)                                   0338
*                    DARGILP = LENGTH(PWTALLY);                    0339
         MVC   DARGILP(2,@02),@CH00050                             0339
*                    CALL LISTPROC;                                0340
         L     @15,@CV00871                                        0340
         BALR  @14,@15                                             0340
*                  END;                                      /*YM4128*/
*            END;                                                  0342
@RF00334 DS    0H                                                  0343
*        /************************************************************/
*        /*                                                          */
*        /* SELECT THE APPROPRIATE EOJ MESSAGE.                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0343
*        IF GDTECT ^= NULLPTR                                      0343
*          THEN                                                    0343
@RF00301 SLR   @02,@02                                             0343
         L     @15,@PC00001                                        0343
         C     @02,GDTECT(,@15)                                    0343
         BE    @RF00343                                            0343
*            DO;                                                   0344
*              IF SAVRC > 0                                        0345
*                THEN                                              0345
         L     @01,COMVARPT(,COMPTR)                               0345
         CH    @02,SAVRC(,@01)                                     0345
         BNL   @RF00345                                            0345
*                  DO;                                     /*@Y30SSMK*/
*                    ERRARGPT->DARGSMOD = UV0ID;           /*@Y30SSMK*/
         L     @02,COMSWKPT(,COMPTR)                               0347
         L     @02,ERRARGPT(,@02)                                  0347
         MVC   DARGSMOD(3,@02),@CC01149                            0347
*                    ERRARGPT->DARGSENT = UVMSG15;         /*@Y30SSMK*/
         MVI   DARGSENT(@02),X'0F'                                 0348
*                    CALL ERRPROC;                         /*@Y30SSMK*/
         L     @15,@CV00872                                        0349
         BALR  @14,@15                                             0349
*                  END;                                    /*@Y30SSMK*/
*            END;                                          /*@Y30SSMK*/
*          ELSE                                                    0352
*            DO;                                           /*@Y30SSMK*/
         B     @RC00343                                            0352
@RF00343 DS    0H                                                  0353
*              IF SAVRC < LASTCC12                                 0353
*                THEN                                              0353
         L     @02,COMVARPT(,COMPTR)                               0353
         LH    @02,SAVRC(,@02)                                     0353
         C     @02,@CF00586                                        0353
         BNL   @RF00353                                            0353
*                  ERRARGPT->DARGSENT = UVMSG01;           /*@Y30SSMK*/
         L     @02,COMSWKPT(,COMPTR)                               0354
         L     @02,ERRARGPT(,@02)                                  0354
         MVI   DARGSENT(@02),X'01'                                 0354
*                ELSE                                              0355
*                  ERRARGPT->DARGSENT = UVMSG03;           /*@Y30SSMK*/
         B     @RC00353                                            0355
@RF00353 L     @02,COMSWKPT(,COMPTR)                               0355
         L     @02,ERRARGPT(,@02)                                  0355
         MVI   DARGSENT(@02),X'03'                                 0355
*              ERRARGPT->DARGSMOD = UV0ID;                 /*@Y30SSMK*/
@RC00353 L     @02,COMSWKPT(,COMPTR)                               0356
         L     @02,ERRARGPT(,@02)                                  0356
         MVC   DARGSMOD(3,@02),@CC01149                            0356
*              CALL ERRPROC;                               /*@Y30SSMK*/
         L     @15,@CV00872                                        0357
         BALR  @14,@15                                             0357
*            END;                                                  0358
*        /************************************************************/
*        /*                                                          */
*        /* CLOSE THE USER'S OUTPUT DATASET, IF IT IS NOT THE        */
*        /* DEFAULT AMS OUTPUT DATASET.                              */
*        /* NOTE - THE OUTPUT FILE IS NOT CLOSE UNTIL NOW IN ORDER   */
*        /* TO ACCOMMODATE ANY FINAL EOJ MESSAGES.                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0359
*        IF ADDR(OUTDD) ^= NULLPTR  & OTIOCSPT ^= PRTFILE          0359
*          THEN                                                    0359
@RC00343 SLR   @02,@02                                             0359
         L     @15,@PC00001+4                                      0359
         C     @02,FDTPTR+4(,@15)                                  0359
         BE    @RF00359                                            0359
         L     @15,COMSWKPT(,COMPTR)                               0359
         C     @02,OTIOCSPT(,@15)                                  0359
         BE    @RF00359                                            0359
*            DO;                                                   0360
*                                                                  0360
*              CALL IDCIOCL0 (GDTTBL,                              0361
*                      OTIOCSPT);                                  0361
         L     @02,@PC00001                                        0361
         ST    @02,@AL00001                                        0361
         LA    @15,OTIOCSPT(,@15)                                  0361
         ST    @15,@AL00001+4                                      0361
         MVI   @AL00001+4,X'80'                                    0361
         L     @15,GDTCLS(,@02)                                    0361
         LA    @01,@AL00001                                        0361
         BALR  @14,@15                                             0361
*              SAVRC = MAX(SAVRC, TESTRC);                 /*@ZA05939*/
         L     @02,COMVARPT(,COMPTR)                               0362
         LH    @15,SAVRC(,@02)                                     0362
         CR    @15,TESTRC                                          0362
         BNL   *+6
         LR    @15,TESTRC                                          0362
         STH   @15,SAVRC(,@02)                                     0362
*            END;                                                  0363
*                                                                  0363
*        /************************************************************/
*        /*                                                          */
*        /* DUMP FULL AMS REGION                                     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0364
*        IF GDTDBG = NULLPTR                                       0364
*          THEN;                                                   0364
@RF00359 L     @04,@PC00001                                        0364
         L     @04,GDTDBG(,@04)                                    0364
         LTR   @04,@04                                             0364
         BZ    @RT00364                                            0364
*          ELSE                                                    0366
*            CALL IDCDB010 (GDTTBL,'LC99');                        0366
*                                                                  0366
         L     @04,@PC00001                                        0366
         ST    @04,@AL00001                                        0366
         LA    @02,@CC01360                                        0366
         ST    @02,@AL00001+4                                      0366
         MVI   @AL00001+4,X'80'                                    0366
         L     @15,GDTDBG(,@04)                                    0366
         LA    @01,@AL00001                                        0366
         BALR  @14,@15                                             0366
*        /************************************************************/
*        /*                                                          */
*        /* FREE ALL STORAGE AREAS OBTAINED BY LISTCATALOG AND       */
*        /* SET THE FINAL CONDITION CODE.                    @ZA05939*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0367
*        CALL IDCSAFP0 (GDTTBL,                                    0367
*                'LC00',                                           0367
*                ALL);                                             0367
*                                                                  0367
@RT00364 MVC   @AL00001+4(8),@AL00367                              0367
         L     @04,@PC00001                                        0367
         ST    @04,@AL00001                                        0367
         L     @15,GDTFPL(,@04)                                    0367
         LA    @01,@AL00001                                        0367
         BALR  @14,@15                                             0367
*        LASTCC = SAVRC;                                   /*@ZA05939*/
*                                                                  0368
         L     @04,@PC00001+8                                      0368
         L     @02,COMVARPT(,COMPTR)                               0368
         LH    @02,SAVRC(,@02)                                     0368
         STH   @02,LASTCC(,@04)                                    0368
*        /************************************************************/
*        /*                                                  @ZA05939*/
*        /* INVOKE FREESTG TO FREE THE AUTOMATIC STORAGE     @ZA05939*/
*        /* FOR IDCLC02.  CONTROL IS RETURNED.               @ZA05939*/
*        /*                                                  @ZA05939*/
*        /************************************************************/
*                                                                  0369
*        CALL FREESTG;                                     /*@ZA05939*/
*                                                                  0369
         L     @15,@CV00880                                        0369
         BALR  @14,@15                                             0369
*        /************************************************************/
*        /*                                                  @ZA05939*/
*        /* PROCESSING IS COMPLETE, EXIT FROM LISTCATALOG    @ZA05939*/
*        /* RETURNING TO THE EXECUTIVE MODULE.               @ZA05939*/
*        /*                                                  @ZA05939*/
*        /************************************************************/
*                                                                  0370
*        CALL IDCSAEP0(GDTTBL,MODID,LASTCC);                       0370
         L     @04,@PC00001                                        0370
         ST    @04,@AL00001                                        0370
         LA    @15,MODID                                           0370
         ST    @15,@AL00001+4                                      0370
         L     @15,@PC00001+8                                      0370
         ST    @15,@AL00001+8                                      0370
         MVI   @AL00001+8,X'80'                                    0370
         L     @15,GDTEPL(,@04)                                    0370
         LA    @01,@AL00001                                        0370
         BALR  @14,@15                                             0370
*                                                                  0371
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - INITPROC                                */
*        /*                                                          */
*        /* FUNCTION - INTERROGATION OF AMS LISTC COMMAND STATEMENT  */
*        /*            AND INITIALIZATION OF CAT/DADSM PARAMETER     */
*        /*            LISTS AND WORKAREAS.                          */
*        /*                                                          */
*        /* INPUT - LISTC COMMAND STATEMENT DATA                     */
*        /*                                                          */
*        /* OUTPUT - INITIALIZED CPLS AND FPLS, FORMATTED CATALOG    */
*        /*          WORKAREAS, AND RETRIEVED STATIC TEXT FOR LISTC  */
*        /*          OUTPUT.                                         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0371
*INITPROC:                                                         0371
*        PROCEDURE;                                                0371
*                                                                  0371
@EL00001 L     @13,4(,@13)                                         0371
@EF00001 L     @00,@SIZDATD                                        0371
         LR    @01,@08                                             0371
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0371
         BR    @14                                                 0371
INITPROC STM   @14,@12,@SA00002                                    0371
*        /************************************************************/
*        /*                                                          */
*        /* LOCAL VARIABLES                                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0372
*        DCL DICTSZ    FIXED(31) INIT(1400);                       0372
*                                      /*CAT WKA SIZE FOR GETPOOL    */
*        DCL GPDDSZ    FIXED(31) INIT(256);                        0373
*                                      /*AMS TP PARM LEN FOR GETPOOL */
*        DCL SAPTR     PTR(31);        /*TEMP PTR FOR SAVEAREA FPL'S */
*        DCL SAVFPL    CHAR(*) BASED;  /*OVERLAY OF AN FPL           */
*        DCL IDX       FIXED(15);      /*INDEX VAR TO INIT THE FPL'S */
*        DCL BYPASMUL  FIXED(15) CONSTANT(2);              /*@Y30SSMK*/
*                                      /*COUNT TO BYPASS MULTITYP FPL*/
*        DCL FPLPTLEN  FIXED(15) CONSTANT(8);              /*@Y30SSMK*/
*                                      /*LEN FOR FPL PTR AND LEN     */
*        DCL MULPTLEN  FIXED(15) CONSTANT(32);             /*@Y30SSMK*/
*                                      /*LEN FOR MULT FPL PTR & LEN  */
*        DCL STORCNT2  FIXED(15) CONSTANT(2);              /*@Y30SSMK*/
*                                      /*STOR CNT FOR 2 STORAGE AREAS*/
*        DCL STORCNT3  FIXED(15) CONSTANT(3);              /*@Y30SSMK*/
*                                      /*STOR CNT FOR 3 STORAGE AREAS*/
*        DCL WKLENFLD  FIXED(15) CONSTANT(4);              /*@Y30SSMK*/
*                                      /*LEN FOR WORKAREA LEN FIELDS */
*        DCL MULFLDNO  FIXED(15) CONSTANT(4);              /*@Y30SSMK*/
*                                      /*NO. OF PTR AND LEN FIELDS   */
*        DCL LC#PTLEN  FIXED(15) CONSTANT(12);             /*@Y30SSMK*/
*                                      /*LEN FOR CPL PTR & LEN FIELDS*/
*        DCL ENTCILEN  FIXED(15) CONSTANT(16);             /*@Y30SSMK*/
*                                      /*LEN FOR CI & TYPE IN WKAREA */
*        DCL ASSOCLEN  FIXED(15) CONSTANT(100);            /*@Y30SSMK*/
*                                      /*LEN OF 25 ASSOC CI & TYPES  */
*        /************************************************************/
*        /*                                                          */
*        /* SETUP THE OPEN ARGUMENT LIST FOR THE USER SPECIFIED      */
*        /* OUTPUT DATASET.  IF NOT SPECIFIED, THEN THE STANDARD AMS */
*        /* LISTING-OUTPUT DATA SET IS USED.                         */
*        /* NOTE - THE OUTPUT FILE IS PROCESSED IMMEDIATELY TO       */
*        /* ALLOW FOR ANY DIAGNOSTICS OUTPUT BY THE SUBSEQUENT       */
*        /* LISTCAT PROCESSING.                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0387
*        OLDERID2 = NEWERID2;                                      0387
         L     @04,@PC00001                                        0387
         L     @02,GDTTR2(,@04)                                    0387
         MVC   @TS00001(95),NEWERID2(@02)                          0387
         MVC   OLDERID2(95,@02),@TS00001                           0387
*        NEWID2 = 'LCIN';                                          0388
*                                                                  0388
         MVC   NEWID2(4,@02),@CC01380                              0388
*        IF ADDR(OUTDD) ^= NULLPTR                                 0389
*          THEN                                                    0389
         L     @02,@PC00001+4                                      0389
         L     @02,FDTPTR+4(,@02)                                  0389
         LTR   @02,@02                                             0389
         BZ    @RF00389                                            0389
*            DO;                                                   0390
         ST    @02,@TF00001                                        0390
*              OTARGLST = ZEROAREA;                                0391
         MVC   OTARGLST(48),ZEROAREA                               0391
*              OPNPTR = ADDR(OTARGLST);                            0392
         LA    OPNPTR,OTARGLST                                     0392
*              OPNOPTOT = ON;                                      0393
         OI    OPNOPTOT(OPNPTR),B'01000000'                        0393
*              OPNMODAC = ON;                                      0394
         OI    OPNMODAC(OPNPTR),B'01000000'                        0394
*              OPNIOC = ADDR(OTIOCSPT);                            0395
         L     @01,COMSWKPT(,COMPTR)                               0395
         LA    @15,OTIOCSPT(,@01)                                  0395
         ST    @15,OPNIOC(,OPNPTR)                                 0395
*              OPNDDN = ADDR(OUTDDVAL);                            0396
*                                                                  0396
         L     @01,@TF00001                                        0396
         LA    @15,OUTDDVAL(,@01)                                  0396
         ST    @15,OPNDDN(,OPNPTR)                                 0396
*              CALL IDCIOOP0 (GDTTBL,                              0397
*                     OTARGLST);                                   0397
         L     @02,@PC00001                                        0397
         ST    @02,@AL00001                                        0397
         LA    @15,OTARGLST                                        0397
         ST    @15,@AL00001+4                                      0397
         MVI   @AL00001+4,X'80'                                    0397
         L     @15,GDTOPN(,@02)                                    0397
         LA    @01,@AL00001                                        0397
         BALR  @14,@15                                             0397
*              RESPECIFY RTNREG RSTD;                              0398
*              TESTRC = RTNREG;                                    0399
         LR    TESTRC,RTNREG                                       0399
*              RESPECIFY RTNREG UNRSTD;                            0400
*              IF TESTRC ^= 0                                      0401
*                THEN                                              0401
*                                                                  0401
         SLR   @02,@02                                             0401
         CR    TESTRC,@02                                          0401
         BE    @RF00401                                            0401
*                  /**************************************************/
*                  /*                                                */
*                  /* ERROR OPENING USER'S OUTPUT FILE.  USE THE     */
*                  /* DEFAULT AMS PRINT FILE FOR THE EOJ MESSAGES.   */
*                  /*                                                */
*                  /**************************************************/
*                                                                  0402
*                  DO;                                             0402
*                    OTIOCSPT = PRTFILE;                           0403
         L     @04,COMSWKPT(,COMPTR)                               0403
         ST    @02,OTIOCSPT(,@04)                                  0403
*                    NOMSGFLG = ON;                                0404
         L     @04,COMFLGPT(,COMPTR)                               0404
         OI    NOMSGFLG(@04),B'10000000'                           0404
*                    RETURN CODE (LASTCC12);                       0405
         LA    @15,12                                              0405
         L     @14,@SA00002                                        0405
         LM    @00,@12,@SA00002+8                                  0405
         BR    @14                                                 0405
*                  END;                                            0406
*            END;                                                  0407
*          ELSE                                                    0408
*            OTIOCSPT = PRTFILE;       /*USE AMS PRINT O/P FILE      */
         B     @RC00389                                            0408
@RF00389 L     @04,COMSWKPT(,COMPTR)                               0408
         SLR   @02,@02                                             0408
         ST    @02,OTIOCSPT(,@04)                                  0408
*                                                                  0409
*        /************************************************************/
*        /*                                                          */
*        /* COMPUTE CPL SIZE TO INCLUDE ADDRESSES OF ALL POSSIBLE    */
*        /* FPLS.                                                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0409
*        GPID = GPID00;                                            0409
@RC00389 MVC   GPID(4),@CC01245                                    0409
*        LCCPLLEN = LENGTH(CTGPL) + (4 * DIM(NMPTRS));             0410
*                                                                  0410
         L     @02,COMSWKPT(,COMPTR)                               0410
         LA    @15,164                                             0410
         STC   @15,LCCPLLEN(,@02)                                  0410
*        /************************************************************/
*        /*                                                          */
*        /* GET SPACE FOR THIS MAIN CPL WHICH WILL BE SETUP FOR      */
*        /* LOCATE REQUESTS BY TYPE, ENTRY, OR C.I. NUMBER, I.E.,    */
*        /* ALL GENERAL LISTINGS.                                    */
*        /* SINCE THE CPL IS NOT A READ-ONLY PARM LIST, GET          */
*        /* ADDITIONAL STORAGE FOR A SAVE AREA COPY OF THE           */
*        /* INITIALIZED VERSION.                                     */
*        /* A SECOND SAVEAREA IS ALSO NEEDED SHOULD THE CATALOG      */
*        /* LOCATE REQUEST BE ISSUED TWICE WHEN A LARGER WORKAREA    */
*        /* IS REQUIRED.                                             */
*        /* A THIRD SAVEAREA IS ALSO NEEDED SHOULD A CATALOG ERROR   */
*        /* OCCUR SINCE THE CALL TO UERROR REQUIRES THE CPL  @Y30SSMK*/
*        /* INITIALIZED WITH THE VSAM ERROR REASON CODE.     @Y30SSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0411
*        GPLEN = 4 * LCCPLLEN;                             /*@Y30SSMK*/
*                                                                  0411
         SLA   @15,2                                               0411
         ST    @15,GPLEN                                           0411
*        CALL IDCSAGP0 (GDTTBL,                                    0412
*                GPLEN,                                            0412
*                CTGPLPTR,                                         0412
*                GPID,                                             0412
*                SETZERO);                                         0412
         L     @15,@PC00001                                        0412
         ST    @15,@AL00001                                        0412
         LA    @14,GPLEN                                           0412
         ST    @14,@AL00001+4                                      0412
         LA    @02,CTGPLPTR(,@02)                                  0412
         ST    @02,@AL00001+8                                      0412
         LA    @02,GPID                                            0412
         ST    @02,@AL00001+12                                     0412
         LA    @02,SETZERO                                         0412
         ST    @02,@AL00001+16                                     0412
         MVI   @AL00001+16,X'80'                                   0412
         L     @15,GDTGPL(,@15)                                    0412
         LA    @01,@AL00001                                        0412
         BALR  @14,@15                                             0412
*        RESPECIFY RTNREG RSTD;                                    0413
*        TESTRC = RTNREG;                                          0414
         LR    TESTRC,RTNREG                                       0414
*        RESPECIFY RTNREG UNRSTD;                                  0415
*                                                                  0415
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0416
*        IF TESTRC ^= 0                                            0416
*          THEN                                                    0416
         LTR   TESTRC,TESTRC                                       0416
         BZ    @RF00416                                            0416
*            DO;                                                   0417
*              ERRARGPT->DARGSMOD = UV0ID;                         0418
         L     @04,COMSWKPT(,COMPTR)                               0418
         L     @04,ERRARGPT(,@04)                                  0418
         MVC   DARGSMOD(3,@04),@CC01149                            0418
*              ERRARGPT->DARGSENT = UVMSG04;                       0419
         MVI   DARGSENT(@04),X'04'                                 0419
*              RETURN CODE (LASTCC12);                             0420
         LA    @15,12                                              0420
         L     @14,@SA00002                                        0420
         LM    @00,@12,@SA00002+8                                  0420
         BR    @14                                                 0420
*            END;                                                  0421
*                                                                  0421
*        /************************************************************/
*        /*                                                          */
*        /* SAVE POINTERS TO THE MAIN CPL AND ITS SAVEAREA COPIES.   */
*        /* THEN INITIALIZE THE MAIN CPL.                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0422
*        TYPCPLPT = CTGPLPTR;                                      0422
@RF00416 L     @04,COMSWKPT(,COMPTR)                               0422
         L     @02,CTGPLPTR(,@04)                                  0422
         ST    @02,TYPCPLPT(,@04)                                  0422
*        SAVCPLPT = CTGPLPTR + LCCPLLEN;                           0423
         SLR   @15,@15                                             0423
         IC    @15,LCCPLLEN(,@04)                                  0423
         LR    @14,@02                                             0423
         ALR   @14,@15                                             0423
         ST    @14,SAVCPLPT(,@04)                                  0423
*        OLDCPLPT = SAVCPLPT + LCCPLLEN;                           0424
         ALR   @14,@15                                             0424
         ST    @14,OLDCPLPT(,@04)                                  0424
*        ERMCPLPT = OLDCPLPT + LCCPLLEN;                   /*@Y30SSMK*/
         ALR   @14,@15                                             0425
         ST    @14,ERMCPLPT(,@04)                                  0425
*        CTGAM0 = ON;                  /*AM/0 REQUEST                */
         OI    CTGAM0(@02),B'00000001'                             0426
*        CTGFUNC = CTGCMS;             /*CAT MGMT SERVICES REQUEST   */
         NI    CTGFUNC(@02),B'10011111'                            0427
         OI    CTGFUNC(@02),B'10000000'                            0427
*        CTGOPTNS = CTGLTCAT;          /*AMS LISTCATALOG REQUEST     */
         NI    CTGOPTNS(@02),B'00100111'                           0428
         OI    CTGOPTNS(@02),B'00100000'                           0428
*        /************************************************************/
*        /*                                                          */
*        /*   IF THE CATALOG IS NOT SPECIFIED, BLANK THE CATALOG NAME*/
*        /*   SAVEAREA AND SETUP THE REQUEST TO CAT/DADSM TO RETRIEVE*/
*        /*   CATNAME.                                               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0429
*        IF ADDR(CAT) = NULLPTR                                    0429
*          THEN                                                    0429
         L     @04,@PC00001+4                                      0429
         L     @04,FDTPTR(,@04)                                    0429
         LTR   @04,@04                                             0429
         BNZ   @RF00429                                            0429
*            DO;                                                   0430
*              CTGCNAME = ON;                                      0431
         OI    CTGCNAME(@02),B'00000010'                           0431
*              CATNAME = BLANK;                                    0432
         L     @04,COMVARPT(,COMPTR)                               0432
         MVI   CATNAME+1(@04),C' '                                 0432
         MVC   CATNAME+2(42,@04),CATNAME+1(@04)                    0432
         MVI   CATNAME(@04),C' '                                   0432
*              CTGCAT = ADDR(CATNAME);                             0433
         LA    @04,CATNAME(,@04)                                   0433
         ST    @04,CTGCAT(,@02)                                    0433
*              CACBFLG = ON;           /*LISTC NEEDS CAT ACB PTR     */
         L     @04,COMFLGPT(,COMPTR)                               0434
         OI    CACBFLG(@04),B'10000000'                            0434
*            END;                                                  0435
*                                                                  0435
*        /************************************************************/
*        /*                                                          */
*        /*IF THE CATALOG TO BE LISTED IS SPECIFIED WITH ITS CORRE-  */
*        /*SPONDING OPTIONAL PASSWORD, SET THE CATALOG NAME IN THE   */
*        /*CPL.                                              @Y30SSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0436
*          ELSE                                                    0436
*CMDCATNM:   DO;                                                   0436
         B     @RC00429                                            0436
@RF00429 DS    0H                                                  0436
CMDCATNM DS    0H                                                  0437
*              CATNAME = CATNMVAL;                         /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0437
         L     @02,@PC00001+4                                      0437
         L     @02,FDTPTR+40(,@02)                                 0437
         MVC   CATNAME(44,@04),CATNMVAL(@02)                       0437
*              IF CATNMPLN > 0                                     0438
*                THEN                                              0438
         CLI   CATNMPLN(@02),0                                     0438
         BNH   @RF00438                                            0438
*                  CTGPSWD = ADDR(CATNMPAS);                       0439
         L     @04,COMSWKPT(,COMPTR)                               0439
         L     @04,CTGPLPTR(,@04)                                  0439
         LA    @02,CATNMPAS(,@02)                                  0439
         ST    @02,CTGPSWD(,@04)                                   0439
*              CTGCNAME = ON;                              /*@Y30SSMK*/
@RF00438 L     @04,COMSWKPT(,COMPTR)                               0440
         L     @04,CTGPLPTR(,@04)                                  0440
         OI    CTGCNAME(@04),B'00000010'                           0440
*              CTGCAT = ADDR(CATNAME);                     /*@Y30SSMK*/
         L     @02,COMVARPT(,COMPTR)                               0441
         LA    @02,CATNAME(,@02)                                   0441
         ST    @02,CTGCAT(,@04)                                    0441
*              CACBFLG = ON;           /*LISTC NEEDS CAT ACB PTR     */
         L     @04,COMFLGPT(,COMPTR)                               0442
         OI    CACBFLG(@04),B'10000000'                            0442
*            END CMDCATNM;                                         0443
*        /************************************************************/
*        /*                                                          */
*        /* DETERMINE WHICH SUBSET LISTING IS TO BE PRODUCED AND     */
*        /* CALCULATE THE NUMBER OF FPLS REQUIRED FOR THAT SUBSET.   */
*        /* NOTE - 'NAME' OR 'HISTORY' OR 'ALL' SUBSET       @Y30LSMK*/
*        /*        APPLIES TO ALL CATALOG TYPES.             @Y30LSMK*/
*        /*        'VOL' SUBSET APPLIES TO ALL TYPES, HOWEVER,       */
*        /*        CLUSTER,AIX OR PATH MAY ONLY BE           @Y30SSMK*/
*        /*        SPECIFIED WITH TYPES DATA AND INDEX.      @Y30SSMK*/
*        /*        'ALLOC' SUBSET APPLIES ONLY TO TYPES DATA OR      */
*        /*        INDEX, HOWEVER, CLUSTER,AIX OR PATH       @Y30SSMK*/
*        /*        MAY ONLY BE SPECIFIED IN CONJUNCTION      @Y30SSMK*/
*        /*        WITH TYPES DATA AND INDEX.                @Y30SSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0444
*        IF ADDR(VOL) > NULLPTR                                    0444
*          THEN                        /*VOL SERIAL# & DEVICE SUBSET */
@RC00429 L     @04,@PC00001+4                                      0444
         L     @04,FDTPTR+60(,@04)                                 0444
         LTR   @04,@04                                             0444
         BNP   @RF00444                                            0444
*            FPLCNT = DIM(VOLFLDS);                                0445
         L     @04,COMVARPT(,COMPTR)                               0445
         MVC   FPLCNT(2,@04),@CH00600                              0445
*          ELSE                                                    0446
*            IF ADDR(ALLOC) > NULLPTR                              0446
*              THEN                    /*D/I VOL ALLOCATION SUBSET   */
         B     @RC00444                                            0446
@RF00444 L     @04,@PC00001+4                                      0446
         L     @04,FDTPTR+64(,@04)                                 0446
         LTR   @04,@04                                             0446
         BNP   @RF00446                                            0446
*                FPLCNT = DIM(SPACFLDS);                           0447
         L     @04,COMVARPT(,COMPTR)                               0447
         MVC   FPLCNT(2,@04),@CH00490                              0447
*              ELSE                                                0448
*                IF ADDR(FALL) > NULLPTR                           0448
*                  THEN               /*ALL DATA SUBSET LISTING     */
         B     @RC00446                                            0448
@RF00446 L     @04,@PC00001+4                                      0448
         L     @04,FDTPTR+56(,@04)                                 0448
         LTR   @04,@04                                             0448
         BNP   @RF00448                                            0448
*                    FPLCNT = DIM(ALLFLDS);                        0449
         L     @04,COMVARPT(,COMPTR)                               0449
         MVC   FPLCNT(2,@04),@CH01139                              0449
*                  ELSE                /*NAMES ONLY SUBSET LISTING   */
*                    IF ADDR(HIST) > NULLPTR                       0450
*                      THEN            /*HISTORY DATA SUBSET LISTING */
         B     @RC00448                                            0450
@RF00448 L     @04,@PC00001+4                                      0450
         L     @04,FDTPTR+104(,@04)                                0450
         LTR   @04,@04                                             0450
         BNP   @RF00450                                            0450
*                        FPLCNT = DIM(HISTFLDS);           /*@Y30LSMK*/
         L     @04,COMVARPT(,COMPTR)                               0451
         MVC   FPLCNT(2,@04),@CH00646                              0451
*                      ELSE            /*NAMES ONLY SUBSET LISTING   */
*                        FPLCNT = DIM(NMFLDS);             /*@Y30LSMK*/
         B     @RC00450                                            0452
@RF00450 L     @04,COMVARPT(,COMPTR)                               0452
         MVC   FPLCNT(2,@04),@CH00293                              0452
*        /************************************************************/
*        /*                                                          */
*        /* BUILD STRING OF TYPE CODES IN ORDER TO GENERATE LISTING  */
*        /* FOR ALL CATALOG TYPES OR A SPECIFIED SUBSET OF MULTIPLE  */
*        /* TYPES.  THE SPECIAL FPL - MULTITYP WILL POINT TO A       */
*        /* 2-BYTE COUNT OF THE TYPE CODES PLUS THIS STRING.         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0453
*        TYPECNT = 0;                                              0453
@RC00450 DS    0H                                                  0453
@RC00448 DS    0H                                                  0453
@RC00446 DS    0H                                                  0453
@RC00444 SLR   @04,@04                                             0453
         L     @02,COMVARPT(,COMPTR)                               0453
         STH   @04,TYPECNT(,@02)                                   0453
*        CMDERRSW = OFF;                                           0454
         L     @15,COMFLGPT(,COMPTR)                               0454
         NI    CMDERRSW(@15),B'01111111'                           0454
*        IF ADDR(DATUM) ^= NULLPTR                                 0455
*          THEN                                                    0455
         L     @14,@PC00001+4                                      0455
         C     @04,FDTPTR+20(,@14)                                 0455
         BE    @RF00455                                            0455
*            DO;                                                   0456
*              TYPECNT = TYPECNT + 1;                              0457
         AL    @04,@CF00045                                        0457
         STH   @04,TYPECNT(,@02)                                   0457
*              TYPELIST(TYPECNT) = CTGTDATA;                       0458
         ALR   @02,@04                                             0458
         MVI   TYPELIST-1(@02),C'D'                                0458
*              DTYPFLG = ON;                               /*@YL026UE*/
         OI    DTYPFLG(@15),B'10000000'                            0459
*            END;                                                  0460
*        IF ADDR(INDEX) ^= NULLPTR                                 0461
*          THEN                                                    0461
@RF00455 L     @04,@PC00001+4                                      0461
         L     @04,FDTPTR+24(,@04)                                 0461
         LTR   @04,@04                                             0461
         BZ    @RF00461                                            0461
*            DO;                                                   0462
*              TYPECNT = TYPECNT + 1;                              0463
         L     @04,COMVARPT(,COMPTR)                               0463
         LA    @02,1                                               0463
         AH    @02,TYPECNT(,@04)                                   0463
         STH   @02,TYPECNT(,@04)                                   0463
*              TYPELIST(TYPECNT) = CTGTINDX;                       0464
         ALR   @04,@02                                             0464
         MVI   TYPELIST-1(@04),C'I'                                0464
*              ITYPFLG = ON;                               /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0465
         OI    ITYPFLG(@04),B'10000000'                            0465
*            END;                                                  0466
*        IF ADDR(CLUST) ^= NULLPTR                                 0467
*          THEN                                                    0467
*                                                                  0467
@RF00461 SLR   @04,@04                                             0467
         L     @02,@PC00001+4                                      0467
         C     @04,FDTPTR+16(,@02)                                 0467
         BE    @RF00467                                            0467
*            /********************************************************/
*            /*                                                      */
*            /* BYPASS AND FLAG ANY CONFLICTING TYPE SPECIFICATION   */
*            /* AS A USER ERROR.                                     */
*            /*                                                      */
*            /********************************************************/
*                                                                  0468
*            IF (ADDR(ALLOC) > NULLPTR  ×  ADDR(VOL) > NULLPTR)    0468
*              & ADDR(DATUM) = NULLPTR                             0468
*              & ADDR(INDEX) = NULLPTR                             0468
*              THEN                                                0468
         C     @04,FDTPTR+64(,@02)                                 0468
         BL    @GL00008                                            0468
         C     @04,FDTPTR+60(,@02)                                 0468
         BNL   @RF00468                                            0468
@GL00008 SLR   @04,@04                                             0468
         L     @02,@PC00001+4                                      0468
         C     @04,FDTPTR+20(,@02)                                 0468
         BNE   @RF00468                                            0468
         C     @04,FDTPTR+24(,@02)                                 0468
         BNE   @RF00468                                            0468
*                CMDERRSW = ON;                            /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0469
         OI    CMDERRSW(@04),B'10000000'                           0469
*              ELSE                                                0470
*                DO;                                       /*@YL026UE*/
         B     @RC00468                                            0470
@RF00468 DS    0H                                                  0471
*                  TYPECNT = TYPECNT + 1;                  /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0471
         LA    @02,1                                               0471
         AH    @02,TYPECNT(,@04)                                   0471
         STH   @02,TYPECNT(,@04)                                   0471
*                  TYPELIST(TYPECNT) = CTGTCL;             /*@YL026UE*/
         ALR   @04,@02                                             0472
         MVI   TYPELIST-1(@04),C'C'                                0472
*                  CTYPFLG = ON;                           /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0473
         OI    CTYPFLG(@04),B'10000000'                            0473
*                END;                                      /*@YL026UE*/
*        IF ADDR(PGSPC) ^= NULLPTR                                 0475
*          THEN                                                    0475
@RC00468 DS    0H                                                  0475
@RF00467 SLR   @04,@04                                             0475
         L     @02,@PC00001+4                                      0475
         C     @04,FDTPTR+76(,@02)                                 0475
         BE    @RF00475                                            0475
*            DO;                                           /*@YL026UE*/
*              IF (ADDR(ALLOC) > NULLPTR × ADDR(VOL) > NULLPTR)    0477
*                 & ADDR(DATUM) = NULLPTR                          0477
*                THEN                                              0477
         C     @04,FDTPTR+64(,@02)                                 0477
         BL    @GL00010                                            0477
         C     @04,FDTPTR+60(,@02)                                 0477
         BNL   @RF00477                                            0477
@GL00010 L     @04,@PC00001+4                                      0477
         L     @04,FDTPTR+20(,@04)                                 0477
         LTR   @04,@04                                             0477
         BNZ   @RF00477                                            0477
*                  CMDERRSW = ON;                          /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0478
         OI    CMDERRSW(@04),B'10000000'                           0478
*                ELSE                                              0479
*                  DO;                                     /*@YL026UE*/
         B     @RC00477                                            0479
@RF00477 DS    0H                                                  0480
*                    TYPECNT = TYPECNT + 1;                /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0480
         LA    @02,1                                               0480
         AH    @02,TYPECNT(,@04)                                   0480
         STH   @02,TYPECNT(,@04)                                   0480
*                    TYPELIST(TYPECNT) = CTGTPGSP;         /*@YL026UE*/
         ALR   @04,@02                                             0481
         MVI   TYPELIST-1(@04),C'P'                                0481
*                    PTYPFLG = ON;                         /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0482
         OI    PTYPFLG(@04),B'10000000'                            0482
*                  END;                                    /*@YL026UE*/
*            END;                                          /*@YL026UE*/
@RC00477 DS    0H                                                  0485
*        IF ADDR(AIX) ^= NULLPTR                                   0485
*          THEN                                                    0485
@RF00475 SLR   @04,@04                                             0485
         L     @02,@PC00001+4                                      0485
         C     @04,FDTPTR+84(,@02)                                 0485
         BE    @RF00485                                            0485
*            IF (ADDR(ALLOC) > NULLPTR  ×  ADDR(VOL) > NULLPTR)    0486
*              & ADDR(DATUM) = NULLPTR                             0486
*              & ADDR(INDEX) = NULLPTR                             0486
*              THEN                                                0486
         C     @04,FDTPTR+64(,@02)                                 0486
         BL    @GL00013                                            0486
         C     @04,FDTPTR+60(,@02)                                 0486
         BNL   @RF00486                                            0486
@GL00013 SLR   @04,@04                                             0486
         L     @02,@PC00001+4                                      0486
         C     @04,FDTPTR+20(,@02)                                 0486
         BNE   @RF00486                                            0486
         C     @04,FDTPTR+24(,@02)                                 0486
         BNE   @RF00486                                            0486
*                CMDERRSW = ON;                            /*@Y30SSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0487
         OI    CMDERRSW(@04),B'10000000'                           0487
*              ELSE                                                0488
*                DO;                                       /*@Y30SSMK*/
         B     @RC00486                                            0488
@RF00486 DS    0H                                                  0489
*                  TYPECNT = TYPECNT + 1;                  /*@Y30SSMK*/
         L     @04,COMVARPT(,COMPTR)                               0489
         LA    @02,1                                               0489
         AH    @02,TYPECNT(,@04)                                   0489
         STH   @02,TYPECNT(,@04)                                   0489
*                  TYPELIST(TYPECNT) = CTGTAIX;            /*@Y30SSMK*/
         ALR   @04,@02                                             0490
         MVI   TYPELIST-1(@04),C'G'                                0490
*                  GTYPFLG = ON;                           /*@Y30SSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0491
         OI    GTYPFLG(@04),B'10000000'                            0491
*                END;                                      /*@Y30SSMK*/
*        IF ADDR(PATH) ^= NULLPTR                                  0493
*          THEN                                                    0493
@RC00486 DS    0H                                                  0493
@RF00485 SLR   @04,@04                                             0493
         L     @02,@PC00001+4                                      0493
         C     @04,FDTPTR+88(,@02)                                 0493
         BE    @RF00493                                            0493
*            IF (ADDR(ALLOC) > NULLPTR  ×  ADDR(VOL) > NULLPTR)    0494
*              & ADDR(DATUM) = NULLPTR                             0494
*              & ADDR(INDEX) = NULLPTR                             0494
*              THEN                                                0494
         C     @04,FDTPTR+64(,@02)                                 0494
         BL    @GL00016                                            0494
         C     @04,FDTPTR+60(,@02)                                 0494
         BNL   @RF00494                                            0494
@GL00016 SLR   @04,@04                                             0494
         L     @02,@PC00001+4                                      0494
         C     @04,FDTPTR+20(,@02)                                 0494
         BNE   @RF00494                                            0494
         C     @04,FDTPTR+24(,@02)                                 0494
         BNE   @RF00494                                            0494
*                CMDERRSW = ON;                            /*@Y30SSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0495
         OI    CMDERRSW(@04),B'10000000'                           0495
*              ELSE                                                0496
*                DO;                                       /*@Y30SSMK*/
         B     @RC00494                                            0496
@RF00494 DS    0H                                                  0497
*                  TYPECNT = TYPECNT + 1;                  /*@Y30SSMK*/
         L     @04,COMVARPT(,COMPTR)                               0497
         LA    @02,1                                               0497
         AH    @02,TYPECNT(,@04)                                   0497
         STH   @02,TYPECNT(,@04)                                   0497
*                  TYPELIST(TYPECNT) = CTGTPTH;            /*@Y30SSMK*/
         ALR   @04,@02                                             0498
         MVI   TYPELIST-1(@04),C'R'                                0498
*                  RTYPFLG = ON;                           /*@Y30SSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0499
         OI    RTYPFLG(@04),B'10000000'                            0499
*                END;                                      /*@Y30SSMK*/
*        IF ADDR(SPACE) ^= NULLPTR                                 0501
*          THEN                                                    0501
@RC00494 DS    0H                                                  0501
@RF00493 SLR   @04,@04                                             0501
         L     @02,@PC00001+4                                      0501
         C     @04,FDTPTR+28(,@02)                                 0501
         BE    @RF00501                                            0501
*            IF ADDR(ALLOC) > NULLPTR                              0502
*              THEN                                                0502
         C     @04,FDTPTR+64(,@02)                                 0502
         BNL   @RF00502                                            0502
*                CMDERRSW = ON;                                    0503
         L     @04,COMFLGPT(,COMPTR)                               0503
         OI    CMDERRSW(@04),B'10000000'                           0503
*              ELSE                                                0504
*                DO;                                               0504
         B     @RC00502                                            0504
@RF00502 DS    0H                                                  0505
*                  TYPECNT = TYPECNT + 1;                          0505
         L     @04,COMVARPT(,COMPTR)                               0505
         LA    @02,1                                               0505
         AH    @02,TYPECNT(,@04)                                   0505
         STH   @02,TYPECNT(,@04)                                   0505
*                  TYPELIST(TYPECNT) = CTGTVOL;                    0506
         ALR   @04,@02                                             0506
         MVI   TYPELIST-1(@04),C'V'                                0506
*                  VTYPFLG = ON;                           /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0507
         OI    VTYPFLG(@04),B'10000000'                            0507
*                END;                                              0508
*        IF ADDR(ALIEN) ^= NULLPTR                                 0509
*          THEN                                                    0509
@RC00502 DS    0H                                                  0509
@RF00501 SLR   @04,@04                                             0509
         L     @02,@PC00001+4                                      0509
         C     @04,FDTPTR+32(,@02)                                 0509
         BE    @RF00509                                            0509
*            IF ADDR(ALLOC) > NULLPTR                              0510
*              THEN                                                0510
         C     @04,FDTPTR+64(,@02)                                 0510
         BNL   @RF00510                                            0510
*                CMDERRSW = ON;                                    0511
         L     @04,COMFLGPT(,COMPTR)                               0511
         OI    CMDERRSW(@04),B'10000000'                           0511
*              ELSE                                                0512
*                DO;                                               0512
         B     @RC00510                                            0512
@RF00510 DS    0H                                                  0513
*                  TYPECNT = TYPECNT + 1;                          0513
         L     @04,COMVARPT(,COMPTR)                               0513
         LA    @02,1                                               0513
         AH    @02,TYPECNT(,@04)                                   0513
         STH   @02,TYPECNT(,@04)                                   0513
*                  TYPELIST(TYPECNT) = CTGTALIN;                   0514
         ALR   @04,@02                                             0514
         MVI   TYPELIST-1(@04),C'A'                                0514
*                  ATYPFLG = ON;                           /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0515
         OI    ATYPFLG(@04),B'10000000'                            0515
*                END;                                              0516
*        IF ADDR(GDG) ^= NULLPTR                                   0517
*          THEN                                                    0517
@RC00510 DS    0H                                                  0517
@RF00509 SLR   @04,@04                                             0517
         L     @02,@PC00001+4                                      0517
         C     @04,FDTPTR+72(,@02)                                 0517
         BE    @RF00517                                            0517
*            DO;                                           /*@YL026UE*/
*              IF (ADDR(VOL) > NULLPTR & ADDR(ALIEN) = NULLPTR)    0519
*                × ADDR(ALLOC) > NULLPTR                           0519
*                THEN                                              0519
         C     @04,FDTPTR+60(,@02)                                 0519
         BNL   @GL00018                                            0519
         C     @04,FDTPTR+32(,@02)                                 0519
         BE    @RT00519                                            0519
@GL00018 L     @04,@PC00001+4                                      0519
         L     @04,FDTPTR+64(,@04)                                 0519
         LTR   @04,@04                                             0519
         BNP   @RF00519                                            0519
@RT00519 DS    0H                                                  0520
*                  CMDERRSW = ON;                          /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0520
         OI    CMDERRSW(@04),B'10000000'                           0520
*                ELSE                                              0521
*                  DO;                                     /*@YL026UE*/
         B     @RC00519                                            0521
@RF00519 DS    0H                                                  0522
*                    TYPECNT = TYPECNT + 1;                /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0522
         LA    @02,1                                               0522
         AH    @02,TYPECNT(,@04)                                   0522
         STH   @02,TYPECNT(,@04)                                   0522
*                    TYPELIST(TYPECNT) = CTGTGBS;          /*@YL026UE*/
         ALR   @04,@02                                             0523
         MVI   TYPELIST-1(@04),C'B'                                0523
*                    BTYPFLG = ON;                         /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0524
         OI    BTYPFLG(@04),B'10000000'                            0524
*                  END;                                    /*@YL026UE*/
*            END;                                          /*@YL026UE*/
@RC00519 DS    0H                                                  0527
*        IF ADDR(ALIAS) ^= NULLPTR                                 0527
*          THEN                                                    0527
@RF00517 SLR   @04,@04                                             0527
         L     @02,@PC00001+4                                      0527
         C     @04,FDTPTR+68(,@02)                                 0527
         BE    @RF00527                                            0527
*            DO;                                           /*@YL026UE*/
*              IF ADDR(ALLOC) > NULLPTR × ADDR(VOL) > NULLPTR      0529
*                THEN                                              0529
         C     @04,FDTPTR+64(,@02)                                 0529
         BL    @RT00529                                            0529
         C     @04,FDTPTR+60(,@02)                                 0529
         BNL   @RF00529                                            0529
@RT00529 DS    0H                                                  0530
*                  CMDERRSW = ON;                          /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0530
         OI    CMDERRSW(@04),B'10000000'                           0530
*                ELSE                                              0531
*                  DO;                                     /*@YL026UE*/
         B     @RC00529                                            0531
@RF00529 DS    0H                                                  0532
*                    TYPECNT = TYPECNT + 1;                /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0532
         LA    @02,1                                               0532
         AH    @02,TYPECNT(,@04)                                   0532
         STH   @02,TYPECNT(,@04)                                   0532
*                    TYPELIST(TYPECNT) = CTGTANM;          /*@YL026UE*/
         ALR   @04,@02                                             0533
         MVI   TYPELIST-1(@04),C'X'                                0533
*                  END;                                    /*@YL026UE*/
*            END;                                          /*@YL026UE*/
@RC00529 DS    0H                                                  0536
*        IF ADDR(UCAT) ^= NULLPTR                                  0536
*          THEN                                                    0536
@RF00527 SLR   @04,@04                                             0536
         L     @02,@PC00001+4                                      0536
         C     @04,FDTPTR+36(,@02)                                 0536
         BE    @RF00536                                            0536
*            IF ADDR(ALLOC) > NULLPTR                              0537
*              THEN                                                0537
         C     @04,FDTPTR+64(,@02)                                 0537
         BNL   @RF00537                                            0537
*                CMDERRSW = ON;                                    0538
         L     @04,COMFLGPT(,COMPTR)                               0538
         OI    CMDERRSW(@04),B'10000000'                           0538
*              ELSE                                                0539
*                DO;                                               0539
         B     @RC00537                                            0539
@RF00537 DS    0H                                                  0540
*                  TYPECNT = TYPECNT + 1;                          0540
         L     @04,COMVARPT(,COMPTR)                               0540
         LA    @02,1                                               0540
         AH    @02,TYPECNT(,@04)                                   0540
         STH   @02,TYPECNT(,@04)                                   0540
*                  TYPELIST(TYPECNT) = CTGTUCAT;                   0541
         ALR   @04,@02                                             0541
         MVI   TYPELIST-1(@04),C'U'                                0541
*                END;                                              0542
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF NOTUSABLE IS REQUESTED AND DATE AND INDEX     @Y30SSMK*/
*        /* IS NOT REQUESTED, THEN ADD THE TYPE CODES TO     @Y30SSMK*/
*        /* THE STRING FOR BOTH DATA AND INDEX.              @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0543
*        IF ADDR(NUSE) > NULLPTR                                   0543
*          THEN                                                    0543
@RC00537 DS    0H                                                  0543
@RF00536 L     @04,@PC00001+4                                      0543
         L     @04,FDTPTR+92(,@04)                                 0543
         LTR   @04,@04                                             0543
         BNP   @RF00543                                            0543
*            DO;                                           /*@Y30SSMK*/
*              NUSEFLG = ON;                               /*@Y30SSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0545
         OI    NUSEFLG(@04),B'10000000'                            0545
*              IF DTYPFLG = OFF  &  ITYPFLG = OFF                  0546
*                THEN                                              0546
         TM    DTYPFLG(@04),B'10000000'                            0546
         BNZ   @RF00546                                            0546
         TM    ITYPFLG(@04),B'10000000'                            0546
         BNZ   @RF00546                                            0546
*                  DO;                                     /*@Y30SSMK*/
*                    TYPECNT = TYPECNT + 1;                /*@Y30SSMK*/
         L     @04,COMVARPT(,COMPTR)                               0548
         LA    @02,1                                               0548
         LH    @15,TYPECNT(,@04)                                   0548
         ALR   @15,@02                                             0548
         STH   @15,TYPECNT(,@04)                                   0548
*                    TYPELIST(TYPECNT) = CTGTDATA;         /*@Y30SSMK*/
         ST    @15,@TF00001                                        0549
         ALR   @15,@04                                             0549
         MVI   TYPELIST-1(@15),C'D'                                0549
*                    TYPECNT = TYPECNT + 1;                /*@Y30SSMK*/
         AL    @02,@TF00001                                        0550
         STH   @02,TYPECNT(,@04)                                   0550
*                    TYPELIST(TYPECNT) = CTGTINDX;         /*@Y30SSMK*/
         ALR   @04,@02                                             0551
         MVI   TYPELIST-1(@04),C'I'                                0551
*                  END;                                    /*@Y30SSMK*/
*            END;                                          /*@Y30SSMK*/
*          ELSE                                                    0554
*            NUSEFLG = OFF;                                /*@Y30SSMK*/
         B     @RC00543                                            0554
@RF00543 L     @04,COMFLGPT(,COMPTR)                               0554
         NI    NUSEFLG(@04),B'01111111'                            0554
*        /************************************************************/
*        /*                                                          */
*        /* OUTPUT A MESSAGE FOR AN ALLOC OR VOL REQUEST FLAGGED AS  */
*        /* CONFLICTING WITH THE TYPES SPECIFICATION.                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0555
*        IF (ADDR(ALLOC) > NULLPTR  ×  ADDR(VOL) > NULLPTR)        0555
*          & CMDERRSW = ON                                         0555
*          THEN                                                    0555
@RC00543 SLR   @04,@04                                             0555
         L     @02,@PC00001+4                                      0555
         C     @04,FDTPTR+64(,@02)                                 0555
         BL    @GL00022                                            0555
         C     @04,FDTPTR+60(,@02)                                 0555
         BNL   @RF00555                                            0555
@GL00022 L     @04,COMFLGPT(,COMPTR)                               0555
         TM    CMDERRSW(@04),B'10000000'                           0555
         BNO   @RF00555                                            0555
*            DO;                                                   0556
*              SAVRC = MAX (SAVRC,LASTCC08);               /*@ZA05939*/
         L     @04,COMVARPT(,COMPTR)                               0557
         LA    @02,8                                               0557
         LH    @15,SAVRC(,@04)                                     0557
         CR    @15,@02                                             0557
         BNL   *+6
         LR    @15,@02                                             0557
         STH   @15,SAVRC(,@04)                                     0557
*              ERRARGPT->DARGSMOD = LC1ID;                         0558
         L     @01,COMSWKPT(,COMPTR)                               0558
         L     @15,ERRARGPT(,@01)                                  0558
         MVC   DARGSMOD(3,@15),@CC01155                            0558
*              ERRARGPT->DARGSENT = LCMSG04;                       0559
*                                                                  0559
         MVI   DARGSENT(@15),X'04'                                 0559
*              /******************************************************/
*              /*                                                    */
*              /* TERMINATE, IF NO PART OF THE USER'S REQUEST CAN BE */
*              /* PROCESSED.                                         */
*              /*                                                    */
*              /******************************************************/
*                                                                  0560
*              IF TYPECNT = 0                                      0560
*                THEN                                              0560
         LH    @04,TYPECNT(,@04)                                   0560
         LTR   @04,@04                                             0560
         BNZ   @RF00560                                            0560
*                  RETURN CODE (LASTCC08);                         0561
         LR    @15,@02                                             0561
         L     @14,@SA00002                                        0561
         LM    @00,@12,@SA00002+8                                  0561
         BR    @14                                                 0561
*              CALL ERRPROC;                                       0562
@RF00560 L     @15,@CV00872                                        0562
         BALR  @14,@15                                             0562
*              CMDERRSW = OFF;                                     0563
         L     @04,COMFLGPT(,COMPTR)                               0563
         NI    CMDERRSW(@04),B'01111111'                           0563
*            END;                                                  0564
*                                                                  0564
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* OUTPUT A WARNING MESSAGE IF THE EXPIRATION DATE  @Y30LSMK*/
*        /* PARAMETER IS SPECIFIED WITH ENTRIES THAT EITHER  @Y30LSMK*/
*        /* DO NOT CONTAIN THE EXPIRATION DATE FIELD, OR     @Y30LSMK*/
*        /* DO CONTAIN THE EXPIRATION DATE FIELD, BUT IS     @Y30LSMK*/
*        /* NEVER INITIALIZED.                               @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0565
*        IF TYPECNT ^= 0  &  ADDR(EXPIR) > NULLPTR                 0565
*          THEN                                                    0565
@RF00555 SLR   @04,@04                                             0565
         L     @02,COMVARPT(,COMPTR)                               0565
         CH    @04,TYPECNT(,@02)                                   0565
         BE    @RF00565                                            0565
         L     @15,@PC00001+4                                      0565
         C     @04,FDTPTR+100(,@15)                                0565
         BNL   @RF00565                                            0565
*            IF CTYPFLG ^= ON  &  ATYPFLG ^= ON  &  BTYPFLG ^= ON  &
*              PTYPFLG ^= ON  &  GTYPFLG ^= ON  &  RTYPFLG ^= ON   0566
*              THEN                                                0566
         L     @04,COMFLGPT(,COMPTR)                               0566
         TM    CTYPFLG(@04),B'10000000'                            0566
         BO    @RF00566                                            0566
         TM    ATYPFLG(@04),B'10000000'                            0566
         BO    @RF00566                                            0566
         TM    BTYPFLG(@04),B'10000000'                            0566
         BO    @RF00566                                            0566
         TM    PTYPFLG(@04),B'10000000'                            0566
         BO    @RF00566                                            0566
         TM    GTYPFLG(@04),B'10000000'                            0566
         BO    @RF00566                                            0566
         TM    RTYPFLG(@04),B'10000000'                            0566
         BO    @RF00566                                            0566
*                DO;                                       /*@Y30LSMK*/
*                  SAVRC = MAX(SAVRC,LASTCC04);            /*@ZA05939*/
         LH    @04,SAVRC(,@02)                                     0568
         LA    @15,4                                               0568
         CR    @04,@15                                             0568
         BNL   *+6
         LR    @04,@15                                             0568
         STH   @04,SAVRC(,@02)                                     0568
*                  ERRARGPT->DARGSMOD = LC1ID;             /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0569
         L     @04,ERRARGPT(,@04)                                  0569
         MVC   DARGSMOD(3,@04),@CC01155                            0569
*                  ERRARGPT->DARGSENT = LCMSG12;           /*@Y30LSMK*/
         MVI   DARGSENT(@04),X'0C'                                 0570
*                  CALL ERRPROC;                           /*@Y30LSMK*/
         L     @15,@CV00872                                        0571
         BALR  @14,@15                                             0571
*                END;                                      /*@Y30LSMK*/
*        /************************************************************/
*        /*                                                          */
*        /*   A NON-QUALIFIED LISTING, I.E. NO ENTRY LIST OR TYPE    */
*        /*   REQUEST, OF THE CATALOG IS GENERATED VIA THE           */
*        /*   MULTITYP PROCESSING FEATURE OF THE LISTC GETNEXT MODE  */
*        /*   RATHER THAN THE PURE LISTCAT GETNEXT MODE.  THIS       */
*        /*   ELIMINATES UNNECESSARY LOCATES FOR DATA,       @Y30SSMK*/
*        /*   INDEX AND PATH ENTRIES SINCE THESE ASSOCIATED  @Y30SSMK*/
*        /*   DATASETS ARE LISTED UNDER A CLUSTER AND AIX    @Y30SSMK*/
*        /*   NODE AND THUS ARE LOCATED VIA THEIR CONTROL    @Y30SSMK*/
*        /*   INTERVAL NUMBERS.                              @Y30SSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0573
*        IF TYPECNT = 0  &  ENLVUDFG = OFF                         0573
*          THEN                                                    0573
@RF00566 DS    0H                                                  0573
@RF00565 SLR   @04,@04                                             0573
         L     @02,COMVARPT(,COMPTR)                               0573
         CH    @04,TYPECNT(,@02)                                   0573
         BNE   @RF00573                                            0573
         L     @15,COMFLGPT(,COMPTR)                               0573
         TM    ENLVUDFG(@15),B'10000000'                           0573
         BNZ   @RF00573                                            0573
*            IF ADDR(ALLOC) > NULLPTR                              0574
*              THEN                                                0574
*                                                                  0574
         L     @14,@PC00001+4                                      0574
         C     @04,FDTPTR+64(,@14)                                 0574
         BNL   @RF00574                                            0574
*                /****************************************************/
*                /*                                                  */
*                /* SPACE ALLOCATION INFORMATION IS SIGNIFICANT ONLY */
*                /* TO THE ASSOCIATIONS OF A CLUSTER, PAGESPACE OR   */
*                /* AN AIX.                                  @Y30SSMK*/
*                /*                                                  */
*                /****************************************************/
*                                                                  0575
*                DO;                                               0575
*                  TYPECNT = LENGTH(LALLOCTP);             /*@YL026UE*/
         MVC   TYPECNT(2,@02),@CH00170                             0576
*                  TYPELIST = LALLOCTP;                    /*@YL026UE*/
         MVI   TYPELIST+3(@02),C' '                                0577
         MVC   TYPELIST+4(7,@02),TYPELIST+3(@02)                   0577
         MVC   TYPELIST(3,@02),@CC01288                            0577
*                  LISTCFLG = ON;                                  0578
         OI    LISTCFLG(@15),B'10000000'                           0578
*                END;                                              0579
*              ELSE                                                0580
*                                                                  0580
*                /****************************************************/
*                /*                                                  */
*                /* RETRIEVE C, V, A, U, B, P, AND  G TYPES FOR VOL  */
*                /* REQUESTS OR RETRIEVE C, V, A, U, X, B, P, AND  G */
*                /* FOR TYPES REQUESTS OF ALL OR NAME INFORMATION.   */
*                /*                                          @YL026UE*/
*                /****************************************************/
*                                                                  0580
*                DO;                                               0580
         B     @RC00574                                            0580
@RF00574 DS    0H                                                  0581
*                IF ADDR(VOL) > NULLPTR                            0581
*                  THEN                                            0581
         L     @04,@PC00001+4                                      0581
         L     @04,FDTPTR+60(,@04)                                 0581
         LTR   @04,@04                                             0581
         BNP   @RF00581                                            0581
*                    DO;                                   /*@YL026UE*/
*                    LISTCFLG = ON;                        /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0583
         OI    LISTCFLG(@04),B'10000000'                           0583
*                    TYPELIST = LVOLTYPS;                  /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0584
         MVI   TYPELIST+7(@04),C' '                                0584
         MVC   TYPELIST+8(3,@04),TYPELIST+7(@04)                   0584
         MVC   TYPELIST(7,@04),@CC01286                            0584
*                    TYPECNT = LENGTH(LVOLTYPS);           /*@YL026UE*/
         MVC   TYPECNT(2,@04),@CH00480                             0585
*                    END;                                  /*@YL026UE*/
*                  ELSE                                            0587
*                    DO;                                   /*@YL026UE*/
         B     @RC00581                                            0587
@RF00581 DS    0H                                                  0588
*                    LISTCFLG = ON;                        /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0588
         OI    LISTCFLG(@04),B'10000000'                           0588
*                    TYPELIST = LALLTYPS;                  /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               0589
         MVI   TYPELIST+8(@04),C' '                                0589
         MVC   TYPELIST+9(2,@04),TYPELIST+8(@04)                   0589
         MVC   TYPELIST(8,@04),@CC01284                            0589
*                    TYPECNT = LENGTH(LALLTYPS);           /*@YL026UE*/
         MVC   TYPECNT(2,@04),@CH00187                             0590
*                    END;                                  /*@YL026UE*/
*                END;                                              0592
@RC00581 DS    0H                                                  0593
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* OBTAIN THE CURRENT TIME AND DATE AND INVOKE      @Y30LSMK*/
*        /* DATEPROC TO CALCULATE THE CREATION AND           @Y30LSMK*/
*        /* EXPIRATION DATES.                                @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0593
*        IF ADDR(CREAT) > NULLPTR  ×  ADDR(EXPIR) > NULLPTR        0593
*          THEN                                                    0593
@RC00574 DS    0H                                                  0593
@RF00573 SLR   @04,@04                                             0593
         L     @02,@PC00001+4                                      0593
         C     @04,FDTPTR+96(,@02)                                 0593
         BL    @RT00593                                            0593
         C     @04,FDTPTR+100(,@02)                                0593
         BNL   @RF00593                                            0593
@RT00593 DS    0H                                                  0594
*CNVTDATE:   DO;                                           /*@Y30LSMK*/
CNVTDATE DS    0H                                                  0595
*              DATEFLG = ON;                               /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0595
         OI    DATEFLG(@04),B'10000000'                            0595
*              CALL IDCSATI0 (GDTTBL,TIMEODAY,CREATEDT,CLOCK);/*   0596
*                                                            @Y30LSMK*/
         L     @04,@PC00001                                        0596
         ST    @04,@AL00001                                        0596
         LA    @02,TIMEODAY                                        0596
         ST    @02,@AL00001+4                                      0596
         LA    @02,CREATEDT                                        0596
         ST    @02,@AL00001+8                                      0596
         LA    @02,CLOCK                                           0596
         ST    @02,@AL00001+12                                     0596
         MVI   @AL00001+12,X'80'                                   0596
         L     @15,GDTTIM(,@04)                                    0596
         LA    @01,@AL00001                                        0596
         BALR  @14,@15                                             0596
*              CALL DATEPROC;                              /*@Y30LSMK*/
         BAL   @14,DATEPROC                                        0597
*              IF ADDR(CREAT) > NULLPTR  &  (VTYPFLG = ON  ×       0598
*                (LISTCFLG = ON  &  ADDR(ALLOC) = NULLPTR))        0598
*                THEN                                              0598
*                                                                  0598
         SLR   @04,@04                                             0598
         L     @02,@PC00001+4                                      0598
         C     @04,FDTPTR+96(,@02)                                 0598
         BNL   @RF00598                                            0598
         L     @15,COMFLGPT(,COMPTR)                               0598
         TM    VTYPFLG(@15),B'10000000'                            0598
         BO    @RT00598                                            0598
         TM    LISTCFLG(@15),B'10000000'                           0598
         BNO   @RF00598                                            0598
         C     @04,FDTPTR+64(,@02)                                 0598
         BNE   @RF00598                                            0598
@RT00598 DS    0H                                                  0599
*                  /**************************************************/
*                  /*                                        @Y30LSMK*/
*                  /* CONVERT THE REQUESTED CREATION VALUE   @Y30LSMK*/
*                  /* INTO MICROSECONDS TO BE USED IN        @Y30LSMK*/
*                  /* TESTING THE VOLUME TIME STAMP FOR      @Y30LSMK*/
*                  /* VOLUME ENTRIES.                        @Y30LSMK*/
*                  /*                                        @Y30LSMK*/
*                  /**************************************************/
*                                                                  0599
*                  DO;                                     /*@Y30LSMK*/
*                    MICTIME = ZEROAREA;                   /*@Y30LSMK*/
         MVC   MICTIME(16),ZEROAREA                                0600
*                    MICRSEC1 = MICROSEC;                  /*@Y30LSMK*/
         L     MICRSEC1,@CF01343                                   0601
*                    CVD(MICRSEC1,TIMPACK1);               /*@Y30LSMK*/
         CVD   MICRSEC1,TIMPACK1                                   0602
*                    MCTIME = TIMPACK1;                    /*@Y30LSMK*/
         MVC   MCTIME(8),TIMPACK1                                  0603
*                    SECNDAY1 = SECINDAY;                  /*@Y30LSMK*/
         L     SECNDAY1,@CF01346                                   0604
*                    CVD(SECNDAY1,TIMPACK1);               /*@Y30LSMK*/
         CVD   SECNDAY1,TIMPACK1                                   0605
*                    MP(MICTIME,TIMPACK1);                 /*@Y30LSMK*/
         MP    MICTIME(16),TIMPACK1(8)                             0606
*                    CVD(CREATVAL,TIMPACK1);               /*@Y30LSMK*/
         L     @04,@PC00001+4                                      0607
         L     @04,FDTPTR+96(,@04)                                 0607
         L     @04,CREATVAL(,@04)                                  0607
         CVD   @04,TIMPACK1                                        0607
*                    MP(MICTIME,TIMPACK1);                 /*@Y30LSMK*/
*                                                                  0608
         MP    MICTIME(16),TIMPACK1(8)                             0608
*                    /************************************************/
*                    /*                                      @Y30LSMK*/
*                    /* INVOKE TIMEPROC TO CONVERT THE TIME  @Y30LSMK*/
*                    /* OF DAY INTO A PACKED DECIMAL NUMBER. @Y30LSMK*/
*                    /*                                      @Y30LSMK*/
*                    /************************************************/
*                                                                  0609
*                    CALL TIMEPROC;                        /*@Y30LSMK*/
         BAL   @14,TIMEPROC                                        0609
*                    SP(TIMEPACK,MICTIME);                 /*@Y30LSMK*/
         SP    TIMEPACK(16),MICTIME(16)                            0610
*                    MICTIME = TIMEPACK;                   /*@Y30LSMK*/
         MVC   MICTIME(16),TIMEPACK                                0611
*                  END;                                    /*@Y30LSMK*/
*            END CNVTDATE;                                 /*@Y30LSMK*/
*          ELSE                                                    0614
*            DATEFLG = OFF;                                /*@Y30LSMK*/
         B     @RC00593                                            0614
@RF00593 L     @04,COMFLGPT(,COMPTR)                               0614
         NI    DATEFLG(@04),B'01111111'                            0614
*        /************************************************************/
*        /*                                                          */
*        /* A MULTIPLE TYPE LISTING MUST INCLUDE THE MULTITYP FPL    */
*        /* AS THE VERY FIRST FPL BUILT FOR LOCATE REQUESTS.         */
*        /* NOTE - IF THE CREATION OR EXPIRATION OPTION WAS  @Y30LSMK*/
*        /* REQUESTED, OR IF THE NOTUSABLE OPTION WAS        @Y30SSMK*/
*        /* REQUESTED, THIS WILL ALSO RESULT IN A MULTITYP   @Y30LSMK*/
*        /* FPL.                                             @Y30LSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0615
*        IF TYPECNT > 1  ×  DATEFLG = ON  ×  NUSEFLG = ON          0615
*          THEN                                                    0615
@RC00593 L     @04,COMVARPT(,COMPTR)                               0615
         CLC   TYPECNT(2,@04),@CH00045                             0615
         BH    @RT00615                                            0615
         L     @04,COMFLGPT(,COMPTR)                               0615
         TM    DATEFLG(@04),B'10000000'                            0615
         BO    @RT00615                                            0615
         TM    NUSEFLG(@04),B'10000000'                            0615
         BNO   @RF00615                                            0615
@RT00615 DS    0H                                                  0616
*            DO;                                                   0616
*              CTGTYPE = HEXFF;                                    0617
         L     @04,COMSWKPT(,COMPTR)                               0617
         L     @04,CTGPLPTR(,@04)                                  0617
         MVC   CTGTYPE(1,@04),HEXFF                                0617
*              FPLBEGN = 1;                                        0618
         L     @04,COMVARPT(,COMPTR)                               0618
         MVC   FPLBEGN(2,@04),@CH00045                             0618
*            END;                                                  0619
*                                                                  0619
*          /**********************************************************/
*          /*                                                        */
*          /* FOR SINGLE TYPE LISTINGS, THE TYPE CODE IS EMBEDDED    */
*          /* WITHIN THE CPL, RATHER THAN SETTING UP THE SPECIAL     */
*          /* MULTITYP FPL.                                          */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0620
*          ELSE                                                    0620
*            DO;                                                   0620
         B     @RC00615                                            0620
@RF00615 DS    0H                                                  0621
*              FPLBEGN = BYPASMUL;     /*BYPASS SPECIAL MULTITYP FPL */
         L     @04,COMVARPT(,COMPTR)                               0621
         MVC   FPLBEGN(2,@04),@CH00161                             0621
*              IF TYPECNT = 1                                      0622
*                THEN                  /*SINGLE TYPE TO BE LISTED    */
         CLC   TYPECNT(2,@04),@CH00045                             0622
         BNE   @RF00622                                            0622
*                  CTGTYPE = TYPELIST(1);                          0623
         L     @02,COMSWKPT(,COMPTR)                               0623
         L     @02,CTGPLPTR(,@02)                                  0623
         MVC   CTGTYPE(1,@02),TYPELIST(@04)                        0623
*                ELSE                  /*ENTRIES LISTED VIA NAME     */
*                  CTGTYPE = NOTYPE;                               0624
         B     @RC00622                                            0624
@RF00622 L     @04,COMSWKPT(,COMPTR)                               0624
         L     @04,CTGPLPTR(,@04)                                  0624
         MVC   CTGTYPE(1,@04),NOTYPE                               0624
*            END;                                                  0625
@RC00622 DS    0H                                                  0626
*                                                                  0626
*        /************************************************************/
*        /*                                                          */
*        /* TEST FOR USER SPECIFICATION ERRORS CAUSING TERMINATION.  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0626
*        IF ENLVUDFG = OFF  &  LISTCFLG = OFF  &  TYPECNT = 0      0626
*          THEN                                                    0626
@RC00615 L     @04,COMFLGPT(,COMPTR)                               0626
         TM    ENLVUDFG(@04),B'10000000'                           0626
         BNZ   @RF00626                                            0626
         TM    LISTCFLG(@04),B'10000000'                           0626
         BNZ   @RF00626                                            0626
         L     @02,COMVARPT(,COMPTR)                               0626
         LH    @02,TYPECNT(,@02)                                   0626
         LTR   @02,@02                                             0626
         BNZ   @RF00626                                            0626
*            DO;                                                   0627
*              NOMSGFLG = ON;                                      0628
         OI    NOMSGFLG(@04),B'10000000'                           0628
*              RETURN CODE (LASTCC12);                             0629
         LA    @15,12                                              0629
         L     @14,@SA00002                                        0629
         LM    @00,@12,@SA00002+8                                  0629
         BR    @14                                                 0629
*            END;                                                  0630
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* SINCE THE FPL'S REQUIRED TO CHECK THE CREATION   @Y30LSMK*/
*        /* AND EXPIRATION DATES ARE NOT RETURNED WITH THE   @Y30LSMK*/
*        /* NAME SUBSET, ADD TO THE FPL COUNT THESE          @Y30LSMK*/
*        /* ADDITIONAL FPL'S. SAVE THE FPL COUNT TO BE       @Y30LSMK*/
*        /* USED LATER IN THE RETRIEVAL OF THOSE FPL'S SINCE @Y30LSMK*/
*        /* THEY WILL OVERLAY EXISTING FPL'S.                @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0631
*        IF ADDR(EXPIR) > NULLPTR  &  ADDR(NAME) > NULLPTR         0631
*          THEN                                                    0631
@RF00626 SLR   @04,@04                                             0631
         L     @02,@PC00001+4                                      0631
         C     @04,FDTPTR+100(,@02)                                0631
         BNL   @RF00631                                            0631
         C     @04,FDTPTR+52(,@02)                                 0631
         BNL   @RF00631                                            0631
*            DO;                                           /*@Y30LSMK*/
*              FPLCNT = FPLCNT + 1;                        /*@Y30LSMK*/
         L     @04,COMVARPT(,COMPTR)                               0633
         LA    @02,1                                               0633
         AH    @02,FPLCNT(,@04)                                    0633
         STH   @02,FPLCNT(,@04)                                    0633
*              FPLEXP = FPLCNT;                            /*@Y30LSMK*/
         STH   @02,FPLEXP                                          0634
*              EXFPLFLG = ON;                              /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0635
         OI    EXFPLFLG(@04),B'10000000'                           0635
*            END;                                          /*@Y30LSMK*/
*        IF ADDR(CREAT) > NULLPTR  &  ADDR(NAME) > NULLPTR         0637
*          THEN                                                    0637
@RF00631 SLR   @04,@04                                             0637
         L     @02,@PC00001+4                                      0637
         C     @04,FDTPTR+96(,@02)                                 0637
         BNL   @RF00637                                            0637
         C     @04,FDTPTR+52(,@02)                                 0637
         BNL   @RF00637                                            0637
*            DO;                                           /*@Y30LSMK*/
*              FPLCNT = FPLCNT + 1;                        /*@Y30LSMK*/
         L     @04,COMVARPT(,COMPTR)                               0639
         LA    @02,1                                               0639
         AH    @02,FPLCNT(,@04)                                    0639
         STH   @02,FPLCNT(,@04)                                    0639
*              FPLCDT = FPLCNT;                            /*@Y30LSMK*/
         STH   @02,FPLCDT                                          0640
*              CRFPLFLG = ON;                              /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0641
         OI    CRFPLFLG(@04),B'10000000'                           0641
*            END;                                          /*@Y30LSMK*/
*                                                                  0642
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* FOR A VOLUME ENTRY, THE VOLUME TIME STAMP FPL'S  @Y30LSMK*/
*        /* WILL BE REQUIRED TO CHECK THE CREATION DATE      @Y30LSMK*/
*        /* UNLESS ALL CATALOG INFORMATION WAS REQUESTED.    @Y30LSMK*/
*        /* SAVE THE FPL COUNT TO BO USED LATER IN THE RETRIEVAL     */
*        /* OF THOSE FPL'S SINCE THEY WILL OVERLAY EXISTING  @Y30LSMK*/
*        /* FPL'S.                                           @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0643
*        IF ADDR(CREAT) > NULLPTR  &  ADDR(FALL) = NULLPTR         0643
*          THEN                                                    0643
@RF00637 SLR   @04,@04                                             0643
         L     @02,@PC00001+4                                      0643
         C     @04,FDTPTR+96(,@02)                                 0643
         BNL   @RF00643                                            0643
         C     @04,FDTPTR+56(,@02)                                 0643
         BNE   @RF00643                                            0643
*            IF VTYPFLG = ON  ×                                    0644
*              (LISTCFLG = ON  &  ADDR(ALLOC) = NULLPTR)           0644
*              THEN                                                0644
         L     @15,COMFLGPT(,COMPTR)                               0644
         TM    VTYPFLG(@15),B'10000000'                            0644
         BO    @RT00644                                            0644
         TM    LISTCFLG(@15),B'10000000'                           0644
         BNO   @RF00644                                            0644
         C     @04,FDTPTR+64(,@02)                                 0644
         BNE   @RF00644                                            0644
@RT00644 DS    0H                                                  0645
*                DO;                                       /*@Y30LSMK*/
*                  FPLCNT = FPLCNT + 1;                    /*@Y30LSMK*/
         L     @04,COMVARPT(,COMPTR)                               0646
         LA    @02,1                                               0646
         LH    @15,FPLCNT(,@04)                                    0646
         ALR   @15,@02                                             0646
         STH   @15,FPLCNT(,@04)                                    0646
*                  FPLSPH = FPLCNT;                        /*@Y30LSMK*/
         STH   @15,FPLSPH                                          0647
*                  FPLCNT = FPLCNT + 1;                    /*@Y30LSMK*/
         ALR   @15,@02                                             0648
         STH   @15,FPLCNT(,@04)                                    0648
*                  FPLVTM = FPLCNT;                        /*@Y30LSMK*/
         STH   @15,FPLVTM                                          0649
*                  VTFPLFLG = ON;                          /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0650
         OI    VTFPLFLG(@04),B'10000000'                           0650
*                END;                                      /*@Y30LSMK*/
*                                                                  0651
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF NOTUSABLE IS SPECIFIED AN ADDITIONAL FPL WILL @Y30SSMK*/
*        /* BE REQUIRED TO REFERENCE THIS INFORMATION        @Y30SSMK*/
*        /* UNLESS ALL CATALOG INFORMATION WAS REQUESTED.    @Y30SSMK*/
*        /* SAVE THE FPL COUNT TO BE USED LATER IN RETRIEVAL @Y30SSMK*/
*        /* OF THE FPL, SINCE IT WILL OVERLAY AN EXISTING FPL.       */
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0652
*        IF ADDR(NUSE) > NULLPTR  &  ADDR(FALL) = NULLPTR          0652
*          THEN                                                    0652
@RF00644 DS    0H                                                  0652
@RF00643 SLR   @04,@04                                             0652
         L     @02,@PC00001+4                                      0652
         C     @04,FDTPTR+92(,@02)                                 0652
         BNL   @RF00652                                            0652
         C     @04,FDTPTR+56(,@02)                                 0652
         BNE   @RF00652                                            0652
*            DO;                                           /*@Y30SSMK*/
*              FPLCNT = FPLCNT + 1;                        /*@Y30SSMK*/
         L     @04,COMVARPT(,COMPTR)                               0654
         LA    @02,1                                               0654
         AH    @02,FPLCNT(,@04)                                    0654
         STH   @02,FPLCNT(,@04)                                    0654
*              FPLATR = FPLCNT;                            /*@Y30SSMK*/
         STH   @02,FPLATR                                          0655
*              ATFPLFLG = ON;                              /*@Y30SSMK*/
         L     @04,COMFLGPT(,COMPTR)                               0656
         OI    ATFPLFLG(@04),B'10000000'                           0656
*            END;                                          /*@Y30SSMK*/
*                                                                  0657
*        /************************************************************/
*        /*                                                          */
*        /* IF CAT ACB PTR IS NOT KNOWN, BUILD FPL TO REFERENCE      */
*        /* THIS INFORMATION.  LET THIS FPL BE THE LAST IN THE       */
*        /* STRING OF FPLS. SO THAT, AFTER THE FIRST LOCATE, IT      */
*        /* MAY BE DROPPED FROM THE STRING TO ELIMINATE UNNECESSARY  */
*        /* CAT/DADSM RETRIEVALS.                                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0658
*        IF CACBFLG = ON                                           0658
*          THEN                        /*INCL SPECIAL CAT ACB FPL    */
@RF00652 L     @04,COMFLGPT(,COMPTR)                               0658
         TM    CACBFLG(@04),B'10000000'                            0658
         BNO   @RF00658                                            0658
*            FPLCNT = FPLCNT + 1;                                  0659
         L     @04,COMVARPT(,COMPTR)                               0659
         LA    @02,1                                               0659
         AH    @02,FPLCNT(,@04)                                    0659
         STH   @02,FPLCNT(,@04)                                    0659
*        FPLEND = FPLCNT;              /*RECORD THE LAST FPL         */
@RF00658 L     @04,COMVARPT(,COMPTR)                               0660
         LH    @02,FPLCNT(,@04)                                    0660
         STH   @02,FPLEND(,@04)                                    0660
*        IF FPLBEGN = BYPASMUL                                     0661
*          THEN                        /*FIRST FPL NOT MULTI-TYPE    */
         CLC   FPLBEGN(2,@04),@CH00161                             0661
         BNE   @RF00661                                            0661
*            FPLCNT = FPLCNT - 1;      /*EXCL THIS FPL FROM TOTAL CNT*/
         BCTR  @02,0                                               0662
         STH   @02,FPLCNT(,@04)                                    0662
*                                                                  0663
*        /************************************************************/
*        /*                                                          */
*        /* OBTAIN STORAGE FOR ONLY THOSE NECESSARY FPLS.    @Y30LSMK*/
*        /* SINCE THE FPL'S ARE NOT READ-ONLY PARM LISTS, OBTAIN     */
*        /* ADDITIONAL STORAGE FOR A SAVE AREA COPY.                 */
*        /* ADDITIONAL STORAGE WILL ALSO BE REQUIRED IF A    @Y30LSMK*/
*        /* MULTITYP FPL IS TO BE INCLUDED, SINCE IT         @Y30LSMK*/
*        /* REQUIRES ADDITIONAL POINTER AND LENGTH FIELDS.   @Y30LSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0663
*        GPID = GPID01;                                            0663
@RF00661 MVC   GPID(4),@CC01247                                    0663
*        LCFPLLEN = LENGTH(CTGFL) + FPLPTLEN;              /*@Y30SSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0664
         LA    @02,24                                              0664
         STC   @02,LCFPLLEN(,@04)                                  0664
*        MTFPLLEN = LENGTH(CTGFL) + MULPTLEN;              /*@Y30SSMK*/
*                                                                  0665
         LA    @15,48                                              0665
         STC   @15,MTFPLLEN(,@04)                                  0665
*        IF FPLBEGN = 1                                            0666
*          THEN                                                    0666
         L     @04,COMVARPT(,COMPTR)                               0666
         CLC   FPLBEGN(2,@04),@CH00045                             0666
         BNE   @RF00666                                            0666
*            GPLEN = STORCNT2 * ((LCFPLLEN * (FPLCNT - 1)) +       0667
*              MTFPLLEN);                                  /*@Y30LSMK*/
         LH    @04,FPLCNT(,@04)                                    0667
         BCTR  @04,0                                               0667
         LR    @01,@02                                             0667
         MR    @00,@04                                             0667
         ALR   @01,@15                                             0667
         ALR   @01,@01                                             0667
         ST    @01,GPLEN                                           0667
*          ELSE                                                    0668
*            GPLEN = STORCNT2 * (LCFPLLEN * FPLCNT);       /*@Y30SSMK*/
*                                                                  0668
         B     @RC00666                                            0668
@RF00666 L     @04,COMSWKPT(,COMPTR)                               0668
         L     @02,COMVARPT(,COMPTR)                               0668
         SLR   @15,@15                                             0668
         IC    @15,LCFPLLEN(,@04)                                  0668
         MH    @15,FPLCNT(,@02)                                    0668
         ALR   @15,@15                                             0668
         ST    @15,GPLEN                                           0668
*        CALL IDCSAGP0 (GDTTBL,                                    0669
*                GPLEN,                                            0669
*                CTGFLPTR,                                         0669
*                GPID,                                             0669
*                SETZERO);                                         0669
@RC00666 L     @02,@PC00001                                        0669
         ST    @02,@AL00001                                        0669
         LA    @15,GPLEN                                           0669
         ST    @15,@AL00001+4                                      0669
         L     @01,COMSWKPT(,COMPTR)                               0669
         LA    @15,CTGFLPTR(,@01)                                  0669
         ST    @15,@AL00001+8                                      0669
         LA    @15,GPID                                            0669
         ST    @15,@AL00001+12                                     0669
         LA    @15,SETZERO                                         0669
         ST    @15,@AL00001+16                                     0669
         MVI   @AL00001+16,X'80'                                   0669
         L     @15,GDTGPL(,@02)                                    0669
         LA    @01,@AL00001                                        0669
         BALR  @14,@15                                             0669
*        RESPECIFY RTNREG RSTD;                                    0670
*        TESTRC = RTNREG;                                          0671
         LR    TESTRC,RTNREG                                       0671
*        RESPECIFY RTNREG UNRSTD;                                  0672
*                                                                  0672
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0673
*        IF TESTRC ^= 0                                            0673
*          THEN                                                    0673
         LTR   TESTRC,TESTRC                                       0673
         BZ    @RF00673                                            0673
*            DO;                                                   0674
*              ERRARGPT->DARGSMOD = UV0ID;                         0675
         L     @04,COMSWKPT(,COMPTR)                               0675
         L     @04,ERRARGPT(,@04)                                  0675
         MVC   DARGSMOD(3,@04),@CC01149                            0675
*              ERRARGPT->DARGSENT = UVMSG04;                       0676
         MVI   DARGSENT(@04),X'04'                                 0676
*              RETURN CODE (LASTCC12);                             0677
         LA    @15,12                                              0677
         L     @14,@SA00002                                        0677
         LM    @00,@12,@SA00002+8                                  0677
         BR    @14                                                 0677
*            END;                                                  0678
*        IF FPLBEGN = 1                                            0679
*          THEN                                                    0679
@RF00673 L     @04,COMVARPT(,COMPTR)                               0679
         CLC   FPLBEGN(2,@04),@CH00045                             0679
         BNE   @RF00679                                            0679
*            SAVFPLPT = CTGFLPTR +                                 0680
*              (LCFPLLEN * (FPLCNT - 1)) + MTFPLLEN;       /*@Y30LSMK*/
         L     @02,COMSWKPT(,COMPTR)                               0680
         LH    @04,FPLCNT(,@04)                                    0680
         BCTR  @04,0                                               0680
         LR    @01,@04                                             0680
         SLR   @04,@04                                             0680
         IC    @04,LCFPLLEN(,@02)                                  0680
         MR    @00,@04                                             0680
         AL    @01,CTGFLPTR(,@02)                                  0680
         SLR   @04,@04                                             0680
         IC    @04,MTFPLLEN(,@02)                                  0680
         ALR   @01,@04                                             0680
         ST    @01,SAVFPLPT(,@02)                                  0680
*          ELSE                                                    0681
*            SAVFPLPT = CTGFLPTR + (LCFPLLEN * FPLCNT);    /*@Y30LSMK*/
         B     @RC00679                                            0681
@RF00679 L     @04,COMSWKPT(,COMPTR)                               0681
         L     @02,COMVARPT(,COMPTR)                               0681
         SLR   @15,@15                                             0681
         IC    @15,LCFPLLEN(,@04)                                  0681
         MH    @15,FPLCNT(,@02)                                    0681
         AL    @15,CTGFLPTR(,@04)                                  0681
         ST    @15,SAVFPLPT(,@04)                                  0681
*                                                                  0682
*        /************************************************************/
*        /*                                                          */
*        /* BUILD APPROPRIATE FPLS FOR THE REQUESTED LISTING.        */
*        /* SETUP EACH FPL TO REFERENCE A SINGLE CATALOG FIELD NAME. */
*        /* SAVE THE POINTER OF EACH FPL.  THEN INSERT IN THE CPL    */
*        /* THE POINTER TO EACH FPL AND THE FPL COUNT.               */
*        /* ALSO STORE A SAVEAREA COPY OF EACH FPL.                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0682
*        CTGNOFLD = 0;                                             0682
@RC00679 L     @04,COMSWKPT(,COMPTR)                               0682
         L     @01,CTGPLPTR(,@04)                                  0682
         MVI   CTGNOFLD(@01),X'00'                                 0682
*        SAPTR = SAVFPLPT;                                         0683
         L     SAPTR,SAVFPLPT(,@04)                                0683
*        DO IDX = FPLBEGN TO FPLEND;                               0684
         L     @01,COMVARPT(,COMPTR)                               0684
         LH    IDX,FPLBEGN(,@01)                                   0684
         B     @DE00684                                            0684
@DL00684 DS    0H                                                  0685
*          CTGFLDNO = 1;                                           0685
         L     @15,COMSWKPT(,COMPTR)                               0685
         L     @14,CTGFLPTR(,@15)                                  0685
         MVI   CTGFLDNO(@14),X'01'                                 0685
*          CTGFLDNM = NMPTRS(IDX);                                 0686
         LR    @07,IDX                                             0686
         SLA   @07,2                                               0686
         L     @06,NMPTRS-4(@07)                                   0686
         ST    @06,CTGFLDNM(,@14)                                  0686
*          FPLPTMAP(IDX) = CTGFLPTR;                               0687
         L     @01,COMFPLPT(,COMPTR)                               0687
         AL    @01,@CF01593                                        0687
         ST    @14,FPLPTMAP(@07,@01)                               0687
*          CTGNOFLD = CTGNOFLD + 1;                                0688
         L     @07,CTGPLPTR(,@15)                                  0688
         LA    @06,1                                               0688
         SLR   @01,@01                                             0688
         IC    @01,CTGNOFLD(,@07)                                  0688
         ALR   @01,@06                                             0688
         STC   @01,CTGNOFLD(,@07)                                  0688
*          CTGFIELD(CTGNOFLD) = CTGFLPTR;                          0689
*                                                                  0689
         SLA   @01,2                                               0689
         ST    @14,CTGFIELD-4(@01,@07)                             0689
*          /**********************************************************/
*          /*                                                @Y30LSMK*/
*          /* SINCE THE MULTITYP FPL IS LONGER THAN OTHER    @Y30LSMK*/
*          /* FPL'S, IT REQUIRES SPECIAL PROCESSING DURING   @Y30LSMK*/
*          /* THE FPL SETUP.                                 @Y30LSMK*/
*          /*                                                @Y30LSMK*/
*          /**********************************************************/
*                                                                  0690
*          IF IDX = 1                                              0690
*            THEN                                                  0690
         CR    IDX,@06                                             0690
         BNE   @RF00690                                            0690
*              DO;                                         /*@Y30LSMK*/
*                SAPTR->SAVFPL(1:MTFPLLEN) =                       0692
*                  CTGFL(1:MTFPLLEN);                      /*@Y30LSMK*/
         SLR   @07,@07                                             0692
         IC    @07,MTFPLLEN(,@15)                                  0692
         LR    @06,@07                                             0692
         BCTR  @06,0                                               0692
         EX    @06,@SM01594                                        0692
*                SAPTR = SAPTR + MTFPLLEN;                 /*@Y30LSMK*/
         ALR   SAPTR,@07                                           0693
*                CTGFLPTR = CTGFLPTR + MTFPLLEN;           /*@Y30LSMK*/
         ALR   @14,@07                                             0694
         ST    @14,CTGFLPTR(,@15)                                  0694
*              END;                                        /*@Y30LSMK*/
*            ELSE                                                  0696
*              DO;                                         /*@Y30LSMK*/
         B     @RC00690                                            0696
@RF00690 DS    0H                                                  0697
*                SAPTR->SAVFPL(1:LCFPLLEN) =                       0697
*                  CTGFL(1:LCFPLLEN);                      /*@Y30LSMK*/
         L     @15,COMSWKPT(,COMPTR)                               0697
         SLR   @14,@14                                             0697
         IC    @14,LCFPLLEN(,@15)                                  0697
         LR    @07,@14                                             0697
         BCTR  @07,0                                               0697
         L     @06,CTGFLPTR(,@15)                                  0697
         EX    @07,@SM01596                                        0697
*                SAPTR = SAPTR + LCFPLLEN;                 /*@Y30LSMK*/
         ALR   SAPTR,@14                                           0698
*                CTGFLPTR = CTGFLPTR + LCFPLLEN;           /*@Y30LSMK*/
         ALR   @06,@14                                             0699
         ST    @06,CTGFLPTR(,@15)                                  0699
*              END;                                        /*@Y30LSMK*/
*        END;                                              /*@Y30LSMK*/
@RC00690 AL    IDX,@CF00045                                        0701
@DE00684 L     @01,COMVARPT(,COMPTR)                               0701
         CH    IDX,FPLEND(,@01)                                    0701
         BNH   @DL00684                                            0701
*        /************************************************************/
*        /*                                                          */
*        /* SINCE THE NUMBER OF FPLS VARY ACCORDING TO THE TYPE OF   */
*        /* SUBSET LISTING, FORCE THE LAST FPL AS THE SPECIAL CATACB */
*        /* IF UNKNOWN.                                              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0702
*        IF CACBFLG = ON                                           0702
*          THEN                        /*YES CAT ACB IS NEEDED       */
         L     @04,COMFLGPT(,COMPTR)                               0702
         TM    CACBFLG(@04),B'10000000'                            0702
         BNO   @RF00702                                            0702
*            DO;                                                   0703
*              /* POSITION TO THE LAST FPL AND ITS SAVE AREA COPY    */
*              CTGFLPTR = CTGFLPTR - LCFPLLEN;                     0704
         L     @04,COMSWKPT(,COMPTR)                               0704
         SLR   @15,@15                                             0704
         IC    @15,LCFPLLEN(,@04)                                  0704
         L     @14,CTGFLPTR(,@04)                                  0704
         SLR   @14,@15                                             0704
         ST    @14,CTGFLPTR(,@04)                                  0704
*              SAPTR = SAPTR - LCFPLLEN;                           0705
         SLR   SAPTR,@15                                           0705
*              /* FORCE LAST FPL AS CATACB FIELD REQUEST             */
*              CTGFLDNM = ADDR(CACBNM);                            0706
         LA    @04,CACBNM                                          0706
         ST    @04,CTGFLDNM(,@14)                                  0706
*              SAPTR->CTGFLDNM = ADDR(CACBNM);                     0707
         ST    @04,CTGFLDNM(,SAPTR)                                0707
*            END;                                                  0708
*                                                                  0708
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF AN ADDITIONAL FPL IS REQUIRED TO CHECK FOR    @Y30SSMK*/
*        /* NOTUSABLE, POSITION TO THE SUBSEQUENT FPL AND    @Y30SSMK*/
*        /* FORCE IT TO BE THE DATA SET ATTRIBUTES FPL.      @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0709
*        IF ATFPLFLG = ON                                          0709
*          THEN                                                    0709
@RF00702 L     @04,COMFLGPT(,COMPTR)                               0709
         TM    ATFPLFLG(@04),B'10000000'                           0709
         BNO   @RF00709                                            0709
*            DO;                                           /*@Y30SSMK*/
*              CTGFLPTR = CTGFLPTR - LCFPLLEN;             /*@Y30SSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0711
         SLR   @15,@15                                             0711
         IC    @15,LCFPLLEN(,@04)                                  0711
         L     @14,CTGFLPTR(,@04)                                  0711
         SLR   @14,@15                                             0711
         ST    @14,CTGFLPTR(,@04)                                  0711
*              SAPTR = SAPTR - LCFPLLEN;                   /*@Y30SSMK*/
         SLR   SAPTR,@15                                           0712
*              CTGFLDNM = ADDR(ATTRNM);                    /*@Y30SSMK*/
         LA    @04,ATTRNM                                          0713
         ST    @04,CTGFLDNM(,@14)                                  0713
*              SAPTR->CTGFLDNM = ADDR(ATTRNM);             /*@Y30SSMK*/
         ST    @04,CTGFLDNM(,SAPTR)                                0714
*            END;                                          /*@Y30SSMK*/
*                                                                  0715
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* IF ADDITIONAL FPL'S ARE REQUIRED TO CHECK THE    @Y30LSMK*/
*        /* CREATION AND EXPIRATION DATES, POSITION TO THE   @Y30LSMK*/
*        /* SUBSEQUENT FPL'S FORCE THEM TO BE THE CREATION,  @Y30LSMK*/
*        /* EXPIRATION, AND VOLUME TIME STAMP FPL'S.         @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0716
*        IF VTFPLFLG = ON                                          0716
*          THEN                                                    0716
@RF00709 L     @04,COMFLGPT(,COMPTR)                               0716
         TM    VTFPLFLG(@04),B'10000000'                           0716
         BNO   @RF00716                                            0716
*            DO;                                           /*@Y30LSMK*/
*              CTGFLPTR = CTGFLPTR - LCFPLLEN;             /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0718
         SLR   @15,@15                                             0718
         IC    @15,LCFPLLEN(,@04)                                  0718
         L     @14,CTGFLPTR(,@04)                                  0718
         SLR   @14,@15                                             0718
         ST    @14,CTGFLPTR(,@04)                                  0718
*              SAPTR = SAPTR - LCFPLLEN;                   /*@Y30LSMK*/
         SLR   SAPTR,@15                                           0719
*              CTGFLDNM = ADDR(VTIMENM);                   /*@Y30LSMK*/
         LA    @07,VTIMENM                                         0720
         ST    @07,CTGFLDNM(,@14)                                  0720
*              SAPTR->CTGFLDNM = ADDR(VTIMENM);            /*@Y30LSMK*/
         ST    @07,CTGFLDNM(,SAPTR)                                0721
*              CTGFLPTR = CTGFLPTR - LCFPLLEN;             /*@Y30LSMK*/
         SLR   @14,@15                                             0722
         ST    @14,CTGFLPTR(,@04)                                  0722
*              SAPTR = SAPTR - LCFPLLEN;                   /*@Y30LSMK*/
         SLR   SAPTR,@15                                           0723
*              CTGFLDNM = ADDR(VSPHDRNM);                  /*@Y30LSMK*/
         LA    @04,VSPHDRNM                                        0724
         ST    @04,CTGFLDNM(,@14)                                  0724
*              SAPTR->CTGFLDNM = ADDR(VSPHDRNM);           /*@Y30LSMK*/
         ST    @04,CTGFLDNM(,SAPTR)                                0725
*            END;                                          /*@Y30LSMK*/
*        IF CRFPLFLG = ON                                          0727
*          THEN                                                    0727
@RF00716 L     @04,COMFLGPT(,COMPTR)                               0727
         TM    CRFPLFLG(@04),B'10000000'                           0727
         BNO   @RF00727                                            0727
*            DO;                                           /*@Y30LSMK*/
*              CTGFLPTR = CTGFLPTR - LCFPLLEN;             /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0729
         SLR   @15,@15                                             0729
         IC    @15,LCFPLLEN(,@04)                                  0729
         L     @14,CTGFLPTR(,@04)                                  0729
         SLR   @14,@15                                             0729
         ST    @14,CTGFLPTR(,@04)                                  0729
*              SAPTR = SAPTR - LCFPLLEN;                   /*@Y30LSMK*/
         SLR   SAPTR,@15                                           0730
*              CTGFLDNM = ADDR(CRDTNM);                    /*@Y30LSMK*/
         LA    @04,CRDTNM                                          0731
         ST    @04,CTGFLDNM(,@14)                                  0731
*              SAPTR->CTGFLDNM = ADDR(CRDTNM);             /*@Y30LSMK*/
         ST    @04,CTGFLDNM(,SAPTR)                                0732
*            END;                                          /*@Y30LSMK*/
*        IF EXFPLFLG = ON                                          0734
*          THEN                                                    0734
@RF00727 L     @04,COMFLGPT(,COMPTR)                               0734
         TM    EXFPLFLG(@04),B'10000000'                           0734
         BNO   @RF00734                                            0734
*            DO;                                           /*@Y30LSMK*/
*              CTGFLPTR = CTGFLPTR - LCFPLLEN;             /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0736
         SLR   @15,@15                                             0736
         IC    @15,LCFPLLEN(,@04)                                  0736
         L     @14,CTGFLPTR(,@04)                                  0736
         SLR   @14,@15                                             0736
         ST    @14,CTGFLPTR(,@04)                                  0736
*              SAPTR = SAPTR - LCFPLLEN;                   /*@Y30LSMK*/
         SLR   SAPTR,@15                                           0737
*              CTGFLDNM = ADDR(EXDTNM);                    /*@Y30LSMK*/
         LA    @04,EXDTNM                                          0738
         ST    @04,CTGFLDNM(,@14)                                  0738
*              SAPTR->CTGFLDNM = ADDR(EXDTNM);             /*@Y30LSMK*/
         ST    @04,CTGFLDNM(,SAPTR)                                0739
*            END;                                          /*@Y30LSMK*/
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* INITIALIZE THE SPECIAL FPL - MULTITYP AND ITS SAVEAREA.  */
*        /* THIS FPL WILL HAVE 4 POINTER AND LENGTH FIELDS   @Y30LSMK*/
*        /* AND WILL BE INITIALIZED AS FOLLOWS -             @Y30LSMK*/
*        /*     1. TYPE CODE TEST.                           @Y30LSMK*/
*        /*     2. NOTUSABLE TEST.                           @Y30SSMK*/
*        /*     3. CREATION DATE TEST.                       @Y30LSMK*/
*        /*     4. EXPIRATION DATE TEST.                     @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  0741
*        IF FPLBEGN = 1                                            0741
*          THEN                        /*YES, MULTITYP FPL IS NEEDED */
@RF00734 L     @04,COMVARPT(,COMPTR)                               0741
         CLC   FPLBEGN(2,@04),@CH00045                             0741
         BNE   @RF00741                                            0741
*            DO;                                                   0742
*              CTGFLPTR = MULTIFPT;                                0743
         L     @02,COMSWKPT(,COMPTR)                               0743
         L     @01,COMFPLPT(,COMPTR)                               0743
         L     @15,MULTIFPT(,@01)                                  0743
         ST    @15,CTGFLPTR(,@02)                                  0743
*              CTGFLDNO = MULFLDNO;                        /*@Y30SSMK*/
         MVI   CTGFLDNO(@15),X'04'                                 0744
*              SAVFPLPT->CTGFLDNO = MULFLDNO;              /*@Y30SSMK*/
         L     @02,SAVFPLPT(,@02)                                  0745
         MVI   CTGFLDNO(@02),X'04'                                 0745
*              IF TYPECNT > 0                                      0746
*                THEN                                              0746
         LH    @14,TYPECNT(,@04)                                   0746
         LTR   @14,@14                                             0746
         BNP   @RF00746                                            0746
*                  DO;                                     /*@Y30LSMK*/
*                    CTGFLNG(1) = TYPECNT + LENGTH(TYPECNT);       0748
         AL    @14,@CF00161                                        0748
         ST    @14,CTGFLNG(,@15)                                   0748
*                    CTGFLPT(1) = ADDR(TYPMULTI);                  0749
         LA    @04,TYPMULTI(,@04)                                  0749
         ST    @04,CTGFLPT(,@15)                                   0749
*                    SAVFPLPT->CTGFLNG(1) = CTGFLPTR->CTGFLNG(1);  0750
         L     @15,CTGFLNG(,@15)                                   0750
         ST    @15,CTGFLNG(,@02)                                   0750
*                    SAVFPLPT->CTGFLPT(1) = ADDR(TYPMULTI);        0751
         ST    @04,CTGFLPT(,@02)                                   0751
*                  END;                                    /*@Y30LSMK*/
*              IF NUSEFLG = ON                                     0753
*                THEN                                              0753
@RF00746 L     @04,COMFLGPT(,COMPTR)                               0753
         TM    NUSEFLG(@04),B'10000000'                            0753
         BNO   @RF00753                                            0753
*                  DO;                                     /*@Y30SSMK*/
*                    CTGFLNG(2) = LENGTH(NUSMULTI);        /*@Y30SSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0755
         L     @02,CTGFLPTR(,@04)                                  0755
         MVC   CTGFLNG+8(4,@02),@CF00045                           0755
*                    CTGFLPT(2) = ADDR(NUSMULTI);          /*@Y30SSMK*/
         LA    @15,@CH00045+1                                      0756
         ST    @15,CTGFLPT+8(,@02)                                 0756
*                    SAVFPLPT->CTGFLNG(2) =                        0757
*                      CTGFLPTR->CTGFLNG(2);               /*@Y30SSMK*/
         L     @04,SAVFPLPT(,@04)                                  0757
         L     @02,CTGFLNG+8(,@02)                                 0757
         ST    @02,CTGFLNG+8(,@04)                                 0757
*                    SAVFPLPT->CTGFLPT(2) =                        0758
*                      ADDR(NUSMULTI);                     /*@Y30SSMK*/
         ST    @15,CTGFLPT+8(,@04)                                 0758
*                  END;                                    /*@Y30SSMK*/
*              IF ADDR(CREAT) > NULLPTR                            0760
*                THEN                                              0760
@RF00753 L     @04,@PC00001+4                                      0760
         L     @04,FDTPTR+96(,@04)                                 0760
         LTR   @04,@04                                             0760
         BNP   @RF00760                                            0760
*                  DO;                                     /*@Y30LSMK*/
*                    CTGFLNG(3) = LENGTH(CDTMULTI);        /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0762
         L     @02,CTGFLPTR(,@04)                                  0762
         MVC   CTGFLNG+16(4,@02),@CF00170                          0762
*                    CTGFLPT(3) = ADDR(CDTMULTI);          /*@Y30LSMK*/
         LA    @15,CDTMULTI                                        0763
         ST    @15,CTGFLPT+16(,@02)                                0763
*                    SAVFPLPT->CTGFLNG(3) =                        0764
*                      CTGFLPTR->CTGFLNG(3);               /*@Y30LSMK*/
         L     @04,SAVFPLPT(,@04)                                  0764
         L     @02,CTGFLNG+16(,@02)                                0764
         ST    @02,CTGFLNG+16(,@04)                                0764
*                    SAVFPLPT->CTGFLPT(3) =                        0765
*                      ADDR(CDTMULTI);                     /*@Y30LSMK*/
         ST    @15,CTGFLPT+16(,@04)                                0765
*                  END;                                    /*@Y30LSMK*/
*              IF ADDR(EXPIR) > NULLPTR                            0767
*                THEN                                              0767
@RF00760 L     @04,@PC00001+4                                      0767
         L     @04,FDTPTR+100(,@04)                                0767
         LTR   @04,@04                                             0767
         BNP   @RF00767                                            0767
*                  DO;                                     /*@Y30LSMK*/
*                    CTGFLNG(4) = LENGTH(EXPMULTI);        /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0769
         L     @02,CTGFLPTR(,@04)                                  0769
         MVC   CTGFLNG+24(4,@02),@CF00170                          0769
*                    CTGFLPT(4) = ADDR(EXPMULTI);          /*@Y30LSMK*/
         LA    @15,EXPMULTI                                        0770
         ST    @15,CTGFLPT+24(,@02)                                0770
*                    SAVFPLPT->CTGFLNG(4) =                        0771
*                      CTGFLPTR->CTGFLNG(4);               /*@Y30LSMK*/
         L     @04,SAVFPLPT(,@04)                                  0771
         L     @02,CTGFLNG+24(,@02)                                0771
         ST    @02,CTGFLNG+24(,@04)                                0771
*                    SAVFPLPT->CTGFLPT(4) =                        0772
*                      ADDR(EXPMULTI);                     /*@Y30LSMK*/
         ST    @15,CTGFLPT+24(,@04)                                0772
*                  END;                                    /*@Y30LSMK*/
*            END;                                          /*@Y30LSMK*/
@RF00767 DS    0H                                                  0775
*                                                                  0775
*        /************************************************************/
*        /*                                                          */
*        /* GET STORAGE FOR THE MINIMUM BYTES REQUIRED FOR A WORKAREA*/
*        /* USED IN THE                                              */
*        /* RETRIEVAL OF ALL CATALOG DICTIONARY FIELDS DURING ANY    */
*        /* SINGLE LOCATE REQUEST.                                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0775
*        GPID = GPID02;                                            0775
@RF00741 MVC   GPID(4),@CC01249                                    0775
*        GPLEN = DICTSZ + WKLENFLD;    /* INCLUDE 2 LENGTH FIELDS    */
*                                                                  0776
         LA    @02,4                                               0776
         AL    @02,DICTSZ                                          0776
         ST    @02,GPLEN                                           0776
*        CALL IDCSAGP0(GDTTBL,                                     0777
*               GPLEN,                                             0777
*               CTGWKA,                                            0777
*               GPID,                                              0777
*               SETZERO);                                          0777
         L     @02,@PC00001                                        0777
         ST    @02,@AL00001                                        0777
         LA    @15,GPLEN                                           0777
         ST    @15,@AL00001+4                                      0777
         L     @01,COMSWKPT(,COMPTR)                               0777
         L     @01,CTGPLPTR(,@01)                                  0777
         LA    @15,CTGWKA(,@01)                                    0777
         ST    @15,@AL00001+8                                      0777
         LA    @15,GPID                                            0777
         ST    @15,@AL00001+12                                     0777
         LA    @15,SETZERO                                         0777
         ST    @15,@AL00001+16                                     0777
         MVI   @AL00001+16,X'80'                                   0777
         L     @15,GDTGPL(,@02)                                    0777
         LA    @01,@AL00001                                        0777
         BALR  @14,@15                                             0777
*        RESPECIFY RTNREG RSTD;                                    0778
*        TESTRC = RTNREG;                                          0779
         LR    TESTRC,RTNREG                                       0779
*        RESPECIFY RTNREG UNRSTD;                                  0780
*                                                                  0780
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0781
*        IF TESTRC ^= 0                                            0781
*          THEN                                                    0781
         LTR   TESTRC,TESTRC                                       0781
         BZ    @RF00781                                            0781
*            DO;                                                   0782
*              ERRARGPT->DARGSMOD = UV0ID;                         0783
         L     @04,COMSWKPT(,COMPTR)                               0783
         L     @04,ERRARGPT(,@04)                                  0783
         MVC   DARGSMOD(3,@04),@CC01149                            0783
*              ERRARGPT->DARGSENT = UVMSG04;                       0784
         MVI   DARGSENT(@04),X'04'                                 0784
*              RETURN CODE(LASTCC12);                              0785
         LA    @15,12                                              0785
         L     @14,@SA00002                                        0785
         LM    @00,@12,@SA00002+8                                  0785
         BR    @14                                                 0785
*            END;                                                  0786
*        CPLWKASZ = GPLEN;             /*SET AS 1ST WKA LEN FIELD    */
@RF00781 L     @02,COMSWKPT(,COMPTR)                               0787
         L     @01,CTGPLPTR(,@02)                                  0787
         L     @01,CTGWKA(,@01)                                    0787
         L     @00,GPLEN                                           0787
         STH   @00,CPLWKASZ(,@01)                                  0787
*        /************************************************************/
*        /*                                                          */
*        /* OBTAIN STORAGE FOR A SEPARATE CPL USED ONLY TO RETRIEVE  */
*        /* AN ASSOCIATED DATASET NAME VIA A LOCATE ON ITS C.I.NO.   */
*        /* SINCE THE CPL IS NOT A READ-ONLY PARM LIST, GET          */
*        /* ADDITIONAL STORAGE FOR A SAVE AREA COPY.                 */
*        /* ALSO OBTAIN STORAGE FOR AN ADDITIONAL SAVEAREA SHOULD    */
*        /* A CATALOG ERROR OCCUR SINCE THE CALL TO UERROR REQUIRES  */
*        /* THE CPL INITIALIZED WITH THE VSAM ERROR REASON CODE.     */
*        /* NOTE: A SECOND FPL IS NEEDED FOR THE PAGESPACE ATTRIBUTE */
*        /*                                                          */
*        /************************************************************/
*                                                                  0788
*        GPID = GPID03;                                            0788
         MVC   GPID(4),@CC01251                                    0788
*        LC#CPLLN = LENGTH(CTGPL) + LC#PTLEN;/*                    0789
*                                          ENTRYNAME & CATTR   & ASSOC
*                                          FPL ADDR          @Y30SSMK*/
         LA    @15,40                                              0789
         STH   @15,LC#CPLLN(,@02)                                  0789
*        GPLEN = STORCNT3 * LC#CPLLN;                      /*@Y30SSMK*/
*                                                                  0790
         MH    @15,@CH00170                                        0790
         ST    @15,GPLEN                                           0790
*        CALL IDCSAGP0(GDTTBL,                                     0791
*               GPLEN,                                             0791
*               GPPTR,                                             0791
*               GPID,                                              0791
*               SETZERO);                                          0791
         L     @02,@PC00001                                        0791
         ST    @02,@AL00001                                        0791
         LA    @15,GPLEN                                           0791
         ST    @15,@AL00001+4                                      0791
         LA    @15,GPPTR                                           0791
         ST    @15,@AL00001+8                                      0791
         LA    @15,GPID                                            0791
         ST    @15,@AL00001+12                                     0791
         LA    @15,SETZERO                                         0791
         ST    @15,@AL00001+16                                     0791
         MVI   @AL00001+16,X'80'                                   0791
         L     @15,GDTGPL(,@02)                                    0791
         LA    @01,@AL00001                                        0791
         BALR  @14,@15                                             0791
*        RESPECIFY RTNREG RSTD;                                    0792
*        TESTRC = RTNREG;                                          0793
         LR    TESTRC,RTNREG                                       0793
*        RESPECIFY RTNREG UNRSTD;                                  0794
*                                                                  0794
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0795
*        IF TESTRC ^= 0                                            0795
*          THEN                                                    0795
         LTR   TESTRC,TESTRC                                       0795
         BZ    @RF00795                                            0795
*            DO;                                                   0796
*              ERRARGPT->DARGSMOD = UV0ID;                         0797
         L     @04,COMSWKPT(,COMPTR)                               0797
         L     @04,ERRARGPT(,@04)                                  0797
         MVC   DARGSMOD(3,@04),@CC01149                            0797
*              ERRARGPT->DARGSENT = UVMSG04;                       0798
         MVI   DARGSENT(@04),X'04'                                 0798
*              RETURN CODE (LASTCC12);                             0799
         LA    @15,12                                              0799
         L     @14,@SA00002                                        0799
         LM    @00,@12,@SA00002+8                                  0799
         BR    @14                                                 0799
*            END;                                                  0800
*        CI#CPLPT = GPPTR;                                         0801
@RF00795 L     @02,GPPTR                                           0801
         L     @15,COMSWKPT(,COMPTR)                               0801
         ST    @02,CI#CPLPT(,@15)                                  0801
*        SA#CPLPT = GPPTR + LC#CPLLN;  /*SAVE AREA POINTER           */
         LH    @14,LC#CPLLN(,@15)                                  0802
         ALR   @02,@14                                             0802
         ST    @02,SA#CPLPT(,@15)                                  0802
*        ER#CPLPT = SA#CPLPT + LC#CPLLN;                   /*@Y30SSMK*/
         ALR   @02,@14                                             0803
         ST    @02,ER#CPLPT(,@15)                                  0803
*        /************************************************************/
*        /*                                                          */
*        /* GET STORAGE FOR A SEPARATE WORKAREA USED IN THE RETRIEVAL*/
*        /* OF ASSOCIATED DATASET NAMES OR THE DATASET NAMES FOR THE */
*        /* SPACE DIRECTORY.                                         */
*        /* ENTRY TYPE OR CLUSTER ATTRIBUTES AND THREE TYPE AND      */
*        /* CI# FIELDS (ALIAS) MAY ALSO BE RETURNED.         @YL026UE*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0804
*        GPID = GPID04;                                            0804
         MVC   GPID(4),@CC01253                                    0804
*        GPLEN = LENGTH(ENT44) + LENGTH(ETYP) + ENTCILEN;  /*@Y30SSMK*/
*                                                                  0805
         MVC   GPLEN(4),@CF01581                                   0805
*        CALL IDCSAGP0 (GDTTBL,                                    0806
*                GPLEN,                                            0806
*                ENTWKAPT,                                         0806
*                GPID,                                             0806
*                SETZERO);                                         0806
         L     @02,@PC00001                                        0806
         ST    @02,@AL00001                                        0806
         LA    @14,GPLEN                                           0806
         ST    @14,@AL00001+4                                      0806
         LA    @15,ENTWKAPT(,@15)                                  0806
         ST    @15,@AL00001+8                                      0806
         LA    @15,GPID                                            0806
         ST    @15,@AL00001+12                                     0806
         LA    @15,SETZERO                                         0806
         ST    @15,@AL00001+16                                     0806
         MVI   @AL00001+16,X'80'                                   0806
         L     @15,GDTGPL(,@02)                                    0806
         LA    @01,@AL00001                                        0806
         BALR  @14,@15                                             0806
*        RESPECIFY RTNREG RSTD;                                    0807
*        TESTRC = RTNREG;                                          0808
         LR    TESTRC,RTNREG                                       0808
*        RESPECIFY RTNREG UNRSTD;                                  0809
*                                                                  0809
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0810
*        IF TESTRC ^= 0                                            0810
*          THEN                                                    0810
         LTR   TESTRC,TESTRC                                       0810
         BZ    @RF00810                                            0810
*            DO;                                                   0811
*              ERRARGPT->DARGSMOD = UV0ID;                         0812
         L     @04,COMSWKPT(,COMPTR)                               0812
         L     @04,ERRARGPT(,@04)                                  0812
         MVC   DARGSMOD(3,@04),@CC01149                            0812
*              ERRARGPT->DARGSENT = UVMSG04;                       0813
         MVI   DARGSENT(@04),X'04'                                 0813
*              RETURN CODE (LASTCC12);                             0814
         LA    @15,12                                              0814
         L     @14,@SA00002                                        0814
         LM    @00,@12,@SA00002+8                                  0814
         BR    @14                                                 0814
*            END;                                                  0815
*        ENTSETSZ = GPLEN;             /*SET AS 1ST WKA LEN FIELD    */
@RF00810 L     @02,COMSWKPT(,COMPTR)                               0816
         L     @15,ENTWKAPT(,@02)                                  0816
         L     @14,GPLEN                                           0816
         STH   @14,ENTSETSZ(,@15)                                  0816
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE THE CPL USED TO RETRIEVE ENTRY NAMES.         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0817
*        RESPECIFY CTGPL BASED(CI#CPLPT);                          0817
*        CTGNAME = OFF;                /* CINO. PTR TO BE FURNISHED  */
*        CTGCNAME = OFF;               /*CAT ACB PTR                 */
         L     @14,CI#CPLPT(,@02)                                  0819
         NI    CTGNAME(@14),B'11111001'                            0819
*        CTGGTNXT = OFF;               /*SINGLE ENTRY PROCESSING     */
         NI    CTGGTNXT(@14),B'11101111'                           0820
*        CTGAM0 = ON;                  /*AM0 REQUEST                 */
         OI    CTGAM0(@14),B'00000001'                             0821
*        CTGFUNC = CTGCMS;             /*CMS REQUEST                 */
         NI    CTGFUNC(@14),B'10011111'                            0822
         OI    CTGFUNC(@14),B'10000000'                            0822
*        CTGOPTNS = CTGLTCAT;          /*AMS LISTCAT REQUEST         */
         NI    CTGOPTNS(@14),B'00100111'                           0823
         OI    CTGOPTNS(@14),B'00100000'                           0823
*        CTGCAT = CTGPLPTR->CTGCAT;    /*CAT ACB POINTER             */
         L     @01,CTGPLPTR(,@02)                                  0824
         L     @07,CTGCAT(,@01)                                    0824
         ST    @07,CTGCAT(,@14)                                    0824
*        CTGWKA = ENTWKAPT;            /*CAT WORKAREA POINTER        */
         ST    @15,CTGWKA(,@14)                                    0825
*        CTGFIELD(1) = ENT44FPT;       /*ADDR OF ENTRYNAME FPL       */
         L     @01,COMFPLPT(,COMPTR)                               0826
         L     @15,ENT44FPT(,@01)                                  0826
         ST    @15,CTGFIELD(,@14)                                  0826
*        CTGNOFLD = 1;                 /*ONLY 1 FPL SETUP            */
         MVI   CTGNOFLD(@14),X'01'                                 0827
*        RESPECIFY CTGPL BASED(CTGPLPTR);                          0828
*                                                                  0829
*        /************************************************************/
*        /*                                                          */
*        /* OBTAIN STORAGE FOR STRING OF 25 ASSOCIATED DATASET       */
*        /* CONTROL INTERVAL NUMBERS AND TYPE CODES.  THIS SAVE AREA */
*        /* FOR ASSOCIATED DATASET INFORMATION ALLOWS SUBSEQUENT     */
*        /* LOCATES VIA C.I.NO. FOR CLUSTER/AIX/PGSPC/GDG    @Y30SSMK*/
*        /* GROUPING TO THE OUTPUT DATASET.                  @Y30SSMK*/
*        /* (NOTE - THIS STORAGE REQUEST PROVIDES THE FACILITY TO    */
*        /* EXPAND STORAGE AS THE DEFINITION OF ASSOCIATED DATASETS  */
*        /* EXPANDS.)                                                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0829
*        GPID = GPID05;                                            0829
         MVC   GPID(4),@CC01255                                    0829
*        CILSTLEN = ASSOCLEN;                              /*@Y30SSMK*/
*                                                                  0830
         MVC   CILSTLEN(4,@02),@CF00155                            0830
*        CALL IDCSAGP0(GDTTBL,                                     0831
*               CILSTLEN,                                          0831
*               CILSTPTR,                                          0831
*               GPID,                                              0831
*               SETZERO);                                          0831
         L     @15,@PC00001                                        0831
         ST    @15,@AL00001                                        0831
         LA    @14,CILSTLEN(,@02)                                  0831
         ST    @14,@AL00001+4                                      0831
         LA    @02,CILSTPTR(,@02)                                  0831
         ST    @02,@AL00001+8                                      0831
         LA    @02,GPID                                            0831
         ST    @02,@AL00001+12                                     0831
         LA    @02,SETZERO                                         0831
         ST    @02,@AL00001+16                                     0831
         MVI   @AL00001+16,X'80'                                   0831
         L     @15,GDTGPL(,@15)                                    0831
         LA    @01,@AL00001                                        0831
         BALR  @14,@15                                             0831
*        RESPECIFY RTNREG RSTD;                                    0832
*        TESTRC = RTNREG;                                          0833
         LR    TESTRC,RTNREG                                       0833
*        RESPECIFY RTNREG UNRSTD;                                  0834
*                                                                  0834
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0835
*        IF TESTRC ^= 0                                            0835
*          THEN                                                    0835
         LTR   TESTRC,TESTRC                                       0835
         BZ    @RF00835                                            0835
*            DO;                                                   0836
*              ERRARGPT->DARGSMOD = UV0ID;                         0837
         L     @04,COMSWKPT(,COMPTR)                               0837
         L     @04,ERRARGPT(,@04)                                  0837
         MVC   DARGSMOD(3,@04),@CC01149                            0837
*              ERRARGPT->DARGSENT = UVMSG04;                       0838
         MVI   DARGSENT(@04),X'04'                                 0838
*              RETURN CODE (LASTCC12);                             0839
         LA    @15,12                                              0839
         L     @14,@SA00002                                        0839
         LM    @00,@12,@SA00002+8                                  0839
         BR    @14                                                 0839
*            END;                                                  0840
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* OBTAIN STORAGE FOR STRING OF 25 ASSOCIATED DATASET       */
*        /* CONTROL INTERVAL NUMBERS AND TYPE CODES.  THIS SAVE AREA */
*        /* FOR ASSOCIATED DATASET INFORMATION ALLOWS SUBSEQUENT     */
*        /* LOCATES VIA C.I.NO. FOR DATA/INDEX/PATH/NVSAM    @Y30SSMK*/
*        /* GROUPING TO THE OUTPUT DATASET.                  @Y30SSMK*/
*        /* (NOTE - THIS STORAGE REQUEST PROVIDES THE FACILITY TO    */
*        /* EXPAND STORAGE AS THE DEFINITION OF ASSOCIATED DATASETS  */
*        /* EXPANDS.)                                        @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0841
*        GPID = GPID11;                                    /*@Y30SSMK*/
@RF00835 MVC   GPID(4),@CC01263                                    0841
*        CIASOCLN = ASSOCLEN;                              /*@Y30SSMK*/
*                                                                  0842
         L     @02,COMSWKPT(,COMPTR)                               0842
         MVC   CIASOCLN(4,@02),@CF00155                            0842
*        CALL IDCSAGP0(GDTTBL,                                     0843
*               CIASOCLN,                                          0843
*               CIASOCPT,                                          0843
*               GPID,                                              0843
*               SETZERO);                                  /*@Y30SSMK*/
         L     @15,@PC00001                                        0843
         ST    @15,@AL00001                                        0843
         LA    @14,CIASOCLN(,@02)                                  0843
         ST    @14,@AL00001+4                                      0843
         LA    @02,CIASOCPT(,@02)                                  0843
         ST    @02,@AL00001+8                                      0843
         LA    @02,GPID                                            0843
         ST    @02,@AL00001+12                                     0843
         LA    @02,SETZERO                                         0843
         ST    @02,@AL00001+16                                     0843
         MVI   @AL00001+16,X'80'                                   0843
         L     @15,GDTGPL(,@15)                                    0843
         LA    @01,@AL00001                                        0843
         BALR  @14,@15                                             0843
*        RESPECIFY RTNREG RSTD;                                    0844
*        TESTRC = RTNREG;                                          0845
         LR    TESTRC,RTNREG                                       0845
*        RESPECIFY RTNREG UNRSTD;                          /*@Y30SSMK*/
*                                                                  0846
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0847
*        IF TESTRC ^= 0                                            0847
*          THEN                                                    0847
         LTR   TESTRC,TESTRC                                       0847
         BZ    @RF00847                                            0847
*            DO;                                           /*@Y30SSMK*/
*              ERRARGPT->DARGSMOD = UV0ID;                 /*@Y30SSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0849
         L     @04,ERRARGPT(,@04)                                  0849
         MVC   DARGSMOD(3,@04),@CC01149                            0849
*              ERRARGPT->DARGSENT = UVMSG04;               /*@Y30SSMK*/
         MVI   DARGSENT(@04),X'04'                                 0850
*              RETURN CODE (LASTCC12);                     /*@Y30SSMK*/
         LA    @15,12                                              0851
         L     @14,@SA00002                                        0851
         LM    @00,@12,@SA00002+8                                  0851
         BR    @14                                                 0851
*            END;                                          /*@Y30SSMK*/
*                                                                  0853
*        /************************************************************/
*        /*                                                          */
*        /* GET STORAGE FOR THE AMS TEXT PROCESSOR'S VARIABLE        */
*        /* DYNAMIC DATA ARGUMENT LIST.  (NOTE--29 INSERTIONS IS THE */
*        /* MAXIMUM POSSIBLE FOR THIS PARTICULAR GET-STORAGE REQUEST)*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0853
*        GPID = GPID06;                                            0853
*                                                                  0853
@RF00847 MVC   GPID(4),@CC01257                                    0853
*        CALL IDCSAGP0 (GDTTBL,                                    0854
*                GPDDSZ,                                           0854
*                DARGPTR,                                          0854
*                GPID,                                             0854
*                SETZERO);                                         0854
         L     @02,@PC00001                                        0854
         ST    @02,@AL00001                                        0854
         LA    @15,GPDDSZ                                          0854
         ST    @15,@AL00001+4                                      0854
         L     @01,COMSWKPT(,COMPTR)                               0854
         LA    @15,DARGPTR(,@01)                                   0854
         ST    @15,@AL00001+8                                      0854
         LA    @15,GPID                                            0854
         ST    @15,@AL00001+12                                     0854
         LA    @15,SETZERO                                         0854
         ST    @15,@AL00001+16                                     0854
         MVI   @AL00001+16,X'80'                                   0854
         L     @15,GDTGPL(,@02)                                    0854
         LA    @01,@AL00001                                        0854
         BALR  @14,@15                                             0854
*        RESPECIFY RTNREG RSTD;                                    0855
*        TESTRC = RTNREG;                                          0856
         LR    TESTRC,RTNREG                                       0856
*        RESPECIFY RTNREG UNRSTD;                                  0857
*                                                                  0857
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0858
*        IF TESTRC ^= 0                                            0858
*          THEN                                                    0858
         LTR   TESTRC,TESTRC                                       0858
         BZ    @RF00858                                            0858
*            DO;                                                   0859
*              ERRARGPT->DARGSMOD = UV0ID;                         0860
         L     @04,COMSWKPT(,COMPTR)                               0860
         L     @04,ERRARGPT(,@04)                                  0860
         MVC   DARGSMOD(3,@04),@CC01149                            0860
*              ERRARGPT->DARGSENT = UVMSG04;                       0861
         MVI   DARGSENT(@04),X'04'                                 0861
*              RETURN CODE (LASTCC12);                             0862
         LA    @15,12                                              0862
         L     @14,@SA00002                                        0862
         LM    @00,@12,@SA00002+8                                  0862
         BR    @14                                                 0862
*            END;                                                  0863
*        DARGSMOD = LC0ID;             /* STATIC TEXT ID, LC0        */
@RF00858 L     @02,COMSWKPT(,COMPTR)                               0864
         L     @01,DARGPTR(,@02)                                   0864
         MVC   DARGSMOD(3,@01),@CC01146                            0864
*                                                                  0865
*        /************************************************************/
*        /*                                                          */
*        /* OBTAIN STORAGE FOR STATIC TEXT ABBREVIATIONS USED IN THE */
*        /* OUTPUT.                                                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0865
*        GPID = GPID07;                                            0865
*                                                                  0865
         MVC   GPID(4),@CC01259                                    0865
*        CALL IDCSAGP0 (GDTTBL,                                    0866
*                LENGTH(LCTEXT),                                   0866
*                TEXTPTR,                                          0866
*                GPID,                                             0866
*                SETZERO);                                         0866
         L     @15,@PC00001                                        0866
         ST    @15,@AL00001                                        0866
         LA    @14,@CF01582                                        0866
         ST    @14,@AL00001+4                                      0866
         LA    @02,TEXTPTR(,@02)                                   0866
         ST    @02,@AL00001+8                                      0866
         LA    @02,GPID                                            0866
         ST    @02,@AL00001+12                                     0866
         LA    @02,SETZERO                                         0866
         ST    @02,@AL00001+16                                     0866
         MVI   @AL00001+16,X'80'                                   0866
         L     @15,GDTGPL(,@15)                                    0866
         LA    @01,@AL00001                                        0866
         BALR  @14,@15                                             0866
*        RESPECIFY RTNREG RSTD;                                    0867
*        TESTRC = RTNREG;                                          0868
         LR    TESTRC,RTNREG                                       0868
*        RESPECIFY RTNREG UNRSTD;                                  0869
*                                                                  0869
*        /************************************************************/
*        /*                                                  @Y30SSMK*/
*        /* IF STORAGE COULD NOT BE OBTAINED, SET UP ERROR   @Y30SSMK*/
*        /* MESSAGE AND RETURN WITH A R.C. = 12.             @Y30SSMK*/
*        /*                                                  @Y30SSMK*/
*        /************************************************************/
*                                                                  0870
*        IF TESTRC ^= 0                                            0870
*          THEN                                                    0870
         LTR   TESTRC,TESTRC                                       0870
         BZ    @RF00870                                            0870
*            DO;                                                   0871
*              ERRARGPT->DARGSMOD = UV0ID;                         0872
         L     @04,COMSWKPT(,COMPTR)                               0872
         L     @04,ERRARGPT(,@04)                                  0872
         MVC   DARGSMOD(3,@04),@CC01149                            0872
*              ERRARGPT->DARGSENT = UVMSG04;                       0873
         MVI   DARGSENT(@04),X'04'                                 0873
*              RETURN CODE (LASTCC12);                             0874
         LA    @15,12                                              0874
         L     @14,@SA00002                                        0874
         LM    @00,@12,@SA00002+8                                  0874
         BR    @14                                                 0874
*            END;                                                  0875
*                                                                  0875
*        /************************************************************/
*        /*                                                          */
*        /* TO RETRIEVE THE STATIC TEXT DATA, ISSUE AN               */
*        /* AMS UPRINT MACRO WITH THE RETURN AREA INITIALIZED IN THE */
*        /* DARGLIST TO THIS STORAGE AREA.                           */
*        /************************************************************/
*                                                                  0876
*        DARGSENT = LCST01;                                        0876
@RF00870 L     @04,COMSWKPT(,COMPTR)                               0876
         L     @02,DARGPTR(,@04)                                   0876
         MVI   DARGSENT(@02),X'01'                                 0876
*        DARGRETP = TEXTPTR;                                       0877
         L     @04,TEXTPTR(,@04)                                   0877
         ST    @04,DARGRETP(,@02)                                  0877
*        DARGRETL = LENGTH(LCTEXT);                                0878
         MVC   DARGRETL(2,@02),@CH01582                            0878
*        CALL LISTPROC;                                            0879
         L     @15,@CV00871                                        0879
         BALR  @14,@15                                             0879
*                                                                  0880
*        /************************************************************/
*        /*                                                          */
*        /* EXIT FROM INITIALIZATION ROUTINE, RETURNING TO           */
*        /* EXECUTIVE ROUTINE.                                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0880
*        RETURN CODE (0);                                          0880
         SLR   @15,@15                                             0880
         L     @14,@SA00002                                        0880
         LM    @00,@12,@SA00002+8                                  0880
         BR    @14                                                 0880
*        END INITPROC;                                             0881
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - GNXTPROC                                */
*        /*                                                          */
*        /* FUNCTION - MANAGES THE REQUEST FOR ALL OR A SPECIFIED    */
*        /*            SUBSET OF THE CATALOG ENTRY TYPES IN          */
*        /*            ALPHANUMERIC SEQUENCE.                        */
*        /*                                                          */
*        /* INPUT - MAIN CPL, FPLS, AND CORRESPONDING CATALOG WKAS   */
*        /*                                                          */
*        /* OUTPUT - RETRIEVED CATALOG FIELDS                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0882
*GNXTPROC:                                                         0882
*        PROCEDURE;                                                0882
*                                                                  0882
GNXTPROC STM   @14,@12,@SA00003                                    0882
*        DCL CMSEOFLG  BIT(1);         /*CAT MGMT SERVICES EOF SIGNAL*/
*                                                                  0883
*        /************************************************************/
*        /*                                                          */
*        /* GETNEXT PROCESSING MODE LOOP FOR LISTING BY TYPES        */
*        /* (INCLUDING TOTAL LISTC REQUEST).  FOR A COMPLETE         */
*        /* CATALOG LISTING THE ASSOCIATED DATASET ENTRIES WILL BE   */
*        /* LISTED WITH THE CLUSTER, AIX, PGSPC, OR          @Y30SSMK*/
*        /* GDG ENTRY. WHEREAS, A TYPE REQUEST SPECIFYING    @Y30SSMK*/
*        /* CLUSTER, AIX, PGSPC, OR GDG ENTRIES              @Y30SSMK*/
*        /* WILL NOT HAVE THE ASSOCIATED DATASET ENTRIES     @Y30SSMK*/
*        /* LISTED WITH THE CLUSTER , AIX, PGSPC, OR         @Y30SSMK*/
*        /* GDG NODE.                                        @Y30SSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0884
*        ENTNAME = BLANK;              /*INIT KEY FOR 1ST LOCATE     */
         MVI   ENTNAME+1,C' '                                      0884
         MVC   ENTNAME+2(42),ENTNAME+1                             0884
         MVI   ENTNAME,C' '                                        0884
*        CMSEOFLG = OFF;                                           0885
         NI    CMSEOFLG,B'01111111'                                0885
*        NOGENFLG = ON;                                    /*@Y30SSMK*/
*                                                                  0886
         L     @04,COMFLGPT(,COMPTR)                               0886
         OI    NOGENFLG(@04),B'10000000'                           0886
*GETNEXT:                                                          0887
*        DO WHILE CMSEOFLG = OFF;                                  0887
*                                                                  0887
GETNEXT  B     @DE00887                                            0887
@DL00887 DS    0H                                                  0888
*          OLDERID2 = NEWERID2;                                    0888
         L     @02,@PC00001                                        0888
         L     @02,GDTTR2(,@02)                                    0888
         MVC   @TS00001(95),NEWERID2(@02)                          0888
         MVC   OLDERID2(95,@02),@TS00001                           0888
*          NEWID2 = 'LCNX';                                        0889
*                                                                  0889
         MVC   NEWID2(4,@02),@CC01399                              0889
*          CTGGTNXT = ON;                                          0890
         L     @02,COMSWKPT(,COMPTR)                               0890
         L     @02,CTGPLPTR(,@02)                                  0890
         OI    CTGGTNXT(@02),B'00010000'                           0890
*          CTGNAME = ON;               /*44-BYTE ENTRYNAME IS USED   */
         OI    CTGNAME(@02),B'00000100'                            0891
*          CTGENT = ADDR(ENTNAME);                                 0892
         LA    @15,ENTNAME                                         0892
         ST    @15,CTGENT(,@02)                                    0892
*          PGSPCFLG = OFF;                                 /*@YL026UE*/
         L     @02,COMFLGPT(,COMPTR)                               0893
         NI    PGSPCFLG(@02),B'01111111'                           0893
*          /**********************************************************/
*          /*                                                        */
*          /* RETRIEVE AN ENTRY FROM THE CATALOG.                    */
*          /* THE GET-NEXT MODE RETRIEVAL IS BASED ON A CAT/DADSM    */
*          /* SEARCH FOR THE NEXT ENTRY G.T. OR EQUAL TO THE 44-BYTE */
*          /* NAME REFERENCED IN THE CPL.                            */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0894
*          CALL LOCPROC (FPLEND,                                   0894
*                        CACBFLG,                                  0894
*                        ENTNMFLG);                                0894
         L     @01,COMVARPT(,COMPTR)                               0894
         LA    @15,FPLEND(,@01)                                    0894
         ST    @15,@AL00001                                        0894
         ST    @02,@AL00001+4                                      0894
         LA    @02,ENTNMFLG(,@02)                                  0894
         ST    @02,@AL00001+8                                      0894
         L     @15,@CV00870                                        0894
         LA    @01,@AL00001                                        0894
         BALR  @14,@15                                             0894
*          RESPECIFY RTNREG RSTD;                                  0895
*          TESTRC = RTNREG;                                        0896
         LR    TESTRC,RTNREG                                       0896
*          RESPECIFY RTNREG UNRSTD;                                0897
*          /**********************************************************/
*          /*                                                        */
*          /* PROCESS THE ENTRY FIELDS WHENEVER THE LOCATE WAS       */
*          /* SUCCESSFUL OR ELSE PASSWORD VERIFICATION FAILED BUT    */
*          /* ONLY THE NAME SUBSET WAS REQUESTED, AND THE LISTING    */
*          /* WAS NOT DATE RESTRICTED, OR RESTRICTED TO      @Y30SSMK*/
*          /* NOTUSABLE DATA SETS.                           @Y30SSMK*/
*          /*                                                        */
*          /**********************************************************/
*                                                                  0898
*          IF TESTRC = 0  ×                                        0898
*            (CATRC = CRCBADPW & ADDR(NAME) > NULLPTR & DATEFLG = OFF
*            & NUSEFLG = OFF)                                      0898
*            THEN                                                  0898
         SLR   @02,@02                                             0898
         CR    TESTRC,@02                                          0898
         BE    @RT00898                                            0898
         L     @01,COMVARPT(,COMPTR)                               0898
         CLC   CATRC(2,@01),@CH01313                               0898
         BNE   @RF00898                                            0898
         L     @15,@PC00001+4                                      0898
         C     @02,FDTPTR+52(,@15)                                 0898
         BNL   @RF00898                                            0898
         L     @02,COMFLGPT(,COMPTR)                               0898
         TM    DATEFLG(@02),B'10000000'                            0898
         BNZ   @RF00898                                            0898
         TM    NUSEFLG(@02),B'10000000'                            0898
         BNZ   @RF00898                                            0898
@RT00898 DS    0H                                                  0899
*GNXTGOOD:     DO;                                                 0899
GNXTGOOD DS    0H                                                  0900
*              IF CATRC = 0                                        0900
*                THEN                                              0900
         L     @04,COMVARPT(,COMPTR)                               0900
         LH    @02,CATRC(,@04)                                     0900
         LTR   @02,@02                                             0900
         BNZ   @RF00900                                            0900
*                  DO;                                             0901
*                  /*SAVE ENTRYNAME TO UPDATE AS KEY FOR NEXT LOCATE */
*                  ENTNAME = ENT44FPT->CTGFLPT(1)->ENT44;          0902
         L     @02,COMFPLPT(,COMPTR)                               0902
         L     @01,ENT44FPT(,@02)                                  0902
         L     @01,CTGFLPT(,@01)                                   0902
         MVC   ENTNAME(44),ENT44(@01)                              0902
*                  HOLDETYP = ETYPFPT->CTGFLPT(1)->ETYP;           0903
         L     @01,ETYPFPT(,@02)                                   0903
         L     @01,CTGFLPT(,@01)                                   0903
         MVC   HOLDETYP(1,@04),ETYP(@01)                           0903
*                  IF HOLDETYP = CTGTCL &                          0904
*                     CATTRFPT->CTGFLPT(1)->PGSPAC ^= 'FF'X &      0904
*                     CATTRFPT->CTGFLPT(1)->PGSP=ON          /*YM6557*/
*                    THEN                                          0904
         CLI   HOLDETYP(@04),C'C'                                  0904
         BNE   @RF00904                                            0904
         L     @04,CATTRFPT(,@02)                                  0904
         L     @04,CTGFLPT(,@04)                                   0904
         CLI   PGSPAC(@04),X'FF'                                   0904
         BE    @RF00904                                            0904
         TM    PGSP(@04),B'00000001'                               0904
         BNO   @RF00904                                            0904
*                      PGSPCFLG = ON;                      /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0905
         OI    PGSPCFLG(@04),B'10000000'                           0905
*                  END;                                            0906
*                                                                  0906
*              /******************************************************/
*              /*                                                    */
*              /*  IF THE PROPER PASSWORD WAS NOT PROVIDED BUT ONLY  */
*              /*  NAMES ARE REQUESTED, RETRIEVE THE NAME FROM THE   */
*              /*  WORK AREA AND CALL RTEPROC TO HAVE THE NAME       */
*              /*  LISTED.  DO NOT ISSUE ANY ERROR MESSAGES SINCE    */
*              /*  ALL THE REQUESTED INFORMATION IS PROVIDED.        */
*              /*                                                    */
*              /******************************************************/
*                                                                  0907
*                ELSE                                              0907
*                  DO;                                             0907
         B     @RC00900                                            0907
@RF00900 DS    0H                                                  0908
*                  ENTNAME = SUPPDSNM;                             0908
         L     @04,COMSWKPT(,COMPTR)                               0908
         L     @04,CTGPLPTR(,@04)                                  0908
         L     @04,CTGWKA(,@04)                                    0908
         MVC   ENTNAME(44),SUPPDSNM(@04)                           0908
*                  HOLDETYP = SUPPTYPE;                            0909
         L     @02,COMVARPT(,COMPTR)                               0909
         MVC   HOLDETYP(1,@02),SUPPTYPE(@04)                       0909
*                  IF HOLDETYP = CTGTPGSP                          0910
*                    THEN                                          0910
         CLI   HOLDETYP(@02),C'P'                                  0910
         BNE   @RF00910                                            0910
*                      DO;                                 /*@YL026UE*/
*                      PGSPCFLG = ON;                      /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               0912
         OI    PGSPCFLG(@04),B'10000000'                           0912
*                      HOLDETYP = CTGTCL;                  /*@YL026UE*/
         MVI   HOLDETYP(@02),C'C'                                  0913
*                      END;                                /*@YL026UE*/
*                  END;                                            0915
@RF00910 DS    0H                                                  0916
*              /******************************************************/
*              /*                                                    */
*              /* ROUTE THE ENTRY TO THE APPROPRIATE FORMATTING      */
*              /* ROUTINE.                                           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0916
*              CLENTFLG = OFF;         /*NON-QUALIFIED ENTRY @Y30SSMK*/
@RC00900 L     @04,COMFLGPT(,COMPTR)                               0916
         NI    CLENTFLG(@04),B'01111111'                           0916
*              CALL RTEPROC (CLENTFLG);                            0917
         LA    @04,CLENTFLG(,@04)                                  0917
         ST    @04,@AL00001                                        0917
         LA    @01,@AL00001                                        0917
         BAL   @14,RTEPROC                                         0917
*              RESPECIFY RTNREG RSTD;                              0918
*              TESTRC = RTNREG;                                    0919
         LR    TESTRC,RTNREG                                       0919
*              RESPECIFY RTNREG UNRSTD;                            0920
*                                                                  0920
*              /******************************************************/
*              /*                                            @Y30SSMK*/
*              /* IF ANY ERRORS ARE ENCOUNTERED WHILE        @Y30SSMK*/
*              /* PROCESSING THE ENTRIES, PROCEED TO PRINT   @Y30SSMK*/
*              /* THE APPROPRIATE ERROR MESSAGE.  TERMINATE  @Y30SSMK*/
*              /* PROCESSING IF A TERMINAL ERROR IS          @Y30SSMK*/
*              /* ENCOUNTERED.                               @Y30SSMK*/
*              /*                                            @Y30SSMK*/
*              /******************************************************/
*                                                                  0921
*              IF TESTRC ^= 0                                      0921
*                THEN                                              0921
         LTR   TESTRC,TESTRC                                       0921
         BZ    @RF00921                                            0921
*                  IF TESTRC < LASTCC12                            0922
*                    THEN                                          0922
         C     TESTRC,@CF00586                                     0922
         BNL   @RF00922                                            0922
*                      CALL ERRPROC;                               0923
         L     @15,@CV00872                                        0923
         BALR  @14,@15                                             0923
*                    ELSE                                          0924
*                      RETURN CODE(LASTCC12);                      0924
         B     @RC00922                                            0924
@RF00922 LA    @15,12                                              0924
         L     @14,@SA00003                                        0924
         LM    @00,@12,@SA00003+8                                  0924
         BR    @14                                                 0924
*              END GNXTGOOD;                                       0925
*            /********************************************************/
*            /*                                                      */
*            /* INTERROGATE THE NON-ZERO VSAM CATALOG RETURN CODE.   */
*            /*                                                      */
*            /********************************************************/
*                                                                  0926
*            ELSE                                                  0926
*GNXTBAD:      DO;                                                 0926
         B     @RC00898                                            0926
@RF00898 DS    0H                                                  0926
GNXTBAD  DS    0H                                                  0927
*              IF CATRC = CRCEOF                                   0927
*                THEN                                              0927
         L     @04,COMVARPT(,COMPTR)                               0927
         CLC   CATRC(2,@04),@CH00187                               0927
         BNE   @RF00927                                            0927
*                  CMSEOFLG = ON;      /*EOF TERMINATES GETNEXT LOOP */
         OI    CMSEOFLG,B'10000000'                                0928
*                ELSE                                              0929
*                  DO;                                             0929
         B     @RC00927                                            0929
@RF00927 DS    0H                                                  0930
*                  CALL ERRPROC;       /*O/P VSAM C.C. MESSAGE       */
         L     @15,@CV00872                                        0930
         BALR  @14,@15                                             0930
*                  IF CATRC = CRCBADPW                             0931
*                    THEN                                          0931
*                                                                  0931
         L     @04,COMVARPT(,COMPTR)                               0931
         CLC   CATRC(2,@04),@CH01313                               0931
         BNE   @RF00931                                            0931
*                      /**********************************************/
*                      /*                                            */
*                      /* UPDATE THE PASSWORD SUPPRESSED TALLY.      */
*                      /* SAVE THE ENTRYNAME AS A KEY FOR THE NEXT   */
*                      /* REQUEST AND CONTINUE.                      */
*                      /*                                            */
*                      /**********************************************/
*                                                                  0932
*                      DO;                                 /*@Y30LSMK*/
*                      PWTALLY = PWTALLY + 1;              /*@Y30LSMK*/
         LA    @02,1                                               0933
         AL    @02,PWTALLY                                         0933
         ST    @02,PWTALLY                                         0933
*                      ENTNAME = SUPPDSNM;                 /*@Y30LSMK*/
         L     @02,COMSWKPT(,COMPTR)                               0934
         L     @02,CTGPLPTR(,@02)                                  0934
         L     @02,CTGWKA(,@02)                                    0934
         MVC   ENTNAME(44),SUPPDSNM(@02)                           0934
*                      SAVRC = MAX (SAVRC, LASTCC04);      /*@ZA05939*/
         LH    @02,SAVRC(,@04)                                     0935
         LA    @15,4                                               0935
         CR    @02,@15                                             0935
         BNL   *+6
         LR    @02,@15                                             0935
         STH   @02,SAVRC(,@04)                                     0935
*                      IF (DATEFLG = OFF &  NUSEFLG = OFF)  ×      0936
*                        ADDR(NAME) = NULLPTR                      0936
*                        THEN                                      0936
*                                                                  0936
         L     @04,COMFLGPT(,COMPTR)                               0936
         TM    DATEFLG(@04),B'10000000'                            0936
         BNZ   @GL00051                                            0936
         TM    NUSEFLG(@04),B'10000000'                            0936
         BZ    @RT00936                                            0936
@GL00051 L     @04,@PC00001+4                                      0936
         L     @04,FDTPTR+52(,@04)                                 0936
         LTR   @04,@04                                             0936
         BNZ   @RF00936                                            0936
@RT00936 DS    0H                                                  0937
*                          /******************************************/
*                          /*                                @Y30LSMK*/
*                          /* IF THE LISTING WAS NOT DATE    @Y30LSMK*/
*                          /* RESTRICTED, OR RESTRICTED TO   @Y30SSMK*/
*                          /* NOTUSABLE DATA SETS, OUTPUT    @Y30SSMK*/
*                          /* THE ENTRY SUPPRESSED MESSAGE.  @Y30SSMK*/
*                          /*                                @Y30LSMK*/
*                          /******************************************/
*                                                                  0937
*                          DO;                             /*@Y30LSMK*/
*                          ERRARGPT->DARGSMOD = LC1ID;     /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               0938
         L     @02,ERRARGPT(,@04)                                  0938
         MVC   DARGSMOD(3,@02),@CC01155                            0938
*                          ERRARGPT->DARGSENT = LCMSG08;   /*@Y30LSMK*/
         MVI   DARGSENT(@02),X'08'                                 0939
*                          ERRARGPT->DARGDBP = ADDR(SUPPDSNM);     0940
         L     @04,CTGPLPTR(,@04)                                  0940
         L     @04,CTGWKA(,@04)                                    0940
         LA    @04,SUPPDSNM(,@04)                                  0940
         ST    @04,DARGDBP(,@02)                                   0940
*                          ERRARGPT->DARGILP = LENGTH(SUPPDSNM);   0941
         MVC   DARGILP(2,@02),@CH00610                             0941
*                          CALL ERRPROC;                   /*@Y30LSMK*/
         L     @15,@CV00872                                        0942
         BALR  @14,@15                                             0942
*                          END;                            /*@Y30LSMK*/
*                      END;                                /*@Y30LSMK*/
*                    ELSE                                          0945
*                      IF CATRC = CRCINVCI                         0945
*                        THEN                                      0945
*                                                                  0945
         B     @RC00931                                            0945
@RF00931 L     @04,COMVARPT(,COMPTR)                               0945
         CLC   CATRC(2,@04),@CH01315                               0945
         BNE   @RF00945                                            0945
*                          /******************************************/
*                          /*                                @ZA06148*/
*                          /* FOR AN INVALID CI NUMBER, OUTPUT THE   */
*                          /* APPROPRIATE ERROR MESSAGE AND CONTINUE */
*                          /* PROCESSING THE REMAINING ENTRIES.      */
*                          /* NOTE: VSAM CMS WILL RETURN THE ENTRY   */
*                          /* NAME IN THE AREA POINTED TO BY CTGENT. */
*                          /*                                @ZA06148*/
*                          /******************************************/
*                                                                  0946
*                          DO;                             /*@ZA06148*/
*                          ERRARGPT->DARGSMOD = LC1ID;     /*@ZA06148*/
         L     @04,COMSWKPT(,COMPTR)                               0947
         L     @04,ERRARGPT(,@04)                                  0947
         MVC   DARGSMOD(3,@04),@CC01155                            0947
*                          ERRARGPT->DARGSENT = LCMSG08;   /*@ZA06148*/
         MVI   DARGSENT(@04),X'08'                                 0948
*                          ERRARGPT->DARGDBP = ADDR(ENTNAME);      0949
         LA    @02,ENTNAME                                         0949
         ST    @02,DARGDBP(,@04)                                   0949
*                          ERRARGPT->DARGILP = LENGTH(ENTNAME);    0950
*                                                                  0950
         MVC   DARGILP(2,@04),@CH00610                             0950
*                          CALL ERRPROC;                   /*@ZA06148*/
         L     @15,@CV00872                                        0951
         BALR  @14,@15                                             0951
*                          END;                            /*@ZA06148*/
*                      ELSE                                        0953
*                                                                  0953
*                      /**********************************************/
*                      /*                                            */
*                      /* FOR AN INSUFFICIENT WORKAREA OCCURRENCE    */
*                      /* SAVE THE ENTRYNAME FOR THE NEXT LOCATE KEY */
*                      /* AND CONTINUE.                              */
*                      /*                                            */
*                      /**********************************************/
*                                                                  0953
*                      IF CATRC = CRCWKASZ                         0953
*                        THEN                                      0953
         B     @RC00945                                            0953
@RF00945 L     @04,COMVARPT(,COMPTR)                               0953
         CLC   CATRC(2,@04),@CH01311                               0953
         BNE   @RF00953                                            0953
*                          ENTNAME = ENT44FPT->CTGFLPT(1)->ENT44;  0954
         L     @04,COMFPLPT(,COMPTR)                               0954
         L     @04,ENT44FPT(,@04)                                  0954
         L     @04,CTGFLPT(,@04)                                   0954
         MVC   ENTNAME(44),ENT44(@04)                              0954
*                        ELSE                                      0955
*                                                                  0955
*                          /******************************************/
*                          /*                                        */
*                          /* TERMINATE PROCESSING FOR ALL OTHER     */
*                          /* CONDITIONS, RETURNING WITH THE APPRO-  */
*                          /* PRIATE RETURN CODE.                    */
*                          /*                                        */
*                          /******************************************/
*                                                                  0955
*                          DO;                                     0955
         B     @RC00953                                            0955
@RF00953 DS    0H                                                  0956
*                          NOMSGFLG = ON;                          0956
         L     @04,COMFLGPT(,COMPTR)                               0956
         OI    NOMSGFLG(@04),B'10000000'                           0956
*                          IF SAVRC < LASTCC12                     0957
*                            THEN                                  0957
         L     @04,COMVARPT(,COMPTR)                               0957
         LH    @04,SAVRC(,@04)                                     0957
         C     @04,@CF00586                                        0957
         BNL   @RF00957                                            0957
*                              RETURN CODE (LASTCC08);             0958
         LA    @15,8                                               0958
         L     @14,@SA00003                                        0958
         LM    @00,@12,@SA00003+8                                  0958
         BR    @14                                                 0958
*                            ELSE                                  0959
*                              RETURN CODE (LASTCC12);             0959
@RF00957 LA    @15,12                                              0959
         L     @14,@SA00003                                        0959
         LM    @00,@12,@SA00003+8                                  0959
         BR    @14                                                 0959
*                          END;                                    0960
*                  END;                                            0961
@RC00953 DS    0H                                                  0961
@RC00945 DS    0H                                                  0961
@RC00931 DS    0H                                                  0962
*              END GNXTBAD;                                        0962
@RC00927 DS    0H                                                  0963
*          /**********************************************************/
*          /*                                                        */
*          /* RESTORE THE STRING OF FPL'S AND UPDATE ENTRY NAME AS   */
*          /* THE KEY FOR THE NEXT LOCATE REQUEST.                   */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0963
*          CALL FPLPROC;                                           0963
@RC00898 L     @15,@CV00873                                        0963
         BALR  @14,@15                                             0963
*          ENTKEY = ENTKEY + 1;                                    0964
         IC    @04,ENTKEY                                          0964
         LA    @04,1(,@04)                                         0964
         STC   @04,ENTKEY                                          0964
*        END GETNEXT;                                              0965
@DE00887 TM    CMSEOFLG,B'10000000'                                0965
         BZ    @DL00887                                            0965
*        /************************************************************/
*        /*                                                          */
*        /* EXIT FROM ALPHANUMERIC GET-NEXT ROUTINE, RETURNING TO    */
*        /* EXECUTIVE ROUTINE.                                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0966
*        RETURN CODE (0);                                          0966
         SLR   @15,@15                                             0966
         L     @14,@SA00003                                        0966
         LM    @00,@12,@SA00003+8                                  0966
         BR    @14                                                 0966
*        END GNXTPROC;                                             0967
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - ENTPROC                                 */
*        /*                                                          */
*        /* FUNCTION - MANAGES THE REQUEST FOR SPECIFIC ENTRIES FROM */
*        /*            THE CATALOG.                                  */
*        /*                                                          */
*        /* INPUT - MAIN CPL, FPLS, CORRESPONDING CATALOG WORKAREAS, */
*        /*         AND LISTC FUNCTION DATA TABLE.                   */
*        /*                                                          */
*        /* OUTPUT - RETRIEVED CATALOG FIELDS FOR A GIVEN ENTRY      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0968
*ENTPROC:                                                          0968
*        PROCEDURE;                                                0968
*                                                                  0968
ENTPROC  STM   @14,@12,@SA00004                                    0968
*        /************************************************************/
*        /*                                                          */
*        /* LOCAL VARIABLES                                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  0969
*        DCL ENTIDX    FIXED(15);      /*INDEX VAR FOR ENTRY LIST    */
*        DCL TYPIDX    FIXED(15);      /*INDEX VAR FOR 'MULTITYP'SCAN*/
*        DCL BYPASFLG  BIT(1);         /*BYPASS PROCESSING OF AN NTRY*/
*        DCL TYPOKFLG  BIT(1);         /*ENTRY IS QUALIFIED BY TYPE  */
*        DCL BADPWFLG  BIT(1);         /*PASSWORD TEST FOR CL INFO   */
*        DCL SHORTFLG  BIT(1);         /*SHORT ENT NAME LIST @ZA01484*/
*        DCL SHVOLFLG  BIT(1);         /*SHORT VOLUME LIST   @Y30SSMK*/
*        DCL NOTRQFLG  BIT(1);         /*NOT REQUESTED TYPE  @Y30SSMK*/
*        DCL NAMECNT   FIXED(15);      /*CNT OF NAMES TO BE PROCESSED
*                                                            @YL026UE*/
*        DCL LVLNMWOA CHAR(44);        /*LVLNAME FOR '.'     @YL026UE*/
*        DCL JJ        FIXED(15);      /*INDEX VAR FOR PSWD CHECK  0979
*                                                            @Y30LSMK*/
*        DCL VOLSERLN  FIXED(15) CONSTANT(6);              /*@Y30SSMK*/
*                                      /*LEN OF VOL SERIAL   @Y30SSMK*/
*        DCL DSNLEN    FIXED(15) CONSTANT(44);             /*@Y30SSMK*/
*                                      /*LEN OF DATA SET NAME@Y30SSMK*/
*                                                                  0982
*        /************************************************************/
*        /*                                                  @YL026UE*/
*        /* ESTABLISH ADDRESSABILITY OF CIRAGL FOR THE UCIR MACRO    */
*        /*                                                  @YL026UE*/
*        /************************************************************/
*                                                                  0982
*        RESPECIFY CIRAGL BASED(ADDR(CIRAREA));            /*@YL026UE*/
*        CIRPID = 'LC10';                                  /*@YL026UE*/
*                                                                  0983
         LA    @04,CIRAREA                                         0983
         MVC   CIRPID(4,@04),@CC01261                              0983
*        /************************************************************/
*        /*                                                          */
*        /*   SINGLE ENTRY PROCESSING MODE LOOP.  THE SPECIFIED      */
*        /*   ENTRY LIST IS SCANNED AND EACH ENTRY IS LOCATED AND    */
*        /*   LISTED.                                                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0984
*        IF ADDR(ENT) > NULLPTR                                    0984
*          THEN                                                    0984
         L     @04,@PC00001+4                                      0984
         L     @04,FDTPTR+8(,@04)                                  0984
         LTR   @04,@04                                             0984
         BNP   @RF00984                                            0984
*            NAMECNT = ENTCNT;         /*NO. OF ENTRYNAMES   @YL026UE*/
         LH    @04,ENTCNT(,@04)                                    0985
         STH   @04,NAMECNT                                         0985
*          ELSE                                                    0986
*            NAMECNT = 1;              /*LEVEL OR USERID     @YL026UE*/
*                                                                  0986
         B     @RC00984                                            0986
@RF00984 MVC   NAMECNT(2),@CH00045                                 0986
*ENTLIST:                                                          0987
*        DO ENTIDX = 1 TO NAMECNT;                         /*@YL026UE*/
@RC00984 DS    0H                                                  0987
ENTLIST  LA    ENTIDX,1                                            0987
         B     @DE00987                                            0987
@DL00987 DS    0H                                                  0988
*          OLDERID2 = NEWERID2;                                    0988
         L     @07,@PC00001                                        0988
         L     @07,GDTTR2(,@07)                                    0988
         MVC   @TS00001(95),NEWERID2(@07)                          0988
         MVC   OLDERID2(95,@07),@TS00001                           0988
*          NEWID2 = 'LCEN';                                        0989
         MVC   NEWID2(4,@07),@CC01425                              0989
*          CIRAGL = ''B;                                   /*@YL026UE*/
         LA    @07,CIRAREA                                         0990
         XC    CIRAGL(32,@07),CIRAGL(@07)                          0990
*          TESTRC = 0;                                     /*@Y30LSMK*/
         SLR   TESTRC,TESTRC                                       0991
*          NOTRQFLG = OFF;                                 /*@Y30SSMK*/
         NI    NOTRQFLG,B'01111111'                                0992
*          NOGENFLG = OFF;                                 /*@Y30SSMK*/
         L     @07,COMFLGPT(,COMPTR)                               0993
         NI    NOGENFLG(@07),B'01111111'                           0993
*          /**********************************************************/
*          /*                                                        */
*          /* SPECIAL HANDLING OF TYPE=SPACE SPECIFICATION IS REQ'D  */
*          /*                                                        */
*          /**********************************************************/
*                                                                  0994
*          IF TYPECNT = 1  &  TYPELIST(1) = CTGTVOL                0994
*            THEN                                                  0994
*                                                                  0994
         L     @07,COMVARPT(,COMPTR)                               0994
         CLC   TYPECNT(2,@07),@CH00045                             0994
         BNE   @RF00994                                            0994
         CLI   TYPELIST(@07),C'V'                                  0994
         BNE   @RF00994                                            0994
*              /******************************************************/
*              /*                                                    */
*              /* FLAG VOLUME SERIAL ENTRIES GREATER THAN 6 CHARS    */
*              /* AS A USER ERROR.  BYPASS PROCESSING OF THIS ENTRY. */
*              /*                                                    */
*              /******************************************************/
*                                                                  0995
*              IF ENTLEN(ENTIDX) > VOLSERLN                        0995
*                THEN                                              0995
         LR    @07,ENTIDX                                          0995
         MH    @07,@CH01583                                        0995
         L     @02,@PC00001+4                                      0995
         L     @02,FDTPTR+8(,@02)                                  0995
         LA    @01,0(@07,@02)                                      0995
         AL    @01,@CF01601                                        0995
         SLR   @15,@15                                             0995
         IC    @15,ENTLEN-22(,@01)                                 0995
         C     @15,@CF00164                                        0995
         BNH   @RF00995                                            0995
*                  DO;                                             0996
*                  ERRARGPT->DARGSMOD = LC1ID;                     0997
         L     @01,COMSWKPT(,COMPTR)                               0997
         L     @14,ERRARGPT(,@01)                                  0997
         MVC   DARGSMOD(3,@14),@CC01155                            0997
*                  ERRARGPT->DARGSENT = LCMSG03;                   0998
         MVI   DARGSENT(@14),X'03'                                 0998
*                  ERRARGPT->DARGDBP = ADDR(ENTVAL(ENTIDX));       0999
         AL    @02,@CF01602                                        0999
         LA    @07,ENTVAL-23(@07,@02)                              0999
         ST    @07,DARGDBP(,@14)                                   0999
*                  ERRARGPT->DARGILP = ENTLEN(ENTIDX);             1000
         STH   @15,DARGILP(,@14)                                   1000
*                  CALL ERRPROC;                                   1001
         L     @15,@CV00872                                        1001
         BALR  @14,@15                                             1001
*                  BYPASFLG = ON;                                  1002
         OI    BYPASFLG,B'10000000'                                1002
*                  SAVRC = MAX (SAVRC, LASTCC04);          /*@ZA05939*/
         L     @07,COMVARPT(,COMPTR)                               1003
         LH    @02,SAVRC(,@07)                                     1003
         LA    @15,4                                               1003
         CR    @02,@15                                             1003
         BNL   *+6
         LR    @02,@15                                             1003
         STH   @02,SAVRC(,@07)                                     1003
*                  END;                                            1004
*                ELSE                                              1005
*                                                                  1005
*                  /**************************************************/
*                  /*                                                */
*                  /* SETUP THE 44-BYTE KEY FOR THE VOLUME SERIAL NO.*/
*                  /* FROM THE FDT EXTRACT THE 6-BYTE SERIAL NUMBER  */
*                  /* WHICH HAS BEEN PADDED WITH BLANKS.  AND PAD    */
*                  /* THE REMAINING 38 BYTES WITH BINARY ZEROES.     */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1005
*                  DO;                                             1005
         B     @RC00995                                            1005
@RF00995 DS    0H                                                  1006
*                  ENTNAME = ZEROAREA;                             1006
         MVC   ENTNAME(44),ZEROAREA                                1006
*                  ENTNAME(1:VOLSERLN) = ENTVAL(ENTIDX,1:VOLSERLN);
         LR    @07,ENTIDX                                          1007
         MH    @07,@CH01583                                        1007
         L     @02,@PC00001+4                                      1007
         L     @02,FDTPTR+8(,@02)                                  1007
         ALR   @02,@07                                             1007
         AL    @02,@CF01602                                        1007
         MVC   ENTNAME(6),ENTVAL-23(@02)                           1007
*                  ENTNM = ENTNAME;                        /*@YL026UE*/
         MVC   ENTNM(44),ENTNAME                                   1008
*                  OBJNMPTR = ADDR(ENTYNM);                /*@YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1009
         LA    @02,ENTYNM                                          1009
         ST    @02,OBJNMPTR(,@07)                                  1009
*                  BYPASFLG = OFF;                                 1010
         NI    BYPASFLG,B'01111111'                                1010
*                  NOTRQFLG = ON;                          /*@Y30SSMK*/
         OI    NOTRQFLG,B'10000000'                                1011
*                  END;                                            1012
*            ELSE                                                  1013
*                                                                  1013
*              /******************************************************/
*              /*                                                    */
*              /* FOR NON-SPACE REQUESTS, RESET BYPASS FLAG  @YL026UE*/
*              /*                                                    */
*              /******************************************************/
*                                                                  1013
*              DO;                                                 1013
         B     @RC00994                                            1013
@RF00994 DS    0H                                                  1014
*              BYPASFLG = OFF;                                     1014
         NI    BYPASFLG,B'01111111'                                1014
*              END;                                                1015
*          /**********************************************************/
*          /*                                                        */
*          /* PROCEED TO LOCATE THE REQUESTED ENTRY FROM THE CATALOG */
*          /* IF NO USER ERROR EXISTS.                               */
*          /*                                                        */
*          /**********************************************************/
*                                                                  1016
*          IF BYPASFLG = OFF                                       1016
*            THEN                                                  1016
@RC00994 TM    BYPASFLG,B'10000000'                                1016
         BNZ   @RF01016                                            1016
*ENTLOC:       DO;                                                 1017
*                                                                  1017
ENTLOC   DS    0H                                                  1018
*              /******************************************************/
*              /*                                                    */
*              /* DETERMINE IF ENTRY IS PASSWORD PROTECTED AND       */
*              /* USE THE ENTRY LEVEL PASSWORD ONLY IF THE CATALOG   */
*              /* PASSWORD IS NOT KNOWN.                             */
*              /*                                                    */
*              /******************************************************/
*                                                                  1018
*              IF ADDR(CATNM) > 0 & CATNMPLN > 0                   1018
*                THEN                                              1018
         L     @07,@PC00001+4                                      1018
         L     @07,FDTPTR+40(,@07)                                 1018
         LTR   @07,@07                                             1018
         BNP   @RF01018                                            1018
         CLI   CATNMPLN(@07),0                                     1018
         BNH   @RF01018                                            1018
*                  CTGPSWD = ADDR(CATNMPAS);                       1019
         L     @02,COMSWKPT(,COMPTR)                               1019
         L     @02,CTGPLPTR(,@02)                                  1019
         LA    @07,CATNMPAS(,@07)                                  1019
         ST    @07,CTGPSWD(,@02)                                   1019
*                ELSE                                              1020
*                  IF ENTPLN(ENTIDX) > 0                           1020
*                    THEN                                          1020
         B     @RC01018                                            1020
@RF01018 LR    @07,ENTIDX                                          1020
         MH    @07,@CH01583                                        1020
         L     @02,@PC00001+4                                      1020
         L     @02,FDTPTR+8(,@02)                                  1020
         LA    @01,0(@07,@02)                                      1020
         AL    @01,@CF01603                                        1020
         SLR   @00,@00                                             1020
         IC    @00,ENTPLN-2(,@01)                                  1020
         C     @00,@CF00123                                        1020
         BNH   @RF01020                                            1020
*                      CTGPSWD = ADDR(ENTPAS(ENTIDX));             1021
         L     @01,COMSWKPT(,COMPTR)                               1021
         L     @01,CTGPLPTR(,@01)                                  1021
         AL    @02,@CF01604                                        1021
         LA    @07,ENTPAS-3(@07,@02)                               1021
         ST    @07,CTGPSWD(,@01)                                   1021
*                    ELSE                                          1022
*                      CTGPSWD = NULLPTR;                          1022
         B     @RC01020                                            1022
@RF01020 L     @07,COMSWKPT(,COMPTR)                               1022
         L     @07,CTGPLPTR(,@07)                                  1022
         SLR   @02,@02                                             1022
         ST    @02,CTGPSWD(,@07)                                   1022
*              /******************************************************/
*              /*                                            @YL026UE*/
*              /* CONTROL FOR LOCATING CATALOG ACB WHEN NEEDED       */
*              /*                                            @YL026UE*/
*              /******************************************************/
*                                                                  1023
*              IF ADDR(CATNM) = NULLPTR                            1023
*                THEN                                              1023
@RC01020 DS    0H                                                  1023
@RC01018 L     @07,@PC00001+4                                      1023
         L     @07,FDTPTR+40(,@07)                                 1023
         LTR   @07,@07                                             1023
         BNZ   @RF01023                                            1023
*                  DO;                                     /*@YL026UE*/
*                    CTGGTALL = ON;    /*SEARCH ALL CATGS    @YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1025
         L     @07,CTGPLPTR(,@07)                                  1025
         OI    CTGGTALL(@07),B'01000000'                           1025
*                    IF CACBFLG ^= ON                              1026
*                      THEN                                        1026
         L     @02,COMFLGPT(,COMPTR)                               1026
         TM    CACBFLG(@02),B'10000000'                            1026
         BO    @RF01026                                            1026
*                        DO;                               /*@YL026UE*/
*                          CACBFLG = ON;                   /*@YL026UE*/
         OI    CACBFLG(@02),B'10000000'                            1028
*                          CTGCAT = ADDR(CATNAME);         /*@YL026UE*/
         L     @02,COMVARPT(,COMPTR)                               1029
         LA    @15,CATNAME(,@02)                                   1029
         ST    @15,CTGCAT(,@07)                                    1029
*                          CTGCNAME = ON;                  /*@YL026UE*/
         OI    CTGCNAME(@07),B'00000010'                           1030
*                          CTGNOFLD = CTGNOFLD + 1;        /*@YL026UE*/
         LA    @15,1                                               1031
         SLR   @14,@14                                             1031
         IC    @14,CTGNOFLD(,@07)                                  1031
         ALR   @14,@15                                             1031
         STC   @14,CTGNOFLD(,@07)                                  1031
*                          FPLCNT = FPLCNT + 1;            /*@YL026UE*/
         LH    @07,FPLCNT(,@02)                                    1032
         ALR   @07,@15                                             1032
         STH   @07,FPLCNT(,@02)                                    1032
*                          FPLEND = FPLEND + 1;            /*@ZA05939*/
         AH    @15,FPLEND(,@02)                                    1033
         STH   @15,FPLEND(,@02)                                    1033
*                          CATNAME = BLANK;                /*@YL026UE*/
         MVI   CATNAME+1(@02),C' '                                 1034
         MVC   CATNAME+2(42,@02),CATNAME+1(@02)                    1034
         MVI   CATNAME(@02),C' '                                   1034
*                        END;                              /*@YL026UE*/
*                  END;                                    /*@YL026UE*/
*                                                                  1036
@RF01026 DS    0H                                                  1037
*              /******************************************************/
*              /*                                            @YL026UE*/
*              /* GET THE APPROPRIATE OBJECT NAME, OR OBJECT NAME    */
*              /* LIST.                                      @YL026UE*/
*              /* IS IT AN ENTRY NAME? IF YES, THEN IS IT A  @YL026UE*/
*              /* GENERIC NAME (UCIR MACRO), OR AN UNQUALIFIED NAME  */
*              /* (UQUAL MACRO), OR A FULLY QUALIFIED ENTRY NAME?    */
*              /* IS IT A LEVEL NAME OR USERID (UCIR MACRO)? @YL026UE*/
*              /* OBTAIN OBJECT NAME(S), AND SET UP APPROPRIATE      */
*              /* ADDRESSING.                                @YL026UE*/
*              /*                                            @YL026UE*/
*              /******************************************************/
*                                                                  1037
*              IF ADDR(ENT) > NULLPTR & TYPELIST(1) ^= 'V'         1037
*                THEN                                              1037
@RF01023 SLR   @07,@07                                             1037
         L     @02,@PC00001+4                                      1037
         L     @02,FDTPTR+8(,@02)                                  1037
         CR    @02,@07                                             1037
         BNH   @RF01037                                            1037
         L     @01,COMVARPT(,COMPTR)                               1037
         CLI   TYPELIST(@01),C'V'                                  1037
         BE    @RF01037                                            1037
*                  DO;                                     /*@YL026UE*/
*                    IF ENTPOS(ENTIDX) > 0                         1039
*                      THEN            /*SET UP FOR UCIR MACRO       */
         LR    @15,ENTIDX                                          1039
         MH    @15,@CH01583                                        1039
         LA    @01,0(@15,@02)                                      1039
         AL    @01,@CF01605                                        1039
         SLR   @14,@14                                             1039
         IC    @14,ENTPOS-11(,@01)                                 1039
         CR    @14,@07                                             1039
         BNH   @RF01039                                            1039
*                        DO;                               /*@YL026UE*/
*                          CIRPWD = 0;                     /*@YL026UE*/
         LA    @04,CIRAREA                                         1041
         ST    @07,CIRPWD(,@04)                                    1041
*                          CIRCAT = 0;                     /*@YL026UE*/
         ST    @07,CIRCAT(,@04)                                    1042
*                          CIRTYP1Q = ON;                  /*@YL026UE*/
         OI    CIRTYP1Q(@04),B'10000000'                           1043
*                          CIRHLN = ENTPOS(ENTIDX) - 1;    /*@YL026UE*/
         LR    @01,@14                                             1044
         BCTR  @01,0                                               1044
         STH   @01,CIRHLN(,@04)                                    1044
*                          CIRTLN = ENTLEN(ENTIDX) - ENTPOS(ENTIDX);
         LCR   @14,@14                                             1045
         LA    @01,0(@15,@02)                                      1045
         AL    @01,@CF01601                                        1045
         SLR   @00,@00                                             1045
         IC    @00,ENTLEN-22(,@01)                                 1045
         ALR   @14,@00                                             1045
         STH   @14,CIRTLN(,@04)                                    1045
*                          CIRHDR = ADDR(ENTVAL(ENTIDX));  /*@YL026UE*/
         AL    @02,@CF01602                                        1046
         LA    @02,ENTVAL-23(@15,@02)                              1046
         ST    @02,CIRHDR(,@04)                                    1046
*                          IF CIRTLN = 0                           1047
*                            THEN                                  1047
         CR    @14,@07                                             1047
         BNE   @RF01047                                            1047
*                              CIRTLR = 0;                 /*@YL026UE*/
         ST    @07,CIRTLR(,@04)                                    1048
*                            ELSE                                  1049
*                              CIRTLR = ADDR(ENTVAL(ENTIDX))       1049
*                                       + ENTPOS(ENTIDX);  /*@YL026UE*/
         B     @RC01047                                            1049
@RF01047 LA    @07,CIRAREA                                         1049
         LR    @04,ENTIDX                                          1049
         MH    @04,@CH01583                                        1049
         L     @02,@PC00001+4                                      1049
         L     @02,FDTPTR+8(,@02)                                  1049
         LA    @01,0(@04,@02)                                      1049
         AL    @01,@CF01602                                        1049
         AL    @02,@CF01605                                        1049
         SLR   @00,@00                                             1049
         IC    @00,ENTPOS-11(@04,@02)                              1049
         ALR   @01,@00                                             1049
         ST    @01,CIRTLR(,@07)                                    1049
*                          CIRWKP = ADDR(OBJNMPTR);        /*@YL026UE*/
@RC01047 LA    @07,CIRAREA                                         1050
         L     @04,COMSWKPT(,COMPTR)                               1050
         LA    @04,OBJNMPTR(,@04)                                  1050
         ST    @04,CIRWKP(,@07)                                    1050
*                          CIRPID = GPID10;                /*@ZA05939*/
         MVC   CIRPID(4,@07),@CC01261                              1051
*                          IF ENTPLN(ENTIDX) > 0                   1052
*                            THEN                                  1052
         LR    @04,ENTIDX                                          1052
         MH    @04,@CH01583                                        1052
         L     @02,@PC00001+4                                      1052
         L     @02,FDTPTR+8(,@02)                                  1052
         LA    @01,0(@04,@02)                                      1052
         AL    @01,@CF01603                                        1052
         SLR   @00,@00                                             1052
         IC    @00,ENTPLN-2(,@01)                                  1052
         C     @00,@CF00123                                        1052
         BNH   @RF01052                                            1052
*                              CIRPWD = ADDR(ENTPAS(ENTIDX));      1053
         AL    @02,@CF01604                                        1053
         LA    @04,ENTPAS-3(@04,@02)                               1053
         ST    @04,CIRPWD(,@07)                                    1053
*                          IF ADDR(CATNM) > NULLPTR                1054
*                            THEN                                  1054
@RF01052 L     @07,@PC00001+4                                      1054
         L     @07,FDTPTR+40(,@07)                                 1054
         LTR   @07,@07                                             1054
         BNP   @RF01054                                            1054
*                              DO;                         /*@YL026UE*/
*                                CIRCAT = ADDR(CATNMVAL);  /*@YL026UE*/
         LA    @04,CIRAREA                                         1056
         LA    @02,CATNMVAL(,@07)                                  1056
         ST    @02,CIRCAT(,@04)                                    1056
*                                IF CATNMPLN > 0                   1057
*                                  THEN                            1057
         CLI   CATNMPLN(@07),0                                     1057
         BNH   @RF01057                                            1057
*                                    CIRPWD = ADDR(CATNMPAS);      1058
         LA    @07,CATNMPAS(,@07)                                  1058
         ST    @07,CIRPWD(,@04)                                    1058
*                              END;                        /*@YL026UE*/
*                                                                  1059
@RF01057 DS    0H                                                  1060
*                          /******************************************/
*                          /*                                @YL026UE*/
*                          /* ISSUE UCIR MACRO               @YL026UE*/
*                          /*                                @YL026UE*/
*                          /******************************************/
*                                                                  1060
*                          CALL IDCSACR0(GDTTBL,CIRAGL);   /*@YL026UE*/
*                                                                  1060
@RF01054 L     @07,@PC00001                                        1060
         ST    @07,@AL00001                                        1060
         LA    @02,CIRAREA                                         1060
         ST    @02,@AL00001+4                                      1060
         MVI   @AL00001+4,X'80'                                    1060
         L     @15,GDTCIR(,@07)                                    1060
         LA    @01,@AL00001                                        1060
         BALR  @14,@15                                             1060
*                          RESPECIFY RTNREG RSTD;                  1061
*                          TESTRC = RTNREG;                        1062
         LR    TESTRC,RTNREG                                       1062
*                          RESPECIFY RTNREG UNRSTD;        /*@Y30LSMK*/
*                        END;                              /*@YL026UE*/
*                      ELSE                                        1065
*                        DO;           /*MOVE ENTRY NAME TO OVLY AREA*/
         B     @RC01039                                            1065
@RF01039 DS    0H                                                  1066
*                          ENTNM = ENTVAL(ENTIDX);         /*@YL026UE*/
         LR    @07,ENTIDX                                          1066
         MH    @07,@CH01583                                        1066
         L     @02,@PC00001+4                                      1066
         L     @02,FDTPTR+8(,@02)                                  1066
         ST    @07,@TF00001                                        1066
         ALR   @07,@02                                             1066
         AL    @07,@CF01602                                        1066
         MVC   ENTNM(44),ENTVAL-23(@07)                            1066
*                          OBJNMPTR = ADDR(ENTYNM);        /*@YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1067
         LA    @15,ENTYNM                                          1067
         ST    @15,OBJNMPTR(,@07)                                  1067
*                          NOTRQFLG = ON;                  /*@Y30SSMK*/
         OI    NOTRQFLG,B'10000000'                                1068
*                          NOGENFLG = ON;                  /*@Y30SSMK*/
         L     @07,COMFLGPT(,COMPTR)                               1069
         OI    NOGENFLG(@07),B'10000000'                           1069
*                          IF ENTFUQ(ENTIDX) = ON                  1070
*                            THEN                                  1070
         LR    @07,@02                                             1070
         AL    @07,@TF00001                                        1070
         AL    @07,@CF01606                                        1070
         TM    ENTFUQ-12(@07),B'10000000'                          1070
         BNO   @RF01070                                            1070
*                              DO;     /*SET UP FOR UQUAL MACRO      */
*                                UQCATPTR = 0;             /*@YL026UE*/
         SLR   @07,@07                                             1072
         ST    @07,UQCATPTR                                        1072
*                                UQPASPTR = 0;             /*@YL026UE*/
         ST    @07,UQPASPTR                                        1073
*                                UQENTPTR = ADDR(ENTNM);   /*@YL026UE*/
         LA    @04,ENTNM                                           1074
         ST    @04,UQENTPTR                                        1074
*                                UQENTLEN = ENTLEN(ENTIDX);/*@YL026UE*/
         L     @04,@TF00001                                        1075
         AL    @04,@CF01601                                        1075
         SLR   @15,@15                                             1075
         IC    @15,ENTLEN-22(@04,@02)                              1075
         STH   @15,UQENTLEN                                        1075
*                                IF ENTPLN(ENTIDX) > 0             1076
*                                  THEN                            1076
         L     @04,@TF00001                                        1076
         AL    @04,@CF01603                                        1076
         SLR   @15,@15                                             1076
         IC    @15,ENTPLN-2(@04,@02)                               1076
         CR    @07,@15                                             1076
         BNL   @RF01076                                            1076
*                                    UQPASPTR = ADDR(ENTPAS(ENTIDX));
         L     @07,@TF00001                                        1077
         AL    @02,@CF01604                                        1077
         LA    @07,ENTPAS-3(@07,@02)                               1077
         ST    @07,UQPASPTR                                        1077
*                                IF ADDR(CATNM) > NULLPTR          1078
*                                  THEN                            1078
@RF01076 L     @07,@PC00001+4                                      1078
         L     @07,FDTPTR+40(,@07)                                 1078
         LTR   @07,@07                                             1078
         BNP   @RF01078                                            1078
*                                    DO;                   /*@YL026UE*/
*                                      UQCATPTR = ADDR(CATNMVAL);  1080
         LA    @04,CATNMVAL(,@07)                                  1080
         ST    @04,UQCATPTR                                        1080
*                                      IF CATNMPLN > 0             1081
*                                        THEN                      1081
         CLI   CATNMPLN(@07),0                                     1081
         BNH   @RF01081                                            1081
*                                          UQPASPTR = ADDR(CATNMPAS);
         LA    @07,CATNMPAS(,@07)                                  1082
         ST    @07,UQPASPTR                                        1082
*                                    END;                  /*@YL026UE*/
*                                                                  1083
@RF01081 DS    0H                                                  1084
*                                /************************************/
*                                /*                          @YL026UE*/
*                                /* ISSUE UQUAL MACRO        @YL026UE*/
*                                /*                          @YL026UE*/
*                                /************************************/
*                                                                  1084
*                             CALL IDCSAQL0 (GDTTBL,UQENTPTR,UQENTLEN,
*                                       UQCATPTR,UQPASPTR);/*@YL026UE*/
*                                                                  1084
@RF01078 L     @07,@PC00001                                        1084
         ST    @07,@AL00001                                        1084
         LA    @02,UQENTPTR                                        1084
         ST    @02,@AL00001+4                                      1084
         LA    @02,UQENTLEN                                        1084
         ST    @02,@AL00001+8                                      1084
         LA    @02,UQCATPTR                                        1084
         ST    @02,@AL00001+12                                     1084
         LA    @02,UQPASPTR                                        1084
         ST    @02,@AL00001+16                                     1084
         MVI   @AL00001+16,X'80'                                   1084
         L     @15,GDTQAL(,@07)                                    1084
         LA    @01,@AL00001                                        1084
         BALR  @14,@15                                             1084
*                                RESPECIFY RTNREG RSTD;            1085
*                                TESTRC = RTNREG;                  1086
         LR    TESTRC,RTNREG                                       1086
*                                RESPECIFY RTNREG UNRSTD;  /*@Y30LSMK*/
*                              END;                        /*@YL026UE*/
*                        END;                              /*@YL026UE*/
@RF01070 DS    0H                                                  1090
*                  END;                                    /*@YL026UE*/
*                                                                  1090
@RC01039 DS    0H                                                  1091
*              /******************************************************/
*              /*                                            @YL026UE*/
*              /* LEVEL OR USERID OBJECT NAME? SET UP FOR UCIR MACRO */
*              /*                                            @YL026UE*/
*              /******************************************************/
*                                                                  1091
*              IF ADDR(LVL) > NULLPTR × (UIDLN > 0 & ADDR(ENT)=NULLPTR)
*                THEN                                              1091
@RF01037 SLR   @07,@07                                             1091
         L     @02,@PC00001+4                                      1091
         C     @07,FDTPTR+80(,@02)                                 1091
         BL    @RT01091                                            1091
         CH    @07,UIDLN                                           1091
         BNL   @RF01091                                            1091
         C     @07,FDTPTR+8(,@02)                                  1091
         BNE   @RF01091                                            1091
@RT01091 DS    0H                                                  1092
*                  DO;                                     /*@YL026UE*/
*                    CIRPWD = 0;                           /*@YL026UE*/
         SLR   @07,@07                                             1093
         LA    @04,CIRAREA                                         1093
         ST    @07,CIRPWD(,@04)                                    1093
*                    IF ADDR(LVL) > NULLPTR                        1094
*                      THEN                                        1094
         L     @04,@PC00001+4                                      1094
         L     @04,FDTPTR+80(,@04)                                 1094
         CR    @04,@07                                             1094
         BNH   @RF01094                                            1094
*                        DO;           /*SET UP LEVEL NAME FOR UCIR  */
*                          IF LVLVAL(LVLLEN) = '*' × LVLVAL(1) = '*'
*                            THEN                                  1096
         SLR   @07,@07                                             1096
         IC    @07,LVLLEN(,@04)                                    1096
         ALR   @07,@04                                             1096
         CLI   LVLVAL-1(@07),C'*'                                  1096
         BE    @RT01096                                            1096
         CLI   LVLVAL(@04),C'*'                                    1096
         BNE   @RF01096                                            1096
@RT01096 DS    0H                                                  1097
*                              DO;     /*LVL NAME ERROR      @YL026UE*/
*                                ERRARGPT->DARGSMOD=LC1ID; /*@YL026UE*/
         L     @04,COMSWKPT(,COMPTR)                               1098
         L     @04,ERRARGPT(,@04)                                  1098
         MVC   DARGSMOD(3,@04),@CC01155                            1098
*                                ERRARGPT->DARGSENT=LCMSG11;       1099
         MVI   DARGSENT(@04),X'0B'                                 1099
*                                ERRARGPT->DARGDBP                 1100
*                                 =ADDR(LVLVAL);           /*@YL026UE*/
         L     @02,@PC00001+4                                      1100
         L     @02,FDTPTR+80(,@02)                                 1100
         LA    @15,LVLVAL(,@02)                                    1100
         ST    @15,DARGDBP(,@04)                                   1100
*                                ERRARGPT->DARGILP                 1101
*                                 =LVLLEN;                 /*@YL026UE*/
         SLR   @15,@15                                             1101
         IC    @15,LVLLEN(,@02)                                    1101
         STH   @15,DARGILP(,@04)                                   1101
*                                RETURN CODE(LASTCC12);    /*@YL026UE*/
         LA    @15,12                                              1102
         L     @14,@SA00004                                        1102
         LM    @00,@12,@SA00004+8                                  1102
         BR    @14                                                 1102
*                              END;                        /*@YL026UE*/
*                          IF LVLPOS = 0                           1104
*                            THEN                                  1104
@RF01096 L     @07,@PC00001+4                                      1104
         L     @07,FDTPTR+80(,@07)                                 1104
         CLI   LVLPOS(@07),0                                       1104
         BNE   @RF01104                                            1104
*                              DO;                         /*@YL026UE*/
*                              LVLNMWOA=LVLVAL;            /*@YL026UE*/
         MVC   LVLNMWOA(44),LVLVAL(@07)                            1106
*                              LVLNMWOA(LVLLEN+1)='.';     /*@YL026UE*/
         SLR   @04,@04                                             1107
         IC    @04,LVLLEN(,@07)                                    1107
         LA    @07,LVLNMWOA(@04)                                   1107
         MVI   0(@07),C'.'                                         1107
*                              CIRHLN=LVLLEN+1;            /*@YL026UE*/
         LA    @07,CIRAREA                                         1108
         AL    @04,@CF00045                                        1108
         STH   @04,CIRHLN(,@07)                                    1108
*                              CIRHDR=ADDR(LVLNMWOA);      /*@YL026UE*/
         LA    @04,LVLNMWOA                                        1109
         ST    @04,CIRHDR(,@07)                                    1109
*                              END;                        /*@YL026UE*/
*                            ELSE                                  1111
*                              DO;                         /*@YL026UE*/
         B     @RC01104                                            1111
@RF01104 DS    0H                                                  1112
*                              CIRHLN=LVLPOS-1;            /*@YL026UE*/
         LA    @07,CIRAREA                                         1112
         L     @04,@PC00001+4                                      1112
         L     @04,FDTPTR+80(,@04)                                 1112
         SLR   @02,@02                                             1112
         IC    @02,LVLPOS(,@04)                                    1112
         LR    @15,@02                                             1112
         BCTR  @15,0                                               1112
         STH   @15,CIRHLN(,@07)                                    1112
*                              CIRTLN=LVLLEN-LVLPOS;       /*@YL026UE*/
         SLR   @15,@15                                             1113
         IC    @15,LVLLEN(,@04)                                    1113
         SLR   @15,@02                                             1113
         STH   @15,CIRTLN(,@07)                                    1113
*                              CIRHDR=ADDR(LVLVAL);        /*@YL026UE*/
         LA    @04,LVLVAL(,@04)                                    1114
         ST    @04,CIRHDR(,@07)                                    1114
*                              CIRTLR=ADDR(LVLVAL)+LVLPOS; /*@YL026UE*/
         ALR   @04,@02                                             1115
         ST    @04,CIRTLR(,@07)                                    1115
*                              END;                        /*@YL026UE*/
*                        END;                              /*@YL026UE*/
*                      ELSE                                        1118
*                        DO;           /*SET UP USERID NAME FOR UCIR */
         B     @RC01094                                            1118
@RF01094 DS    0H                                                  1119
*                          CIRHLN = UIDLN+1;               /*@YL026UE*/
         LA    @07,CIRAREA                                         1119
         LH    @04,UIDLN                                           1119
         LA    @02,1                                               1119
         ALR   @02,@04                                             1119
         STH   @02,CIRHLN(,@07)                                    1119
*                          CIRTLN = 0;                     /*@YL026UE*/
         SLR   @02,@02                                             1120
         STH   @02,CIRTLN(,@07)                                    1120
*                          LVLNMWOA=UIDNM;                 /*@YL026UE*/
         MVI   LVLNMWOA+7,C' '                                     1121
         MVC   LVLNMWOA+8(36),LVLNMWOA+7                           1121
         MVC   LVLNMWOA(7),UIDNM                                   1121
*                          LVLNMWOA(UIDLN+1)='.';          /*@YL026UE*/
         LA    @01,LVLNMWOA(@04)                                   1122
         MVI   0(@01),C'.'                                         1122
*                          CIRHDR = ADDR(LVLNMWOA);        /*@YL026UE*/
         LA    @04,LVLNMWOA                                        1123
         ST    @04,CIRHDR(,@07)                                    1123
*                          CIRTLR = 0;                     /*@YL026UE*/
         ST    @02,CIRTLR(,@07)                                    1124
*                        END;                              /*@YL026UE*/
*                    CIRTYPAQ = ON;                        /*@YL026UE*/
@RC01094 LA    @07,CIRAREA                                         1126
         OI    CIRTYPAQ(@07),B'01000000'                           1126
*                    CIRWKP = ADDR(OBJNMPTR);              /*@YL026UE*/
         L     @04,COMSWKPT(,COMPTR)                               1127
         LA    @04,OBJNMPTR(,@04)                                  1127
         ST    @04,CIRWKP(,@07)                                    1127
*                    CIRPID = GPID10;                      /*@ZA05939*/
         MVC   CIRPID(4,@07),@CC01261                              1128
*                    IF ADDR(CATNM) > NULLPTR                      1129
*                      THEN                                        1129
         L     @04,@PC00001+4                                      1129
         L     @04,FDTPTR+40(,@04)                                 1129
         LTR   @04,@04                                             1129
         BNP   @RF01129                                            1129
*                        DO;                               /*@YL026UE*/
*                          CIRCAT = ADDR(CATNMVAL);        /*@YL026UE*/
         LA    @02,CATNMVAL(,@04)                                  1131
         ST    @02,CIRCAT(,@07)                                    1131
*                          IF CATNMPLN > 0                         1132
*                            THEN                                  1132
         CLI   CATNMPLN(@04),0                                     1132
         BNH   @RF01132                                            1132
*                              CIRPWD = ADDR(CATNMPAS);    /*@YL026UE*/
         LA    @04,CATNMPAS(,@04)                                  1133
         ST    @04,CIRPWD(,@07)                                    1133
*                        END;                              /*@YL026UE*/
*                                                                  1134
@RF01132 DS    0H                                                  1135
*                    /************************************************/
*                    /*                                      @YL026UE*/
*                    /* ISSUE UCIR MACRO                     @YL026UE*/
*                    /*                                      @YL026UE*/
*                    /************************************************/
*                                                                  1135
*                    CALL IDCSACR0(GDTTBL,CIRAGL);         /*@YL026UE*/
*                                                                  1135
@RF01129 L     @07,@PC00001                                        1135
         ST    @07,@AL00001                                        1135
         LA    @02,CIRAREA                                         1135
         ST    @02,@AL00001+4                                      1135
         MVI   @AL00001+4,X'80'                                    1135
         L     @15,GDTCIR(,@07)                                    1135
         LA    @01,@AL00001                                        1135
         BALR  @14,@15                                             1135
*                    RESPECIFY RTNREG RSTD;                        1136
*                    TESTRC = RTNREG;                              1137
         LR    TESTRC,RTNREG                                       1137
*                    RESPECIFY RTNREG UNRSTD;              /*@ZA05939*/
*                  END;                                    /*@YL026UE*/
*              /*********************************************@ZA01484*/
*              /*                                            @ZA01484*/
*              /* PRODUCE AN ABBREVIATED LIST OF DATA SET    @ZA01484*/
*              /* NAMES FOR THE TSO USER  FOR DEFAULT PARMS  @ZA01484*/
*              /* ALSO PRODUCE AN ABBREVIATED LIST OF VOLUME @Y30SSMK*/
*              /* INFORMATION FOR THE TSO USER WHEN ONLY THE @Y30SSMK*/
*              /* VOLUME PARAMETER IS SPECIFIED.             @Y30SSMK*/
*              /*                                            @ZA01484*/
*              /*********************************************@ZA01484*/
*              SHORTFLG = OFF;                             /*@OZ20485*/
@RF01091 NI    SHORTFLG,B'01111111'                                1140
*              SHVOLFLG = OFF;                             /*@OZ20485*/
         NI    SHVOLFLG,B'01111111'                                1141
*              IF UIDLN > 0 & TESTRC = 0 & TYPELIST = TYPECMPR     1142
*                & ADDR(LVL) = NULLPTR                             1142
*                & ADDR(ENT) = NULLPTR                             1142
*                & ADDR(CREAT) = NULLPTR                           1142
*                & ADDR(EXPIR) = NULLPTR                           1142
*                & ADDR(HIST) = NULLPTR                            1142
*                & ADDR(NUSE) = NULLPTR                            1142
*                & ADDR(FALL) = NULLPTR                            1142
*                & ADDR(ALLOC) = NULLPTR                           1142
*                THEN                                              1142
         SLR   @07,@07                                             1142
         CH    @07,UIDLN                                           1142
         BNL   @RF01142                                            1142
         CR    TESTRC,@07                                          1142
         BNE   @RF01142                                            1142
         L     @02,COMVARPT(,COMPTR)                               1142
         CLC   TYPELIST(11,@02),TYPECMPR                           1142
         BNE   @RF01142                                            1142
         L     @02,@PC00001+4                                      1142
         C     @07,FDTPTR+80(,@02)                                 1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+8(,@02)                                  1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+96(,@02)                                 1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+100(,@02)                                1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+104(,@02)                                1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+92(,@02)                                 1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+56(,@02)                                 1142
         BNE   @RF01142                                            1142
         C     @07,FDTPTR+64(,@02)                                 1142
         BNE   @RF01142                                            1142
*                  IF ADDR(VOL) = NULLPTR                          1143
*                    THEN                                          1143
         C     @07,FDTPTR+60(,@02)                                 1143
         BNE   @RF01143                                            1143
*                      DO;                                 /*@ZA01484*/
*                      SHORTFLG = ON;                      /*@ZA01484*/
         OI    SHORTFLG,B'10000000'                                1145
*                      CALL SHORTLST;                      /*@ZA01484*/
         L     @15,@CV00878                                        1146
         BALR  @14,@15                                             1146
*                      END;                                /*@ZA01484*/
*                    ELSE                                          1148
*                      SHVOLFLG = ON;                      /*@Y30SSMK*/
         B     @RC01143                                            1148
@RF01143 OI    SHVOLFLG,B'10000000'                                1148
*                ELSE;                                     /*@OZ20485*/
*                                                                  1149
@RF01142 DS    0H                                                  1150
*              /******************************************************/
*              /*                                            @YL026UE*/
*              /* LOOP CONTROLS FOR  STEPPING THRU THE OBJECT NAME   */
*              /* LIST.                                      @YL026UE*/
*              /* (1) RETURN CODE FROM UQUAL OR UCIR IS OK.  @YL026UE*/
*              /*     IF NOT TRY NEXT NAME OR RETURN.        @YL026UE*/
*              /* (2) STEP THRU THE OBJECT NAME LIST.        @YL026UE*/
*              /* (3) IF THE OBJECT NAME IS THE NAME OF A CATALOG    */
*              /*     ACCESSED BY THE UCIR MACRO, USE THIS CATALOG   */
*              /*     NAME IN LOCATING THE FOLLOWING OBJECT NAMES.   */
*              /*                                            @YL026UE*/
*              /******************************************************/
*                                                                  1150
*              IF TESTRC =  0  &  SHORTFLG = OFF                   1150
*                THEN                                              1150
@RC01142 LTR   TESTRC,TESTRC                                       1150
         BNZ   @RF01150                                            1150
         TM    SHORTFLG,B'10000000'                                1150
         BNZ   @RF01150                                            1150
*OBJLIST:          DO NLST = 1 TO OBJCNT;                  /*@YL026UE*/
OBJLIST  LA    @07,1                                               1151
         B     @DE01151                                            1151
@DL01151 DS    0H                                                  1152
*                  CTGGTNXT = OFF;                         /*@YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1152
         L     @07,CTGPLPTR(,@07)                                  1152
         NI    CTGGTNXT(@07),B'11101111'                           1152
*                  CTGNAME = ON;                           /*@YL026UE*/
         OI    CTGNAME(@07),B'00000100'                            1153
*                  ENTCLFLG = OFF;                         /*@YL026UE*/
*                                                                  1154
*                                                                  1154
         L     @07,COMFLGPT(,COMPTR)                               1154
         NI    ENTCLFLG(@07),B'01111111'                           1154
*        IF GDTDBG = NULLPTR                                       1155
*          THEN;                                                   1155
         L     @07,@PC00001                                        1155
         L     @07,GDTDBG(,@07)                                    1155
         LTR   @07,@07                                             1155
         BZ    @RT01155                                            1155
*          ELSE                                                    1157
*            DO;                                                   1157
*              DMPINDEX = ADDR(DOBJNAM);                           /*@Y
*026UE*/                                                           1158
*                                                                  1158
         LA    DMPINDEX,DOBJNAM                                    1158
*              DMPITMNM = 'CATNAME';                               1159
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1159
         MVC   DMPITMNM(7,DMPINDEX),@CC01433                       1159
*              DMPITMPT = ADDR(CATNAME);                           1160
         L     @07,COMVARPT(,COMPTR)                               1160
         LA    @04,CATNAME(,@07)                                   1160
         ST    @04,DMPITMPT(,DMPINDEX)                             1160
*              DMPITMLN = 44;                                      1161
         LA    @04,44                                              1161
         STH   @04,DMPITMLN(,DMPINDEX)                             1161
*              DMPITMTP = 'C';                                     1162
         MVI   DMPITMTP(DMPINDEX),C'C'                             1162
*              DMPINDEX = DMPINDEX + DMPELEMT;         /*@YL026UE*/
*                                                                  1163
         LA    @15,16                                              1163
         ALR   DMPINDEX,@15                                        1163
*              DMPITMNM = 'OBJCNT';                                1164
         MVI   DMPITMNM+6(DMPINDEX),C' '                           1164
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1164
         MVC   DMPITMNM(6,DMPINDEX),@CC01434                       1164
*              DMPITMPT = ADDR(OBJCNT);                            1165
         L     @14,COMSWKPT(,COMPTR)                               1165
         L     @01,OBJNMPTR(,@14)                                  1165
         ST    @01,DMPITMPT(,DMPINDEX)                             1165
*              DMPITMLN = 4;                                       1166
         MVC   DMPITMLN(2,DMPINDEX),@CH00050                       1166
*              DMPITMTP = 'F';                                     1167
         MVI   DMPITMTP(DMPINDEX),C'F'                             1167
*              DMPINDEX = DMPINDEX + DMPELEMT;         /*@YL026UE*/
*                                                                  1168
         ALR   DMPINDEX,@15                                        1168
*              DMPITMNM = 'OBJTYP';                                1169
         MVI   DMPITMNM+6(DMPINDEX),C' '                           1169
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1169
         MVC   DMPITMNM(6,DMPINDEX),@CC01435                       1169
*              DMPITMPT = ADDR(OBJTYP(NLST));                      1170
         LH    @00,NLST(,@07)                                      1170
         MH    @00,@CH01270                                        1170
         LR    @07,@00                                             1170
         AL    @07,@CF01607                                        1170
         LA    @07,OBJTYP-4(@07,@01)                               1170
         ST    @07,DMPITMPT(,DMPINDEX)                             1170
*              DMPITMLN = 1;                                       1171
         LA    @07,1                                               1171
         STH   @07,DMPITMLN(,DMPINDEX)                             1171
*              DMPITMTP = 'C';                                     1172
         MVI   DMPITMTP(DMPINDEX),C'C'                             1172
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1173
*                                                                  1173
         ALR   DMPINDEX,@15                                        1173
*              DMPITMNM = 'OBJNM';                                 1174
         MVI   DMPITMNM+5(DMPINDEX),C' '                           1174
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         1174
         MVC   DMPITMNM(5,DMPINDEX),@CC01436                       1174
*              DMPITMPT = ADDR(OBJNM(NLST));                       1175
         LR    @07,@00                                             1175
         AL    @01,@CF01608                                        1175
         LA    @07,OBJNM-5(@07,@01)                                1175
         ST    @07,DMPITMPT(,DMPINDEX)                             1175
*              DMPITMLN = 44;                                      1176
         STH   @04,DMPITMLN(,DMPINDEX)                             1176
*              DMPITMTP = 'C';                                     1177
         MVI   DMPITMTP(DMPINDEX),C'C'                             1177
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1178
*                                                                  1178
         ALR   DMPINDEX,@15                                        1178
*              DMPITMNM = 'CACBFLG';                               1179
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1179
         MVC   DMPITMNM(7,DMPINDEX),@CC01437                       1179
*              DMPITMPT = ADDR(CACBFLG);                           1180
         L     @07,COMFLGPT(,COMPTR)                               1180
         ST    @07,DMPITMPT(,DMPINDEX)                             1180
*              DMPITMLN = 1;                                       1181
         LA    @04,1                                               1181
         STH   @04,DMPITMLN(,DMPINDEX)                             1181
*              DMPITMTP = 'B';                                     1182
         MVI   DMPITMTP(DMPINDEX),C'B'                             1182
*              DMPINDEX = DMPINDEX + DMPELEMT;          /*@YL026UE*/
*                                                                  1183
         ALR   DMPINDEX,@15                                        1183
*              DMPITMNM = 'CTGOPTN2';                              1184
         MVC   DMPITMNM(8,DMPINDEX),@CC01438                       1184
*              DMPITMPT = ADDR(CTGOPTN2);                          1185
         L     @01,CTGPLPTR(,@14)                                  1185
         LA    @14,CTGOPTN2(,@01)                                  1185
         ST    @14,DMPITMPT(,DMPINDEX)                             1185
*              DMPITMLN = 1;                                       1186
         STH   @04,DMPITMLN(,DMPINDEX)                             1186
*              DMPITMTP = 'B';                                     1187
         MVI   DMPITMTP(DMPINDEX),C'B'                             1187
*              DMPINDEX = DMPINDEX + DMPELEMT;         /*@YL026UE*/
*                                                                  1188
         ALR   DMPINDEX,@15                                        1188
*              DMPITMNM = 'FLAGS';                                 1189
         MVI   DMPITMNM+5(DMPINDEX),C' '                           1189
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         1189
         MVC   DMPITMNM(5,DMPINDEX),@CC01439                       1189
*              DMPITMPT = ADDR(FLAGS);                             1190
         ST    @07,DMPITMPT(,DMPINDEX)                             1190
*              DMPITMLN = 33;                                      1191
         MVC   DMPITMLN(2,DMPINDEX),@CH01139                       1191
*              DMPITMTP = 'H';                                     1192
         MVI   DMPITMTP(DMPINDEX),C'H'                             1192
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1193
*                                                                  1193
         ALR   DMPINDEX,@15                                        1193
*              DMPITMNM = 'TYPECNT';                               1194
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1194
         MVC   DMPITMNM(7,DMPINDEX),@CC01441                       1194
*              DMPITMPT = ADDR(TYPECNT);                           1195
         L     @07,COMVARPT(,COMPTR)                               1195
         LA    @04,TYPECNT(,@07)                                   1195
         ST    @04,DMPITMPT(,DMPINDEX)                             1195
*              DMPITMLN = 2;                                       1196
         MVC   DMPITMLN(2,DMPINDEX),@CH00161                       1196
*              DMPITMTP = 'F';                                     1197
         MVI   DMPITMTP(DMPINDEX),C'F'                             1197
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1198
*                                                                  1198
         ALR   DMPINDEX,@15                                        1198
*              DMPITMNM = 'TYPELIST';                              1199
         MVC   DMPITMNM(8,DMPINDEX),@CC01442                       1199
*              DMPITMPT = ADDR(TYPELIST);                          1200
         LA    @07,TYPELIST(,@07)                                  1200
         ST    @07,DMPITMPT(,DMPINDEX)                             1200
*              DMPITMLN = 9;                                       1201
         MVC   DMPITMLN(2,DMPINDEX),@CH00646                       1201
*              DMPITMTP = 'C';                                     1202
         MVI   DMPITMTP(DMPINDEX),C'C'                             1202
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1203
*                                                                  1203
         ALR   DMPINDEX,@15                                        1203
*              DMPTRM = DMPTRMVL;                                  1204
         MVI   DMPTRM(DMPINDEX),X'FF'                              1204
*            END;                                           /*@YL026UE*
*                                                                  1205
*        IF GDTDBG = NULLPTR                                       1206
*          THEN;                                                   1206
@RT01155 L     @07,@PC00001                                        1206
         L     @07,GDTDBG(,@07)                                    1206
         LTR   @07,@07                                             1206
         BZ    @RT01206                                            1206
*          ELSE                                                    1208
*            CALL IDCDB010(GDTTBL,'LCOJ',ADDR(DOBJNAM));           1208
         L     @07,@PC00001                                        1208
         ST    @07,@AL00001                                        1208
         LA    @04,@CC01443                                        1208
         ST    @04,@AL00001+4                                      1208
         LA    @04,DOBJNAM                                         1208
         ST    @04,@AFTEMPS                                        1208
         LA    @04,@AFTEMPS                                        1208
         ST    @04,@AL00001+8                                      1208
         MVI   @AL00001+8,X'80'                                    1208
         L     @15,GDTDBG(,@07)                                    1208
         LA    @01,@AL00001                                        1208
         BALR  @14,@15                                             1208
*                                                          /*@YL026UE*/
*                                                                  1209
*                    IF OBJTYP(NLST) ^= 'F0'X                      1209
*                      THEN                                        1209
@RT01206 L     @07,COMVARPT(,COMPTR)                               1209
         LH    @07,NLST(,@07)                                      1209
         MH    @07,@CH01270                                        1209
         L     @04,COMSWKPT(,COMPTR)                               1209
         L     @04,OBJNMPTR(,@04)                                  1209
         ALR   @04,@07                                             1209
         AL    @04,@CF01607                                        1209
         CLI   OBJTYP-4(@04),X'F0'                                 1209
         BE    @RF01209                                            1209
*NOTCATNM:               DO;           /*OBJECTNAME IN CPL FOR LOCATE*/
NOTCATNM DS    0H                                                  1211
*                          CTGENT = ADDR(OBJNM(NLST));     /*@YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1211
         L     @02,CTGPLPTR(,@07)                                  1211
         L     @15,COMVARPT(,COMPTR)                               1211
         LH    @14,NLST(,@15)                                      1211
         MH    @14,@CH01270                                        1211
         L     @07,OBJNMPTR(,@07)                                  1211
         AL    @07,@CF01608                                        1211
         LA    @07,OBJNM-5(@14,@07)                                1211
         ST    @07,CTGENT(,@02)                                    1211
*                          PGSPCFLG = OFF;                 /*@YL026UE*/
*                                                                  1212
         L     @07,COMFLGPT(,COMPTR)                               1212
         NI    PGSPCFLG(@07),B'01111111'                           1212
*              /******************************************************/
*              /*                                                    */
*              /* LOCATE THE FIELD INFORMATION FOR THE ENTRY.        */
*              /* PROCESS THE FIELDS FOR EITHER A SUCCESSFUL LOCATE  */
*              /* OR PASSWORD VERIFICATION FAILURE WITH A NAME       */
*              /* REQUEST ONLY, THAT IS NOT DATE RESTRICTED, @Y30SSMK*/
*              /* OR RESTRICTED TO NOTUSABLE DATA SETS.      @Y30SSMK*/
*              /* (IN THE CASE OF PASSWORD FAILURE, THE NAME IS      */
*              /* RETURNED ANYWAY AND CAN BE PROCESSED.)             */
*              /*                                                    */
*              /******************************************************/
*                                                                  1213
*              CALL LOCPROC (FPLEND,CACBFLG,ENTNMFLG);             1213
         LA    @02,FPLEND(,@15)                                    1213
         ST    @02,@AL00001                                        1213
         ST    @07,@AL00001+4                                      1213
         LA    @07,ENTNMFLG(,@07)                                  1213
         ST    @07,@AL00001+8                                      1213
         L     @15,@CV00870                                        1213
         LA    @01,@AL00001                                        1213
         BALR  @14,@15                                             1213
*              RESPECIFY RTNREG RSTD;                              1214
*              TESTRC = RTNREG;                                    1215
         LR    TESTRC,RTNREG                                       1215
*              RESPECIFY RTNREG UNRSTD;                            1216
*              IF TESTRC = 0  ×                                    1217
*                (CATRC = CRCBADPW  &  ADDR(NAME) > NULLPTR  &     1217
*                DATEFLG = OFF  &  NUSEFLG = OFF)                  1217
*                THEN                                              1217
         SLR   @07,@07                                             1217
         CR    TESTRC,@07                                          1217
         BE    @RT01217                                            1217
         L     @02,COMVARPT(,COMPTR)                               1217
         CLC   CATRC(2,@02),@CH01313                               1217
         BNE   @RF01217                                            1217
         L     @02,@PC00001+4                                      1217
         C     @07,FDTPTR+52(,@02)                                 1217
         BNL   @RF01217                                            1217
         L     @07,COMFLGPT(,COMPTR)                               1217
         TM    DATEFLG(@07),B'10000000'                            1217
         BNZ   @RF01217                                            1217
         TM    NUSEFLG(@07),B'10000000'                            1217
         BNZ   @RF01217                                            1217
@RT01217 DS    0H                                                  1218
*                  /**************************************************/
*                  /*                                                */
*                  /* SAVE THE ENTRY TYPE FOR ROUTING TO THE         */
*                  /* APPROPRIATE FORMATTING ROUTINE. THE ENTRY TYPE */
*                  /* IS RETURNED IN A SPECIAL AREA IF PASSWORD      */
*                  /* VERIFICATION FAILED. INVOKE VOLLIST FOR AN     */
*                  /* ABBREVIATED VOLUME LIST FOR THE TSO USER.      */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1218
*ENTROUTE:         DO;                                             1218
ENTROUTE DS    0H                                                  1219
*                  IF CATRC = 0                                    1219
*                    THEN                                          1219
         L     @07,COMVARPT(,COMPTR)                               1219
         LH    @04,CATRC(,@07)                                     1219
         LTR   @04,@04                                             1219
         BNZ   @RF01219                                            1219
*                      DO;                                 /*@YL026UE*/
*                      HOLDETYP = ETYPFPT->CTGFLPT(1)->ETYP;       1221
         L     @04,COMFPLPT(,COMPTR)                               1221
         L     @02,ETYPFPT(,@04)                                   1221
         L     @02,CTGFLPT(,@02)                                   1221
         MVC   HOLDETYP(1,@07),ETYP(@02)                           1221
*                      IF HOLDETYP=CTGTCL &                        1222
*                         CATTRFPT->CTGFLPT(1)->PGSPAC ^= 'FF'X &  1222
*                         CATTRFPT->CTGFLPT(1)->PGSP=ON      /*YM6557*/
*                        THEN                                      1222
         CLI   HOLDETYP(@07),C'C'                                  1222
         BNE   @RF01222                                            1222
         L     @07,CATTRFPT(,@04)                                  1222
         L     @07,CTGFLPT(,@07)                                   1222
         CLI   PGSPAC(@07),X'FF'                                   1222
         BE    @RF01222                                            1222
         TM    PGSP(@07),B'00000001'                               1222
         BNO   @RF01222                                            1222
*                          PGSPCFLG = ON;                  /*@YL026UE*/
         L     @07,COMFLGPT(,COMPTR)                               1223
         OI    PGSPCFLG(@07),B'10000000'                           1223
*                      END;                                /*@YL026UE*/
*                    ELSE                                          1225
*                      DO;                                 /*@YL026UE*/
         B     @RC01219                                            1225
@RF01219 DS    0H                                                  1226
*                      HOLDETYP = SUPPTYPE;                        1226
         L     @07,COMVARPT(,COMPTR)                               1226
         L     @04,COMSWKPT(,COMPTR)                               1226
         L     @04,CTGPLPTR(,@04)                                  1226
         L     @04,CTGWKA(,@04)                                    1226
         MVC   HOLDETYP(1,@07),SUPPTYPE(@04)                       1226
*                      IF HOLDETYP = CTGTPGSP                      1227
*                        THEN                                      1227
         CLI   HOLDETYP(@07),C'P'                                  1227
         BNE   @RF01227                                            1227
*                          DO;                             /*@YL026UE*/
*                          PGSPCFLG = ON;                  /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               1229
         OI    PGSPCFLG(@04),B'10000000'                           1229
*                          HOLDETYP = CTGTCL;              /*@YL026UE*/
         MVI   HOLDETYP(@07),C'C'                                  1230
*                          END;                            /*@YL026UE*/
*                      END;                                /*@YL026UE*/
@RF01227 DS    0H                                                  1233
*                  IF SHVOLFLG = ON                                1233
*                    THEN                                          1233
@RC01219 TM    SHVOLFLG,B'10000000'                                1233
         BNO   @RF01233                                            1233
*                      CALL VOLLIST;                       /*@Y30SSMK*/
         L     @15,@CV00879                                        1234
         BALR  @14,@15                                             1234
*                    ELSE                                          1235
*NONTSOVL:             DO;                                 /*@Y30SSMK*/
         B     @RC01233                                            1235
@RF01233 DS    0H                                                  1235
NONTSOVL DS    0H                                                  1236
*                      CLENTFLG = OFF;                     /*@Y30SSMK*/
*                                                                  1236
         L     @07,COMFLGPT(,COMPTR)                               1236
         NI    CLENTFLG(@07),B'01111111'                           1236
*                  /**************************************************/
*                  /*                                                */
*                  /* IF THE RETRIEVED ENTRY IS NOT RESTRICTED BY A  */
*                  /* TYPE REQUEST, HAVE THE APPROPRIATE PROCEDURE   */
*                  /* LIST THE ENTRY.                                */
*                  /* IF THE RETRIEVED ENTRY IS DATE RESTRICTED,     */
*                  /* INVOKE CKDTPROC TO TEST THE CREATION AND       */
*                  /* EXPIRATION DATES.                      @Y30LSMK*/
*                  /* NOTE -- A CLUSTER OR AIX ENTRY THAT IS @Y30SSMK*/
*                  /* NOT RESTRICTED BY A TYPE SPECIFICATION @Y30SSMK*/
*                  /* WILL BE LISTED WITH THEIR ASSOCIATED   @Y30SSMK*/
*                  /* DATA, INDEX AND PATH ENTRIES.          @Y30SSMK*/
*                  /* A CLUSTER OR AIX THAT IS DATE          @Y30SSMK*/
*                  /* RESTRICTED WILL BE LISTED WITH THERE   @Y30SSMK*/
*                  /* ASSOCIATED DATA, INDEX, AND PATH       @Y30SSMK*/
*                  /* ENTRIES ONLY IF THE DATE TEST IS       @Y30SSMK*/
*                  /* SUCCESSFUL.                            @Y30SSMK*/
*                  /* ALSO, A PAGESPACE OR GDG ENTRY         @Y30SSMK*/
*                  /* THAT IS NOT RESTRICTED BY A TYPE SPECIFICATION */
*                  /* WILL BE LISTED WITH THEIR RESPECTIVE DATA OR   */
*                  /* NONVSAM ASSOCIATIONS.  A PAGESPACE OR GDG      */
*                  /* ENTRY THAT IS DATE RESTRICTED WILL BE LISTED   */
*                  /* WITH THEIR RESPECTIVE DATA OR NONVSAM ENTRIES  */
*                  /* ONLY IF THE DATE TEST IS SUCCESSFUL.   @Y30SSMK*/
*                  /* IF A NON-TERMINATING ERROR OCCURRED, ISSUE A   */
*                  /* MESSAGE.  IF A TERMINATING ERROR OCCURRED,     */
*                  /* EXIT FROM THE PROCEDURE.  OTHERWISE, PROCESS   */
*                  /* THE NEXT ENTRY IN THE LIST.                    */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1237
*                  IF TYPECNT = 0                                  1237
*                    THEN                                          1237
         L     @04,COMVARPT(,COMPTR)                               1237
         LH    @04,TYPECNT(,@04)                                   1237
         LTR   @04,@04                                             1237
         BNZ   @RF01237                                            1237
*                      DO;                                         1238
*                      CRDTSW = OFF;                       /*@Y30LSMK*/
         NI    CRDTSW(@07),B'01111111'                             1239
*                      EXDTSW = OFF;                       /*@Y30LSMK*/
         NI    EXDTSW(@07),B'01111111'                             1240
*                      IF DATEFLG = ON                             1241
*                        THEN                                      1241
         TM    DATEFLG(@07),B'10000000'                            1241
         BNO   @RF01241                                            1241
*                          CALL CKDTPROC;                  /*@Y30LSMK*/
         BAL   @14,CKDTPROC                                        1242
*                      IF DATEFLG = OFF  ×                         1243
*                        (CRDTSW = ON  &  EXDTSW = ON)             1243
*                        THEN                                      1243
@RF01241 L     @07,COMFLGPT(,COMPTR)                               1243
         TM    DATEFLG(@07),B'10000000'                            1243
         BZ    @RT01243                                            1243
         TM    CRDTSW(@07),B'10000000'                             1243
         BNO   @RF01243                                            1243
         TM    EXDTSW(@07),B'10000000'                             1243
         BNO   @RF01243                                            1243
@RT01243 DS    0H                                                  1244
*                          DO;                             /*@Y30LSMK*/
*                          CALL RTEPROC (CLENTFLG);                1245
         L     @07,COMFLGPT(,COMPTR)                               1245
         LA    @07,CLENTFLG(,@07)                                  1245
         ST    @07,@AL00001                                        1245
         LA    @01,@AL00001                                        1245
         BAL   @14,RTEPROC                                         1245
*                          RESPECIFY RTNREG RSTD;                  1246
*                          TESTRC = RTNREG;                        1247
         LR    TESTRC,RTNREG                                       1247
*                          RESPECIFY RTNREG UNRSTD;                1248
*                          IF TESTRC ^= 0                          1249
*                            THEN                                  1249
         LTR   TESTRC,TESTRC                                       1249
         BZ    @RF01249                                            1249
*                              IF TESTRC < LASTCC12                1250
*                                THEN                              1250
         C     TESTRC,@CF00586                                     1250
         BNL   @RF01250                                            1250
*                                  CALL ERRPROC;                   1251
         L     @15,@CV00872                                        1251
         BALR  @14,@15                                             1251
*                                ELSE                              1252
*                                  RETURN CODE(LASTCC12);          1252
         B     @RC01250                                            1252
@RF01250 LA    @15,12                                              1252
         L     @14,@SA00004                                        1252
         LM    @00,@12,@SA00004+8                                  1252
         BR    @14                                                 1252
*                          END;                            /*@Y30LSMK*/
*                      END;                                        1254
*                    /************************************************/
*                    /*                                              */
*                    /* IF THE RETRIEVED ENTRY IS RESTRICTED BY A    */
*                    /* TYPE REQUEST, LIST THE ENTRY ONLY IF THE     */
*                    /* TYPE SPECIFICATION IS MET.                   */
*                    /*                                              */
*                    /************************************************/
*                                                                  1255
*                    ELSE                                          1255
*ENTCOND:              DO;                                         1255
         B     @RC01237                                            1255
@RF01237 DS    0H                                                  1255
ENTCOND  DS    0H                                                  1256
*                      TYPOKFLG = OFF; /*QUALIFICATION FLAG          */
         NI    TYPOKFLG,B'01111111'                                1256
*                      BADPWFLG=OFF;   /*PASSWORD VERIFICATION FLAG  */
*                                                                  1257
         NI    BADPWFLG,B'01111111'                                1257
*                      /**********************************************/
*                      /*                                            */
*                      /* CHECK IF THE RETRIEVED ENTRY IS THE        */
*                      /* SPECIFIED TYPE, OR THE OBJECT TYPE IS 'C'  */
*                      /* AND 'P' WAS SPECIFIED OR THE OBJECT TYPE   */
*                      /* IS 'B' AND 'A' WAS SPECIFIED.      @YL026UE*/
*                      /*                                            */
*                      /**********************************************/
*                                                                  1258
*ENTNEST1:             DO TYPIDX = 1 TO TYPECNT WHILE (TYPOKFLG=OFF);
ENTNEST1 LA    TYPIDX,1                                            1258
         B     @DE01258                                            1258
@DL01258 TM    TYPOKFLG,B'10000000'                                1258
         BNZ   @DC01258                                            1258
*                        IF (HOLDETYP = TYPELIST(TYPIDX))          1259
*                           × (HOLDETYP = CTGTCL                   1259
*                           & TYPELIST(TYPIDX) = CTGTPGSP          1259
*                           & PGSPCFLG = ON)                       1259
*                          THEN                                    1259
         L     @04,COMVARPT(,COMPTR)                               1259
         LR    @02,@04                                             1259
         ALR   @02,TYPIDX                                          1259
         CLC   HOLDETYP(1,@04),TYPELIST-1(@02)                     1259
         BE    @RT01259                                            1259
         CLI   HOLDETYP(@04),C'C'                                  1259
         BNE   @RF01259                                            1259
         ALR   @04,TYPIDX                                          1259
         CLI   TYPELIST-1(@04),C'P'                                1259
         BNE   @RF01259                                            1259
         L     @04,COMFLGPT(,COMPTR)                               1259
         TM    PGSPCFLG(@04),B'10000000'                           1259
         BNO   @RF01259                                            1259
@RT01259 DS    0H                                                  1260
*ENTNEST2:                   DO;                                   1260
ENTNEST2 DS    0H                                                  1261
*                            IF HOLDETYP = CTGTCL                  1261
*                               & TYPELIST(TYPIDX) = CTGTCL        1261
*                               & PGSPCFLG = ON                    1261
*                              THEN;                       /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               1261
         CLI   HOLDETYP(@04),C'C'                                  1261
         BNE   @RF01261                                            1261
         ALR   @04,TYPIDX                                          1261
         CLI   TYPELIST-1(@04),C'C'                                1261
         BNE   @RF01261                                            1261
         L     @04,COMFLGPT(,COMPTR)                               1261
         TM    PGSPCFLG(@04),B'10000000'                           1261
         BO    @RT01261                                            1261
*                              ELSE                                1263
*                                TYPOKFLG = ON;            /*@YL026UE*/
@RF01261 OI    TYPOKFLG,B'10000000'                                1263
*                            IF HOLDETYP = CTGTGBS & ATYPFLG = ON  1264
*                              THEN                                1264
@RT01261 L     @04,COMVARPT(,COMPTR)                               1264
         CLI   HOLDETYP(@04),C'B'                                  1264
         BNE   @RF01264                                            1264
         L     @04,COMFLGPT(,COMPTR)                               1264
         TM    ATYPFLG(@04),B'10000000'                            1264
         BNO   @RF01264                                            1264
*                                CLENTFLG = ON;            /*@Y30LSMK*/
         OI    CLENTFLG(@04),B'10000000'                           1265
*                            IF (HOLDETYP = CTGTCL                 1266
*                              ×  HOLDETYP = CTGTAIX)              1266
*                              &  TYPOKFLG = ON                    1266
*                              THEN                                1266
*                                                                  1266
@RF01264 L     @04,COMVARPT(,COMPTR)                               1266
         CLI   HOLDETYP(@04),C'C'                                  1266
         BE    @GL00084                                            1266
         CLI   HOLDETYP(@04),C'G'                                  1266
         BNE   @RF01266                                            1266
@GL00084 TM    TYPOKFLG,B'10000000'                                1266
         BNO   @RF01266                                            1266
*                                /************************************/
*                                /*                                  */
*                                /* RESTRICTED ENTRY IS A    @Y30SSMK*/
*                                /* CLUSTER OR AIX.          @Y30SSMK*/
*                                /* IF THERE ARE DATA OR     @Y30SSMK*/
*                                /* INDEX OR PATH TYPE       @Y30SSMK*/
*                                /* SPECIFICATIONS FOR THE   @Y30SSMK*/
*                                /* CLUSTER OR AIX ENTRY     @Y30SSMK*/
*                                /* AND PASSWORD VERIFICATION        */
*                                /* FAILED, THEN NO ASSOCIATED INFO  */
*                                /* WAS RETURNED IN ORDER TO LOCATE  */
*                                /* VIA C.I.NO. THE DATA OR  @Y30SSMK*/
*                                /* INDEX OR PATH ENTRIES.   @Y30SSMK*/
*                                /* HENCE OUTPUT THE         @Y30SSMK*/
*                                /* APPROPRIATE ERROR MESSAGES AND   */
*                                /* UPDATE THE ENTRY SUPPRESSION     */
*                                /* TALLY.                           */
*                                /*                                  */
*                                /************************************/
*                                                                  1267
*ENTNEST3:                       DO;                               1267
ENTNEST3 DS    0H                                                  1268
*                                CLENTFLG = ON;                    1268
         L     @04,COMFLGPT(,COMPTR)                               1268
         OI    CLENTFLG(@04),B'10000000'                           1268
*                                IF CATRC = CRCBADPW  &  TYPECNT > 1
*                                  THEN                            1269
         L     @04,COMVARPT(,COMPTR)                               1269
         CLC   CATRC(2,@04),@CH01313                               1269
         BNE   @RF01269                                            1269
         CLC   TYPECNT(2,@04),@CH00045                             1269
         BNH   @RF01269                                            1269
*ENTNEST4:                           DO JJ = 1 TO TYPECNT          1270
*                                      WHILE (BADPWFLG=OFF);       1270
ENTNEST4 LA    JJ,1                                                1270
         B     @DE01270                                            1270
@DL01270 TM    BADPWFLG,B'10000000'                                1270
         BNZ   @DC01270                                            1270
*                                      IF TYPELIST(JJ) = CTGTDATA  ×
*                                        (TYPELIST(JJ) = CTGTINDX &
*                                        PGSPCFLG = OFF)  ×        1271
*                                        (TYPELIST(JJ) = CTGTPTH & 1271
*                                        PGSPCFLG = OFF)           1271
*                                        THEN                      1271
         L     @04,COMVARPT(,COMPTR)                               1271
         LR    @01,@04                                             1271
         ALR   @01,JJ                                              1271
         CLI   TYPELIST-1(@01),C'D'                                1271
         BE    @RT01271                                            1271
         ALR   @04,JJ                                              1271
         CLI   TYPELIST-1(@04),C'I'                                1271
         BNE   @GL00087                                            1271
         L     @04,COMFLGPT(,COMPTR)                               1271
         TM    PGSPCFLG(@04),B'10000000'                           1271
         BZ    @RT01271                                            1271
@GL00087 L     @04,COMVARPT(,COMPTR)                               1271
         ALR   @04,JJ                                              1271
         CLI   TYPELIST-1(@04),C'R'                                1271
         BNE   @RF01271                                            1271
         L     @04,COMFLGPT(,COMPTR)                               1271
         TM    PGSPCFLG(@04),B'10000000'                           1271
         BNZ   @RF01271                                            1271
@RT01271 DS    0H                                                  1272
*ENTNEST5:                                 DO;                     1272
ENTNEST5 DS    0H                                                  1273
*                                          BADPWFLG = ON;          1273
         OI    BADPWFLG,B'10000000'                                1273
*                                          CALL ERRPROC;           1274
         L     @15,@CV00872                                        1274
         BALR  @14,@15                                             1274
*                                          ERRARGPT->DARGSMOD = LC1ID;
         L     @04,COMSWKPT(,COMPTR)                               1275
         L     @15,ERRARGPT(,@04)                                  1275
         MVC   DARGSMOD(3,@15),@CC01155                            1275
*                                          ERRARGPT->DARGSENT =LCMSG08;
         MVI   DARGSENT(@15),X'08'                                 1276
*                                          ERRARGPT->DARGDBP =     1277
*                                            ADDR(OBJNM(NLST));    1277
         L     @01,COMVARPT(,COMPTR)                               1277
         LH    @14,NLST(,@01)                                      1277
         MH    @14,@CH01270                                        1277
         L     @04,OBJNMPTR(,@04)                                  1277
         AL    @04,@CF01608                                        1277
         LA    @04,OBJNM-5(@14,@04)                                1277
         ST    @04,DARGDBP(,@15)                                   1277
*                                                          /*@Y30SSMK*/
*                                          IF ADDR(SPACE) > 0      1278
*                                            THEN                  1278
         L     @04,@PC00001+4                                      1278
         L     @04,FDTPTR+28(,@04)                                 1278
         LTR   @04,@04                                             1278
         BNP   @RF01278                                            1278
*                                              ERRARGPT->DARGILP = 1279
*                                                VOLSERLN; /*@Y30SSMK*/
         MVC   DARGILP(2,@15),@CH00164                             1279
*                                            ELSE                  1280
*                                              ERRARGPT->DARGILP = 1280
*                                                DSNLEN;   /*@Y30SSMK*/
         B     @RC01278                                            1280
@RF01278 L     @04,COMSWKPT(,COMPTR)                               1280
         L     @04,ERRARGPT(,@04)                                  1280
         MVC   DARGILP(2,@04),@CH00610                             1280
*                                          CALL ERRPROC;           1281
@RC01278 L     @15,@CV00872                                        1281
         BALR  @14,@15                                             1281
*                                          PWTALLY = PWTALLY + 1;  1282
         LA    @04,1                                               1282
         AL    @04,PWTALLY                                         1282
         ST    @04,PWTALLY                                         1282
*                                          SAVRC = MAX(SAVRC,LASTCC04);
         L     @04,COMVARPT(,COMPTR)                               1283
         LH    @15,SAVRC(,@04)                                     1283
         LA    @14,4                                               1283
         CR    @15,@14                                             1283
         BNL   *+6
         LR    @15,@14                                             1283
         STH   @15,SAVRC(,@04)                                     1283
*                                          END ENTNEST5;           1284
*                                    END ENTNEST4;                 1285
@RF01271 AL    JJ,@CF00045                                         1285
@DE01270 L     @04,COMVARPT(,COMPTR)                               1285
         CH    JJ,TYPECNT(,@04)                                    1285
         BNH   @DL01270                                            1285
@DC01270 DS    0H                                                  1286
*                                END ENTNEST3;                     1286
@RF01269 DS    0H                                                  1287
*                            /****************************************/
*                            /*                                      */
*                            /* IF THE RETRIEVED ENTRY MATCHES THE   */
*                            /* TYPE SPECIFICATION, HAVE THE APPRO   */
*                            /* PROCEDURE LIST THE ENTRY.            */
*                            /* IF THE RETRIEVED ENTRY IS DATE       */
*                            /* RESTRICTED, INVOKE CKDTPROC TO TEST  */
*                            /* THE CREATION AND EXPIRATION DATES,   */
*                            /* AND LIST THE ENTRY IF THE TEST IS    */
*                            /* SUCCESSFUL.                  @Y30LSMK*/
*                            /* IF THE RETRIEVED ENTRY IS RESTRICTED */
*                            /* TO NOTUSABLE DATA SETS, LIST THE     */
*                            /* ENTRY ONLY IF THE ENTRY HAS BEEN     */
*                            /* MARKED AS UNUSABLE.          @Y30SSMK*/
*                            /* IF PASSWORD VERIFICATION FAILED FOR  */
*                            /* A CLUSTER OR AIX ENTRY WITH  @Y30SSMK*/
*                            /* DATA OR INDEX OR PATH        @Y30SSMK*/
*                            /* SPECIFICATIONS, BYPASS       @Y30SSMK*/
*                            /* PROCESSING SINCE APPRO       @Y30SSMK*/
*                            /* MESSAGES HAVE BEEN ISSUED.   @Y30SSMK*/
*                            /* IF A NON-TERMINATING ERROR OCCURRED  */
*                            /* ISSUE A MESSAGE.                     */
*                            /* IF A TERMINATING ERROR OCCURRED,     */
*                            /* EXIT FROM THE PROCEDURE.             */
*                            /* OTHERWISE PROCESS THE NEXT ENTRY IN  */
*                            /* THE LIST.                            */
*                            /*                                      */
*                            /****************************************/
*                                                                  1287
*                            IF TYPOKFLG = ON  &  BADPWFLG=OFF     1287
*                              THEN                                1287
@RF01266 TM    TYPOKFLG,B'10000000'                                1287
         BNO   @RF01287                                            1287
         TM    BADPWFLG,B'10000000'                                1287
         BNZ   @RF01287                                            1287
*                                DO;                               1288
*                                CRDTSW = OFF;             /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               1289
         NI    CRDTSW(@04),B'01111111'                             1289
*                                EXDTSW = OFF;             /*@Y30LSMK*/
         NI    EXDTSW(@04),B'01111111'                             1290
*                                IF DATEFLG = ON                   1291
*                                  THEN                            1291
         TM    DATEFLG(@04),B'10000000'                            1291
         BNO   @RF01291                                            1291
*                                    CALL CKDTPROC;        /*@Y30LSMK*/
         BAL   @14,CKDTPROC                                        1292
*                                IF DATEFLG = OFF  ×               1293
*                                  (CRDTSW = ON  &  EXDTSW = ON)   1293
*                                  THEN                            1293
@RF01291 L     @04,COMFLGPT(,COMPTR)                               1293
         TM    DATEFLG(@04),B'10000000'                            1293
         BZ    @RT01293                                            1293
         TM    CRDTSW(@04),B'10000000'                             1293
         BNO   @RF01293                                            1293
         TM    EXDTSW(@04),B'10000000'                             1293
         BNO   @RF01293                                            1293
@RT01293 DS    0H                                                  1294
*                                    DO;                   /*@Y30LSMK*/
*                                    IF NUSEFLG = ON  &            1295
*                                      (HOLDETYP = CTGTDATA  ×     1295
*                                      HOLDETYP = CTGTINDX)        1295
*                                      THEN                        1295
*                                                                  1295
         L     @04,COMFLGPT(,COMPTR)                               1295
         TM    NUSEFLG(@04),B'10000000'                            1295
         BNO   @RF01295                                            1295
         L     @04,COMVARPT(,COMPTR)                               1295
         CLI   HOLDETYP(@04),C'D'                                  1295
         BE    @RT01295                                            1295
         CLI   HOLDETYP(@04),C'I'                                  1295
         BNE   @RF01295                                            1295
@RT01295 DS    0H                                                  1296
*                                        /****************************/
*                                        /*                  @Y30SSMK*/
*                                        /* POSITION FPL POINTER TO  */
*                                        /* THE DATA SET ATTRIBUTES  */
*                                        /* FPL.             @Y30SSMK*/
*                                        /*                  @Y30SSMK*/
*                                        /****************************/
*                                                                  1296
*                                        DO;               /*@Y30SSMK*/
*                                        IF ADDR(FALL) = NULLPTR   1297
*                                          THEN                    1297
         L     @04,@PC00001+4                                      1297
         L     @04,FDTPTR+56(,@04)                                 1297
         LTR   @04,@04                                             1297
         BNZ   @RF01297                                            1297
*                                            CTGFLPTR =            1298
*                                              FPLPTMAP(FPLATR);   1298
         L     @04,COMSWKPT(,COMPTR)                               1298
         LH    @02,FPLATR                                          1298
         SLA   @02,2                                               1298
         L     @01,COMFPLPT(,COMPTR)                               1298
         AL    @01,@CF01593                                        1298
         L     @02,FPLPTMAP(@02,@01)                               1298
         ST    @02,CTGFLPTR(,@04)                                  1298
*                                          ELSE                    1299
*                                            CTGFLPTR = ATTRFPT;   1299
         B     @RC01297                                            1299
@RF01297 L     @04,COMSWKPT(,COMPTR)                               1299
         L     @02,COMFPLPT(,COMPTR)                               1299
         L     @02,ATTRFPT(,@02)                                   1299
         ST    @02,CTGFLPTR(,@04)                                  1299
*                                        IF CTGFLPT(1) > NULLPTR   1300
*                                          THEN                    1300
@RC01297 L     @04,COMSWKPT(,COMPTR)                               1300
         L     @04,CTGFLPTR(,@04)                                  1300
         L     @04,CTGFLPT(,@04)                                   1300
         LTR   @04,@04                                             1300
         BNP   @RF01300                                            1300
*                                            DO;           /*@Y30SSMK*/
*                                            IF DSNUSE = ON        1302
*                                              THEN                1302
         TM    DSNUSE(@04),B'00000001'                             1302
         BNO   @RF01302                                            1302
*                                                DO;       /*@Y30SSMK*/
*                                                CALL RTEPROC      1304
*                                                  (CLENTFLG);     1304
         L     @04,COMFLGPT(,COMPTR)                               1304
         LA    @04,CLENTFLG(,@04)                                  1304
         ST    @04,@AL00001                                        1304
         LA    @01,@AL00001                                        1304
         BAL   @14,RTEPROC                                         1304
*                                                RESPECIFY RTNREG RSTD;
*                                                TESTRC = RTNREG;  1306
         LR    TESTRC,RTNREG                                       1306
*                                                RESPECIFY RTNREG UNRST
*;                                                         /*@Y30SSMK*/
*                                                IF TESTRC ^= 0    1308
*                                                  THEN            1308
         LTR   TESTRC,TESTRC                                       1308
         BZ    @RF01308                                            1308
*                                                    IF TESTRC <   1309
*                                                      LASTCC12    1309
*                                                      THEN        1309
         C     TESTRC,@CF00586                                     1309
         BNL   @RF01309                                            1309
*                                                        CALL ERRPROC;
         L     @15,@CV00872                                        1310
         BALR  @14,@15                                             1310
*                                                      ELSE        1311
*                                                        RETURN CODE
*                                                          (LASTCC12);
         B     @RC01309                                            1311
@RF01309 LA    @15,12                                              1311
         L     @14,@SA00004                                        1311
         LM    @00,@12,@SA00004+8                                  1311
         BR    @14                                                 1311
*                                                END;      /*@Y30SSMK*/
*                                            END;          /*@Y30SSMK*/
*                                        END;              /*@Y30SSMK*/
*                                      ELSE                        1315
*                                        DO;               /*@Y30SSMK*/
         B     @RC01295                                            1315
@RF01295 DS    0H                                                  1316
*                                        CALL RTEPROC (CLENTFLG);  1316
         L     @04,COMFLGPT(,COMPTR)                               1316
         LA    @04,CLENTFLG(,@04)                                  1316
         ST    @04,@AL00001                                        1316
         LA    @01,@AL00001                                        1316
         BAL   @14,RTEPROC                                         1316
*                                        RESPECIFY RTNREG RSTD;    1317
*                                        TESTRC = RTNREG;          1318
         LR    TESTRC,RTNREG                                       1318
*                                        RESPECIFY RTNREG UNRSTD;/*
*                                                            @Y30SSMK*/
*                                        IF TESTRC ^= 0            1320
*                                          THEN                    1320
         LTR   TESTRC,TESTRC                                       1320
         BZ    @RF01320                                            1320
*                                            IF TESTRC < LASTCC12  1321
*                                              THEN                1321
         C     TESTRC,@CF00586                                     1321
         BNL   @RF01321                                            1321
*                                                CALL ERRPROC;     1322
         L     @15,@CV00872                                        1322
         BALR  @14,@15                                             1322
*                                              ELSE                1323
*                                                RETURN CODE(LASTCC12);
         B     @RC01321                                            1323
@RF01321 LA    @15,12                                              1323
         L     @14,@SA00004                                        1323
         LM    @00,@12,@SA00004+8                                  1323
         BR    @14                                                 1323
*                                        END;              /*@Y30SSMK*/
@RC01321 DS    0H                                                  1324
@RF01320 DS    0H                                                  1325
*                                    END;                  /*@Y30SSMK*/
@RC01295 DS    0H                                                  1326
*                                END;                      /*@Y30LSMK*/
@RF01293 DS    0H                                                  1327
*                            END ENTNEST2;                         1327
@RF01287 DS    0H                                                  1328
*                      END ENTNEST1;                               1328
@RF01259 AL    TYPIDX,@CF00045                                     1328
@DE01258 L     @04,COMVARPT(,COMPTR)                               1328
         CH    TYPIDX,TYPECNT(,@04)                                1328
         BNH   @DL01258                                            1328
@DC01258 DS    0H                                                  1329
*                    /************************************************/
*                    /*                                              */
*                    /* ALTHOUGH THE RETRIEVED ENTRY DOES NOT MATCH  */
*                    /* THE SPECIFIED TYPE, DETERMINE WHETHER ENTRY  */
*                    /* IS A CLUSTER, PAGESPACE, GDG, OR AIX @Y30SSMK*/
*                    /* AND WHETHER THE ASSOCIATED DATASETS QUALIFY  */
*                    /* IF NOT, USER ERROR.                  @YL026UE*/
*                    /*                                              */
*                    /************************************************/
*                                                                  1329
*                      IF TYPOKFLG = OFF                           1329
*                        THEN                                      1329
         TM    TYPOKFLG,B'10000000'                                1329
         BNZ   @RF01329                                            1329
*                      IF (((HOLDETYP=CTGTCL & PGSPCFLG=OFF)  ×    1330
*                        HOLDETYP = CTGTAIX)                       1330
*                        & (DTYPFLG=ON × ITYPFLG=ON × RTYPFLG = ON 1330
*                        ×  NUSEFLG = ON))                         1330
*                        × (HOLDETYP=CTGTGBS & ATYPFLG=ON)         1330
*                        × (PGSPCFLG=ON & (DTYPFLG=ON × NUSEFLG = ON))
*                        THEN                                      1330
         L     @07,COMVARPT(,COMPTR)                               1330
         CLI   HOLDETYP(@07),C'C'                                  1330
         BNE   @GL00099                                            1330
         L     @07,COMFLGPT(,COMPTR)                               1330
         TM    PGSPCFLG(@07),B'10000000'                           1330
         BZ    @GL00098                                            1330
@GL00099 L     @07,COMVARPT(,COMPTR)                               1330
         CLI   HOLDETYP(@07),C'G'                                  1330
         BNE   @GL00097                                            1330
@GL00098 L     @07,COMFLGPT(,COMPTR)                               1330
         TM    DTYPFLG(@07),B'10000000'                            1330
         BO    @RT01330                                            1330
         TM    ITYPFLG(@07),B'10000000'                            1330
         BO    @RT01330                                            1330
         TM    RTYPFLG(@07),B'10000000'                            1330
         BO    @RT01330                                            1330
         TM    NUSEFLG(@07),B'10000000'                            1330
         BO    @RT01330                                            1330
@GL00097 L     @07,COMVARPT(,COMPTR)                               1330
         CLI   HOLDETYP(@07),C'B'                                  1330
         BNE   @GL00096                                            1330
         L     @07,COMFLGPT(,COMPTR)                               1330
         TM    ATYPFLG(@07),B'10000000'                            1330
         BO    @RT01330                                            1330
@GL00096 L     @07,COMFLGPT(,COMPTR)                               1330
         TM    PGSPCFLG(@07),B'10000000'                           1330
         BNO   @RF01330                                            1330
         TM    DTYPFLG(@07),B'10000000'                            1330
         BO    @RT01330                                            1330
         TM    NUSEFLG(@07),B'10000000'                            1330
         BNO   @RF01330                                            1330
@RT01330 DS    0H                                                  1331
*                          IF CATRC = CRCBADPW                     1331
*                            THEN                                  1331
*                                                                  1331
         L     @07,COMVARPT(,COMPTR)                               1331
         CLC   CATRC(2,@07),@CH01313                               1331
         BNE   @RF01331                                            1331
*                              /**************************************/
*                              /*                                    */
*                              /* SINCE PASSWORD VERIFICATION FAILED */
*                              /* NO ASSOCIATED C.I.NOS. WERE        */
*                              /* RETURNED FOR PROCESSING.  OUTPUT   */
*                              /* APPROPRIATE DIAGNOSTICS.           */
*                              /*                                    */
*                              /**************************************/
*                                                                  1332
*                              DO;                                 1332
*                              CALL ERRPROC;                       1333
         L     @15,@CV00872                                        1333
         BALR  @14,@15                                             1333
*                              ERRARGPT->DARGSMOD = LC1ID;         1334
         L     @07,COMSWKPT(,COMPTR)                               1334
         L     @04,ERRARGPT(,@07)                                  1334
         MVC   DARGSMOD(3,@04),@CC01155                            1334
*                              ERRARGPT->DARGSENT = LCMSG08;       1335
         MVI   DARGSENT(@04),X'08'                                 1335
*                              ERRARGPT->DARGDBP =ADDR(OBJNM(NLST));
         L     @02,COMVARPT(,COMPTR)                               1336
         LH    @02,NLST(,@02)                                      1336
         MH    @02,@CH01270                                        1336
         L     @07,OBJNMPTR(,@07)                                  1336
         AL    @07,@CF01608                                        1336
         LA    @07,OBJNM-5(@02,@07)                                1336
         ST    @07,DARGDBP(,@04)                                   1336
*                                                          /*@YL026UE*/
*                              IF ADDR(SPACE) > 0                  1337
*                                THEN                              1337
         L     @07,@PC00001+4                                      1337
         L     @07,FDTPTR+28(,@07)                                 1337
         LTR   @07,@07                                             1337
         BNP   @RF01337                                            1337
*                                  ERRARGPT->DARGILP = VOLSERLN;   1338
         MVC   DARGILP(2,@04),@CH00164                             1338
*                                ELSE                              1339
*                                  ERRARGPT->DARGILP = DSNLEN;     1339
         B     @RC01337                                            1339
@RF01337 L     @07,COMSWKPT(,COMPTR)                               1339
         L     @07,ERRARGPT(,@07)                                  1339
         MVC   DARGILP(2,@07),@CH00610                             1339
*                              CALL ERRPROC;                       1340
@RC01337 L     @15,@CV00872                                        1340
         BALR  @14,@15                                             1340
*                              PWTALLY = PWTALLY + 1;              1341
         LA    @07,1                                               1341
         AL    @07,PWTALLY                                         1341
         ST    @07,PWTALLY                                         1341
*                              SAVRC = MAX (SAVRC, LASTCC04);      1342
         L     @07,COMVARPT(,COMPTR)                               1342
         LH    @04,SAVRC(,@07)                                     1342
         LA    @02,4                                               1342
         CR    @04,@02                                             1342
         BNL   *+6
         LR    @04,@02                                             1342
         STH   @04,SAVRC(,@07)                                     1342
*                              END;                                1343
*                            /****************************************/
*                            /*                                      */
*                            /* FOR A CLUSTER, AIX, PGSPC OR GDG     */
*                            /* FROM WHICH ONLY THE DATA, INDEX,     */
*                            /* PATH, OR NVSAM INFORMATION IS TO     */
*                            /* BE LISTED, COMPUTE THE NUMBER OF     */
*                            /* ASSOCIATIONS AND SAVE THE ASSOCIATED */
*                            /* C.I.NOS.                             */
*                            /*                                      */
*                            /****************************************/
*                                                                  1344
*                            ELSE                                  1344
*ENTASSOC:                     DO;                                 1344
         B     @RC01331                                            1344
@RF01331 DS    0H                                                  1344
ENTASSOC DS    0H                                                  1345
*                              CLENTFLG = ON;                      1345
         L     @07,COMFLGPT(,COMPTR)                               1345
         OI    CLENTFLG(@07),B'10000000'                           1345
*                              CALL ANSVPROC;              /*@YL026UE*/
         L     @15,@CV00877                                        1346
         BALR  @14,@15                                             1346
*                              RESPECIFY RTNREG RSTD;              1347
*                              TESTRC = RTNREG;                    1348
         LR    TESTRC,RTNREG                                       1348
*                              RESPECIFY RTNREG UNRSTD;    /*@YL026UE*/
*                              IF TESTRC ^= 0                      1350
*                                THEN                              1350
         LTR   TESTRC,TESTRC                                       1350
         BZ    @RF01350                                            1350
*                                 CALL ERRPROC;            /*@YL026UE*/
         L     @15,@CV00872                                        1351
         BALR  @14,@15                                             1351
*                                ELSE                              1352
*                                                                  1352
*                                  /**********************************/
*                                  /*                        @Y30SSMK*/
*                                  /* BYPASS LISTING THE CLUSTER, AIX*/
*                                  /* PGSPC OR GDG INFO, BUT @Y30SSMK*/
*                                  /* PROCEED TO A SECONDARY @Y30SSMK*/
*                                  /* ENTRY POINT TO HAVE THE        */
*                                  /* APPRO PROCEDURE LIST THE       */
*                                  /* ASSOCIATIONS.          @Y30SSMK*/
*                                  /* IF A NON-TERMINATING ERROR     */
*                                  /* OCCURED, ISSUE A MESSAGE.      */
*                                  /* IF A TERMINATING ERROR @Y30SSMK*/
*                                  /* OCCURED EXIT FROM THE  @Y30SSMK*/
*                                  /* PROCEDURE. OTHERWISE   @Y30SSMK*/
*                                  /* PROCESS THE NEXT ENTRY @Y30SSMK*/
*                                  /* IN THE LIST.           @Y30SSMK*/
*                                  /*                        @Y30SSMK*/
*                                  /**********************************/
*                                                                  1352
*                                  DO;                     /*@YL026UE*/
         B     @RC01350                                            1352
@RF01350 DS    0H                                                  1353
*                                  PGSPCFLG = OFF;         /*@YL026UE*/
         L     @07,COMFLGPT(,COMPTR)                               1353
         NI    PGSPCFLG(@07),B'01111111'                           1353
*                                  CALL RTEASSOC (CLENTFLG);       1354
         LA    @07,CLENTFLG(,@07)                                  1354
         ST    @07,@AL00001                                        1354
         LA    @01,@AL00001                                        1354
         BAL   @14,RTEASSOC                                        1354
*                                  RESPECIFY RTNREG RSTD;          1355
*                                  TESTRC = RTNREG;                1356
         LR    TESTRC,RTNREG                                       1356
*                                  RESPECIFY RTNREG UNRSTD;        1357
*                                  IF TESTRC ^= 0                  1358
*                                    THEN                          1358
         LTR   TESTRC,TESTRC                                       1358
         BZ    @RF01358                                            1358
*                                      IF TESTRC < LASTCC12        1359
*                                        THEN                      1359
         C     TESTRC,@CF00586                                     1359
         BNL   @RF01359                                            1359
*                                          CALL ERRPROC;           1360
         L     @15,@CV00872                                        1360
         BALR  @14,@15                                             1360
*                                        ELSE                      1361
*                                          RETURN CODE(LASTCC12);  1361
         B     @RC01359                                            1361
@RF01359 LA    @15,12                                              1361
         L     @14,@SA00004                                        1361
         LM    @00,@12,@SA00004+8                                  1361
         BR    @14                                                 1361
*                                  END;                    /*@YL026UE*/
*                              END ENTASSOC;                       1363
*                        /********************************************/
*                        /*                                          */
*                        /* USER ERROR, THE RETRIEVED ENTRY AS       */
*                        /* SPECIFIED IN THE USER'S ENTRY LIST DOES  */
*                        /* NOT CORRESPOND TO THE USER'S TYPE REQUEST*/
*                        /* SO OUTPUT THE APPROPRIATE DIAGNOSTICS.   */
*                        /*                                          */
*                        /********************************************/
*                                                                  1364
*                        ELSE                                      1364
*                          IF NOTRQFLG = ON                        1364
*                            THEN                                  1364
         B     @RC01330                                            1364
@RF01330 TM    NOTRQFLG,B'10000000'                                1364
         BNO   @RF01364                                            1364
*                              DO;                         /*@Y30SSMK*/
*                              ERRARGPT->DARGSMOD = LC1ID;         1366
         L     @07,COMSWKPT(,COMPTR)                               1366
         L     @04,ERRARGPT(,@07)                                  1366
         MVC   DARGSMOD(3,@04),@CC01155                            1366
*                              ERRARGPT->DARGSENT = LCMSG06;       1367
         MVI   DARGSENT(@04),X'06'                                 1367
*                              ERRARGPT->DARGDBP = ADDR(OBJNM(NLST));
         L     @02,COMVARPT(,COMPTR)                               1368
         LH    @02,NLST(,@02)                                      1368
         MH    @02,@CH01270                                        1368
         L     @07,OBJNMPTR(,@07)                                  1368
         AL    @07,@CF01608                                        1368
         LA    @07,OBJNM-5(@02,@07)                                1368
         ST    @07,DARGDBP(,@04)                                   1368
*                              IF ADDR(SPACE) > 0                  1369
*                                THEN                              1369
         L     @07,@PC00001+4                                      1369
         L     @07,FDTPTR+28(,@07)                                 1369
         LTR   @07,@07                                             1369
         BNP   @RF01369                                            1369
*                                  ERRARGPT->DARGILP = VOLSERLN;   1370
         MVC   DARGILP(2,@04),@CH00164                             1370
*                                ELSE                              1371
*                                  ERRARGPT->DARGILP = DSNLEN;     1371
         B     @RC01369                                            1371
@RF01369 L     @07,COMSWKPT(,COMPTR)                               1371
         L     @07,ERRARGPT(,@07)                                  1371
         MVC   DARGILP(2,@07),@CH00610                             1371
*                              CALL ERRPROC;                       1372
@RC01369 L     @15,@CV00872                                        1372
         BALR  @14,@15                                             1372
*                              SAVRC = MAX (SAVRC, LASTCC04);      1373
         L     @07,COMVARPT(,COMPTR)                               1373
         LH    @04,SAVRC(,@07)                                     1373
         LA    @02,4                                               1373
         CR    @04,@02                                             1373
         BNL   *+6
         LR    @04,@02                                             1373
         STH   @04,SAVRC(,@07)                                     1373
*                              END;                                1374
*                      END ENTCOND;                                1375
@RF01364 DS    0H                                                  1375
@RC01330 DS    0H                                                  1375
@RF01329 DS    0H                                                  1376
*                    END NONTSOVL;                         /*@Y30SSMK*/
@RC01237 DS    0H                                                  1377
*                  /**************************************************/
*                  /*                                                */
*                  /* RESTORE STRING OF FPL'S.                       */
*                  /*                                                */
*                  /**************************************************/
*                                                                  1377
*                  CALL FPLPROC;                                   1377
@RC01233 L     @15,@CV00873                                        1377
         BALR  @14,@15                                             1377
*                  END ENTROUTE;                                   1378
*                /****************************************************/
*                /*                                                  */
*                /* FOR AN UNSUCCESSFUL LOCATE FOR THE ENTRY, OUTPUT */
*                /* APPROPRIATE DIAGNOSTICS.  UPDATE THE ENTRY       */
*                /* SUPPRESSION TALLY IF APPLICABLE.  CONTINUE       */
*                /* PROCESSING THE REMAINDER OF THE USER'S ENTRYLIST.*/
*                /* EXIT IF A TERMINAL ERROR OCCURRED.               */
*                /*                                                  */
*                /****************************************************/
*                                                                  1379
*                ELSE                                              1379
*                  IF CATRC = CRCBADPW  &  (DATEFLG = ON  ×        1379
*                    NUSEFLG = ON)  &  ADDR(NAME) > NULLPTR        1379
*                    THEN                                          1379
         B     @RC01217                                            1379
@RF01217 L     @07,COMVARPT(,COMPTR)                               1379
         CLC   CATRC(2,@07),@CH01313                               1379
         BNE   @RF01379                                            1379
         L     @07,COMFLGPT(,COMPTR)                               1379
         TM    DATEFLG(@07),B'10000000'                            1379
         BO    @GL00107                                            1379
         TM    NUSEFLG(@07),B'10000000'                            1379
         BNO   @RF01379                                            1379
@GL00107 L     @07,@PC00001+4                                      1379
         L     @07,FDTPTR+52(,@07)                                 1379
         LTR   @07,@07                                             1379
         BNP   @RF01379                                            1379
*                      DO;                                 /*@Y30LSMK*/
*                      CALL ERRPROC;                       /*@Y30LSMK*/
         L     @15,@CV00872                                        1381
         BALR  @14,@15                                             1381
*                      PWTALLY = PWTALLY + 1;              /*@Y30LSMK*/
         LA    @07,1                                               1382
         AL    @07,PWTALLY                                         1382
         ST    @07,PWTALLY                                         1382
*                      SAVRC = MAX (SAVRC, LASTCC04);      /*@ZA05939*/
         L     @07,COMVARPT(,COMPTR)                               1383
         LH    @04,SAVRC(,@07)                                     1383
         LA    @02,4                                               1383
         CR    @04,@02                                             1383
         BNL   *+6
         LR    @04,@02                                             1383
         STH   @04,SAVRC(,@07)                                     1383
*                      END;                                /*@Y30LSMK*/
*                    ELSE                                          1385
*                      IF TESTRC < LASTCC12                        1385
*                        THEN                                      1385
         B     @RC01379                                            1385
@RF01379 C     TESTRC,@CF00586                                     1385
         BNL   @RF01385                                            1385
*                          DO;                                     1386
*                          CALL ERRPROC;                           1387
         L     @15,@CV00872                                        1387
         BALR  @14,@15                                             1387
*                          ERRARGPT->DARGSMOD = LC1ID;             1388
         L     @07,COMSWKPT(,COMPTR)                               1388
         L     @04,ERRARGPT(,@07)                                  1388
         MVC   DARGSMOD(3,@04),@CC01155                            1388
*                          ERRARGPT->DARGSENT = LCMSG08;           1389
         MVI   DARGSENT(@04),X'08'                                 1389
*                          ERRARGPT->DARGDBP = ADDR(OBJNM(NLST));  1390
         L     @02,COMVARPT(,COMPTR)                               1390
         LH    @02,NLST(,@02)                                      1390
         MH    @02,@CH01270                                        1390
         L     @07,OBJNMPTR(,@07)                                  1390
         AL    @07,@CF01608                                        1390
         LA    @07,OBJNM-5(@02,@07)                                1390
         ST    @07,DARGDBP(,@04)                                   1390
*                          IF ADDR(SPACE) > 0                      1391
*                            THEN                                  1391
         L     @07,@PC00001+4                                      1391
         L     @07,FDTPTR+28(,@07)                                 1391
         LTR   @07,@07                                             1391
         BNP   @RF01391                                            1391
*                              ERRARGPT->DARGILP = VOLSERLN;       1392
         MVC   DARGILP(2,@04),@CH00164                             1392
*                            ELSE                                  1393
*                              ERRARGPT->DARGILP = DSNLEN; /*@Y30SSMK*/
         B     @RC01391                                            1393
@RF01391 L     @07,COMSWKPT(,COMPTR)                               1393
         L     @07,ERRARGPT(,@07)                                  1393
         MVC   DARGILP(2,@07),@CH00610                             1393
*                          CALL ERRPROC;                           1394
@RC01391 L     @15,@CV00872                                        1394
         BALR  @14,@15                                             1394
*                          IF CATRC = CRCNOENT &           /*@OZ27823*/
*                             ADDR(CATNM) = NULLPTR        /*@OZ27823*/
*                            THEN                          /*@OZ27823*/
         L     @07,COMVARPT(,COMPTR)                               1395
         CLC   CATRC(2,@07),@CH00187                               1395
         BNE   @RF01395                                            1395
         L     @04,@PC00001+4                                      1395
         L     @04,FDTPTR+40(,@04)                                 1395
         LTR   @04,@04                                             1395
         BNZ   @RF01395                                            1395
*                              CATNAME = BLANK;            /*@OZ27823*/
         MVI   CATNAME+1(@07),C' '                                 1396
         MVC   CATNAME+2(42,@07),CATNAME+1(@07)                    1396
         MVI   CATNAME(@07),C' '                                   1396
*                          IF CATRC = CRCBADPW                     1397
*                            THEN                                  1397
@RF01395 L     @07,COMVARPT(,COMPTR)                               1397
         CLC   CATRC(2,@07),@CH01313                               1397
         BNE   @RF01397                                            1397
*                              PWTALLY = PWTALLY + 1;              1398
         LA    @07,1                                               1398
         AL    @07,PWTALLY                                         1398
         ST    @07,PWTALLY                                         1398
*                          END;                                    1399
*                        ELSE                                      1400
*                          RETURN CODE (LASTCC12);                 1400
         B     @RC01385                                            1400
@RF01385 LA    @15,12                                              1400
         L     @14,@SA00004                                        1400
         LM    @00,@12,@SA00004+8                                  1400
         BR    @14                                                 1400
*                      END NOTCATNM;                       /*@YL026UE*/
*                  ELSE                                            1402
*                                                                  1402
*                    /************************************************/
*                    /*                                      @Y30SSMK*/
*                    /* OBJECT NAME IN THE UCIR WORKAREA IS  @Y30SSMK*/
*                    /* A CATALOG NAME.  GET THE ACB POINTER @Y30SSMK*/
*                    /* USED IN SEARCHING THE CATALOG UNTIL  @Y30SSMK*/
*                    /* THE NEXT CATALOG OBJECT NAME IS      @Y30SSMK*/
*                    /* ENCOUNTERED.                         @Y30SSMK*/
*                    /*                                      @Y30SSMK*/
*                    /************************************************/
*                                                                  1402
*OBJCATNM:           DO;               /*OBJECT IS CATLG NAME GET ACB*/
         B     @RC01209                                            1402
@RF01209 DS    0H                                                  1402
OBJCATNM DS    0H                                                  1403
*                      CTGGTALL = OFF; /*SEARCH ONLY 1 CATLG @YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1403
         L     @04,CTGPLPTR(,@07)                                  1403
         NI    CTGGTALL(@04),B'10111111'                           1403
*                      IF ADDR(CATNM) = NULLPTR                    1404
*                        THEN                                      1404
         L     @04,@PC00001+4                                      1404
         L     @04,FDTPTR+40(,@04)                                 1404
         LTR   @04,@04                                             1404
         BNZ   @RF01404                                            1404
*                          DO;         /*CATLG NOT USER SPECIFIED    */
*                            IF CACBFLG = ON                       1406
*                              THEN                                1406
         L     @04,COMFLGPT(,COMPTR)                               1406
         TM    CACBFLG(@04),B'10000000'                            1406
         BNO   @RF01406                                            1406
*        DO;                                               /*@YL026UE*/
*                                CATNAME = OBJNM(NLST);    /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               1408
         LH    @02,NLST(,@04)                                      1408
         MH    @02,@CH01270                                        1408
         L     @07,OBJNMPTR(,@07)                                  1408
         ALR   @07,@02                                             1408
         AL    @07,@CF01608                                        1408
         MVC   CATNAME(44,@04),OBJNM-5(@07)                        1408
*        END;                                              /*@YL026UE*/
*                              ELSE                                1410
*                                DO;                       /*@YL026UE*/
         B     @RC01406                                            1410
@RF01406 DS    0H                                                  1411
*                                  CACBFLG = ON;            /*@YL026UE*
         L     @07,COMFLGPT(,COMPTR)                               1411
         OI    CACBFLG(@07),B'10000000'                            1411
*                                  CTGCAT = ADDR(CATNAME); /*@YL026UE*/
         L     @07,COMSWKPT(,COMPTR)                               1412
         L     @04,CTGPLPTR(,@07)                                  1412
         L     @02,COMVARPT(,COMPTR)                               1412
         LA    @15,CATNAME(,@02)                                   1412
         ST    @15,CTGCAT(,@04)                                    1412
*                                  CTGCNAME = ON;          /*@YL026UE*/
         OI    CTGCNAME(@04),B'00000010'                           1413
*                                  CTGNOFLD = CTGNOFLD + 1;/*@YL026UE*/
         LA    @15,1                                               1414
         SLR   @14,@14                                             1414
         IC    @14,CTGNOFLD(,@04)                                  1414
         ALR   @14,@15                                             1414
         STC   @14,CTGNOFLD(,@04)                                  1414
*                                  FPLCNT = FPLCNT + 1;    /*@YL026UE*/
         LH    @04,FPLCNT(,@02)                                    1415
         ALR   @04,@15                                             1415
         STH   @04,FPLCNT(,@02)                                    1415
*                                  FPLEND = FPLEND + 1;    /*@ZA05939*/
         AH    @15,FPLEND(,@02)                                    1416
         STH   @15,FPLEND(,@02)                                    1416
*                                  CATNAME = OBJNM(NLST);  /*@YL026UE*/
         LH    @04,NLST(,@02)                                      1417
         MH    @04,@CH01270                                        1417
         L     @07,OBJNMPTR(,@07)                                  1417
         ALR   @07,@04                                             1417
         AL    @07,@CF01608                                        1417
         MVC   CATNAME(44,@02),OBJNM-5(@07)                        1417
*                                END;                      /*@YL026UE*/
*                          END;                            /*@YL026UE*/
@RC01406 DS    0H                                                  1420
*                    END OBJCATNM;                         /*@YL026UE*/
@RF01404 DS    0H                                                  1421
*                  END OBJLIST;                            /*@Y30LSMK*/
@RC01209 L     @04,COMVARPT(,COMPTR)                               1421
         LA    @07,1                                               1421
         AH    @07,NLST(,@04)                                      1421
@DE01151 L     @04,COMVARPT(,COMPTR)                               1421
         STH   @07,NLST(,@04)                                      1421
         L     @04,COMSWKPT(,COMPTR)                               1421
         L     @04,OBJNMPTR(,@04)                                  1421
         C     @07,OBJCNT(,@04)                                    1421
         BNH   @DL01151                                            1421
*                ELSE                                              1422
*                  IF TESTRC ^= 0                                  1422
*                    THEN                                          1422
         B     @RC01150                                            1422
@RF01150 LTR   TESTRC,TESTRC                                       1422
         BZ    @RF01422                                            1422
*                      SAVRC = MAX(SAVRC,TESTRC);          /*@ZA05939*/
         L     @07,COMVARPT(,COMPTR)                               1423
         LH    @02,SAVRC(,@07)                                     1423
         CR    @02,TESTRC                                          1423
         BNL   *+6
         LR    @02,TESTRC                                          1423
         STH   @02,SAVRC(,@07)                                     1423
*              END ENTLOC;                                         1424
@RF01422 DS    0H                                                  1424
@RC01150 DS    0H                                                  1425
*        END ENTLIST;                                              1425
@RF01016 AL    ENTIDX,@CF00045                                     1425
@DE00987 CH    ENTIDX,NAMECNT                                      1425
         BNH   @DL00987                                            1425
*        /************************************************************/
*        /*                                                          */
*        /* EXIT FROM ENTRYNAME LIST ROUTINE, RETURNING TO EXECUTIVE */
*        /* ROUTINE.                                                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  1426
*        RETURN CODE (0);                                          1426
         SLR   @15,@15                                             1426
         L     @14,@SA00004                                        1426
         LM    @00,@12,@SA00004+8                                  1426
         BR    @14                                                 1426
*        END ENTPROC;                                              1427
*        /************************************************************/
*        /*                                                          */
*        /* PROCEDURE NAME - RTEPROC                                 */
*        /*                                                          */
*        /* FUNCTION - ROUTES CONTROL TO THE APPROPRIATE OUTPUT      */
*        /* FORMATTING PROCEDURE.  ALSO ROUTES THE ASSOCIATIONS      */
*        /* OF A CLUSTER, AIX, PGSPC, OR GDG FOR OUTPUT FORMATTING,  */
*        /* IF THERE ARE NO RESTRICTIONS.                    @Y30SSMK*/
*        /*                                                          */
*        /* INPUT - THE TYPE OF THE RETRIEVED ENTRY.  THE VSAM       */
*        /* CATALOG PARM LIST.  AND IF THE ENTRY IS A        @Y30SSMK*/
*        /* CLUSTER, AIX, PGSPC, OR GDG, THE ACCOMPANYING C.I.NO.    */
*        /* LIST AND A TYPE RESTRICTION SWITCH.              @Y30SSMK*/
*        /*                                                          */
*        /* OUTPUT - RESTRICTED SWITCH RESET, POSSIBLE ERROR @Y30SSMK*/
*        /* MESSAGES.                                        @Y30SSMK*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1428
*RTEPROC: PROCEDURE (CLENTSW);                                     1428
*                                                                  1428
RTEPROC  STM   @14,@12,@SA00005                                    1428
         MVC   @PC00005(4),0(@01)                                  1428
*        /************************************************************/
*        /*                                                          */
*        /* PARAMETERS WHICH MAY BE MODIFIED.                        */
*        /*                                                          */
*        /************************************************************/
*                                                                  1429
*        DCL CLENTSW   BIT(1);         /*ENTRY RESTRICTED BY TYPES   */
*                                                                  1429
*        /************************************************************/
*        /*                                                          */
*        /* LOCAL VARIABLES                                          */
*        /*                                                          */
*        /************************************************************/
*                                                                  1430
*        DCL SAVTYPE   CHAR(1);        /*HOLD FOR TYPES FROM MAIN CPL*/
*        DCL CI#IDX    FIXED(15);      /*DO GROUP CONTROL VAR        */
*        DCL ASSOCFLG  BIT(1);         /*ASSOC ENTRY O/P SWITCH      */
*        DCL NN        FIXED(15);      /*DO GROUP CONTROL VAR        */
*        DCL ASSOCNO FIXED(15) UNSIGNED; /*NO. OF ASSOC.     @YL026UE*/
*        DCL NUSESW    BIT(1)          /*NOTUSABLE TEST SUCESSFUL    */
*                      BDY(BYTE);                          /*@Y30SSMK*/
*        DCL DATESW    BIT(1)          /*DATE TEST SUCESSFUL @Y30SSMK*/
*                      BDY(BYTE);                          /*@Y30SSMK*/
*        DCL VHDRLN    FIXED(31);      /*LEN OF REPEATING DSP INFO 1437
*                                                            @Y30LSMK*/
*        DCL VOLSW     BIT(1)          /*ENTRY IS A VOLUME   @Y30LSMK*/
*                      BDY(BYTE);                          /*@Y30LSMK*/
*        DCL TIMLESSW  BIT(1)          /*DSCB VOL TIME STAMP SWITCH  */
*                      BDY(BYTE);                          /*@Y30LSMK*/
*                                                                  1440
*        OLDERID2 = NEWERID2;                                      1440
         L     @04,@PC00001                                        1440
         L     @04,GDTTR2(,@04)                                    1440
         MVC   @TS00001(95),NEWERID2(@04)                          1440
         MVC   OLDERID2(95,@04),@TS00001                           1440
*        NEWID2 = 'LCRT';                                          1441
         MVC   NEWID2(4,@04),@CC01484                              1441
*        CTGGTALL = OFF;               /*SEARCH ONE CATALOG  @YL026UE*/
*                                                                  1442
         L     @04,COMSWKPT(,COMPTR)                               1442
         L     @04,CTGPLPTR(,@04)                                  1442
         NI    CTGGTALL(@04),B'10111111'                           1442
*        /************************************************************/
*        /*                                                          */
*        /*  IF THE PROPER PASSWORD WAS NOT PROVIDED AND EITHER      */
*        /*  A FULL LISTING OF THE NAMES IN THE CATALOG IS           */
*        /*  REQUESTED OR AN ENTRY LIST WITHOUT TYPE RESTRICTIONS    */
*        /*  IS BEING PROCESSED, THE ASSOCIATED NAMES UNDER A        */
*        /*  CLUSTER, AIX, OR PGSPC CANNOT BE LOCATED AND LISTED.    */
*        /*  SO, PRINT THE CATALOG RETURN CODE MESSAGE AND THE       */
*        /*  'ENTRY CANNOT BE LISTED' MESSAGE AND RETURN.            */
*        /*                                                          */
*        /************************************************************/
*                                                                  1443
*        IF (CATRC=CRCBADPW  &  ADDR(NAME) > NULLPTR)  &   /*@OZ17514*/
*         (LISTCFLG=ON  ×  (ENLVUDFG=ON  &  TYPECNT=0))    /*@OZ17514*/
*          THEN                                            /*@OZ17514*/
         L     @04,COMVARPT(,COMPTR)                               1443
         CLC   CATRC(2,@04),@CH01313                               1443
         BNE   @RF01443                                            1443
         SLR   @02,@02                                             1443
         L     @15,@PC00001+4                                      1443
         C     @02,FDTPTR+52(,@15)                                 1443
         BNL   @RF01443                                            1443
         L     @15,COMFLGPT(,COMPTR)                               1443
         TM    LISTCFLG(@15),B'10000000'                           1443
         BO    @RT01443                                            1443
         TM    ENLVUDFG(@15),B'10000000'                           1443
         BNO   @RF01443                                            1443
         CH    @02,TYPECNT(,@04)                                   1443
         BNE   @RF01443                                            1443
@RT01443 DS    0H                                                  1444
*            DO;                                           /*@OZ17514*/
*              CALL ERRPROC;                               /*@OZ17514*/
         L     @15,@CV00872                                        1445
         BALR  @14,@15                                             1445
*              ERRARGPT -> DARGSMOD = LC1ID;               /*@OZ17514*/
         L     @04,COMSWKPT(,COMPTR)                               1446
         L     @02,ERRARGPT(,@04)                                  1446
         MVC   DARGSMOD(3,@02),@CC01155                            1446
*              ERRARGPT -> DARGSENT = LCMSG08;             /*@OZ17514*/
         MVI   DARGSENT(@02),X'08'                                 1447
*              ERRARGPT -> DARGDBP = ADDR(SUPPDSNM);       /*@OZ17514*/
         L     @04,CTGPLPTR(,@04)                                  1448
         L     @04,CTGWKA(,@04)                                    1448
         LA    @04,SUPPDSNM(,@04)                                  1448
         ST    @04,DARGDBP(,@02)                                   1448
*              ERRARGPT -> DARGILP = LENGTH(SUPPDSNM);     /*@OZ17514*/
         MVC   DARGILP(2,@02),@CH00610                             1449
*              CALL ERRPROC;                               /*@OZ17514*/
         L     @15,@CV00872                                        1450
         BALR  @14,@15                                             1450
*              PWTALLY = PWTALLY + 1;                      /*@OZ17514*/
         LA    @04,1                                               1451
         AL    @04,PWTALLY                                         1451
         ST    @04,PWTALLY                                         1451
*              SAVRC = MAX (SAVRC, LASTCC04);              /*@ZA05939*/
         L     @04,COMVARPT(,COMPTR)                               1452
         LH    @02,SAVRC(,@04)                                     1452
         LA    @15,4                                               1452
         CR    @02,@15                                             1452
         BNL   *+6
         LR    @02,@15                                             1452
         STH   @02,SAVRC(,@04)                                     1452
*              RETURN CODE(0);                             /*@OZ17514*/
         SLR   @15,@15                                             1453
         L     @14,@SA00005                                        1453
         LM    @00,@12,@SA00005+8                                  1453
         BR    @14                                                 1453
*            END;                                          /*@OZ17514*/
*                                                                  1454
*        /************************************************************/
*        /*                                                          */
*        /* ROUTE CLUSTER, AIX, OR PGSPC ENTRY TO THE ROUTINE        */
*        /* WHICH FORMATS A CLUSTER, AIX, PGSPC, DATA, INDEX,        */
*        /* OR PATH OBJECTS.                                         */
*        /* NOTE - A PGSPC ENTRY IS ENTERED IN THE CATALOG AS        */
*        /* A TYPE 'C' ENTRY.                                        */
*        /* ROUTE THE GDG ENTRY TO THE ROUTINE WHICH FORMATS         */
*        /* A GDG, UCAT, NVSAM, OR ALIAS OBJECTS.                    */
*        /* PASS THE INDICATORS FOR THE TYPE OF LISTING REQUESTED.   */
*        /*                                                          */
*        /************************************************************/
*                                                                  1455
*        IF HOLDETYP = CTGTCL  ×  HOLDETYP = CTGTGBS  ×            1455
*         HOLDETYP = CTGTAIX                                       1455
*          THEN                                                    1455
@RF01443 L     @04,COMVARPT(,COMPTR)                               1455
         CLI   HOLDETYP(@04),C'C'                                  1455
         BE    @RT01455                                            1455
         CLI   HOLDETYP(@04),C'B'                                  1455
         BE    @RT01455                                            1455
         CLI   HOLDETYP(@04),C'G'                                  1455
         BNE   @RF01455                                            1455
@RT01455 DS    0H                                                  1456
*CLUSTGRP:   DO;                                                   1456
*                                                                  1456
CLUSTGRP DS    0H                                                  1457
*        IF GDTDBG = NULLPTR                                       1457
*          THEN;                                                   1457
         L     @04,@PC00001                                        1457
         L     @04,GDTDBG(,@04)                                    1457
         LTR   @04,@04                                             1457
         BZ    @RT01457                                            1457
*          ELSE                                                    1459
*            DO;                                                   1459
*              DMPINDEX = ADDR(DAS#FLGS);                          1460
*                                                                  1460
         LA    DMPINDEX,DAS#FLGS                                   1460
*              DMPITMNM = 'FLAGS';                                 1461
         MVI   DMPITMNM+5(DMPINDEX),C' '                           1461
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         1461
         MVC   DMPITMNM(5,DMPINDEX),@CC01439                       1461
*              DMPITMPT = ADDR(FLAGS);                             1462
         L     @04,COMFLGPT(,COMPTR)                               1462
         ST    @04,DMPITMPT(,DMPINDEX)                             1462
*              DMPITMLN = 33;                                      1463
         MVC   DMPITMLN(2,DMPINDEX),@CH01139                       1463
*              DMPITMTP = 'H';                                     1464
         MVI   DMPITMTP(DMPINDEX),C'H'                             1464
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1465
*                                                                  1465
         LA    @04,16                                              1465
         ALR   DMPINDEX,@04                                        1465
*              DMPITMNM = 'ASSOC#';                                1466
         MVI   DMPITMNM+6(DMPINDEX),C' '                           1466
         MVI   DMPITMNM+7(DMPINDEX),C' '                           1466
         MVC   DMPITMNM(6,DMPINDEX),@CC01487                       1466
*              DMPITMPT = ADDR(ASSOC#);                            1467
         L     @15,COMVARPT(,COMPTR)                               1467
         LA    @14,ASSOC#(,@15)                                    1467
         ST    @14,DMPITMPT(,DMPINDEX)                             1467
*              DMPITMLN = 2;                                       1468
         MVC   DMPITMLN(2,DMPINDEX),@CH00161                       1468
*              DMPITMTP = 'F';                                     1469
         MVI   DMPITMTP(DMPINDEX),C'F'                             1469
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1470
*                                                                  1470
         ALR   DMPINDEX,@04                                        1470
*              DMPITMNM = 'HOLDETYP';                              1471
         MVC   DMPITMNM(8,DMPINDEX),@CC01488                       1471
*              DMPITMPT = ADDR(HOLDETYP);                          1472
         LA    @15,HOLDETYP(,@15)                                  1472
         ST    @15,DMPITMPT(,DMPINDEX)                             1472
*              DMPITMLN = 1;                                       1473
         MVC   DMPITMLN(2,DMPINDEX),@CH00045                       1473
*              DMPITMTP = 'C';                                     1474
         MVI   DMPITMTP(DMPINDEX),C'C'                             1474
*              DMPINDEX = DMPINDEX + DMPELEMT;                     1475
*                                                                  1475
         ALR   DMPINDEX,@04                                        1475
*              DMPTRM = DMPTRMVL;                                  1476
         MVI   DMPTRM(DMPINDEX),X'FF'                              1476
*            END;                                           /*@YL026UE*
*                                                                  1477
*        IF GDTDBG = NULLPTR                                       1478
*          THEN;                                                   1478
@RT01457 L     @04,@PC00001                                        1478
         L     @04,GDTDBG(,@04)                                    1478
         LTR   @04,@04                                             1478
         BZ    @RT01478                                            1478
*          ELSE                                                    1480
*            CALL IDCDB010(GDTTBL,'LCRP',DPLISTPT);                1480
         L     @04,@PC00001                                        1480
         ST    @04,@AL00001                                        1480
         LA    @02,@CC01489                                        1480
         ST    @02,@AL00001+4                                      1480
         L     @02,COMSWKPT(,COMPTR)                               1480
         LA    @02,DPLISTPT(,@02)                                  1480
         ST    @02,@AL00001+8                                      1480
         MVI   @AL00001+8,X'80'                                    1480
         L     @15,GDTDBG(,@04)                                    1480
         LA    @01,@AL00001                                        1480
         BALR  @14,@15                                             1480
*                                                          /*@ZA05939*/
*                                                                  1481
*            IF HOLDETYP = CTGTGBS                                 1481
*              THEN                                                1481
@RT01478 L     @04,COMVARPT(,COMPTR)                               1481
         CLI   HOLDETYP(@04),C'B'                                  1481
         BNE   @RF01481                                            1481
*                DO;                                       /*@YL026UE*/
*                  CALL ANSVPROC;      /* SAVE ASSOC CI#     @YL026UE*/
         L     @15,@CV00877                                        1483
         BALR  @14,@15                                             1483
*                  RESPECIFY RTNREG RSTD;                          1484
*                  TESTRC = RTNREG;                                1485
         LR    TESTRC,RTNREG                                       1485
*                  RESPECIFY RTNREG UNRSTD;                /*@YL026UE*/
*                  IF TESTRC ^= 0                                  1487
*                    THEN                                          1487
         LTR   TESTRC,TESTRC                                       1487
         BZ    @RF01487                                            1487
*                      RETURN CODE(SAVRC);                 /*@ZA05939*/
         L     @04,COMVARPT(,COMPTR)                               1488
         LH    @15,SAVRC(,@04)                                     1488
         L     @14,@SA00005                                        1488
         LM    @00,@12,@SA00005+8                                  1488
         BR    @14                                                 1488
*                  CALL AUPROC;                            /*@YL026UE*/
@RF01487 L     @15,@CV00874                                        1489
         BALR  @14,@15                                             1489
*                END;                                      /*@YL026UE*/
*                                                                  1490
*                                                                  1490
*              ELSE                                                1491
*                DO;                                               1491
         B     @RC01481                                            1491
@RF01481 DS    0H                                                  1492
*                  ENTCLFLG = ON;                          /*@YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               1492
         OI    ENTCLFLG(@04),B'10000000'                           1492
*                  CALL CDIPROC;                           /*@YL026UE*/
         L     @15,@CV00875                                        1493
         BALR  @14,@15                                             1493
*                END;                                              1494
*                                                                  1494
*            RESPECIFY RTNREG RSTD;                                1495
@RC01481 DS    0H                                                  1496
*            TESTRC = RTNREG;                                      1496
         LR    TESTRC,RTNREG                                       1496
*            RESPECIFY RTNREG UNRSTD;                              1497
*                                                                  1497
*            /********************************************************/
*            /*                                                      */
*            /* IF THE LISTING OF THE CLUSTER , AIX, PGSPC, OR GDG   */
*            /* WAS UNSUCCESSFUL EXIT FROM THIS PROCEDURE.   @Y30SSMK*/
*            /*                                                      */
*            /********************************************************/
*                                                                  1498
*            IF TESTRC ^= 0                                        1498
*              THEN                                                1498
         LTR   TESTRC,TESTRC                                       1498
         BZ    @RF01498                                            1498
*                RETURN CODE (SAVRC);                      /*@ZA05939*/
         L     @04,COMVARPT(,COMPTR)                               1499
         LH    @15,SAVRC(,@04)                                     1499
         L     @14,@SA00005                                        1499
         LM    @00,@12,@SA00005+8                                  1499
         BR    @14                                                 1499
*            /********************************************************/
*            /*                                                      */
*            /* RESTORE STRING OF FPL'S BEFORE PROCESSING ANY        */
*            /* ASSOCIATED ENTRIES.                                  */
*            /*                                                      */
*            /********************************************************/
*                                                                  1500
*            CALL FPLPROC;                                         1500
@RF01498 L     @15,@CV00873                                        1500
         BALR  @14,@15                                             1500
*            /********************************************************/
*            /*                                                      */
*            /*   SECONDARY ENTRY POINT BYPASSES CALL TO FORMAT A    */
*            /*   CLUSTER, AIX, PGSPC, OR GDG ENTRY WHICH FAILS TO   */
*            /*   MATCH A TYPE QUALIFICATION. HOWEVER, THE   @Y30SSMK*/
*            /*   ASSOCIATED DATASETS OF THE CLUSTER, AIX, PGSPC,    */
*            /*   OR GDG ARE CHECKED FOR QUALIFICATION       @Y30SSMK*/
*            /*   AND SUBSEQUENTLY OUTPUT.                   @Y30SSMK*/
*            /*                                                      */
*            /********************************************************/
*                                                                  1501
*RTEASSOC:   ENTRY (CLENTSW);                                      1501
         B     @EC01501                                            1501
RTEASSOC STM   @14,@12,@SA00005                                    1501
         MVC   @PC00005(4),0(@01)                                  1501
@EC01501 DS    0H                                                  1502
*              OLDERID2 = NEWERID2;                                1502
         L     @04,@PC00001                                        1502
         L     @02,GDTTR2(,@04)                                    1502
         MVC   @TS00001(95),NEWERID2(@02)                          1502
         MVC   OLDERID2(95,@02),@TS00001                           1502
*              NEWID2 = 'LCR2';                                    1503
*                                                                  1503
         MVC   NEWID2(4,@02),@CC01494                              1503
*        IF GDTDBG = NULLPTR                                       1504
*          THEN;                                                   1504
         L     @04,GDTDBG(,@04)                                    1504
         LTR   @04,@04                                             1504
         BZ    @RT01504                                            1504
*          ELSE                                                    1506
*            CALL IDCDB010(GDTTBL,'LCRA',DPLISTPT);                1506
         L     @04,@PC00001                                        1506
         ST    @04,@AL00001                                        1506
         LA    @02,@CC01495                                        1506
         ST    @02,@AL00001+4                                      1506
         L     @02,COMSWKPT(,COMPTR)                               1506
         LA    @02,DPLISTPT(,@02)                                  1506
         ST    @02,@AL00001+8                                      1506
         MVI   @AL00001+8,X'80'                                    1506
         L     @15,GDTDBG(,@04)                                    1506
         LA    @01,@AL00001                                        1506
         BALR  @14,@15                                             1506
*                                                          /*@ZA05939*/
*                                                                  1507
*            /********************************************************/
*            /*                                                      */
*            /* PROCESS THE CATALOG INFORMATION FOR EACH ASSOCIATION */
*            /* OF A CLUSTER, AIX, PGSPC, OR GDG IF THERE    @Y30SSMK*/
*            /* ARE ASSOCIATIONS AND A GENERIC LOCATE WAS    @Y30SSMK*/
*            /* NOT ISSUED AND:                              @Y30SSMK*/
*            /*    1)  THE TYPE SPECIFICATION IS MET, OR             */
*            /*    2)  THERE ARE NO TYPE RESTRICTIONS, OR            */
*            /*    3)  A FULL LISTING OF THE CATALOG IS REQUESTED    */
*            /*                                                      */
*            /********************************************************/
*                                                                  1507
*            IF (CLENTSW=ON × TYPECNT=0 × LISTCFLG=ON)             1507
*               &  ASSOC# >0  &  NOGENFLG=ON                       1507
*              THEN                                                1507
@RT01504 L     @04,@PC00005                                        1507
         TM    CLENTSW(@04),B'10000000'                            1507
         BO    @GL00118                                            1507
         L     @04,COMVARPT(,COMPTR)                               1507
         LH    @04,TYPECNT(,@04)                                   1507
         LTR   @04,@04                                             1507
         BZ    @GL00118                                            1507
         L     @04,COMFLGPT(,COMPTR)                               1507
         TM    LISTCFLG(@04),B'10000000'                           1507
         BNO   @RF01507                                            1507
@GL00118 L     @04,COMVARPT(,COMPTR)                               1507
         LH    @04,ASSOC#(,@04)                                    1507
         LTR   @04,@04                                             1507
         BNP   @RF01507                                            1507
         L     @04,COMFLGPT(,COMPTR)                               1507
         TM    NOGENFLG(@04),B'10000000'                           1507
         BNO   @RF01507                                            1507
*LSTASSOC:       DO;                                               1508
LSTASSOC DS    0H                                                  1509
*                SAVTYPE = CTGTYPE;                                1509
         L     @06,COMSWKPT(,COMPTR)                               1509
         L     @06,CTGPLPTR(,@06)                                  1509
         MVC   SAVTYPE(1),CTGTYPE(@06)                             1509
*                CTGTYPE = NOTYPE;     /*NO TYPE REQUEST             */
         MVC   CTGTYPE(1,@06),NOTYPE                               1510
*                CTGNAME = OFF;        /*C.I.NO. FURNISHED           */
         NI    CTGNAME(@06),B'11111011'                            1511
*                CTGGTNXT = OFF;       /*SINGLE ENTRY MODE           */
         NI    CTGGTNXT(@06),B'11101111'                           1512
*                /****************************************************/
*                /*                                                  */
*                /* PROCESS THE LIST OF ASSOCIATED TYPES AND C.I.NOS.*/
*                /* FURNISHED BY CAT/MGMT.  IF ANY ELEMENT IN THE    */
*                /* LIST WAS DETECTED EARLIER TO BE INVALID, BYPASS  */
*                /* IT.  IF A TYPE RESTRICTION WAS SPECIFIED AND AN  */
*                /* ASSOCIATION DOES NOT MEET IT, BYPASS IT.         */
*                /*                                                  */
*                /****************************************************/
*                                                                  1513
*                ASSOCNO = ASSOC#;                         /*@YL026UE*/
         L     @04,COMVARPT(,COMPTR)                               1513
         LH    ASSOCNO,ASSOC#(,@04)                                1513
*CKASSOC:        DO CI#IDX = 1 TO ASSOCNO;                 /*@YL026UE*/
CKASSOC  LA    CI#IDX,1                                            1514
         B     @DE01514                                            1514
@DL01514 DS    0H                                                  1515
*                  IF CILSTPTR->ASSOC(CI#IDX) ^= BLANK             1515
*                    THEN                                          1515
         LR    @04,CI#IDX                                          1515
         SLA   @04,2                                               1515
         L     @02,COMSWKPT(,COMPTR)                               1515
         L     @02,CILSTPTR(,@02)                                  1515
         ALR   @02,@04                                             1515
         AL    @02,@CF01593                                        1515
         CLI   ASSOC(@02),C' '                                     1515
         BE    @RF01515                                            1515
*GOODCI#:              DO;                                         1516
GOODCI#  DS    0H                                                  1517
*                      ASSOCFLG = OFF; /*INITIALIZE TO BYPASS ASSOC  */
         NI    ASSOCFLG,B'01111111'                                1517
*                      NDENTFLG = OFF; /*INITIALIZE          @YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               1518
         NI    NDENTFLG(@04),B'01111111'                           1518
*                      IF CLENTSW = ON                             1519
*                        THEN                                      1519
         L     @04,@PC00005                                        1519
         TM    CLENTSW(@04),B'10000000'                            1519
         BNO   @RF01519                                            1519
*                          DO NN = 1 TO TYPECNT WHILE (ASSOCFLG=OFF);
         LA    NN,1                                                1520
         B     @DE01520                                            1520
@DL01520 TM    ASSOCFLG,B'10000000'                                1520
         BNZ   @DC01520                                            1520
*                            IF CILSTPTR->KIND(CI#IDX) = TYPELIST(NN)
*                              THEN                                1521
*                                                                  1521
         LR    @04,CI#IDX                                          1521
         SLA   @04,2                                               1521
         L     @01,COMSWKPT(,COMPTR)                               1521
         L     @15,CILSTPTR(,@01)                                  1521
         L     @14,COMVARPT(,COMPTR)                               1521
         ST    @04,@TF00001                                        1521
         ALR   @04,@15                                             1521
         AL    @04,@CF01593                                        1521
         ALR   @14,NN                                              1521
         CLC   KIND(1,@04),TYPELIST-1(@14)                         1521
         BNE   @RF01521                                            1521
*                                /************************************/
*                                /*                                  */
*                                /* PROCESS ONLY THE DATA, INDEX,    */
*                                /* PATH, OR NVSAM ASSOCIATION       */
*                                /* MEETING A TYPE SPECIFICATION.    */
*                                /*                                  */
*                                /************************************/
*                                                                  1522
*                                IF CILSTPTR->KIND(CI#IDX) = CTGTDATA ×
*                                  CILSTPTR->KIND(CI#IDX) = CTGTINDX ×
*                                  CILSTPTR->KIND(CI#IDX) = CTGTPTH ×
*                                  CILSTPTR->KIND(CI#IDX) = CTGTALIN
*                                  THEN                            1522
         LR    @04,@15                                             1522
         AL    @04,@TF00001                                        1522
         AL    @04,@CF01593                                        1522
         CLI   KIND(@04),C'D'                                      1522
         BE    @RT01522                                            1522
         LR    @04,@15                                             1522
         AL    @04,@TF00001                                        1522
         AL    @04,@CF01593                                        1522
         CLI   KIND(@04),C'I'                                      1522
         BE    @RT01522                                            1522
         LR    @04,@15                                             1522
         AL    @04,@TF00001                                        1522
         AL    @04,@CF01593                                        1522
         CLI   KIND(@04),C'R'                                      1522
         BE    @RT01522                                            1522
         AL    @15,@TF00001                                        1522
         AL    @15,@CF01593                                        1522
         CLI   KIND(@15),C'A'                                      1522
         BNE   @RF01522                                            1522
@RT01522 DS    0H                                                  1523
*                                    ASSOCFLG = ON;        /*@Y30SSMK*/
         OI    ASSOCFLG,B'10000000'                                1523
*                          END;                                    1524
*                                                                  1524
@RF01522 DS    0H                                                  1524
@RF01521 AL    NN,@CF00045                                         1524
@DE01520 L     @04,COMVARPT(,COMPTR)                               1524
         CH    NN,TYPECNT(,@04)                                    1524
         BNH   @DL01520                                            1524
@DC01520 DS    0H                                                  1525
*                        /********************************************/
*                        /*                                          */
*                        /* PROCESS ONLY THE DATA, INDEX, PATH, OR   */
*                        /* NVSAM ASSOCIATION THAT IS NOT RESTRICTED */
*                        /* BY A TYPE SPECIFICATION.         @Y30SSMK*/
*                        /*                                          */
*                        /********************************************/
*                                                                  1525
*                        ELSE                                      1525
*                          IF CILSTPTR->KIND(CI#IDX) = CTGTDATA ×  1525
*                            CILSTPTR->KIND(CI#IDX) = CTGTINDX ×   1525
*                            CILSTPTR->KIND(CI#IDX) = CTGTPTH ×    1525
*                            CILSTPTR->KIND(CI#IDX) = CTGTALIN     1525
*                            THEN                                  1525
         B     @RC01519                                            1525
@RF01519 LR    @04,CI#IDX                                          1525
         SLA   @04,2                                               1525
         L     @02,COMSWKPT(,COMPTR)                               1525
         L     @02,CILSTPTR(,@02)                                  1525
         ST    @04,@TF00001                                        1525
         ALR   @04,@02                                             1525
         AL    @04,@CF01593                                        1525
         CLI   KIND(@04),C'D'                                      1525
         BE    @RT01525                                            1525
         LR    @04,@02                                             1525
         AL    @04,@TF00001                                        1525
         AL    @04,@CF01593                                        1525
         CLI   KIND(@04),C'I'                                      1525
         BE    @RT01525                                            1525
         LR    @04,@02                                             1525
         AL    @04,@TF00001                                        1525
         AL    @04,@CF01593                                        1525
         CLI   KIND(@04),C'R'                                      1525
         BE    @RT01525                                            1525
         AL    @02,@TF00001                                        1525
         AL    @02,@CF01593                                        1525
         CLI   KIND(@02),C'A'                                      1525
         BNE   @RF01525                                            1525
@RT01525 DS    0H                                                  1526
*                              ASSOCFLG = ON;              /*@Y30SSMK*/
         OI    ASSOCFLG,B'10000000'                                1526
*                      /**********************************************/
*                      /*                                            */
*                      /* IF THE ASSOCIATED ENTRY HAS BEEN FLAGGED   */
*                      /* FOR PROCESSING, OBTAIN THE CATALOG FIELDS  */
*                      /* FOR THIS ASSOCIATION.                      */
*                      /*                                            */
*                      /**********************************************/
*                                                                  1527
*                      IF ASSOCFLG = ON                            1527
*                        THEN                                      1527
@RF01525 DS    0H                                                  1527
@RC01519 TM    ASSOCFLG,B'10000000'                                1527
         BNO   @RF01527                                            1527
*YESASSOC:                 DO;                                     1528
YESASSOC DS    0H                                                  1529
*                          NDENTFLG = ON; /*INDENT ASSOC     @YL026UE*/
         L     @02,COMFLGPT(,COMPTR)                               1529
         OI    NDENTFLG(@02),B'10000000'                           1529
*                          CTGENT = ADDR(CILSTPTR->CI#(CI#IDX));   1530
         L     @15,COMSWKPT(,COMPTR)                               1530
         L     @01,CTGPLPTR(,@15)                                  1530
         LR    @14,CI#IDX                                          1530
         SLA   @14,2                                               1530
         L     @15,CILSTPTR(,@15)                                  1530
         AL    @15,@CF01611                                        1530
         LA    @00,CI#-1(@14,@15)                                  1530
         ST    @00,CTGENT(,@01)                                    1530
*                          CALL LOCPROC (FPLEND,CACBFLG,ENTNMFLG); 1531
         L     @01,COMVARPT(,COMPTR)                               1531
         LA    @15,FPLEND(,@01)                                    1531
         ST    @15,@AL00001                                        1531
         ST    @02,@AL00001+4                                      1531
         LA    @02,ENTNMFLG(,@02)                                  1531
         ST    @02,@AL00001+8                                      1531
         L     @15,@CV00870                                        1531
         LA    @01,@AL00001                                        1531
         BALR  @14,@15                                             1531
*                          RESPECIFY RTNREG RSTD;                  1532
*                          TESTRC = RTNREG;                        1533
         LR    TESTRC,RTNREG                                       1533
*                          RESPECIFY RTNREG UNRSTD;                1534
*                                                                  1534
*                          /******************************************/
*                          /*                                        */
*                          /* IF THE LOCATE WAS UNSUCCESSFUL,        */
*                          /* INTERROGATE THE NON-ZERO CATALOG       */
*                          /* RETURN CODE.                           */
*                          /*                                        */
*                          /******************************************/
*                                                                  1535
*                          IF TESTRC ^= 0                          1535
*                            THEN                                  1535
         LTR   TESTRC,TESTRC                                       1535
         BZ    @RF01535                                            1535
*BADCRC:                       DO;                                 1536
*                                                                  1536
BADCRC   DS    0H                                                  1537
*                              /**************************************/
*                              /*                                    */
*                              /* EXIT FOR TERMINATING ERRORS.       */
*                              /*                                    */
*                              /**************************************/
*                                                                  1537
*                              IF TESTRC = LASTCC12                1537
*                                THEN                              1537
         LA    @02,12                                              1537
         CR    TESTRC,@02                                          1537
         BNE   @RF01537                                            1537
*                                  RETURN CODE (LASTCC12);         1538
*                                                                  1538
         LR    @15,@02                                             1538
         L     @14,@SA00005                                        1538
         LM    @00,@12,@SA00005+8                                  1538
         BR    @14                                                 1538
*                              /**************************************/
*                              /*                                    */
*                              /* OUTPUT DIAGNOSTICS FOR AN          */
*                              /* INSUFFICIENT WORKAREA CONDITION OR */
*                              /* PASSWORD VERIFICATION FAILURE.     */
*                              /*                                    */
*                              /**************************************/
*                                                                  1539
*                              IF CATRC = CRCWKASZ  ×              1539
*                                (CATRC = CRCBADPW  &              1539
*                                ADDR(NAME) = NULLPTR)             1539
*                                THEN                              1539
@RF01537 L     @02,COMVARPT(,COMPTR)                               1539
         LH    @02,CATRC(,@02)                                     1539
         C     @02,@CF01311                                        1539
         BE    @RT01539                                            1539
         C     @02,@CF01313                                        1539
         BNE   @RF01539                                            1539
         L     @02,@PC00001+4                                      1539
         L     @02,FDTPTR+52(,@02)                                 1539
         LTR   @02,@02                                             1539
         BNZ   @RF01539                                            1539
@RT01539 DS    0H                                                  1540
*                                  DO;                             1540
*                                  SAVRC = MAX (SAVRC, TESTRC);    1541
         L     @02,COMVARPT(,COMPTR)                               1541
         LH    @15,SAVRC(,@02)                                     1541
         CR    @15,TESTRC                                          1541
         BNL   *+6
         LR    @15,TESTRC                                          1541
         STH   @15,SAVRC(,@02)                                     1541
*                                  CALL ERRPROC;                   1542
*                                                                  1542
         L     @15,@CV00872                                        1542
         BALR  @14,@15                                             1542
*                                  /**********************************/
*                                  /*                                */
*                                  /* IF PASSWORD VERIFICATION FAILED*/
*                                  /* WHEN PROCESSING THE CATALOG FOR*/
*                                  /* MORE THAN JUST ENTRYNAMES, LIST*/
*                                  /* THE APPRO MESSAGES AND UPDATE  */
*                                  /* THE ENTRY SUPPRESSED TALLY.    */
*                                  /*                                */
*                                  /**********************************/
*                                                                  1543
*                                  IF CATRC = CRCBADPW             1543
*                                    THEN                          1543
         L     @04,COMVARPT(,COMPTR)                               1543
         CLC   CATRC(2,@04),@CH01313                               1543
         BNE   @RF01543                                            1543
*                                      DO;                         1544
*                                      ERRARGPT->DARGSMOD = LC1ID; 1545
         L     @04,COMSWKPT(,COMPTR)                               1545
         L     @02,ERRARGPT(,@04)                                  1545
         MVC   DARGSMOD(3,@02),@CC01155                            1545
*                                      ERRARGPT->DARGSENT = LCMSG08;
         MVI   DARGSENT(@02),X'08'                                 1546
*                                      ERRARGPT->DARGDBP=ADDR(SUPPDSNM)
         L     @04,CTGPLPTR(,@04)                                  1547
         L     @04,CTGWKA(,@04)                                    1547
         LA    @04,SUPPDSNM(,@04)                                  1547
         ST    @04,DARGDBP(,@02)                                   1547
*                                      ERRARGPT->DARGILP =         1548
*                                        LENGTH(SUPPDSNM);         1548
         MVC   DARGILP(2,@02),@CH00610                             1548
*                                      CALL ERRPROC;               1549
         L     @15,@CV00872                                        1549
         BALR  @14,@15                                             1549
*                                      PWTALLY = PWTALLY + 1;      1550
         LA    @04,1                                               1550
         AL    @04,PWTALLY                                         1550
         ST    @04,PWTALLY                                         1550
*                                      END;                        1551
*                                  END;                            1552
*                                                                  1552
*                                /************************************/
*                                /*                                  */
*                                /* IF THE LOCATE VIA A C.I.NO. WAS  */
*                                /* UNSUCCESSFUL, LIST THE VSAM CAT  */
*                                /* CONDITION CODE MESSAGE AND THE   */
*                                /* INVALID C.I.NO. MESSAGE.         */
*                                /* CONTINUE PROCESSING THE LIST OF  */
*                                /* ASSOCIATIONS.                    */
*                                /*                                  */
*                                /************************************/
*                                                                  1553
*                                ELSE                              1553
*                                  IF CATRC = CRCNOENT             1553
*                                    THEN                          1553
         B     @RC01539                                            1553
@RF01539 L     @02,COMVARPT(,COMPTR)                               1553
         CLC   CATRC(2,@02),@CH00187                               1553
         BNE   @RF01553                                            1553
*                                      DO;                         1554
*                                      SAVRC = MAX (SAVRC, LASTCC04);
         LH    @04,SAVRC(,@02)                                     1555
         LA    @15,4                                               1555
         CR    @04,@15                                             1555
         BNL   *+6
         LR    @04,@15                                             1555
         STH   @04,SAVRC(,@02)                                     1555
*                                      CILOCFLG = ON;      /*@OZ09407*/
         L     @04,COMFLGPT(,COMPTR)                               1556
         OI    CILOCFLG(@04),B'10000000'                           1556
*                                      CALL ERRPROC;               1557
         L     @15,@CV00872                                        1557
         BALR  @14,@15                                             1557
*                                      CILOCFLG = OFF;     /*@OZ09407*/
         L     @04,COMFLGPT(,COMPTR)                               1558
         NI    CILOCFLG(@04),B'01111111'                           1558
*                                      ERRARGPT->DARGSMOD = LC1ID; 1559
         L     @04,COMSWKPT(,COMPTR)                               1559
         L     @02,ERRARGPT(,@04)                                  1559
         MVC   DARGSMOD(3,@02),@CC01155                            1559
*                                      ERRARGPT->DARGSENT = LCMSG09;
         MVI   DARGSENT(@02),X'09'                                 1560
*                                      ERRARGPT->DARGDBP =         1561
*                                        ADDR(CILSTPTR->CI#(CI#IDX));
         LR    @15,CI#IDX                                          1561
         SLA   @15,2                                               1561
         L     @04,CILSTPTR(,@04)                                  1561
         AL    @04,@CF01611                                        1561
         LA    @04,CI#-1(@15,@04)                                  1561
         ST    @04,DARGDBP(,@02)                                   1561
*                                      ERRARGPT->DARGILP =         1562
*                                        LENGTH(CI#(CI#IDX));      1562
         MVC   DARGILP(2,@02),@CH00170                             1562
*                                      CALL ERRPROC;               1563
         L     @15,@CV00872                                        1563
         BALR  @14,@15                                             1563
*                                      END;                        1564
*                                    ELSE                          1565
*                                                                  1565
*                                      /******************************/
*                                      /*                            */
*                                      /* IF THE PROPER PASSWORD WAS */
*                                      /* NOT PROVIDED BUT ONLY ASSOC*/
*                                      /* NAMES ARE REQUESTED,       */
*                                      /* AND LISTING WAS    @Y30LSMK*/
*                                      /* NOT DATE RESTRICTED, OR    */
*                                      /* RESTRICTED TO NOTUSABLE    */
*                                      /* DATA SETS, CALL    @Y30SSMK*/
*                                      /* THE FORMATTING ROUTINE TO  */
*                                      /* LIST THE NAME AND DO NOT   */
*                                      /* CONSIDER THIS AN ERROR     */
*                                      /* SINCE THE TYPE AND NAME OF */
*                                      /* THE SUPPRESSED ASSOC ENTRY */
*                                      /* WAS RETURNED.              */
*                                      /*                            */
*                                      /******************************/
*                                                                  1565
*                                      IF CATRC = CRCBADPW &       1565
*                                        ADDR(NAME) > NULLPTR &    1565
*                                        DATEFLG = OFF & NUSEFLG = OFF
*                                        THEN                      1565
         B     @RC01553                                            1565
@RF01553 L     @02,COMVARPT(,COMPTR)                               1565
         CLC   CATRC(2,@02),@CH01313                               1565
         BNE   @RF01565                                            1565
         L     @15,@PC00001+4                                      1565
         L     @15,FDTPTR+52(,@15)                                 1565
         LTR   @15,@15                                             1565
         BNP   @RF01565                                            1565
         L     @15,COMFLGPT(,COMPTR)                               1565
         TM    DATEFLG(@15),B'10000000'                            1565
         BNZ   @RF01565                                            1565
         TM    NUSEFLG(@15),B'10000000'                            1565
         BNZ   @RF01565                                            1565
*                                          DO;                     1566
*                                          HOLDETYP = SUPPTYPE;    1567
         L     @01,COMSWKPT(,COMPTR)                               1567
         L     @01,CTGPLPTR(,@01)                                  1567
         L     @01,CTGWKA(,@01)                                    1567
         MVC   HOLDETYP(1,@02),SUPPTYPE(@01)                       1567
*                                          CALL CDIPROC;           1568
         L     @15,@CV00875                                        1568
         BALR  @14,@15                                             1568
*                                          RESPECIFY RTNREG RSTD;  1569
*                                          TESTRC = RTNREG;        1570
         LR    TESTRC,RTNREG                                       1570
*                                          RESPECIFY RTNREG UNRSTD;
*                                          IF TESTRC ^= 0          1572
*                                            THEN                  1572
         LTR   TESTRC,TESTRC                                       1572
         BZ    @RF01572                                            1572
*                                              RETURN CODE(SAVRC); 1573
         L     @04,COMVARPT(,COMPTR)                               1573
         LH    @15,SAVRC(,@04)                                     1573
         L     @14,@SA00005                                        1573
         LM    @00,@12,@SA00005+8                                  1573
         BR    @14                                                 1573
*                                          CALL FPLPROC;           1574
@RF01572 L     @15,@CV00873                                        1574
         BALR  @14,@15                                             1574
*                                          END;                    1575
*                                        ELSE                      1576
*                                          DO;                     1576
         B     @RC01565                                            1576
@RF01565 DS    0H                                                  1577
*                                          SAVRC = MAX (SAVRC,TESTRC);
         L     @02,COMVARPT(,COMPTR)                               1577
         LH    @15,SAVRC(,@02)                                     1577
         CR    @15,TESTRC                                          1577
         BNL   *+6
         LR    @15,TESTRC                                          1577
         STH   @15,SAVRC(,@02)                                     1577
*                                          CALL ERRPROC;           1578
         L     @15,@CV00872                                        1578
         BALR  @14,@15                                             1578
*                                          IF CATRC = CRCBADPW &   1579
*                                            ADDR(NAME) > NULLPTR &
*                                            (DATEFLG = ON  ×      1579
*                                            NUSEFLG = ON)         1579
*                                            THEN                  1579
         L     @04,COMVARPT(,COMPTR)                               1579
         CLC   CATRC(2,@04),@CH01313                               1579
         BNE   @RF01579                                            1579
         L     @04,@PC00001+4                                      1579
         L     @04,FDTPTR+52(,@04)                                 1579
         LTR   @04,@04                                             1579
         BNP   @RF01579                                            1579
         L     @04,COMFLGPT(,COMPTR)                               1579
         TM    DATEFLG(@04),B'10000000'                            1579
         BO    @RT01579                                            1579
         TM    NUSEFLG(@04),B'10000000'                            1579
         BNO   @RF01579                                            1579
@RT01579 DS    0H                                                  1580
*                                              PWTALLY = PWTALLY + 1;
         LA    @04,1                                               1580
         AL    @04,PWTALLY                                         1580
         ST    @04,PWTALLY                                         1580
*                                          END;                    1581
*                              END BADCRC;                         1582
*                            /****************************************/
*                            /*                              @Y30SSMK*/
*                            /* CONTINUE PROCESSING IF -     @Y30SSMK*/
*                            /*   1. NOTUSABLE OPTION AND    @Y30SSMK*/
*                            /*      CREATION/EXPIRATION OPTION HAVE */
*                            /*      NOT BEEN REQUESTED, OR  @Y30SSMK*/
*                            /*   2. NOTUSABLE OPTION HAS BEEN       */
*                            /*      REQUESTED AND THE ASSOCIATED    */
*                            /*      DATA OR INDEX CATALOG ENTRY HAS */
*                            /*      BEEN MARKED UNUSABLE, AND/OR    */
*                            /*   3. CREATION/EXPIRATION OPTION HAS  */
*                            /*      BEEN REQUESTED AND THE  @Y30SSMK*/
*                            /*      ASSOCIATED CATALOG ENTRY PASSES */
*                            /*      THE DATE TEST.          @Y30SSMK*/
*                            /*                              @Y30SSMK*/
*                            /****************************************/
*                                                                  1583
*                            ELSE                                  1583
*GOODCRC:                      DO;                         /*@Y30SSMK*/
         B     @RC01535                                            1583
@RF01535 DS    0H                                                  1583
GOODCRC  DS    0H                                                  1584
*                              HOLDETYP = CILSTPTR->KIND(CI#IDX);  1584
         L     @04,COMVARPT(,COMPTR)                               1584
         LR    @02,CI#IDX                                          1584
         SLA   @02,2                                               1584
         L     @01,COMSWKPT(,COMPTR)                               1584
         L     @01,CILSTPTR(,@01)                                  1584
         ALR   @01,@02                                             1584
         AL    @01,@CF01593                                        1584
         MVC   HOLDETYP(1,@04),KIND(@01)                           1584
*                              IF (NUSEFLG = ON  &                 1585
*                                (HOLDETYP = CTGTDATA  ×           1585
*                                HOLDETYP = CTGTINDX))  ×          1585
*                                (CLENTSW = ON  &  DATEFLG = ON)   1585
*                                THEN                              1585
         L     @02,COMFLGPT(,COMPTR)                               1585
         TM    NUSEFLG(@02),B'10000000'                            1585
         BNO   @GL00135                                            1585
         CLI   HOLDETYP(@04),C'D'                                  1585
         BE    @RT01585                                            1585
         CLI   HOLDETYP(@04),C'I'                                  1585
         BE    @RT01585                                            1585
@GL00135 L     @04,@PC00005                                        1585
         TM    CLENTSW(@04),B'10000000'                            1585
         BNO   @RF01585                                            1585
         L     @04,COMFLGPT(,COMPTR)                               1585
         TM    DATEFLG(@04),B'10000000'                            1585
         BNO   @RF01585                                            1585
@RT01585 DS    0H                                                  1586
*                                  DO;                     /*@Y30SSMK*/
*                                  NUSESW = OFF;           /*@Y30SSMK*/
         NI    NUSESW,B'01111111'                                  1587
*                                  DATESW = OFF;           /*@Y30SSMK*/
         NI    DATESW,B'01111111'                                  1588
*                                  IF NUSEFLG = ON  &              1589
*                                    (HOLDETYP = CTGTDATA  ×       1589
*                                    HOLDETYP = CTGTINDX)          1589
*                                    THEN                          1589
*                                                                  1589
         L     @04,COMFLGPT(,COMPTR)                               1589
         TM    NUSEFLG(@04),B'10000000'                            1589
         BNO   @RF01589                                            1589
         L     @04,COMVARPT(,COMPTR)                               1589
         CLI   HOLDETYP(@04),C'D'                                  1589
         BE    @RT01589                                            1589
         CLI   HOLDETYP(@04),C'I'                                  1589
         BNE   @RF01589                                            1589
@RT01589 DS    0H                                                  1590
*                                      /******************************/
*                                      /*                    @Y30SSMK*/
*                                      /* POSITION FPL POINTER TO THE*/
*                                      /* DATA SET ATTRIBUTES FPL.   */
*                                      /*                    @Y30SSMK*/
*                                      /******************************/
*                                                                  1590
*                                      DO;                 /*@Y30SSMK*/
*                                      IF ADDR(FALL) = NULLPTR     1591
*                                        THEN                      1591
         L     @04,@PC00001+4                                      1591
         L     @04,FDTPTR+56(,@04)                                 1591
         LTR   @04,@04                                             1591
         BNZ   @RF01591                                            1591
*                                          CTGFLPTR = FPLPTMAP(FPLATR);
         L     @04,COMSWKPT(,COMPTR)                               1592
         LH    @02,FPLATR                                          1592
         SLA   @02,2                                               1592
         L     @01,COMFPLPT(,COMPTR)                               1592
         AL    @01,@CF01593                                        1592
         L     @02,FPLPTMAP(@02,@01)                               1592
         ST    @02,CTGFLPTR(,@04)                                  1592
*                                        ELSE                      1593
*                                          CTGFLPTR = ATTRFPT;     1593
         B     @RC01591                                            1593
@RF01591 L     @04,COMSWKPT(,COMPTR)                               1593
         L     @02,COMFPLPT(,COMPTR)                               1593
         L     @02,ATTRFPT(,@02)                                   1593
         ST    @02,CTGFLPTR(,@04)                                  1593
*                                      IF CTGFLPT(1)  >  NULLPTR   1594
*                                        THEN                      1594
@RC01591 L     @04,COMSWKPT(,COMPTR)                               1594
         L     @04,CTGFLPTR(,@04)                                  1594
         L     @04,CTGFLPT(,@04)                                   1594
         LTR   @04,@04                                             1594
         BNP   @RF01594                                            1594
*                                          DO;             /*@Y30SSMK*/
*                                          IF DSNUSE = ON          1596
*                                            THEN                  1596
*                                                                  1596
         TM    DSNUSE(@04),B'00000001'                             1596
         BNO   @RF01596                                            1596
*                                              /**********************/
*                                              /*            @Y30SSMK*/
*                                              /* PROCESS ENTRY FOR  */
*                                              /* SUCCESSFUL @Y30SSMK*/
*                                              /* NOTUSABLE TEST.    */
*                                              /*            @Y30SSMK*/
*                                              /**********************/
*                                                                  1597
*                                              NUSESW = ON;/*@Y30SSMK*/
         OI    NUSESW,B'10000000'                                  1597
*                                          END;            /*@Y30SSMK*/
*                                      END;                /*@Y30SSMK*/
*                                    ELSE                          1600
*                                                                  1600
*                                      /******************************/
*                                      /*                    @Y30SSMK*/
*                                      /* PROCESS ENTRY IF NOTUSABLE */
*                                      /* OPTION WAS NOT REQUESTED.  */
*                                      /*                    @Y30SSMK*/
*                                      /******************************/
*                                                                  1600
*                                      NUSESW = ON;        /*@Y30SSMK*/
*                                                                  1600
         B     @RC01589                                            1600
@RF01589 OI    NUSESW,B'10000000'                                  1600
*                                  IF CLENTSW = ON  &  DATEFLG = ON
*                                    THEN                          1601
*                                                                  1601
@RC01589 L     @04,@PC00005                                        1601
         TM    CLENTSW(@04),B'10000000'                            1601
         BNO   @RF01601                                            1601
         L     @04,COMFLGPT(,COMPTR)                               1601
         TM    DATEFLG(@04),B'10000000'                            1601
         BNO   @RF01601                                            1601
*                                      /******************************/
*                                      /*                            */
*                                      /* RESET DATE TEST SWITCHES   */
*                                      /* AND INVOKE CKDTPROC TO     */
*                                      /* TEST THE CREATION AND      */
*                                      /* EXPIRATION DATES.  @Y30LSMK*/
*                                      /*                            */
*                                      /******************************/
*                                                                  1602
*                                      DO;                 /*@Y30LSMK*/
*                                      CRDTSW = OFF;       /*@Y30LSMK*/
         NI    CRDTSW(@04),B'01111111'                             1603
*                                      EXDTSW = OFF;       /*@Y30LSMK*/
         NI    EXDTSW(@04),B'01111111'                             1604
*                                      CALL CKDTPROC;      /*@Y30LSMK*/
         BAL   @14,CKDTPROC                                        1605
*                                      IF CRDTSW = ON  &  EXDTSW = ON
*                                        THEN                      1606
*                                                                  1606
         L     @04,COMFLGPT(,COMPTR)                               1606
         TM    CRDTSW(@04),B'10000000'                             1606
         BNO   @RF01606                                            1606
         TM    EXDTSW(@04),B'10000000'                             1606
         BNO   @RF01606                                            1606
*                                          /**************************/
*                                          /*                        */
*                                          /* PROCESS THE ENTRY FOR  */
*                                          /* SUCCESSFUL DATE TEST.  */
*                                          /*                        */
*                                          /**************************/
*                                                                  1607
*                                          DATESW = ON;    /*@Y30LSMK*/
         OI    DATESW,B'10000000'                                  1607
*                                      END;                        1608
*                                    ELSE                          1609
*                                                                  1609
*                                      /******************************/
*                                      /*                            */
*                                      /* PROCESS ENTRY IF CREATION  */
*                                      /* EXPIRATION OPTION WAS NOT  */
*                                      /* REQUESTED.                 */
*                                      /*                            */
*                                      /******************************/
*                                                                  1609
*                                      DATESW = ON;        /*@Y30SSMK*/
*                                                                  1609
         B     @RC01601                                            1609
@RF01601 OI    DATESW,B'10000000'                                  1609
*                                  IF NUSESW = ON  &  DATESW = ON  1610
*                                    THEN                          1610
*                                                                  1610
@RC01601 TM    NUSESW,B'10000000'                                  1610
         BNO   @RF01610                                            1610
         TM    DATESW,B'10000000'                                  1610
         BNO   @RF01610                                            1610
*                                      /******************************/
*                                      /*                    @Y30SSMK*/
*                                      /* IF BOTH THE NOTUSABLE AND  */
*                                      /* CREATION/EXPIRATION TEST   */
*                                      /* HAVE BEEN SUCCESSFUL, CALL */
*                                      /* THE OUTPUT FORMATTING      */
*                                      /* ROUTINE FOR THE ASSOCIATED */
*                                      /* DATA, INDEX, PATH, OR      */
*                                      /* NVSAM PASSING THE TYPE OF  */
*                                      /* ASSOCIATED ENTRY.  @Y30SSMK*/
*                                      /*                    @Y30SSMK*/
*                                      /******************************/
*                                                                  1611
*                                      DO;                 /*@Y30SSMK*/
*                                      IF HOLDETYP = CTGTDATA  ×   1612
*                                        HOLDETYP = CTGTINDX  ×    1612
*                                        HOLDETYP = CTGTPTH        1612
*                                        THEN                      1612
         L     @04,COMVARPT(,COMPTR)                               1612
         CLI   HOLDETYP(@04),C'D'                                  1612
         BE    @RT01612                                            1612
         CLI   HOLDETYP(@04),C'I'                                  1612
         BE    @RT01612                                            1612
         CLI   HOLDETYP(@04),C'R'                                  1612
         BNE   @RF01612                                            1612
@RT01612 DS    0H                                                  1613
*                                          CALL CDIPROC;   /*@Y30SSMK*/
         L     @15,@CV00875                                        1613
         BALR  @14,@15                                             1613
*                                        ELSE                      1614
*                                          IF HOLDETYP = CTGTALIN  1614
*                                            THEN                  1614
         B     @RC01612                                            1614
@RF01612 L     @04,COMVARPT(,COMPTR)                               1614
         CLI   HOLDETYP(@04),C'A'                                  1614
         BNE   @RF01614                                            1614
*                                              CALL AUPROC;        1615
         L     @15,@CV00874                                        1615
         BALR  @14,@15                                             1615
*                                      RESPECIFY RTNREG RSTD;      1616
@RF01614 DS    0H                                                  1616
@RC01612 DS    0H                                                  1617
*                                      TESTRC = RTNREG;            1617
         LR    TESTRC,RTNREG                                       1617
*                                      RESPECIFY RTNREG UNRSTD;/*  1618
*                                                            @Y30SSMK*/
*                                                                  1618
*                                      /******************************/
*                                      /*                    @Y30SSMK*/
*                                      /* RETURN WHEN ANY NON-ZERO   */
*                                      /* RETURN CODE IS ENCOUNTERED */
*                                      /* WHILE PROCESSING THE       */
*                                      /* ASSOCIATED ENTRIES.  USE   */
*                                      /* THE RETURN CODE 'SAVRC'    */
*                                      /* WHICH WAS SET IN THE       */
*                                      /* FORMATTING ROUTINE.        */
*                                      /*                    @Y30SSMK*/
*                                      /******************************/
*                                                                  1619
*                                      IF TESTRC ^= 0              1619
*                                        THEN                      1619
         LTR   TESTRC,TESTRC                                       1619
         BZ    @RF01619                                            1619
*                                          RETURN CODE (SAVRC);    1620
         L     @04,COMVARPT(,COMPTR)                               1620
         LH    @15,SAVRC(,@04)                                     1620
         L     @14,@SA00005                                        1620
         LM    @00,@12,@SA00005+8                                  1620
         BR    @14                                                 1620
*                                      END;                /*@Y30SSMK*/
*                                  END;                    /*@Y30SSMK*/
*                                ELSE                              1623
*                                                                  1623
*                                  /**********************************/
*                                  /*                        @Y30SSMK*/
*                                  /* FOR AN ENTRY THAT IS NOT       */
*                                  /* DATE RESTRICTED, OR RESTRICTED */
*                                  /* TO NOTUSABLE DATA SETS, CALL   */
*                                  /* THE OUTPUT FORMATTING ROUTINE  */
*                                  /* FOR THE ASSOCIATED ENTRY.      */
*                                  /* IF AN UNKNOWN ENTRY TYPE       */
*                                  /* IS ENCOUNTERED, ISSUE AN       */
*                                  /* APPROPRIATE ERROR MESSAGE.     */
*                                  /*                        @Y30SSMK*/
*                                  /**********************************/
*                                                                  1623
*                                  DO;                     /*@Y30SSMK*/
         B     @RC01585                                            1623
@RF01585 DS    0H                                                  1624
*                                  IF HOLDETYP = CTGTCL            1624
*                                    × HOLDETYP = CTGTDATA         1624
*                                    × HOLDETYP=CTGTINDX           1624
*                                    × HOLDETYP=CTGTPGSP           1624
*                                    × HOLDETYP = CTGTPTH          1624
*                                    THEN                          1624
         L     @04,COMVARPT(,COMPTR)                               1624
         CLI   HOLDETYP(@04),C'C'                                  1624
         BE    @RT01624                                            1624
         CLI   HOLDETYP(@04),C'D'                                  1624
         BE    @RT01624                                            1624
         CLI   HOLDETYP(@04),C'I'                                  1624
         BE    @RT01624                                            1624
         CLI   HOLDETYP(@04),C'P'                                  1624
         BE    @RT01624                                            1624
         CLI   HOLDETYP(@04),C'R'                                  1624
         BNE   @RF01624                                            1624
@RT01624 DS    0H                                                  1625
*                                      CALL CDIPROC;       /*@YL026UE*/
         L     @15,@CV00875                                        1625
         BALR  @14,@15                                             1625
*                                    ELSE                          1626
*                                      IF HOLDETYP=CTGTALIN        1626
*                                        × HOLDETYP=CTGTUCAT       1626
*                                        × HOLDETYP=CTGTANM        1626
*                                        × HOLDETYP=CTGTGBS        1626
*                                        THEN                      1626
         B     @RC01624                                            1626
@RF01624 L     @04,COMVARPT(,COMPTR)                               1626
         CLI   HOLDETYP(@04),C'A'                                  1626
         BE    @RT01626                                            1626
         CLI   HOLDETYP(@04),C'U'                                  1626
         BE    @RT01626                                            1626
         CLI   HOLDETYP(@04),C'X'                                  1626
         BE    @RT01626                                            1626
         CLI   HOLDETYP(@04),C'B'                                  1626
         BNE   @RF01626                                            1626
@RT01626 DS    0H                                                  1627
*                                          CALL AUPROC;    /*@YL026UE*/
         L     @15,@CV00874                                        1627
         BALR  @14,@15                                             1627
*                                        ELSE                      1628
*                                          DO;             /*@YL026UE*/
         B     @RC01626                                            1628
@RF01626 DS    0H                                                  1629
*                                          ERRARGPT->DARGSMOD=LC1ID;
         L     @04,COMSWKPT(,COMPTR)                               1629
         L     @04,ERRARGPT(,@04)                                  1629
         MVC   DARGSMOD(3,@04),@CC01155                            1629
*                                          ERRARGPT->DARGSENT=LCMSG05;
         MVI   DARGSENT(@04),X'05'                                 1630
*                                          ERRARGPT->DARGDBP=      1631
*                                            ETYPFPT->CTGFLPT(1);  1631
         L     @02,COMFPLPT(,COMPTR)                               1631
         L     @02,ETYPFPT(,@02)                                   1631
         L     @15,CTGFLPT(,@02)                                   1631
         ST    @15,DARGDBP(,@04)                                   1631
*                                          ERRARGPT->DARGILP=      1632
*                                            ETYPFPT->CTGFLNG(1);  1632
         L     @02,CTGFLNG(,@02)                                   1632
         STH   @02,DARGILP(,@04)                                   1632
*                                          CALL ERRPROC;   /*@YL026UE*/
         L     @15,@CV00872                                        1633
         BALR  @14,@15                                             1633
*                                          ERRARGPT->DARGSMOD=LC1ID;
         L     @04,COMSWKPT(,COMPTR)                               1634
         L     @04,ERRARGPT(,@04)                                  1634
         MVC   DARGSMOD(3,@04),@CC01155                            1634
*                                          ERRARGPT->DARGSENT=LCMSG08;
         MVI   DARGSENT(@04),X'08'                                 1635
*                                          ERRARGPT->DARGDBP=      1636
*                                            ENT44FPT->CTGFLPT(1); 1636
         L     @02,COMFPLPT(,COMPTR)                               1636
         L     @02,ENT44FPT(,@02)                                  1636
         L     @15,CTGFLPT(,@02)                                   1636
         ST    @15,DARGDBP(,@04)                                   1636
*                                          ERRARGPT->DARGILP=      1637
*                                            ENT44FPT->CTGFLNG(1); 1637
         L     @02,CTGFLNG(,@02)                                   1637
         STH   @02,DARGILP(,@04)                                   1637
*                                          IF SAVRC < LASTCC04     1638
*                                            THEN                  1638
         LA    @04,4                                               1638
         L     @02,COMVARPT(,COMPTR)                               1638
         CH    @04,SAVRC(,@02)                                     1638
         BNH   @RF01638                                            1638
*                                              SAVRC = LASTCC04;   1639
         STH   @04,SAVRC(,@02)                                     1639
*                                          END;            /*@YL026UE*/
@RF01638 DS    0H                                                  1641
*                                  RESPECIFY RTNREG RSTD;          1641
@RC01626 DS    0H                                                  1641
@RC01624 DS    0H                                                  1642
*                                  TESTRC = RTNREG;                1642
         LR    TESTRC,RTNREG                                       1642
*                                  RESPECIFY RTNREG UNRSTD;        1643
*                                  IF TESTRC ^= 0                  1644
*                                    THEN                          1644
         LTR   TESTRC,TESTRC                                       1644
         BZ    @RF01644                                            1644
*                                      RETURN CODE (SAVRC);/*@ZA05939*/
         L     @04,COMVARPT(,COMPTR)                               1645
         LH    @15,SAVRC(,@04)                                     1645
         L     @14,@SA00005                                        1645
         LM    @00,@12,@SA00005+8                                  1645
         BR    @14                                                 1645
*                                  END;                    /*@Y30LSMK*/
*                                                                  1646
@RF01644 DS    0H                                                  1647
*                              /**************************************/
*                              /*                                    */
*                              /* RESTORE STRING OF FPL'S FOR NEXT   */
*                              /* CATALOG REQUEST.                   */
*                              /*                                    */
*                              /**************************************/
*                                                                  1647
*                              CALL FPLPROC;                       1647
@RC01585 L     @15,@CV00873                                        1647
         BALR  @14,@15                                             1647
*                              END GOODCRC;                        1648
*                          END YESASSOC;                           1649
@RC01535 DS    0H                                                  1650
*                      END GOODCI#;                                1650
@RF01527 DS    0H                                                  1651
*                END CKASSOC;                                      1651
@RF01515 AL    CI#IDX,@CF00045                                     1651
@DE01514 CR    CI#IDX,ASSOCNO                                      1651
         BNH   @DL01514                                            1651
*                /****************************************************/
*                /*                                                  */
*                /* ASSOCIATED ENTRY PROCESSING IS COMPLETED.        */
*                /* RESTORE THE TYPE SPECIFICATION CODE TO THE CPL   */
*                /* FOR THE NEXT ENTRY LIST REQUEST.  CLEAR THE      */
*                /* INDICATOR FOR A RESTRICTED ENTRY.        @Y30SSMK*/
*                /*                                                  */
*                /****************************************************/
*                                                                  1652
*                CTGTYPE = SAVTYPE;                                1652
         L     @04,COMSWKPT(,COMPTR)                               1652
         L     @04,CTGPLPTR(,@04)                                  1652
         MVC   CTGTYPE(1,@04),SAVTYPE                              1652
*                CLENTSW = OFF;                                    1653
         L     @04,@PC00005                                        1653
         NI    CLENTSW(@04),B'01111111'                            1653
*                END LSTASSOC;                                     1654
*            END CLUSTGRP;                                         1655
*          /**********************************************************/
*          /*                                                        */
*          /* FOR THE RETRIEVED ENTRY THAT IS NOT A  CLUSTER, AIX,   */
*          /* PGSPC OR GDG, CALL THE APPROPRIATE OUTPUT      @Y30SSMK*/
*          /* FORMATTING ROUTINE.                            @Y30SSMK*/
*          /*                                                        */
*          /**********************************************************/
*                                                                  1656
*          ELSE                                                    1656
*NONCTYPE:   DO;                                                   1656
         B     @RC01455                                            1656
@RF01455 DS    0H                                                  1656
NONCTYPE DS    0H                                                  1657
*              VOLSW = OFF;                                /*@Y30LSMK*/
         NI    VOLSW,B'01111111'                                   1657
*              NDENTFLG = OFF;         /*DON'T INDENT NVSAM  @YL026UE*/
         L     @04,COMFLGPT(,COMPTR)                               1658
         NI    NDENTFLG(@04),B'01111111'                           1658
*              IF HOLDETYP = CTGTDATA  ×  HOLDETYP = CTGTINDX  ×   1659
*                HOLDETYP = CTGTPTH                                1659
*                THEN                                              1659
         L     @04,COMVARPT(,COMPTR)                               1659
         CLI   HOLDETYP(@04),C'D'                                  1659
         BE    @RT01659                                            1659
         CLI   HOLDETYP(@04),C'I'                                  1659
         BE    @RT01659                                            1659
         CLI   HOLDETYP(@04),C'R'                                  1659
         BNE   @RF01659                                            1659
@RT01659 DS    0H                                                  1660
*                  CALL CDIPROC;                                   1660
         L     @15,@CV00875                                        1660
         BALR  @14,@15                                             1660
*                ELSE                                              1661
*                  DO;                                     /*@YL026UE*/
*                                                                  1661
         B     @RC01659                                            1661
@RF01659 DS    0H                                                  1662
*                  /**************************************************/
*                  /*                                        @YL026UE*/
*                  /* IF IN GETNEXT MODE AND THE ENTRY IS GDG NVSAM  */
*                  /* AND GDG TYPE IS SPECIFIED OR NO TYPE IS        */
*                  /* SPECIFIED, THEN DO NOT PROCESS AS A SEPERATE   */
*                  /* ENTRY.                                 @YL026UE*/
*                  /*                                        @YL026UE*/
*                  /**************************************************/
*                                                                  1662
*                  IF HOLDETYP = CTGTALIN                          1662
*                    THEN                                          1662
         L     @04,COMVARPT(,COMPTR)                               1662
         CLI   HOLDETYP(@04),C'A'                                  1662
         BNE   @RF01662                                            1662
*                      IF LISTCFLG=ON                              1663
*                         & ASSOCFPT->CTGFLPT(1)->KIND(1)=CTGTGBS  1663
*                        THEN                                      1663
         L     @04,COMFLGPT(,COMPTR)                               1663
         TM    LISTCFLG(@04),B'10000000'                           1663
         BNO   @RF01663                                            1663
         L     @04,COMFPLPT(,COMPTR)                               1663
         L     @04,ASSOCFPT(,@04)                                  1663
         L     @04,CTGFLPT(,@04)                                   1663
         CLI   KIND(@04),C'B'                                      1663
         BNE   @RF01663                                            1663
*                          RETURN CODE(0);                 /*@YL026UE*/
         SLR   @15,@15                                             1664
         L     @14,@SA00005                                        1664
         LM    @00,@12,@SA00005+8                                  1664
         BR    @14                                                 1664
*                  IF HOLDETYP = CTGTANM  ×  HOLDETYP = CTGTUCAT   1665
*                       × HOLDETYP = CTGTALIN                      1665
*                    THEN                                          1665
@RF01663 DS    0H                                                  1665
@RF01662 L     @04,COMVARPT(,COMPTR)                               1665
         CLI   HOLDETYP(@04),C'X'                                  1665
         BE    @RT01665                                            1665
         CLI   HOLDETYP(@04),C'U'                                  1665
         BE    @RT01665                                            1665
         CLI   HOLDETYP(@04),C'A'                                  1665
         BNE   @RF01665                                            1665
@RT01665 DS    0H                                                  1666
*                      CALL AUPROC;                                1666
         L     @15,@CV00874                                        1666
         BALR  @14,@15                                             1666
*                    ELSE                                          1667
*                      IF HOLDETYP = CTGTVOL                       1667
*                        THEN                                      1667
         B     @RC01665                                            1667
@RF01665 L     @04,COMVARPT(,COMPTR)                               1667
         CLI   HOLDETYP(@04),C'V'                                  1667
         BNE   @RF01667                                            1667
*                          VOLSW = ON;                     /*@Y30LSMK*/
*                                                                  1668
         OI    VOLSW,B'10000000'                                   1668
*                        /********************************************/
*                        /*                                          */
*                        /* ERROR - UNKNOWN ENTRY TYPE.              */
*                        /* SETUP APPROPRIATE DIAGNOSTICS.           */
*                        /* EXIT FROM ENTRY ROUTING ROUTINE,         */
*                        /* RETURNING TO CALLER.                     */
*                        /*                                          */
*                        /********************************************/
*                                                                  1669
*                        ELSE                                      1669
*                          DO;                                     1669
         B     @RC01667                                            1669
@RF01667 DS    0H                                                  1670
*                            ERRARGPT->DARGSMOD = LC1ID;           1670
         L     @04,COMSWKPT(,COMPTR)                               1670
         L     @04,ERRARGPT(,@04)                                  1670
         MVC   DARGSMOD(3,@04),@CC01155                            1670
*                            ERRARGPT->DARGSENT = LCMSG05;         1671
         MVI   DARGSENT(@04),X'05'                                 1671
*                            ERRARGPT->DARGDBP = ETYPFPT->CTGFLPT(1);
         L     @02,COMFPLPT(,COMPTR)                               1672
         L     @02,ETYPFPT(,@02)                                   1672
         L     @15,CTGFLPT(,@02)                                   1672
         ST    @15,DARGDBP(,@04)                                   1672
*                            ERRARGPT->DARGILP = ETYPFPT->CTGFLNG(1);
         L     @02,CTGFLNG(,@02)                                   1673
         STH   @02,DARGILP(,@04)                                   1673
*                            CALL ERRPROC;                         1674
         L     @15,@CV00872                                        1674
         BALR  @14,@15                                             1674
*                            ERRARGPT->DARGSMOD = LC1ID;           1675
         L     @04,COMSWKPT(,COMPTR)                               1675
         L     @04,ERRARGPT(,@04)                                  1675
         MVC   DARGSMOD(3,@04),@CC01155                            1675
*                            ERRARGPT->DARGSENT = LCMSG08;         1676
         MVI   DARGSENT(@04),X'08'                                 1676
*                            ERRARGPT->DARGDBP = ENT44FPT->CTGFLPT(1);
         L     @02,COMFPLPT(,COMPTR)                               1677
         L     @02,ENT44FPT(,@02)                                  1677
         L     @15,CTGFLPT(,@02)                                   1677
         ST    @15,DARGDBP(,@04)                                   1677
*                            ERRARGPT->DARGILP = ENT44FPT->CTGFLNG(1);
         L     @02,CTGFLNG(,@02)                                   1678
         STH   @02,DARGILP(,@04)                                   1678
*                            IF SAVRC < LASTCC04                   1679
*                              THEN                                1679
         LA    @04,4                                               1679
         L     @02,COMVARPT(,COMPTR)                               1679
         CH    @04,SAVRC(,@02)                                     1679
         BNH   @RF01679                                            1679
*                                SAVRC = LASTCC04;         /*@ZA05939*/
         STH   @04,SAVRC(,@02)                                     1680
*                            RETURN CODE (LASTCC04);               1681
@RF01679 LA    @15,4                                               1681
         L     @14,@SA00005                                        1681
         LM    @00,@12,@SA00005+8                                  1681
         BR    @14                                                 1681
*                          END;                                    1682
*                  END;                                    /*@YL026UE*/
@RC01667 DS    0H                                                  1683
@RC01665 DS    0H                                                  1684
*              /******************************************************/
*              /*                                            @Y30LSMK*/
*              /* FOR A VOLUME ENTRY THAT IS DATE RESTRICTED @Y30LSMK*/
*              /* INVOKE TIMEPROC TO CONVERT THE VOLUME TIME @Y30LSMK*/
*              /* STAMP TO A PACKED DECIMAL NUMBER TO TEST   @Y30LSMK*/
*              /* AGAINST THE LISTC CONVERTED CREAT VALUE.   @Y30LSMK*/
*              /*                                            @Y30LSMK*/
*              /******************************************************/
*                                                                  1684
*              IF VOLSW = ON                                       1684
*                THEN                                              1684
@RC01659 TM    VOLSW,B'10000000'                                   1684
         BNO   @RF01684                                            1684
*                  IF ADDR(CREAT) > NULLPTR                        1685
*                    THEN                                          1685
*                                                                  1685
         L     @04,@PC00001+4                                      1685
         L     @04,FDTPTR+96(,@04)                                 1685
         LTR   @04,@04                                             1685
         BNP   @RF01685                                            1685
*                      /**********************************************/
*                      /*                                    @Y30LSMK*/
*                      /* POSITION FPL POINTER TO THE VOLUME @Y30LSMK*/
*                      /* TIME STAMP FPL.                    @Y30LSMK*/
*                      /*                                    @Y30LSMK*/
*                      /**********************************************/
*                                                                  1686
*VOLTIMSP:             DO;                                 /*@Y30LSMK*/
VOLTIMSP DS    0H                                                  1687
*                        IF ADDR(FALL) = NULLPTR                   1687
*                          THEN                                    1687
         L     @04,@PC00001+4                                      1687
         L     @04,FDTPTR+56(,@04)                                 1687
         LTR   @04,@04                                             1687
         BNZ   @RF01687                                            1687
*                            CTGFLPTR = FPLPTMAP(FPLVTM);  /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               1688
         LH    @02,FPLVTM                                          1688
         SLA   @02,2                                               1688
         L     @01,COMFPLPT(,COMPTR)                               1688
         AL    @01,@CF01593                                        1688
         L     @02,FPLPTMAP(@02,@01)                               1688
         ST    @02,CTGFLPTR(,@04)                                  1688
*                          ELSE                                    1689
*                            CTGFLPTR = VTIMEFPT;          /*@Y30LSMK*/
         B     @RC01687                                            1689
@RF01687 L     @04,COMSWKPT(,COMPTR)                               1689
         L     @02,COMFPLPT(,COMPTR)                               1689
         L     @02,VTIMEFPT(,@02)                                  1689
         ST    @02,CTGFLPTR(,@04)                                  1689
*                        TIMEODAY = VTIME;                 /*@Y30LSMK*/
@RC01687 L     @04,COMSWKPT(,COMPTR)                               1690
         L     @04,CTGFLPTR(,@04)                                  1690
         L     @04,CTGFLPT(,@04)                                   1690
         MVC   TIMEODAY(8),VTIME(@04)                              1690
*                        CALL TIMEPROC;                    /*@Y30LSMK*/
         BAL   @14,TIMEPROC                                        1691
*                        IF TIMEPACK <= MICTIME            /*@Y30LSMK*/
*                          THEN                                    1692
         CLC   TIMEPACK(16),MICTIME                                1692
         BH    @RF01692                                            1692
*                            CALL VPROC;                   /*@Y30LSMK*/
         L     @15,@CV00876                                        1693
         BALR  @14,@15                                             1693
*                          ELSE                                    1694
*                                                                  1694
*                            /****************************************/
*                            /*                              @Y30LSMK*/
*                            /* IF THE VOLUME TIME STAMP IS NOT      */
*                            /* EARLIER THAN THE CONVERTED CREAT     */
*                            /* VALUE, POSITION FPL POINTER  @Y30LSMK*/
*                            /* TO THE DATA SPACE CHARACTERISTICS FPL*/
*                            /* TO TEST THE DSCB VOLUME TIME STAMP.  */
*                            /*                              @Y30LSMK*/
*                            /****************************************/
*                                                                  1694
*                            DO;                           /*@Y30LSMK*/
         B     @RC01692                                            1694
@RF01692 DS    0H                                                  1695
*                            IF ADDR(FALL) = NULLPTR               1695
*                              THEN                                1695
         L     @04,@PC00001+4                                      1695
         L     @04,FDTPTR+56(,@04)                                 1695
         LTR   @04,@04                                             1695
         BNZ   @RF01695                                            1695
*                                CTGFLPTR = FPLPTMAP(FPLSPH);      1696
         L     @04,COMSWKPT(,COMPTR)                               1696
         LH    @02,FPLSPH                                          1696
         SLA   @02,2                                               1696
         L     @01,COMFPLPT(,COMPTR)                               1696
         AL    @01,@CF01593                                        1696
         L     @02,FPLPTMAP(@02,@01)                               1696
         ST    @02,CTGFLPTR(,@04)                                  1696
*                              ELSE                                1697
*                                CTGFLPTR = VHDRFPT;       /*@Y30LSMK*/
         B     @RC01695                                            1697
@RF01695 L     @04,COMSWKPT(,COMPTR)                               1697
         L     @02,COMFPLPT(,COMPTR)                               1697
         L     @02,VHDRFPT(,@02)                                   1697
         ST    @02,CTGFLPTR(,@04)                                  1697
*                            IF CTGFLNG(1) > 0 & CTGFLPT(1) > NULLPTR
*                              THEN                                1698
@RC01695 SLR   @04,@04                                             1698
         L     @02,COMSWKPT(,COMPTR)                               1698
         L     @02,CTGFLPTR(,@02)                                  1698
         C     @04,CTGFLNG(,@02)                                   1698
         BNL   @RF01698                                            1698
         C     @04,CTGFLPT(,@02)                                   1698
         BNL   @RF01698                                            1698
*DSBTIMSP:                       DO;                       /*@Y30LSMK*/
DSBTIMSP DS    0H                                                  1700
*                                TIMLESSW = OFF;           /*@Y30LSMK*/
         NI    TIMLESSW,B'01111111'                                1700
*                                VHDRPTR = CTGFLPT(1);     /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               1701
         L     @15,CTGFLPTR(,@04)                                  1701
         L     @14,CTGFLPT(,@15)                                   1701
         ST    @14,VHDRPTR(,@04)                                   1701
*                                VHDRLN = CTGFLNG(1);      /*@Y30LSMK*/
*                                                                  1702
         L     VHDRLN,CTGFLNG(,@15)                                1702
*                                /************************************/
*                                /*                          @Y30LSMK*/
*                                /* CYCLE THROUGH THE DATA SPACE     */
*                                /* HEADER FIELDS PICKING UP THE     */
*                                /* VOLUME TIME STAMP. CONVERT IT    */
*                                /* TO A PACKED DECIMAL NUMBER AND   */
*                                /* TEST IT AGAINST THE LISTC        */
*                                /* CONVERTED CREAT VALUE.   @Y30LSMK*/
*                                /*                          @Y30LSMK*/
*                                /************************************/
*                                                                  1703
*                                DO WHILE(VHDRLN >= LENGTH(VDSPHDR) &
*                                  TIMLESSW = OFF);        /*@Y30LSMK*/
         B     @DE01703                                            1703
@DL01703 DS    0H                                                  1704
*                                  TIMEODAY = VDSCBTIM;    /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               1704
         L     @04,VHDRPTR(,@04)                                   1704
         MVC   TIMEODAY(8),VDSCBTIM(@04)                           1704
*                                  CALL TIMEPROC;          /*@Y30LSMK*/
         BAL   @14,TIMEPROC                                        1705
*                                  IF TIMEPACK <= MICTIME          1706
*                                    THEN                          1706
         CLC   TIMEPACK(16),MICTIME                                1706
         BH    @RF01706                                            1706
*                                      TIMLESSW = ON;      /*@Y30LSMK*/
         OI    TIMLESSW,B'10000000'                                1707
*                                    ELSE                          1708
*                                      DO;                 /*@Y30LSMK*/
         B     @RC01706                                            1708
@RF01706 DS    0H                                                  1709
*                                      VHDRLN = VHDRLN -           1709
*                                        LENGTH(VDSPHDR);  /*@Y30LSMK*/
         LA    @04,23                                              1709
         SLR   VHDRLN,@04                                          1709
*                                      VHDRPTR = VHDRPTR +         1710
*                                        LENGTH(VDSPHDR);  /*@Y30LSMK*/
         L     @15,COMSWKPT(,COMPTR)                               1710
         AL    @04,VHDRPTR(,@15)                                   1710
         ST    @04,VHDRPTR(,@15)                                   1710
*                                      END;                /*@Y30LSMK*/
*                                END;                      /*@Y30LSMK*/
*                                                                  1712
@RC01706 DS    0H                                                  1712
@DE01703 C     VHDRLN,@CF00657                                     1712
         BL    @DC01703                                            1712
         TM    TIMLESSW,B'10000000'                                1712
         BZ    @DL01703                                            1712
@DC01703 DS    0H                                                  1713
*                                IF TIMLESSW = ON                  1713
*                                  THEN                            1713
         TM    TIMLESSW,B'10000000'                                1713
         BNO   @RF01713                                            1713
*                                    CALL VPROC;           /*@Y30LSMK*/
         L     @15,@CV00876                                        1714
         BALR  @14,@15                                             1714
*                                END DSBTIMSP;             /*@Y30LSMK*/
*                            END;                          /*@Y30LSMK*/
*                      END VOLTIMSP;                       /*@Y30LSMK*/
*                    ELSE                                          1718
*                      CALL VPROC;                         /*@Y30LSMK*/
*                                                                  1718
         B     @RC01685                                            1718
@RF01685 L     @15,@CV00876                                        1718
         BALR  @14,@15                                             1718
*              /******************************************************/
*              /*                                                    */
*              /* IF LISTING THE ENTRY WAS UNSUCCESSFUL, EXIT FROM   */
*              /* THIS PROCEDURE USING THE RETURN CODE 'SAVRC'       */
*              /* WHICH IS ALREADY SET TO THE HIGHEST RETURN @Y30SSMK*/
*              /* CODE ENCOUNTERED IN THE FORMATTING ROUTINES.       */
*              /*                                                    */
*              /******************************************************/
*                                                                  1719
*              RESPECIFY RTNREG RSTD;                              1719
@RC01685 DS    0H                                                  1719
@RF01684 DS    0H                                                  1720
*              TESTRC = RTNREG;                                    1720
         LR    TESTRC,RTNREG                                       1720
*              RESPECIFY RTNREG UNRSTD;                            1721
*              IF TESTRC ^= 0                                      1722
*                THEN                                              1722
         LTR   TESTRC,TESTRC                                       1722
         BZ    @RF01722                                            1722
*                  RETURN CODE (SAVRC);                    /*@ZA05939*/
         L     @04,COMVARPT(,COMPTR)                               1723
         LH    @15,SAVRC(,@04)                                     1723
         L     @14,@SA00005                                        1723
         LM    @00,@12,@SA00005+8                                  1723
         BR    @14                                                 1723
*            END NONCTYPE;                                         1724
@RF01722 DS    0H                                                  1725
*        /************************************************************/
*        /*                                                          */
*        /* EXIT FROM ENTRY ROUTING ROUTINE, RETURNING TO CALLER.    */
*        /*                                                          */
*        /************************************************************/
*                                                                  1725
*        RETURN CODE(0);                                           1725
@RC01455 SLR   @15,@15                                             1725
         L     @14,@SA00005                                        1725
         LM    @00,@12,@SA00005+8                                  1725
         BR    @14                                                 1725
*        END RTEPROC;                                              1726
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* PROCEDURE - DATEPROC                             @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* FUNCTION - CALCULATES THE CREATION AND           @Y30LSMK*/
*        /* EXPIRATION LISTC OPTIONS TO BE USED IN TESTING   @Y30LSMK*/
*        /* OF THE CATALOG CREATION AND EXPIRATION DATE      @Y30LSMK*/
*        /* FIELDS.                                          @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* INPUT - THE DATA AREA CONTAINING THE CURRENT DATE@Y30LSMK*/
*        /* OBTAINED FROM A UTIME MACRO.                     @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* OUTPUT - INITIALIZED CREATION AND EXPIRATION     @Y30LSMK*/
*        /* DATE DATA AREAS.                                 @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1727
*DATEPROC: PROCEDURE;                                      /*@Y30LSMK*/
*                                                                  1727
DATEPROC STM   @14,@12,12(@13)                                     1727
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* LOCAL VARIABLES                                  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1728
*        DCL NOWYEAR   FIXED(15);      /*CURRENT YEAR        @Y30LSMK*/
*        DCL NOWDAY    FIXED(15);      /*CURRENT DAY         @Y30LSMK*/
*        DCL YRTOTAL   FIXED(15);      /*CALCULATED YEAR     @Y30LSMK*/
*        DCL DAYTOTAL  FIXED(15);      /*CALCULATED DAY      @Y30LSMK*/
*        DCL NOLEAPYR  FIXED(15)       /*NO. OF DAYS PER YEAR        */
*                      CONSTANT(365);                      /*@Y30LSMK*/
*        DCL LEAPYEAR  FIXED(15)       /*NO. OF DAYS PER LEAP YEAR   */
*                      CONSTANT(366);                      /*@Y30LSMK*/
*        DCL DAYPERYR  FIXED(15);      /*NO. OF DAYS IN CURRENT YEAR */
*        DCL YRLOOP    BIT(1)          /*YEAR LOOP INDICATOR @Y30LSMK*/
*                      BDY(BYTE);                          /*@Y30LSMK*/
*        DECLARE                       /*CURRENT YEAR CONVERSION AREA*/
*          1 CNVTYEAR   BIT(16) BDY(BYTE),                         1736
*            2 CVTYEAR  BIT(8),                                    1736
*            2 CVTPACK BIT(8);                             /*@Y30LSMK*/
*        DCL LPYRCNT   FIXED(15) CONSTANT(4);              /*@Y30SSMK*/
*                                      /*LEAP YEAR OCCURENCE @Y30SSMK*/
*                                                                  1738
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* SINCE THE CURRENT YEAR AND DAY ARE RETURNED IN A @Y30LSMK*/
*        /* PACKED DECIMAL FORMAT (YYDDDF), CONVERT VALUE    @Y30LSMK*/
*        /* TO BINARY.                                       @Y30LSMK*/
*        /* NOTE - WHEN CONVERTING THE YEAR TO BINARY, A     @Y30LSMK*/
*        /* 'F0'X IS INSERTED IN THE VALUE TO SIMULATE       @Y30LSMK*/
*        /* A PACKED DECIMAL FORMAT.                         @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1738
*        OLDERID2 = NEWERID2;                                      1738
         L     @04,@PC00001                                        1738
         L     @04,GDTTR2(,@04)                                    1738
         MVC   @TS00001(95),NEWERID2(@04)                          1738
         MVC   OLDERID2(95,@04),@TS00001                           1738
*        NEWID2 = 'LCDT';                                  /*@Y30LSMK*/
*                                                                  1739
         MVC   NEWID2(4,@04),@CC01531                              1739
*        CVB(NOWDAY,XUTDAY);                               /*@Y30LSMK*/
         XC    @TS00001(8),@TS00001                                1740
         MVC   @TS00001+6(2),XUTDAY                                1740
         CVB   NOWDAY,@TS00001                                     1740
*        CVTYEAR = XUTYEAR;                                /*@Y30LSMK*/
         MVC   CVTYEAR(1),XUTYEAR                                  1741
*        CVTPACK = 'F0'X;                                  /*@Y30LSMK*/
         MVI   CVTPACK,X'F0'                                       1742
*        SRL(CNVTYEAR,SHIFTVAL);                           /*@Y30LSMK*/
         SLR   @04,@04                                             1743
         ICM   @04,3,CNVTYEAR                                      1743
         SRL   @04,4                                               1743
         STCM  @04,3,CNVTYEAR                                      1743
*        CVB(NOWYEAR,CNVTYEAR);                            /*@Y30LSMK*/
*                                                                  1744
         XC    @TS00001(8),@TS00001                                1744
         MVC   @TS00001+6(2),CNVTYEAR                              1744
         CVB   NOWYEAR,@TS00001                                    1744
*        IF ADDR(CREAT) > NULLPTR                                  1745
*          THEN                                                    1745
*                                                                  1745
         L     @04,@PC00001+4                                      1745
         L     @04,FDTPTR+96(,@04)                                 1745
         LTR   @04,@04                                             1745
         BNP   @RF01745                                            1745
*            /********************************************************/
*            /*                                              @Y30LSMK*/
*            /* TO CONVERT THE CREATION DATE, COMPUTE THE    @Y30LSMK*/
*            /* TOTAL NUMBER OF DAYS FROM THE END OF THE     @Y30LSMK*/
*            /* CURRENT YEAR.                                @Y30LSMK*/
*            /* NOTE - A CHECK FOR LEAP YEAR IS MADE DURING  @Y30LSMK*/
*            /* THIS CALCULATION.                            @Y30LSMK*/
*            /*                                              @Y30LSMK*/
*            /********************************************************/
*                                                                  1746
*CRDTION:    DO;                                           /*@Y30LSMK*/
CRDTION  DS    0H                                                  1747
*              YRLOOP = ON;                                /*@Y30LSMK*/
         OI    YRLOOP,B'10000000'                                  1747
*              YRTOTAL = NOWYEAR;                          /*@Y30LSMK*/
         LR    YRTOTAL,NOWYEAR                                     1748
*              IF (YRTOTAL // LPYRCNT) = 0                         1749
*                THEN                                              1749
         LR    @00,YRTOTAL                                         1749
         SRDA  @00,32                                              1749
         D     @00,@CF00050                                        1749
         LTR   @00,@00                                             1749
         BNZ   @RF01749                                            1749
*                  DAYTOTAL = (LEAPYEAR - NOWDAY) + CREATVAL;      1750
         LA    DAYTOTAL,366                                        1750
         SLR   DAYTOTAL,NOWDAY                                     1750
         L     @04,@PC00001+4                                      1750
         L     @04,FDTPTR+96(,@04)                                 1750
         AL    DAYTOTAL,CREATVAL(,@04)                             1750
*                ELSE                                              1751
*                  DAYTOTAL = (NOLEAPYR - NOWDAY) + CREATVAL;      1751
*                                                                  1751
         B     @RC01749                                            1751
@RF01749 LA    DAYTOTAL,365                                        1751
         SLR   DAYTOTAL,NOWDAY                                     1751
         L     @04,@PC00001+4                                      1751
         L     @04,FDTPTR+96(,@04)                                 1751
         AL    DAYTOTAL,CREATVAL(,@04)                             1751
*              /******************************************************/
*              /*                                            @Y30LSMK*/
*              /* WHEN THE NUMBER OF DAYS REQUESTED IS       @Y30LSMK*/
*              /* GREATER THAN ONE YEAR, PROCEED TO LOOP     @Y30LSMK*/
*              /* THROUGH THE YEARS DECREMENTING THE TOTAL   @Y30LSMK*/
*              /* COUNT OF DAYS AND YEARS.                   @Y30LSMK*/
*              /*                                            @Y30LSMK*/
*              /******************************************************/
*                                                                  1752
*CDTLOOP:      DO WHILE (YRLOOP = ON);                     /*@Y30LSMK*/
@RC01749 DS    0H                                                  1752
CDTLOOP  B     @DE01752                                            1752
@DL01752 DS    0H                                                  1753
*                IF (YRTOTAL // LPYRCNT) = 0                       1753
*                  THEN                                            1753
         LR    @00,YRTOTAL                                         1753
         SRDA  @00,32                                              1753
         D     @00,@CF00050                                        1753
         LTR   @00,@00                                             1753
         BNZ   @RF01753                                            1753
*                    DAYPERYR = LEAPYEAR;                  /*@Y30LSMK*/
         LA    DAYPERYR,366                                        1754
*                  ELSE                                            1755
*                    DAYPERYR = NOLEAPYR;                  /*@Y30LSMK*/
         B     @RC01753                                            1755
@RF01753 LA    DAYPERYR,365                                        1755
*                IF DAYTOTAL >= DAYPERYR                           1756
*                  THEN                                            1756
@RC01753 CR    DAYTOTAL,DAYPERYR                                   1756
         BL    @RF01756                                            1756
*                    DO;                                   /*@Y30LSMK*/
*                      DAYTOTAL = DAYTOTAL - DAYPERYR;     /*@Y30LSMK*/
         SLR   DAYTOTAL,DAYPERYR                                   1758
*                      YRTOTAL = YRTOTAL - 1;              /*@Y30LSMK*/
         BCTR  YRTOTAL,0                                           1759
*                    END;                                  /*@Y30LSMK*/
*                  ELSE                                            1761
*                    DO;                                   /*@Y30LSMK*/
         B     @RC01756                                            1761
@RF01756 DS    0H                                                  1762
*                      DAYTOTAL = DAYPERYR - DAYTOTAL;     /*@Y30LSMK*/
         LR    @15,DAYPERYR                                        1762
         SLR   @15,DAYTOTAL                                        1762
         LR    DAYTOTAL,@15                                        1762
*                      YRLOOP = OFF;                       /*@Y30LSMK*/
         NI    YRLOOP,B'01111111'                                  1763
*                    END;                                  /*@Y30LSMK*/
*              END CDTLOOP;                                /*@Y30LSMK*/
*                                                                  1765
@RC01756 DS    0H                                                  1765
@DE01752 TM    YRLOOP,B'10000000'                                  1765
         BO    @DL01752                                            1765
*              /******************************************************/
*              /*                                            @Y30LSMK*/
*              /* CONVERT THE DAY AND YEAR BACK TO A PACKED  @Y30LSMK*/
*              /* DECIMAL FORMAT.                            @Y30LSMK*/
*              /*                                            @Y30LSMK*/
*              /******************************************************/
*                                                                  1766
*              CVD(DAYTOTAL,CDTDAY);                       /*@Y30LSMK*/
         CVD   DAYTOTAL,@TS00001                                   1766
         MVC   CDTDAY(2),@TS00001+6                                1766
*              CVD(YRTOTAL,CNVTYEAR);                      /*@Y30LSMK*/
         CVD   YRTOTAL,@TS00001                                    1767
         MVC   CNVTYEAR(2),@TS00001+6                              1767
*              SLL(CNVTYEAR,SHIFTVAL);                     /*@Y30LSMK*/
         SLR   @04,@04                                             1768
         ICM   @04,3,CNVTYEAR                                      1768
         SLL   @04,4                                               1768
         STCM  @04,3,CNVTYEAR                                      1768
*              CDTYEAR = CVTYEAR;                          /*@Y30LSMK*/
         MVC   CDTYEAR(1),CVTYEAR                                  1769
*            END CRDTION;                                  /*@Y30LSMK*/
*                                                                  1770
*        IF ADDR(EXPIR) > NULLPTR                                  1771
*          THEN                                                    1771
*                                                                  1771
@RF01745 L     @04,@PC00001+4                                      1771
         L     @04,FDTPTR+100(,@04)                                1771
         LTR   @04,@04                                             1771
         BNP   @RF01771                                            1771
*            /********************************************************/
*            /*                                              @Y30LSMK*/
*            /* TO CALCULATE THE EXPIRATION DATE, COMPUTE    @Y30LSMK*/
*            /* THE TOTAL NUMBER OF DAYS FROM THE BEGINING   @Y30LSMK*/
*            /* OF THE CURRENT YEAR.                         @Y30LSMK*/
*            /* NOTE - A CHECK FOR LEAP YEAR IS MADE DURING  @Y30LSMK*/
*            /* THIS CALCULATION.                            @Y30LSMK*/
*            /*                                              @Y30LSMK*/
*            /********************************************************/
*                                                                  1772
*EXDTION:    DO;                                           /*@Y30LSMK*/
EXDTION  DS    0H                                                  1773
*              YRLOOP = ON;                                /*@Y30LSMK*/
         OI    YRLOOP,B'10000000'                                  1773
*              YRTOTAL = NOWYEAR;                          /*@Y30LSMK*/
         LR    YRTOTAL,NOWYEAR                                     1774
*              DAYTOTAL = EXPIRVAL + NOWDAY;               /*@Y30LSMK*/
*                                                                  1775
         L     @07,@PC00001+4                                      1775
         L     @07,FDTPTR+100(,@07)                                1775
         LR    DAYTOTAL,NOWDAY                                     1775
         AL    DAYTOTAL,EXPIRVAL(,@07)                             1775
*              /******************************************************/
*              /*                                            @Y30LSMK*/
*              /* WHEN THE NUMBER OF DAYS REQUESTED IS       @Y30LSMK*/
*              /* GREATER THAN ONE YEAR, PROCEED TO LOOP     @Y30LSMK*/
*              /* THROUGH THE YEARS INCREMENTING THE TOTAL   @Y30LSMK*/
*              /* COUNT OF DAYS AND YEARS.                   @Y30LSMK*/
*              /* NOTE - ANY CALCULATION RESULTING IN A DATE @Y30LSMK*/
*              /* PAST THE YEAR 2000 WILL BE SET TO 99.999   @Y30LSMK*/
*              /* (YYDDD).                                   @Y30LSMK*/
*              /*                                            @Y30LSMK*/
*              /******************************************************/
*                                                                  1776
*EXPLOOP:      DO WHILE (YRLOOP = ON);                     /*@Y30LSMK*/
EXPLOOP  B     @DE01776                                            1776
@DL01776 DS    0H                                                  1777
*                IF (YRTOTAL // LPYRCNT) = 0                       1777
*                  THEN                                            1777
         LR    @00,YRTOTAL                                         1777
         SRDA  @00,32                                              1777
         D     @00,@CF00050                                        1777
         LTR   @00,@00                                             1777
         BNZ   @RF01777                                            1777
*                    DAYPERYR = LEAPYEAR;                  /*@Y30LSMK*/
         LA    DAYPERYR,366                                        1778
*                  ELSE                                            1779
*                    DAYPERYR = NOLEAPYR;                  /*@Y30LSMK*/
         B     @RC01777                                            1779
@RF01777 LA    DAYPERYR,365                                        1779
*                IF DAYTOTAL > DAYPERYR                            1780
*                  THEN                                            1780
@RC01777 CR    DAYTOTAL,DAYPERYR                                   1780
         BNH   @RF01780                                            1780
*                    DO;                                   /*@Y30LSMK*/
*                      DAYTOTAL = DAYTOTAL - DAYPERYR;     /*@Y30LSMK*/
         SLR   DAYTOTAL,DAYPERYR                                   1782
*                      YRTOTAL = YRTOTAL + 1;              /*@Y30LSMK*/
         AL    YRTOTAL,@CF00045                                    1783
*                      IF YRTOTAL = 99  &  DAYTOTAL > DAYPERYR     1784
*                        THEN                                      1784
         C     YRTOTAL,@CF01543                                    1784
         BNE   @RF01784                                            1784
         CR    DAYTOTAL,DAYPERYR                                   1784
         BNH   @RF01784                                            1784
*                          DO;                             /*@Y30LSMK*/
*                            DAYTOTAL = 999;               /*@Y30LSMK*/
         LA    DAYTOTAL,999                                        1786
*                            YRLOOP = OFF;                 /*@Y30LSMK*/
         NI    YRLOOP,B'01111111'                                  1787
*                          END;                            /*@Y30LSMK*/
*                    END;                                  /*@Y30LSMK*/
*                  ELSE                                            1790
*                    YRLOOP = OFF;                         /*@Y30LSMK*/
         B     @RC01780                                            1790
@RF01780 NI    YRLOOP,B'01111111'                                  1790
*              END EXPLOOP;                                /*@Y30LSMK*/
*                                                                  1791
@RC01780 DS    0H                                                  1791
@DE01776 TM    YRLOOP,B'10000000'                                  1791
         BO    @DL01776                                            1791
*              /******************************************************/
*              /*                                            @Y30LSMK*/
*              /* CONVERT THE DAY AND YEAR BACK TO A PACKED  @Y30LSMK*/
*              /* DECIMAL FORMAT.                            @Y30LSMK*/
*              /*                                            @Y30LSMK*/
*              /******************************************************/
*                                                                  1792
*              CVD(DAYTOTAL,EXPDAY);                       /*@Y30LSMK*/
         CVD   DAYTOTAL,@TS00001                                   1792
         MVC   EXPDAY(2),@TS00001+6                                1792
*              CVD(YRTOTAL,CNVTYEAR);                      /*@Y30LSMK*/
         CVD   YRTOTAL,@TS00001                                    1793
         MVC   CNVTYEAR(2),@TS00001+6                              1793
*              SLL(CNVTYEAR,SHIFTVAL);                     /*@Y30LSMK*/
         SLR   @04,@04                                             1794
         ICM   @04,3,CNVTYEAR                                      1794
         SLL   @04,4                                               1794
         STCM  @04,3,CNVTYEAR                                      1794
*              EXPYEAR = CVTYEAR;                          /*@Y30LSMK*/
         MVC   EXPYEAR(1),CVTYEAR                                  1795
*            END EXDTION;                                  /*@Y30LSMK*/
*                                                                  1796
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* THE CREATION AND EXPIRATION DATES HAVE NOW BEEN  @Y30LSMK*/
*        /* CALCULATED.  EXIT FROM DATEPROC RETURNING TO THE @Y30LSMK*/
*        /* CALLING PROCEDURE.                               @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1797
*        RETURN CODE(0);                                   /*@Y30LSMK*/
@RF01771 SLR   @15,@15                                             1797
         L     @14,12(,@13)                                        1797
         LM    @00,@12,20(@13)                                     1797
         BR    @14                                                 1797
*        END DATEPROC;                                     /*@Y30LSMK*/
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* PROCEDURE - TIMEPROC                             @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* FUNCTION - CONVERTS THE TIME OF DAY, EITHER FROM @Y30LSMK*/
*        /* THE UTIME MACRO OR THE CATALOG VOLUME TIME STAMP @Y30LSMK*/
*        /* TO A PACKED DECIMAL FORMAT.                      @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* INPUT - DATA AREA CONTAINING THE TIME OF DAY.    @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* OUTPUT - INITIALIZED TIME OF DAY DATA AREA IN    @Y30LSMK*/
*        /* PACKED DECIMAL FORMAT.                           @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1799
*TIMEPROC: PROCEDURE;                                      /*@Y30LSMK*/
*                                                                  1799
TIMEPROC STM   @14,@12,12(@13)                                     1799
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* LOCAL VARIABLES                                  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1800
*        DCL TODPACK   CHAR(8) BDY(DWORD); /*CONVERSION AREA @Y30LSMK*/
*        DCL TIMSHIFT  FIXED(8)        /*TOD SHIFT VALUE     @Y30LSMK*/
*                      CONSTANT(12);                       /*@Y30LSMK*/
*        DCL TIMCVFAC  FIXED(31)       /*TIME CONVERSION FACTOR      */
*                      CONSTANT(65536);                    /*@Y30LSMK*/
*        DCL TIMCFAC1  FIXED(31);      /*WORKAREA FOR TIME CONVERSION*/
*                                                                  1803
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* SINCE THE TIME OF DAY IS IN BINARY, CONVERT TO   @Y30LSMK*/
*        /* A PACKED DECIMAL FORMAT. SINCE BIT POSITION 51   @Y30LSMK*/
*        /* IN THE DATA AREA IS THE HIGHEST SIGNIFICANT      @Y30LSMK*/
*        /* DIGIT RETURNED FROM THE UTIME MACRO, SHIFT THE   @Y30LSMK*/
*        /* VALUE TO THE LOWEST ORDER POSITION.  ALSO        @Y30LSMK*/
*        /* SINCE THE VALUE IS GREATER THAN 4 BYTES, THE     @Y30LSMK*/
*        /* CONVERSION IS ACCOMPLISHED BY CONVERTING         @Y30LSMK*/
*        /* ONLY 4 BYTES AT A TIME.  THE HIGH ORDER 4        @Y30LSMK*/
*        /* BYTES ARE ADJUSTED TO IT'S CORRECT VALUE.        @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1804
*        OLDERID2 = NEWERID2;                                      1804
         L     @04,@PC00001                                        1804
         L     @04,GDTTR2(,@04)                                    1804
         MVC   @TS00001(95),NEWERID2(@04)                          1804
         MVC   OLDERID2(95,@04),@TS00001                           1804
*        NEWID2 = 'LCTM';                                  /*@Y30LSMK*/
*                                                                  1805
         MVC   NEWID2(4,@04),@CC01553                              1805
*        TIMEPACK = ZEROAREA;                              /*@Y30LSMK*/
         MVC   TIMEPACK(16),ZEROAREA                               1806
*        SRDL(TIMEODAY,TIMSHIFT);                          /*@Y30LSMK*/
         LM    @00,@01,TIMEODAY                                    1807
         SRDL  @00,12                                              1807
         STM   @00,@01,TIMEODAY                                    1807
*        CVD(FIRSTTM,TIMPACK1);                            /*@Y30LSMK*/
         L     @04,FIRSTTM                                         1808
         CVD   @04,TIMPACK1                                        1808
*        TIMCFAC1 = TIMCVFAC;                              /*@Y30LSMK*/
         L     TIMCFAC1,@CF01551                                   1809
*        CVD(TIMCFAC1,TODPACK);                            /*@Y30LSMK*/
         CVD   TIMCFAC1,TODPACK                                    1810
*        TMPACK = TIMPACK1;                                /*@Y30LSMK*/
         MVC   TMPACK(8),TIMPACK1                                  1811
*        MP(TIMEPACK,TODPACK);                             /*@Y30LSMK*/
         MP    TIMEPACK(16),TODPACK(8)                             1812
*        MP(TIMEPACK,TODPACK);                             /*@Y30LSMK*/
         MP    TIMEPACK(16),TODPACK(8)                             1813
*        CVD(SECONDTM,TODPACK);                            /*@Y30LSMK*/
         L     @04,SECONDTM                                        1814
         CVD   @04,TODPACK                                         1814
*        AP(TIMEPACK,TODPACK);                             /*@Y30LSMK*/
*                                                                  1815
         AP    TIMEPACK(16),TODPACK(8)                             1815
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* THE TIME OF DAY HAS NOW BEEN CONVERTED TO A      @Y30LSMK*/
*        /* PACKED DECIMAL FORMAT.  EXIT FROM TIMEPROC       @Y30LSMK*/
*        /* RETURNING TO THE CALLING PROCEDURE.              @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1816
*        RETURN CODE(0);                                   /*@Y30LSMK*/
         SLR   @15,@15                                             1816
         L     @14,12(,@13)                                        1816
         LM    @00,@12,20(@13)                                     1816
         BR    @14                                                 1816
*        END TIMEPROC;                                     /*@Y30LSMK*/
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* PROCEDURE - CKDTPROC                             @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* FUNCTION - TESTS THE ENTRY'S CREATION AND        @Y30LSMK*/
*        /* EXPIRATION DATE CATALOG FIELDS AGAINST THE       @Y30LSMK*/
*        /* REQUESTED CREATION AND EXPIRATION LISTC OPTIONS. @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* INPUT - CREATION AND EXPIRATION DATE SWITCHES.   @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /* OUTPUT - CREATION AND EXPIRATION DATE SWITCHES   @Y30LSMK*/
*        /* SET.                                             @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1818
*CKDTPROC: PROCEDURE;                                      /*@Y30LSMK*/
*                                                                  1818
CKDTPROC STM   @14,@12,12(@13)                                     1818
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* LOCAL VARIABLES                                  @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1819
*        DECLARE                       /*DATASET DATE        @Y30LSMK*/
*          1 DSDATE   CHAR(3)  BDY(WORD),                          1819
*            2 DSDT   BIT(24);                             /*@Y30LSMK*/
*                                                                  1819
*        DECLARE                       /*USER CALCULATED DATE        */
*          1 USDATE   CHAR(3)  BDY(WORD),                          1820
*            2 USDT   BIT(24);                             /*@Y30LSMK*/
*                                                                  1820
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* TEST THE ENTRY'S CREATION AND EXPIRATION DATE    @Y30LSMK*/
*        /* FIELDS AGAINST THE LISTC CALCULATED CREATION AND @Y30LSMK*/
*        /* EXPIRATION DATE FIELDS.  THE TEST IS CONSIDERED  @Y30LSMK*/
*        /* SUCCESSFUL IF:                                   @Y30LSMK*/
*        /*   1. NO DATE FIELDS EXIST FOR THIS ENTRY, OR     @Y30LSMK*/
*        /*   2. THE DATE FIELDS EXIST, BUT ARE NOT INITIALIZED, OR  */
*        /*   3. THE DATE FIELDS EXIST AND ARE LESS THAN OR  @Y30LSMK*/
*        /*      EQUAL TO THE LISTC CALCULATED DATES.        @Y30LSMK*/
*        /* NOTE - THE SIGN DIGIT IS NOT TESTED.             @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1821
*        OLDERID2 = NEWERID2;                                      1821
         L     @04,@PC00001                                        1821
         L     @04,GDTTR2(,@04)                                    1821
         MVC   @TS00001(95),NEWERID2(@04)                          1821
         MVC   OLDERID2(95,@04),@TS00001                           1821
*        NEWID2 = 'LCCK';                                  /*@Y30LSMK*/
*                                                                  1822
         MVC   NEWID2(4,@04),@CC01563                              1822
*        IF ADDR(CREAT) > NULLPTR                                  1823
*          THEN                                                    1823
*                                                                  1823
         SLR   @04,@04                                             1823
         L     @02,@PC00001+4                                      1823
         C     @04,FDTPTR+96(,@02)                                 1823
         BNL   @RF01823                                            1823
*            /********************************************************/
*            /*                                              @Y30LSMK*/
*            /* POSITION FPL POINTER TO CREATION DATE FPL.   @Y30LSMK*/
*            /*                                              @Y30LSMK*/
*            /********************************************************/
*                                                                  1824
*            DO;                                           /*@Y30LSMK*/
*              IF ADDR(NAME) > NULLPTR                             1825
*                THEN                                              1825
         C     @04,FDTPTR+52(,@02)                                 1825
         BNL   @RF01825                                            1825
*                  CTGFLPTR = FPLPTMAP(FPLCDT);            /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               1826
         LH    @02,FPLCDT                                          1826
         SLA   @02,2                                               1826
         L     @01,COMFPLPT(,COMPTR)                               1826
         AL    @01,@CF01593                                        1826
         L     @02,FPLPTMAP(@02,@01)                               1826
         ST    @02,CTGFLPTR(,@04)                                  1826
*                ELSE                                              1827
*                  CTGFLPTR = CRDTFPT;                     /*@Y30LSMK*/
         B     @RC01825                                            1827
@RF01825 L     @04,COMSWKPT(,COMPTR)                               1827
         L     @02,COMFPLPT(,COMPTR)                               1827
         L     @02,CRDTFPT(,@02)                                   1827
         ST    @02,CTGFLPTR(,@04)                                  1827
*              IF CTGFLPT(1) > NULLPTR                             1828
*                THEN                                              1828
@RC01825 L     @04,COMSWKPT(,COMPTR)                               1828
         L     @04,CTGFLPTR(,@04)                                  1828
         L     @04,CTGFLPT(,@04)                                   1828
         LTR   @04,@04                                             1828
         BNP   @RF01828                                            1828
*                  DO;                                     /*@Y30LSMK*/
*                    DSDATE = CRDT;                        /*@Y30LSMK*/
         MVC   DSDATE(3),CRDT(@04)                                 1830
*                    SRL(DSDT,SHIFTVAL);                   /*@Y30LSMK*/
         SLR   @02,@02                                             1831
         ICM   @02,7,DSDT                                          1831
         SRL   @02,4                                               1831
         STCM  @02,7,DSDT                                          1831
*                    USDATE = CDTMULTI;                    /*@Y30LSMK*/
         MVC   USDATE(3),CDTMULTI                                  1832
*                    SRL(USDT,SHIFTVAL);                   /*@Y30LSMK*/
         SLR   @02,@02                                             1833
         ICM   @02,7,USDT                                          1833
         SRL   @02,4                                               1833
         STCM  @02,7,USDT                                          1833
*                    IF CRDT = ARITH4FF  ×  DSDATE <= USDATE       1834
*                      THEN                                        1834
         CLC   CRDT(3,@04),ARITH4FF                                1834
         BE    @RT01834                                            1834
         CLC   DSDATE(3),USDATE                                    1834
         BH    @RF01834                                            1834
@RT01834 DS    0H                                                  1835
*                        CRDTSW = ON;                      /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               1835
         OI    CRDTSW(@04),B'10000000'                             1835
*                  END;                                    /*@Y30LSMK*/
*                ELSE                                              1837
*                  CRDTSW = ON;                            /*@Y30LSMK*/
         B     @RC01828                                            1837
@RF01828 L     @04,COMFLGPT(,COMPTR)                               1837
         OI    CRDTSW(@04),B'10000000'                             1837
*            END;                                          /*@Y30LSMK*/
*          ELSE                                                    1839
*            CRDTSW = ON;                                  /*@Y30LSMK*/
*                                                                  1839
         B     @RC01823                                            1839
@RF01823 L     @04,COMFLGPT(,COMPTR)                               1839
         OI    CRDTSW(@04),B'10000000'                             1839
*        IF ADDR(EXPIR) > NULLPTR                                  1840
*          THEN                                                    1840
*                                                                  1840
@RC01823 SLR   @04,@04                                             1840
         L     @02,@PC00001+4                                      1840
         C     @04,FDTPTR+100(,@02)                                1840
         BNL   @RF01840                                            1840
*            /********************************************************/
*            /*                                              @Y30LSMK*/
*            /* POSITION FPL POINTER TO EXPIRATION DATE FPL. @Y30LSMK*/
*            /*                                              @Y30LSMK*/
*            /********************************************************/
*                                                                  1841
*            DO;                                           /*@Y30LSMK*/
*              IF ADDR(NAME) > NULLPTR                             1842
*                THEN                                              1842
         C     @04,FDTPTR+52(,@02)                                 1842
         BNL   @RF01842                                            1842
*                  CTGFLPTR = FPLPTMAP(FPLEXP);            /*@Y30LSMK*/
         L     @04,COMSWKPT(,COMPTR)                               1843
         LH    @02,FPLEXP                                          1843
         SLA   @02,2                                               1843
         L     @01,COMFPLPT(,COMPTR)                               1843
         AL    @01,@CF01593                                        1843
         L     @02,FPLPTMAP(@02,@01)                               1843
         ST    @02,CTGFLPTR(,@04)                                  1843
*                ELSE                                              1844
*                  CTGFLPTR = EXDTFPT;                     /*@Y30LSMK*/
         B     @RC01842                                            1844
@RF01842 L     @04,COMSWKPT(,COMPTR)                               1844
         L     @02,COMFPLPT(,COMPTR)                               1844
         L     @02,EXDTFPT(,@02)                                   1844
         ST    @02,CTGFLPTR(,@04)                                  1844
*              IF CTGFLPT(1) > NULLPTR                             1845
*                THEN                                              1845
@RC01842 L     @04,COMSWKPT(,COMPTR)                               1845
         L     @04,CTGFLPTR(,@04)                                  1845
         L     @04,CTGFLPT(,@04)                                   1845
         LTR   @04,@04                                             1845
         BNP   @RF01845                                            1845
*                  DO;                                     /*@Y30LSMK*/
*                    DSDATE = EXDT;                        /*@Y30LSMK*/
         MVC   DSDATE(3),EXDT(@04)                                 1847
*                    SRL(DSDT,SHIFTVAL);                   /*@Y30LSMK*/
         SLR   @02,@02                                             1848
         ICM   @02,7,DSDT                                          1848
         SRL   @02,4                                               1848
         STCM  @02,7,DSDT                                          1848
*                    USDATE = EXPMULTI;                    /*@Y30LSMK*/
         MVC   USDATE(3),EXPMULTI                                  1849
*                    SRL(USDT,SHIFTVAL);                   /*@Y30LSMK*/
         SLR   @02,@02                                             1850
         ICM   @02,7,USDT                                          1850
         SRL   @02,4                                               1850
         STCM  @02,7,USDT                                          1850
*                    IF EXDT = ARITH4FF  ×  DSDATE <= USDATE       1851
*                      THEN                                        1851
         CLC   EXDT(3,@04),ARITH4FF                                1851
         BE    @RT01851                                            1851
         CLC   DSDATE(3),USDATE                                    1851
         BH    @RF01851                                            1851
@RT01851 DS    0H                                                  1852
*                        EXDTSW = ON;                      /*@Y30LSMK*/
         L     @04,COMFLGPT(,COMPTR)                               1852
         OI    EXDTSW(@04),B'10000000'                             1852
*                  END;                                    /*@Y30LSMK*/
*                ELSE                                              1854
*                  EXDTSW = ON;                            /*@Y30LSMK*/
         B     @RC01845                                            1854
@RF01845 L     @04,COMFLGPT(,COMPTR)                               1854
         OI    EXDTSW(@04),B'10000000'                             1854
*            END;                                          /*@Y30LSMK*/
*          ELSE                                                    1856
*            EXDTSW = ON;                                  /*@Y30LSMK*/
*                                                                  1856
         B     @RC01840                                            1856
@RF01840 L     @04,COMFLGPT(,COMPTR)                               1856
         OI    EXDTSW(@04),B'10000000'                             1856
*        /************************************************************/
*        /*                                                  @Y30LSMK*/
*        /* BOTH THE CREATION AND EXPIRATION DATE FIELDS     @Y30LSMK*/
*        /* HAVE BEEN TESTED AND THE APPROPRIATE SWITCHES    @Y30LSMK*/
*        /* HAVE BEEN SET.  EXIT HERE RETURNING TO THE       @Y30LSMK*/
*        /* CALLING PROCEDURE.                               @Y30LSMK*/
*        /*                                                  @Y30LSMK*/
*        /************************************************************/
*                                                                  1857
*        RETURN CODE(0);                                   /*@Y30LSMK*/
@RC01840 SLR   @15,@15                                             1857
         L     @14,12(,@13)                                        1857
         LM    @00,@12,20(@13)                                     1857
         BR    @14                                                 1857
*        END CKDTPROC;                                     /*@Y30LSMK*/
*        /************************************************************/
*        /*                                                          */
*        /* LISTCAT IDCLC01 EOJ.                             @ZA05939*/
*        /*                                                          */
*        /************************************************************/
*                                                                  1859
*        END IDCLC01                                               1859
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (IDCCSLC )                                        *
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                        *
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                        *
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                        *
*;                                                                 1859
@DATA    DS    0H
@CH00293 DC    H'5'
@CH00480 DC    H'7'
@CH00187 DC    H'8'
@CH00646 DC    H'9'
@CH00600 DC    H'11'
@CH00490 DC    H'16'
@CH01139 DC    H'33'
@CH00610 DC    H'44'
@CH01270 DC    H'45'
@CH01565 DC    H'48'
@CH01583 DC    H'66'
@CH01315 DC    H'124'
@SM01594 MVC   SAVFPL(0,SAPTR),CTGFL(@14)
@SM01596 MVC   SAVFPL(0,SAPTR),CTGFL(@06)
         DS    0F
@AL00367 DC    A(@CC01245)             LIST WITH   2 ARGUMENT(S)
         DC    AL1(X'80')
         DC    AL3(ALL)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@SA00004 DS    15F
@SA00003 DS    15F
@SA00005 DS    15F
@PC00005 DS    1F
@AL00001 DS    5A
@TF00001 DS    F
@AFTEMPS DS    1F
IDCLC01  CSECT
         DS    0F
@CF00123 DC    F'0'
@CF00045 DC    F'1'
@CH00045 EQU   @CF00045+2
@CF00161 DC    F'2'
@CH00161 EQU   @CF00161+2
@CF00170 DC    F'3'
@CH00170 EQU   @CF00170+2
@CF00050 DC    F'4'
@CH00050 EQU   @CF00050+2
@CF00164 DC    F'6'
@CH00164 EQU   @CF00164+2
@CF00586 DC    F'12'
@CF00657 DC    F'23'
@CF01311 DC    F'40'
@CH01311 EQU   @CF01311+2
@CF01313 DC    F'56'
@CH01313 EQU   @CF01313+2
@CF01581 DC    F'61'
@CF01543 DC    F'99'
@CF00155 DC    F'100'
@CF01582 DC    F'710'
@CH01582 EQU   @CF01582+2
@CF01551 DC    F'65536'
@CF01346 DC    F'86400'
@CF01343 DC    F'1000000'
@CF01603 DC    F'-64'
@CF01604 DC    F'-63'
@CF01605 DC    F'-55'
@CF01606 DC    F'-54'
@CF01601 DC    F'-44'
@CF01602 DC    F'-43'
@CF01607 DC    F'-41'
@CF01608 DC    F'-40'
@CF01593 DC    F'-4'
@CF01611 DC    F'-3'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
GPPTR    DS    F
GPLEN    DS    F
UQCATPTR DS    A
UQPASPTR DS    A
UQENTPTR DS    A
PWTALLY  DS    F
LISTPTR  DS    A
FPLATR   DS    H
FPLEXP   DS    H
FPLCDT   DS    H
FPLSPH   DS    H
FPLVTM   DS    H
UIDLN    DS    H
UQENTLEN DS    H
NAMECNT  DS    H
SETRC    DS    H
LISTLN   DS    FL1
         DS    0D
@TS00001 DS    CL95
         DS    CL1
ERRDARG  DS    CL44
GPID     DS    CL4
OTARGLST DS    BL48
UIDNM    DS    CL7
         DS    CL1
ENTYNM   DS    CL49
         ORG   ENTYNM
ENTCT    DS    FL4
@NM00050 DS    CL45
         ORG   @NM00050
ETYTYP   DS    CL1
ENTNM    DS    CL44
         ORG   ENTYNM+49
         DS    CL3
CIRAREA  DS    CL32
CDTMULTI DS    CL3
         ORG   CDTMULTI
CDTYEAR  DS    BL1
CDTDAY   DS    BL2
         ORG   CDTMULTI+3
EXPMULTI DS    CL3
         ORG   EXPMULTI
EXPYEAR  DS    BL1
EXPDAY   DS    BL2
         ORG   EXPMULTI+3
ENTNAME  DS    CL44
         DS    CL2
DOBJNAM  DS    CL145
         DS    CL3
DAS#FLGS DS    CL49
         DS    CL3
TIMEODAY DS    CL8
         ORG   TIMEODAY
FIRSTTM  DS    FL4
SECONDTM DS    FL4
         ORG   TIMEODAY+8
CREATEDT DS    CL4
         ORG   CREATEDT
@NM00054 DS    CL1
XUTYEAR  DS    BL1
XUTDAY   DS    BL2
         ORG   CREATEDT+4
TIMEPACK DS    CL16
         ORG   TIMEPACK
@NM00055 DS    CL8
TMPACK   DS    CL8
         ORG   TIMEPACK+16
         DS    CL4
TIMPACK1 DS    CL8
MICTIME  DS    CL16
         ORG   MICTIME
@NM00056 DS    CL8
MCTIME   DS    CL8
         ORG   MICTIME+16
CMSEOFLG DS    BL1
BYPASFLG DS    BL1
TYPOKFLG DS    BL1
BADPWFLG DS    BL1
SHORTFLG DS    BL1
SHVOLFLG DS    BL1
NOTRQFLG DS    BL1
LVLNMWOA DS    CL44
SAVTYPE  DS    CL1
ASSOCFLG DS    BL1
NUSESW   DS    BL1
DATESW   DS    BL1
VOLSW    DS    BL1
TIMLESSW DS    BL1
YRLOOP   DS    BL1
CNVTYEAR DS    BL2
         ORG   CNVTYEAR
CVTYEAR  DS    BL1
CVTPACK  DS    BL1
         ORG   CNVTYEAR+2
         DS    CL4
TODPACK  DS    CL8
DSDATE   DS    CL3
         ORG   DSDATE
DSDT     DS    BL3
         ORG   DSDATE+3
         DS    CL1
USDATE   DS    CL3
         ORG   USDATE
USDT     DS    BL3
         ORG   USDATE+3
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCLC01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00869 DC    V(IDCLC02)
@CV00870 DC    V(LOCPROC)
@CV00871 DC    V(LISTPROC)
@CV00872 DC    V(ERRPROC)
@CV00873 DC    V(FPLPROC)
@CV00874 DC    V(AUPROC)
@CV00875 DC    V(CDIPROC)
@CV00876 DC    V(VPROC)
@CV00877 DC    V(ANSVPROC)
@CV00878 DC    V(SHORTLST)
@CV00879 DC    V(VOLLIST)
@CV00880 DC    V(FREESTG)
         DS    0D
DICTSZ   DC    F'1400'
GPDDSZ   DC    F'256'
@CC01284 DC    C'CVAUXBPG'
@CC01438 DC    C'CTGOPTN2'
@CC01442 DC    C'TYPELIST'
@CC01488 DC    C'HOLDETYP'
@CC01286 DC    C'CVAUBPG'
@CC01433 DC    C'CATNAME'
@CC01437 DC    C'CACBFLG'
@CC01441 DC    C'TYPECNT'
@CC01434 DC    C'OBJCNT'
@CC01435 DC    C'OBJTYP'
@CC01487 DC    C'ASSOC#'
@CC01436 DC    C'OBJNM'
@CC01439 DC    C'FLAGS'
@CC01245 DC    C'LC00'
@CC01247 DC    C'LC01'
@CC01249 DC    C'LC02'
@CC01251 DC    C'LC03'
@CC01253 DC    C'LC04'
@CC01255 DC    C'LC05'
@CC01257 DC    C'LC06'
@CC01259 DC    C'LC07'
@CC01261 DC    C'LC10'
@CC01263 DC    C'LC11'
@CC01360 DC    C'LC99'
@CC01380 DC    C'LCIN'
@CC01399 DC    C'LCNX'
@CC01425 DC    C'LCEN'
@CC01443 DC    C'LCOJ'
@CC01484 DC    C'LCRT'
@CC01489 DC    C'LCRP'
@CC01494 DC    C'LCR2'
@CC01495 DC    C'LCRA'
@CC01531 DC    C'LCDT'
@CC01553 DC    C'LCTM'
@CC01563 DC    C'LCCK'
@CC01146 EQU   @CC01245
@CC01149 DC    C'UV0'
@CC01155 EQU   @CC01261
@CC01288 DC    C'CPG'
FIXAREA  DS    CL768
         ORG   FIXAREA
@NM00001 DC    256X'00'
@NM00002 DC    256X'00'
@NM00003 DC    256X'00'
         ORG   FIXAREA+768
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECURENM DC    CL8'PASSWALL'
ASSOCNM  DC    CL8'NAMEDS  '
CATTRNM  DC    CL8'CATTR   '
RELNM    DC    CL8'RELCRA  '
RGATTRNM DC    CL8'RGATTR  '
ATTRNM   DC    CL8'DSATTR  '
DSETSPNM DC    CL8'SPACPARM'
PGBYTKNM DC    CL8'NOBYTTRK'
DSETVLNM DC    CL8'ENTVOL  '
ETYPNM   DC    CL8'ENTYPE  '
ENT44NM  DC    CL8'ENTNAME '
DSBNM    DC    CL8'AMDSBCAT'
DSIDNM   DC    CL8'OWNERID '
CRDTNM   DC    CL8'DSETCRDT'
EXDTNM   DC    CL8'DSETEXDT'
BUFFNM   DC    CL8'BUFSIZE '
DSHUNM   DC    CL8'HURBADS '
DSHANM   DC    CL8'HARBADS '
RECLNM   DC    CL8'LRECL   '
EXITNM   DC    CL8'EXCPEXIT'
SECFLAGS DC    CL8'SECFLAGS'
MULTITNM DC    CL8'MULTITYP'
CACBNM   DC    CL8'CATACB  '
AUVOLNM  DC    CL8'CATVOL  '
VTIMENM  DC    CL8'VOLTSTMP'
VSYSXNM  DC    CL8'SYSEXTDS'
V#DSPNM  DC    CL8'NODSPACE'
V#DSNM   DC    CL8'NODSET  '
VCHARNM  DC    CL8'VOLDVCHR'
VSPHDRNM DC    CL8'SPACEHDR'
VDSDIRNM DC    CL8'DSDIRECT'
VXDESNM  DC    CL8'DSPDSCRP'
GDGATRNM DC    CL8'GDGATTR '
GDGLMTNM DC    CL8'GDGLIMIT'
MODID    DC    CL4'LC01'
NOTYPE   DC    X'00'
TYPECMPR DC    X'00'
         DC    XL10'0'
         DS    CL3
ARITH4FF DC    X'FFFFFFFF'
HEXFF    DS    CL256
         ORG   HEXFF
@NM00057 DC    256X'FF'
         ORG   HEXFF+256
ZEROAREA DS    CL256
         ORG   ZEROAREA
@NM00058 DC    256X'00'
         ORG   ZEROAREA+256
NMPTRS   DC    AL4(MULTITNM)
         DC    AL4(ETYPNM)
         DC    AL4(ENT44NM)
         DC    AL4(CATTRNM)
         DC    AL4(ASSOCNM)
         DC    AL4(EXDTNM)
         DC    AL4(CRDTNM)
         DC    AL4(DSIDNM)
         DC    AL4(RELNM)
         DC    AL4(AUVOLNM)
         DC    AL4(VCHARNM)
         DC    AL4(DSETSPNM)
         DC    AL4(DSHUNM)
         DC    AL4(DSHANM)
         DC    AL4(DSETVLNM)
         DC    AL4(PGBYTKNM)
         DC    AL4(VTIMENM)
         DC    AL4(VSYSXNM)
         DC    AL4(V#DSPNM)
         DC    AL4(V#DSNM)
         DC    AL4(VSPHDRNM)
         DC    AL4(VDSDIRNM)
         DC    AL4(VXDESNM)
         DC    AL4(SECURENM)
         DC    AL4(DSBNM)
         DC    AL4(ATTRNM)
         DC    AL4(BUFFNM)
         DC    AL4(RECLNM)
         DC    AL4(GDGATRNM)
         DC    AL4(GDGLMTNM)
         DC    AL4(RGATTRNM)
         DC    AL4(EXITNM)
         DC    AL4(SECFLAGS)
         DC    AL4(CACBNM)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TIMCFAC1 EQU   @02
DAYPERYR EQU   @04
DAYTOTAL EQU   @02
YRTOTAL  EQU   @03
NOWDAY   EQU   @06
NOWYEAR  EQU   @07
VHDRLN   EQU   @02
ASSOCNO  EQU   @07
NN       EQU   @02
CI#IDX   EQU   @06
JJ       EQU   @02
TYPIDX   EQU   @07
ENTIDX   EQU   @06
IDX      EQU   @04
SAPTR    EQU   @02
SECNDAY1 EQU   @02
MICRSEC1 EQU   @02
COMPTR   EQU   @03
DMPINDEX EQU   @02
OPNPTR   EQU   @02
TESTRC   EQU   @04
REG9     EQU   @09
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
RTNREG   EQU   @15
REG5     EQU   @05
REG0     EQU   @00
REG1     EQU   @01
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
IDCSAEP0 EQU   0
IDCSAGP0 EQU   0
IDCSAFP0 EQU   0
IDCSATI0 EQU   0
IDCSAID0 EQU   0
IDCSACR0 EQU   0
IDCSAQL0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
CIRTYP1Q EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRHLN   EQU   CIRAGL+4
CIRTLN   EQU   CIRAGL+6
CIRHDR   EQU   CIRAGL+8
CIRTLR   EQU   CIRAGL+12
CIRWKP   EQU   CIRAGL+16
CIRCAT   EQU   CIRAGL+20
CIRPWD   EQU   CIRAGL+24
CIRPID   EQU   CIRAGL+28
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00013 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNMODAC EQU   OPNMOD
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGRETL EQU   DARGLIST+16
DARGFLGS EQU   DARGLIST+19
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
CAT      EQU   0
CATNM    EQU   0
CATNMPLN EQU   CATNM
CATNMPAS EQU   CATNM+1
CATNMFLG EQU   CATNM+10
CATNMVAL EQU   CATNM+21
CATDD    EQU   0
OUTDD    EQU   0
OUTDDVAL EQU   OUTDD+1
ENT      EQU   0
ENTCNT   EQU   ENT
@NM00035 EQU   ENT+2
ENTPLN   EQU   @NM00035
ENTPAS   EQU   @NM00035+1
ENTPOS   EQU   @NM00035+9
ENTFLG   EQU   @NM00035+10
ENTFUQ   EQU   ENTFLG
ENTLEN   EQU   @NM00035+20
ENTVAL   EQU   @NM00035+21
LVL      EQU   0
LVLPOS   EQU   LVL+9
LVLFLG   EQU   LVL+10
LVLLEN   EQU   LVL+20
LVLVAL   EQU   LVL+21
CLUST    EQU   0
DATUM    EQU   0
INDEX    EQU   0
SPACE    EQU   0
ALIEN    EQU   0
UCAT     EQU   0
ALIAS    EQU   0
GDG      EQU   0
PGSPC    EQU   0
AIX      EQU   0
PATH     EQU   0
NUSE     EQU   0
CREAT    EQU   0
CREATVAL EQU   CREAT
EXPIR    EQU   0
EXPIRVAL EQU   EXPIR
HIST     EQU   0
NAME     EQU   0
FALL     EQU   0
VOL      EQU   0
ALLOC    EQU   0
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGNAME  EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGGTALL EQU   CTGREL
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGGTNXT EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGFUNC  EQU   CTGOPTN3
CTGAM0   EQU   CTGOPTN3
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGCAT   EQU   CTGPL+8
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGOPTNS EQU   CTGDSORG
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGPSWD  EQU   CTGJSCB
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDRE EQU   CTGFL+3
CTGFLDNM EQU   CTGFL+8
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
ASSOC    EQU   0
KIND     EQU   ASSOC
CI#      EQU   ASSOC+1
DSCHARS  EQU   0
ATTR#1   EQU   DSCHARS
ATTR#2   EQU   DSCHARS+1
DSNUSE   EQU   ATTR#2
PGSPAC   EQU   0
PGSP     EQU   PGSPAC
ETYP     EQU   0
ENT44    EQU   0
CRDT     EQU   0
EXDT     EQU   0
VDSPHDR  EQU   0
VDSCBTIM EQU   VDSPHDR+2
VDSPFLG  EQU   VDSPHDR+15
@NM00047 EQU   VDSPHDR+19
VTIME    EQU   0
COMAREA  EQU   0
COMSWKPT EQU   COMAREA
COMFPLPT EQU   COMAREA+4
COMFLGPT EQU   COMAREA+8
COMVARPT EQU   COMAREA+12
COMTOTPT EQU   COMAREA+16
SAVWKPTR EQU   0
CTGPLPTR EQU   SAVWKPTR+4
TYPCPLPT EQU   SAVWKPTR+8
SAVCPLPT EQU   SAVWKPTR+12
OLDCPLPT EQU   SAVWKPTR+16
ERMCPLPT EQU   SAVWKPTR+20
LCCPLLEN EQU   SAVWKPTR+24
CI#CPLPT EQU   SAVWKPTR+28
SA#CPLPT EQU   SAVWKPTR+32
ER#CPLPT EQU   SAVWKPTR+36
LC#CPLLN EQU   SAVWKPTR+40
LCFPLLEN EQU   SAVWKPTR+42
MTFPLLEN EQU   SAVWKPTR+43
CTGFLPTR EQU   SAVWKPTR+44
SAVFPLPT EQU   SAVWKPTR+48
CILSTLEN EQU   SAVWKPTR+52
CILSTPTR EQU   SAVWKPTR+56
CIASOCLN EQU   SAVWKPTR+60
CIASOCPT EQU   SAVWKPTR+64
ERRARGPT EQU   SAVWKPTR+72
DARGPTR  EQU   SAVWKPTR+76
OTIOCSPT EQU   SAVWKPTR+80
OBJNMPTR EQU   SAVWKPTR+84
ENTWKAPT EQU   SAVWKPTR+88
DPLISTPT EQU   SAVWKPTR+92
TEXTPTR  EQU   SAVWKPTR+96
VHDRPTR  EQU   SAVWKPTR+100
CORRFPLS EQU   0
FIRSTFPL EQU   CORRFPLS
MULTIFPT EQU   FIRSTFPL
SUBSETS  EQU   CORRFPLS+4
ETYPFPT  EQU   SUBSETS
ENT44FPT EQU   SUBSETS+4
CATTRFPT EQU   SUBSETS+8
ASSOCFPT EQU   SUBSETS+12
EXDTFPT  EQU   SUBSETS+16
CRDTFPT  EQU   SUBSETS+20
AUVOLFPT EQU   SUBSETS+32
DSSPFPT  EQU   SUBSETS+40
VTIMEFPT EQU   SUBSETS+60
VHDRFPT  EQU   SUBSETS+76
ATTRFPT  EQU   SUBSETS+96
LASTFPT  EQU   CORRFPLS+132
FLAGS    EQU   0
CACBFLG  EQU   FLAGS
CLENTFLG EQU   FLAGS+1
ENTNMFLG EQU   FLAGS+2
LISTCFLG EQU   FLAGS+3
NOMSGFLG EQU   FLAGS+4
CMDERRSW EQU   FLAGS+5
SUBTFLG  EQU   FLAGS+6
NOTTLFLG EQU   FLAGS+7
ATYPFLG  EQU   FLAGS+8
BTYPFLG  EQU   FLAGS+9
DTYPFLG  EQU   FLAGS+10
ITYPFLG  EQU   FLAGS+11
NDENTFLG EQU   FLAGS+12
ENLVUDFG EQU   FLAGS+13
PGSPCFLG EQU   FLAGS+14
ENTCLFLG EQU   FLAGS+16
NUSEFLG  EQU   FLAGS+18
GTYPFLG  EQU   FLAGS+19
RTYPFLG  EQU   FLAGS+20
ATFPLFLG EQU   FLAGS+21
DATEFLG  EQU   FLAGS+23
CRDTSW   EQU   FLAGS+24
EXDTSW   EQU   FLAGS+25
VTYPFLG  EQU   FLAGS+26
VTFPLFLG EQU   FLAGS+27
EXFPLFLG EQU   FLAGS+28
CRFPLFLG EQU   FLAGS+29
CTYPFLG  EQU   FLAGS+30
PTYPFLG  EQU   FLAGS+31
NOGENFLG EQU   FLAGS+32
CILOCFLG EQU   FLAGS+33
MISCVAR  EQU   0
FPLBEGN  EQU   MISCVAR
FPLEND   EQU   MISCVAR+2
FPLCNT   EQU   MISCVAR+4
CATRC    EQU   MISCVAR+6
ASSOC#   EQU   MISCVAR+8
NLST     EQU   MISCVAR+10
SAVRC    EQU   MISCVAR+12
CATNAME  EQU   MISCVAR+14
TYPMULTI EQU   MISCVAR+58
TYPECNT  EQU   TYPMULTI
TYPELIST EQU   TYPMULTI+2
HOLDETYP EQU   MISCVAR+71
TYPAUDIT EQU   0
CTYPCNT  EQU   TYPAUDIT
DTYPCNT  EQU   TYPAUDIT+4
ITYPCNT  EQU   TYPAUDIT+8
ATYPCNT  EQU   TYPAUDIT+12
UTYPCNT  EQU   TYPAUDIT+16
VTYPCNT  EQU   TYPAUDIT+20
XTYPCNT  EQU   TYPAUDIT+24
BTYPCNT  EQU   TYPAUDIT+28
PTYPCNT  EQU   TYPAUDIT+32
GTYPCNT  EQU   TYPAUDIT+36
RTYPCNT  EQU   TYPAUDIT+40
TOTLCNT  EQU   TYPAUDIT+44
LCTEXT   EQU   0
OBJOVR   EQU   0
OBJCNT   EQU   OBJOVR
@NM00049 EQU   OBJOVR+4
OBJTYP   EQU   @NM00049
OBJNM    EQU   @NM00049+1
CPLWKA   EQU   0
CPLWKASZ EQU   CPLWKA
ENT44WKA EQU   0
ENTSETSZ EQU   ENT44WKA
SUPPWKA  EQU   0
SUPPTYPE EQU   SUPPWKA+4
SUPPDSNM EQU   SUPPWKA+5
SAVFPL   EQU   0
AMSTP011 EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFS0 EQU   0
IDCSAGS0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTECT   EQU   GDTTBL+188
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCC   EQU   0
CLENTSW  EQU   0
@NM00042 EQU   CTGDDNM
CTGPROB  EQU   @NM00042
CTGREASN EQU   CTGPROB+2
FPLPTMAP EQU   CORRFPLS
NMFLDS   EQU   CORRFPLS
HISTFLDS EQU   CORRFPLS
VOLFLDS  EQU   CORRFPLS
SPACFLDS EQU   CORRFPLS
ALLFLDS  EQU   CORRFPLS
ENTKEY   EQU   ENTNAME+43
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
FDTVERB  EQU   FDTTBL
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00004 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
@NM00053 EQU   SUPPWKA
@NM00052 EQU   ENT44WKA+4
ENTREQSZ EQU   ENT44WKA+2
@NM00051 EQU   CPLWKA+4
REQWKASZ EQU   CPLWKA+2
NONM     EQU   LCTEXT+700
YESNM    EQU   LCTEXT+690
NSWAPNM  EQU   LCTEXT+680
SWAPNM   EQU   LCTEXT+670
DSTGWNM  EQU   LCTEXT+660
BINDNM   EQU   LCTEXT+650
CYLFNM   EQU   LCTEXT+640
NUSNM    EQU   LCTEXT+630
RVBLNM   EQU   LCTEXT+620
NUNQKNM  EQU   LCTEXT+610
UNQKNM   EQU   LCTEXT+600
NUPDNM   EQU   LCTEXT+590
UPDNM    EQU   LCTEXT+580
NUPGNM   EQU   LCTEXT+570
UPGNM    EQU   LCTEXT+560
AIXNM    EQU   LCTEXT+550
NSPNDNM  EQU   LCTEXT+540
SPNDNM   EQU   LCTEXT+530
PATHNM   EQU   LCTEXT+520
NRUSNM   EQU   LCTEXT+510
RUSNM    EQU   LCTEXT+500
NUMDNM   EQU   LCTEXT+490
PGSPCNM  EQU   LCTEXT+480
ALIASNM  EQU   LCTEXT+470
GDGNM    EQU   LCTEXT+460
NVSAMNM  EQU   LCTEXT+450
NEMPTYNM EQU   LCTEXT+440
EMPTYNM  EQU   LCTEXT+430
NSCRNM   EQU   LCTEXT+420
SCRNM    EQU   LCTEXT+410
NTOVFLNM EQU   LCTEXT+400
TOVFLNM  EQU   LCTEXT+390
SHR4NM   EQU   LCTEXT+380
SHR3NM   EQU   LCTEXT+370
SHR2NM   EQU   LCTEXT+360
SHR1NM   EQU   LCTEXT+350
SHRPRNM  EQU   LCTEXT+340
SHRNM    EQU   LCTEXT+330
MCATNM   EQU   LCTEXT+320
UCATNM   EQU   LCTEXT+310
TEMEXPNM EQU   LCTEXT+300
INHUPDNM EQU   LCTEXT+290
NULLNM   EQU   LCTEXT+280
SUPPNM   EQU   LCTEXT+270
CYLNM    EQU   LCTEXT+260
TRKNM    EQU   LCTEXT+250
RECSZNM  EQU   LCTEXT+240
UNORDNM  EQU   LCTEXT+230
ORDNM    EQU   LCTEXT+220
NREPLNM  EQU   LCTEXT+210
REPLNM   EQU   LCTEXT+200
NIMBDNM  EQU   LCTEXT+190
IMBDNM   EQU   LCTEXT+180
NWCKNM   EQU   LCTEXT+170
WCKNM    EQU   LCTEXT+160
NIXDNM   EQU   LCTEXT+150
IXDNM    EQU   LCTEXT+140
NERASNM  EQU   LCTEXT+130
ERASNM   EQU   LCTEXT+120
SUBALNM  EQU   LCTEXT+110
UNQNM    EQU   LCTEXT+100
RCVYNM   EQU   LCTEXT+90
SPEEDNM  EQU   LCTEXT+80
CLNM     EQU   LCTEXT+70
INDEXNM  EQU   LCTEXT+60
DATANM   EQU   LCTEXT+50
EXPLNM   EQU   LCTEXT+40
AUTONM   EQU   LCTEXT+30
OVFLONM  EQU   LCTEXT+20
CANNM    EQU   LCTEXT+10
PRIMENM  EQU   LCTEXT
GASSOCSW EQU   FLAGS+22
G0V0FLG  EQU   FLAGS+17
DENTAFLG EQU   FLAGS+15
CACBFPT5 EQU   LASTFPT
RACFPT   EQU   SUBSETS+124
EXITFPT  EQU   SUBSETS+120
RGATRFPT EQU   SUBSETS+116
GDGLMFPT EQU   SUBSETS+112
GDGATFPT EQU   SUBSETS+108
RECLFPT  EQU   SUBSETS+104
BUFFFPT  EQU   SUBSETS+100
DSBFPT   EQU   SUBSETS+92
SECURFPT EQU   SUBSETS+88
VXDESFPT EQU   SUBSETS+84
VDIRFPT  EQU   SUBSETS+80
V#DSFPT  EQU   SUBSETS+72
V#DSPFPT EQU   SUBSETS+68
VSYSXFPT EQU   SUBSETS+64
CACBFPT4 EQU   VTIMEFPT
PGBYTFPT EQU   SUBSETS+56
DSVLFPT  EQU   SUBSETS+52
DSHAFPT  EQU   SUBSETS+48
DSHUFPT  EQU   SUBSETS+44
CACBFPT3 EQU   DSSPFPT
VCHARFPT EQU   SUBSETS+36
CACBFPT2 EQU   AUVOLFPT
RELFPT   EQU   SUBSETS+28
DSIDFPT  EQU   SUBSETS+24
CACBFPT1 EQU   EXDTFPT
ERRCPLPT EQU   SAVWKPTR+68
DSBCATPT EQU   SAVWKPTR
VDSPSCON EQU   VDSPHDR+20
@NM00048 EQU   @NM00047
VDSPOPT  EQU   @NM00047
VDSPXT   EQU   VDSPHDR+18
VDSPDS#  EQU   VDSPHDR+16
@NM00046 EQU   VDSPFLG
VDSPMCAT EQU   VDSPFLG
VDSPUCAT EQU   VDSPFLG
VDSPAUTO EQU   VDSPFLG
VDSPUNQ  EQU   VDSPFLG
VDSCBPTR EQU   VDSPHDR+10
VHDRREPN EQU   VDSPHDR
PGSWAP   EQU   PGSPAC
@NM00045 EQU   PGSPAC
@NM00044 EQU   ATTR#2
INTERSHR EQU   ATTR#2
INTRASHR EQU   ATTR#2
DSTKOV   EQU   ATTR#1
DSTEXP   EQU   ATTR#1
DSINH    EQU   ATTR#1
DSRCVR   EQU   ATTR#1
DSERAS   EQU   ATTR#1
DSREUSE  EQU   ATTR#1
DSUNQ    EQU   ATTR#1
DSSPEED  EQU   ATTR#1
CTGFLCHN EQU   CTGFL+12
CTGFLDWA EQU   CTGFL+4
CTGFLDTS EQU   CTGFLDRE
@NM00043 EQU   CTGFLDRE
CTGFLDGC EQU   CTGFL+2
CTGFLDCD EQU   CTGFL+1
@NM00041 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00040 EQU   CTGDSORG
CTGCVOL  EQU   CTGCAT
CTGFVT   EQU   CTGENT
@NM00039 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
CTGNPROF EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
@NM00038 EQU   CTGOPTN2
CTGSCR   EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGSWAP  EQU   CTGRCATN
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00037 EQU   IDAAMDSB+41
@NM00036 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
LVLMEM   EQU   LVL+12
LVLMLN   EQU   LVL+11
LVLFUQ   EQU   LVLFLG
LVLPAS   EQU   LVL+1
LVLPLN   EQU   LVL
ENTMEM   EQU   @NM00035+12
ENTMLN   EQU   @NM00035+11
OUTDDLEN EQU   OUTDD
CATDDVAL EQU   CATDD+1
CATDDLEN EQU   CATDD
CATNMLEN EQU   CATNM+20
CATNMMEM EQU   CATNM+12
CATNMMLN EQU   CATNM+11
CATNMFUQ EQU   CATNMFLG
CATNMPOS EQU   CATNM+9
@NM00034 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00033 EQU   DMPITM+15
@NM00032 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00031 EQU   ERCNVTAB+4
@NM00030 EQU   ERCNVTAB+3
@NM00029 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00028 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00027 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00026 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00025 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00024 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00023 EQU   DARGFLGS
DARGFULL EQU   DARGFLGS
DARGIND  EQU   DARGLIST+18
DARGCNT  EQU   DARGLIST+14
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00022 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00021 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00020 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00017 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00016 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00015 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00014 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00013+1
UNITCHA  EQU   @NM00013
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00012 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00011 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00010 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00009 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00008 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
@NM00007 EQU   CIRAGL+1
@NM00006 EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00005 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00345 EQU   @RC00343
@RF00401 EQU   @RC00389
@RF00546 EQU   @RC00543
@RF00598 EQU   @RC00593
@RF00904 EQU   @RC00900
@RC00922 EQU   @RC00898
@RF00921 EQU   @RC00898
@RF00936 EQU   @RC00931
@RC00995 EQU   @RC00994
@RC01104 EQU   @RC01094
@RC01143 EQU   @RC01142
@RF01222 EQU   @RC01219
@RF01243 EQU   @RC01237
@RC01250 EQU   @RC01237
@RF01249 EQU   @RC01237
@RF01300 EQU   @RC01295
@RF01302 EQU   @RC01295
@RC01309 EQU   @RC01295
@RF01308 EQU   @RC01295
@RC01331 EQU   @RC01330
@RC01350 EQU   @RC01330
@RC01359 EQU   @RC01330
@RF01358 EQU   @RC01330
@RC01385 EQU   @RC01209
@RC01379 EQU   @RC01209
@RC01217 EQU   @RC01209
@RC01565 EQU   @RC01535
@RC01553 EQU   @RC01535
@RC01539 EQU   @RC01535
@RF01579 EQU   @RC01535
@RF01594 EQU   @RC01589
@RF01596 EQU   @RC01589
@RF01606 EQU   @RC01601
@RF01610 EQU   @RC01585
@RF01619 EQU   @RC01585
@RF01507 EQU   @RC01455
@RC01692 EQU   @RC01685
@RF01698 EQU   @RC01685
@RF01713 EQU   @RC01685
@RF01784 EQU   @RC01780
@RC01828 EQU   @RC01823
@RC01845 EQU   @RC01840
@PB00008 EQU   @EL00001
@RF01397 EQU   @RC01385
@RF01543 EQU   @RC01539
@PB00007 EQU   @PB00008
@RF01834 EQU   @RC01828
@RF01851 EQU   @RC01845
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCLC01,(C'PLS1403',0701,78033)
