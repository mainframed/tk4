         TITLE 'IDCRC03 - I/O ROUTINE FOR FIELD MANAGEMENT RECORDS     *
                        '
        MACRO
        GETMAIN &R,&LV=
        L     1,BUFSPTR(1)       POINT AT COMMUNICATION TABLE
        L     1,BUFWKARA(1)      POINT AT WORK AREA
        MEND
        MACRO
        FREEMAIN &MODE,&LV=,&LA=,&A=,&SP=,&MF=
        MEND
IDCRC03  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCRC03   75.077'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
*  PARMPTR=REG1;                  /* SAVE POINTER TO PARMS           */
         LR    PARMPTR,REG1                                        0159
*  RFY REG1 UNRSTD;               /* RELEASE THE REGISTER            */
*  REG15=LASTCC00;                /* INITIALIZE RETURN CODE          */
*                                                                  0161
         SLR   REG15,REG15                                         0161
*  /******************************************************************/
*  /*                                                                */
*  /*    HANDLE THE FORMATTING OF THE BUFFER POOL IF IT HAS          */
*  /*    NOT BEEN DONE ON A PREVIOUS REQUEST                         */
*  /*                                                                */
*  /******************************************************************/
*                                                                  0162
*  IF BUFORMAT=ON                 /* IF FORMATING NOT REQUIRED       */
*    THEN;                        /* THEN: CONTINUE                  */
         L     @14,BUFSPTR(,PARMPTR)                               0162
         TM    BUFORMAT(@14),B'10000000'                           0162
         BO    @RT00162                                            0162
*    ELSE DO;                     /* ELSE:                           */
*      CHAIN3=BUFPOOL;            /* POINT AT START OF POOL          */
         L     @14,BUFSPTR(,PARMPTR)                               0165
         MVC   CHAIN3(4),BUFPOOL(@14)                              0165
*      CHAIN1=LENGTH(BUFELM);     /* GET LENGTH OF ELEMENT           */
         LA    CHAIN1,520                                          0166
*      CHAIN0=BUFSIZE;            /* GET SIZE TO FORMAT              */
         LH    CHAIN0,BUFSIZE(,@14)                                0167
*      DO WHILE CHAIN0>=LENGTH(BUFELM);                            0168
         B     @DE00168                                            0168
@DL00168 DS    0H                                                  0169
*                                 /* LOOP UNTIL OUT OF SPACE         */
*        CHAIN3->BUFCI=INVALCI;   /* CLEAR CI NUMBER                 */
         L     @14,CHAIN3                                          0169
         MVC   BUFCI(3,@14),INVALCI                                0169
*        CHAIN3->BUFNEXT=NULLPTR; /* CLEAR THE CHAIN POINTER         */
         SLR   @10,@10                                             0170
         ST    @10,BUFNEXT(,@14)                                   0170
*        IF CHAIN3=BUFPOOL        /* IF THIS IS THE FIRST BUFF       */
*          THEN;                  /* THEN:                           */
         L     @10,BUFSPTR(,PARMPTR)                               0171
         C     @14,BUFPOOL(,@10)                                   0171
         BE    @RT00171                                            0171
*          ELSE BUFNEXT=CHAIN3;   /* ELSE: CAIN IN THE NEW BUFF      */
         L     @14,CHAIN2                                          0173
         MVC   BUFNEXT(4,@14),CHAIN3                               0173
*        CHAIN2=CHAIN3;           /* SAVE THE LAST BUFF              */
@RT00171 L     @14,CHAIN3                                          0174
         ST    @14,CHAIN2                                          0174
*        CHAIN3=CHAIN3+CHAIN1;    /* POINT AT NEXT ONE               */
         ALR   @14,CHAIN1                                          0175
         ST    @14,CHAIN3                                          0175
*        CHAIN0=CHAIN0-CHAIN1;    /* COMPUTE SPACE REMAINING         */
         SLR   CHAIN0,CHAIN1                                       0176
*        END;                     /*                                 */
@DE00168 CH    CHAIN0,@CH00620                                     0177
         BNL   @DL00168                                            0177
*      BUFORMAT=ON;               /* INDICATE BUFFERS FORMATED       */
         L     @14,BUFSPTR(,PARMPTR)                               0178
         OI    BUFORMAT(@14),B'10000000'                           0178
*      BUFPL=BUFPOOL;             /* INITIALIZE CHAIN POINTER        */
         MVC   BUFPL(4,@14),BUFPOOL(@14)                           0179
*      END;                       /*                                 */
*  /******************************************************************/
*  /*                                                                */
*  /*    SEARCH THE LOOK ASIDE TABLE TO SEE IF BUFFER IS HELD        */
*  /*    IN STORAGE                                                  */
*  /*                                                                */
*  /******************************************************************/
*                                                                  0181
*  CHAIN0=NULLPTR;                /* INITIALIZE BACK 1 POINTER       */
@RT00162 SLR   @14,@14                                             0181
         LR    CHAIN0,@14                                          0181
*  CHAIN1=BUFPL;                  /* INITIALIZE CHAIN POINTER        */
         L     @10,BUFSPTR(,PARMPTR)                               0182
         L     CHAIN1,BUFPL(,@10)                                  0182
*  CHAIN2=NULLPTR;                /* INITIALIZE FOUND POINTER        */
         ST    @14,CHAIN2                                          0183
*  DO WHILE CHAIN1^=NULLPTR & CHAIN2=NULLPTR;                      0184
         B     @DE00184                                            0184
@DL00184 DS    0H                                                  0185
*                                 /* LOOP UNTIL END OF CHAIN         */
*                                 /* OR CI NUMBER FOUND              */
*    IF CHAIN1->BUFCI=PARMCI      /* IF THE CI NUMBER MATCHES        */
*      THEN DO;                   /* THEN:                           */
         CLC   BUFCI(3,CHAIN1),PARMCI(PARMPTR)                     0185
         BNE   @RF00185                                            0185
*        CHAIN2=CHAIN1;           /* SAVE THE FOUND RECORD           */
         ST    CHAIN1,CHAIN2                                       0187
*        IF CHAIN0=NULLPTR        /* IF TOP OF CHAIN                 */
*          THEN;                  /* THEN: CONTINUE                  */
         LTR   CHAIN0,CHAIN0                                       0188
         BZ    @RT00188                                            0188
*          ELSE DO;               /* ELSE:                           */
*            CHAIN0->BUFNEXT=CHAIN1->BUFNEXT;                      0191
         MVC   BUFNEXT(4,CHAIN0),BUFNEXT(CHAIN1)                   0191
*                                 /* UNCHAIN THE RECORD              */
*            CHAIN1->BUFNEXT=BUFPL;                                0192
         L     @14,BUFSPTR(,PARMPTR)                               0192
         MVC   BUFNEXT(4,CHAIN1),BUFPL(@14)                        0192
*                                 /* ADD CHAIN AFTER THIS ONE        */
*            BUFPL=CHAIN1;        /* POINT AT THE NEW CHAIN          */
         ST    CHAIN1,BUFPL(,@14)                                  0193
*            END;                 /*                                 */
*        END;                     /*                                 */
*      ELSE DO;                   /* ESLE:                           */
         B     @RC00185                                            0196
@RF00185 DS    0H                                                  0197
*        CHAIN3=CHAIN0;           /* SAVE BACK POINTER 2             */
         ST    CHAIN0,CHAIN3                                       0197
*        CHAIN0=CHAIN1;           /* SAVE BACK POINTER 1             */
         LR    CHAIN0,CHAIN1                                       0198
*        CHAIN1=CHAIN1->BUFNEXT;                                   0199
         L     CHAIN1,BUFNEXT(,CHAIN1)                             0199
*                                 /* POINT AT THE NEXT RECORD        */
*        END;                     /*                                 */
*    END;                         /*                                 */
@RC00185 DS    0H                                                  0201
@DE00184 SLR   @14,@14                                             0201
         CR    CHAIN1,@14                                          0201
         BE    @DC00184                                            0201
         C     @14,CHAIN2                                          0201
         BE    @DL00184                                            0201
@DC00184 DS    0H                                                  0202
*  /******************************************************************/
*  /*                                                                */
*  /*    IF THE BUFFER IS NOT IN STORAGE, HANDLE THE QUEUEING        */
*  /*    OPERATIONS NECESSARY TO PREPARE BUFFER FOR I/O              */
*  /*                                                                */
*  /******************************************************************/
*                                                                  0202
*  IF CHAIN2=NULLPTR              /* IF RECORD NOT FOUND             */
*    THEN DO;                     /* THEN:                           */
         SLR   @14,@14                                             0202
         C     @14,CHAIN2                                          0202
         BNE   @RF00202                                            0202
*      CHAIN3->BUFNEXT=NULLPTR;   /* REMOVE THE LAST RECORD          */
         L     @10,CHAIN3                                          0204
         ST    @14,BUFNEXT(,@10)                                   0204
*      CHAIN0->BUFNEXT=BUFPL;     /* PLACE THE CHAIN AFTER THIS      */
         L     @14,BUFSPTR(,PARMPTR)                               0205
         MVC   BUFNEXT(4,CHAIN0),BUFPL(@14)                        0205
*                                 /* RECORD                          */
*      BUFPL=CHAIN0;              /* POINT AT NEW CHAIN              */
         ST    CHAIN0,BUFPL(,@14)                                  0206
*      CHAIN0->BUFCI=INVALCI;     /* INVALIDATE THE BUFFER           */
         MVC   BUFCI(3,CHAIN0),INVALCI                             0207
*      IOCSPTR=BUFIOCS;           /* POINT AT IOCSTR                 */
*                                                                  0208
         MVC   IOCSPTR(4),BUFIOCS(@14)                             0208
*      /**************************************************************/
*      /*                                                            */
*      /*    COMPUTE THE CRA RBA AND GET THE RECORD FROM VSAM        */
*      /*                                                            */
*      /**************************************************************/
*                                                                  0209
*      REG15=LASTCC04;            /* INITIALIZE TO INDICATE ERR      */
         LA    REG15,4                                             0209
*      DO CHAIN3=1 TO CTTENTNO WHILE REG15=LASTCC04;               0210
         LA    @14,1                                               0210
         B     @DE00210                                            0210
@DL00210 CH    REG15,@CH00037                                      0210
         BNE   @DC00210                                            0210
*                                 /* LOOP TO FIND THE CI NO.         */
*                                 /* OR UNTIL THE TABLE HAS          */
*                                 /* BEEN SEARCHED                   */
*        IF CTTCATCI(CHAIN3)=PARMCI                                0211
*                                 /* IF CI NO. FOUND                 */
*          THEN DO;               /* THEN:                           */
         LR    @10,@14                                             0211
         SLA   @10,2                                               0211
         L     @01,BUFSPTR(,PARMPTR)                               0211
         L     @01,BUFCTT(,@01)                                    0211
         ALR   @01,@10                                             0211
         CLC   CTTCATCI-4(3,@01),PARMCI(PARMPTR)                   0211
         BNE   @RF00211                                            0211
*            IOCRBA=(CHAIN3+CTTBASCI-1)*512;                       0213
         SH    @14,@CH00621                                        0213
         SLA   @14,9                                               0213
         L     @10,IOCSPTR                                         0213
         ST    @14,IOCRBA(,@10)                                    0213
*                                 /* PLACE THE RBA NUMBER            */
*            REG15=LASTCC00;      /* INDICATE FOUND                  */
         SLR   REG15,REG15                                         0214
*            END;                 /*                                 */
*          ELSE;                  /* ELSE: CONTINUE                  */
@RF00211 DS    0H                                                  0217
*        END;                     /*                                 */
         LA    @14,1                                               0217
         AL    @14,CHAIN3                                          0217
@DE00210 ST    @14,CHAIN3                                          0217
         L     @10,BUFSPTR(,PARMPTR)                               0217
         L     @10,BUFCTT(,@10)                                    0217
         C     @14,CTTENTNO(,@10)                                  0217
         BNH   @DL00210                                            0217
@DC00210 DS    0H                                                  0218
*      IF REG15=LASTCC00          /* IF EVERYTHING IS OK             */
*        THEN DO;                 /* THEN:                           */
         LTR   REG15,REG15                                         0218
         BNZ   @RF00218                                            0218
*          CALL IDCIOGT0 (GDTTBL,IOCSPTR);                         0220
         L     @14,BUFSPTR(,PARMPTR)                               0220
         L     @14,BUFGDT(,@14)                                    0220
         ST    @14,@AL00001                                        0220
         LA    @10,IOCSPTR                                         0220
         ST    @10,@AL00001+4                                      0220
         MVI   @AL00001+4,X'80'                                    0220
         L     @15,GDTGET(,@14)                                    0220
         LA    @01,@AL00001                                        0220
         BALR  @14,@15                                             0220
*                                 /* GET THE RECORD                  */
*          CHAIN0->BUFAREA(1:256)=RECORD(1:256);                   0221
         L     @14,IOCSPTR                                         0221
         L     @14,IOCDAD(,@14)                                    0221
         MVC   BUFAREA(256,CHAIN0),RECORD(@14)                     0221
*          CHAIN0->BUFAREA(257:512)=RECORD(257:512);               0222
         MVC   BUFAREA+256(256,CHAIN0),RECORD+256(@14)             0222
*                                 /* MOVE THE RECORD TO POOL         */
*          CHAIN0->BUFCI=PARMCI;  /* MARK THE CI OF RECORD           */
         MVC   BUFCI(3,CHAIN0),PARMCI(PARMPTR)                     0223
*          END;                   /*                                 */
*        ELSE;                    /*ELSE: CONTINUE                   */
@RF00218 DS    0H                                                  0226
*      CHAIN2=CHAIN0;             /* POINT AT NEW RECORD             */
         ST    CHAIN0,CHAIN2                                       0226
*      END;                       /*                                 */
*    ELSE;                        /* ELSE: CONTINUE                  */
@RF00202 DS    0H                                                  0229
*  /******************************************************************/
*  /*                                                                */
*  /*    HANDLE THE RETURING OF INFORMATION TO FIELD MANAGEMENT      */
*  /*                                                                */
*  /******************************************************************/
*                                                                  0229
*  PARMADR=ADDR(BUFAREA);         /* RETURN ADDRESS OF RECORD        */
         L     @14,CHAIN2                                          0229
         LA    @14,BUFAREA(,@14)                                   0229
         ST    @14,PARMADR(,PARMPTR)                               0229
*  IF REG15=LASTCC00              /* IF THERE WAS NO RECORD          */
*    THEN BUFOK=ON;               /* THEN: INDICATE BUFFER IS        */
         LTR   REG15,REG15                                         0230
         BNZ   @RF00230                                            0230
         OI    BUFOK(PARMPTR),B'10000000'                          0231
*                                 /*       RETURNED                  */
*    ELSE BUFOK=OFF;              /* ELSE: INDICATE BUFFER IS        */
         B     @RC00230                                            0232
@RF00230 NI    BUFOK(PARMPTR),B'01111111'                          0232
*                                 /*       NOT RETURNED              */
*                                                                  0233
*  RFY REG15 UNRSTD;              /* RELEASE THE REGISTER            */
*                                                                  0233
*  END IDCRC03                    /* END OF PROCEDURE                */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*@INCLUDE SYSLIB  (IDCDF60 )                                        *
*/*@INCLUDE SYSLIB  (IDCDF62 )                                        *
*;                                                                 0234
@EL00001 L     @13,4(,@13)                                         0234
@EF00001 L     @00,@SIZDATD                                        0234
         LR    @01,@11                                             0234
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0234
         BR    @14                                                 0234
@DATA    DS    0H
@CH00037 DC    H'4'
@CH00620 DC    H'520'
@CH00621 DC    H'-8'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    2A
IDCRC03  CSECT
         DS    0F
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
CHAIN2   DS    A
CHAIN3   DS    A
LISTPTR  DS    A
SETRC    DS    H
TESTRC   DS    H
LISTLN   DS    FL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCRC03  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
         DS    CL1
INVALCI  DC    XL3'FFFFFF'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'RC03'
         DS    CL1
PATCH    DC    15A(0)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CHAIN1   EQU   @04
CHAIN0   EQU   @03
PARMPTR  EQU   @02
REG1     EQU   @01
REG15    EQU   @15
REG0     EQU   @00
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
RTNREG   EQU   @15
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOGT0 EQU   0
IOCSTR   EQU   0
IOCDAD   EQU   IOCSTR
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
DMPITM   EQU   0
DMPARY   EQU   0
PARM     EQU   0
PARMSW   EQU   PARM
BUFOK    EQU   PARMSW
PARMCI   EQU   PARM+1
PARMADR  EQU   PARM+4
BUFSPTR  EQU   PARM+8
ACC      EQU   0
CTT      EQU   0
CTTENTNO EQU   CTT
CTTENTRY EQU   CTT+4
CTTCATCI EQU   CTTENTRY+1
VTT      EQU   0
VTTENTRY EQU   VTT+4
BUFS     EQU   0
BUFPOOL  EQU   BUFS
BUFPL    EQU   BUFS+4
BUFIOCS  EQU   BUFS+8
BUFGDT   EQU   BUFS+12
BUFCTT   EQU   BUFS+16
BUFWKARA EQU   BUFS+20
BUFSIZE  EQU   BUFS+24
BUFSWS   EQU   BUFS+26
BUFORMAT EQU   BUFSWS
BUFELM   EQU   0
BUFCI    EQU   BUFELM+1
BUFNEXT  EQU   BUFELM+4
BUFAREA  EQU   BUFELM+8
RECORD   EQU   0
AMSTP011 EQU   0
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCDB010 EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAEP0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
NEWERID2 EQU   5
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00039 EQU   BUFELM
@NM00038 EQU   BUFSWS
VTTTMSTP EQU   VTTENTRY+6
VTTVOLSR EQU   VTTENTRY
VTTENTNO EQU   VTT
CTTENTYP EQU   CTTENTRY
ACCVOLTT EQU   ACC+8
ACCDSNCI EQU   ACC+5
@NM00037 EQU   ACC+4
ACCTRANT EQU   ACC
@NM00036 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00035 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00034 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00033 EQU   ERCNVTAB+4
@NM00032 EQU   ERCNVTAB+2
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID2   EQU   TRACE2+95
OLDERID2 EQU   TRACE2
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00188 EQU   @RC00185
@RC00230 EQU   @EL00001
@ENDDATA EQU   *
         END   IDCRC03,(C'PLS2215',0602,75077)
