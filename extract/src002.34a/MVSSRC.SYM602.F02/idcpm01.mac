         TITLE '*******  IDCPM01:  PARAMETER  FUNCTION SUPPORT ROUTINE *
                 *******'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCPM01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCPM01   75.077'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(12),0(@01)                                 0002
*                                      /*PATCH AREA FOR MAINTENANCE  */
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE 'UPRINT' MACRO ARGUMENT LIST ELEMENTS        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0170
*        DDSTRU = ADDR(PRNTLIST);                                  0170
         LA    @10,PRNTLIST                                        0170
         ST    @10,DDSTRU                                          0170
*        PRNTLIST = '00'X;                                         0171
*                                                                  0171
         XC    PRNTLIST+1(19),PRNTLIST+1                           0171
         MVI   PRNTLIST,X'00'                                      0171
*        /************************************************************/
*        /*                                                          */
*        /*  THE FOLLOWING (MAIN PROCEDURE) CODE DETERMINES WHICH    */
*        /*  SYSTEM OPTIONS HAVE BEEN SPECIFIED FOR PROCESSING, AND  */
*        /*  PROCESSES THOSE OPTIONS SPECIFIED BY CALLING THE        */
*        /*  APPROPRIATE INNER PROCEDURE.                            */
*        /*                                                          */
*        /*  FOR EACH OPTION, THE 'PARAMETER' FSR CONDITION CODE     */
*        /*  MUST BE LESS THAN THE TERMINATING FUNCTION CONDITION    */
*        /*  (CONDITION CODE = 12) FOR THE OPTION TO BE PROCESSED    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0172
*        /************************************************************/
*        /*                                                          */
*        /*  TEST PARAMETER - TURNS ON AND OFF THE AMS DEBUGGING     */
*        /*  AIDS (DIAGNOSTIC DUMP FACILITY) AND SPECIFIES DESIRED   */
*        /*  DUMP POINTS WITHIN AMS AND DUMP FORMATS AT THOSE POINTS */
*        /*                                                          */
*        /************************************************************/
*                                                                  0172
*        IF ADDR(TEST) ^= NULLPTR & LASTCOND < LASTCC12            0172
*          THEN                                                    0172
         L     @10,@PC00001+4                                      0172
         L     @10,FDTPTR(,@10)                                    0172
         LTR   @10,@10                                             0172
         BZ    @RF00172                                            0172
         L     @10,@PC00001+8                                      0172
         LH    @10,LASTCOND(,@10)                                  0172
         CH    @10,@CH00557                                        0172
         BNL   @RF00172                                            0172
*            DO;                                                   0173
*              CALL TESTPARM;                                      0174
*                                                                  0174
         BAL   @14,TESTPARM                                        0174
*              RESPECIFY RTNREG RSTD;                              0175
*              TESTRC = RTNREG;                                    0176
         LR    TESTRC,RTNREG                                       0176
*              RESPECIFY RTNREG UNRSTD;                            0177
*                                                                  0177
*              LASTCOND = MAX(LASTCOND,TESTRC);                    0178
         L     @10,@PC00001+8                                      0178
         LH    @03,LASTCOND(,@10)                                  0178
         CR    @03,TESTRC                                          0178
         BNL   *+6
         LR    @03,TESTRC                                          0178
         STH   @03,LASTCOND(,@10)                                  0178
*            END;                                                  0179
*                                                                  0179
*        /************************************************************/
*        /*                                                          */
*        /*  MARGINS PARAMETER - SPECIFIES THE LEFT AND RIGHT        */
*        /*  MARGINS OF THE AMS COMMANDS WHICH FOLLOW IN THE         */
*        /*  INPUT STREAM.  THE READER/INTERPRETER WILL USE THESE    */
*        /*  MARGINS IN SCANNING THE INPUT COMMANDS.                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0180
*        IF ADDR(MARG) ^= NULLPTR & LASTCOND < LASTCC12            0180
*          THEN                                                    0180
@RF00172 L     @10,@PC00001+4                                      0180
         L     @10,FDTPTR+44(,@10)                                 0180
         LTR   @10,@10                                             0180
         BZ    @RF00180                                            0180
         L     @10,@PC00001+8                                      0180
         LH    @10,LASTCOND(,@10)                                  0180
         CH    @10,@CH00557                                        0180
         BNL   @RF00180                                            0180
*            DO;                                                   0181
*              CALL MARGPARM;                                      0182
*                                                                  0182
         BAL   @14,MARGPARM                                        0182
*              RESPECIFY RTNREG RSTD;                              0183
*              TESTRC = RTNREG;                                    0184
         LR    TESTRC,RTNREG                                       0184
*              RESPECIFY RTNREG UNRSTD;                            0185
*                                                                  0185
*              LASTCOND = MAX(LASTCOND,TESTRC);                    0186
         L     @10,@PC00001+8                                      0186
         LH    @03,LASTCOND(,@10)                                  0186
         CR    @03,TESTRC                                          0186
         BNL   *+6
         LR    @03,TESTRC                                          0186
         STH   @03,LASTCOND(,@10)                                  0186
*            END;                                                  0187
*                                                                  0187
*        /************************************************************/
*        /*                                                          */
*        /*  GRAPHICS PARAMETER - SPECIFIES THE GRAPHIC CHARACTER    */
*        /*  SET (PRINT CHAIN/TRAIN) TO BE USED FOR THE SYSPRINT     */
*        /*  DATA SET                                                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0188
*        IF ADDR(GRAPH) ^= NULLPTR & LASTCOND < LASTCC12           0188
*          THEN                                                    0188
@RF00180 L     @10,@PC00001+4                                      0188
         L     @10,FDTPTR+32(,@10)                                 0188
         LTR   @10,@10                                             0188
         BZ    @RF00188                                            0188
         L     @10,@PC00001+8                                      0188
         LH    @10,LASTCOND(,@10)                                  0188
         CH    @10,@CH00557                                        0188
         BNL   @RF00188                                            0188
*            DO;                                                   0189
*              CALL GRPHPARM;                                      0190
*                                                                  0190
         BAL   @14,GRPHPARM                                        0190
*              RESPECIFY RTNREG RSTD;                              0191
*              TESTRC = RTNREG;                                    0192
         LR    TESTRC,RTNREG                                       0192
*              RESPECIFY RTNREG UNRSTD;                            0193
*                                                                  0193
*              LASTCOND = MAX(LASTCOND,TESTRC);                    0194
         L     @10,@PC00001+8                                      0194
         LH    @03,LASTCOND(,@10)                                  0194
         CR    @03,TESTRC                                          0194
         BNL   *+6
         LR    @03,TESTRC                                          0194
         STH   @03,LASTCOND(,@10)                                  0194
*            END;                                                  0195
*                                                                  0195
*        /************************************************************/
*        /*                                                          */
*        /*  PRINT 'PARAMETER' FSR COMPLETION MESSAGE                */
*        /*  (IF FUNCTION COMPLETED WITH NON-TERMINATING ERRORS)     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0196
*        IF LASTCOND < 12                                          0196
*          THEN                                                    0196
@RF00188 L     @10,@PC00001+8                                      0196
         LH    @15,LASTCOND(,@10)                                  0196
         CH    @15,@CH00557                                        0196
         BNL   @RF00196                                            0196
*            DO;                                                   0197
*              DARGSMOD = ENDMSG;                                  0198
         L     @15,DDSTRU                                          0198
         MVC   DARGSMOD(3,@15),@CC00620                            0198
*              DARGSENT = ENDMSG#;                                 0199
         MVI   DARGSENT(@15),X'01'                                 0199
*              DARGDBP = ADDR(LASTCOND);                           0200
         ST    @10,DARGDBP(,@15)                                   0200
*              DARGILP = 2;                                        0201
*                                                                  0201
         MVC   DARGILP(2,@15),@CH00146                             0201
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);               0202
         L     @10,@PC00001                                        0202
         ST    @10,@AL00001                                        0202
         LA    @15,@CF00110                                        0202
         ST    @15,@AL00001+4                                      0202
         LA    @15,DDSTRU                                          0202
         ST    @15,@AL00001+8                                      0202
         MVI   @AL00001+8,X'80'                                    0202
         L     @15,GDTPRT(,@10)                                    0202
         LA    @01,@AL00001                                        0202
         BALR  @14,@15                                             0202
*            END;                                                  0203
*                                                                  0203
*        /************************************************************/
*        /*                                                          */
*        /*  RETURN TO THE IDCAMS EXECUTIVE (IDCEX01)                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0204
*        CALL IDCSAEP0(GDTTBL,MODID);                              0204
@RF00196 L     @10,@PC00001                                        0204
         ST    @10,@AL00001                                        0204
         LA    @15,MODID                                           0204
         ST    @15,@AL00001+4                                      0204
         MVI   @AL00001+4,X'80'                                    0204
         L     @15,GDTEPL(,@10)                                    0204
         LA    @01,@AL00001                                        0204
         BALR  @14,@15                                             0204
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - TESTPARM                                       */
*/*                                                                  */
*/*  FUNCTION - RESET PREVIOUS TEST OPTION (IF TEST OPTION 'ON').    */
*/*             PROCESS NEW TEST OPTION SPECIFIED -                  */
*/*               'OFF' - NO FURTHER DUMPING                         */
*/*               'TRACE' - DUMP TRACE TABLES IN ALL MODULES         */
*/*               'AREAS(IDLIST) - SYMBOLIC DUMP OF SELECTED         */
*/*                     VARIABLES IN SPECIFIED MODULE AREAS          */
*/*               'FULL(DUMPLIST)' - FULL REGION DUMP AT SPECIFIED   */
*/*                     DUMP POINTS AT SPECIFIED TIMES               */
*/*             OBTAIN AND INITIALIZE THE TEST OPTION DATA AREA      */
*/*                                                                  */
*/*  INPUT - PARAMETERS SPECIFIED FOR THE 'TEST' KEYWORD             */
*/*          (CONTAINED IN THE FUNCTION DATA TABLE).                 */
*/*  OUTPUT - TEST OPTION DATA AREA (IF TEST OPTION 'ON') - CONTAINS */
*/*                       INFORMATION REGARDING THE 'TEST' PARAMETERS*/
*/*                       CHOSEN.  THIS AREA IS USED BY THE AMS DUMP */
*/*                       ROUTINE (IDCDB01) IN DETERMINING WHERE AND */
*/*                       WHAT TO DIAGNOSTICALLY DUMP.               */
*/*                                                                  */
*/*  EXTERNAL REFERENCES -                                           */
*/*                                                                  */
*/*     ROUTINES -                                                   */
*/*                                                                  */
*/*          UFSPACE (FREE SPACE MACRO) - USED TO FREE STORAGE HELD  */
*/*                  BY PREVIOUS TEST OPTION DATA AREA (IF ANY)      */
*/*          UGSPACE (GET SPACE MACRO) - USED TO OBTAIN STORAGE FOR  */
*/*                  NEW TEST OPTION DATA AREA                       */
*/*          ULOAD (LOAD MACRO) - USED TO LOAD THE AMS DUMP ROUTINE  */
*/*                (IDCDB01) WHEN THE TEST OPTION IS TURNED 'ON'     */
*/*          UDELETE (DELETE MACRO) - USED TO DELETE THE AMS DUMP    */
*/*                  ROUTINE WHEN THE TEST OPTION IS TURNED 'OFF'    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0205
*TESTPARM: PROCEDURE;                                              0205
@EL00001 L     @13,4(,@13)                                         0205
@EF00001 L     @00,@SIZDATD                                        0205
         LR    @01,@11                                             0205
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0205
         BR    @14                                                 0205
TESTPARM STM   @14,@12,@SA00002                                    0205
*        /************************************************************/
*        /*                                                          */
*        /*  TEST OPTION DATA AREA  -                                */
*        /*      USED FOR COMMUNICATION BETWEEN THE 'PARAMETER'      */
*        /*      FUNCTION SUPPORT ROUTINE (IDCPM01) WHICH PROCESSES  */
*        /*      THE 'TEST' OPTIONS (FROM EITHER THE EXEC CARD       */
*        /*      'PARM' FIELD OR THE 'PARM' INPUT COMMAND), AND THE  */
*        /*      IDCAMS DUMP ROUTINE (IDCDB01) WHICH OUTPUTS THE     */
*        /*      REQUESTED DEBUGGING AIDS (I.E., DUMPS OF THE IDCAMS */
*        /*      TRACE TABLES, SELECTED SYMBOLIC VARIABLES, AND/OR   */
*        /*      FULL REGION DUMPS                                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0206
*        /*  'TEST'  KEYWORD INFORMATION                             */
*        DCL 1 TESTDATA BOUNDARY(WORD) BASED(GDTDBH),              0206
*              2 AREAPTR    PTR(31),   /*AREAS IDENTIFIERS TABLE PTR */
*              2 FULLPTR    PTR(31),   /*FULL REGION DUMP TABLE PTR  */
*              2 SNAPID     FIXED(15), /*SNAP (FULL REGION) DUMP ID  */
*              2 TESTRACE   FIXED(15); /*TRACE TABLE DUMP FLAG       */
*                                                                  0206
*        /*  'AREAS' KEYWORD INFORMATION                             */
*        DCL 1 AREADATA BOUNDARY(WORD) BASED(AREAPTR),             0207
*              2 AREAINDX   FIXED(31), /*AREAS ID TABLE LENGTH INDEX */
*              2 AREADUMP(*) BDY(HWORD),/*AREAS IDENTIFIER TABLE     */
*                3 AREANAME CHAR(2);   /*REQUESTED MODULE AREA ID    */
*                                                                  0207
*        /*  'FULL'  KEYWORD INFORMATION                             */
*        DCL 1 FULLDATA BOUNDARY(WORD) BASED(FULLPTR),             0208
*              2 FULLINDX   FIXED(31), /*FULL DUMP TABLE LENGTH INDEX*/
*              2 FULLDUMP(*) BDY(WORD),/*FULL REGION DUMP TABLE      */
*                3 FDUMPID  CHAR(4),   /*REQUESTED FULL DUMP ID      */
*                3 FDUMPBEG FIXED(15), /*FULL DUMP 'BEGIN' REQUEST   */
*                3 FDUMPCNT FIXED(15), /*FULL DUMP 'COUNT' REQUEST   */
*                3 REALBEG  FIXED(15), /*ACTUAL SYSTEM 'BEGIN' VALUE */
*                3 REALCNT  FIXED(15); /*ACTUAL SYSTEM 'COUNT' VALUE */
*        /************************************************************/
*        /*                                                          */
*        /*  DECLARATIONS FOR 'TEST' SYSTEM OPTION                   */
*        /*                                                          */
*        /************************************************************/
*                                                                  0209
*        DCL TABLSCAN FIXED(15);       /*ID AND FULL TABLE SCAN INDEX*/
*        DCL AREASIZE FIXED(15);       /*AREAS OPTION DATA AREA SIZE */
*        DCL FULLSIZE FIXED(15);       /*FULL  OPTION DATA AREA SIZE */
*        DCL TESTSIZE FIXED(31);       /*TEST  OPTION DATA AREA SIZE */
*                                                                  0212
*        DCL TESTBASE FIXED(15) CONSTANT(12);                      0213
*                                      /*TEST  OPTION AREA BASE SIZE */
*        DCL AREABASE FIXED(15) CONSTANT(4);                       0214
*                                      /*AREAS OPTION AREA BASE SIZE */
*        DCL FULLBASE FIXED(15) CONSTANT(4);                       0215
*                                      /*FULL  OPTION AREA BASE SIZE */
*        DCL AREATABL FIXED(15) CONSTANT(2);                       0216
*                                      /*AREA TABLE ELEMENT SIZE     */
*        DCL FULLTABL FIXED(15) CONSTANT(12);                      0217
*                                      /*FULL TABLE ELEMENT SIZE     */
*        DCL DUMPNAME CHAR(8)   CONSTANT('IDCDB01 ');              0218
*                                      /*DUMP ROUTINE LOAD MODULE    */
*                                                                  0219
*                                                                  0219
*        /************************************************************/
*        /*                                                          */
*        /*  DECLARATIONS FOR 'UPRINT' MACRO ARGUMENT LIST           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0219
*        DCL TERMMSG  CHAR(3)   CONSTANT('UV0');                   0219
*                                      /*FUNCTION TERMINATED MSG MOD */
*        DCL TERMMSG# FIXED(8)  CONSTANT(4);                       0220
*                                      /*FUNCTION TERMINATED MSG #   */
*        OLDERID2 = NEWERID2;                                      0221
         L     @10,@PC00001                                        0221
         L     @15,GDTTR2(,@10)                                    0221
         MVC   @TS00001(95),NEWERID2(@15)                          0221
         MVC   OLDERID2(95,@15),@TS00001                           0221
*        NEWID2 = 'PMTP';                                          0222
*                                                                  0222
         MVC   NEWID2(4,@15),@CC00662                              0222
*        /************************************************************/
*        /*                                                          */
*        /*  RESET PREVIOUS TEST OPTION (IF TEST OPTION 'ON') AND    */
*        /*  RELEASE STORAGE HELD BY TEST OPTION DATA AREA           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0223
*        IF GDTDBH > NULLPTR                                       0223
*          THEN                                                    0223
         L     @15,GDTDBH(,@10)                                    0223
         LTR   @15,@15                                             0223
         BNP   @RF00223                                            0223
*            DO;                                                   0224
*              CALL IDCSAFS0(GDTTBL,GDTDBH);                       0225
*                                                                  0225
         ST    @10,@AL00001                                        0225
         LA    @15,GDTDBH(,@10)                                    0225
         ST    @15,@AL00001+4                                      0225
         L     @15,GDTFSP(,@10)                                    0225
         LA    @01,@AL00001                                        0225
         BALR  @14,@15                                             0225
*              GDTDBH = NULLPTR;                                   0226
         L     @10,@PC00001                                        0226
         SLR   @15,@15                                             0226
         ST    @15,GDTDBH(,@10)                                    0226
*            END;                                                  0227
*                                                                  0227
*        /************************************************************/
*        /*                                                          */
*        /*  PROCESS THE NEW TEST OPTION REQUEST UNLESS 'TEST(OFF)'  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0228
*        IF ADDR(TOFF) = NULLPTR                                   0228
*          THEN                                                    0228
@RF00223 L     @10,@PC00001+4                                      0228
         L     @10,FDTPTR+4(,@10)                                  0228
         LTR   @10,@10                                             0228
         BNZ   @RF00228                                            0228
*TESTON:     DO;                                                   0229
TESTON   DS    0H                                                  0230
*              /******************************************************/
*              /*                                                    */
*              /*  DETERMINE THE SIZE OF THE TEST OPTION DATA AREA   */
*              /*  FOR THE NEW 'TEST' REQUEST - THE SIZE DEPENDS     */
*              /*  UPON THE SPECIFIC TEST KEYWORD OPTIONS CHOSEN     */
*              /*                                                    */
*              /******************************************************/
*                                                                  0230
*              AREASIZE = 0;                                       0230
         SLR   @10,@10                                             0230
         LR    AREASIZE,@10                                        0230
*              FULLSIZE = 0;                                       0231
*                                                                  0231
         LR    FULLSIZE,@10                                        0231
*              IF ADDR(AREA) ^= NULLPTR                            0232
*                THEN                                              0232
         L     @15,@PC00001+4                                      0232
         L     @15,FDTPTR+12(,@15)                                 0232
         CR    @15,@10                                             0232
         BE    @RF00232                                            0232
*                  AREASIZE = AREABASE + AREATABL * ((AREACNT+1)/2)*2;
*                                                                  0233
         LA    @00,1                                               0233
         AH    @00,AREACNT(,@15)                                   0233
         SRDA  @00,32                                              0233
         D     @00,@CF00146                                        0233
         SLA   @01,2                                               0233
         AH    @01,@CH00039                                        0233
         LR    AREASIZE,@01                                        0233
*              IF ADDR(FULL) ^= NULLPTR                            0234
*                THEN                                              0234
@RF00232 L     @10,@PC00001+4                                      0234
         L     @15,FDTPTR+16(,@10)                                 0234
         LTR   @15,@15                                             0234
         BZ    @RF00234                                            0234
*                  FULLSIZE = FULLBASE + FULLTABL * FULLCNT;       0235
*                                                                  0235
         LA    @10,FDTPTR+16(,@10)                                 0235
         L     FULLSIZE,FULLCNT(,@10)                              0235
         MH    FULLSIZE,@CH00557                                   0235
         AH    FULLSIZE,@CH00039                                   0235
*              TESTSIZE = TESTBASE + AREASIZE + FULLSIZE;          0236
*                                                                  0236
@RF00234 LA    @10,12                                              0236
         ALR   @10,AREASIZE                                        0236
         ALR   @10,FULLSIZE                                        0236
         ST    @10,TESTSIZE                                        0236
*              /******************************************************/
*              /*                                                    */
*              /*  OBTAIN STORAGE FOR THE TEST OPTION DATA AREA      */
*              /*                                                    */
*              /******************************************************/
*                                                                  0237
*              CALL IDCSAGS0(GDTTBL,TESTSIZE,GDTDBH);              0237
*                                                                  0237
         L     @10,@PC00001                                        0237
         ST    @10,@AL00001                                        0237
         LA    @15,TESTSIZE                                        0237
         ST    @15,@AL00001+4                                      0237
         LA    @15,GDTDBH(,@10)                                    0237
         ST    @15,@AL00001+8                                      0237
         MVI   @AL00001+8,X'80'                                    0237
         L     @15,GDTGSP(,@10)                                    0237
         LA    @01,@AL00001                                        0237
         BALR  @14,@15                                             0237
*              RESPECIFY RTNREG RSTD;                              0238
*              TESTRC = RTNREG;                                    0239
         LR    TESTRC,RTNREG                                       0239
*              RESPECIFY RTNREG UNRSTD;                            0240
*                                                                  0240
*              IF TESTRC = 0                                       0241
*                THEN                                              0241
         SLR   @10,@10                                             0241
         CR    TESTRC,@10                                          0241
         BNE   @RF00241                                            0241
*                  DO;                                             0242
*                    /************************************************/
*                    /*                                              */
*                    /*  INITIALIZE THE TEST OPTION DATA AREA        */
*                    /*                                              */
*                    /************************************************/
*                                                                  0243
*                    AREAPTR = NULLPTR;                            0243
         L     @02,@PC00001                                        0243
         L     @02,GDTDBH(,@02)                                    0243
         ST    @10,AREAPTR(,@02)                                   0243
*                    FULLPTR = NULLPTR;                            0244
*                                                                  0244
         ST    @10,FULLPTR(,@02)                                   0244
*                    IF ADDR(AREA) ^= NULLPTR                      0245
*                      THEN                                        0245
         L     @15,@PC00001+4                                      0245
         C     @10,FDTPTR+12(,@15)                                 0245
         BE    @RF00245                                            0245
*                        AREAPTR = GDTDBH + TESTBASE;              0246
*                                                                  0246
         LA    @10,12                                              0246
         ALR   @10,@02                                             0246
         ST    @10,AREAPTR(,@02)                                   0246
*                    IF ADDR(FULL) ^= NULLPTR                      0247
*                      THEN                                        0247
@RF00245 L     @10,@PC00001+4                                      0247
         L     @10,FDTPTR+16(,@10)                                 0247
         LTR   @10,@10                                             0247
         BZ    @RF00247                                            0247
*                        FULLPTR = GDTDBH + TESTBASE + AREASIZE;   0248
*                                                                  0248
         L     @10,@PC00001                                        0248
         L     @10,GDTDBH(,@10)                                    0248
         LA    @02,12                                              0248
         ALR   @02,@10                                             0248
         ALR   @02,AREASIZE                                        0248
         ST    @02,FULLPTR(,@10)                                   0248
*                    /************************************************/
*                    /*                                              */
*                    /*  EXTRACT CHOSEN TEST PARAMETERS FROM THE     */
*                    /*  FUNCTION DATA TABLE AND PLACE THEM IN THE   */
*                    /*  TEST OPTION DATA AREA                       */
*                    /*                                              */
*                    /************************************************/
*                                                                  0249
*                    CALL TESTSAVE;                                0249
*                                                                  0249
@RF00247 BAL   @14,TESTSAVE                                        0249
*                    /************************************************/
*                    /*                                              */
*                    /*  LOAD DUMP ROUTINE (IF NECESSARY)            */
*                    /*  TO PROCESS THE REQUESTED DUMPS              */
*                    /*                                              */
*                    /************************************************/
*                                                                  0250
*                    IF GDTDBG = NULLPTR                           0250
*                      THEN                                        0250
         L     @10,@PC00001                                        0250
         L     @15,GDTDBG(,@10)                                    0250
         LTR   @15,@15                                             0250
         BNZ   @RF00250                                            0250
*                        CALL IDCSALD0(GDTTBL,DUMPNAME,GDTDBG);    0251
*                                                                  0251
         ST    @10,@AL00001                                        0251
         LA    @15,@CC00659                                        0251
         ST    @15,@AL00001+4                                      0251
         LA    @15,GDTDBG(,@10)                                    0251
         ST    @15,@AL00001+8                                      0251
         L     @15,GDTLOD(,@10)                                    0251
         LA    @01,@AL00001                                        0251
         BALR  @14,@15                                             0251
*                    TESTRC = LASTCC00;                            0252
*                                                                  0252
@RF00250 SLR   TESTRC,TESTRC                                       0252
*                  END;                                            0253
*                ELSE                                              0254
*                  DO;                                             0254
         B     @RC00241                                            0254
@RF00241 DS    0H                                                  0255
*                    /************************************************/
*                    /*                                              */
*                    /*  UNABLE TO OBTAIN STORAGE FOR TEST OPTION    */
*                    /*  DATA AREA - PRINT ERROR MESSAGE             */
*                    /*                                              */
*                    /************************************************/
*                                                                  0255
*                    GDTDBG = NULLPTR;                             0255
*                                                                  0255
         L     @10,@PC00001                                        0255
         SLR   @03,@03                                             0255
         ST    @03,GDTDBG(,@10)                                    0255
*                    DARGSMOD = TERMMSG;                           0256
         L     @03,DDSTRU                                          0256
         MVC   DARGSMOD(3,@03),@CC00620                            0256
*                    DARGSENT = TERMMSG#;                          0257
*                                                                  0257
         MVI   DARGSENT(@03),X'04'                                 0257
*                    CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);         0258
*                                                                  0258
         ST    @10,@AL00001                                        0258
         LA    @03,@CF00110                                        0258
         ST    @03,@AL00001+4                                      0258
         LA    @03,DDSTRU                                          0258
         ST    @03,@AL00001+8                                      0258
         MVI   @AL00001+8,X'80'                                    0258
         L     @15,GDTPRT(,@10)                                    0258
         LA    @01,@AL00001                                        0258
         BALR  @14,@15                                             0258
*                    TESTRC = LASTCC12;                            0259
         LA    TESTRC,12                                           0259
*                  END;                                            0260
*                                                                  0260
*            END TESTON;                                           0261
*          ELSE                                                    0262
*TESTOFF:    DO;                                                   0262
         B     @RC00228                                            0262
@RF00228 DS    0H                                                  0262
TESTOFF  DS    0H                                                  0263
*              /******************************************************/
*              /*                                                    */
*              /*  TURN TEST OPTION 'OFF' - DELETE AMS DUMP ROUTINE  */
*              /*                                                    */
*              /******************************************************/
*                                                                  0263
*              CALL IDCSADE0(GDTTBL,DUMPNAME);                     0263
*                                                                  0263
         L     @10,@PC00001                                        0263
         ST    @10,@AL00001                                        0263
         LA    @03,@CC00659                                        0263
         ST    @03,@AL00001+4                                      0263
         L     @15,GDTDEL(,@10)                                    0263
         LA    @01,@AL00001                                        0263
         BALR  @14,@15                                             0263
*              GDTDBG = NULLPTR;                                   0264
*                                                                  0264
         SLR   @10,@10                                             0264
         L     @03,@PC00001                                        0264
         ST    @10,GDTDBG(,@03)                                    0264
*              TESTRC = LASTCC00;                                  0265
*                                                                  0265
         LR    TESTRC,@10                                          0265
*            END TESTOFF;                                          0266
*                                                                  0266
*        RETURN CODE(TESTRC);                                      0267
@RC00228 LR    @15,TESTRC                                          0267
         L     @14,@SA00002                                        0267
         LM    @00,@12,@SA00002+8                                  0267
         BR    @14                                                 0267
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - TESTSAVE                                       */
*/*                                                                  */
*/*  FUNCTION - EXTRACT THE SPECIFIED TEST PARAMETERS FROM THE       */
*/*             FUNCTION DATA TABLE AND PLACE THEM IN THE TEST       */
*/*             OPTION DATA AREA TO BE USED BY THE AMS DUMP ROUTINE  */
*/*                                                                  */
*/*  INPUT - PARAMETERS SPECIFIED FOR THE 'TEST' KEYWORD             */
*/*          (CONTAINED IN THE FUNCTION DATA TABLE)                  */
*/*                                                                  */
*/*  OUTPUT - COMPLETED TEST OPTION DATA AREA CONTAINING INFORMATION */
*/*           REGARDING 'TEST' PARAMETERS CHOSEN                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0268
*TESTSAVE: PROCEDURE;                                              0268
*                                                                  0268
TESTSAVE STM   @14,@12,12(@13)                                     0268
*        OLDERID2 = NEWERID2;                                      0269
         L     @10,@PC00001                                        0269
         L     @15,GDTTR2(,@10)                                    0269
         MVC   @TS00001(95),NEWERID2(@15)                          0269
         MVC   OLDERID2(95,@15),@TS00001                           0269
*        NEWID2 = 'PMTS';                                          0270
*                                                                  0270
         MVC   NEWID2(4,@15),@CC00671                              0270
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE THE SNAP DUMP IDENTIFIER IN THE TEST OPTION  */
*        /*  DATA AREA - THIS IDENTIFIER IS INCREMENTED FOR EACH     */
*        /*  FULL REGION (SNAP) DUMP PRODUCED BY THE DUMP ROUTINE    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0271
*        SNAPID = 0;                                               0271
*                                                                  0271
         SLR   @15,@15                                             0271
         L     @10,GDTDBH(,@10)                                    0271
         STH   @15,SNAPID(,@10)                                    0271
*        /************************************************************/
*        /*                                                          */
*        /*  'TRACE' KEYWORD - IF SPECIFIED, TURN ON THE 'TRACE'     */
*        /*                    FLAG IN THE TEST OPTION DATA AREA     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0272
*        IF ADDR(TRACE) ^= NULLPTR                                 0272
*          THEN                                                    0272
         L     @14,@PC00001+4                                      0272
         C     @15,FDTPTR+8(,@14)                                  0272
         BE    @RF00272                                            0272
*            TESTRACE = 1;                                         0273
         MVC   TESTRACE(2,@10),@CH00212                            0273
*          ELSE                                                    0274
*            TESTRACE = 0;                                         0274
*                                                                  0274
         B     @RC00272                                            0274
@RF00272 L     @10,@PC00001                                        0274
         L     @10,GDTDBH(,@10)                                    0274
         SLR   @15,@15                                             0274
         STH   @15,TESTRACE(,@10)                                  0274
*        /************************************************************/
*        /*                                                          */
*        /*  'AREAS' KEYWORD - IF SPECIFIED, PLACE THE AREA REQUEST  */
*        /*                    COUNT AND AREA IDENTIFIERS IN THE     */
*        /*                    TEST OPTION DATA AREA                 */
*        /*                                                          */
*        /************************************************************/
*                                                                  0275
*        IF ADDR(AREA) ^= NULLPTR                                  0275
*          THEN                                                    0275
@RC00272 L     @10,@PC00001+4                                      0275
         L     @10,FDTPTR+12(,@10)                                 0275
         LTR   @10,@10                                             0275
         BZ    @RF00275                                            0275
*            DO;                                                   0276
*              AREAINDX = AREACNT;                                 0277
*                                                                  0277
         L     @15,@PC00001                                        0277
         L     @01,GDTDBH(,@15)                                    0277
         L     @01,AREAPTR(,@01)                                   0277
         LH    @10,AREACNT(,@10)                                   0277
         ST    @10,AREAINDX(,@01)                                  0277
*              DO TABLSCAN = 1 TO AREACNT;                         0278
         LA    TABLSCAN,1                                          0278
         B     @DE00278                                            0278
@DL00278 DS    0H                                                  0279
*                AREANAME(TABLSCAN) = AREAVAL(TABLSCAN);           0279
         LR    @10,TABLSCAN                                        0279
         ALR   @10,@10                                             0279
         L     @03,@PC00001                                        0279
         L     @03,GDTDBH(,@03)                                    0279
         L     @03,AREAPTR(,@03)                                   0279
         ALR   @03,@10                                             0279
         LR    @10,TABLSCAN                                        0279
         SLA   @10,2                                               0279
         L     @15,@PC00001+4                                      0279
         L     @01,FDTPTR+12(,@15)                                 0279
         ALR   @01,@10                                             0279
         AL    @01,@CF00721                                        0279
         MVC   AREANAME-2(2,@03),AREAVAL-3(@01)                    0279
*              END;                                                0280
         AH    TABLSCAN,@CH00212                                   0280
@DE00278 L     @10,@PC00001+4                                      0280
         L     @10,FDTPTR+12(,@10)                                 0280
         CH    TABLSCAN,AREACNT(,@10)                              0280
         BNH   @DL00278                                            0280
*            END;                                                  0281
*                                                                  0281
*        /************************************************************/
*        /*                                                          */
*        /*  'FULL' KEYWORD - IF SPECIFIED, PLACE THE FULL DUMP      */
*        /*                   REQUEST COUNT, FULL DUMP IDENTIFIERS   */
*        /*                   AND FULL DUMP CONTROLLERS IN THE TEST  */
*        /*                   OPTION DATA AREA                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0282
*        IF ADDR(FULL) ^= NULLPTR                                  0282
*          THEN                                                    0282
@RF00275 L     @10,@PC00001+4                                      0282
         L     @15,FDTPTR+16(,@10)                                 0282
         LTR   @15,@15                                             0282
         BZ    @RF00282                                            0282
*            DO;                                                   0283
*              FULLINDX = FULLCNT;                                 0284
*                                                                  0284
         L     @15,@PC00001                                        0284
         L     @01,GDTDBH(,@15)                                    0284
         L     @01,FULLPTR(,@01)                                   0284
         LA    @10,FDTPTR+16(,@10)                                 0284
         MVC   FULLINDX(4,@01),FULLCNT(@10)                        0284
*              DO TABLSCAN = 1 TO FULLCNT;                         0285
         LA    TABLSCAN,1                                          0285
         B     @DE00285                                            0285
@DL00285 DS    0H                                                  0286
*                FDUMPID(TABLSCAN)  = FIDPTR(TABLSCAN)   -> FIDVAL;
         LR    @10,TABLSCAN                                        0286
         MH    @10,@CH00557                                        0286
         L     @03,@PC00001                                        0286
         L     @03,GDTDBH(,@03)                                    0286
         L     @03,FULLPTR(,@03)                                   0286
         ST    @10,@TF00001                                        0286
         ALR   @10,@03                                             0286
         AL    @10,@CF00722                                        0286
         LR    @15,TABLSCAN                                        0286
         SLA   @15,2                                               0286
         L     @14,@PC00001+4                                      0286
         L     @01,FDTPTR+20(,@14)                                 0286
         AL    @01,@CF00723                                        0286
         L     @01,FIDPTR(@15,@01)                                 0286
         MVC   FDUMPID-4(4,@10),FIDVAL(@01)                        0286
*                FDUMPBEG(TABLSCAN) = BEGINPTR(TABLSCAN) -> BEGINVAL;
         L     @10,FDTPTR+24(,@14)                                 0287
         AL    @10,@CF00723                                        0287
         L     @10,BEGINPTR(@15,@10)                               0287
         L     @10,BEGINVAL(,@10)                                  0287
         L     @01,@TF00001                                        0287
         AL    @01,@CF00723                                        0287
         STH   @10,FDUMPBEG-8(@01,@03)                             0287
*                FDUMPCNT(TABLSCAN) = COUNTPTR(TABLSCAN) -> COUNTVAL;
         L     @10,FDTPTR+28(,@14)                                 0288
         AL    @10,@CF00723                                        0288
         L     @10,COUNTPTR(@15,@10)                               0288
         L     @10,COUNTVAL(,@10)                                  0288
         L     @01,@TF00001                                        0288
         AL    @01,@CF00724                                        0288
         STH   @10,FDUMPCNT-10(@01,@03)                            0288
*                REALBEG(TABLSCAN)  = 0;                           0289
         SLR   @10,@10                                             0289
         L     @01,@TF00001                                        0289
         STH   @10,REALBEG-12(@01,@03)                             0289
*                REALCNT(TABLSCAN)  = 0;                           0290
         L     @01,@TF00001                                        0290
         STH   @10,REALCNT-12(@01,@03)                             0290
*              END;                                                0291
*                                                                  0291
         AH    TABLSCAN,@CH00212                                   0291
@DE00285 L     @10,@PC00001+4                                      0291
         LA    @10,FDTPTR+16(,@10)                                 0291
         C     TABLSCAN,FULLCNT(,@10)                              0291
         BNH   @DL00285                                            0291
*            END;                                                  0292
*                                                                  0292
*        RETURN;                                                   0293
*                                                                  0293
@EL00003 DS    0H                                                  0293
@EF00003 DS    0H                                                  0293
@ER00003 LM    @14,@12,12(@13)                                     0293
         BR    @14                                                 0293
*        END TESTSAVE;                                             0294
*                                                                  0294
*                                                                  0294
         B     @EL00003                                            0294
*        END TESTPARM;                                             0295
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE - MARGPARM                                            */
*/*                                                                  */
*/*  FUNCTION - PROCESS THE INPUT COMMAND SOURCE MARGINS SPECIFIED.  */
*/*             THE LEFT AND RIGHT MARGIN VALUES ARE PLACED INTO THE */
*/*             READER/INTERPRETER HISTORICAL DATA AREA TO BE USED   */
*/*             BY THE READER/INTERPRETER WHEN PROCESSING SUBSEQUENT */
*/*             COMMAND INPUT                                        */
*/*                                                                  */
*/*  INPUT - THE LEFT AND RIGHT MARGIN VALUES SPECIFIED IN THE       */
*/*          'MARGINS' PARAMETER.                                    */
*/*                                                                  */
*/*  OUTPUT - THE LEFT AND RIGHT MARGIN VALUES ARE RESPECTIVELY      */
*/*           PLACED INTO THE FIRST TWO HALFWORD FIELDS OF THE       */
*/*           READER/INTERPRETER HISTORICAL DATA AREA                */
*/*           (BASED ON 'GDTRIH')                                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0296
*MARGPARM: PROCEDURE;                                              0296
MARGPARM STM   @14,@12,@SA00004                                    0296
*        /************************************************************/
*        /*                                                          */
*        /*  DECLARATIONS FOR 'MARGINS' SYSTEM OPTION                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0297
*        /*STORAGE FOR MARGIN VALUES WITHIN R/I HISTORICAL DATA AREA */
*        DCL 1 MARGINS    BDY(HWORD) BASED(GDTRIH),                0297
*              2 LMARGIN  FIXED(15),   /*LEFT  MARGIN VALUE FOR R/I  */
*              2 RMARGIN  FIXED(15);   /*RIGHT MARGIN VALUE FOR R/I  */
*                                                                  0297
*        DCL LMDEFLT  FIXED(15) CONSTANT(2);                       0298
*                                      /*LEFT  MARGIN DEFAULT VALUE  */
*        DCL RMDEFLT  FIXED(15) CONSTANT(72);                      0299
*                                      /*RIGHT MARGIN DEFAULT VALUE  */
*                                                                  0300
*                                                                  0300
*        /************************************************************/
*        /*                                                          */
*        /*  DECLARATIONS FOR 'UPRINT' MACRO ARGUMENT LIST           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0300
*        DCL MARGMSG  CHAR(3)   CONSTANT('EX0');                   0300
*                                      /*INVALID MARGINS MSG MODULE  */
*        DCL MARGMSG# FIXED(8)  CONSTANT(12);                      0301
*                                      /*INVALID MARGINS MSG NUMBER  */
*        OLDERID2 = NEWERID2;                                      0302
         L     @10,@PC00001                                        0302
         L     @15,GDTTR2(,@10)                                    0302
         MVC   @TS00001(95),NEWERID2(@15)                          0302
         MVC   OLDERID2(95,@15),@TS00001                           0302
*        NEWID2 = 'PMMG';                                          0303
*                                                                  0303
         MVC   NEWID2(4,@15),@CC00684                              0303
*        /************************************************************/
*        /*                                                          */
*        /*  DETERMINE IF MARGIN VALUES ARE VALID -                  */
*        /*  LEFT MARGIN VALUE MUST BE STRICTLY LESS THAN RIGHT      */
*        /*  MARGIN VALUE                                            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0304
*        IF LMARGVAL < RMARGVAL                                    0304
*          THEN                                                    0304
         L     @15,@PC00001+4                                      0304
         L     @01,FDTPTR+48(,@15)                                 0304
         L     @14,LMARGVAL(,@01)                                  0304
         L     @15,FDTPTR+52(,@15)                                 0304
         L     @15,RMARGVAL(,@15)                                  0304
         CR    @14,@15                                             0304
         BNL   @RF00304                                            0304
*            DO;                                                   0305
*              /******************************************************/
*              /*                                                    */
*              /*  MARGIN VALUES ARE VALID -                         */
*              /*  STORE MARGIN VALUES IN R/I HISTORICAL DATA AREA   */
*              /*                                                    */
*              /******************************************************/
*                                                                  0306
*              LMARGIN = LMARGVAL;                                 0306
         L     @10,GDTRIH(,@10)                                    0306
         STH   @14,LMARGIN(,@10)                                   0306
*              RMARGIN = RMARGVAL;                                 0307
*                                                                  0307
         STH   @15,RMARGIN(,@10)                                   0307
*              TESTRC = 0;                                         0308
*                                                                  0308
         SLR   TESTRC,TESTRC                                       0308
*            END;                                                  0309
*          ELSE                                                    0310
*            DO;                                                   0310
         B     @RC00304                                            0310
@RF00304 DS    0H                                                  0311
*              /******************************************************/
*              /*                                                    */
*              /*  MARGIN VALUES ARE INVALID -                       */
*              /*  PRINT ERROR MESSAGE AND SET CONDITION CODE TO 4   */
*              /*  (RESET MARGINS TO THEIR DEFAULT VALUES)           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0311
*              DARGSMOD = MARGMSG;                                 0311
         L     @10,DDSTRU                                          0311
         MVC   DARGSMOD(3,@10),@CC00682                            0311
*              DARGSENT = MARGMSG#;                                0312
*                                                                  0312
         MVI   DARGSENT(@10),X'0C'                                 0312
*              CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);               0313
*                                                                  0313
         L     @10,@PC00001                                        0313
         ST    @10,@AL00001                                        0313
         LA    @03,@CF00110                                        0313
         ST    @03,@AL00001+4                                      0313
         LA    @03,DDSTRU                                          0313
         ST    @03,@AL00001+8                                      0313
         MVI   @AL00001+8,X'80'                                    0313
         L     @15,GDTPRT(,@10)                                    0313
         LA    @01,@AL00001                                        0313
         BALR  @14,@15                                             0313
*              LMARGIN = LMDEFLT;                                  0314
         L     @10,@PC00001                                        0314
         L     @10,GDTRIH(,@10)                                    0314
         MVC   LMARGIN(2,@10),@CH00146                             0314
*              RMARGIN = RMDEFLT;                                  0315
*                                                                  0315
         MVC   RMARGIN(2,@10),@CH00680                             0315
*              TESTRC = LASTCC04;                                  0316
*                                                                  0316
         LA    TESTRC,4                                            0316
*            END;                                                  0317
*                                                                  0317
*        RETURN CODE(TESTRC);                                      0318
*                                                                  0318
@RC00304 LR    @15,TESTRC                                          0318
         L     @14,@SA00004                                        0318
         LM    @00,@12,@SA00004+8                                  0318
         BR    @14                                                 0318
*        END MARGPARM;                                             0319
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - GRPHPARM                                       */
*/*                                                                  */
*/*  FUNCTION - DETERMINE GRAPHICS OPTION CHOSEN (PRINT CHAIN/TRAIN  */
*/*             SELECTED CORRESPONDS TO THE GRAPHIC CHARACTER SET    */
*/*             TO BE USED IN AMS OUTPUT.  ALL CHARACTERS NOT IN     */
*/*             THE GRAPHIC CHARACTER SET CHOSEN ARE TRANSLATED TO   */
*/*             PERIODS (OR USER-DEFINED ALTERNATE IF USER-DEFINED   */
*/*             CHARACTER SET IS SPECIFIED VIA 'TABLE' KEYWORD).     */
*/*                                                                  */
*/*  INPUT - PARAMETERS SPECIFIED FOR THE 'GRAPHICS' KEYWORD         */
*/*          (CONTAINED IN THE FUNCTION DATA TABLE)                  */
*/*                                                                  */
*/*  OUTPUT - UPDATED PRINT CONTROL TABLE (TEXT PROCESSOR) TO REFLECT*/
*/*           THE DESIRED OUTPUT CHARACTER SET FOR SUBSEQUENT AMS    */
*/*           OUTPUT                                                 */
*/*                                                                  */
*/*  EXTERNAL REFERENCES -                                           */
*/*                                                                  */
*/*     ROUTINES -                                                   */
*/*                                                                  */
*/*          UREST (TEXT PROCESSOR) - UPDATES THE PRINT CONTROL TABLE*/
*/*                TO REFLECT THE GRAPHIC CHARACTER SET SPECIFIED    */
*/*                WITH THE 'GRAPHICS' KEYWORD                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0320
*GRPHPARM: PROCEDURE;                                              0320
GRPHPARM STM   @14,@12,@SA00005                                    0320
*        /************************************************************/
*        /*                                                          */
*        /*  DECLARATIONS FOR 'GRAPHICS' SYSTEM OPTION               */
*        /*                                                          */
*        /************************************************************/
*                                                                  0321
*        DCL 1 PCRPCS BOUNDARY(WORD),  /*UREST PRINT CHAIN ARG LIST  */
*              2 PCRPCT   CHAR(2),     /*PRINT CHAIN ARGUMENT TYPE   */
*              2 PCRPCC   CHAR(2),     /*STANDARD CHAIN/TRAIN ID     */
*              2 PCRPCP   PTR(31);     /*USER TRANSLATE TABLE ADDRESS*/
*                                                                  0321
*        DCL PRINTARG CHAR(2)  CONSTANT('PC');                     0322
*                                      /*PRINT CONTROL ARGUMENT CODE */
*                                                                  0323
*        DCL ANVALUE  CHAR(2)  CONSTANT('AN');             /*@YL026UD*/
*                                      /*'AN' CHAIN VALUE    @YL026UD*/
*                                                                  0324
*        DCL HNVALUE  CHAR(2)  CONSTANT('HN');             /*@YL026UD*/
*                                      /*'HN' CHAIN VALUE    @YL026UD*/
*                                                                  0325
*        DCL PNVALUE  CHAR(2)  CONSTANT('PN');             /*@YL026UD*/
*                                      /*'PN' CHAIN VALUE    @YL026UD*/
*                                                                  0326
*        DCL QNVALUE  CHAR(2)  CONSTANT('QN');             /*@YL026UD*/
*                                      /*'QN' CHAIN VALUE    @YL026UD*/
*                                                                  0327
*        DCL RNVALUE  CHAR(2)  CONSTANT('RN');             /*@YL026UD*/
*                                      /*'RN' CHAIN VALUE    @YL026UD*/
*                                                                  0328
*        DCL SNVALUE  CHAR(2)  CONSTANT('SN');             /*@YL026UD*/
*                                      /*'SN' CHAIN VALUE    @YL026UD*/
*                                                                  0329
*        DCL TNVALUE  CHAR(2)  CONSTANT('TN');             /*@YL026UD*/
*                                      /*'TN' CHAIN VALUE    @YL026UD*/
*        OLDERID2 = NEWERID2;                                      0330
         L     @10,@PC00001                                        0330
         L     @10,GDTTR2(,@10)                                    0330
         MVC   @TS00001(95),NEWERID2(@10)                          0330
         MVC   OLDERID2(95,@10),@TS00001                           0330
*        NEWID2 = 'PMGP';                                          0331
*                                                                  0331
         MVC   NEWID2(4,@10),@CC00708                              0331
*        /************************************************************/
*        /*                                                          */
*        /*  'CHAIN' KEYWORD VALUE - SELECTION OF A STANDARD         */
*        /*                          CHAIN/TRAIN ARRANGEMENT.        */
*        /*                          IF SPECIFIED, PLACE THE CHAIN   */
*        /*                          SPECIFICATION IN THE 'UREST'    */
*        /*                          ARGUMENT LIST.                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0332
*        IF ADDR(CHAIN) ^= NULLPTR                                 0332
*          THEN                                                    0332
         SLR   @10,@10                                             0332
         L     @15,@PC00001+4                                      0332
         C     @10,FDTPTR+36(,@15)                                 0332
         BE    @RF00332                                            0332
*            DO;                                                   0333
*              IF CHNAN ^= NULLPTR                                 0334
*                THEN                                              0334
         L     @01,FDTPTR+56(,@15)                                 0334
         C     @10,CHNAN(,@01)                                     0334
         BE    @RF00334                                            0334
*                  PCRPCC = ANVALUE;                       /*@YL026UD*/
*                                                                  0335
         MVC   PCRPCC(2),@CC00695                                  0335
*              IF CHNHN ^= NULLPTR                                 0336
*                THEN                                              0336
@RF00334 L     @10,@PC00001+4                                      0336
         L     @10,FDTPTR+60(,@10)                                 0336
         L     @10,CHNHN(,@10)                                     0336
         LTR   @10,@10                                             0336
         BZ    @RF00336                                            0336
*                  PCRPCC = HNVALUE;                       /*@YL026UD*/
*                                                                  0337
         MVC   PCRPCC(2),@CC00697                                  0337
*              IF CHNPN ^= NULLPTR                                 0338
*                THEN                                              0338
@RF00336 L     @10,@PC00001+4                                      0338
         L     @10,FDTPTR+64(,@10)                                 0338
         L     @10,CHNPN(,@10)                                     0338
         LTR   @10,@10                                             0338
         BZ    @RF00338                                            0338
*                  PCRPCC = PNVALUE;                       /*@YL026UD*/
*                                                                  0339
         MVC   PCRPCC(2),@CC00699                                  0339
*              IF CHNQN ^= NULLPTR                                 0340
*                THEN                                              0340
@RF00338 L     @10,@PC00001+4                                      0340
         L     @10,FDTPTR+68(,@10)                                 0340
         L     @10,CHNQN(,@10)                                     0340
         LTR   @10,@10                                             0340
         BZ    @RF00340                                            0340
*                  PCRPCC = QNVALUE;                       /*@YL026UD*/
*                                                                  0341
         MVC   PCRPCC(2),@CC00701                                  0341
*              IF CHNRN ^= NULLPTR                                 0342
*                THEN                                              0342
@RF00340 L     @10,@PC00001+4                                      0342
         L     @10,FDTPTR+72(,@10)                                 0342
         L     @10,CHNRN(,@10)                                     0342
         LTR   @10,@10                                             0342
         BZ    @RF00342                                            0342
*                  PCRPCC = RNVALUE;                       /*@YL026UD*/
*                                                                  0343
         MVC   PCRPCC(2),@CC00703                                  0343
*              IF CHNSN ^= NULLPTR                                 0344
*                THEN                                              0344
@RF00342 L     @10,@PC00001+4                                      0344
         L     @10,FDTPTR+76(,@10)                                 0344
         L     @10,CHNSN(,@10)                                     0344
         LTR   @10,@10                                             0344
         BZ    @RF00344                                            0344
*                  PCRPCC = SNVALUE;                       /*@YL026UD*/
*                                                                  0345
         MVC   PCRPCC(2),@CC00705                                  0345
*              IF CHNTN ^= NULLPTR                                 0346
*                THEN                                              0346
@RF00344 L     @10,@PC00001+4                                      0346
         L     @10,FDTPTR+80(,@10)                                 0346
         L     @10,CHNTN(,@10)                                     0346
         LTR   @10,@10                                             0346
         BZ    @RF00346                                            0346
*                  PCRPCC = TNVALUE;                       /*@YL026UD*/
*                                                                  0347
         MVC   PCRPCC(2),@CC00707                                  0347
*              PCRPCP = NULLPTR;                                   0348
@RF00346 SLR   @10,@10                                             0348
         ST    @10,PCRPCP                                          0348
*            END;                                                  0349
*                                                                  0349
*        /************************************************************/
*        /*                                                          */
*        /*  'TABLE' KEYWORD VALUE - SELECTION OF A USER-DEFINED     */
*        /*                          OUTPUT CHARACTER SET.           */
*        /*                          IF SPECIFIED, PLACE THE TABLE   */
*        /*                          SPECIFICATION IN THE 'UREST'    */
*        /*                          MACRO ARGUMENT LIST.            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0350
*        IF ADDR(TABLE) ^= NULLPTR                                 0350
*          THEN                                                    0350
@RF00332 SLR   @10,@10                                             0350
         L     @15,@PC00001+4                                      0350
         L     @15,FDTPTR+40(,@15)                                 0350
         CR    @15,@10                                             0350
         BE    @RF00350                                            0350
*            DO;                                                   0351
*              PCRPCC = 0;                                         0352
         STH   @10,PCRPCC                                          0352
*              PCRPCP = ADDR(TABLEVAL);                            0353
         LA    @10,TABLEVAL(,@15)                                  0353
         ST    @10,PCRPCP                                          0353
*            END;                                                  0354
*                                                                  0354
*        /************************************************************/
*        /*                                                          */
*        /*  UPDATE THE PRINT CONTROL TABLE (TEXT PROCESSOR) TO      */
*        /*  REFLECT THE DESIRED CHARACTER SET IN SUBSEQUENT OUTPUT  */
*        /*  (VIA THE 'UREST' MACRO 'PRINT CONTROL' (PC) OPTION)     */
*        /*                                                          */
*        /************************************************************/
*                                                                  0355
*        PCRPCT = PRINTARG;                                        0355
*                                                                  0355
@RF00350 MVC   PCRPCT(2),@CC00693                                  0355
*        CALL AMSTP043(GDTTBL,PRTFILE,PCRPCS);                     0356
*                                                                  0356
         L     @10,@PC00001                                        0356
         ST    @10,@AL00001                                        0356
         LA    @03,@CF00110                                        0356
         ST    @03,@AL00001+4                                      0356
         LA    @03,PCRPCS                                          0356
         ST    @03,@AL00001+8                                      0356
         MVI   @AL00001+8,X'80'                                    0356
         L     @15,GDTRST(,@10)                                    0356
         LA    @01,@AL00001                                        0356
         BALR  @14,@15                                             0356
*        RESPECIFY RTNREG RSTD;                                    0357
*        TESTRC = RTNREG;                                          0358
         LR    TESTRC,RTNREG                                       0358
*        RESPECIFY RTNREG UNRSTD;                                  0359
*                                                                  0359
*        /************************************************************/
*        /*                                                          */
*        /*  EXAMINE THE RETURN CODE FROM THE UREST MACRO            */
*        /*  AND SET THE APPROPRIATE 'PARAMETER' CONDITION CODE      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0360
*        IF TESTRC = 0                                             0360
*          THEN                                                    0360
         SLR   @10,@10                                             0360
         CR    TESTRC,@10                                          0360
         BNE   @RF00360                                            0360
*            TESTRC = LASTCC00;                                    0361
         LR    TESTRC,@10                                          0361
*          ELSE                                                    0362
*            TESTRC = LASTCC08;                                    0362
*                                                                  0362
         B     @RC00360                                            0362
@RF00360 LA    TESTRC,8                                            0362
*        RETURN CODE(TESTRC);                                      0363
*                                                                  0363
@RC00360 LR    @15,TESTRC                                          0363
         L     @14,@SA00005                                        0363
         LM    @00,@12,@SA00005+8                                  0363
         BR    @14                                                 0363
*        END GRPHPARM;                                             0364
*                                                                  0364
*                                                                  0364
*      END IDCPM01                                                 0365
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (IDCCSPM )                                        *
*/*%INCLUDE SYSLIB  (AMSDF20 )                                        *
*;                                                                 0365
@DATA    DS    0H
@CH00212 DC    H'1'
@CH00039 DC    H'4'
@CH00557 DC    H'12'
@CH00680 DC    H'72'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@AL00001 DS    3A
@TF00001 DS    F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IDCPM01  CSECT
         DS    0F
@CF00110 DC    F'0'
@CF00146 DC    F'2'
@CH00146 EQU   @CF00146+2
@CF00722 DC    F'-8'
@CF00723 DC    F'-4'
@CF00724 DC    F'-2'
@CF00721 DC    F'-1'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
TESTSIZE DS    F
LISTPTR  DS    A
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
         DS    CL2
PRNTLIST DS    CL20
PCRPCS   DS    CL8
         ORG   PCRPCS
PCRPCT   DS    CL2
PCRPCC   DS    CL2
PCRPCP   DS    AL4
         ORG   PCRPCS+8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCPM01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00659 DC    C'IDCDB01 '
@CC00662 DC    C'PMTP'
@CC00671 DC    C'PMTS'
@CC00684 DC    C'PMMG'
@CC00708 DC    C'PMGP'
@CC00620 DC    C'UV0'
@CC00682 DC    C'EX0'
@CC00693 DC    C'PC'
@CC00695 DC    C'AN'
@CC00697 DC    C'HN'
@CC00699 DC    C'PN'
@CC00701 DC    C'QN'
@CC00703 DC    C'RN'
@CC00705 DC    C'SN'
@CC00707 DC    C'TN'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'PM01'
FIXAREA  DS    CL100
         ORG   FIXAREA
@NM00038 DC    100X'00'
         ORG   FIXAREA+100
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FULLSIZE EQU   @02
AREASIZE EQU   @03
TABLSCAN EQU   @02
TESTRC   EQU   @02
RTNREG   EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSALD0 EQU   0
IDCSADE0 EQU   0
IDCSAEP0 EQU   0
IDCSAGS0 EQU   0
IDCSAFS0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
AMSTP043 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
DMPITM   EQU   0
DMPARY   EQU   0
TEST     EQU   0
TOFF     EQU   0
TRACE    EQU   0
AREA     EQU   0
AREACNT  EQU   AREA
@NM00037 EQU   AREA+2
AREAVAL  EQU   @NM00037+1
FULL     EQU   0
FULLCNT  EQU   0
FIDPTR   EQU   0
FID      EQU   0
FIDVAL   EQU   FID+1
BEGINPTR EQU   0
BEGIN    EQU   0
BEGINVAL EQU   BEGIN
COUNTPTR EQU   0
COUNT    EQU   0
COUNTVAL EQU   COUNT
GRAPH    EQU   0
CHAIN    EQU   0
TABLE    EQU   0
TABLEVAL EQU   TABLE+1
MARG     EQU   0
LMARG    EQU   0
LMARGVAL EQU   LMARG
RMARG    EQU   0
RMARGVAL EQU   RMARG
CHNAN    EQU   0
CHNHN    EQU   0
CHNPN    EQU   0
CHNQN    EQU   0
CHNRN    EQU   0
CHNSN    EQU   0
CHNTN    EQU   0
TESTDATA EQU   0
AREAPTR  EQU   TESTDATA
FULLPTR  EQU   TESTDATA+4
SNAPID   EQU   TESTDATA+8
TESTRACE EQU   TESTDATA+10
AREADATA EQU   0
AREAINDX EQU   AREADATA
AREADUMP EQU   AREADATA+4
AREANAME EQU   AREADUMP
FULLDATA EQU   0
FULLINDX EQU   FULLDATA
FULLDUMP EQU   FULLDATA+4
FDUMPID  EQU   FULLDUMP
FDUMPBEG EQU   FULLDUMP+4
FDUMPCNT EQU   FULLDUMP+6
REALBEG  EQU   FULLDUMP+8
REALCNT  EQU   FULLDUMP+10
MARGINS  EQU   0
LMARGIN  EQU   MARGINS
RMARGIN  EQU   MARGINS+2
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCDB010 EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAGP0 EQU   0
IDCSAID0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBH   EQU   GDTTBL+16
GDTRIH   EQU   GDTTBL+24
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTSTH   EQU   GDTTBL+20
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
TABLELEN EQU   TABLE
FIDLEN   EQU   FID
AREALEN  EQU   @NM00037
@NM00036 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00035 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00034 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00033 EQU   ERCNVTAB+4
@NM00032 EQU   ERCNVTAB+2
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGRETP EQU   DARGLIST+4
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00241 EQU   @RC00228
@RF00282 EQU   @EL00003
@PB00005 EQU   @EL00001
@PB00004 EQU   @PB00005
@PB00002 EQU   @PB00004
@ENDDATA EQU   *
         END   IDCPM01,(C'PLS2127',0602,75077)
