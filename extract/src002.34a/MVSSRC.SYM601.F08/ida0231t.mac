         TITLE 'IDA0231T - VS2 VSAM TCLOSE ACB                         *
                        '
IDA0231T CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IDA0231T  78.151'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @03,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@03                                         0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*                                                                  0225
*/********************************************************************/
*/*                                                                  */
*/*                     MODULE IDA0231T                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0225
*   IF AMBLDUMY=OFF THEN            /* IF NOT A DUMMY DATA SET     0225
*                                                            @ZA17534*/
         L     @11,ACBAMBL(,RACB)                                  0225
         TM    AMBLDUMY(@11),B'00000001'                           0225
         BNZ   @RF00225                                            0225
*     DO;                           /* THEN CONTINUE NORMAL PROC   0226
*                                                            @ZA17534*/
*       RESPECIFY                                                  0227
*         R12 UNRESTRICTED;         /* FREE BASE REGISTER FOR GENERAL
*                                      USE                           */
*       RSTATRTN=IDAR231T;          /* NOTE 231T IN CONTROL          */
         MVC   RSTATRTN(4,RCORE),@CC03388                          0228
*       IF(AMBLLSR=OFF&AMBLGSR=OFF)×/* IF (NEITHER GSR NOR LSR) OR   */
*           (AMBLLSR=ON&BIBCKPT=ON)×/* (LSR AND CHECK POINT) OR    0229
*                                                            @Z30SSMD*/
*           BIBREST=ON THEN         /* RESTART THEN          @Z30SSMD*/
         TM    AMBLLSR(@11),B'01100000'                            0229
         BZ    @RT00229                                            0229
         L     @11,ACBAMBL(,RACB)                                  0229
         TM    AMBLLSR(@11),B'00100000'                            0229
         BNO   @GL00001                                            0229
         L     @11,AMBLBIB(,@11)                                   0229
         TM    BIBCKPT(@11),B'00100000'                            0229
         BO    @RT00229                                            0229
@GL00001 L     @11,ACBAMBL(,RACB)                                  0229
         L     @11,AMBLBIB(,@11)                                   0229
         TM    BIBREST(@11),B'01000000'                            0229
         BNO   @RF00229                                            0229
@RT00229 DS    0H                                                  0230
*         DO;                       /* PERFORM T-CLOSE PROCESSING    */
*           CALL INIT231T;          /* TCLOSE INITIALIZATION         */
         BAL   @14,INIT231T                                        0231
*           GEN(USING @DATD,R13);   /* ESTABLISH ADDRESSABILITY      */
         USING @DATD,R13
*           RESPECIFY                                              0233
*             RETCODE RESTRICTED;                                  0233
*           IF AMBLLSR=OFF×BIBREST=ON THEN/* IF RESTART OR NOT LSR   */
         L     @14,ACBAMBL(,RACB)                                  0234
         TM    AMBLLSR(@14),B'00100000'                            0234
         BZ    @RT00234                                            0234
         L     @14,AMBLBIB(,@14)                                   0234
         TM    BIBREST(@14),B'01000000'                            0234
         BNO   @RF00234                                            0234
@RT00234 DS    0H                                                  0235
*             CLWNWRIT=ON;          /* SUPPRESS WRITE BUFFER         */
         OI    CLWNWRIT(RCORE),B'00100000'                         0235
*           IF BIBREST=ON×AMBLLSR=ON THEN/* IF RESTART OR LSR      0236
*                                                            @Z30SSMD*/
@RF00234 L     @14,ACBAMBL(,RACB)                                  0236
         L     @05,AMBLBIB(,@14)                                   0236
         TM    BIBREST(@05),B'01000000'                            0236
         BO    @RT00236                                            0236
         TM    AMBLLSR(@14),B'00100000'                            0236
         BNO   @RF00236                                            0236
@RT00236 DS    0H                                                  0237
*             RETCODE=ZERO;         /* BYPASS FLUSH/QUIESCE PROCEDURE*/
         SLR   RETCODE,RETCODE                                     0237
*           ELSE                    /* OTHERWISE, NORMAL T-CLOSE     */
*             CALL FLQUIS;          /* COMPLETE I/O                  */
         B     @RC00236                                            0238
@RF00236 BAL   @14,FLQUIS                                          0238
*           IF RETCODE=ZERO THEN    /* NO I/O ERROR                  */
@RC00236 LTR   RETCODE,RETCODE                                     0239
         BNZ   @RF00239                                            0239
*             DO;                                                  0240
*               IF CLWPATH=ON THEN  /* IF PATH PROCESSING            */
         TM    CLWPATH(RCORE),B'00010000'                          0241
         BNO   @RF00241                                            0241
*                 CALL TCLSPATH;    /* TCLOSE PATH AIX               */
         BAL   @14,TCLSPATH                                        0242
*               CALL TCLSBASE;      /* TCLOSE BASE ESDS OR KSDS      */
@RF00241 BAL   @14,TCLSBASE                                        0243
*               IF BIBUPT^=ZERO THEN/* UPGRADE TABLE EXIST           */
         L     @14,ACBAMBL(,RACB)                                  0244
         L     @14,AMBLBIB(,@14)                                   0244
         L     @14,BIBUPT(,@14)                                    0244
         LTR   @14,@14                                             0244
         BZ    @RF00244                                            0244
*                 CALL TCLSUPGR;    /* TCLOSE UPGRADE AIX'S          */
         BAL   @14,TCLSUPGR                                        0245
*             END;                                                 0246
*           ELSE                    /* IF I/O ERROR EXIST            */
*             DO;                                                  0247
         B     @RC00239                                            0247
@RF00239 DS    0H                                                  0248
*               RESPECIFY                                          0248
*                 R1 RESTRICTED;                                   0248
*               PDPCODE=PP22;       /* SET I/O ERROR PROBLEM CODE    */
         MVI   PDPCODE+280(RCORE),X'16'                            0249
*               ACBERFLG=OPERR184;  /* SET ACB ERROR FLAG            */
         MVI   ACBERFLG(RACB),X'B8'                                0250
*               R1=MWACORAD;        /* POINT TO COMMON WORK AREA     */
         L     R1,MWACORAD                                         0251
*               RSTATRTN=IDAR192P;  /* NOTE CALL TO 192P             */
         MVC   RSTATRTN(4,RCORE),@CC03370                          0252
*               CALL IDA0192P;      /* CALL PROBLEM DETERMINATION    */
         L     @15,@CV03796                                        0253
         BALR  @14,@15                                             0253
*               RSTATRTN=IDAR231T;  /* NOTE 231T IN CONTROL          */
         MVC   RSTATRTN(4,RCORE),@CC03388                          0254
*               RESPECIFY                                          0255
*                 R1 UNRESTRICTED;                                 0255
*             END;                                                 0256
*           RESPECIFY                                              0257
*             RETCODE UNRESTRICTED;                                0257
@RC00239 DS    0H                                                  0258
*EXIT:                                                             0258
*           IF MWAENQFG=ON THEN     /* ENQ WAS ISSUED                */
EXIT     TM    MWAENQFG,B'10000000'                                0258
         BNO   @RF00258                                            0258
*             DO;                                                  0259
*               RESPECIFY                                          0260
*                 R1 RESTRICTED;                                   0260
*               R1=MWAENQPT+LENGTH(ENQTCB);/* POINT TO ENQ PARAMETER
*                                      LIST                          */
         LA    R1,4                                                0261
         AL    R1,MWAENQPT                                         0261
*               GEN(DEQ  MF=(E,(1)));/* ISSUE DEQ            @ZA10878*/
         DEQ  MF=(E,(1))
*               RESPECIFY                                          0263
*                 R1 UNRESTRICTED;                                 0263
*               MWADDRES=MWAENQPT;  /* GET ADDR OF ENQ/DEQ PARM LIST */
         L     @05,MWAENQPT                                        0264
         ST    @05,MWADDRES                                        0264
*               MWASPOOL=WKPOOL;    /* GET SUBPOOL NUMBER            */
         MVI   MWASPOOL,X'FC'                                      0265
*               MWABYTES=LENGTH(ENQTCB)+MWADSCNT*(LENGTH(ENQENTRY)+
*                   LENGTH(ENQRNAME));/* NUMBER OF BYTES TO BE FREED */
         L     @05,MWADSCNT                                        0266
         MH    @05,@CH01363                                        0266
         LA    @05,4(,@05)                                         0266
         STCM  @05,7,MWABYTES                                      0266
*               CALL FREECORE;      /* FREE ENQ/DEQ AND RNAME PARM 0267
*                                      LIST                          */
         BAL   @14,FREECORE                                        0267
*             END;                                                 0268
*           IF MWACLWID=ON THEN     /* ACB WORK AREA (CLW) EXIST     */
@RF00258 TM    MWACLWID,B'10000000'                                0269
         BNO   @RF00269                                            0269
*             DO;                                                  0270
*               MWADDRES=RCORE;     /* ADDRESS OF CLW TO BE FREED    */
         ST    RCORE,MWADDRES                                      0271
*               MWABYTES=LENGTH(IDACLWRK);/* SIZE OF ACB WORK AREA   */
         MVC   MWABYTES(3),@CF03190+1                              0272
*               MWASPOOL=WKPOOL;    /* SUBPOOL NUMBER                */
         MVI   MWASPOOL,X'FC'                                      0273
*               CALL FREECORE;      /* FREE ACB WORK AREA            */
         BAL   @14,FREECORE                                        0274
*             END;                                                 0275
*           RESPECIFY                                              0276
*            (R0,                                                  0276
*             R1) RESTRICTED;                                      0276
@RF00269 DS    0H                                                  0277
*           GEN(L R0,@SIZDATD);     /* CORE SIZE FOR AUTOMATICS      */
         L R0,@SIZDATD
*           R1=R13;                 /* ADDRESS OF MODULE WORK AREA   */
         LR    R1,R13                                              0278
*           R13=SABWRD;             /* GET ADDR OF PREVIOUS SAVE AREA*/
         L     R13,SABWRD(,R13)                                    0279
*           GEN(FREEMAIN R,LV=(0),A=(1));/* FREE MODULE WORK AREA    */
         FREEMAIN R,LV=(0),A=(1)
*           RESPECIFY                                              0281
*            (R0,                                                  0281
*             R1) UNRESTRICTED;                                    0281
*         END;                                                     0282
*     END;                          /*                       @ZA17534*/
@RF00229 DS    0H                                                  0284
*ENDLABEL:                                                         0284
*   ACBEXFG=ON;                     /* RESET ACB LOCK BIT TO OFF   0284
*                                      BIT'1'                        */
@RF00225 DS    0H                                                  0284
ENDLABEL DS    0H                                                  0285
*   ACBIOSFG=OFF;                   /* RESET ACB BUSY BIT            */
         OI    ACBEXFG(RACB),B'00000010'                           0285
         NI    ACBIOSFG(RACB),B'11111110'                          0285
*   LM(RET,R12,SAREGS);             /* RELOAD CALLERS REGISTERS      */
         LM    RET,R12,SAREGS(R13)                                 0286
*   GEN(RETURN);                    /* EXIT MODULE                   */
         RETURN
*INIT231T:                                                         0288
*                                                                  0288
*/********************************************************************/
*/*                                                                  */
*/*      01 FUNCTION - MODULE INITIALIZATION, BUILD MODULE WORK AREA */
*/*                    BUILD ACB WORK AREA AND CHECK DUMMY DEB       */
*/*      01 INPUTS -   1. COMMON WORK AREA                           */
*/*                    2. SIZE OF THE AUTOMATICS                     */
*/*      01 OUTPUTS -  1. DUMMY DEB CHECKED                          */
*/*                    2. MWA AND CLW BUILT                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0288
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0288
INIT231T DS    0H                                                  0289
*   RESPECIFY                                                      0289
*    (R11,                                                         0289
*     RET) RESTRICTED;                                             0289
*   R11=RET;                        /* SAVE RETURN ADDRESS           */
         LR    R11,RET                                             0290
*   RESPECIFY                                                      0291
*     RET UNRESTRICTED;                                            0291
*   IDAPDPRM=IDAPDPRM&&IDAPDPRM;    /* ZERO PROBLEM DETERMINATION  0292
*                                      PARAMETER LIST                */
         LA    @05,280                                             0292
         ALR   @05,RCORE                                           0292
         XC    IDAPDPRM(40,@05),IDAPDPRM(@05)                      0292
*   PDPCALL=PDPTCLOS;               /* IDENTIFY CALLER AS TCLOSE     */
         MVI   PDPCALL(@05),X'0C'                                  0293
*   PDPFUNC=PDF151;                 /* IDA0231T MODULE INITIALIZATION*/
         MVI   PDPFUNC(@05),X'97'                                  0294
*   PDPACB=DXUACBAD;                /* ADDRESS OF USER ACB           */
         L     @15,DXUACBAD-1(,RCORE)                              0295
         LA    @15,0(,@15)                                         0295
         ST    @15,PDPACB(,@05)                                    0295
*   PDPTIOT=TCBTIO+ACBTIOT;         /* POINT TO CORRECT TIOT ENTRY   */
         LH    @15,ACBTIOT(,RACB)                                  0296
         L     @14,PSATOLD                                         0296
         AL    @15,TCBTIO(,@14)                                    0296
         ST    @15,PDPTIOT(,@05)                                   0296
*   PDPDSTYP=PDPDDNM;               /* INDICATE DD DATA SET NAME USED*/
         MVI   PDPDSTYP(@05),X'01'                                 0297
*   PDPCLSNM=ADDR(JFCBDSNM);        /* SET CLUSTER NAME TO DD      0298
*                                      STATEMENT DATA SET NAME       */
         LA    @15,100                                             0298
         ALR   @15,RCORE                                           0298
         ST    @15,PDPCLSNM(,@05)                                  0298
*   PDPDSN=ZERO;                    /* SET DATA SET NAME ADDR TO ZERO*/
         SLR   @15,@15                                             0299
         ST    @15,PDPDSN(,@05)                                    0299
*   PDPCTACB=AMBLDTA->AMBCACB;      /* SET POINTER TO CATALOG ACB    */
         L     @01,ACBAMBL(,RACB)                                  0300
         L     @01,AMBLDTA(,@01)                                   0300
         L     @15,AMBCACB(,@01)                                   0300
         ST    @15,PDPCTACB(,@05)                                  0300
*/********************************************************************/
*/*           IDAGMAIN - GETS CORE STORAGE FOR AUTOMATICS.           */
*/*                      FOR VS2 IDAGMAIN WILL MOVE THE      @Z30SSRL*/
*/*                      ID AND DATE OF THE MODULE TO A      @Z30SSRL*/
*/*                      LOCATION DIRECTLY AFTER THE PLS     @Z30SSRL*/
*/*                      GENERATED SAVE AREA.                @Z30SSRL*/
*/*           DATE OF LAST CHANGE = 3 DECEMBER 74            @Z30SSRL*/
*/********************************************************************/
*                                                                  0301
*   GEN;                                                           0301
         L     @00,@SIZDATD             LOAD LENGTH OF AUTOMATICS
         GETMAIN RC,LV=(0),SP=0         ISSUE GETMAIN IN SUBPOOL ZERO
         LTR   @15,@15                  TEST RETURN CODE FOR ERROR
         BNZ   GMN00100                 BRANCH IF ERROR ENCOUNTERED
*                                       IF NO ERROR WAS ENCOUNTERED
         LR    @00,@01                  ADDRESS OF GOTTEN AREA IN R0
         LR    @14,@01                  SAVE THE ADDRESS IN REGISTER 14
         L     @01,@SIZDATD             LENGTH OF GOTTEN AREA
         MVCL  @00,@14                  ZERO THE GOTTEN AREA, R15=0
         LR    @15,@14                  ADDRESS OF AREA IN REGISTER 15
         ST    @15,8(,@13)              FORWARD CHAIN THIS SAVE AREA
         L     @01,@SIZDATD             LENGTH OF GOTTEN AREA
         ST    @01,88(,@15)             STORE LENGTH OF AREA
         LR    @14,@03                  LOAD BASE REGISTER OF MODULE
         LA    @01,23                   LOAD NEGATIVE OFFSET BYTE NO.
         SR    @14,@01                  NEGITIVE OFFSET 23 BYTES
         MVC   72(16,@15),0(@14)        GET MODULE NAME AND DATE
         B     GMN00200                 BYPASS SETTING ERROR
GMN00100 SR    @15,@15                  REGISTER 15 = 0 INDICATES ERROR
GMN00200 EQU   *                        R15 CONTAINS ADDRESS OR ZERO
*        REGISTER 15 CONTAINS EITHER THE ADDRESS OF GOTTEN CORE OR
*        ZERO IF THE GETMAIN WAS UNSUCCESSFUL.
*   RESPECIFY                                                      0302
*     RETCODE RESTRICTED;                                          0302
*   IF RETCODE=ZERO THEN            /* GETMAIN FAILED                */
         LTR   RETCODE,RETCODE                                     0303
         BNZ   @RF00303                                            0303
*     DO;                                                          0304
*       RESPECIFY                                                  0305
*         R1 RESTRICTED;                                           0305
*       PDPCODE=PP20;               /* SET PROBLEM CODE              */
         MVI   PDPCODE+280(RCORE),X'14'                            0306
*       ACBERFLG=OPERR136;          /* SET ACB ERROR FLAG            */
         MVI   ACBERFLG(RACB),X'88'                                0307
*       R1=RCORE;                   /* POINT TO COMMON WORK AREA     */
         LR    R1,RCORE                                            0308
*       RSTATRTN=IDAR192P;          /* NOTE CALL TO 192P             */
         MVC   RSTATRTN(4,RCORE),@CC03370                          0309
*       CALL IDA0192P;              /* CALL PROBLEM DETERMINATION    */
         L     @15,@CV03796                                        0310
         BALR  @14,@15                                             0310
*       RSTATRTN=IDAR231T;          /* NOTE 231T IN CONTROL          */
         MVC   RSTATRTN(4,RCORE),@CC03388                          0311
*       RETURN TO ENDLABEL;         /* GO TO ENDLABEL                */
         LA    @14,ENDLABEL                                        0312
@EL00002 DS    0H                                                  0312
@EF00002 DS    0H                                                  0312
@ER00002 BR    @14                                                 0312
*       RESPECIFY                                                  0313
*         R1 UNRESTRICTED;                                         0313
*     END;                                                         0314
*   RETCODE->SABWRD=R13;            /* STORE SAVEAREA ADDRESS IN MWA */
@RF00303 ST    R13,SABWRD(,RETCODE)                                0315
*   R13=RETCODE;                    /* ADDRESS OF MWA INTO REGISTER
*                                      13                            */
         LR    R13,RETCODE                                         0316
*   RESPECIFY                                                      0317
*     RETCODE UNRESTRICTED;                                        0317
*   GEN(USING @DATD,R13);           /* ESTABLISH ADDRESSABILITY      */
         USING @DATD,R13
*   MWARACB=RACB;                   /* MWA SAVE AREA FOR USER ACB  0319
*                                      ADDR                          */
         ST    RACB,MWARACB                                        0319
*   MWASAVEA=R11;                   /* SAVE RETURN ADDRESS IN MWA    */
         ST    R11,MWASAVEA                                        0320
*   RESPECIFY                                                      0321
*     R11 UNRESTRICTED;                                            0321
*   MWACORAD=RCORE;                 /* SAVE COMMON WORK AREA ADDRESS */
         ST    RCORE,MWACORAD                                      0322
*   RESPECIFY                                                      0323
*     FORCORE BASED(MWACORAD);      /* RE-BASE COMMON WORK AREA      */
*   MWABYTES=LENGTH(IDACLWRK);      /* NUMBER OF BYTES REQUIRED      */
         MVC   MWABYTES(3),@CF03190+1                              0324
*   MWASPOOL=WKPOOL;                /* SUBPOOL NUMBER                */
         MVI   MWASPOOL,X'FC'                                      0325
*   CALL GETCORE;                   /* BUILD ACB WORK AREA (CLW)     */
         BAL   @14,GETCORE                                         0326
*   RCORE=MWADDRES;                 /* CLW ADDRESS INTO RCORE        */
         L     RCORE,MWADDRES                                      0327
*   CLWCOMWK=MWACORAD;              /* SAVE COMMON WORK AREA ADDRESS */
         L     @11,MWACORAD                                        0328
         ST    @11,CLWCOMWK(,RCORE)                                0328
*   CLWID='IDACLWRK';               /* SET ACB WORK AREA ID  @Z30SSRL*/
         MVC   CLWID(8,RCORE),@CC03808                             0329
*   MWACLWID=ON;                    /* INDICATE CLW BUILD SUCCESSFUL */
         OI    MWACLWID,B'10000000'                                0330
*   RACB=DXPACBAD;                  /* PT TO COPIED ACB FOR        0331
*                                      PROCESSING                    */
         L     RACB,DXPACBAD-1(,@11)                               0331
         LA    RACB,0(,RACB)                                       0331
*   RFY                                                            0332
*     R1 RSTD;                      /* USED IN DEBCHK                */
*   R1=DXUACBAD;                    /* LOAD ACB ADDRESS              */
         L     R1,DXUACBAD-1(,@11)                                 0333
         LA    R1,0(,R1)                                           0333
*   GEN(DEBCHK (1),TYPE=VERIFY,AM=VSAM);/* VERIFY DUMMY DEB          */
         DEBCHK (1),TYPE=VERIFY,AM=VSAM
*   RFY                                                            0335
*     R1 UNRSTD;                                                   0335
*   ACBERFLG=ZERO;                  /* ZERO ACB ERROR FLAG   @Z30SSRL*/
         MVI   ACBERFLG(RACB),X'00'                                0336
*   IF AMBLPATH=ON THEN             /* IF PATH PROCESSING    @ZA17534*/
         L     @11,ACBAMBL(,RACB)                                  0337
         TM    AMBLPATH(@11),B'10000000'                           0337
         BNO   @RF00337                                            0337
*     CLWPATH=ON;                   /* INDICATE PATH PROCESSING      */
         OI    CLWPATH(RCORE),B'00010000'                          0338
*   CALL ENQFUNC;                   /* ISSUE ENQ BUSY FOR DATA SETS  */
@RF00337 BAL   @14,ENQFUNC                                         0339
*   RESPECIFY                                                      0340
*     RET RESTRICTED;                                              0340
*   RET=MWASAVEA;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVEA                                        0341
*   RESPECIFY                                                      0342
*     RET UNRESTRICTED;                                            0342
*   END INIT231T;                                                  0343
         B     @EL00002                                            0343
*ENQFUNC:                                                          0344
*                                                                  0344
*/********************************************************************/
*/*                                                                  */
*/*      01   FUNCTION-BUILD ENQ PARAMETER LIST AND ISSUE BUSY ENQ'S */
*/*      01   INPUTS-  1. POINTER TO AMBL IN ACBAMBL                 */
*/*      01   OUTPUTS- 1. ENQ ALL DATA SETS CONNECTED TO USER ACB    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0344
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0344
ENQFUNC  DS    0H                                                  0345
*   RESPECIFY                                                      0345
*     IDAAMBL BASED(MWAMBLPT);      /* RE-BASE AMBL ON POINTER IN MWA*/
*   RESPECIFY                                                      0346
*     RET RESTRICTED;                                              0346
*   MWASAVEB=RET;                   /* SAVE RETURN ADDRESS OF CALLER */
         ST    RET,MWASAVEB                                        0347
*   RESPECIFY                                                      0348
*     RET UNRESTRICTED;                                            0348
*   MWAMBLPT=ACBAMBL;               /* GET AMBL POINTED TO BY USER 0349
*                                      ACB                           */
         L     MWAMBLPT,ACBAMBL(,RACB)                             0349
*   MWADSCNT=ZERO;                  /* TOTAL COUNT OF DATA SETS      */
         SLR   @11,@11                                             0350
         ST    @11,MWADSCNT                                        0350
*   MWAQNAME='SYSVSAM ';            /* INITIALIZE THE QNAME          */
         MVC   MWAQNAME(8),@CC03814                                0351
*   IF AMBLPATH=ON THEN             /* IF THIS IS A PATH AMBL        */
         TM    AMBLPATH(MWAMBLPT),B'10000000'                      0352
         BNO   @RF00352                                            0352
*     DO;                                                          0353
*       MWADSCNT=MWADSCNT+TWO;      /* TOTAL DATA SET COUNT          */
         AL    @11,@CF00070                                        0354
         ST    @11,MWADSCNT                                        0354
*       CLWPATH=ON;                 /* INDICATE PATH PROCESSING IN 0355
*                                      CLW                           */
         OI    CLWPATH(RCORE),B'00010000'                          0355
*       MWAPAMBL=MWAMBLPT;          /* SAVE ADDR OF PATH AMBL      0356
*                                                            @Z30SSRL*/
         LR    MWAPAMBL,MWAMBLPT                                   0356
*       MWAMBLPT=AMBLXPT;           /* POINT TO BASE DATA SET AMBL   */
         L     MWAMBLPT,AMBLXPT(,MWAMBLPT)                         0357
*     END;                                                         0358
*   IF BIBUPT^=ZERO THEN            /* UPT EXIST                     */
@RF00352 L     @11,AMBLBIB(,MWAMBLPT)                              0359
         L     @11,BIBUPT(,@11)                                    0359
         LTR   @11,@11                                             0359
         BZ    @RF00359                                            0359
*     MWADSCNT=MWADSCNT+UPTNOENT*TWO;/* INCREMENT TOTAL COUNT BY   0360
*                                      NUMBER OF UPGRADE DATA SETS   */
         SLR   @09,@09                                             0360
         IC    @09,UPTNOENT(,@11)                                  0360
         ALR   @09,@09                                             0360
         AL    @09,MWADSCNT                                        0360
         ST    @09,MWADSCNT                                        0360
*   IF AMBLIX=ZERO THEN             /* IF ESDS                       */
@RF00359 L     @11,AMBLIX(,MWAMBLPT)                               0361
         LTR   @11,@11                                             0361
         BNZ   @RF00361                                            0361
*     MWADSCNT=MWADSCNT+ONE;        /* INCREMENT DATA SET COUNT BY 0362
*                                      ONE                           */
         LA    @11,1                                               0362
         AL    @11,MWADSCNT                                        0362
         ST    @11,MWADSCNT                                        0362
*   ELSE                            /* IF KSDS                       */
*     MWADSCNT=MWADSCNT+TWO;        /* INCREMENT DATA SET COUNT BY 0363
*                                      TWO                           */
         B     @RC00361                                            0363
@RF00361 LA    @11,2                                               0363
         AL    @11,MWADSCNT                                        0363
         ST    @11,MWADSCNT                                        0363
*   MWAMBLPT=ACBAMBL;               /* AMBL POINTED TO BY USER ACB   */
@RC00361 L     MWAMBLPT,ACBAMBL(,RACB)                             0364
*   MWABYTES=LENGTH(ENQTCB)+MWADSCNT*(LENGTH(ENQENTRY)+LENGTH(ENQRNAME)
*       );                          /* BYTES REQUIRED FOR ENQ      0365
*                                      PARAMETER LIST AND RNAME LIST */
         L     @11,MWADSCNT                                        0365
         MH    @11,@CH01363                                        0365
         LA    @11,4(,@11)                                         0365
         STCM  @11,7,MWABYTES                                      0365
*   MWASPOOL=WKPOOL;                /* SUBPOOL NUMBER                */
         MVI   MWASPOOL,X'FC'                                      0366
*   CALL GETCORE;                   /* GETMAIN FOR ENQ PARAMETER LIST*/
         BAL   @14,GETCORE                                         0367
*   MWAENQFG=ON;                    /* INDICATE ENQ PARAMETER LIST 0368
*                                      BUILT                         */
         OI    MWAENQFG,B'10000000'                                0368
*   MWAENQPT=MWADDRES;              /* ADDRESSABILITY FOR ENQ PARM 0369
*                                      LIST                          */
         L     @11,MWADDRES                                        0369
         ST    @11,MWAENQPT                                        0369
*   MWARNPTR=MWADDRES+LENGTH(ENQPARML)+MWADSCNT*(LENGTH(ENQENTRY));/*
*                                      ADDRESSING FOR RNAME LIST     */
         AL    @11,@CF00107                                        0370
         L     MWARNPTR,MWADSCNT                                   0370
         MH    MWARNPTR,@CH00258                                   0370
         ALR   @11,MWARNPTR                                        0370
         LR    MWARNPTR,@11                                        0370
*   CALL ENQINIT;                   /* INITIALIZE ENQ PARAMETER LIST */
         BAL   @14,ENQINIT                                         0371
*   RESPECIFY                                                      0372
*     R1 RESTRICTED;                                               0372
*   R1=MWAENQPT+LENGTH(ENQTCB);     /* POINT TO ENQ PARAMETER LIST   */
         LA    R1,4                                                0373
         AL    R1,MWAENQPT                                         0373
*   GEN(ENQ   MF=(E,(1)));          /* ISSUE ENQ             @ZA10878*/
         ENQ   MF=(E,(1))
*   RESPECIFY                                                      0375
*     RET RESTRICTED;                                              0375
*   RET=MWASAVEB;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVEB                                        0376
*   RESPECIFY                                                      0377
*    (R1,                                                          0377
*     RET) UNRESTRICTED;                                           0377
*   END ENQFUNC;                                                   0378
@EL00003 DS    0H                                                  0378
@EF00003 DS    0H                                                  0378
@ER00003 BR    @14                                                 0378
*ENQINIT:                                                          0379
*                                                                  0379
*/********************************************************************/
*/*                                                                  */
*/*      01   FUNCTION-INITIALIZE ENQ PARAMETER LIST FOR ALL THE     */
*/*                    DATA SETS                                     */
*/*      01   INPUTS-  1. POINTER TO AMBL IN ACBAMBL                 */
*/*      01   OUTPUTS- 1. ENQ PARAMETER LIST INITIALIZED             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0379
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0379
ENQINIT  DS    0H                                                  0380
*   RESPECIFY                                                      0380
*     RET RESTRICTED;                                              0380
*   MWASAVEC=RET;                   /* SAVE CALLER RETURN ADDRESS    */
         LR    MWASAVEC,RET                                        0381
*   RESPECIFY                                                      0382
*     RET UNRESTRICTED;                                            0382
*   MWAEQIDX=ONE;                   /* INDEX FOR ENQ PARAMETER LIST  */
         LA    MWAEQIDX,1                                          0383
*   IF CLWPATH=ON THEN              /* IF PATH PROCESSING            */
         TM    CLWPATH(RCORE),B'00010000'                          0384
         BNO   @RF00384                                            0384
*     DO;                           /* INITIALIZE PATH CI'S IN ENQ 0385
*                                      PARAMETER LIST                */
*       MWAAMBPT=AMBLDTA;           /* POINT TO DATA AMB OF PATH AMBL*/
         L     MWAAMBPT,AMBLDTA(,MWAMBLPT)                         0386
*       CALL PARMINIT;              /* INITIALIZE RNAME OF DATA DS IN
*                                      ENQ PARAMETER LIST            */
         BAL   @14,PARMINIT                                        0387
*       MWAAMBPT=AMBLIX;            /* POINT TO INDEX AMB OF PATH  0388
*                                      AMBL                          */
         L     MWAAMBPT,AMBLIX(,MWAMBLPT)                          0388
*       CALL PARMINIT;              /* INITIALIZE RNAME OF INDEX DS
*                                      IN ENQ PARAMETER LIST         */
         BAL   @14,PARMINIT                                        0389
*       MWAMBLPT=AMBLXPT;           /* POINT TO BASE AMBL            */
         L     MWAMBLPT,AMBLXPT(,MWAMBLPT)                         0390
*     END;                                                         0391
*   IF AMBLIX^=ZERO THEN            /* IF BASE INDEX DS EXIST (KSDS) */
@RF00384 L     @09,AMBLIX(,MWAMBLPT)                               0392
         LTR   @09,@09                                             0392
         BZ    @RF00392                                            0392
*     DO;                                                          0393
*       MWAAMBPT=AMBLIX;            /* POINT TO INDEX AMB OF BASE  0394
*                                      AMBL                          */
         L     @07,AMBLIX(,MWAMBLPT)                               0394
         LR    MWAAMBPT,@07                                        0394
*       CALL PARMINIT;              /* INIT RNAME IN ENQ PARM LIST   */
         BAL   @14,PARMINIT                                        0395
*     END;                                                         0396
*   MWAAMBPT=AMBLDTA;               /* POINT TO DATA AMB OF BASE AMBL*/
@RF00392 L     MWAAMBPT,AMBLDTA(,MWAMBLPT)                         0397
*   CALL PARMINIT;                  /* PERFORM RNAME INITIALIZATION  */
         BAL   @14,PARMINIT                                        0398
*   IF BIBUPT^=ZERO THEN            /* UPT EXIST                     */
         L     @09,AMBLBIB(,MWAMBLPT)                              0399
         L     @09,BIBUPT(,@09)                                    0399
         LTR   @09,@09                                             0399
         BZ    @RF00399                                            0399
*     DO MWAINDEX=1 TO UPTNOENT;    /* LOOP THRUGH UPT               */
         LA    @09,1                                               0400
         B     @DE00400                                            0400
@DL00400 DS    0H                                                  0401
*       IF UPTF1NOP(MWAINDEX)=OFF THEN/* IF VALID ENTRY      @Z30SSRL*/
         MH    @09,@CH00258                                        0401
         L     @07,AMBLBIB(,MWAMBLPT)                              0401
         L     @07,BIBUPT(,@07)                                    0401
         ST    @09,@TF00001                                        0401
         ALR   @09,@07                                             0401
         TM    UPTF1NOP-12(@09),B'00010000'                        0401
         BNZ   @RF00401                                            0401
*         DO;                       /*                       @Z30SSRL*/
*           MWAMBLPT=UPTRPL(MWAINDEX)->RPLDACB->ACBAMBL;/* U-RPL TO
*                                      U-ACB TO U-AMBL               */
         L     @09,@TF00001                                        0403
         L     @09,UPTRPL-12(@09,@07)                              0403
         L     @09,RPLDACB(,@09)                                   0403
         L     @09,ACBAMBL(,@09)                                   0403
         LR    MWAMBLPT,@09                                        0403
*           IF MWAPAMBL=ZERO×       /* IF PATH AMBL DOES NOT EXIST OR
*                                                            @Z30SSRL*/
*               AMBLDTA^=MWAPAMBL->AMBLDTA THEN/* NOT PATH THROUGH 0404
*                                      UPGRADE               @Z30SSRL*/
         LTR   MWAPAMBL,MWAPAMBL                                   0404
         BZ    @RT00404                                            0404
         CLC   AMBLDTA(4,MWAMBLPT),AMBLDTA(MWAPAMBL)               0404
         BE    @RF00404                                            0404
@RT00404 DS    0H                                                  0405
*             DO;                   /*                       @Z30SSRL*/
*               MWAAMBPT=AMBLIX;    /* GET INDEX AMB OF UPGRADE DS   */
         L     MWAAMBPT,AMBLIX(,MWAMBLPT)                          0406
*               CALL PARMINIT;      /* INITIALIZE ENQ RNAME          */
         BAL   @14,PARMINIT                                        0407
*               MWAAMBPT=AMBLDTA;   /* GET DATA AMB OF UPGRADE DS    */
         L     MWAAMBPT,AMBLDTA(,MWAMBLPT)                         0408
*               CALL PARMINIT;      /* INITIALIZE ENQ RNAME          */
         BAL   @14,PARMINIT                                        0409
*             END;                  /*                       @Z30SSRL*/
*         END;                      /*                       @Z30SSRL*/
@RF00404 DS    0H                                                  0412
*     END;                                                         0412
@RF00401 LA    @09,1                                               0412
         AL    @09,MWAINDEX                                        0412
@DE00400 ST    @09,MWAINDEX                                        0412
         L     @07,AMBLBIB(,MWAMBLPT)                              0412
         L     @07,BIBUPT(,@07)                                    0412
         SLR   @15,@15                                             0412
         IC    @15,UPTNOENT(,@07)                                  0412
         CR    @09,@15                                             0412
         BNH   @DL00400                                            0412
*   ENQEND(MWAEQIDX-ONE)=ON;        /* INDICATE LAST ENTRY IN ENQ  0413
*                                      LIST                  @Z30SSRL*/
@RF00399 LR    @10,MWAEQIDX                                        0413
         MH    @10,@CH00258                                        0413
         L     @01,MWAENQPT                                        0413
         ALR   @01,@10                                             0413
         AL    @01,@CF03851                                        0413
         OI    ENQEND-4(@01),B'10000000'                           0413
*   RESPECIFY                                                      0414
*     IDAAMBL BASED(ACBAMBL);       /* REBASE AMBL ON ACB    @Z30SSRL*/
*   RESPECIFY                                                      0415
*     RET RESTRICTED;                                              0415
*   RET=MWASAVEC;                   /* GET RETURN ADDRESS            */
         LR    RET,MWASAVEC                                        0416
*   RESPECIFY                                                      0417
*     RET UNRESTRICTED;                                            0417
*   END ENQINIT;                                                   0418
@EL00004 DS    0H                                                  0418
@EF00004 DS    0H                                                  0418
@ER00004 BR    @14                                                 0418
*PARMINIT:                                                         0419
*                                                                  0419
*/********************************************************************/
*/*                                                                  */
*/*      01   FUNCTION-INITIALIZE RNAME LIST FOR EACH AMB            */
*/*      01   INPUTS-  1. POINTER TO AMB IN MWAAMBPT                 */
*/*      01   OUTPUTS- 1. RNAME LIST IS INITIALIZED                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0419
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0419
PARMINIT DS    0H                                                  0420
*   RESPECIFY                                                      0420
*     RET RESTRICTED;                                              0420
*   MWASAVED=RET;                   /* SAVE CALLER RETURN ADDR       */
         ST    RET,MWASAVED                                        0421
*   RESPECIFY                                                      0422
*     RET UNRESTRICTED;                                            0422
*   ENQRNCI(MWAEQIDX)=AMBDDSN;      /* PUT CI NUMBER INTO RNAME      */
         LR    @15,MWAEQIDX                                        0423
         SLA   @15,3                                               0423
         ST    @15,@TF00001                                        0423
         ALR   @15,MWARNPTR                                        0423
         AL    @15,@CF03852                                        0423
         MVC   ENQRNCI(3,@15),AMBDDSN(MWAAMBPT)                    0423
*   ENQRNACB(MWAEQIDX)=AMBCACB;     /* PUT ACB ADDRESS INTO RNAME    */
         L     @15,AMBCACB(,MWAAMBPT)                              0424
         LR    @14,MWARNPTR                                        0424
         AL    @14,@TF00001                                        0424
         AL    @14,@CF03853                                        0424
         STCM  @15,15,ENQRNACB-3(@14)                              0424
*   ENQRNIND(MWAEQIDX)='B';         /* SET RNAME INDICATOR BYTE      */
         LR    @09,MWARNPTR                                        0425
         AL    @09,@TF00001                                        0425
         BCTR  @09,0                                               0425
         MVI   ENQRNIND-7(@09),C'B'                                0425
*   ENQRNADR(MWAEQIDX)=ADDR(ENQRNAME(MWAEQIDX));/* RNAME ADDRESS     */
         L     @09,MWAENQPT                                        0426
         LR    @15,MWAEQIDX                                        0426
         MH    @15,@CH00258                                        0426
         L     @01,@TF00001                                        0426
         AL    @01,@CF03852                                        0426
         LA    @14,ENQRNAME(@01,MWARNPTR)                          0426
         ST    @14,ENQRNADR-12(@15,@09)                            0426
*   ENQQNADR(MWAEQIDX)=ADDR(MWAQNAME);/* GET QNAME ADDRESS           */
         LA    @14,MWAQNAME                                        0427
         LA    @01,0(@15,@09)                                      0427
         AL    @01,@CF03854                                        0427
         ST    @14,ENQQNADR-8(,@01)                                0427
*   ENQRLEN(MWAEQIDX)=LENGTH(ENQRNAME(MWAEQIDX));/* GET RNAME LENGTH */
         LA    @14,8                                               0428
         LA    @01,0(@15,@09)                                      0428
         AL    @01,@CF03855                                        0428
         STC   @14,ENQRLEN-5(,@01)                                 0428
*   ENQSHR(MWAEQIDX)=OFF;           /* SET EXCLUSIVE         @ZA10878*/
*   ENQSYSTM(MWAEQIDX)=ON;          /* SET SYSTEM            @ZA10878*/
         ALR   @09,@15                                             0430
         AL    @09,@CF03856                                        0430
         OI    ENQSYSTM-6(@09),B'01000000'                         0430
         NI    ENQSHR-6(@09),B'01111111'                           0430
*   MWAENQLP=MWAEQIDX-1;            /* SETUP LOOP CONTROL    @ZA10878*/
         LR    MWAENQLP,MWAEQIDX                                   0431
         BCTR  MWAENQLP,0                                          0431
*   DO MWAENQLP=MWAENQLP TO 1 BY-1  /* CHECK ALL ENTRIES     @ZA10878*/
*         WHILE ENQRNAME(MWAENQLP)^=ENQRNAME(MWAEQIDX);/* FOR DUPS   */
         B     @DE00432                                            0432
@DL00432 LR    @09,MWAENQLP                                        0432
         SLA   @09,3                                               0432
         LR    @15,MWAEQIDX                                        0432
         SLA   @15,3                                               0432
         ALR   @09,MWARNPTR                                        0432
         AL    @09,@CF03852                                        0432
         ALR   @15,MWARNPTR                                        0432
         AL    @15,@CF03852                                        0432
         CLC   ENQRNAME(8,@09),ENQRNAME(@15)                       0432
         BE    @DC00432                                            0432
*   END;                            /*                       @ZA10878*/
         BCTR  MWAENQLP,0                                          0433
@DE00432 LTR   MWAENQLP,MWAENQLP                                   0433
         BP    @DL00432                                            0433
@DC00432 DS    0H                                                  0434
*   IF MWAENQLP=0 THEN              /* IF NO DUPLICATES      @ZA10878*/
         LTR   MWAENQLP,MWAENQLP                                   0434
         BNZ   @RF00434                                            0434
*     MWAEQIDX=MWAEQIDX+ONE;        /* PREPARE FOR NEXT ENTRY        */
         AL    MWAEQIDX,@CF00064                                   0435
*   RESPECIFY                                                      0436
*     RET RESTRICTED;                                              0436
@RF00434 DS    0H                                                  0437
*   RET=MWASAVED;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVED                                        0437
*   RESPECIFY                                                      0438
*     RET UNRESTRICTED;                                            0438
*   END PARMINIT;                                                  0439
@EL00005 DS    0H                                                  0439
@EF00005 DS    0H                                                  0439
@ER00005 BR    @14                                                 0439
*FLQUIS:                                                           0440
*                                                                  0440
*/********************************************************************/
*/*                                                                  */
*/*      01   FUNCTION-WRITE OUT ANY OUTPUT BUFFERS TO STORAGE       */
*/*                    THAT HAVEN'T BEEN WRITTEN AND WAIT FOR        */
*/*                    COMPLETION OF ANY ASYNCHRONOUS REQUESTS THAT  */
*/*                    THE USER DIDN'T CHECK BEFORE CLOSING          */
*/*      01   INPUTS-  1. KEY LENGTH FROM AMDSB                      */
*/*                    2. NUMBER OF PLH'S FROM PLHDR                 */
*/*                    3. POINTER TO DATA AMB IN MWAAMBPT            */
*/*      01   OUTPUTS- 1. BUFFERS FLUSHED. IF THE DATA SET IS CBIC   */
*/*                    THE DUMMY RPL AND SAVE AREA ARE OBTAINED IN   */
*/*                    SUBPOOL 241                           @ZA16012*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0440
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0440
FLQUIS   DS    0H                                                  0441
*   RESPECIFY                                                      0441
*     RET RESTRICTED;                                              0441
*   MWASAVEA=RET;                   /* SAVE RETURN ADDRESS           */
         ST    RET,MWASAVEA                                        0442
*   RESPECIFY                                                      0443
*     RET UNRESTRICTED;                                            0443
*   PDPFUNC=PDF153;                 /* SET FUNCTION CODE             */
         L     @08,MWACORAD                                        0444
         MVI   PDPFUNC+280(@08),X'99'                              0444
*   MWAAMBPT=AMBLDTA;               /* POINT TO DATA AMB             */
         L     @05,ACBAMBL(,RACB)                                  0445
         L     MWAAMBPT,AMBLDTA(,@05)                              0445
*   MWABYTES=LENGTH(IFGRPL)+LENGTH(MWAFLQSA);/* BUILD DUMMY RPL AND
*                                      REGISTER SAVE AREA            */
         MVC   MWABYTES(3),@CF03419+1                              0446
*   IF AMBLCBIC=ON THEN             /* CBIC PROCESSING       @ZA16012*/
         TM    AMBLCBIC(@05),B'10000000'                           0447
         BNO   @RF00447                                            0447
*     DO;                           /* YES                   @ZA16012*/
*       MWAFRKEY=DXUKEY;            /* SET STORAGE TO CBIC         0449
*                                      KEY@ZA16012                   */
         MVC   MWAFRKEY(1),DXUKEY(@08)                             0449
*       MWASPOOL=GSRSPOOL;          /* USE A CBIC SUBPOOL    @ZA16012*/
         MVI   MWASPOOL,X'F1'                                      0450
*     END;                          /*                       @ZA16012*/
*   ELSE                            /* NOT CBIC PROCESSING   @ZA16012*/
*     MWASPOOL=USERPOOL;            /* UNPROTECTED SUBPOOL FOR     0452
*                                      PROBLEM PROGRAM STATE         */
         B     @RC00447                                            0452
@RF00447 MVI   MWASPOOL,X'FA'                                      0452
*   CALL GETCORE;                   /* BUILD DUMMY RPL               */
@RC00447 BAL   @14,GETCORE                                         0453
*   MWARPLPT=MWADDRES+LENGTH(MWAFLQSA);/* ADDRESSIBILITY FOR RPL     */
         LA    @08,72                                              0454
         AL    @08,MWADDRES                                        0454
         ST    @08,MWARPLPT                                        0454
*   RPLPOST=ON;                     /* INDICATE POST                 */
         OI    RPLPOST(@08),B'01000000'                            0455
*   MWAPLHDR=AMBPH;                 /* POINT TO PLH HEADER           */
         L     @08,AMBPH(,MWAAMBPT)                                0456
         ST    @08,MWAPLHDR                                        0456
*   MWAPLHPT=MWAPLHDR+LENGTH(IDAPLHDR);/* POINT TO FIRST PLH ENTRY   */
         AL    @08,@CF00132                                        0457
         ST    @08,MWAPLHPT                                        0457
*   MWARETCD=ZERO;                  /* INITIALIZE RETURN CODE TO ZERO*/
         SLR   @05,@05                                             0458
         ST    @05,MWARETCD                                        0458
*   DO MWAINDEX=1 TO PLHCNT WHILE MWARETCD=0;/* LOOP THRUGH PLH'S    */
         LA    @05,1                                               0459
         B     @DE00459                                            0459
@DL00459 L     @05,MWARETCD                                        0459
         LTR   @05,@05                                             0459
         BNZ   @DC00459                                            0459
*     IF PLHAVL^='00'X&             /* IF PLH IS ACTIVE AND          */
*         (PLHACB=DXUACBAD×         /* ACB MATCHES USER ACB  @ZA30775*/
*         BIBCKPT=ON) THEN          /* OR CHECKPOINT WAS INDICATED   */
         L     @05,MWAPLHPT                                        0460
         CLI   PLHAVL(@05),X'00'                                   0460
         BE    @RF00460                                            0460
         L     @05,PLHACB(,@05)                                    0460
         L     @01,MWACORAD                                        0460
         L     @15,DXUACBAD-1(,@01)                                0460
         LA    @15,0(,@15)                                         0460
         CR    @05,@15                                             0460
         BE    @RT00460                                            0460
         L     @05,ACBAMBL(,RACB)                                  0460
         L     @05,AMBLBIB(,@05)                                   0460
         TM    BIBCKPT(@05),B'00100000'                            0460
         BNO   @RF00460                                            0460
@RT00460 DS    0H                                                  0461
*       DO;                                                        0461
*         RPLDACB=PLHCRPL->RPLDACB; /* GET ACB ADDRESS               */
         L     @05,MWARPLPT                                        0462
         L     @15,MWAPLHPT                                        0462
         L     @14,PLHCRPL(,@15)                                   0462
         L     @11,RPLDACB(,@14)                                   0462
         ST    @11,RPLDACB(,@05)                                   0462
*         MWAMRPL=PLHMRPL;          /* SAVE POINTER TO HEADER RPL    */
         L     @11,PLHMRPL(,@15)                                   0463
         ST    @11,MWAMRPL                                         0463
*         MWACRPL=PLHCRPL;          /* SAVE POINTER TO CURRENT RPL   */
         ST    @14,MWACRPL                                         0464
*         RPLPLHPT=MWAPLHPT;        /* POINT RPL TO PLH              */
         ST    @15,RPLPLHPT(,@05)                                  0465
*         RPLSTRID=MWAINDEX-ONE;    /* SET RPL STRING ID TO RELATIVE
*                                      POSITION OF PLH ENTRY         */
         L     @15,MWAINDEX                                        0466
         BCTR  @15,0                                               0466
         STH   @15,RPLSTRID(,@05)                                  0466
*         STM(RACB,R13,XRBESA);     /* SAVE REGISTERS                */
         L     @01,PSATOLD                                         0467
         L     @01,TCBRBP(,@01)                                    0467
         STM   RACB,R13,XRBESA(@01)                                0467
*         RESPECIFY                                                0468
*          (R0,                                                    0468
*           R1,                                                    0468
*           R6) RESTRICTED;                                        0468
*         R1=MWARPLPT;              /* POINT TO RPL                  */
         LR    R1,@05                                              0469
*         R0=RPLFRCIO;              /* INDICATE FLUSH I/O            */
         LA    R0,10                                               0470
*         R6=R13;                   /* COPY WORK AREA POINTER        */
         LR    R6,R13                                              0471
*         GEN(DROP R13);                                           0472
         DROP R13
*         GEN(USING @DATD,R6);      /* USE REGISTER 6 AS A DATA REG  */
         USING @DATD,R6
*         R13=MWADDRES;             /* POINT TO SAVE AREA            */
         L     R13,MWADDRES                                        0474
*         RESPECIFY                                                0475
*           R15 RESTRICTED;                                        0475
*         R15=BIBINTRF;             /* GET ADDRESS OF IDA019L1       */
         L     @07,ACBAMBL(,RACB)                                  0476
         L     @05,AMBLBIB(,@07)                                   0476
         L     R15,BIBINTRF(,@05)                                  0476
*         R6=ADDR(RBGRS2);          /* POINT TO USER REGISTER SAVE 0477
*                                      AREA                          */
         L     @14,PSATOLD                                         0477
         L     R6,TCBRBP(,@14)                                     0477
         LA    R6,RBGRS2(,R6)                                      0477
*         IF AMBLCBIC=ON THEN       /* CBIC DATA SET         @ZA16012*/
         TM    AMBLCBIC(@07),B'10000000'                           0478
         BNO   @RF00478                                            0478
*           DO;                     /* YES                   @ZA16012*/
*             RFY                                                  0480
*               RET RSTD;           /*                       @ZA16012*/
*             RET=DXUKEY;           /* LOAD CBIC USER KEY    @ZA16012*/
         L     @07,MWACORAD                                        0481
         SLR   RET,RET                                             0481
         IC    RET,DXUKEY(,@07)                                    0481
*             SPKA(RET);            /* MODESET TO CBIC USER        0482
*                                      KEY@ZA16012                   */
         SPKA  0(RET)                                              0482
*             RFY                                                  0483
*               RET UNRSTD;         /*                       @ZA16012*/
*             GEN(LM RACB,R12,0(R6));/* RESTORE USERS REGS   @ZA16012*/
         LM RACB,R12,0(R6)
*             GEN(BALR RET,R15);    /* STAY IN SUPERVISOR          0485
*                                      STATE@ZA16012                 */
         BALR RET,R15
*             GEN(MODESET EXTKEY=ZERO);/* FORCE KEY ZERO     @ZA16012*/
         MODESET EXTKEY=ZERO
*             GEN(DROP RBASEA);     /* DROP PERMANENT BASE   @ZA16012*/
         DROP RBASEA
*             GEN(BALR RET,0);      /* ESTABLISH                   0488
*                                      ADDRESSABILITY@ZA16012        */
         BALR RET,0
*             GEN(USING *,RET);     /* SET UP TEMPORARY BASE @ZA16012*/
         USING *,RET
*           END;                    /*                       @ZA16012*/
*         ELSE                      /* NOT CBIC DATA SET     @ZA16012*/
*           DO;                     /*                       @ZA16012*/
         B     @RC00478                                            0491
@RF00478 DS    0H                                                  0492
*             GEN(DROP RET);        /* DROP TEMPORARY BASE   @ZA16012*/
         DROP RET
*             GEN(USING @PSTART,RBASEA);/* REESTABLISH BASE REG    0493
*                                                            @ZA16012*/
         USING @PSTART,RBASEA
*             GEN(LM RACB,R12,0(R6));/* RESTORE USER'S REGISTER      */
         LM RACB,R12,0(R6)
*             GEN(SYNCH (15));      /* CHANGE TO PROBLEM PROGRAM   0495
*                                      STATE                         */
         SYNCH (15)
*           END;                    /*                       @ZA16012*/
*         LM(RACB,R13,XRBESA);      /* RESTORE REGISTERS             */
@RC00478 L     @14,PSATOLD                                         0497
         L     @14,TCBRBP(,@14)                                    0497
         LM    RACB,R13,XRBESA(@14)                                0497
*         GEN(DROP R6);             /* DROP REGISTER 6 AS A DATA REG */
         DROP R6
*         GEN(USING @DATD,R13);     /* USE REGISTER 13 AS DATA REG   */
         USING @DATD,R13
*         MWARETCD=RETCODE;         /* SAVE RETURN CODE              */
         ST    RETCODE,MWARETCD                                    0500
*         RESPECIFY                                                0501
*          (R0,                                                    0501
*           R1,                                                    0501
*           R6,                                                    0501
*           R15) UNRESTRICTED;                                     0501
*         PLHMRPL=MWAMRPL;          /* RESTORE POINTER TO HEADER RPL */
         L     @05,MWAPLHPT                                        0502
         L     @15,MWAMRPL                                         0502
         ST    @15,PLHMRPL(,@05)                                   0502
*         PLHCRPL=MWACRPL;          /* RESTORE POINTER TO CURRENT RPL*/
         L     @15,MWACRPL                                         0503
         ST    @15,PLHCRPL(,@05)                                   0503
*       END;                                                       0504
*     MWAPLHPT=PLHCHAIN;            /* POINT TO NEXT PLH ENTRY       */
@RF00460 L     @05,MWAPLHPT                                        0505
         L     @05,PLHCHAIN(,@05)                                  0505
         ST    @05,MWAPLHPT                                        0505
*   END;                                                           0506
         LA    @05,1                                               0506
         AL    @05,MWAINDEX                                        0506
@DE00459 ST    @05,MWAINDEX                                        0506
         L     @01,MWAPLHDR                                        0506
         SLR   @00,@00                                             0506
         IC    @00,PLHCNT(,@01)                                    0506
         CR    @05,@00                                             0506
         BNH   @DL00459                                            0506
@DC00459 DS    0H                                                  0507
*   IF AMBLCBIC=ON THEN             /* CBIC DATA SET         @ZA16012*/
         L     @05,ACBAMBL(,RACB)                                  0507
         TM    AMBLCBIC(@05),B'10000000'                           0507
         BNO   @RF00507                                            0507
*     DO;                           /* YES                   @ZA16012*/
*       MWAFRKEY=DXUKEY;            /* SET STORAGE TO CBIC         0509
*                                      KEY@ZA16012                   */
         L     @05,MWACORAD                                        0509
         MVC   MWAFRKEY(1),DXUKEY(@05)                             0509
*       MWASPOOL=GSRSPOOL;          /* USE CBIC SUBPOOL      @ZA16012*/
         MVI   MWASPOOL,X'F1'                                      0510
*     END;                          /*                       @ZA16012*/
*   CALL FREECORE;                  /* FREEMAIN                      */
@RF00507 BAL   @14,FREECORE                                        0512
*   RESPECIFY                                                      0513
*    (RET,                                                         0513
*     RETCODE) RESTRICTED;                                         0513
*   RET=MWASAVEA;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVEA                                        0514
*   RETCODE=MWARETCD;               /* GET RETURN CODE               */
         L     RETCODE,MWARETCD                                    0515
*   RESPECIFY                                                      0516
*    (RET,                                                         0516
*     RETCODE) UNRESTRICTED;                                       0516
*   END FLQUIS;                                                    0517
@EL00006 DS    0H                                                  0517
@EF00006 DS    0H                                                  0517
@ER00006 BR    @14                                                 0517
*TCLSPATH:                                                         0518
*                                                                  0518
*/********************************************************************/
*/*                                                                  */
*/*      01 FUNCTION - TCLOSE PROCESSING ON THE PATH DATA SET        */
*/*      01 INPUTS -   1. ADDRESS OF USER ACB                        */
*/*                    2. ADDRESS OF ACB WORK AREA                   */
*/*      01 OUTPUTS -  1. EXIT MODULE IF ERROR ENCOUNTERED           */
*/*                    2. PATH DATA SET TCLOSED IF NO ERROR          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0518
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0518
TCLSPATH DS    0H                                                  0519
*   RESPECIFY                                                      0519
*    (RET,                                                         0519
*     RETCODE) RESTRICTED;                                         0519
*   MWASAVEA=RET;                   /* SAVE RETURN ADDRESS           */
         ST    RET,MWASAVEA                                        0520
*   RESPECIFY                                                      0521
*     RET UNRESTRICTED;                                            0521
*   PDPFUNC=PDF154;                 /* TCLOSE PATH DATA SET          */
         LA    @14,280                                             0522
         AL    @14,MWACORAD                                        0522
         MVI   PDPFUNC(@14),X'9A'                                  0522
*   PDPDSTYP=PDPPATH;               /* INDICATE PATH DATA SET        */
         MVI   PDPDSTYP(@14),X'03'                                 0523
*   CALL IDA0231B;                  /* TCLOSE PATH DATA SET          */
         L     @15,@CV03834                                        0524
         BALR  @14,@15                                             0524
*   RSTATRTN=IDAR231T;              /* NOTE 231T IN CONTROL          */
         L     @14,MWACORAD                                        0525
         MVC   RSTATRTN(4,@14),@CC03388                            0525
*   IF RETCODE^=ZERO THEN           /* TERMINATING ERROR             */
         LTR   RETCODE,RETCODE                                     0526
         BZ    @RF00526                                            0526
*     RETURN TO EXIT;               /* GO TO EXIT                    */
         LA    @14,EXIT                                            0527
@EL00007 DS    0H                                                  0527
@EF00007 DS    0H                                                  0527
@ER00007 BR    @14                                                 0527
*   PDPDSTYP=PDPDDNM;               /* RESET DATA SET TYPE TO DD NAME*/
@RF00526 L     @14,MWACORAD                                        0528
         MVI   PDPDSTYP+280(@14),X'01'                             0528
*   RESPECIFY                                                      0529
*     RET RESTRICTED;                                              0529
*   RET=MWASAVEA;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVEA                                        0530
*   RESPECIFY                                                      0531
*    (RET,                                                         0531
*     RETCODE) UNRESTRICTED;                                       0531
*   END TCLSPATH;                                                  0532
         B     @EL00007                                            0532
*TCLSBASE:                                                         0533
*                                                                  0533
*/********************************************************************/
*/*                                                                  */
*/*      01 FUNCTION - TCLOSE PROCESSING ON THE BASE DATA SET        */
*/*      01 INPUTS -   1. ADDRESS OF USER ACB/BIB DUMMY ACB          */
*/*                    2. ADDRESS OF ACB WORK AREA                   */
*/*      01 OUTPUTS -  1. EXIT MODULE IF ERROR ENCOUNTERED           */
*/*                    2. BASE DS TCLOSED IF NO ERROR                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0533
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0533
TCLSBASE DS    0H                                                  0534
*   RESPECIFY                                                      0534
*    (RET,                                                         0534
*     RETCODE) RESTRICTED;                                         0534
*   MWASAVEA=RET;                   /* SAVE RETURN ADDRESS           */
         ST    RET,MWASAVEA                                        0535
*   RESPECIFY                                                      0536
*     RET UNRESTRICTED;                                            0536
*   PDPFUNC=PDF155;                 /* TCLOSE BASE KSDS/ESDS         */
         LA    @14,280                                             0537
         AL    @14,MWACORAD                                        0537
         MVI   PDPFUNC(@14),X'9B'                                  0537
*   PDPDSTYP=PDPBASE;               /* INDICATE DATA SET TYPE IS BASE*/
         MVI   PDPDSTYP(@14),X'02'                                 0538
*   IF CLWPATH=ON THEN              /* PATH PROCESSING               */
         TM    CLWPATH(RCORE),B'00010000'                          0539
         BNO   @RF00539                                            0539
*     DO;                           /*                       @Z30SSRL*/
*       RACB=BIBDACB;               /* POINT TO BIB DUMMY ACB        */
         L     @14,ACBAMBL(,RACB)                                  0541
         L     @14,AMBLBIB(,@14)                                   0541
         L     @14,BIBDACB(,@14)                                   0541
         LR    RACB,@14                                            0541
*       ACBBUSY=ON;                 /* TURN ON ACB BUSY BIT  @Z30SSRL*/
         OI    ACBBUSY(RACB),B'00000001'                           0542
*     END;                          /*                       @Z30SSRL*/
*   CALL IDA0231B;                  /* TCLOSE BASE KSDS/ESDS         */
@RF00539 L     @15,@CV03834                                        0544
         BALR  @14,@15                                             0544
*   RSTATRTN=IDAR231T;              /* NOTE 231T IN CONTROL          */
         L     @14,MWACORAD                                        0545
         MVC   RSTATRTN(4,@14),@CC03388                            0545
*   IF CLWPATH=ON THEN              /* IF PATH PROCESSING    @Z30SSRL*/
         TM    CLWPATH(RCORE),B'00010000'                          0546
         BNO   @RF00546                                            0546
*     ACBBUSY=OFF;                  /* RESET ACB BUSY BIT    @Z30SSRL*/
         NI    ACBBUSY(RACB),B'11111110'                           0547
*   RACB=MWARACB;                   /* RESTORE POINTER TO USER ACB   */
@RF00546 L     RACB,MWARACB                                        0548
*   PDPDSTYP=PDPDDNM;               /* RESET DATA SET TYPE TO DD NAME*/
         L     @14,MWACORAD                                        0549
         MVI   PDPDSTYP+280(@14),X'01'                             0549
*   IF RETCODE^=ZERO THEN           /* TERMINATING ERROR             */
         LTR   RETCODE,RETCODE                                     0550
         BZ    @RF00550                                            0550
*     RETURN TO EXIT;               /* GO TO EXIT                    */
         LA    @14,EXIT                                            0551
@EL00008 DS    0H                                                  0551
@EF00008 DS    0H                                                  0551
@ER00008 BR    @14                                                 0551
*   RESPECIFY                                                      0552
*     RET RESTRICTED;                                              0552
@RF00550 DS    0H                                                  0553
*   RET=MWASAVEA;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVEA                                        0553
*   RESPECIFY                                                      0554
*    (RET,                                                         0554
*     RETCODE) UNRESTRICTED;                                       0554
*   END TCLSBASE;                                                  0555
         B     @EL00008                                            0555
*TCLSUPGR:                                                         0556
*                                                                  0556
*/********************************************************************/
*/*                                                                  */
*/*      01 FUNCTION - TCLOSE PROCESSING ON THE UPGRADE DATA SETS    */
*/*      01 INPUTS -   1. ADDRESS OF UPGRADE ACB                     */
*/*                    2. ADDRESS OF ACB WORK AREA                   */
*/*      01 OUTPUTS -  1. EXIT MODULE IF ERROR ENCOUNTERED           */
*/*                    2. UPGRADE DS'S TCLOSED IF NO ERROR           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0556
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0556
TCLSUPGR DS    0H                                                  0557
*   RESPECIFY                                                      0557
*    (RET,                                                         0557
*     RETCODE) RESTRICTED;                                         0557
*   MWASAVEA=RET;                   /* SAVE RETURN ADDRESS           */
         ST    RET,MWASAVEA                                        0558
*   RESPECIFY                                                      0559
*     RET UNRESTRICTED;                                            0559
*   PDPFUNC=PDF156;                 /* TCLOSE UPGRADE DATA SETS      */
         LA    @14,280                                             0560
         AL    @14,MWACORAD                                        0560
         MVI   PDPFUNC(@14),X'9C'                                  0560
*   PDPDSTYP=PDPUPGR;               /* INDICATE UPGRADE DATA SET     */
         MVI   PDPDSTYP(@14),X'04'                                 0561
*   DO MWAINDEX=1 TO UPTNOENT;      /* GO THROUGH UPGRADE TABLE      */
         LA    @14,1                                               0562
         B     @DE00562                                            0562
@DL00562 DS    0H                                                  0563
*     RACB=UPTRPL(MWAINDEX)->RPLDACB;/* POINT TO UPGRADE ACB         */
         MH    @14,@CH00258                                        0563
         L     @05,ACBAMBL(,RACB)                                  0563
         L     @05,AMBLBIB(,@05)                                   0563
         L     @05,BIBUPT(,@05)                                    0563
         L     @14,UPTRPL-12(@14,@05)                              0563
         L     @14,RPLDACB(,@14)                                   0563
         LR    RACB,@14                                            0563
*     ACBBUSY=ON;                   /* TURN ON ACB BUSY BIT  @Z30SSRL*/
         OI    ACBBUSY(RACB),B'00000001'                           0564
*     CALL IDA0231B;                /* TCLOSE UPGRADE DATA SETS      */
         L     @15,@CV03834                                        0565
         BALR  @14,@15                                             0565
*     RSTATRTN=IDAR231T;            /* NOTE 231T IN CONTROL          */
         L     @14,MWACORAD                                        0566
         MVC   RSTATRTN(4,@14),@CC03388                            0566
*     ACBBUSY=OFF;                  /* RESET ACB BUSY BIT    @Z30SSRL*/
         NI    ACBBUSY(RACB),B'11111110'                           0567
*     RACB=MWARACB;                 /* RESTORE USER ACB              */
         L     RACB,MWARACB                                        0568
*     IF RETCODE^=ZERO THEN         /* TERMINATING ERROR             */
         LTR   RETCODE,RETCODE                                     0569
         BZ    @RF00569                                            0569
*       RETURN TO EXIT;             /* GO TO EXIT                    */
         LA    @14,EXIT                                            0570
@EL00009 DS    0H                                                  0570
@EF00009 DS    0H                                                  0570
@ER00009 BR    @14                                                 0570
*   END;                                                           0571
@RF00569 LA    @14,1                                               0571
         AL    @14,MWAINDEX                                        0571
@DE00562 ST    @14,MWAINDEX                                        0571
         L     @05,ACBAMBL(,RACB)                                  0571
         L     @05,AMBLBIB(,@05)                                   0571
         L     @05,BIBUPT(,@05)                                    0571
         SLR   @11,@11                                             0571
         IC    @11,UPTNOENT(,@05)                                  0571
         CR    @14,@11                                             0571
         BNH   @DL00562                                            0571
*   PDPDSTYP=PDPDDNM;               /* RESET DATA SET TYPE TO DD NAME*/
         L     @14,MWACORAD                                        0572
         MVI   PDPDSTYP+280(@14),X'01'                             0572
*   RESPECIFY                                                      0573
*     RET RESTRICTED;                                              0573
*   RET=MWASAVEA;                   /* GET RETURN ADDRESS            */
         L     RET,MWASAVEA                                        0574
*   RESPECIFY                                                      0575
*    (RET,                                                         0575
*     RETCODE) UNRESTRICTED;                                       0575
*   END TCLSUPGR;                                                  0576
         B     @EL00009                                            0576
*GETCORE:                                                          0577
*                                                                  0577
*/********************************************************************/
*/*                                                                  */
*/*      01 FUNCTION - ISSUE GETMAIN TO OBTAIN CORE STORAGE          */
*/*      01 INPUTS -   1. NUMBER OF BYTES REQUIRED IN MWABYTES       */
*/*                    2. SUBPOOL NUMBER IN MWASPOOL                 */
*/*      01 OUTPUTS -  1. CORE STORAGE ADDRESS IN MWADDRES           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0577
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0577
GETCORE  DS    0H                                                  0578
*   RESPECIFY                                                      0578
*    (R0,                                                          0578
*     R1,                                                          0578
*     R6,                                                          0578
*     R7,                                                          0578
*     RET,                                                         0578
*     RETCODE) RESTRICTED;                                         0578
*   IF MWAFRKEY<=K70 THEN           /* IN SYSTEM KEY         @ZA16012*/
         CLI   MWAFRKEY,X'70'                                      0579
         BH    @RF00579                                            0579
*     DO;                           /* YES                   @ZA16012*/
*       R6=MWAFRKEY;                /* LOAD REG WITH SYS KEY @ZA16012*/
         SLR   R6,R6                                               0581
         IC    R6,MWAFRKEY                                         0581
*       SPKA(R6);                   /* MODESET TO SYS KEY    @ZA16012*/
         SPKA  0(R6)                                               0582
*     END;                          /*                       @ZA16012*/
*   R6=MWASPOOL;                    /* SUBPOOL NUMBER                */
@RF00579 SLR   R6,R6                                               0584
         IC    R6,MWASPOOL                                         0584
*   R7=MWABYTES;                    /* NUMBER OF BYTES REQUIRED      */
         L     R7,MWABYTES-1                                       0585
         LA    R7,0(,R7)                                           0585
*   GEN(GETMAIN RC,LV=(R7),SP=(R6)) /* ISSUE GETMAIN                 */
*   SETS(RETCODE);                  /* SETS R15 WITH RETURN CODE     */
         GETMAIN RC,LV=(R7),SP=(R6)
*   GEN(MODESET EXTKEY=ZERO);       /* RETURN TO KEY ZERO    @ZA16012*/
         MODESET EXTKEY=ZERO
*   MWAFRKEY=K00;                   /* FORCE KEY ZERO        @ZA16012*/
         MVI   MWAFRKEY,X'00'                                      0588
*   IF RETCODE=ZERO THEN            /* GETMAIN SUCCESSFUL            */
         LTR   RETCODE,RETCODE                                     0589
         BNZ   @RF00589                                            0589
*     DO;                                                          0590
*       MWADDRES=R1;                /* SAVE ADDRESS OF GOTTEN CORE   */
         ST    R1,MWADDRES                                         0591
*       R6=MWADDRES;                /* ADDRESS OF GOTTEN CORE        */
         L     @11,MWADDRES                                        0592
         LR    R6,@11                                              0592
*       R1=ZERO;                    /* ZERO PAD BYTE                 */
         SLR   R1,R1                                               0593
*       GEN(MVCL R6,R0)                                            0594
*       NOSETS;                     /* ZERO GOTTEN CORE              */
         MVCL R6,R0
*     END;                                                         0595
*   ELSE                            /* IF GETMAIN FAILED             */
*     DO;                                                          0596
         B     @RC00589                                            0596
@RF00589 DS    0H                                                  0597
*       ACBERFLG=OPERR136;          /* SET ACB ERROR FLAG            */
         MVI   ACBERFLG(RACB),X'88'                                0597
*       R1=MWACORAD;                /* POINT TO COMMON WORK AREA     */
         L     @05,MWACORAD                                        0598
         LR    R1,@05                                              0598
*       PDPCODE=PP20;               /* SET PROBLEM CODE              */
         MVI   PDPCODE+280(@05),X'14'                              0599
*       RSTATRTN=IDAR192P;          /* NOTE CALL TO 192P             */
         MVC   RSTATRTN(4,@05),@CC03370                            0600
*       CALL IDA0192P;              /* CALL PROBLEM DETERMINATION    */
         L     @15,@CV03796                                        0601
         BALR  @14,@15                                             0601
*       RSTATRTN=IDAR231T;          /* NOTE 231T IN CONTROL          */
         L     @05,MWACORAD                                        0602
         MVC   RSTATRTN(4,@05),@CC03388                            0602
*       RETURN TO EXIT;             /* EXIT MODULE                   */
         LA    @14,EXIT                                            0603
@EL00010 DS    0H                                                  0603
@EF00010 DS    0H                                                  0603
@ER00010 BR    @14                                                 0603
*     END;                                                         0604
*   RESPECIFY                                                      0605
*    (R0,                                                          0605
*     R1,                                                          0605
*     R6,                                                          0605
*     R7,                                                          0605
*     RET,                                                         0605
*     RETCODE) UNRESTRICTED;                                       0605
*   END GETCORE;                                                   0606
         B     @EL00010                                            0606
*FREECORE:                                                         0607
*                                                                  0607
*/********************************************************************/
*/*                                                                  */
*/*      01 FUNCTION - FREE CORE STORAGE PREVIOUSLY OBTAINED         */
*/*      01 INPUTS -   1. ADDRESS OF CORE TO BE FREED IN MWADDRES    */
*/*                    2. NUMBER OF BYTES TO BE FREED IN MWABYTES    */
*/*                    3. SUBPOOL NUMBER IN MWASPOOL                 */
*/*      01 OUTPUTS -  1. CORE STORAGE FREED                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0607
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0607
FREECORE DS    0H                                                  0608
*   RESPECIFY                                                      0608
*    (R0,                                                          0608
*     R1,                                                          0608
*     RET) RESTRICTED;                                             0608
*   IF MWAFRKEY<=K70 THEN           /* IS MODESET REQUIRED   @ZA16012*/
         CLI   MWAFRKEY,X'70'                                      0609
         BH    @RF00609                                            0609
*     DO;                           /* YES                   @ZA16012*/
*       R1=MWAFRKEY;                /* LOAD KEY INTO REG     @ZA16012*/
         SLR   R1,R1                                               0611
         IC    R1,MWAFRKEY                                         0611
*       SPKA(R1);                   /* MODESET TO SYSTEM KEY@ZA16012 */
         SPKA  0(R1)                                               0612
*     END;                          /*                       @ZA16012*/
*   LM(R0,R1,MWAMNPRM);             /* SUBPOOL, LENGTH, AND ADDRESS  */
@RF00609 LM    R0,R1,MWAMNPRM                                      0614
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREEMAIN                      */
         FREEMAIN R,LV=(0),A=(1)
*   GEN(MODESET EXTKEY=ZERO);       /* FORCE KEY ZERO        @ZA16012*/
         MODESET EXTKEY=ZERO
*   MWAFRKEY=K00;                   /* RESET FREEMAIN SWITCH@ZA16012 */
         MVI   MWAFRKEY,X'00'                                      0617
*   RESPECIFY                                                      0618
*    (R0,                                                          0618
*     R1,                                                          0618
*     RET) UNRESTRICTED;                                           0618
*   END FREECORE;                                                  0619
@EL00011 DS    0H                                                  0619
@EF00011 DS    0H                                                  0619
@ER00011 BR    @14                                                 0619
@PB00011 DS    0H                                                  0619
*   END IDA0231T                                                   0620
*                                                                  0620
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (LCGPLSSW)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */
*/*%INCLUDE SYSLIB  (IDABIB  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IDAUPT  )                                       */
*/*%INCLUDE SYSLIB  (IDAFOREC)                                       */
*/*%INCLUDE SYSLIB  (IECDSECT)                                       */
*/*%INCLUDE SYSLIB  (IECDSECS)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                       */
*/*%INCLUDE SYSLIB  (IDAPDPRM)                                       */
*/*%INCLUDE SYSLIB  (IDARTMAC)                                       */
*/*%INCLUDE SYSLIB  (IDAERRCD)                                       */
*/*%INCLUDE SYSLIB  (IDAPDFCD)                                       */
*/*%INCLUDE SYSLIB  (IDAPPCDE)                                       */
*/*%INCLUDE SYSLIB  (IDAOCECN)                                       */
*/*%INCLUDE SYSLIB  (IDACLWRK)                                       */
*/*%INCLUDE SYSLIB  (IDAGMAIN)                                       */
*                                                                  0620
*       ;                                                          0620
@DATA    DS    0H
@CH00258 DC    H'12'
@CH01363 DC    H'20'
@DATD    DSECT
         DS    0F
@SA00001 DS    23F
@TF00001 DS    F
IDA0231T CSECT
         DS    0F
@CF00064 DC    F'1'
@CF00070 DC    F'2'
@CF00107 DC    F'4'
@CF00132 DC    F'16'
@CF03190 DC    F'30'
@CF03419 DC    F'148'
@CF03851 DC    F'-20'
@CF03852 DC    F'-8'
@CF03855 DC    F'-7'
@CF03856 DC    F'-6'
@CF03853 DC    F'-5'
@CF03854 DC    F'-4'
@DATD    DSECT
         DS    0D
MWARACB  DS    A
MWACORAD DS    A
MWAENQPT DS    A
MWARPLPT DS    A
MWAPLHPT DS    A
MWAPLHDR DS    A
MWASAVEA DS    A
MWASAVEB DS    A
MWASAVED DS    A
MWAMRPL  DS    A
MWACRPL  DS    A
MWADSCNT DS    F
MWAINDEX DS    F
MWARETCD DS    F
MWAMNPRM DS    CL8
         ORG   MWAMNPRM
MWAMNWRD DS    FL4
         ORG   MWAMNWRD
MWASPOOL DS    FL1
MWABYTES DS    AL3
         ORG   MWAMNPRM+4
MWADDRES DS    AL4
         ORG   MWAMNPRM+8
MWAQNAME DS    CL8
MWACLWID DS    BL1
MWAENQFG DS    BL1
MWAFRKEY DS    BL1
IDA0231T CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03796 DC    V(IDA0192P)
@CV03834 DC    V(IDA0231B)
         DS    0D
@CC03808 DC    C'IDACLWRK'
@CC03814 DC    C'SYSVSAM '
@CC03370 DC    C'192P'
@CC03388 DC    C'231T'
IDA0231T CSECT
         DS    0D                       DOUBLE WORD BOUNDARY
PTCH231T DC    ((*-IDA0231T)/20)X'00'   PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDA0231T CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MWAENQLP EQU   @07
MWAEQIDX EQU   @05
MWASAVEC EQU   @11
MWARNPTR EQU   @06
MWAPAMBL EQU   @10
MWAMBLPT EQU   @08
MWAAMBPT EQU   @09
R13      EQU   @13
RCORE    EQU   @04
R0       EQU   @00
R1       EQU   @01
RACB     EQU   @02
RBASEA   EQU   @03
RBASEB   EQU   @12
R12      EQU   @12
R4       EQU   @04
R6       EQU   @06
R7       EQU   @07
R11      EQU   @11
RET      EQU   @14
RETCODE  EQU   @15
R15      EQU   @15
RDEB     EQU   @11
RTIOT    EQU   @09
RUCB     EQU   @10
R10      EQU   @10
R5       EQU   @05
R8       EQU   @08
R9       EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
MWAFLQSA EQU   0
ENQPARML EQU   0
ENQTCB   EQU   ENQPARML
ENQENTRY EQU   ENQPARML+4
ENQOPT1  EQU   ENQENTRY
ENQEND   EQU   ENQOPT1
ENQRLEN  EQU   ENQENTRY+1
ENQOPT2  EQU   ENQENTRY+2
ENQSHR   EQU   ENQOPT2
ENQSYSTM EQU   ENQOPT2
ENQQNADR EQU   ENQENTRY+4
ENQRNADR EQU   ENQENTRY+8
ENQRNM   EQU   0
ENQRNAME EQU   ENQRNM
ENQRNCI  EQU   ENQRNAME
ENQRNACB EQU   ENQRNAME+3
ENQRNIND EQU   ENQRNAME+7
SAVAREA  EQU   0
SABWRD   EQU   SAVAREA+4
SAREGS   EQU   SAVAREA+12
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBTIOT  EQU   ACBDDNM
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBBUSY  EQU   ACBIOSFG
ACBERFLG EQU   ACBCOMN+49
ACBINFLG EQU   ACBCOMN+50
ACBINFL1 EQU   ACBINFLG
ACBVVIC  EQU   ACBINFL1
ACBINFL2 EQU   ACBINFLG+1
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
IDAAMB   EQU   0
AMBPH    EQU   IDAAMB+12
AMBCACB  EQU   IDAAMB+16
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBDDSN  EQU   IDAAMB+35
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
IDAAMBL  EQU   0
AMBLEOV  EQU   IDAAMBL+12
AMBLEFLG EQU   AMBLEOV
AMBLDDNM EQU   IDAAMBL+16
AMBLIDF  EQU   AMBLDDNM
AMBLQ    EQU   AMBLIDF+7
AMBLGSR  EQU   AMBLQ
AMBLLSR  EQU   AMBLQ
AMBLXPT  EQU   IDAAMBL+24
AMBLVC   EQU   IDAAMBL+28
AMBLTYPE EQU   IDAAMBL+30
AMBLPATH EQU   AMBLTYPE
AMBLQ2   EQU   IDAAMBL+31
AMBLCBIC EQU   AMBLQ2
AMBLSHAR EQU   IDAAMBL+33
AMBLFLG1 EQU   IDAAMBL+35
AMBLVVIC EQU   AMBLFLG1
AMBLDUMY EQU   AMBLFLG1
AMBLFLG2 EQU   IDAAMBL+36
AMBLDTA  EQU   IDAAMBL+52
AMBLIX   EQU   IDAAMBL+56
AMBLBIB  EQU   IDAAMBL+60
IDABIB   EQU   0
BIBHDR   EQU   IDABIB
BIBFLG1  EQU   BIBHDR+1
BIBREST  EQU   BIBFLG1
BIBCKPT  EQU   BIBFLG1
BIBUPT   EQU   IDABIB+8
BIBDACB  EQU   IDABIB+16
BIBRTNS  EQU   IDABIB+60
BIBINTRF EQU   BIBRTNS
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
IDAPLHDR EQU   0
PLHCNT   EQU   IDAPLHDR+1
IDAPLH   EQU   0
PLHAVL   EQU   IDAPLH
PLHFLG1  EQU   IDAPLH+2
PLHFLG2  EQU   IDAPLH+3
PLHEFLGS EQU   IDAPLH+4
PLHFLG3  EQU   IDAPLH+6
PLHAFLGS EQU   IDAPLH+7
PLHACB   EQU   IDAPLH+8
PLHMRPL  EQU   IDAPLH+16
PLHCRPL  EQU   IDAPLH+20
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHJCODE EQU   IDAPLH+40
PLHDIOB  EQU   IDAPLH+76
PLHCHAIN EQU   IDAPLH+112
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHKEYPT EQU   IDAPLH+248
PLHEND   EQU   IDAPLH+280
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00086 EQU   RBSECT+10
@NM00087 EQU   @NM00086
RBTRSVRB EQU   @NM00087
@NM00089 EQU   @NM00086+1
RBETXR   EQU   @NM00089
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00096 EQU   RBSECT+28
@NM00097 EQU   @NM00096
IRBEND   EQU   RBSECT+96
@NM00100 EQU   RBSECT+96
RBRSV138 EQU   @NM00100+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLPLHPT EQU   RPLCOMN+4
RPLECB   EQU   RPLCOMN+8
RPLPOST  EQU   RPLECB
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLSTRID EQU   RPLCOMN+18
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBSTAWA EQU   TCB+252
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IDAUPT   EQU   0
UPTHDR   EQU   IDAUPT
UPTFLG0  EQU   UPTHDR+1
UPTNOENT EQU   IDAUPT+13
UPTSA    EQU   IDAUPT+16
UPTAXENT EQU   IDAUPT+88
UPTRPL   EQU   UPTAXENT
UPTFLG1  EQU   UPTAXENT+4
UPTF1NOP EQU   UPTFLG1
FORCORE  EQU   0
DXDSCB   EQU   FORCORE
DXJBF    EQU   FORCORE+100
DXIOB    EQU   FORCORE+280
DXDAADDR EQU   FORCORE+312
DXDCB    EQU   FORCORE+320
DXCCW    EQU   FORCORE+368
DXCCW5   EQU   DXCCW+32
DXCCW8   EQU   DXCCW+56
DXCCW12  EQU   DXCCW+88
DXXCTL   EQU   FORCORE+472
DXVOLSR  EQU   FORCORE+500
DXVOLSR1 EQU   DXVOLSR
DXVOLSR2 EQU   DXVOLSR+6
DXVOLSR3 EQU   DXVOLSR+12
DXRESSW  EQU   FORCORE+524
DXUKEY   EQU   FORCORE+526
DXUCBSAV EQU   FORCORE+564
DXUDCBAD EQU   FORCORE+568
DXUACBAD EQU   DXUDCBAD+1
DXPDCBAD EQU   FORCORE+572
DXPACBAD EQU   DXPDCBAD+1
DXATCOM1 EQU   FORCORE+588
DXATGENS EQU   DXATCOM1
DXATVGIV EQU   DXATGENS
DXATOUTA EQU   DXATCOM1+2
DXATDACC EQU   DXATCOM1+3
DXATCOM2 EQU   FORCORE+592
DXATEOV  EQU   DXATCOM2
DXATOPEN EQU   DXATCOM2+1
DXATALL  EQU   DXATCOM2+2
DXATEXC1 EQU   FORCORE+604
DXATEXB1 EQU   DXATEXC1
DXATEXC2 EQU   FORCORE+608
DSECTSIZ EQU   FORCORE+612
IECPREFX EQU   0
IECEXTPR EQU   IECPREFX+32
IECWTGTB EQU   IECEXTPR+72
IECUPRML EQU   IECEXTPR+80
IECRESWA EQU   IECEXTPR+84
RWARESWA EQU   0
RWAPREFX EQU   RWARESWA
USERPRML EQU   0
IECRRPL  EQU   0
RRPLIST  EQU   IECRRPL
RRFUNCTN EQU   RRPLIST
RRFLAGS1 EQU   RRPLIST+1
RRFLAGS2 EQU   RRPLIST+2
RRFLAGS3 EQU   RRPLIST+3
RRXRETRY EQU   RRPLIST+12
DSMADTRL EQU   0
DSMADTW1 EQU   DSMADTRL
DSMADTB1 EQU   DSMADTW1
DSMADTB2 EQU   DSMADTW1+1
WTGTABLE EQU   0
WTGWTOPR EQU   WTGTABLE
WTG      EQU   0
WTGAREA  EQU   WTG
WTGMODNM EQU   WTGAREA
WTGPREFX EQU   WTGAREA+16
WTGPATHS EQU   WTG+30
WTGENTRY EQU   0
WTGIDTTR EQU   WTGENTRY
APPNMTBL EQU   0
APPENTRY EQU   APPNMTBL+4
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
JFCBX    EQU   0
IDAPDPRM EQU   0
PDPCALL  EQU   IDAPDPRM
PDPCODE  EQU   IDAPDPRM+1
PDPFUNC  EQU   IDAPDPRM+2
PDPACB   EQU   IDAPDPRM+4
PDPTIOT  EQU   IDAPDPRM+12
PDPCLSNM EQU   IDAPDPRM+20
PDPDSN   EQU   IDAPDPRM+24
PDPCTACB EQU   IDAPDPRM+28
PDPDSTYP EQU   IDAPDPRM+33
PDPMSGFL EQU   IDAPDPRM+34
IDAVGTT  EQU   0
VGTTTYPE EQU   IDAVGTT+4
IDACLWRK EQU   0
CLWID    EQU   IDACLWRK
CLWCOMWK EQU   IDACLWRK+8
CLWNWRIT EQU   IDACLWRK+28
CLWPATH  EQU   IDACLWRK+28
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
PSARSVTE EQU   PSARSVT
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
DXXWTG   EQU   DSECTSIZ
DXXAREA  EQU   DSECTSIZ+4
DXXMODNM EQU   DXXAREA
DXXLNG   EQU   DXXAREA+29
DXXENTRY EQU   DXXAREA+32
DXXIDTTR EQU   DXXENTRY
DXREGSAV EQU   DXCCW8
DXREG1   EQU   DXREGSAV+28
DXIDENT  EQU   DXCCW12
DXRETMOD EQU   DXIDENT+2
@NM00140 EQU   DXXCTL
DXSAVMOD EQU   @NM00140+2
@NM00141 EQU   DXRESSW
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
JFCBSPNM EQU   JFCBS001+45
JFCBFLG3 EQU   JFCBSPNM
PDWLIST  EQU   FORCORE
PDWWORK  EQU   DXDCB
IDARRPL  EQU   DXATCOM1
IDARRFLG EQU   IDARRPL+1
IDARSTAT EQU   DXATEXC1
RSTAT    EQU   IDARSTAT
RSTATCRO EQU   RSTAT+1
RSTATOP2 EQU   RSTAT+2
IDARRTN  EQU   DXATEXC2
RSTATRTN EQU   IDARRTN
DXBTAMX  EQU   DXREG1
DXDSNAME EQU   DXCCW5
FLC      EQU   PSA
IDAESPL  EQU   DXATCOM1
IDARTSA  EQU   DXJBF
MWADACB  EQU   RPLDACB+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00158 EQU   RSTAT+3
@NM00157 EQU   RSTATOP2
RSTATCSA EQU   RSTATOP2
IDARCURS EQU   RSTATCRO
IDARCRCU EQU   RSTATCRO
IDARRSTR EQU   RSTATCRO
IDARCKPT EQU   RSTATCRO
RSTATOPT EQU   RSTAT
@NM00156 EQU   IDARRPL+2
@NM00155 EQU   IDARRFLG
RRPLVSAM EQU   IDARRFLG
@NM00154 EQU   IDARRFLG
@NM00153 EQU   IDARRPL
PDWORKSP EQU   PDWWORK+88
PDWERRCD EQU   PDWWORK+84
PDWMSGPT EQU   PDWWORK+80
PDWSAVED EQU   PDWWORK+76
PDWSAVEC EQU   PDWWORK+72
PDWSAVEB EQU   PDWWORK+68
PDWSAVEA EQU   PDWWORK+64
PDWSAVE  EQU   PDWWORK
WTPROUT  EQU   PDWLIST+75
WTPMSG   EQU   PDWLIST+4
WTPFLGS  EQU   PDWLIST+2
WTPLNGTH EQU   PDWLIST
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBRV08 EQU   JFCBSPNM+1
JFCBRV07 EQU   JFCBFLG3
JFCBRV06 EQU   JFCBFLG3
JFCBRV05 EQU   JFCBFLG3
JFCBRV04 EQU   JFCBFLG3
JFCBRV03 EQU   JFCBFLG3
JFCBRV02 EQU   JFCBFLG3
JFCBEXP  EQU   JFCBFLG3
JFCDQDSP EQU   JFCBFLG3
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
JFCMSVGP EQU   JFCBS001+22
@NM00145 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCBNVOL EQU   JFCUCSEG+9
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00144 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCORGAM EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00143 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
DXRESIND EQU   @NM00141
DXSAVOFF EQU   @NM00140+7
DXSAVADR EQU   DXSAVMOD+2
DXSAVID  EQU   DXSAVMOD
DXABCODE EQU   @NM00140
DXRETCOD EQU   DXIDENT+7
DXRETTTR EQU   DXRETMOD+2
DXRETID  EQU   DXRETMOD
DXCALLID EQU   DXIDENT
DXREG0   EQU   DXREGSAV+24
DXREGE   EQU   DXREGSAV+20
DXREGD   EQU   DXREGSAV+16
DXREGC   EQU   DXREGSAV+12
DXREGB   EQU   DXREGSAV+8
DXREGA   EQU   DXREGSAV+4
DXREG9   EQU   DXREGSAV
DXXEND   EQU   DXXAREA+48
DXXLAST  EQU   DXXAREA+40
DXXCORE  EQU   DXXENTRY+5
DXETTR   EQU   DXXIDTTR+2
DXEID    EQU   DXXIDTTR
DXXPATHS EQU   DXXAREA+30
DXOPCLSW EQU   DXXLNG
DXXTXTLN EQU   DXXAREA+27
DXXMODSZ EQU   DXXAREA+24
DXXATTRB EQU   DXXAREA+22
@NM00125 EQU   DXXAREA+20
DXXPREFX EQU   DXXAREA+16
@NM00124 EQU   DXXAREA+12
DXXMODEP EQU   DXXAREA+8
DXXMODID EQU   DXXMODNM+6
@NM00123 EQU   DXXMODNM
DXXWTOPR EQU   DXXWTG
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00101 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00050 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00043 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00042 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CLWTERM  EQU   IDACLWRK+29
CLWGMAIN EQU   IDACLWRK+29
CLWSECCL EQU   IDACLWRK+29
CLWPRMCL EQU   IDACLWRK+29
CLWPARCL EQU   IDACLWRK+28
CLWOUTPT EQU   IDACLWRK+28
CLWDUMMY EQU   IDACLWRK+28
CLWSPHCL EQU   IDACLWRK+28
CLWCNOUP EQU   IDACLWRK+28
CLWBNOFL EQU   IDACLWRK+28
CLWSFI   EQU   IDACLWRK+16
CLWAMBPT EQU   IDACLWRK+12
VGTTCORE EQU   IDAVGTT+32
@NM00152 EQU   IDAVGTT+28
VGTTPSB  EQU   IDAVGTT+24
VGTTVUSE EQU   IDAVGTT+20
VGTTBIB  EQU   IDAVGTT+16
VGTTNEXT EQU   IDAVGTT+12
VGTTSIZE EQU   IDAVGTT+8
VGTTSP   EQU   IDAVGTT+7
VGTTGSRK EQU   IDAVGTT+6
@NM00151 EQU   IDAVGTT+5
@NM00150 EQU   VGTTTYPE
VGTTCBIC EQU   VGTTTYPE
VGTTOPEN EQU   VGTTTYPE
VGTTCTLG EQU   VGTTTYPE
VGTTLSR  EQU   VGTTTYPE
VGTTGSR  EQU   VGTTTYPE
VGTTSDS  EQU   VGTTTYPE
VGTTID   EQU   IDAVGTT
PDPSFI   EQU   IDAPDPRM+36
@NM00149 EQU   IDAPDPRM+35
PDPNOMSG EQU   PDPMSGFL
PDPNOTRC EQU   PDPMSGFL
PDPSPACE EQU   PDPMSGFL
PDPNOTFC EQU   PDPMSGFL
PDPKEY   EQU   IDAPDPRM+32
PDPVLSER EQU   IDAPDPRM+16
PDPUCB   EQU   IDAPDPRM+8
PDPSFC   EQU   IDAPDPRM+3
JFCBXNXT EQU   JFCBX+172
@NM00148 EQU   JFCBX+144
JFCBXDEV EQU   JFCBX+140
JFCBXNAM EQU   JFCBX+96
@NM00147 EQU   JFCBX+94
JFCBXVOL EQU   JFCBX+4
@NM00146 EQU   JFCBX+3
JFCBXTTR EQU   JFCBX
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCDISP  EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00142 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
APPNAMID EQU   APPNMTBL+24
APPOFFST EQU   APPENTRY+2
APPCOUNT EQU   APPENTRY
APPSIZE  EQU   APPNMTBL+2
APPBAL   EQU   APPNMTBL
WTGCORE  EQU   WTGENTRY+5
WTGETTR  EQU   WTGIDTTR+2
WTGEID   EQU   WTGIDTTR
WTGOPD   EQU   WTGPATHS+1
WTGRECHK EQU   WTGPATHS+1
WTGTSENQ EQU   WTGPATHS+1
@NM00139 EQU   WTGPATHS+1
WTGTRACE EQU   WTGPATHS+1
@NM00138 EQU   WTGPATHS
WTGJFCBW EQU   WTGPATHS
WTGSMF   EQU   WTGPATHS
WTGTCOS  EQU   WTGPATHS
WTGNSL   EQU   WTGPATHS
WTGPRLSE EQU   WTGPATHS
WTGLNG   EQU   WTG+29
WTGTXTLN EQU   WTGAREA+27
WTGMODSZ EQU   WTGAREA+24
WTGATTRB EQU   WTGAREA+22
@NM00137 EQU   WTGAREA+20
@NM00136 EQU   WTGAREA+12
WTGMODEP EQU   WTGAREA+8
WTGMODID EQU   WTGMODNM+6
@NM00135 EQU   WTGMODNM
DSMADTW6 EQU   DSMADTRL+20
DSMADTW5 EQU   DSMADTRL+16
DSMADTW4 EQU   DSMADTRL+12
DSMADTW3 EQU   DSMADTRL+8
DSMADTW2 EQU   DSMADTRL+4
DSMADTB4 EQU   DSMADTW1+3
DSMADTB3 EQU   DSMADTW1+2
@NM00134 EQU   DSMADTB2
DSMDSNE  EQU   DSMADTB2
DSMTIOTE EQU   DSMADTB2
DSMSMCE  EQU   DSMADTB2
DSMVTOCR EQU   DSMADTB2
DSMASWAP EQU   DSMADTB1
DSMUCBAL EQU   DSMADTB1
DSMRPSAP EQU   DSMADTB1
DSMLOCK  EQU   DSMADTB1
@NM00133 EQU   DSMADTB1
DSMVIO   EQU   DSMADTB1
DSMISAM  EQU   DSMADTB1
RRFWORK  EQU   RRPLIST+20
RRMLRTRY EQU   RRPLIST+16
RRUCBPTR EQU   RRXRETRY
RR1RETRY EQU   RRPLIST+8
RR1WRKAR EQU   RRPLIST+4
@NM00132 EQU   RRFLAGS3
RRFTERM  EQU   RRFLAGS3
RRFFCEXC EQU   RRFLAGS3
RRFFINFC EQU   RRFLAGS3
RRFNRTCA EQU   RRFLAGS3
@NM00131 EQU   RRFLAGS3
RRFENQUL EQU   RRFLAGS2
RRFPRDET EQU   RRFLAGS2
@NM00130 EQU   RRFLAGS2
RRFQMNGR EQU   RRFLAGS2
RRFENQPW EQU   RRFLAGS2
@NM00129 EQU   RRFLAGS2
RRFFIN1  EQU   RRFLAGS2
RRFTRACE EQU   RRFLAGS1
RRFSMF   EQU   RRFLAGS1
RRFNSL   EQU   RRFLAGS1
RRFAMSTR EQU   RRFLAGS1
RRFAMEXR EQU   RRFLAGS1
RRFAMEXG EQU   RRFLAGS1
RRFUSREX EQU   RRFLAGS1
@NM00128 EQU   RRFLAGS1
RRFRJFCB EQU   RRFUNCTN
RRFDADSM EQU   RRFUNCTN
DXDCBLST EQU   USERPRML
RWALIST  EQU   RWARESWA+12
RWAPARM  EQU   RWAPREFX+8
RWATRBUF EQU   RWAPREFX+4
RWATRACE EQU   RWAPREFX
IECQMNGR EQU   IECEXTPR+92
IECMSGQA EQU   IECEXTPR+88
IECDCBNO EQU   IECUPRML
IECRRPRM EQU   IECEXTPR+76
IECREGSV EQU   IECEXTPR
IECCORP2 EQU   IECPREFX+28
IECCORP1 EQU   IECPREFX+24
IECCORPS EQU   IECPREFX+20
IECCORSP EQU   IECPREFX+19
@NM00127 EQU   IECPREFX+17
IECCORKY EQU   IECPREFX+16
IECCORAD EQU   IECPREFX+12
IECCORLN EQU   IECPREFX+8
@NM00126 EQU   IECPREFX+4
IECCORID EQU   IECPREFX
DXATEXB2 EQU   DXATEXC2
DXEXHASP EQU   DXATEXB1
DXATCOM4 EQU   FORCORE+600
DXATCOM3 EQU   FORCORE+596
@NM00122 EQU   DXATCOM2+3
@NM00121 EQU   DXATALL
DXATSWAP EQU   DXATALL
DXATFC   EQU   DXATALL
@NM00120 EQU   DXATOPEN
DXATDFIN EQU   DXATOPEN
DXATDSIN EQU   DXATOPEN
DXATMODM EQU   DXATOPEN
DXATMODE EQU   DXATOPEN
DXATMODS EQU   DXATOPEN
DXATIGN  EQU   DXATOPEN
DXATVCAT EQU   DXATEOV
DXATDADM EQU   DXATEOV
DXATREMT EQU   DXATEOV
DXATDNEW EQU   DXATEOV
DXATDFRE EQU   DXATEOV
DXATDCHN EQU   DXATEOV
DXATNVOL EQU   DXATEOV
DXATCCAT EQU   DXATEOV
DXATRDDB EQU   DXATDACC
DXATEOF  EQU   DXATDACC
@NM00119 EQU   DXATDACC
DXATSMF  EQU   DXATDACC
DXATUPDB EQU   DXATDACC
DXATDRCT EQU   DXATDACC
DXATTRAK EQU   DXATDACC
DXATF1CE EQU   DXATDACC
DXATNSL  EQU   DXATOUTA
DXATTTM2 EQU   DXATOUTA
DXATTTM1 EQU   DXATOUTA
DXATTRL2 EQU   DXATOUTA
DXATTRL1 EQU   DXATOUTA
DXATDATM EQU   DXATOUTA
DXATHDTM EQU   DXATOUTA
DXATVLHD EQU   DXATOUTA
DXATCLOS EQU   DXATCOM1+1
DXATSRET EQU   DXATGENS
DXATVCIG EQU   DXATVGIV
DXATVTMG EQU   DXATVGIV
DXATVSMG EQU   DXATVGIV
DXATJFCB EQU   DXATGENS
DXATDISP EQU   DXATGENS
DXATREFR EQU   DXATGENS
DXATDMCT EQU   DXATGENS
DXMSGADR EQU   FORCORE+584
DXPRPARC EQU   FORCORE+580
DXUDCBML EQU   FORCORE+578
DXUDCBPL EQU   FORCORE+576
@NM00118 EQU   DXPDCBAD
@NM00117 EQU   DXUDCBAD
DXUCBSVV EQU   DXUCBSAV+1
@NM00116 EQU   DXUCBSAV
DXUCBADR EQU   FORCORE+560
DXTIOTAD EQU   FORCORE+556
DXDEBXAD EQU   FORCORE+552
DXDSAB   EQU   FORCORE+548
DXDSABAD EQU   FORCORE+544
DXDSABQD EQU   FORCORE+540
DXJSCBAD EQU   FORCORE+536
DXTCBADR EQU   FORCORE+532
DXASCBAD EQU   FORCORE+528
DXEXTSW  EQU   FORCORE+527
DXWKEYSV EQU   FORCORE+525
DXUNITOF EQU   FORCORE+522
DXNOUNIT EQU   FORCORE+520
DXVOLSEQ EQU   FORCORE+518
DXVOLMT3 EQU   DXVOLSR3
DXVOLMT2 EQU   DXVOLSR2
DXVOLMT1 EQU   DXVOLSR1
DXWORK4  EQU   FORCORE+496
DXWORK3  EQU   FORCORE+492
DXWORK2  EQU   FORCORE+488
DXWORK1  EQU   FORCORE+484
DXWORK   EQU   FORCORE+480
@NM00115 EQU   FORCORE+464
DXCCW11  EQU   DXCCW+80
DXCCW10  EQU   DXCCW+72
DXCCW9   EQU   DXCCW+64
DXCCW7   EQU   DXCCW+48
DXCCW6   EQU   DXCCW+40
DXCCW4   EQU   DXCCW+24
DXCCW3   EQU   DXCCW+16
DXCCW2   EQU   DXCCW+8
DXCCW1   EQU   DXCCW
DXDCBDEB EQU   DXDCB+44
@NM00114 EQU   DXDCB+24
DXDEBDCB EQU   DXDCB+20
@NM00113 EQU   DXDCB
DXDEB    EQU   DXDAADDR+4
@NM00112 EQU   DXDAADDR
DXECB    EQU   FORCORE+276
DSCCORE  EQU   FORCORE+96
DXLBL    EQU   DXDSCB
UPTBG    EQU   UPTAXENT+10
UPTLNCDE EQU   UPTAXENT+9
UPTPASS  EQU   UPTAXENT+8
UPTRKP   EQU   UPTAXENT+6
UPTF1PUD EQU   UPTFLG1+1
UPTF1PNU EQU   UPTFLG1+1
UPTF1ERA EQU   UPTFLG1+1
UPTF1PHY EQU   UPTFLG1+1
UPTF1LOG EQU   UPTFLG1+1
UPTF1BKO EQU   UPTFLG1+1
UPTF1UPG EQU   UPTFLG1
UPTF1RTY EQU   UPTFLG1
UPTF1KEY EQU   UPTFLG1
UPTF1NRF EQU   UPTFLG1
UPTF1NUK EQU   UPTFLG1
UPTF1ATV EQU   UPTFLG1
UPTF1LST EQU   UPTFLG1
UPTF1LOP EQU   UPTRPL
UPTR15   EQU   UPTSA+16
UPTR14   EQU   UPTSA+12
UPTSARES EQU   UPTSA+11
@NM00111 EQU   UPTSA+10
UPTBERCD EQU   UPTSA+9
UPTBEREG EQU   UPTSA+8
UPTLSA   EQU   UPTSA+4
UPTBRPL  EQU   UPTSA
UPTLLEN  EQU   IDAUPT+14
UPTRSC   EQU   IDAUPT+12
UPTOLD   EQU   IDAUPT+8
UPTNEW   EQU   IDAUPT+4
UPTLEN   EQU   UPTHDR+2
UPTPWS   EQU   UPTFLG0
UPTID    EQU   UPTHDR
@NM00110 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00109 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAFX EQU   TCBSTAWA
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00108 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00107 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00106 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00105 EQU   RPLRBAR+3
@NM00104 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00103 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
@NM00102 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLWAIT  EQU   RPLECB
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00100+8
PRBEND   EQU   @NM00100+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00100+6
RBRSV136 EQU   @NM00100+4
RBRSV135 EQU   @NM00100
@NM00099 EQU   RBSECT+32
@NM00098 EQU   @NM00096+1
RBSCF    EQU   @NM00097
RBPGMQ1  EQU   RBPGMQ+1
@NM00095 EQU   RBPGMQ
@NM00094 EQU   RBSECT+16
@NM00093 EQU   @NM00089
@NM00092 EQU   @NM00089
RBIQETP  EQU   @NM00089
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00089
@NM00091 EQU   @NM00089
@NM00090 EQU   @NM00089
RBPMSVRB EQU   @NM00087
RBATNXIT EQU   @NM00087
@NM00088 EQU   @NM00087
RBWAITP  EQU   @NM00087
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00087
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00085 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00084 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00083 EQU   RBOPSWB2
@NM00082 EQU   XRBPSW
@NM00081 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00080 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00079 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00078 EQU   XSTAB1
@NM00077 EQU   RBBASIC+8
@NM00076 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00075 EQU   RBPRFX
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00049 EQU   IDAPLH+265
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSLRBA EQU   IDAPLH+244
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00048 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHISPLP EQU   IDAPLH+196
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00047 EQU   IDAPLH+172
@NM00046 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHAMB   EQU   IDAPLH+108
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00045 EQU   IDAPLH+43
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHUCODE EQU   PLHJCODE
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHUPECB EQU   PLHJORBA
PLHDSIDA EQU   IDAPLH+24
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHVAMB  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHSLVLD EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00044 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHIWAIT EQU   PLHFLG2
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
PLHSR    EQU   PLHFLG1
PLHDRPND EQU   PLHFLG1
PLHASYRQ EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHID    EQU   IDAPLHDR
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00041 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00040 EQU   IEZJSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00039 EQU   CVTFIX+248
@NM00038 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
BIBVSRTP EQU   IDABIB+104
BIBASCB  EQU   IDABIB+100
BIBDDNM  EQU   IDABIB+92
BIBSTPNM EQU   IDABIB+84
BIBJOBNM EQU   IDABIB+76
BIBSIOAP EQU   BIBRTNS+12
BIBASYRT EQU   BIBRTNS+8
BIBCEAPP EQU   BIBRTNS+4
BIBVGTT  EQU   IDABIB+56
BIBPSAB  EQU   IDABIB+52
BIBCSL   EQU   IDABIB+48
BIBWSHD  EQU   IDABIB+44
BIBVCRT  EQU   IDABIB+40
BIBHEBFQ EQU   IDABIB+36
BIBHEBPT EQU   IDABIB+32
BIBPRSPH EQU   IDABIB+28
BIBSPHPT EQU   IDABIB+24
BIBPAMBL EQU   IDABIB+20
BIBVMT   EQU   IDABIB+12
@NM00037 EQU   IDABIB+5
BIBFLG2  EQU   IDABIB+4
BIBLEN   EQU   BIBHDR+2
@NM00036 EQU   BIBFLG1
BIBVIRT  EQU   BIBFLG1
BIBID    EQU   BIBHDR
AMBLCMB  EQU   IDAAMBL+64
AMBLMIDS EQU   IDAAMBL+42
AMBLNIDS EQU   IDAAMBL+41
@NM00035 EQU   IDAAMBL+40
AMBLNUM  EQU   IDAAMBL+38
AMBLNST  EQU   IDAAMBL+37
@NM00034 EQU   AMBLFLG2
AMBLSTAG EQU   AMBLFLG2
@NM00033 EQU   AMBLFLG2
AMBLCAT  EQU   AMBLFLG1
AMBLUCRA EQU   AMBLFLG1
AMBLSCRA EQU   AMBLFLG1
AMBLSDS  EQU   AMBLVVIC
AMBLUPD  EQU   AMBLFLG1
AMBLCINV EQU   AMBLFLG1
AMBLFULL EQU   AMBLFLG1
AMBLLEN  EQU   IDAAMBL+34
@NM00032 EQU   AMBLSHAR
AMBLWRIT EQU   AMBLSHAR
AMBLCATO EQU   AMBLSHAR
AMBLPRIM EQU   AMBLSHAR
AMBLID   EQU   IDAAMBL+32
@NM00031 EQU   AMBLQ2
@NM00030 EQU   AMBLTYPE
AMBLFIX  EQU   AMBLTYPE
AMBLBASE EQU   AMBLTYPE
AMBLAIX  EQU   AMBLTYPE
AMBLUPGR EQU   AMBLTYPE
AMBLENO  EQU   AMBLVC+1
AMBLVRT  EQU   AMBLVC
AMBLDFR  EQU   AMBLQ
AMBLESDS EQU   AMBLQ
AMBLKSDS EQU   AMBLQ
AMBLUBF  EQU   AMBLQ
AMBLFSTP EQU   AMBLQ
AMBLDDC  EQU   AMBLQ
AMBLDCI  EQU   AMBLIDF+4
AMBLCACB EQU   AMBLIDF
@NM00029 EQU   AMBLEOV+2
AMBLCOMP EQU   AMBLEOV+1
AMBLESET EQU   AMBLEFLG
AMBLWAIT EQU   AMBLEFLG
AMBLACB  EQU   IDAAMBL+8
AMBLSCHN EQU   IDAAMBL+4
AMBLPCHN EQU   IDAAMBL
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00028 EQU   AMBCSWD1+1
@NM00027 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00026 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00025 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00024 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00023 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBSDS   EQU   AMBINFL
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00022 EQU   AMBINFL
@NM00021 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00020 EQU   IDAAMB+38
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00019 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00018 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00017 EQU   AMBFLG0
AMBSWSP  EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBDSB   EQU   IDAAMB+20
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00016 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00015 EQU   ACBINFL2
ACBCBIC  EQU   ACBINFL2
@NM00014 EQU   ACBINFL2
ACBBYPSS EQU   ACBINFL1
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFL1
ACBSCRA  EQU   ACBINFL1
ACBCAT   EQU   ACBINFL1
ACBIJRQE EQU   ACBINFL1
ACBJEPS  EQU   ACBINFL1
@NM00013 EQU   ACBINFL1
ACBLOCK  EQU   ACBEXFG
@NM00012 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00011 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00010 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00009 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00008 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00007 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00006 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00005 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00004 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
SAREG    EQU   SAREGS+8
SACODE   EQU   SAREGS+4
SARTRN   EQU   SAREGS
SAFWRD   EQU   SAVAREA+8
@NM00003 EQU   SAVAREA
ENQRETC  EQU   ENQENTRY+3
ENQRET   EQU   ENQOPT2
@NM00002 EQU   ENQOPT2
ENQDIR   EQU   ENQOPT1
@NM00001 EQU   ENQOPT1
ENQNEW   EQU   ENQOPT1
@NM00074 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00073 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00072 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00071 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00070 EQU   FLCFSA
@NM00069 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00068 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00067 EQU   FLCIOA
@NM00066 EQU   FLCMCLA+15
@NM00065 EQU   FLCMCLA+14
@NM00064 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00063 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00062 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00061 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00060 EQU   FLCPER
@NM00059 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00058 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00057 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00056 EQU   FLCPIILC
@NM00055 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00054 EQU   FLCSVILC
@NM00053 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00052 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00051 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00244 EQU   @RC00239
@RC00589 EQU   @EL00010
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDA0231T,(C'PLS2149',0701,78151)
