         TITLE '*********** IDCVY01:  VERIFY FUNCTION SUPPORT ROUTINE **
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCVY01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCVY01   78.201'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                      /*TSO NON-ZERO FUNCTION END   */
*        /************************************************************/
*        /*                                                          */
*        /*  THIS IS THE CENTRAL SECTION OF THE VERIFY ROUTINE.      */
*        /*  THIS SECTION PERFORMS INITIALIZATION AND TERMINATION    */
*        /*  FUNCTIONS AND ROUTES CONTROL AMONG THE SUB-PROCEDURES.  */
*        /*  ALL EXITS FROM THE VERIFY ROUTINE OCCUR FROM HERE.      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0154
*        OLDERID2 = NEWERID2;                                      0154
         L     @10,@PC00001                                        0154
         L     @15,GDTTR2(,@10)                                    0154
         MVC   @TS00001(95),NEWERID2(@15)                          0154
         MVC   OLDERID2(95,@15),@TS00001                           0154
*        NEWID2 = 'VYST';                                          0155
*                                                                  0155
         MVC   NEWID2(4,@15),@CC00614                              0155
*        IF GDTDBG = NULLPTR                                       0156
*          THEN;                                                   0156
         L     @10,GDTDBG(,@10)                                    0156
         LTR   @10,@10                                             0156
         BZ    @RT00156                                            0156
*          ELSE                                                    0158
*            CALL IDCDB010 (GDTTBL,'VYBG');                        0158
*                                                                  0158
         L     @10,@PC00001                                        0158
         ST    @10,@AL00001                                        0158
         LA    @15,@CC00615                                        0158
         ST    @15,@AL00001+4                                      0158
         MVI   @AL00001+4,X'80'                                    0158
         L     @15,GDTDBG(,@10)                                    0158
         LA    @01,@AL00001                                        0158
         BALR  @14,@15                                             0158
*        /************************************************************/
*        /*                                                          */
*        /*  INITIALIZE THE PRINT ARGUMENT LIST                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0159
*        DDSTRU = ADDR (PRINTTAB);                                 0159
@RT00156 LA    @10,PRINTTAB                                        0159
         ST    @10,DDSTRU                                          0159
*        PRINTTAB = ''B;                                           0160
*                                                                  0160
         XC    PRINTTAB(20),PRINTTAB                               0160
*        /************************************************************/
*        /*                                                          */
*        /*  OPEN THE VSAM DATA SET SPECIFIED ON THE VERIFY COMMAND  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0161
*        CALL OPENPROC;                                            0161
*                                                                  0161
         BAL   @14,OPENPROC                                        0161
*        /************************************************************/
*        /*                                                          */
*        /*  IF THE OPEN WAS SUCCESSFUL, CALL THE VSAM CATALOG TO    */
*        /*  VERIFY THE DATA SET.                                    */
*        /*                                                          */
*        /************************************************************/
*                                                                  0162
*        IF IOCSPTR>0  &  (IOCMSGOP=ON  ×  IOCVRC=116)     /*@OZ32758*/
*          THEN                                                    0162
         L     @10,IOCSPTR                                         0162
         LTR   @10,@10                                             0162
         BNP   @RF00162                                            0162
         TM    IOCMSGOP(@10),B'00100000'                           0162
         BO    @RT00162                                            0162
         CLC   IOCVRC(4,@10),@CF00619                              0162
         BNE   @RF00162                                            0162
@RT00162 DS    0H                                                  0163
*            DO;                                                   0163
*                                                                  0163
*            CALL IDCIOVY0 (GDTTBL,IOCSPTR);                       0164
*                                                                  0164
         L     @10,@PC00001                                        0164
         ST    @10,@AL00001                                        0164
         LA    @05,IOCSPTR                                         0164
         ST    @05,@AL00001+4                                      0164
         MVI   @AL00001+4,X'80'                                    0164
         L     @15,GDTVFY(,@10)                                    0164
         LA    @01,@AL00001                                        0164
         BALR  @14,@15                                             0164
*            RESPECIFY RTNREG RSTD;                                0165
*            TESTRC = RTNREG;                                      0166
         LR    TESTRC,RTNREG                                       0166
*            RESPECIFY RTNREG UNRSTD;                              0167
*            IF TESTRC ^= 0                                        0168
*              THEN                                                0168
         LTR   TESTRC,TESTRC                                       0168
         BZ    @RF00168                                            0168
*                LASTCOND = LASTCC12;                              0169
         L     @10,@PC00001+8                                      0169
         MVC   LASTCOND(2,@10),@CH00570                            0169
*            END;                                                  0170
*          ELSE                                                    0171
*            LASTCOND = LASTCC12;                          /*@Y30SSMK*/
*                                                                  0171
         B     @RC00162                                            0171
@RF00162 L     @10,@PC00001+8                                      0171
         MVC   LASTCOND(2,@10),@CH00570                            0171
*        /************************************************************/
*        /*                                                          */
*        /*  TERMINATION PROCESSING - CLOSE THE VSAM DATA SET        */
*        /*                                                          */
*        /************************************************************/
*                                                                  0172
*        IF GDTDBG = NULLPTR                                       0172
*          THEN;                                                   0172
@RC00162 L     @10,@PC00001                                        0172
         L     @10,GDTDBG(,@10)                                    0172
         LTR   @10,@10                                             0172
         BZ    @RT00172                                            0172
*          ELSE                                                    0174
*            CALL IDCDB010 (GDTTBL,'VYND');                        0174
*                                                                  0174
         L     @10,@PC00001                                        0174
         ST    @10,@AL00001                                        0174
         LA    @15,@CC00620                                        0174
         ST    @15,@AL00001+4                                      0174
         MVI   @AL00001+4,X'80'                                    0174
         L     @15,GDTDBG(,@10)                                    0174
         LA    @01,@AL00001                                        0174
         BALR  @14,@15                                             0174
*        CALL TERMPROC;                                            0175
@RT00172 BAL   @14,TERMPROC                                        0175
*        RESPECIFY RTNREG RSTD;                                    0176
*        TESTRC = RTNREG;                                          0177
         LR    TESTRC,RTNREG                                       0177
*        RESPECIFY RTNREG UNRSTD;                                  0178
*        LASTCOND = MAX (LASTCOND,TESTRC);                         0179
*                                                                  0179
         L     @10,@PC00001+8                                      0179
         LH    @05,LASTCOND(,@10)                                  0179
         CR    @05,TESTRC                                          0179
         BNL   *+6
         LR    @05,TESTRC                                          0179
         STH   @05,LASTCOND(,@10)                                  0179
*        /************************************************************/
*        /*                                                          */
*        /*  ISSUE A COMPLETION MESSAGE IF SOME FUNCTION HAS BEEN    */
*        /*  COMPLETED OR A TERMINATION MESSAGE IF NO FUNCTION COULD */
*        /*  BE PERFORMED.                                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0180
*        IF GDTECT ^= NULLPTR                                      0180
*          THEN                                                    0180
         SLR   @04,@04                                             0180
         L     @15,@PC00001                                        0180
         C     @04,GDTECT(,@15)                                    0180
         BE    @RF00180                                            0180
*            DO;                                           /*@Y30SSMK*/
*              IF LASTCOND > 0                                     0182
*                THEN                                              0182
         CR    @05,@04                                             0182
         BNH   @RF00182                                            0182
*                  DO;                                     /*@Y30SSMK*/
*                    DARGSMOD = UNIVMSG;                   /*@Y30SSMK*/
         L     @14,DDSTRU                                          0184
         MVC   DARGSMOD(3,@14),@CC00610                            0184
*                    DARGSENT = LSCCMSG;                   /*@Y30SSMK*/
         MVI   DARGSENT(@14),X'0F'                                 0185
*                    DARGDBP = ADDR(LASTCOND);             /*@Y30SSMK*/
         ST    @10,DARGDBP(,@14)                                   0186
*                    DARGILP = LENGTH(LASTCOND);           /*@Y30SSMK*/
*                                                                  0187
         MVC   DARGILP(2,@14),@CH00150                             0187
*                    CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU); /*@Y30SSMK*/
         ST    @15,@AL00001                                        0188
         LA    @10,@CF00112                                        0188
         ST    @10,@AL00001+4                                      0188
         LA    @10,DDSTRU                                          0188
         ST    @10,@AL00001+8                                      0188
         MVI   @AL00001+8,X'80'                                    0188
         L     @15,GDTPRT(,@15)                                    0188
         LA    @01,@AL00001                                        0188
         BALR  @14,@15                                             0188
*                  END;                                    /*@Y30SSMK*/
*            END;                                          /*@Y30SSMK*/
*          ELSE                                                    0191
*            DO;                                           /*@Y30SSMK*/
         B     @RC00180                                            0191
@RF00180 DS    0H                                                  0192
*              IF LASTCOND < LASTCC12                              0192
*                THEN                                              0192
         L     @10,@PC00001+8                                      0192
         LH    @10,LASTCOND(,@10)                                  0192
         C     @10,@CF00570                                        0192
         BNL   @RF00192                                            0192
*                  DARGSENT = ENDMSG;                      /*@Y30SSMK*/
         L     @10,DDSTRU                                          0193
         MVI   DARGSENT(@10),X'01'                                 0193
*                ELSE                                              0194
*                  DARGSENT = TERMMSG;                     /*@Y30SSMK*/
*                                                                  0194
         B     @RC00192                                            0194
@RF00192 L     @10,DDSTRU                                          0194
         MVI   DARGSENT(@10),X'03'                                 0194
*              DARGSMOD = UNIVMSG;                         /*@Y30SSMK*/
@RC00192 L     @10,DDSTRU                                          0195
         MVC   DARGSMOD(3,@10),@CC00610                            0195
*              DARGDBP = ADDR(LASTCOND);                   /*@Y30SSMK*/
         L     @15,@PC00001+8                                      0196
         ST    @15,DARGDBP(,@10)                                   0196
*              DARGILP = LENGTH(LASTCOND);                 /*@Y30SSMK*/
*                                                                  0197
         MVC   DARGILP(2,@10),@CH00150                             0197
*              CALL AMSTP011 (GDTTBL,PRTFILE,DDSTRU);      /*@Y30SSMK*/
         L     @10,@PC00001                                        0198
         ST    @10,@AL00001                                        0198
         LA    @15,@CF00112                                        0198
         ST    @15,@AL00001+4                                      0198
         LA    @15,DDSTRU                                          0198
         ST    @15,@AL00001+8                                      0198
         MVI   @AL00001+8,X'80'                                    0198
         L     @15,GDTPRT(,@10)                                    0198
         LA    @01,@AL00001                                        0198
         BALR  @14,@15                                             0198
*            END;                                          /*@Y30SSMK*/
*                                                                  0199
*        /************************************************************/
*        /*                                                          */
*        /*  RETURN TO THE AMS EXECUTIVE                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0200
*        CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);                     0200
@RC00180 L     @10,@PC00001                                        0200
         ST    @10,@AL00001                                        0200
         LA    @15,MODID                                           0200
         ST    @15,@AL00001+4                                      0200
         L     @15,@PC00001+8                                      0200
         ST    @15,@AL00001+8                                      0200
         MVI   @AL00001+8,X'80'                                    0200
         L     @15,GDTEPL(,@10)                                    0200
         LA    @01,@AL00001                                        0200
         BALR  @14,@15                                             0200
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - OPENPROC                               */
*        /*                                                          */
*        /*  FUNCTION - OPEN THE VSAM DATA SET TO BE VERIFIED.       */
*        /*                                                          */
*        /*  INPUT - FUNCTION DEFINITION TABLE                       */
*        /*                                                          */
*        /*  OUTPUT - POINTER TO THE IOCS IS SET.  IF AN ERROR       */
*        /*           OCCURS DURING OPEN, THE RETURN CODE IS SET     */
*        /*           TO INDICATE PROCESSING SHOULD TERMINATE.       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0201
*OPENPROC:  PROCEDURE;                                             0201
*                                                                  0201
@EL00001 L     @13,4(,@13)                                         0201
@EF00001 L     @00,@SIZDATD                                        0201
         LR    @01,@11                                             0201
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0201
         BR    @14                                                 0201
OPENPROC STM   @14,@12,@SA00002                                    0201
*        /************************************************************/
*        /*                                                          */
*        /*  LOCAL DECLARATIONS                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0202
*        DCL OPENLIST BIT(LENGTH(OPNAGL)) BDY(WORD);               0202
*                                      /*STORAGE FOR OPEN ARGUMENT   */
*                                      /*LIST                        */
*                                                                  0203
*        OLDERID2 = NEWERID2;                                      0203
         L     @10,@PC00001                                        0203
         L     @10,GDTTR2(,@10)                                    0203
         MVC   @TS00001(95),NEWERID2(@10)                          0203
         MVC   OLDERID2(95,@10),@TS00001                           0203
*        NEWID2 = 'VYOP';                                          0204
*                                                                  0204
         MVC   NEWID2(4,@10),@CC00628                              0204
*        /************************************************************/
*        /*                                                          */
*        /*  SET THE OPEN ARGUMENT LIST TO ZERO.                     */
*        /*  SET APPROPRIATE FLAGS TO OPEN THE DATA SET FOR          */
*        /*  ENTRY-SEQUENCED CONTROL INTERVAL PROCESSING             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0205
*        OPENLIST = ''B;                                           0205
         XC    OPENLIST(48),OPENLIST                               0205
*        OPNPTR = ADDR (OPENLIST);                                 0206
         LA    OPNPTR,OPENLIST                                     0206
*        OPNOPTOT = ON;                                            0207
*        OPNOPTBK = ON;                                            0208
*        OPNOPTCR = ON;                                            0209
         OI    OPNOPTOT(OPNPTR),B'01010100'                        0209
*        OPNDSOAM = ON;                                    /*@OZ19125*/
         OI    OPNDSOAM(OPNPTR),B'10000000'                        0210
*        OPNIOC = ADDR(IOCSPTR);                                   0211
*                                                                  0211
         LA    @10,IOCSPTR                                         0211
         ST    @10,OPNIOC(,OPNPTR)                                 0211
*        /************************************************************/
*        /*                                                          */
*        /*  PUT THE DD NAME AND PASSWORD (IF PRESENT),      @YL026UE*/
*        /*  OR THE DS NAME AND PASSWORD (IF PRESENT)        @YL026UE*/
*        /*  IN THE OPEN ARGUMENT LIST                       @YL026UE*/
*        /*                                                          */
*        /************************************************************/
*                                                                  0212
*        IF ADDR(IN) ^= 0                                          0212
*          THEN                                                    0212
         L     @10,@PC00001+4                                      0212
         L     @10,FDTPTR(,@10)                                    0212
         LTR   @10,@10                                             0212
         BZ    @RF00212                                            0212
*            DO;                                           /*@YL026UE*/
*            OPNDDN = ADDR(INVAL);                         /*@YL026UE*/
         LA    @02,INVAL(,@10)                                     0214
         ST    @02,OPNDDN(,OPNPTR)                                 0214
*            IF INPLN ^= 0                                         0215
*              THEN                                                0215
         CLI   INPLN(@10),0                                        0215
         BE    @RF00215                                            0215
*                OPNPWA = ADDR(INPAS);                     /*@YL026UE*/
         LA    @10,INPAS(,@10)                                     0216
         ST    @10,OPNPWA(,OPNPTR)                                 0216
*            END;                                          /*@YL026UE*/
*          ELSE                                                    0218
*            DO;                                           /*@YL026UE*/
         B     @RC00212                                            0218
@RF00212 DS    0H                                                  0219
*            DSNAMEVL = INDATVAL;                          /*@YL026UE*/
*                                                                  0219
         L     @10,@PC00001+4                                      0219
         L     @10,FDTPTR+4(,@10)                                  0219
         MVC   DSNAMEVL(44),INDATVAL(@10)                          0219
*            /********************************************************/
*            /*                                              @YL026UE*/
*            /* TEST FOR UNQUALIFIED NAME. IF UNQUALIFIED    @YL026UE*/
*            /* ISSUE UQUAL MACRO TO GET A FULLY QUALIFIED   @YL026UE*/
*            /* NAME                                         @YL026UE*/
*            /*                                              @YL026UE*/
*            /********************************************************/
*                                                                  0220
*            IF INDATFUQ = ON                                      0220
*              THEN                                                0220
         TM    INDATFUQ(@10),B'10000000'                           0220
         BNO   @RF00220                                            0220
*                DO;                                       /*@YL026UE*/
*                DSNAMPTR = ADDR(DSNAMEVL);                /*@YL026UE*/
         LA    @05,DSNAMEVL                                        0222
         ST    @05,DSNAMPTR                                        0222
*                DSNMLEN  = INDATLEN;                      /*@YL026UE*/
*                                                                  0223
         SLR   @05,@05                                             0223
         IC    @05,INDATLEN(,@10)                                  0223
         STH   @05,DSNMLEN                                         0223
*                CALL IDCSAQL0(GDTTBL,DSNAMPTR,DSNMLEN);   /*@YL026UE*/
*                                                                  0224
         L     @10,@PC00001                                        0224
         ST    @10,@AL00001                                        0224
         LA    @05,DSNAMPTR                                        0224
         ST    @05,@AL00001+4                                      0224
         LA    @05,DSNMLEN                                         0224
         ST    @05,@AL00001+8                                      0224
         MVI   @AL00001+8,X'80'                                    0224
         L     @15,GDTQAL(,@10)                                    0224
         LA    @01,@AL00001                                        0224
         BALR  @14,@15                                             0224
*                TESTRC = RTNREG;                          /*@YL026UE*/
         LR    TESTRC,RTNREG                                       0225
*                IF TESTRC ^= 0                                    0226
*                  THEN                                            0226
         LTR   TESTRC,TESTRC                                       0226
         BZ    @RF00226                                            0226
*                    RETURN CODE(LASTCC12);                /*@YL026UE*/
         LA    @15,12                                              0227
         L     @14,@SA00002                                        0227
         LM    @00,@12,@SA00002+8                                  0227
         BR    @14                                                 0227
*                END;                                      /*@YL026UE*/
@RF00226 DS    0H                                                  0229
*            OPNDSN = ADDR(DSNAMEVL);                      /*@YL026UE*/
@RF00220 LA    @10,DSNAMEVL                                        0229
         ST    @10,OPNDSN(,OPNPTR)                                 0229
*            IF INDATPLN ^= 0                                      0230
*              THEN                                                0230
         L     @10,@PC00001+4                                      0230
         L     @10,FDTPTR+4(,@10)                                  0230
         CLI   INDATPLN(@10),0                                     0230
         BE    @RF00230                                            0230
*                OPNPWA = ADDR(INDATPAS);                  /*@YL026UE*/
         LA    @10,INDATPAS(,@10)                                  0231
         ST    @10,OPNPWA(,OPNPTR)                                 0231
*            END;                                          /*@YL026UE*/
*                                                                  0232
@RF00230 DS    0H                                                  0233
*        /************************************************************/
*        /*                                                          */
*        /*  ISSUE THE UOPEN MACRO TO OPEN THE DATA SET              */
*        /*                                                          */
*        /************************************************************/
*                                                                  0233
*        CALL IDCIOOP0 (GDTTBL,OPNAGL);                            0233
*                                                                  0233
@RC00212 L     @10,@PC00001                                        0233
         ST    @10,@AL00001                                        0233
         ST    OPNPTR,@AL00001+4                                   0233
         MVI   @AL00001+4,X'80'                                    0233
         L     @15,GDTOPN(,@10)                                    0233
         LA    @01,@AL00001                                        0233
         BALR  @14,@15                                             0233
*END OPENPROC;                                                     0234
@EL00002 DS    0H                                                  0234
@EF00002 DS    0H                                                  0234
@ER00002 LM    @14,@12,@SA00002                                    0234
         BR    @14                                                 0234
*        /************************************************************/
*        /*                                                          */
*        /*  PROCEDURE NAME - TERMPROC                               */
*        /*                                                          */
*        /*  FUNCTION - PERFORM TERMINATION FUNCTIONS.  CLOSE THE    */
*        /*  VSAM DATA SET OPENED FOR VERIFY PROCESSING.             */
*        /*                                                          */
*        /*  INPUT - IOCS POINTER                                    */
*        /*                                                          */
*        /*  OUTPUT - RETURN CODE IS SET IF AN ERROR OCCURRED        */
*        /*           DURING CLOSE OF THE DATA SET.                  */
*        /*                                                          */
*        /************************************************************/
*                                                                  0235
*TERMPROC:  PROCEDURE;                                             0235
TERMPROC STM   @14,@12,@SA00003                                    0235
*        OLDERID2 = NEWERID2;                                      0236
         L     @10,@PC00001                                        0236
         L     @05,GDTTR2(,@10)                                    0236
         MVC   @TS00001(95),NEWERID2(@05)                          0236
         MVC   OLDERID2(95,@05),@TS00001                           0236
*        NEWID2 = 'VYCL';                                          0237
*                                                                  0237
         MVC   NEWID2(4,@05),@CC00632                              0237
*        /************************************************************/
*        /*                                                          */
*        /*  ISSUE THE UCLOSE MACRO TO CLOSE THE VSAM DATA SET.      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0238
*        CALL IDCIOCL0 (GDTTBL,IOCSPTR);                           0238
*                                                                  0238
         ST    @10,@AL00001                                        0238
         LA    @05,IOCSPTR                                         0238
         ST    @05,@AL00001+4                                      0238
         MVI   @AL00001+4,X'80'                                    0238
         L     @15,GDTCLS(,@10)                                    0238
         LA    @01,@AL00001                                        0238
         BALR  @14,@15                                             0238
*        RESPECIFY RTNREG RSTD;                                    0239
*        TESTRC = RTNREG;                                          0240
         LR    TESTRC,RTNREG                                       0240
*        RESPECIFY RTNREG UNRSTD;                                  0241
*        IF TESTRC ^= 0                                            0242
*          THEN                                                    0242
         LTR   TESTRC,TESTRC                                       0242
         BZ    @RF00242                                            0242
*            RETURN CODE(LASTCC04);                                0243
         LA    @15,4                                               0243
         L     @14,@SA00003                                        0243
         LM    @00,@12,@SA00003+8                                  0243
         BR    @14                                                 0243
*          ELSE                                                    0244
*            RETURN CODE(LASTCC00);                                0244
*                                                                  0244
@RF00242 SLR   @15,@15                                             0244
         L     @14,@SA00003                                        0244
         LM    @00,@12,@SA00003+8                                  0244
         BR    @14                                                 0244
*END TERMPROC;                                                     0245
*END IDCVY01                                                       0246
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (AMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (AMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (AMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (IDCCSVY )                                        *
*;                                                                 0246
@DATA    DS    0H
@CH00150 DC    H'2'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@SA00003 DS    15F
@AL00001 DS    3A
IDCVY01  CSECT
         DS    0F
@CF00112 DC    F'0'
@CF00570 DC    F'12'
@CH00570 EQU   @CF00570+2
@CF00619 DC    F'116'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
DSNAMPTR DS    A
LISTPTR  DS    A
DSNMLEN  DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
PRINTTAB DS    CL20
DSNAMEVL DS    CL44
OPENLIST DS    BL48
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCVY01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00614 DC    C'VYST'
@CC00615 DC    C'VYBG'
@CC00620 DC    C'VYND'
@CC00628 DC    C'VYOP'
@CC00632 DC    C'VYCL'
@CC00610 DC    C'UV0'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
MODID    DC    CL4'VY01'
FIXAREA  DS    CL150
         ORG   FIXAREA
@NM00037 DC    150X'00'
         ORG   FIXAREA+150
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
OPNPTR   EQU   @03
TESTRC   EQU   @04
RTNREG   EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSAQL0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IDCIOVY0 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCMSGOP EQU   IOCMSG
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCVRC   EQU   IOCTTR
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNPWA   EQU   OPNAGL+12
OPNDSN   EQU   OPNAGL+16
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNDSOAM EQU   OPNDSO
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGFLGS EQU   DARGLIST+19
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
IN       EQU   0
INPLN    EQU   IN
INPAS    EQU   IN+1
INVAL    EQU   IN+10
INDAT    EQU   0
INDATPLN EQU   INDAT
INDATPAS EQU   INDAT+1
INDATFLG EQU   INDAT+10
INDATFUQ EQU   INDATFLG
INDATLEN EQU   INDAT+20
INDATVAL EQU   INDAT+21
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTECT   EQU   GDTTBL+188
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FDTVERB  EQU   FDTTBL
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
INDATMEM EQU   INDAT+12
INDATMLN EQU   INDAT+11
INDATPOS EQU   INDAT+9
INLEN    EQU   IN+9
@NM00036 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00035 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00034 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00033 EQU   ERCNVTAB+4
@NM00032 EQU   ERCNVTAB+3
@NM00031 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00030 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00029 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00028 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00027 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00026 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00025 EQU   DARGFLGS
DARGFULL EQU   DARGFLGS
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGRETP EQU   DARGLIST+4
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00024 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00023 EQU   OPNAGL+43
@NM00022 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00168 EQU   @RC00162
@RF00182 EQU   @RC00180
@RF00215 EQU   @RC00212
@PB00003 EQU   @EL00001
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCVY01,(C'PLS0928',0701,78201)
