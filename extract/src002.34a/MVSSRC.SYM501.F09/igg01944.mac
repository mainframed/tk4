1944     TITLE 'IGG01944-RESTART FROM INCIDENT AND CKREQ RECORDS'
IGG01944 CSECT                                                        *
* CHANGE ACTIVITY = AS FOLLOWS:                                       *
*A000000-999999                                                @Y16X5C0
*A244500,244700,305300-305600                                   SA51078
*A146840,146880,295000                                          SA59179
*C298000-299000                                                 SA59179
*C384000,387000-388000,390000-392000                           @SA67132
*A123000,244000,245200,393000,486000                           @SA67132
*D481000,487000-490000                                         @SA67132
*A123300                                                       @ZA06155
*A009000,040000,042000,078000,080000                           @Y17XAC2
*A093000,094000,103000                                         @Y17XAC2
*A121000-123000,121600,193600                                  @Y17XAC2
*C212000-214000                                                @Y17XAC2
*A214000,408000,409000,504000                                  @Y17XAC2
*A486016,505000                                                @G36XRCU
*C121400,346000                                                @G36XRCU
*D486024-486072,504827-504500                                  @G36XRCU
* PACKAGING ERROR                                              @OZ08378
*C355000-356000                                                @OZ18748
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE-NAME=IGG01944  (TCAM,CHECKPOINT/RESTART)                      *
*                                                                     *
*DESCRIPTIVE-NAME=RESTART FROM INCIDENT AND CHECKREQ RECORDS          *
*                                                                     *
*COPYRIGHT='NONE'                                                     *
*                                                                     *
*STATUS: VERSION 10.0                                          @Y17XAC2
*                                                                     *
*FUNCTION: THIS MODULE SEARCHES THE TERMINAL NAME TABLE FOR LOCAL NCP *
*   ENTRIES.  WHEN ONE IS FOUND THE HIERARCHY BELOW IT IS CASCADED    *
*   CHECKING TRMRSACT AND SETTING TRMREMB FOR ACTIVATE.  IF A RESOURCE*
*   WAS ACTIVE (TRMRSACT= ON) THEN TRMREMB IS TURNED OFF.  THERE IS   *
*   NO CASCADING BELOW A BSC/SS LINE, A (TRMRSACT= OFF), AND A TTE    *
*   WITH AN INVALID TRMSUBST.                                         *
*   THIS MODULE READS THE INCIDENT AND CKREQ RECORDS AND USES THEM TO *
*   RECONSTRUCT THE MCP ENVIRONMENT.  THE TIME IN AN INCIDENT RECORD  *
*   IS COMPARED TO THE TIME IN THE ENVIRONMENT RECORD. IF THE INCIDENT*
*   RECORD IS MORE RECENT, IT IS USED TO UPDATE THE MCP TABLES. IF NOT*
*   ALL OTHER INCIDENT RECORDS ARE IGNORED. THE KEY FIELD IN AN INCI- *
*   DENT TELLS WHY THE CHECKPOINT WAS TAKEN AND WHICH TYPE OF         *
*   INFORMATION IS IN THE RECORD.  INCIDENT CHECKPOINTS ARE  TAKEN    *
*   AS THE RESULT OF CHECKPOINT(IN THE MH), TCHNG, ICHNG(IN AN APPLI- *
*   CATION PROGRAM) OR AN OPERATOR CONTROL COMMAND. CKREQ RECORDS DO  *
*   NOT INCLUDE THE TIME AT WHICH THEY WERE WRITTEN TO DISK. THEY ARE *
*   USED TO SYNCHRONIZE THE INFORMATION IN PROCESS-TYPE TERMINAL TABLE*
*   ENTRIES WITH AN OS CHECKPOINT TAKEN IN AN APPLICATION PROGRAM.    *
*   THE INTRO OPERAND 'CKREQS' INDICATES THE NUMBER OF CKREQ RECORS ON*
*   DISK (A CONSTANT VALUE IS ADDED TO ALLOW FOR DISK ERRORS). ALL    *
*   CKREQ RECORDS ARE READ OFF THE DISK. EACH TTR AND TERMNAME TABLE  *
*   OFFSET IS MOVED INTO THE CKREQ-TTR TABLE LOCATED IN THE CHECK-    *
*   POINT WORK AREA.(A CKREQ RECORD IS ASSOCIATED WITH A PARTICULAR   *
*   PROCESS ENTRY AS LONG AS THE ENTRY IS ACTIVE.) IF THE OFFSET IN A *
*   CKREQ RECORD IS ZERO,THE RECORD HAS NOT BEEN USED. IF IT IS NOT   *
*   ZERO,THE INFORMATION IS USED TO UPDATE THE MCP TABLES PERTAINING  *
*   TO THE PROCESS ENTRY.  START LINE AND STOP LINE OPERATOR          *
*   CONTROL COMMANDS OR APPLICATION PROGRAM MACRO'S FOR WHICH         *
*   INCIDENT RECORDS WERE RECORDED, ARE PROCESSED BY THIS MODULE.     *
*   ALL OTHER OPERATOR CONTROL INCIDENT RECORDS ARE PROCESSED         *
*   BY READY (IEDQND).  WHEN ALL RECORDS ARE READ, A FREEMAIN IS      *
*   ISSUED FOR THE AREA INTO WHICH THE RECORDS WERE READ. JUST BEFORE *
*   THIS MODULE EXITS,IT DETERMINES IF THE LAST LOAD MODULE IS NEEDED *
*   (TO SCAN THE MESSAGE QUEUES). IN ORDER FOR THE MODULE TO BE GIVEN *
*   CONTROL,                                                          *
*   THE LAST MCP CLOSEDOWN WAS ABNORMAL,AND DISK=YES WAS SPECIFIED ON *
*   INTRO. IF A DISK ERROR IS ENCOUNTERED,A WTO ERROR MESSAGE IS      *
*   ISSUED AND THE RECORD IS IGNORED.                                 *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IGG01944                                                     *
*                 PURPOSE SEE FUNCTION LINKAGE - VIA XCTL      @Y17XAC2
*                                                                     *
*INPUT:REGISTER 2 CONTAINS THE ADDRESS OF THE CHECKPOINT WORK AREA.   *
*      REGISTER 7 CURRENT ENTRY IN DCB PARAMETER LIST          @Y17XAC2
*                                                                     *
*   CHECKPOINT DATA SET                                               *
*                                                                     *
*OUTPUT:REGISTER 2 IS NOT CHANGED.                                    *
*                                                                     *
*   THE CHECKPOINT DATA SET IS NOT CHANGED.                           *
*                                                                     *
*   THE MCP TABLES ARE UPDATED TO THE TIME OF THE LAST CHECKPOINT.    *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*                                                                     *
*        IECPCNVT-CONVERTS RELATIVE TRACK ADDRESS TO ABSOLUTE ADDRESS.*
*        SVC 7 (XCTL)                                                 *
*        SVC 35 (WTO)                                                 *
*                                                                     *
*EXITS-NORMAL:THIS MODULE XCTLS TO THE NEXT OPEN MODULE IN THE WHER-  *
*   TO-GO TABLE.                                                      *
*                                                                     *
*EXITS-ERROR:N/A                                                      *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   AVT(AVTBIT1,AVTBIT3,AVTCKPTB,AVTCLRHI,AVTDISKN,AVTNCKPR,AVTOPTPT, *
*       AVTRNMPT)                                                     *
*   CHECKPOINT WORK AREA                                              *
*   QCB                                                               *
*   DCB                                                               *
*   TERMINAL TABLE                                                    *
*   INVITATION LIST                                                   *
*   OPTION TABLE                                                      *
*   CVT                                                               *
*                                                                     *
*                                                                     *
*                                                                     *
*ATTRIBUTES:REENTERABLE                                               *
*                                                                     *
*NOTES: RESTRICTIONS -- NAME                                   @Y17XAC2
*       REGISTER CONVENTIONS -- STANDARD CHECKPOINT CONVETIONS @Y17XAC2
*       PATCH LABEL -- ZAPAREA                                 @Y17XAC2
*       MODULE TYPE -- PROCEDURE PROCESSER ASSEMBLER XF        @Y17XAC2
*       MDOULE SIZE -- MAXIMUM 2K                              @Y17XAC2
*   THE OPERATION OF THIS MDOULE DEPENDS UPON AN INTERNAL REPRE-      *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         SPACE 3
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0                        TTR OF RECORD BEING WRITTEN
R1       EQU   1                        ADDR-TERM ENTRY
R2       EQU   2                        ADDR-CKPT WORK AREA
R3       EQU   3                        INDEX-OPT TBL
R4       EQU   4                        INCREMENT-OPT TBL LOOP
RLVLTTE  EQU   4                                               @Y17XAC2
R5       EQU   5                        COMPARAND-OPTTBL LOOP
R6       EQU   6                        ADDR-OPT LENGTH TBL
R7       EQU   7                        ADDR-QCB,OPTION TBL
RQCB     EQU   7                        BASE FOR QCB
R8       EQU   8                        NO.CKREQ RECORDS ON A TRACK
RTERM    EQU   8                        BASE FOR TERM ENTRY
RAVT     EQU   9                        ADDR-AVT
R10      EQU   10                       INDEX-NO.CKREQ RECORDS
RDCB     EQU   10                       BASE FOR DCB
REGTABLT EQU   10                                              @Y17XAC2
R11      EQU   11                       ADDR-DISK RECORD
R12      EQU   12                       BASE REG
R13      EQU   13                       OFFSET TO OPT ENTRY
*                                       BRANCH REG
R14      EQU   14                       LENGTH -OPT ENTRY
R15      EQU   15                       ADDR-OPTION ENTRY
         SPACE 3
         BALR  R12,0                    SET UP BASE REG
         USING *,R12
IGG01944 IEDHJN QMG00                                            S99240
         SPACE
         USING IEDNTRM,RTERM            BASE FOR TERMNAME TABLE@Y17XAC2
         USING IEDQAVTD,RAVT            BASE FOR AVT
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA
         USING IEDQCDRD,R11             BASE FOR DISK RECORD
         USING IHADCB,RDCB                                       S22024
         USING FORCORE,R4               OPEN WORK AREA DSECT   @G36XRCU
         L     R4,FOUR(R8)              ADDR OF OPEN WORK AREA @G36XRCU
         L     RDCB,DXUDCBAD            CURRENT DCB ADDRESS    @G36XRCU
         DROP  R4                                              @G36XRCU
         L     R2,DCBIOBAD              GET CURRENT WORKAREA ADDRS22024
         LM    R14,R11,CKPSAVE1+12      LOAD REGS BY CKPT OPEN @Y17XAC2X
                                        MODULE                 @Y17XAC2
         TM    AVTSAVTF,AVTVTMCP        IF NOT IN 3705 ENVIRON @Y17XAC2
         BO    GETENTRY                 THEN DO NOT PROCESS AND@Y17XAC2
*                                       CONTINUE               @Y17XAC2
QMG0405  EQU   *                                               @Y17XAC2
         LM    R14,R11,CKPSAVE1+12      GET REGS INITIALIZED BY        X
                                        FIRST CKPT OPEN MUDULE
         LA    R14,CKPINRNO             RECORDS ON FIRST TRK   @SA67132
         SR    R1,R1                    CLEAR FOR IC           @SA67132
         IC    R1,CKPINCNT              GET COUNT OF INCIDENTS @SA67132
         BCTR  R1,R0                    DECREMENT INCIDENT     @ZA06155
*                                        COUNT BY ONE          @ZA06155
         L     R15,CKPTTRIN-1           FIRST RECORD ADDRESS   @SA67132
         EJECT                                                 @Y17XAC2
FINDLAST EQU   *                                               @SA67132
         BAL   R13,QMG9905              GET NEXT RECORD ADDRESS@SA67132
         LR    R15,R0                   SAVE RECORD ADDRESS    @SA67132
         BCT   R1,FINDLAST              RELOOP                 @SA67132
         ST    R0,AVTPARM               SAVE LAST RECORD ADDR+1@SA67132
         SPACE 3
*THE LATEST TOTAL ENVIRONMENT RECORD HAS BEEN USED TO UPDATE THE
*TAM TABLES. USE THE INCIDENT RECORDS TAKEN AFTER THE TOTAL TO
*UPDATE THE TABLES FURTHER.
         SPACE
         L     R0,CKPTTRLI-1            TTR OF LAST  INCIDENT RCD  0818
         MVC   CKPTRKLN,CKPSECLI        DATA LENGTH PRECEDING      0416X
                                        LAST INCIDENT RECORD       0416
         LA    R14,CKPIPERT             NO.INCIDNTS PER TOTAL TRK  0818
         CLC   CKPTTRIN(2),CKPTTRLI     CHECK FOR RCD ON 1ST TRK   0818
         BNE   QMG05                    BRANCH IF NOT ON 1ST TRK   0818
         LA    R14,CKPINRNO             COUNT OF INC-1ST TRK       0820
QMG05    EQU   *                                                   0818
         BAL   R13,QMG98                GET NEXT RECORD ON TRACK   0416
         ST    R0,CKPSAVE1+4            SAVE 1ST INC RCD PROCESSED 0925
         B     QMG15                    SKIP CHECK 1ST TIME AROUND 0928
QMG10    EQU   *
         C     R0,CKPSAVE1+4            CHECK FOR 1ST INC-WRAPPED  0928
         BE    QMG45                    BRANCH IF WRAPPED TO BEGIN 0928
QMG15    EQU   *                                                   0928
         BAL   R13,QMG50                READ INCIDENT RECORD
         USING IEDQCDRD,R11
         CLC   CDRDATE(8),CKPDATIM      COMPARE TIME OF INC., TOTAL
         BNH   QMG45                    BRANCH IF INCIDENT NOT MORE    X
                                        RECENT THAN TOTAL
         OI    CKPFLAGS,CKPOPCRD        INDICATE TO READY ROUTINE  0118X
                                        THAT THERE IS INCIDENT RCD 0118
         TM    AVTBIT3,AVTSTAYN         CHECK FOR SCAN SPECIFIED   0118
         BO    QMG45                    BRANCH IF NO SCAN SPECIFIED0118
         CLI   CDRKEY,CDROPC            CHECK FOR OPERATOR CONTROL
         BE    QMG36                    BRANCH IF FROM OP CONTROL  1028
         EJECT                                                 @Y17XAC2
*UPDATE SEQUENCE NUMBERS FROM  CHECKPT AND TCHNG MACROS
         SPACE
         LH    R1,CDROFFS               GET TERM OFFSET FROM RCD   1028
         BAL   R13,QMG9205              GET TERM ENTRY ADDRESS     1028
         USING IEDQQCB,R7               BASE FOR QCB
         L     R7,TRMDESTQ-1            ADDRESS OF QCB FOR TERM    0115
         TM    TRMSTATE,TRMLOG          PROCESS ENTRY           SA59179
         BM    QMG18                    YES,UPDATE FIELDS       SA59179
         TM    QCBDSFLG,QCBDISK         CHECK FOR DISKQUEUES       0115
         BZ    QMG20                    BRANCH IF CORE ONLY        0115
QMG18    EQU   *                                                SA59179
         MVC   TRMINSEQ(4),CDRSEQIN     UPDATE SEQUENCE NUMBERS    1028
QMG20    EQU   *                                                   1110
         B     QMG10                    READ NEXT INCIDENT RCD     1110
         SPACE 2                                               @Y17XAC2
*INCIDENT RECORD WAS THE RESULT OF AN OPERATOR CONTROL CMD. IF CMD IS
*IS START LINE OR STOP LINE SET UP FIELDS IN QCB FOR LINE OPEN TO
*RECOGNIZE INSTEAD OF LETTING OPERATOR CONTROL REPROCESS THE COMMAND629
         SPACE
QMG36    EQU   *                                                   0629
         SR    R4,R4                    CLEAR                      0629
         CLI   CDROPCB+CKPOCODE,OCSTOPL STOP LINE COMMAND        S99240
         BE    QMG37                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCODE,OCSTARTL START LINE COMMAND      S99240
         BE    QMG3605                  YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCODE,OCVARY  VARY COMMAND             S99240
         BNE   QMG20                    NO, READ NEXT INCIDENT   S99240
         CLI   CDROPCB+CKPOCSWC,OCX11   VARY OFFTP COMMAND       S99240
         BE    QMG37                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCSWC,OCX12   VARY OFFTP HALT COMMAND  S99240
         BE    QMG37                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCSWC,OCX18   VARY ONTP COMMAND        S99240
         BNE   QMG20                    NO, READ NEXT INCIDENT   S99240
QMG3605  EQU   *                        START LINE COMMAND       S99240
         LA    R4,LCBRECVN              SET UP SWITCH FOR START LIN0629
QMG37    EQU   *                                                   0629
         SR    R5,R5                    CLEAR                      0716
         IC    R5,CDROPCB+CKPOCREL      GET BINARY RELATIVE LINE NO0716
         L     R15,AVTRNMPT             ADDR OF TERMNAME TABLE     0716
         USING IEDQTNTD,R15             BASE FOR TERMNAME TABLE    0716
         LH    R6,TNTLEN                NUMBER OF ENTRIES IN TABLE 0629
         EJECT                                                 @Y17XAC2
*BEGINNING OF LOOP THROUGH TERMNAME TABLE TO FIND ENTRIES FOR THIS 0629
*COMMAND
         SPACE
QMG38    EQU   *                                                   0629
         LR    R1,R6                    GET TERM OFFSET            0629
         BAL   R13,QMG9205              GET ADDR OF TERM ENTRY     0716
         TM    TRMSTATE,X'40'           CHECK FOR TLIST            0715
         BO    QMG39                    BRANCH IF TLIST-HAS NO DCB 0715
         TM    TRMDSORG,TRMLGB          IS THIS A GROUP ENTRY    S22024
         BO    QMG39                    YES, HAS NO QCB - SKIP ITS22024
         TM    TRMSTATE,TRMPROC         TEST FOR TRMPROC ON    @Y17XAC2
         BO    QMG3805                  IF ON BRANCH           @Y17XAC2
         TM    TRMSTATE,TRMPREF         TEST FOR TRMPREF ON    @Y17XAC2
         BNO   QMG3805                  IF OFF BRANCH          @Y17XAC2
         CLI   TRMTYPE,TRMSSCP          COMPARE FOR SSCP LINE  @Y17XAC2
         BE    QMG39                    IF YES BRANCH          @Y17XAC2
QMG3805  EQU   *                                               @Y17XAC2
         L     R7,TRMDESTQ-1            ADDR OF QCB                0629
         USING IEDQQCB,R7                                          0630
         L     R10,QCBDCBAD-1           ADDR OF QCBS DCB           0629
         CLC   DCBDDNAM,CDROPCB+CKPOCNAM CHECK DDNAME WITH COMMAND 0720
         BE    QMG40                    BRANCH IF EQUAL            0629
QMG39    EQU   *                                                   0629
         BCT   R6,QMG38                 SUB FROM COUNT OF ENTRIES  0629
         EJECT                                                 @Y17XAC2
*END OF LOOP THROUGH TERMNAME TABLE ENTRIES                        0629
         SPACE 3
         B     QMG10                    GET NEXT INCIDENT RECORD   0629
QMG40    EQU   *                                                   0629
         LTR   R5,R5                    CHECK FOR RELATIVE LINE NO.0716
         BZ    QMG41                    BRANCH IF NONE             0629
         EX    R5,QMGCOMPR              CHECK LINE NO IN QCB WITH  0716X
                                        LINE NO. IN COMMAND        0629
         BNE   QMG39                    BRANCH IF NOT EQUAL        0629
QMG41    EQU   *                                               @Y17XAC2
         TM    TRMSTATE,TRMPROC         TEST FOR TPROCESS      @Y17XAC2
         BO    QMG43                    YES,BRANCH OUT         @Y17XAC2
         TM    TRMSTATE,TRMPREF         TEST FOR TPREF ZERO    @Y17XAC2
         BZ    QMG43                    IF YES BRANCH          @Y17XAC2
         TM    TRMSTATE,TRMLINE         CHECK FOR LINE TTE     @Y17XAC2
         BO    QMG44                    IF NOT BRANCH TO GETOUT@Y17XAC2
         B     QMG39                    BRANCH TO LOOP THRU    @Y17XAC2
QMG43    EQU   *                                               @Y17XAC2
         STC   R4,QCBLINK                                      @Y17XAC2
         B     QMG39                    BRANCH                 @Y17XAC2
QMG44    EQU   *                                               @Y17XAC2
         LTR   R4,R4                    TEST FOR START LINE    @Y17XAC2
         BNZ   QMG4405                  IF NOT ZERO SET REMB ON@Y17XAC2
         NI    TRMBYTE2,X'FF'-(TRMREMB) TURN REMB OFF          @Y17XAC2
         B     QMG39                    BRANCH BACK            @Y17XAC2
QMG4405  EQU   *                                               @Y17XAC2
         OI    TRMBYTE2,TRMREMB         TURN REMB ON           @Y17XAC2
         B     QMG39                    BRANCH BACK            @Y17XAC2
         EJECT                                                 @Y17XAC2
*THE ENVIRONNENT AND INCIDENT CHECKPOINT RECORDS HAVE BEEN USED TO
*UPDATE THE TCAM TABLES. NOW READ THE CKREQ RECORDS(IF ANY) AND USE
*THEM. THESE RECORDS ARE USED REGARDLESS OF WHETHER THEY WERE TAKEN
*BEFORE OR AFTER THE ENVIRONMENT RECORD.
         SPACE
QMG45    EQU   *
         SR    R10,R10                  CLEAR
         IC    R10,CKPCKRQS             VALUE OF INTRO OP.-CKREQS
         LTR   R10,R10                  CHECK FOR ZERO
         BZ    QMG80                    BRANCH IF NO CKREQ RECORDS
         LA    R10,CKPCKRNO(0,R10)      NO. EXTRA RECRDS
         L     R0,CKPTTRCR-1            GET TTR OF FIRST CKREQ
         LA    R14,CKPCRRNO             COUNT OF CKREQ RCDS-1ST TRK0824
         MVC   CKPCTTRC(4),CKPCTTRB     INITIALIZE CURRENT CKREQ-TT
         OI    CKPFLAGS,CKPOPNCR        TURN OF OPN CKREQ FLAG
         SPACE 3
*BEGINNING OF LOOP THROUGH CKREQ RECORDS
         SPACE
*CONVERT RELATIVE TTR TO ABSOLUTE DISK ADDRESS AND READ THE RECORD
*(CKREQ OR INCIDENT)
         SPACE
QMG50    EQU   *
         ST    R0,AVTDOUBL              SET UP TTR             @SA67132
         CLC   AVTDOUBL+1(3),AVTPARM+1  CHECK FOR LAST RECORD  @SA67132
         BNL   LASTREC                  LAST REC ALREADY READ  @SA67132
*                                        RESET TO FIRST RECORD @SA67132
         STM   R0,R15,CKPSAVE2          SAVE REGS                  0419
         L     R12,CKPSAVE1+8           GET ADDRESS OF IGG019Q8    0419
         OI    CKPFLAGS,CKPOPNIN        INDICATE FROM 1944      SA51078
         BAL   R14,28(R12)             BRANCH TO IGG019Q8-READ RCD 0419
         NI    CKPFLAGS,AVTEFF-CKPOPNIN RESET FLAG              SA51078
         LM    R0,R15,CKPSAVE2         RESTORE REGS                0419
         LTR   R15,R15                 CHECK FOR END OF DATA SET   0419
         BZ    QMG5106                 BRANCH IF NOT END           0504
LASTREC  EQU   *                                               @SA67132
         LA    R13,QMG10                SET RETURN ADDRESS         0419
         B     QMG9903                  START WITH 1ST INCIDENT RCD0419
QMG5106  EQU   *                                                   0419
         L     R11,CKPEXCP              GET ADDRESS OF RECORD
         TM    CKPECB,X'7F'             CHECK FOR DISK ERROR
         BNO   QMG90                    BRANCH IF ERROR
QMG5107  EQU   *                                                   0416
         TM    CKPFLAGS,CKPOPNCR        CHECK RECORD TYPE
         BZ    QMG98                    BRANCH IF INCIDENT         0416
         EJECT                                                 @Y17XAC2
*FILL IN CKREQ-TTR TABLE IN CHECKPOINT WORK AREA
         SPACE
QMG52    EQU   *
         L     R15,CKPCTTRC             GET CURRENT ENTRY ADDRESS
         MVC   CKPCTTTR(3,R15),CKPSAVE2+1 MOVE TTR TO TABLE        1111
         MVC   CKPCTOFF(2,R15),CDRCKOFF MOVE OFFSET FROM DISK RCD
         MVC   CKPCTSEC(2,R15),CKPTRKLN SAVE DATA ON TRACK         0416
         MVI   CKPCTFLG(R15),0          CLEAR FLAG TO ZERO
         LA    R15,CKPCTTRL(0,R15)      MOVE ADDR TO NEXT ENTRY
         ST    R15,CKPCTTRC             SAVE
         SPACE
         SPACE 3
*DETERMINE TERMINAL TABLE ENTRY ADDRESS
         SPACE
         LH    R1,CDRCKOFF              GET TERM OFFSET FROM CKREQ
         BAL   R13,QMG9205              GET TERMINAL ENTRY
         USING IEDNTRM,R8               BASE FOR TERM ENTRY        0818
         SPACE 3
*UPDATE TERMINAL ENTRY AND QCB
         SPACE
         L     R7,TRMDESTQ-1            ADDRESS OF QCB
         USING IEDQQCB,R7
         TM    TRMSTATE,TRMLOG          PROCESS ENTRY           SA59179
         BM    QMG5205                  YES,UPDATE FIELDS       SA59179
         TM    QCBDSFLG,QCBDISK         CHECK FOR DISK QUEUES
         BZ    QMG55                    BRANCH IF CORE QUEUE ONLY
         MVC   QCBMSGCT(CKPMCTLN),CDRCKMSG MESSAGE COUNT        SA59179
QMG5205  EQU   *                                                SA59179
         MVC   TRMINSEQ(CKPSEQLN),CDRCKIN  SEQUENCE NUMBERS     SA59179
         SPACE 3
*BEGINNING OF LOOP THROUGH PRIORITY LEVEL QCBS
         SPACE
         MVC   QCBQBACK(CKPQBKLN),CDRCKQBC UPDATE QBACK PTR
QMG53    EQU   *
         MVC   QCBDNHDR(CKPQCBLN),CDRCKQCB  UPDATE PRIORITY QCB PTR
         MVC   QCBPQBCK(CKPQBKLN),CDRCKPQB                      SA51078
*                                       UPDATE PRILEVEL QBACK   SA51078
         CLI   QCBPRIPQ,0               CHECK FOR LAST PRIORITY QCB
         BE    QMG55                    BRANCH IF LAST
         LA    R7,QCBPSIZE(,R7)         ADD LENGTH OF PRIORITY QCB
         LA    R11,CKPQCBLN(,R11)       ADDLEN TO RCD POSITION
         B     QMG53                    LOOP
         SPACE
*END OF LOOP THROUGH PRIORITY LEVEL QCBS
         EJECT                                                 @Y17XAC2
QMG55    EQU   *
         TM    TRMSTATE,TRMOPTFN        CHECK FOR OPTION FIELDS
         BZ    QMG65                    BRANCH IF OPTIONS NOT USED
         LA    R11,CDRCKOPT             ADDRESS OF OPTION FIELD
         BAL   R13,QMG93                UPDATE OPTIONS FIELDS
QMG65    EQU   *
         LH    R15,CKPCKRLN             LENGTH OF CKREQ RECORD     0416
         BAL   R13,QMG99                GET TTR OF NEXT CKREQ RECORD
         BCT   R10,QMG50                BRANCH IF NOT END OF CKREQ     X
                                        RECORDS
         SPACE 3
*END OF LOOP THROUGH CKREQ RECORDS
         SPACE 3
*FREE UP THE AREA USED FOR CHECKPOINT RECORDS TO BE READ INTO.
         SPACE
QMG80    EQU   *
         LM    R14,R11,CKPSAVE1+12      RESTORE REGS
         MVC   0(AL2,R8),QMG45ID        ID FOR NEXT LOAD       @G36XRCU
         SPACE 3
*SET UP WHERE-TO-GO TABLE TO XCTL TO NEXT OPEN MODULE
         SPACE
QMG83    EQU   *
         TM    CKPFLAGS,CKPNORML        CHECK FOR COMPLETION TYPE  0416
         BZ    QMG84                    BRANCH IF ABNORMAL COMPLETN0416
         OI    AVTCKELF,AVTWARMN        INDICATE TYPE OF RESTART   0419
QMG84    EQU   *                                                   0416
         NI    CKPFLAGS,X'FF'-CKPOPNCR  CLEAR CKREQ FLAG       @OZ18748
         LA    R8,8(0,R8)               GET NEXT WTG ENTRY
         LA    R7,4(0,R7)               GET NEXT DCB LIST ENTRY
         CLC   0(2,R8),QMGXX            CHECK FOR SAME ENTRY REPETD
         BE    QMG00                    YES, RETURN TO PROCESS ITS22024
         CLC   0(2,R8),QMG0S            CHECK FOR END OF TABLE
         BNE   QMG83                    BRANCH IF NOT END
         LR    R7,R5                    RESET PARM LIST ADDR
         LA    R8,32(0,R6)              RESET WTG TABLE POINTER
QMG85    EQU   *
         CLI   0(R8),0                  CHECK FOR ZEROED ENTRY
         BNE   QMG87                    BRANCH NOT ZERO
         LA    R8,8(0,R8)               GET NEXT WTG ENTRY
         LA    R7,4(0,R7)               GET NEXT DCB
         B     QMG85                    RELOOP                   S99240
         EJECT                                                 @Y17XAC2
*SUBROUTINE TO GET TERMINAL TABLE ENTRY ADDRESS
         SPACE
QMG9205  EQU   *
         L     R15,AVTRNMPT
         STM   R14,R1,CKPSAVE2          SAVE REGS
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         BZ    QMG65                    BRANCH IF NO TERM OFFSET   0928
         BALR  R14,R15                  GET TERM ENTRY
         LR    RTERM,R1                 BASE FOR TERM ENTRY
         SH    RTERM,TRMBCKUP           BACKUP POINTER         @Y17XAC2
         LM    R14,R1,CKPSAVE2          RESTORE REGS
         BR    R13                      RETURN
         SPACE
*END OF SUBROUTINE
         SPACE 3
*UPDATE OPTION FIELDS FOR THIS TERMINAL ENTRY.(REGISTERS BEING USED
*AT THIS TIME ARE 0,2,8,9,11,12,14THIS OPTION TABLE SUBROUTINE USES
*1,3,4,5,6,7,10,13,15).
QMG93    EQU   *
         SR    R6,R6                    INITIALIZE INDEX REG
         SR    R7,R7
         IC    R7,TRMOPNO               COMPARAND-NO. OPTIONENTRIES
         L     R5,AVTOPTPT              ADDR OF OPTION TABLE
         L     R4,4(0,R5)               ADDR OF OPTION LENGTH TABLE
         LH    R1,TRMOPTBL              OFFST TO OPT FOR THIS ENTRY
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         AR    R5,R1                    ADD OFFST TO OPT TABLE ADDR
         SR    R1,R1                    CLEAR
         SR    R3,R3                    CLEAR LENGTH FOR MOVE
         EJECT                                                 @Y17XAC2
*BEGINNING OF LOOP THROUGH OPTION TABLE OFFSETS FOR THIS TERMINAL
         SPACE
QMG94    EQU   *
         LR    R15,R5                   INITIALIZE BEG OPTN ENTRIES
         IC    R1,TRMOPT(R6)            OPTION OFFSET
         CH    R1,QMGNOPT               CHECK FOR UNUSED FIELD
         BE    QMG95                    BRANCH IF UNUSED
         AR    R15,R1                   ADDR OF OPTION ENTRY
         IC    R3,0(R4)                 GET LNGTH OF THIS OPT ENTRY    X
                                        (1 HAS ALREADY BEEN SUB-       X
                                        TRACTED FOR EXECUTE)
         CLI   1(R4),X'D0'              CHECK  OPTION TYPE         1110
         BH    QMG9405                  BRANCH IF NOT ADDRESS TYPE 1110
         CLI   1(R4),X'80'              CHECK OPTION TYPE          1110
         BH    QMG95                    BRANCH IF ADDRESS TYPE     1110
QMG9405  EQU   *                                                   1110
         EX    R3,QMGMOVE1              MOVE OPTIONS TO OPTION TABL
         LA    R11,1(R3,R11)            ADD LENGTH MOVED TO BASE OF    X
                                        DISK RECORD
QMG95    EQU   *
         LA    R4,CKPOPLTL(0,R4)        MOVE TO NEXT OPTION LENGTH     X
                                        TABLE ENTRY
         LA    R6,1(,R6)                ADD 1 TO INDEX
         BCT   R7,QMG94                 SUB 1 FROM NO. OF ENTRIES
         SPACE
*END OF LOOP THROUGH OPTION TABLE OFFSETS
         SPACE 5                                               @Y17XAC2
         BR    R13                      RETURN  FROM SUBROUTINE
         SPACE
*END OF SUBROUTINE
         EJECT                                                 @Y17XAC2
*DETERMINE RELATIVE TTR OF NEXT CKREQ OR INCIDENT RECORD
         SPACE
QMG98    EQU   *                                                   0416
         LH    R15,CKPINCLN             LENGTH OF INCIDENT RECORD  0416
QMG99    EQU   *
         AH    R15,CKPTRKLN             ADD LENGTH OF RCD JUST READ0416
         STH   R15,CKPTRKLN             RESTORE TRACK DATA LENGTH  0416
         LR    R15,R0
         LA    R15,0(,R15)              CLEAR HIGH ORDER BYTE      0820
         LTR   R15,R15                  CHECK FOR 1ST RCD          0820
         BNZ   QMG9905                  BRANCH IF NOT 1ST RCD      0822
QMG9903  EQU   *                                                   0416
         MVC   CKPTRKLN,CKPSECIN        DATA PRECEDING 1ST INCIDNT 0416
         L     R0,CKPTTRIN-1            GET TTR OF 1ST INCIDNT RCD 0822
         LA    R14,CKPINRNO             COUNT OF RCDS ON 1ST TRK   0822
         BR    R13                      RETURN                     0822
QMG9905  EQU   *                                                   0822
         LA    R0,1(0,R15)              GET NEXT RCD ON TRACK
         EX    R15,QMGCOMP2             CHECK FOR END OF TRACK     0820
         BCR   7,R13                    BRANCH IF NOT END OF TRACK 0820
         XC    CKPTRKLN,CKPTRKLN        INITIALIZE DATA LENGTH     0416
         LA    R0,CKP101(0,R15)         GET NEXT TRACK
         IC    R0,QMGONE                INITIALIZE TO 1ST RECORD
         LA    R14,CKPIPERT             COUNT OF INC RCDS ON TRACK 0820
         TM    CKPFLAGS,CKPOPNCR        TEST FOR CKREQ RECORD
         BCR   8,R13                    BRANCH IF INCIDENT
         LA    R14,CKPCPERT             COUNT OF CKREQ RCDS-FULL TK0824
         BR    R13                      RETURN FROM SUBROUTINE
         DROP  R15                      DROP SO R6 MAY BE USED @Y17XAC2
         SPACE 3
QMGNOPT  DC    H'255'                   UNUSED OPTION FIELD INDICA
QMGMOVE1 MVC   0(0,R15),0(R11)          MOVE OPTION FIELDS
QMGCOMPR CLI   QCBRELLN,0               CHECK RELATIVE LINE NO.    0629
QMGCOMP2 CLI   0(R14),0                 USED TO CHECK FOR END OF TK0820
QMGONE   DC    X'1'                     USED TO INITIALIZE TO 1ST      X
                                        RECORD ON TRACK
QMG0S    DC    CL2'0S'                  ID AT END OF WTG TABLE
IEDNMG   DC    CL8'IEDNMG'              MESSAGE MODULE NAME  * @SA67132
DSKCKREQ EQU   32                       OFFSET TO ERR MESSAGE* @SA67132
DSKINCID EQU   36                       OFFSET TO ERR MESSAGE* @SA67132
QMGXX    DC    CL2'44'                  ID OF THIS LOAD      *   S99240
QMG45ID  DC    CL2'45'                  ID FOR NEXT LOAD       @G36XRCU
FOUR     EQU   4                        OFFSET                 @G36XRCU
         EJECT                                               * @Y17XAC2
************************************************************** @Y17XAC2
*                                                            * @Y17XAC2
*        DEFINITELY IN 3705 ENVIRONMENT, NOW GET FIRST TNT   * @Y17XAC2
*        ENTRY AND THEN START TEST FOR SUBORDINATE RESOURCES.* @Y17XAC2
*        IF SO THEN BRANCH AND PROCESS THESE RESOURCES.      * @Y17XAC2
*                                                            * @Y17XAC2
************************************************************** @Y17XAC2
         CNOP  0,4                                           * @G36XRCU
GETENTRY EQU   *                                             * @Y17XAC2
         L     R6,AVTRNMPT              GET ADDRESS OF AVTRNMPT@Y17XAC2
         USING IEDQTNTD,R6                                     @Y17XAC2
         LH    R5,TNTLEN                LOAD NO. OF ENTRIES    @Y17XAC2
         N     R5,AVTCLRHI              CLEAR HI TWO BYTES     @Y17XAC2
         SR    R7,R7                    CLEAR REG7             @Y17XAC2
         IC    R7,TNTENLEN              GET LENGTH OF NAME     @Y17XAC2
         LA    R6,TNTFIRST              GET ADDR OF FIRST ENTRY@Y17XAC2
         AR    R6,R7                    PUT POINTER INREG6     @Y17XAC2
         LA    R7,3(R7)                 BUMP R7 BY LEN OF      @Y17XAC2X
                                        ADDR PORTION OF TNT ENT@Y17XAC2
         ICM   RTERM,7,0(R6)            GET FIRST TNT ENTRY    @Y17XAC2
         SH    RTERM,TRMBCKUP           SUBTRACT FOR NEG PRFX  @Y17XAC2
TESTSUB  EQU   *                                               @Y17XAC2
         TM    TRMSTATE,TRMPROC         TEST FOR TPROCESS      @Y17XAC2
         BO    NEXTTTE                  YES, GET NEXT ENTRY    @Y17XAC2
         TM    TRMSTATE,TRMPREF         TEST, IF 3705 RESRC    @Y17XAC2
         BNO   NEXTTTE                  IF NO BRANCH           @Y17XAC2
         CLI   TRMTYPE,TRMLNCP          COMPARE FOR LNCP       @Y17XAC2
         BE    TESTACT                  IF YES BRANCH          @Y17XAC2
         SPACE 5                                               @Y17XAC2
NEXTTTE  EQU   *                                               @Y17XAC2
         AR    R6,R7                    ADD TNT ENLEN TO REG6  @Y17XAC2
         ICM   RTERM,7,0(R6)            GETS NEXT TTE ENTRY    @Y17XAC2
         SH    RTERM,TRMBCKUP           GETS TO NEG PREFIX     @Y17XAC2
         BCT   R5,TESTSUB               IF MORE ENTRIES BRANCH @Y17XAC2
         B     QMG0405                                         @Y17XAC2
         EJECT                                                 @Y17XAC2
*XCTL TO NEXT MODULE
QMG87    EQU   *
         LA    R15,CKPGETML             PARM LIST FOR XCTL
         MVC   6(2,R6),0(R8)            MOVE MODULE ID TO BLDL LIST
         XCTL  DE=(R6),SF=(E,(15))
         SPACE 3
*DISK ERROR
         SPACE
QMG90    EQU   *
         LR    R3,R0                    SAVE TTR
         LA    R15,DSKINCID             GET OFFSET OF ERR MSG  @SA67132
         TM    CKPFLAGS,CKPOPNCR        CHECK FOR CKREQ RCD
         BZ    QMG91                    BRANCHIF INCIDENT
         XC    CDRCKOFF,CDRCKOFF        CLEAR TERM OFFSET          0416
         LA    R15,DSKCKREQ             GET OFFSET OF ERR MSG  @SA67132
QMG91    EQU   *
         MVC   AVTSAVE4(8),IEDNMG       MOVE MSG MODULE NAME   @SA67132
         LOAD  EPLOC=AVTSAVE4                                  @SA67132
         ALR   R15,R0                   GET ADDR OF PTR TO MSG @SA67132
         L     R1,0(R15)                GET ADDR OF MESSAGE    @SA67132
         WTO   MF=(E,(1))
         DELETE EPLOC=AVTSAVE4          DELETE MSG MODULE      @SA67132
         LR    R0,R3                    RESTORE TTR
         B     QMG5107                  GET NEXT RECORD            0416
         EJECT                                                 @Y17XAC2
************************************************************** @Y17XAC2
*                                                            * @Y17XAC2
*        EXAMINE'S THE LOCAL NCP'S TTE, IF IT IS NOT         * @Y17XAC2
*        ACTIVE, RESET REMEMBER BIT AND RETURN.  IF IT IS    * @Y17XAC2
*        ACTIVE, RESET ACTIVE BIT, SET REMEMBER BIT, AND PRO-* @Y17XAC2
*        CESS ANY REMAINING SUBORDINATE RESOURCES.           * @Y17XAC2
*                                                            * @Y17XAC2
************************************************************** @Y17XAC2
         SPACE 2                                               @Y17XAC2
TESTACT  EQU   *                                               @Y17XAC2
         LA    R11,AVTDOUBL             LOAD REG11 ADDR CKPDOUB@Y17XAC2
         USING SWITCH,R11               LOCAL DSECT            @Y17XAC2
         LR    RLVLTTE,RTERM            LVLTTE GETS LNCP ADDR  @Y17XAC2
         TM    TRMBYTE2,TRMRSACT        TEST FOR TRMRSACT ON   @Y17XAC2
         BO    VALIDSUB                 YES, BRANCH            @Y17XAC2
         B     NEXTTTE                  GET NEXT ENTRY         @Y17XAC2
         SPACE 2                                               @Y17XAC2
VALIDSUB EQU   *                                               @Y17XAC2
         OI    TRMBYTE2,TRMREMB         TURN TRMREMB ON        @Y17XAC2
         NI    TRMBYTE2,X'FF'-TRMRSACT  TURN TRMRSACT OFF      @Y17XAC2
         ICM   R1,3,TRMSUBST            LOAD REG1 WITH TRMSUBST@Y17XAC2
         BZ    NEXTTTE                  IF NOT VALID SUBST, BR @Y17XAC2
         L     R15,AVTRNMPT             LOAD SUBROUT ADDR      @Y17XAC2
         BALR  R14,R15                  BRANCH TO SUBROUT      @Y17XAC2
         SH    R1,TRMBCKUP              GET PTR TO NEG PREFIX  @Y17XAC2
         LR    RTERM,R1                 PUT RETURN ADDR IN NXT @Y17XAC2
         EJECT                                                 @Y17XAC2
************************************************************** @Y17XAC2
*                                                            * @Y17XAC2
*        IF THE SUBORDINATE RESOURCE IS ACTIVE, RESET ITS    * @Y17XAC2
*        ACTIVE BIT, AND TURN ITS REMEMBER BIT ON, AND PRO-  * @Y17XAC2
*        CESS ITS SUBORDINATE.  NO SUBORDINATE RESOURCES ARE * @Y17XAC2
*        PROCESSED FOR BSC/START STOP LINES.  IF SUBORDINATE * @Y17XAC2
*        RESOURCE IS NOT VALID, THEN CONTINUE PROCESS WITH   * @Y17XAC2
*        THE COHORT RESOURCE.                                * @Y17XAC2
*                                                            * @Y17XAC2
************************************************************** @Y17XAC2
         SPACE 2                                               @Y17XAC2
         NI    CKPDOUBL,X'FF'-LOOPSW-DONESW TURN BOTH LOOPSW   @Y17XAC2X
                                        AND DONESW OFF         @Y17XAC2
FINDSUB  EQU   *                                               @Y17XAC2
         TM    CKPDOUBL,DONESW          TEST FOR DONESW ON     @Y17XAC2
         BO    NEXTTTE                  YES, RETURN            @Y17XAC2
         TM    TRMBYTE2,TRMRSACT        TEST FOR TRMRSACT ON   @Y17XAC2
         BZ    CHRTPROC                 NO, BRANCH             @Y17XAC2
         OI    TRMBYTE2,TRMREMB         ELSE TURN TRMREMB ON   @Y17XAC2
         NI    TRMBYTE2,X'FF'-(TRMRSACT) TURN TRMRSACT OFF     @Y17XAC2
         CLI   TRMTYPE,TRMNSDLC         TEST FOR BSC LINE      @Y17XAC2
         BE    BSCCOHRT                 YES, BRANCH            @Y17XAC2
         ICM   R1,3,TRMSUBST            LOAD TRMSUBST, TEST    @Y17XAC2
         BNZ   SBSTPROC                 IF VALID BRANCH        @Y17XAC2
         SPACE 2                                               @Y17XAC2
BSCCOHRT EQU   *                                               @Y17XAC2
         ICM   R1,3,TRMCOHRT            LOAD IT WITH COHRT PTR @Y17XAC2
         L     R15,AVTRNMPT             LOAD SUBRT ADDRESS     @Y17XAC2
         BALR  R14,R15                  BRANCH TO SUBRT        @Y17XAC2
         SH    R1,TRMBCKUP              GET PTR TO NEG PREFIX  @Y17XAC2
         LR    RTERM,R1                 GET NEG PREFIX AFTER   @Y17XAC2X
                                        RETURN FROM SUBRT      @Y17XAC2
         B     DNETEST1                 BRNCH TO TEST LOOPSW   @Y17XAC2
         SPACE 2                                               @Y17XAC2
SBSTPROC EQU   *                                               @Y17XAC2
         LR    RLVLTTE,RTERM            LOAD LVL WITH NXT TTE  @Y17XAC2
         L     R15,AVTRNMPT             LOAD SUBRT ADDR        @Y17XAC2
         BALR  R14,R15                  BRANCH AND LINK        @Y17XAC2
         SH    R1,TRMBCKUP              GET NEG PREFIX         @Y17XAC2
         LR    RTERM,R1                 PUT RETURNING ANSW NXT @Y17XAC2
         B     DNETEST1                                        @Y17XAC2
         EJECT                                                 @Y17XAC2
CHRTPROC EQU   *                                               @Y17XAC2
         NI    TRMBYTE2,X'FF'-(TRMREMB) TURN TRMRMEB OFF       @Y17XAC2
         ICM   R1,3,TRMCOHRT            LOAD 1 WITH COHRT PTR  @Y17XAC2
         L     R15,AVTRNMPT             LOAD SUBRT ADDR        @Y17XAC2
         BALR  R14,R15                  BRANCH TO SUBRT        @Y17XAC2
         SH    R1,TRMBCKUP              GET NEG PREFIX         @Y17XAC2
         LR    RTERM,R1                 LOAD NXT WITH ANSWER   @Y17XAC2
         SPACE 4                                               @Y17XAC2
************************************************************** @Y17XAC2
*        DETERMINE WHETHER OR NOT ALL SUBORDINATE RESOURCES  * @Y17XAC2
*        HAVE BEEN PROCESSED.  IF NOT, RETURN TO PROCESS NEXT* @Y17XAC2
*        RESOURCE.  IF ALL SUBORDINATE RESOURCES FOR THE     * @Y17XAC2
*        LOCAL NCP HAVE BEEN PROCESSED, SET UP TP RETURN TO  * @Y17XAC2
*        LOOK AT NEXT LOCAL NCP.  OTHERWISE, CONTINUE TO FIND* @Y17XAC2
*        AND PROCESS NEXT RESOURCE.                          * @Y17XAC2
*                                                            * @Y17XAC2
************************************************************** @Y17XAC2
         SPACE 2                                               @Y17XAC2
DNETEST1 EQU   *                                               @Y17XAC2
         TM    CKPDOUBL,LOOPSW          TEST FOR LOOPSW ON     @Y17XAC2
         BZ    DNETEST2                 NO,BRANCH              @Y17XAC2
         NI    CKPDOUBL,X'FF'-LOOPSW    ELSE TURN LOOPSW OFF   @Y17XAC2
         B     FINDSUB                  BRANCH AND RETURN      @Y17XAC2
         SPACE 2                                               @Y17XAC2
DNETEST2 EQU   *                                               @Y17XAC2
         CLR   RTERM,RLVLTTE            COM NXT AND LVL TTE PTR@Y17XAC2
         BE    CMPLNCP                  EQUAL BR TO ADVANCE    @Y17XAC2
         OI    CKPDOUBL,LOOPSW          TURN LOOPSW ON         @Y17XAC2
         B     DNETEST1                 BRNCH TO TEST FOR      @Y17XAC2
         SPACE 2                                               @Y17XAC2
CMPLNCP  EQU   *                                               @Y17XAC2
         CLI   TRMTYPE,TRMLNCP          COMPARE TYPE AND LNCP  @Y17XAC2
         BNE   CNVRTRSC                 NOT EQUAL BRANCH       @Y17XAC2
         OI    CKPDOUBL,LOOPSW+DONESW   TURN LOOPSW & DONESW ON@Y17XAC2
         B     DNETEST1                 BRANCH TO TEST         @Y17XAC2
         EJECT                                                 @Y17XAC2
************************************************************** @Y17XAC2
*                                                            * @Y17XAC2
*        COHORTLOOK FINDS THE NEXT HIGHER RESOURCE OF THE    * @Y17XAC2
*        CURRENT RESOURCE THAT IS BEING PROCESSED.           * @Y17XAC2
*                                                            * @Y17XAC2
************************************************************** @Y17XAC2
         SPACE 2                                               @Y17XAC2
CNVRTRSC EQU   *                                               @Y17XAC2
         LA    REGTABLT,TABLETTE        SET TABLE ADDRESS      @Y17XAC2
LOOKTTE  EQU   *                                               @Y17XAC2
         CLC   ZER0(AL1,REGTABLT),TRMTYPE COMPARE TTE TYPE     @Y17XAC2
         BE    LOOKTTE1                 EQUAL,CHCK 2ND BYTE    @Y17XAC2
         LA    REGTABLT,TABSIZE(REGTABLT) BUMP TO NEXT ENTRY   @Y17XAC2
         B     LOOKTTE                                         @Y17XAC2
         SPACE 2                                               @Y17XAC2
LOOKTTE1 EQU   *                                               @Y17XAC2
         CLI   TRMTYPE,TRMPSNA          CHCK IF PRESNA TERM    @Y17XAC2
         BNE   TTELOOP                  NO,GO TEST COHRT PTR   @Y17XAC2
         TM    TRMBYTE0,TRMGP           CHECK FOR GENERAL POLL @Y17XAC2
         BZ    TTELOOP                                         @Y17XAC2
         LA    REGTABLT,TABSIZE(REGTABLT) BUMP TO GENERAL POLL @Y17XAC2X
                                        TABLE NAME             @Y17XAC2
TTELOOP  EQU   *                                               @Y17XAC2
         LH    R1,TRMCOHRT              PUT COHRT PTR IN REG   @Y17XAC2
TTELOOP1 EQU   *                                               @Y17XAC2
         L     R15,AVTRNMPT                                    @Y17XAC2
         BALR  R14,R15                  GO TO TNT SUBROUT      @Y17XAC2
         SH    R1,TRMBCKUP              GET NEG PREFIX         @Y17XAC2
         CLC   TRMTYPE-IEDNTRM(1,R1),AL1(REGTABLT)             @Y17XAC2X
                                        IF TABLE MATCHES COL2  @Y17XAC2
         BE    CNVRTNXT                 YES,GO TO EXIT         @Y17XAC2
         CLC   TRMTYPE-IEDNTRM(1,R1),AL2(REGTABLT)             @Y17XAC2X
                                        TABLE MATCH COL 3      @Y17XAC2
         BE    CNVRTNXT                 NO GO TO TTELOOP AGAIN @Y17XAC2
         ICM   R1,3,TRMCOHRT-IEDNTRM(R1) INSRT INTO REG1 COHRT @Y17XAC2
         B     TTELOOP1                                        @Y17XAC2
         EJECT                                                 @Y17XAC2
************************************************************** @Y17XAC2
*                                                            * @Y17XAC2
*        MAKE THE HIGHER LEVEL RESOURCE THE 'LEVEL' RESOURCE * @Y17XAC2
*        AND GET COHORT OF THE CURRENT RESOURCE AND CONTINUE * @Y17XAC2
*        WITH SUBORDINATE RESOURCE PROCESSING.               * @Y17XAC2
*                                                            * @Y17XAC2
************************************************************** @Y17XAC2
         SPACE 2                                               @Y17XAC2
CNVRTNXT EQU   *                                               @Y17XAC2
         LR    RLVLTTE,R1               LOAD LVL WITH SUBRT ANS@Y17XAC2
         LH    R1,TRMCOHRT              LOAD WITH PTR ADDR     @Y17XAC2
         L     R15,AVTRNMPT             LOAD SUBRT ADDR        @Y17XAC2
         BALR  R14,R15                  GO TO SUBRT            @Y17XAC2
         SH    R1,TRMBCKUP              GET NEG PREFIX         @Y17XAC2
         LR    RTERM,R1                 PUT PTR IN NXTTTE      @Y17XAC2
         B     DNETEST1                 GO TO TEST LOOPSW ON   @Y17XAC2
         EJECT                                                 @Y17XAC2
TABLETTE EQU   *                        TABLE OF POSS TTE      @Y17XAC2
*                                       TTE TYPE TYPE TO BE FOU@Y17XAC2
         DC    X'18',X'21',X'00'        PUNT          SDLC     @Y17XAC2
         DC    X'20',X'0F',X'00'        NSDLC         NCP      @Y17XAC2
         DC    X'21',X'0F',X'00'        SDLC          NCP      @Y17XAC2
         DC    X'30',X'18',X'00'        LUNT          PUNT     @Y17XAC2
         DC    X'40',X'20',X'00'        PRESNACLUS    NSDLC    @Y17XAC2
         DC    X'48',X'20',X'21'        CTERM         NSDLC(SDL@Y17XAC2
         DC    X'4F',X'20',X'00'        PRESNATERM    NSDLC    @Y17XAC2
         DC    X'4F',X'40',X'00'        PRESNATERM    PRESNACLU@Y17XAC2
         DC    X'00',X'00',X'00'        GRP           0        @Y17XAC2
         SPACE 5                                               @Y17XAC2
         DS    0H                                              @Y17XAC2
TRMBCKUP DC    AL2(IEDQTRM-IEDNTRM)                            @Y17XAC2
ZAPAREA  DC    100X'00'                                        @Y17XAC2
         SPACE 3                                               @Y17XAC2
ZER0     EQU   0                                               @Y17XAC2
AL1      EQU   1                                               @Y17XAC2
AL2      EQU   2                                               @Y17XAC2
TABSIZE  EQU   3                                               @Y17XAC2
L2       EQU   2                                               @Y17XAC2
RLD      EQU   22                       OFFSET TO RLD          @Y17XAC2
RECLNG   EQU   25                       OFFSET TO REC LENGTH   @Y17XAC2
LENG1K   EQU   1                        LENGTH INDICATOR       @Y17XAC2
         SPACE 5                                               @Y17XAC2
SWITCH   DSECT                                                 @Y17XAC2
CKPDOUBL DS    XL1                                             @Y17XAC2
LOOPSW   EQU   X'80'                                           @Y17XAC2
DONESW   EQU   X'40'                                           @Y17XAC2
         EJECT                                                 @Y17XAC2
         TAVTD
         EJECT
FORCORE  DSECT                                                 @G36XRCU
         IECDSECT                                              @G36XRCU
         TCKPD 3330                     MERLIN VERSION             0504
         TTNTD
         TTRMD
         TQCBD
         DCBD  DSORG=TX
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TLCBD
         TCPBD                                                     0819
         END
