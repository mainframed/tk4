         TITLE 'IGG01936 LOAD 2 OF LINE GROUP OPEN'
IGG01936 CSECT
*A-000000-999999                                               @X31X8N0
         SPACE 3
* CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A382550,529800                                                  A48258
*A102000                                                         A42373
*C245000                                                         S21101
*C157000,447000                                                  A42373
*D238000-243000                                                  S21101
*D448500-448800                                                  A42373
*A086000,096000,102000,317000,430000,445000,464000,513600,526000,X01004
*A529000,543000,555000                                           X01004
*C091000,112000,344000-346000,352000,361000,367000-372000,381000-X01004
*C401000,509000                                                  X01004
*D357000-360000                                                  X01004
*A317600,380000,361000,437000,525000                             Y01004
*C440000,447000-449000                                           Y01004
*D382200-382400                                                  Y01004
*A102000,107000                                                  S99228
*A497100-497300                                                  S21903
*C088000,114000,118000,429000,528000,535000,536000,540000,542000,S21903
*C543000                                                         S21903
*A333000,346000                                                 SA65392
*D463220,498000,505000,507000,512000-513000,516000-517000       SA65392
*D524800-525000,529000                                          SA65392
*C006000,011700-011800,102020,245000,317100-317300,317450-317550,X02004
*C345250-345350,345500,345600-345700,526960                      X02004
*D102080-102400,346210-346420                                    X02004
*A393800,526400                                                 OY00530
*A317010                                                       @YA04393
*C004000,020000,023000,029000,046000,047000,096260,288000,344300 Y02027
*C355000,356000,437150,437180,448720,529950,527000               Y02027
*D530000-543600                                                  Y02027
*A096270,385630,385660,443400,444400,525960,525970               Y02027
*A527200-527600,552300                                           Y02027
*A001200                                                       @Z30X8NM
*C004000,004110,306000,344050,403000,437600,448240-448400      @Z30X8NM
*C448560,448720,493000,527000                                  @Z30X8NM
*D307000-308000,311000-312000,344100-344350,345250-345450      @Z30X8NM
*D345650,345750,437690-437750,448320-448360,448600-448640      @Z30X8NM
*D448760-448840,525860,525950,526250,526610,526670             @Z30X8NM
*D390900                                                       @ZA01156
*A390540,394300,526100                                         @XA03965
*D345150,345200                                                @XA09789
*C174000,175000                                                @YA05471
*A177000                                                       @YA05471
*C391600,555070                                                @ZA06161
*C447180                                                       @XA11331
*C333200,C346210,C346630,C526590                               @OZ24288
*               TCAM 10.0 CHANGES                              @G36XRNP
*A096480,303000,361500,544000                                  @G36XRNP
*C096480,096760,096880,145000,152000,155000,170000,178000      @G36XRNP
*C180000,188000,191000,205000,217000,231000                    @G36XRNP
*D086300,096020-096040,520900,522300-523000,529500,529800      @G36XRNP
*C345500,345800,526640-526700                                  @OZ24143
* DUMMY APAR                                                   @OZ27328
*D332000-333600,A346140,D346420,C344750                        @OZ26781
*                                                              @G36XRNP
*A289000,555600                                                @OZ30850
***********************************************************************
*                                                                     *
*  TITLE 'IGG01936' LOAD 2 OF LINE GROUP OPEN                         *
*                                                                     *
*  MODULE NAME = IGG01936 (TCAM,INITIALIZATION)                @G36XRNP
*                                                                     *
*  DESCRIPTIVE NAME = LOAD 2 OF LINE GROUP OPEN                       *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE  LEVEL=10.0                                 @G36XRNP
*                                                                     *
*                                                                     *
*                                                                     *
*FUNCTION/OPERATION - THIS ROUTINE LOCATES A TYPICAL ENTRY IN THEX02004
*   DEVICE CHARACTERISTICS TABLE, AND SETS AN INDEX INTO THE     X02004
*   DEVICE TYPE BRANCH TABLE. IT THEN PROVIDES THE NUMBER OF     X02004
*   CHANNEL COMMAND WORDS (CCW'S) REQUIRED FOR A MINIMUM              *
*   CHANNEL PROGRAM FOR ALL DEVICES.  ADDITIONAL CCW'S ARE            *
*   PROVIDED AS DETERMINED BY EXAMINING THE OPTIONAL FEATURE          *
*   BITS OF THE UCB AND A TYPICAL ENTRY IN THE DEVICE                 *
*   CHARACTERISTICS TABLE FOR THIS PARTICULAR DEVICE                  *
*   IGG01936 ALSO PLACES THE SEND SCHEDULER STCB IN THE STCB          *
*   CHAIN OF EACH DESTINATION QCB FOR THE LINES IN THIS LINE GROUP    *
*   THIS MODULE ALSO PERFORMS SOME ERROR CHECKING TO INSURE           *
*   THAT THE DATA SETS SPECIFIED BY THE 'QUEUES=' PARAMETER           *
*   OF THE TERMINAL MACROS FOR THE LINES IN THIS LINE GROUP           *
*   HAVE INDEED BEEN OPENED OR PROVIDED BY THE USER.                  *
*   THIS EXECUTOR ISSUES GETMAIN REQUESTS FOR ALL LCB'S AND      X02004
*   SCB'S REQUIRED BY EACH LINE GROUP IT OPENS.                  X02004
*                                                                     *
*ENTRY POINTS - THIS ROUTINE IS ENTERED AT IGG01936 VIA AN XCTL       *
*   FROM THE OPEN EXECUTOR IGG01935.  IT MAY ALSO BE RE-ENTERED       *
*   FROM THE RELOOP PORTION OF THIS ROUTINE IF IT IS DETERMINED       *
*   THAT THERE IS ANOTHER LINE GROUP DATA CONTROL BLOCK TO BE         *
*   OPENED AT THIS TIME                                               *
*                                                                     *
*INPUT - THE REGISTERS 5, 6, 7, AND 8 ARE THE INPUT AS FOLLOWS        *
*   5    THE ADDRESS OF THE WTG TABLE PREFIX                     Y02027
*   6 -  THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE.       *
*   7    THE ADDRESS OF THE COPY OF THE CURRENT DCB              Y02027
*   8 -  THE ADDRESS OF THE CURRENT ENTRY IN THE WHERE-TO-GO          *
*        TABLE .                                                      *
*                                                                     *
*OUTPUT - REGISTERS 7 AND 8 WILL BE POSITIONED AT THE NEXT            *
*   ENTRIES IN THE DATA CONTROL BLOCK COPY LIST AND THE          Y02027
*   WHERE-TO-GO TABLE RESPECTIVELY.  LINE CONTROL BLOCKS WILL         *
*   HAVE BEEN BUILT FOR EACH LINE IN THE LINE GROUP AND               *
*   THE SEND SCHEDULER STCB WILL HAVE BEEN BUILT IN EACH              *
*   DESTINATION QCB FOR THIS LINE GROUP.                              *
*                                                              @G36XRNP
*EXTERNAL ROUTINES - NONE                                             *
*                                                                     *
*EXIT NORMAL =                                                 @G36XRNP
*   THIS ROUTINE EXITS VIA AN XCTL TO THE EXECUTOR IDENTIFIED         *
*   BY THE NEXT NON-ZERO ENTRY IN THE WHERE-TO-GO TABLE.              *
*                                                                     *
*EXIT ERROR = NONE                                             @G36XRNP
*                                                              @G36XRNP
*EXTERNAL REFERENCES = SEE BELOW                               @G36XRNP
*                                                              @G36XRNP
*   ROUTINES = NONE                                            @G36XRNP
*                                                              @G36XRNP
*   DATA AREAS = OPEN/CLOSE DATA AREA                          @G36XRNP
*                                                              @G36XRNP
*   CONTROL BLOCKS = AVT                                       @G36XRNP
*                    DCB                                       @G36XRNP
*                    DCT                                       @G36XRNP
*                    DEB                                       @G36XRNP
*                    TTE                                       @G36XRNP
*                    TIOT                                      @G36XRNP
*                    LCB                                       @G36XRNP
*                    QCB                                       @G36XRNP
*                    SCB                                       @G36XRNP
*                    UCB                                       @G36XRNP
*                                                                     *
*   TABLES/WORK AREAS - THE WHERE-TO-GO TABLE CONTAINS THE ID AND     *
*   TTR OF THE REQUIRED OPEN EXECUTORS.  THE WTG TABLE           Y02027
*   PREFIX CONTAINS THE ADDRESS OF A COPY OF EACH DCB            Y02027
*   SPECIFIED IN THE OPEN MACRO INSTRUCTION.  THE DEVICE              *
*   CHARACTERISTICS TABLE CONSISTS OF ENTRIES DESCRIBING              *
*   THE CHARACTERISTICS OF ALL THE TERMINALS IN THE SYSTEM.           *
*                                                              @G36XRNP
*   MACROS = IEDHJN                                            @G36XRNP
*            MODESET                                           @G36XRNP
*            GETMAIN                                           @G36XRNP
*            PGFIX                                             @G36XRNP
*            WAIT                                              @G36XRNP
*            XCTL                                              @G36XRNP
*                                                                     *
*ATTRIBUTES - THIS ROUTINE IS EXECUTED IN THE TRANSIENT AREA          *
*   AS ENABLED, PRIVILEGED, AND RE-ENTRANT.                           *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*
* REGISTER USAGE
*
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDCB     EQU   2                        ADDRESS OF THE CURRENT DCB
RTIOT    EQU   3                        ADDRESS OF THE TIOT
RCORE    EQU   4                        ADDRESS OF DCB WORK AREA
RPAR     EQU   5                        ADDRESS OF FIRST ENTRY IN
*                                         DCB PARAMETER LIST
RWTG     EQU   6                        ADDRESS OF WHERE-TO-GO
*                                         TABLE
RPARC    EQU   7                        ADDRESS OF CURRENT ENTRY IN
*                                         DCB PARAMETER LIST
RWTGC    EQU   8                        ADDRESS OF CURRENT ENTRY IN
*                                         IN WTG TABLE
RAVT     EQU   9                        ADDRESS OF THE AVT
RUCB     EQU   10                       ADDRESS OF THE CURRENT UCB
RDEB     EQU   11                       ADDRESS OF THE DEB
RBASE    EQU   12                       BASE OF THIS ROUTINE
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
*
         USING IHADCB,RDCB
         USING IEDQQCB,RTIOT            QCB DSECT
         USING IEDQAVTD,RAVT
         USING IEDQDEB,RDEB             DEB DSECT
         USING IEDQTNTD,RJ              TERMINAL NAME TABLE DSECT
         USING IEDQTRM,RF               TERMINAL TABLE DSECT     X01004
*
         BALR  RBASE,0                  BASE REG SETUP           S21903
         USING *,RBASE
*
         LA    RBASE,0(RBASE)           CLEAR HIGH BYTE          X01004
IGG01936 IEDHJN RESTART                                          X01004
         L     RJ,4(RWTGC)              RESTORE ADDRESS OF REGISTER
*                                         SAVE AREA
         LM    RE,RDEB,0(RJ)            RESTORE THE REGISTERS SAVED
         LM    RC,RD,52(RJ)             BY THE PREVIOUS LOAD OF OPEN
         CLC   0(TWO,RJ),OPENERP        IS THIS A RETURN FROM THE
*                                         ERROR MODULE
         BE    RECOVER                  YES, BRANCH
         L     RJ,AVTRNMPT              ADDRESS OF THE TERMNAME  X01004
*                                         TABLE                  X01004
         LR    RTIOT,RD                 SAVE UCB ADDRESS         X01004
         LH    RUCB,TNTLEN              LENGTH OF TERMNAME ENTRY X01004
         N     RUCB,AVTCLRHI            CLEAR HI-ORDER HALF WORD X01004
TNTLOOP  EQU   *                                                 X01004
         LR    RF,RUCB                  TERMNAME TABLE OFFSET    X01004
         BALR  RD,RJ                    GET ADDR OF TERM ENTRY   X01004
         USING IEDQQCB,RD                                        X01004
         ICM   RD,AD,TRMDESTQ           GET QCB ADDRESS          X01004
         CLM   RDCB,AD,QCBDCBAD         DOES THIS TERMINAL       Y02027
*                                       BELONG TO THIS DCB       Y02027
         DROP  RD                                                X01004
         BE    OUTLOOP                  BRANCH IF EQUAL          X01004
         BCT   RUCB,TNTLOOP             GET NEXT TNT OFFSET FOR  X01004
*                                         LOOP                   X01004
OUTLOOP  EQU   *                                                 X01004
         LR    RD,RTIOT                 RESTORE UCB ADDRESS      X01004
         SR    RUCB,RUCB                CLEAR TERMINAL COUNT     X01004
         IC    RUCB,TRMCHCIN            DEVICE CHARACTERISTIC    X01004
*                                         INDEX                  X01004
         BCTR  RUCB,ZERO                SUBTRACT 1 FROM INDEX    X01004
         MH    RUCB,AVTDCTLN            MULTIPLY INDEX BY DCT  @G36XRNP
*                                       ENTRY SIZE             @G36XRNP
         L     RCORE,AVTCSTCS           ADDRESS OF THE DEVICE  @G36XRNP
*                                       CHARACTERISTICS TABLE  @G36XRNP
         AR    RCORE,RUCB               ADDR OF TYPICAL ENTRY    X01004
         USING IEDDCT,RCORE             DCT ADDRESSABILITY     @G36XRNP
         CLI   DEVCLASS(RD),GRAPHICS    IS THIS GRAPHICS EQUIPT  X01004
         BE    STRT1936                 YES, BRANCH              X01004
         SR    RF,RF                    CLEAR FOR MODEL CODE     X01004
         IC    RF,MODLCODE(RD)          GET MODEL CODE BITS      X01004
         LA    RTIOT,ALL                MASK FOR MODEL CODE      X01004
         NR    RF,RTIOT                 CLEAR EXTRANEOUS BITS    X01004
         AR    RF,RF                    DOUBLE MODEL INDEX       X01004
         AR    RC,RF                    ADD MODEL INDEX TO THE   X01004
*                                         ADAPTER INDEX          X01004
         SLL   RC,TWO                   MULTIPLY INDEX BY 4      X01004
         CLI   ADAPTYPE(RD),AUDIOCTL    AUDIO LINE               X01004
         BNE   TSTBISC                  NO, BRANCH               X01004
         TM    DCTBYTE2,DCTAUDIO        DO CHARACTERISTICS     @G36XRNP
*                                         INDICATE AUDIO LINE    X01004
         BZ    ERR01                    NO, BRANCH               X01004
TSTBISC  EQU   *                                                 X01004
         TM    ADAPTYPE(RD),BISC        IS THIS A BISC LINE      X01004
         BNO   STRT1936                 NO, BRANCH               X01004
         TM    DCTBYTE2,DCTBISYN        DO THE CHARACTERISTICS @G36XRNP
*                                         INDICATE A BISC LINE   X01004
         BZ    ERR01                    NO, BRANCH               X01004
         EJECT
STRT1936 EQU   *                                                 X01004
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE SETS THE PRELIMINARY SIZE FOR       *
*        CHANNEL PROGRAMS FOR ALL DEVICES IN THIS LINE GROUP      *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LA    RUCB,ONE                 SET INITIAL CCW COUNT    X02004
         L     RJ,FOUR(RWTGC)           ADDR OF OPEN WORK AREA   X01004
         MVI   DXCCW12-1(RJ),AVTEZERO     SET 5041 SWITCH        A42373
         TM    TWO(RD),GRAPHICS         IS THIS A GRAPHICS DEVICE
         BNZ   SETCCWSZ                 YES, BRANCH
         TM    1(RD),X'40'              IS THIS LINE AUTO-POLLED
         BZ    SETCCWSZ                 NO, BRANCH
         TM    0(RD),BSCMULTI           IS THIS A BISC MULTIPOINT
*                                         DEVICE
         BO    SETCCWSZ                 YES, BRANCH
         LA    RUCB,AUTOPOLL(RE,RUCB)   SET THE CHANNEL PROGRAM  S99228
*                                         SIZE FOR ALL AUTOPOLLED
*                                         DEVICES
         B     ENDLOAD2                 GO TO ROUTINE END
SETCCWSZ EQU   *
         LA    RUCB,THREE(RUCB)         PROVIDE 3 CCW'S FOR THE  X01004
*                                         READ-SKIP LOOP
         B     DEVTYPE(RC)              GO TO BRANCH TABLE       S21903
         EJECT
DEVTYPE  EQU   *
         B     SET2260L                 BRANCH FOR A 2260 LOCAL
         B     ERROR                    ERROR ENTRY              S21903
         B     TEST7770                 SET THE 7770 CHANNEL PROGRAM
         B     TEST1050                 BRANCH FOR A 1050
         B     TEST1030                 BRANCH FOR A 1030
         B     TST5060                  BRANCH FOR EITHER A 1050 OR
*                                         A 1060
         B     TEST115A                 TEST FOR AN 83B3
         B     TESTTWX                  BRANCH FOR A TWX
         B     TEST115A                 TEST FOR A 115A
         B     TEST2740                 BRANCH FOR A 2740
         B     T10502                   BRANCH FOR A 2260
         B     TEST2741                 TEST FOR A 2741 DEVICE
         B     ERROR                    48
         B     WTTA2741                 TEST FOR EITHER A WORLD
*                                         TRADE DEVICE OR A 2741
         B     ERROR                    56
         B     ERROR                    INVALID BRANCH INDEX
         B     ERROR                    INVALID INDEX, ERROR
         B     ERROR                    INVALID INDEX, ERROR
         B     ERROR                    INVALID INDEX, ERROR
         B     TESTBISC                 TEST FOR A BISYNC DEVICE
         B     ERROR                    INVALID INDEX, ERROR
         B     TESTBSCD                 TEST FOR A BISC DEVICE
         B     ERROR                    INVALID INDEX, ERROR
         B     TESTBISC                 TEST FOR BISC MULTIPOINT
         EJECT
WTTA2741 EQU   *
         TM    DCTBYTE3,DCTWTTA         IS THIS A WORLD TRADE  @G36XRNP
*                                         TELEGRAPH DEVICE
         BNO   TEST2741                 NO, BRANCH
         LA    RUCB,SIX(RUCB)           ASSIGN 8 CCW'S FOR THE
*                                         CHANNEL PROGRAM SIZE
         B     ENDLOAD2                 GO TO ROUTINE END
TEST2741 EQU   *
         TM    DCTBYTE1,DCT5041         IS THIS A 2741/1050    @G36XRNP
*                                         LINE GROUP
         BO    SET2741                  YES, BRANCH
         TM    DCTBYTE1,DCT2741         IS THIS A TRUE 2741    @G36XRNP
         BNO   DEVCHRER                 NO, BRANCH
         OI    DXCCW12-1(RJ),X'80'      SET FLAG IN OPEN WRKA TO A42373
*                                         INDICATE THAT THIS IS A
*                                         2741 TERMINAL
SET2741  EQU   *
         LA    RUCB,FIVE(RUCB)          INCREASE THE CHANNEL
*                                         PROGRAM SIZE TO 7 CCW'S
         TM    1(RD),X'90'              TEST FOR A DIAL LINE
         BZ    ENDLOAD2                 NO, ASSUME CONTENTION ONLY
         LA    RUCB,2(RUCB)             ADD 2 ADDITIONAL CCW'S FOR
*                                         A DIAL LINE
         B     ENDLOAD2                 TRANSFER CONTROL
TEST1050 EQU   *
         TM    DCTBYTE1,DCT5041         IS THIS A 2741/1050    @G36XRNP
*                                         LINE GROUP
         BO    SET2741                  YES, BRANCH
         TM    1(RD),X'90'              TEST FOR A DIAL LINE
         BZ    T10502A                  NON-DIAL, BRANCH       @YA05471
         LA    RUCB,2(RUCB)             ADD 2 ADDITIONAL CCW'S @YA05471
*                                         FOR A 1050 DIAL LINE
T10502   EQU   *
         LA    RUCB,1(RUCB)             ADD 1 CCW FOR 2260 AND @YA05471
*                                         DIAL 1050            @YA05471
T10502A  EQU   *                                               @YA05471
         TM    DCTBYTE2,DCTSTCTL        TEST FOR STATION CNTRL @G36XRNP
         BNO   DEVCHRER                 NO, BRANCH
         TM    DCTBYTE3,DCTCHECK+DCTCONTN        CHECKING AND  @G36XRNP
*                                       CAPABLE OF CONTINUE
         BNO   DEVCHRER                 NO, BRANCH
         LA    RUCB,5(RUCB)             ADD 5 CCW'S TO THE CHANNEL
*                                         PROGRAM SIZE
         B     ENDLOAD2                 TRANSFER CONTROL
TEST1030 EQU   *
         TM    DCTBYTE2,DCTSTCTL        TEST FOR THE STATION   @G36XRNP
*                                         CONTROL FEATURE
         BNO   DEVCHRER                 NO, BRANCH
         TM    DCTBYTE3,DCTCHECK        TEST FOR CHECKING      @G36XRNP
         BNO   DEVCHRER                 NO, BRANCH
         LA    RUCB,5(RUCB)             ADD 5 ADDITIONAL CCW'S TO
*                                         THE CHANNEL PROGRAM SIZE
         B     ENDLOAD2                 TRANSFER CONTROL
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TST5060  EQU   *
         TM    0(RD),X'01'              TEST FOR A 1050 WITH A TYPE
*                                         3 ADAPTER
         BO    TEST1050                 TEST FOR 1050 FEATURES
         B     TEST1030                 TEST FOR STATION CONTROL
TESTTWX  EQU   *
         TM    DCTBYTE2,DCTTWX          IS THIS A TWX          @G36XRNP
         BNO   DEVCHRER                 NO, BRANCH
         LA    RUCB,SIX(RUCB)           ADD 6 ADDITIONAL CCW'S TO
*                                         THE CHANNEL PROGRAM SIZE
         B     ENDLOAD2                 TRANSFER CONTROL
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TEST2740 EQU   *
         LA    RUCB,5(RUCB)             SET THE PRELIMINARY CHANNEL
*                                         PROGRAM SIZE
         TM    1(RD),X'90'              IS THIS A DIAL LINE
         BZ    ENDLOAD2                 NO, BRANCH
         TM    DCTBYTE2,DCTCONT         IS THIS A CONTENTION   @G36XRNP
         BNO   XMITCTL                  NO, BRANCH
         LA    RUCB,3(RUCB)             ADD 3 ADDITIONAL CCW'S TO
*                                       THE CHANNEL PROGRAM
         B     ENDLOAD2                 GO TO ROUTINE END
XMITCTL  EQU   *
         TM    1(RD),X'04'              DOES THIS DEVICE HAVE
*                                         TRANSMISSION CONTROL
         BNO   DEVCHRER                 NO, BRANCH
         LA    RUCB,2(RUCB)             ADD 2 ADDITIONAL CCW'S TO
*                                         THE CHANNEL PROGRA
         B     ENDLOAD2                 TRANSFER CONTROL
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TEST115A EQU   *
         TM    THREE(RD),WTTADPTR       IS THIS A WORLD TRADE
*                                         TELEGRAPH ADAPTER
         BO    WTTA2741                 YES, BRANCH
         TM    DCTBYTE2,DCTSTCTL        TEST FOR THE STATION   @G36XRNP
*                                         CONTROL FEATURE
         BNO   DEVCHRER                 NO, THEN THERE IS AN ERROR
         LA    RUCB,5(RUCB)             ADD 5 ADDITIONAL CCW'S TO
         B     ENDLOAD2                 TRANSFER CONTROL
TESTBSCD EQU   *
TESTBISC EQU   *
         LA    RUCB,NINE(,RUCB)         GET 9 MORE CCW'S         X02004
*                                         THE CHANNEL PROGRAM SIZE
         B     ENDLOAD2                 GO TO ROUTINE END
SET2260L EQU   *
         LA    RUCB,THREE(RUCB)         ADD 3 ADDITIONAL CCW'S TO
*                                         THE 2260 LOCAL CHANNEL
*                                         PROGRAM
         B     ENDLOAD2                 GO TO ROUTINE END
TEST7770 EQU   *
         LA    RUCB,FIVE(RUCB)          MAKE THE SIZE OF THE 7770
*                                         CHANNEL PROGRAM 7 CCW'S
ENDLOAD2 EQU   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE PLACES THE SEND SCHEDULER STCB      *
*              IN THE STCB CHAIN OF THE DESTINATION QCB           *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         L     RJ,AVTRNMPT              ADDRESS OF THE TERMNAME
*                                         TABLE
         LH    RE,TNTLEN                THE NUMBER OF ENTRIES IN THE
*                                         TERMNAME TABLE
         LA    RF,TNTFIRST              GET THE ADDRESS OF THE
*                                         FIRST ENTRY
         SR    RC,RC                    CLEAR LENGTH REGISTER
          IC   RC,TNTENLEN              LENGTH OF COMPARAND FIELD
TERMAD    EQU  *
         LA    RF,0(RC,RF)              LOCATE THE TERMINAL ENTRY
*                                         ADDRESS FOR THIS TERMINAL
         MVC   AVTGETMN+5(THREE),0(RF)   MOVE THE CURRENT TERMINAL
*                                          ADDRESS INTO A SCRATCH
*                                          AREA
         L     RTIOT,AVTGETMN+4         LOAD THE TERMINAL ADDRESS
         TM    TRMDSORG-IEDQTRM(RTIOT),TRMLGB IS THIS A 3705     S22024
*                                        LINE GROUP ENTRY        S22024
         BO    TERMADL                  YES, SKIP TO NEXT ENTRY  S22024
         L     RTIOT,0(RTIOT)           ADDRESS OF THE DESTINATION
*                                         QCB
         LA    RTIOT,0(RTIOT)           CLEAR THE HIGH ORDER BYTE
*                                         OF THE QCB ADDRESS
         LA    RDCB,0(RDCB)             CLEAR THE HIGH ORDER BYTE
*                                         OF THE DCB ADDRESS
         CLM   RDCB,AD,QCBDCBAD         IS THIS THE SAME DCB     Y02027
         BNE   TERMADL                  GO TO NEXT ENTRY
         SR    RJ,RJ                    CLEAR INDEX REGISTER   @OZ30850
         L     RCORE,AVTGETMN+4         GET CURRENT TTE        @OZ30850
         IC    RJ,TRMCHCIN-IEDQTRM(RCORE) DEVICE               @OZ30850
*                                       CHARACTERISTIC INDEX   @OZ30850
         BCTR  RJ,ZERO                  SUBTRACT 1 FROM INDEX  @OZ30850
         MH    RJ,AVTDCTLN              MULITPLY INDEX BY DCT  @OZ30850
*                                       ENTRY SIZE             @OZ30850
         L     RCORE,AVTCSTCS           ADDRESS OF THE DEVICE  @OZ30850
*                                       CHARACTERISTICS TABLE  @OZ30850
         AR    RCORE,RJ                 ADD DISPLACEMENT TO    @OZ30850
*                                       DCT BASE ADDRESS       @OZ30850
         SR    RJ,RJ                    CLEAR FOR THE RELATIVE LINE
*                                         NUMBER
         IC    RJ,QCBRELLN              GET THE RELATIVE LINE
*                                         NUMBER ASSOCIATED WITH
*                                         THIS LINE
         TM    QCBDSFLG,QCBDISK         DOES THIS TERMINAL ENTRY
*                                         SPECIFY DISK QUEUEING
         BZ    TESTCORE                 NO, BRANCH
         TM    AVTBIT1,AVTDISKN         DOES THE AVT SUPPORT DISK
*                                         QUEUEING
         BZ    ERROR01                  NO, THEN THERE CAN BE NO
*                                         DISK QUEUEING
         TM    QCBDSFLG,QCBREUS         DOES IT SPECIFY REUSABLE
*                                         QUEUEING
         BZ    TNONREUS                 NO, BRANCH
         NC    AVTADEBR+1(THREE),AVTADEBR+1  HAS A REUSABLE MESSAGE
*                                         QUEUES DATA SET BEEN
*                                         OPENED
         BNZ   TESTCORE                 YES, BRANCH
         B     ERROR01                  NO, THEN  IT IS AN ERROR
TNONREUS EQU   *
         NC    AVTADEBN+1(THREE),AVTADEBN+1  HAS A NON-REUSABLE
*                                            MESSAGE QUEUES DATA
*                                         SET BEEN OPENED
         BZ    ERROR01                  NO, BRANCH
TESTCORE EQU   *
         TM    QCBDSFLG,QCBCORE         DOES THIS TERMINAL ENTRY
*                                         SPECIFY CORE QUEUEING
         BZ    GOLOOP                   NO, BRANCH
         NC    AVTTOTNC(FOUR),AVTTOTNC  HAS A CORE QUEUE DATA SET
*                                         BEEN PROVIDED
         BZ    ERROR01                  NO, BRANCH
GOLOOP   EQU   *
         SLL   RJ,TWO                   MULTIPLY BY 4
         LA    RJ,DEBUCBAD-4(RJ)        ACCESS THE UCB ADDRESS FOR
*                                         THIS LINE
         L     RJ,0(RJ)                 LOAD THE UCB ADDRESS
         LTR   RJ,RJ                    IS THIS LINE ASSOCIATED
*                                         WITH A // DD DUMMY ENTRY
         BZ    TERMADL                  YES, DO NOT PUT THE SEND
*                                         SCHEDULER IN THE STCB
*                                         CHAIN OF THIS QCB
         L     RJ,AVTGETMN+4            GET SAVED TTE          @G36XRNP
         TM    DCTBYTE1,DCTUMASK        IS THIS A GEN POLL     @G36XRNP
*                                       CLUSTER                @G36XRNP
         BO    TERMADL                  YES, DO NOT PUT THE    @G36XRNP
*                                       SEND SCHEDULER IN STCB @G36XRNP
         LA    RJ,QCBSTVTO              LOAD THE ADDRESS OF THE QCB
*                                         SUBTASK VECTOR INDEX
         STCM  RJ,AD,QCBSTVTO+ONE       STORE THE ADDRESS OF   @Z30X8NM
*                                         FIRST STCB INTO THE STCB
*                                         CHAIN FIELD IN THE QCB
TERMADL  EQU   *
         LA    RF,THREE(RF)             POINT TO THE NEXT TERMNAME
*                                         TABLE ENTRY
         BCT   RE,TERMAD                DECREMENT THE NUMBER OF
*                                         ENTRIES AND BRANCH
         ST    RE,DEBEOEA               CLEAR MH FLAGS         @YA04393
         ICM   RC,AD,DCBMH              ADDRESS OF STARTMH PARMS X01004
         LA    RF,ONE(RE)               SET LOOP COUNT TO ONE    X02004
         LA    RJ,DEBEOEA               LOCATION FOR SAVING MH   X02004
*                                       FLAGS                    X02004
         NC    ONE(THREE,RC),ONE(RC)    IS THERE AN ALTERNATE MH X02004
         BE    MHLOOP                   BRANCH IF NO             X02004
         OI    DEBEOEA+TWO,AVTE80       SET ALT. MH FOR LINEEND  X02004
         AR    RF,RF                    SET LOOP COUNT TO TWO    X02004
MHLOOP   EQU   *                        START OF LOOP TO MOVE MH X02004
*                                       FLAGS TO DEB             X02004
         MVC   ZERO(ONE,RJ),TWELVE(RC)  MOVE INDEX AND FLAGS     X02004
         NI    ZERO(RJ),LMD             ONLY LMD FLAGS REMAIN    X02004
         OC    ZERO(ONE,RJ),FOUR(RC)    ADD OTHER MH FLAGS       X02004
         NI    ZERO(RJ),FOX-MHBT        RESET CONT/STOP FLAG     X02004
         CLC   NINE(THREE,RC),TRETEN(RC)  EOB CKG SPECIFIED FOR  X01004
*                                         STARTMH                X01004
         BE    ALTERMH                  NO, BRANCH               X02004
         OI    ZERO(RJ),MHBT            YES, SET BT PRESENT      X02004
ALTERMH  EQU   *                                                 X02004
         LA    RJ,ONE(RJ)               BUMP TO NEXT LOCATION    X02004
*                                       FOR SAVING ALTERNATE MH  X02004
         L     RC,ZERO(RC)              ALTERNATE STARTMH PARMS. X02004
         BCT   RF,MHLOOP                GO BACK THRU LOOP IF     X02004
*                                       THERE IS STILL AN        X02004
*                                       ALTERNATE MH TO PROCESS. X02004
         LR    RE,RDEB                  COPY DEB ADDRESS         Y01004
         SR    RF,RF                    CLEAR FOR INSERT         Y01004
         IC    RF,DEBLNGTH              DOUBLE WORD LENGTH OF DEBY01004
         SLL   RF,THREE                 LENGTH OF DEB            Y01004
         BAL   RC,FIXPAGE               FIX DEB                  Y01004
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION GETMAINS AND INITIALIZES AN LCB/IOB         *
*        AREA FOR ALL LINES IN THIS PARTICULAR LINE GROUP         *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SLL   RUCB,3                   NUMBER OF BYTES IN CHANNEL
*                                         PROGRAM
         LA    RF,LCBCPA-IEDQLCB        GET THE SIZE OF AN LCB
*                                         WITHOUT A CHANNEL PROGRAM
         AR    RUCB,RF                  ADD THE SIZE OF THE LCB TO
*                                         THE SIZE OF THE CHANNEL
*                                         PROGRAM
         STC   RUCB,DCBEIOBX            PUT IN LENGTH OF LCB   @ZM47876
         SR    RE,RE                    CLEAR REGISTERS
         SR    RC,RC                    CLEAR A LINE COUNT REGISTER
         IC    RC,DEBNMEXT              INSERT THE NUMBER OF LINES
*                                         IN THIS LINE GROUP
         LTR   RC,RC                    ARE THERE ANY ACTIVE LINES
         BZ    ERROR02                  NO, BRANCH
         LR    RF,RC                    COPY THE LINE COUNT
         AH    RC,AVTLNCNT              ADD TO THIS LINE GROUP THE
*                                         PREVIOUS COUNT OF TOTAL
*                                         LINES IN THE SYSTEM
         STH   RC,AVTLNCNT              STORE THE UP-DATED COUNT IN
*                                         THE AVT
         LR    RJ,RF                    SAVE NUMBER OF LCBS      X01004
         LH    RF,PAGE4K                PAGE SIZE IS 4K        @Z30X8NM
         DR    RE,RUCB                  DIV PG SIZE BY LCB SIZE  X01004
*                                        TO FIND LCBS PER PAGE   X01004
         LR    RCORE,RF                 SAVE NO. LCBS PER PAGE   X01004
         LR    RTIOT,RE                 SAVE REMAINDER FROM DIV  X01004
         LR    RF,RJ                    NUMBER OF LCBS REQUESTED X01004
         MVI   AVTOPERT,TCAMER07        ERROR IDENTIFICATION     X01004
         SR    RF,RCORE                 NO. OF LCBS IN NEXT PAGE X01004
         BNM   CKMAX                    MORE THAN ONE PAGE     @OZ26781
         SR    RTIOT,RTIOT              LESS THAN 1 PAGE NEEDED  X01004
CKMAX    CR    RF,RCORE                 REQUEST FOR MORE THAN    X01004
*                                        TWO PAGES               X01004
         BNH   FITLCB                   NO, BRANCH               X01004
         LA    RF,VS2MAX                82 IS MAX LINES IN GRP @OZ24143
         LA    RTIOT,BIGLCB2            SET PAGE OFFSET FOR VS/2 X02004
*                                       PAGE BOUNDARY ALLIGNMENT X02004
         CR    RJ,RF                    REQUEST FOR MORE THAN    X02004
*                                         AOS/2 MAX OF 82 LCB'S@OZ24143
         BH    WTGSETUP                 YES, CAN'T HANDLE        X01004
         LA    RUCB,LCB248              RESET LCB SIZE TO 248    X01004
         STC   RUCB,DCBEIOBX            SET LCB LENGTH IN DCB    X01004
FITLCB   EQU   *                                               @OZ26781
         AH    RUCB,HALF12              ADD 12 BYTES TO        @OZ24288
*                                         LCB AREA TO HOLD      SA65392
*                                         THRESHHOLD VALUES     SA65392
         LR    RF,RJ                    FIND NO. OF BYTES NEEDED X01004
         MR    RE,RUCB                   FOR LCBS                X01004
         SH    RUCB,HALF12              TRUE LCB SIZE          @OZ24288
         LR    RE,RTIOT                 COPY OFFSET INTO PAGE    Y01004
*                                         NEEDED TO ALLIGN ON    Y01004
*                                         PAGE BOUNDARY          Y01004
         SR    RTIOT,RTIOT              CEAR FOR DIAL INDEX      X01004
         TM    TWO(RD),GRAPHICS         IS THIS A GRAPHICS DEVICE
         BNZ   SETSUB                   YES, BRANCH
         TM    1(RD),X'90'              IS THIS A DIAL LINE
         BZ    SETSUB                   NO, SKIP THE NEXT
*                                         INSTRUCTION
         LA    RTIOT,EIGHT              SET TO EIGHT FOR DIAL    X01004
*                                         THE ENTIRE LCB AREA
SETSUB   EQU   *
         MVI   AVTGETMN+NINE,LCBPOOL    SET THE SUBPOOL VALUE    Y02027
*                                       FOR THE LCB              Y02027
         AR    RF,RTIOT                 BUMP FOR DIAL            X01004
         SR    RE,RTIOT                 ADJUST FOR DIAL          Y01004
         BNM   SETSUB1                  BRANCH R0 NOT NEGATIVE   Y01004
         SR    RE,RE                    CLEAR R0 FOR NO PAGE     Y01004
*                                         ALLIGNMENT             Y01004
SETSUB1  EQU   *                                                 Y01004
         DROP  RCORE                    DROP DCT ADDRESSABILITY@G36XRNP
         USING IEDQLCB,RCORE            LCB ADDRESSABILITY     @G36XRNP
         BAL   RC,AVTPAR                BRANCH TO THE GETMAIN
*                                         ROUTINE
         L     RCORE,AVTGETMN+4         LOAD THE ADDRESS OF THE
*                                         LCB AREA
         LR    RE,RCORE                 LCB ADDRESS TO FIX       X01004
         ICM   RF,AD,AVTGETMN+ONE       LENGTH TO FIX            X01004
*                                                                X01004
         BAL   RC,FIXPAGE               FIX LCB                  X01004
*                                                                X01004
         LTR   RTIOT,RTIOT              DIAL LINE                X01004
         BZ    SETLCB                   NO, BRANCH               X01004
         LA    RCORE,0(RCORE)           CLEAR THE HIGH ORDER BYTE OF
*                                         THE CALL QUEUE ADDRESS
         ST    RCORE,0(RCORE)           STORE THE ADDRESS OF THE
*                                         FIRST ELEMENT
         ST    RCORE,FOUR(RCORE)        INITIALIZE THE LINK FIELD
*                                         OF THE FIRST ELEMENT
         LA    RCORE,8(RCORE)           INCREMENT THE BEGINNING
*                                         ADDRESS OF THE LCB AREA
SETLCB   EQU   *                                                 X01004
         LA    RF,IOBPTR(RCORE)         LOAD ADDRESS OF THE IOB  X01004
*                                        PORTION OF THE LCB      X01004
         SR    RF,RUCB                  SUBTRACT SIZE OF 1 LCB   X01004
         STCM  RF,AD,DCBIOBAD+ONE       STORE STARTING ADDR OF   X01004
         LR    RJ,RTIOT                  THE IOB IN THE DCB      X01004
         SR    RTIOT,RTIOT                                       X01004
         SR    RF,RF                                             X01004
         IC    RF,DEBNMEXT              NUMBER OF EXTENTS        X01004
         BCTR  RUCB,ZERO                DECREMENT FOR EXECUTE    X01004
STARTIOB EQU   *                                                 X01004
         EX    RUCB,CLEAR               CLEAR ONE LCB            X01004
         LA    RC,LCBKEY                ADDRESS OF LCB           X01004
         ST    RC,LCBKEY                POINT LCB TO ITSELF      X01004
         L     RC,FOUR(RWTGC)           OPEN WORK AREA ADDRESS   X01004
         TM    DXCCW12-ONE(RC),L2741    2741 ATTACHED TO LINE    X01004
         BZ    SETCPA                   NO, BRANCH               X01004
         OI    LCBTSOB,LCB2741N         YES-SET 2741 BIT IN LCB  X01004
SETCPA   EQU   *                                                 X01004
         LA    RC,LCBCPA                ADDR OF CHANNEL PROGRAM  X01004
*                                        AREA                    X01004
         ST    RC,LCBSIOCC              STORE IN LCB             X01004
         LA    RC,LCBRSKEY              ADDRESS OF FIRST STCB    X01004
         ST    RC,LCBRSKEY              STORE STCB ADDR. IN LCB  X01004
         MVI   LCBTDL,TIMDELAY          OFFSET FOR TIME DELAY    X01004
         LTR   RJ,RJ                    DIAL LINE                X01004
         BZ    SETKEY                   NO, BRANCH               X01004
         MVI   LCBRSKEY,DIALREV         SET DIAL RECEIVE SCHED.  X01004
         MVI   LCBRSPRI,SENDPRI         SET SEND PRIORITY FOR    A48258
*                                       ALL DIAL LINES           A48258
         OI    LCBSTAT2,LCBDIAL         SET DIAL IN STATUS       X01004
         LTR   RTIOT,RTIOT              SCB'S ALREADY GOTTEN     X01004
         BNZ   LOADSCBA                 YES, BRANCH              X01004
         LR    RTIOT,RF                 COPY NUMBER OF EXTENTS   X01004
         IC    RF,AVTSCBSZ              SIZE OF A STATN CONTROL  X01004
*                                        BLOCK                   X01004
         MR    RE,RTIOT                 MULTIPLY SIZE BY NUMBER  X01004
*                                        FOR TOTAL SIZE NEEDED   X01004
         SR    RE,RE                    NO OFFSET REQUIRED INTO  Y01004
*                                         PAGE FOR SCB           Y01004
         MVI   AVTOPERT,TCAMER08        ERROR ID                 X01004
         MVI   AVTGETMN+NINE,SCBPOOL    SET THE SUBPOOL VALUE    Y02027
*                                       FOR THE SCB              Y02027
         BAL   RC,AVTPAR                GETMAIN SCB AREA         X01004
*                                                                X01004
         LM    RE,RF,AVTGETMN           LGTH AND START OF SCBS   X01004
         LR    RDEB,RF                  SAVE SCB ADDRESS         X01004
         LR    RJ,RE                    LENGTH OF SCB'S          X01004
SCBMOVE  EQU   *                                                 X01004
         MVI   ZERO(RF),ZERO            CLEAR SCB AREA           X01004
         LA    RF,ONE(RF)               BUMP TO NEXT BYTE        X01004
         BCT   RE,SCBMOVE               CLEAR NEXT BYTE          X01004
         LR    RE,RDEB                  ADDRESS OF SCB'S TO FIX  X01004
         LR    RF,RJ                    LENGTH OF SCB'S TO FIX   X01004
*                                                                X01004
         BAL   RC,FIXPAGE               FIX SCB                  X01004
*                                                                X01004
         SR    RJ,RJ                    CLEAR FOR INSERT         X01004
         LR    RF,RTIOT                 RESTORE COUNT OF DEB     X01004
         SR    RTIOT,RTIOT               EXTENTS                 X01004
         IC    RJ,AVTSCBSZ              SIZE OF ONE LCB          X01004
LOADSCBA EQU   *                                                 X01004
         DROP  RDEB                                              X01004
         USING IEDQSCB,RDEB                                      X01004
         ST    RDEB,LCBMSGFM            SET SCB POINTER IN LCB   X01004
         LA    RC,AVTBFRTB              BUFFER RETURN QCB ADDR   X01004
         ST    RC,SCBDESTQ-ONE          STORE IN SCB             X01004
         OI    SCBQTYPE,SCBBBFTM        SET MID BATCH BIT        X01004
         LA    RC,AVTINOUT              INEND/OUTEND PARM LIST   X01004
         ST    RC,SCBMACR-ONE           STORE IN SCB             X01004
         AR    RDEB,RJ                  ADDRESS OF NEXT SCB      X01004
         B     SETQEVNT                 SET QEVENT IN LCB        X01004
         DROP  RDEB                                              X01004
         USING IEDQDEB,RDEB                                      X01004
SETKEY   EQU   *                                                 X01004
         MVI   LCBRSKEY,LEASREV         SET RECEIVE SCHED. KEY   X01004
         TM    TWO(RD),GRAPHICS         2260 LOCAL DATA SET      X01004
         BZ    SETQEVNT                 NO, BRANCH               X01004
         MVI   LCBRSKEY,LOCALKEY        SET 2260L RECEIVE SCHED. X01004
SETQEVNT EQU   *                                                 X01004
         SLL   RTIOT,TWO                MULT UCB COUNT BY FOUR   X01004
         L     RC,DCBINVLI(RTIOT)       ADDRESS INVITATION LIST  X01004
         LA    RC,EIGHT(RC)             FIRST ACTIVE ENTRY       X01004
         ST    RC,LCBINVPT-ONE          SAVE IN LCB              X01004
         STCM  RDCB,AD,LCBDCBPT+ONE     SAVE DCB IN LCB          X01004
         MVC   LCBRSLNK(THREE),AVTDELAD+ONE ADDR OF DUMMY LAST   X01004
*                                        ELEMENT                 X01004
         MVI   LCBFLAG1,IOSFLAG         SET IOS FLAG             X01004
         MVC   LCBTPCD(FOUR),TPOPCODE   MOVE OP CODE TO LCB      X01004
         LA    RC,AVTDMECB              ADDRESS OF A DUMMY ECB   X01004
         ST    RC,LCBECBCC              STORE ECB PTR INTO LCB   X01004
         SRL   RTIOT,TWO                REDUCE UCB COUNT         X01004
         STC   RTIOT,LCBUCBX            ZERO FIRST UCB INDEX     X01004
         ST    RCORE,AVTDOUBL           SAVE REPRESENTATIVE    @XA03965
*                                       LCB ADDRESS            @XA03965
         LA    RTIOT,ONE(RTIOT)         BUMP UCB INDEX           X01004
         LA    RCORE,ONE(RUCB,RCORE)    BUMP TO NEXT LCB         X01004
         BCT   RF,STARTIOB              DECREMENT EXTENTS AND    X01004
*                                        PROCESS NEXT LCB        X01004
         L     RJ,FOUR(RWTGC)           OPEN WORK AREA ADDRESS   X01004
         NI    DXCCW12-ONE(RJ),CLEARBIT  TURN OFF BITS SET BY    X01004
*                                        IGG01936                X01004
         EJECT                                                   X01004
         LR    RE,RDCB                  DCB ADDRESS              X01004
         SR    RF,RF                    CLEAR REG              @ZA06161
         IC    RF,DCBILCT               NUMBER OF ELEMENTS IN  @ZA06161
*                                        INVITATION LIST       @ZA06161
         SLL   RF,TWO                   INVITATION LIST LENGTH @ZA06161
         LA    RF,DCBEND(0,RF)          LENGTH OF DCB          @ZA06161
*                                                                X01004
         BAL   RC,FIXPAGE               FIX DCB                  X01004
*                                                                X01004
         SR    RTIOT,RTIOT              CLEAR FOR INSERT         X01004
         IC    RTIOT,DCBILCT            GET NUMBER OF INVITATION X01004
*                                         LISTS                  X01004
INVFIX   EQU   *                                                 X01004
         LR    RCORE,RTIOT              GET INVITATION LISTS YET X01004
*                                         TO FIX                 X01004
         BCTR  RCORE,ZERO               SUBTRACT ONE             X01004
         SLL   RCORE,TWO                MULTIPLY BY FOUR         X01004
         L     RUCB,DCBINVLI(RCORE)     ADDRESS OF INVITATION    X01004
*                                         LIST                   X01004
         SR    RC,RC                                             X01004
         SR    RF,RF                                             X01004
         IC    RC,ZERO(RUCB)            GET NUMBER OF ENTRIES    X01004
         IC    RF,TWO(RUCB)             GET LENGTH OF EACH ENTRY X01004
         MR    RE,RC                    GET LENGTH OF LIST       X01004
         AR    RC,RC                    MULT NUMBER OF ENTRIES   X01004
*                                         BY TWO TO GET SIZE OF  X01004
*                                         INVITATION LIST PREFIX X01004
         AR    RF,RC                    SET LENGTH TO FIX        X01004
         LA    RF,NINE(RF)              INCR SIZE= DW & DELIM   OY00530
         TM    THREE(RUCB),X80          EOT SIZE PRESENT ?      OY00530
         BNO   NOEOT                    NO, BRANCH              OY00530
         LA    RF,ONE(RF)               BUMP SIZE               OY00530
NOEOT    EQU   *                                                OY00530
         SR    RUCB,RC                  GET ADDRESS OF PREFIX    X01004
         LR    RE,RUCB                  ADDRESS TO FIX           X01004
         BAL   RC,FIXPAGE               FIX INVITATION LIST      X01004
         L     RUCB,AVTDOUBL            GET LCB ADDRESS        @XA03965
         CLI   LCBRSKEY-IEDQLCB(RUCB),BUFKEY  LCB FOR BUFF TERM@XA03965
         BE    NOCPUID                  BRANCH IF YES          @XA03965
         L     RUCB,DCBINVLI(RCORE)     ADDR OF INVITATION LIST@XA03965
         CLI   FIVE(RUCB),ZERO          CPUID ADDRESS HERE     @XA03965
         BE    NOCPUID                  BRANCH IF NO           @XA03965
         L     RUCB,FOUR(,RUCB)         CPUID ADDRESS          @XA03965
         LR    RE,RUCB                  SET PGFIX PARM         @XA03965
         SR    RF,RF                    CLEAR FOR INSERT       @XA03965
         IC    RF,ZERO(,RUCB)           NO. OF CHARS IN CPUID  @XA03965
         LA    RF,ONE(,RF)              ADD ONE FOR PREFIX     @XA03965
         BAL   RC,FIXPAGE               FIX CPID               @XA03965
NOCPUID  EQU   *                                               @XA03965
         BCT   RTIOT,INVFIX             GET NEXT LIST            X01004
         MVC   AVTEZERO(TWO,RWTGC),AQTAMLD3 MOVE ID TO THE     @Z30X8NM
*                                         WHERE-TO-GO TABLE
         L     RJ,FOUR(RWTGC)           ADDRESS OF OPEN WORK AREA
         STM   RE,RJ,0(RJ)              SAVE REGISTERS IN THE OPEN
*                                         WORK AREA
RELOOP   EQU   *
         LA    RWTGC,EIGHT(RWTGC)       BUMP POINTER TO NEXT ENTRY
*                                         IN WTG TABLE
         LA    RPARC,FOUR(RPARC)        BUMP POINTER TO NEXT DCB
*                                         CALL FOR THIS EXECTOR
         STC   RTIOT,AVTOPERL           CLEAR THE LINE NUMBER FIELD
          CLC   0(2,RWTGC),AMIDCNST      IS THIS EXECUTOR REQUII-ED
*                                         AGAIN
         BE    RESTART                  RETURN TO BEGINNING
*
         CLC   0(TWO,RWTGC),OPIDCNST    TEST FOR END OF WTG TABLE
         BNE   RELOOP                   TEST NEXT ENTRY
         LR    RPARC,RPAR               INITIALIZE CURRENT DCB REG
         LA    RWTGC,32(RWTG)             AND WTG REGISTER
*
ZCHECK   EQU   *
         CLI   0(RWTGC),X'00'           IS THIS ENTRY COMPLETED
         BNE   XCTRTNE                  IF ENTRY IS NOT COMPLETE,
*                                         TRANSFER CONTROL
         LA    RWTGC,EIGHT(RWTGC)       BUMP POINTER TO TEST FOR
         LA    RPARC,FOUR(RPARC)          COMPLETION OF THE NEXT
*                                         ENTRY
         B     ZCHECK                   BRANCH TO CHECK ENTRY    S21903
XCTRTNE EQU    *                                                  *
         OI    RLD(RWTG),ONE            RESET LENGTH INDICATORS  X01004
         MVC   RECLNG(TWO,RWTG),RECLNG+TWO(RWTG)  LENGTH TO 1K   X01004
         LA    RJ,DXCCW12(RJ)           POINT TO DOUBLE WORD LIST *
         MVC   6(TWO,RWTG),0(RWTGC)     MOVE ID TO NAME FIELD     *
         MVC   14(THREE,RWTG),TWO(RWTGC) MOVE TTR TO WTG TABLE    *
         XCTL  DE=(RWTG),SF=(E,(15))    TRANSFER CONTROL          *
         CNOP  0,4
AVTPAR   EQU   *
         ST    RE,AVTDOUBX              SAVE ALIGNMENT          SA65392
         STM   RC,RD,AVTDOUBL           SAVE REGS OVER GETMAIN   Y01004
*                                         REQUEST                Y01004
         L     RJ,CVT(,RE)              ADDRESS OF CVT           Y01004
         L     RJ,AVTCVTPT(RJ)          ADDR OF TCAM WORK AREA   Y02027
         LA    RJ,TCXAVAIL-IEDQTCX(RJ)  ADDR OF AVAILABLE CORE   Y02027
*                                         FOR LCB'S AND SCB'S    Y01004
         LA    RF,SEVEN(RF)             ROUND UP TO DOUBLEWORD   Y01004
         SRL   RF,THREE                 LENGTH                   Y01004
         SLL   RF,THREE                 RESTORE TO BYTE LENGTH   Y01004
         LR    RD,RF                    SAVE LENGTH REQUESTED    Y01004
         NC    0(FOUR,RJ),0(RJ)         CHAIN EMPTY              Y01004
         BZ    AVTPAR2                  YES, ISSUE GETMAIN       Y01004
AVTPAR1  EQU   *                                                 Y01004
         LR    RC,RJ                    SAVE OLD CHAIN POINTER   Y01004
         L     RJ,0(RJ)                 GET NEW CHAIN POINTER    Y01004
         CLM   RF,AD,FIVE(RJ)           REQUEST SATISFIED IN THISY01004
*                                         PAGE                   Y01004
         BNH   AVTPAR6                  YES, BRANCH              Y01004
         CLC   0(FOUR,RJ),AVTFZERO      END OF CHAIN             Y01004
         BNE   AVTPAR1                  NO, BUMP TO NEXT PAGE    Y01004
AVTPAR2  EQU   *                                                 Y01004
         LR    RC,RE                    COPY ALIGNMENT          SA65392
         AR    RC,RD                    ADD GETMAIN LENGTH      SA65392
         SR    RE,RE                    CLEAR FOR CALULATION    SA65392
         LH    RF,PAGE4K                PAGE SIZE IS 4K        @Z30X8NM
AVTPAR33 EQU   *                                                 Y01004
         AR    RE,RF                    ADD ONE PAGE             Y01004
         CR    RC,RE                    LARGE ENOUGH FOR GETMAINSA65392
         BH    AVTPAR33                 NO, BUMP GETMAIN SIZE    Y01004
         ST    RE,AVTGETMN              STORE BYTE COUNT IN     SA65392
*                                         PARAMETER LIST
         OI    AVTGETMN+EIGHT,PAGE      GETMAIN ON PAGE BOUNDARY Y01004
         ST    RJ,AVTGETMN+FOUR         RECEIVE ADDR IN SECONDY  Y01004
*                                         WORD OF PARAMETER LIST
         LA    RF,AVTGETMN              LOAD THE ADDRESS OF THE
*                                         PARAMETER LIST
         SPACE 2
         MODESET EXTKEY=TCAM            GET INTO KEY 6           Y02027
         SPACE 2
         GETMAIN  ,MF=(E,(1))           GETMAIN MACRO
         SPACE 2
         MODESET EXTKEY=SUPR            RETURN TO KEY 0          Y02027
         SPACE 2
         EJECT
         NI    AVTGETMN+EIGHT,FOX-PAGE  RESET PAGE BOUNDARY      X01004
         LTR   RJ,RJ                    TEST THE RETURN CODE
         BNZ   AVTPAR8                  BRANCH IF NOT ZERO       Y01004
         L     RC,AVTGETMN+FOUR         ADDRESS OF GOTTEN CORE   Y01004
*                                         ADDRESS                Y01004
         L     RF,AVTGETMN              LENGTH OF GOTTEN CORE    Y01004
         L     RJ,0(RC)                 ADDRESS OF GOTTEN CORE   Y01004
         MVC   0(FOUR,RJ),AVTFZERO      SET END OF CHAIN         Y01004
         SR    RF,RD                    FIND CORE TO REMAIN IN   Y01004
*                                         CHAIN                  Y01004
         BZ    AVTPAR7                  REQUEST = AVAILABLE      Y01004
         SR    RE,RE                    CLEAR                  @XA11331
         ICM   RE,SEVEN,AVTDOUBX+ONE    GET ALIGNMENT          @XA11331
         BZ    AVTPAR4                  NO ALLIGN               SA65392
         ST    RE,FOUR(RJ)              UPDATE AVAILABLE CORE   SA65392
         LA    RC,ZERO(RJ,RD)           CORE AVAIL. AT END      SA65392
         AR    RC,RE                    ADJUST FOR EXTRA CORE   SA65392
         CR    RF,RE                   CORE LEFT EQUAL ALIGNMENTSA65392
         BE    AVTPAR5                 YES,BRANCH               SA65392
         MVC   ZERO(FOUR,RC),AVTFZERO   SET END OF CHAIN        SA65392
         ST    RC,ZERO(RJ)              CHAIN AVAILABLE CORE    SA65392
         SR    RF,RE                    ADJUST FOR EXTRA CORE   SA65392
         ST    RF,FOUR(RC)              UPDATE AVAILABLE CORE   SA65392
         LR    RF,RE                    SET INDEX TO AVAIL. CORESA65392
         B     AVTPAR5                  RETURN                  SA65392
AVTPAR4  EQU   *                                                SA65392
         ST    RF,FOUR(RJ)              UPDATE AVAILABLE CORE IN Y01004
*                                         PAGE                   Y01004
AVTPAR5  EQU   *                                                 Y01004
         LA    RJ,0(RF,RJ)              BUMP TO ALLOCATED CORE   Y01004
         ST    RJ,AVTGETMN+FOUR         RETURN ADDRESS TO CALLER Y01004
*                                         OF ALLOCATED CORE      Y01004
         ST    RD,AVTGETMN              RETURN LENGTH TO CALLER  Y01004
         LM    RC,RD,AVTDOUBL           RESTORE TEMP. REGISTERS  Y01004
         BR    RC                       RETURN TO CALLER         Y01004
AVTPAR6  EQU   *                                                 Y01004
         L     RF,FOUR(RJ)              GET LENGTH AVAILABLE IN  Y01004
*                                         PAGE                   Y01004
         SR    RF,RD                    FIND CORE TO REMAIN IN  SA65392
*                                         CHAIN                 SA65392
         BZ    AVTPAR7                  REQUEST = AVAILABLE     SA65392
         ST    RF,FOUR(RJ)              UPDATE AVAILABLE CORE INSA65392
*                                         PAGE                  SA65392
         B     AVTPAR5                  RETURN CORE TO CALLER   SA65392
AVTPAR7  EQU   *                                                 Y01004
         MVC   0(FOUR,RC),0(RJ)         REMOVE PAGE FROM CHAIN   Y01004
         B     AVTPAR5                  RETURN CORE TO CALLER    Y01004
AVTPAR8  EQU   *                                                 Y01004
         LM    RC,RD,AVTDOUBL           RESTORE USED REGS        Y01004
         B     WTGSETUP                 BRANCH TO ERROR RTN.     Y01004
FIXPAGE  EQU   *                                                 X01004
         LR    RJ,RE                    COPY ADDRESS TO FIX      X01004
         LA    RJ,ZERO(RF,RJ)           END ADDRESS + ONE      @Z30X8NM
         LR    RF,RE                    START ADDRESS          @Z30X8NM
         LA    RE,AVTDMECB              ADDRESS OF FIX ECB       X01004
         XC    AVTDMECB(FOUR),AVTDMECB  CLEAR ECB                X01004
*                                                                X01004
         PGFIX R,A=(1),EA=(15),ECB=(0)  FIX DATA AREA          @Z30X8NM
*                                                                X01004
         WAIT  ECB=AVTDMECB             WAIT FOR PAGE FIX      @Z30X8NM
*                                                                X01004
         TM    AVTDMECB+THREE,FOUR      CHECK RETURN CODE        X01004
         BCR   EIGHT,RC                 RETURN TO CALLER         X01004
         B     WTGSETUP                 EXIT TO OPEN ERROR RTNE  X01004
RECOVER  EQU   *
         L     RE,SAVE0(RJ)             PICK UP THE NUMBER OF
*                                         TERMINAL ENTRIES STILL TO
*                                         BE CHECKED
         B     TERMADL                  CONTINUE THE TESTING LOOP
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN         *
*        A BAD BRANCHING INDEX IS GENERATED FROM THE UCB          *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ERROR    EQU   *
         MVI   AVTOPERT,TCAMER05        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         B     WTGSETUP                 SET THE WHERE-TO-GO ENTRY
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN         *
*        AN ENTRY IN THE TERMINAL TABLE HAS SPECIFIED A           *
*        PARTICULAR TYPE OF QUEUEING AND THE USER HAS             *
*        FAILED TO PROVIDE THE NECESSARY DATA SET                 *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ERROR01  EQU   *
         MVI   AVTOPERT,TCAMER19        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         L     RJ,FOUR(RWTGC)           LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         STM   RF,RE,FOUR(RJ)           SAVE REGISTERS 1 THRU 0 IN
*                                         THE OPEN WORK AREA
         SR    RE,RE                    CLEAR A COUNT REGISTER
         IC    RE,AVTOPERL              PICK UP THE LAST SAVED
*                                         RELAYIVE LINE NUMBER
         LTR   RE,RE                    HAS THIS EXIT BEEN TAKEN
*                                         FOR THIS DCB
         BZ    LINESAVE                 NO, BRANCH
         CLC   QCBRELLN(ONE),AVTOPERL   COMPARE THE RELATIVE LINE
*                                         NUMBERS
         BH    WTGSETUP                 IF SAVED LINE NUMBER IS
*                                         LOWER, BRANCH
LINESAVE EQU   *
         SR    RJ,RJ                    CLEAR A LINE REGISTER
         IC    RJ,QCBRELLN              PICK UP THE LOWER RELATIVE
*                                         LINE NUMBER
         LTR   RJ,RJ                    IS THIS A LEGITIMATE LINE
*                                         NUMBER
         BNZ   SETLINE                  YES, BRANCH
         MVI   AVTOPERT,TCAMER21        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         STC   RJ,AVTOPERL              CLEAR THE LOWEST LINE
*                                         NUMBER SAVED
         B     WTGSETUP                 GO TO THE ERROR EXIT
SETLINE  EQU   *
         STC   RJ,AVTOPERL              SAVE THE LOWEST RELATIVE
*                                         LINE  NUMBER
         BCTR  RJ,0                     REDUCE THE LINE NUMBER BY 1
         STC   RJ,DEBNMEXT              RESET THE NUMBER OF OPENED
*                                         LINES
         B     WTGSETUP                 GO TO THE EXIT ROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN         *
*        THERE ARE NO ACTIVE LINES IN A LINE GROUP DUE TO         *
*                            UNOPENED DATA SETS                   *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ERROR02  EQU   *
         MVI   AVTOPERT,TCAMER20        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         B WTGSETUP                     GO TO THE ERROR EXIT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                               *X01004
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN A     *X01004
*        CONFLICT IS FOUND BETWEEN THE OPTIONAL FEATURES        *X01004
*        SPECIFIED IN THE UCB AND THE OPTIONAL FEATURES         *X01004
*        REFLECTED IN THE DEVICE CHARACTERISTICS TABLE.         *X01004
*                                                               *X01004
*****************************************************************X01004
ERR01 EQU *                                                      X01004
         MVI   AVTOPERT,TCAMER22        ERROR ID FOR TCAM        X01004
         B     WTGSETUP                 TAKE ERROR EXIT          X01004
*****************************************************************X01004
*                                                                 *
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN AN      *
*        ERROR IS DETECTED WHILE EXAMINING THE DEVICE             *
*        CHARACTERISTICS TABLE ENTRY FOR THIS TERMINAL TYPE       *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEVCHRER EQU   *
         MVI   AVTOPERT,TCAMER06        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE  AVT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE IS USED TO SAVE THE ID OF THE       *
*        CURRENT OPEN EXECUTOR AND TO MOVE THE ID OF THE          *
*        ERROR RECOVERY MODULE INTO THE WHERE-TO-GO PARAMETER     *
*                            LIST                                 *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
WTGSETUP EQU   *
         L     RJ,FOUR(RWTGC)           LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         MVC   AVTOPXCL(TWO),AMIDCNST   MOVE THE ID OF THE CURRENT
*                                         EXECUTOR INTO THE AVT
*                                         FOR THE RETURN TO THIS
*                                         EXECUTOR
         MVC   AVTEZERO(TWO,RWTGC),OPENERP MOVE ID FOR THE     @Z30X8NM
*                                         ERROR MODULE INTO THE
*                                         WHERE-TO-GO PARAMETER LIST
         B     XCTRTNE                  GO TO THE XCTL ROUTINE
         EJECT
***********************************************************************
*        PROGRAM EQUATES                                              *
***********************************************************************
ZERO     EQU   0                        DISPLACEMENT             X01004
ONE      EQU   1                        DISPLACEMENT             S22024
TWO      EQU   2                        DISPLACEMENT             S22024
THREE    EQU   3                        FLAG                     S22024
FOUR     EQU   4                        DISPLACEMENT             S22024
FIVE     EQU   5                        DISPLACEMENT             S22024
SIX      EQU   6                        DISPLACEMENT             S22024
BSCMULTI EQU   7                        DISPLACEMENT             S22024
SEVEN    EQU   7                        DISPLACEMENT             S22024
EIGHT    EQU   8                        DISPLACEMENT             S22024
NINE     EQU   9                        DISPLACEMENT             X01004
TEN      EQU   10                       DISPLACEMENT             S22024
AUTOPOLL EQU   12                       NUMBER OF CCW'S IN THE   X01004
*                                         CHANNEL PROGRAM FOR AN
*                                         AUTOPOLLED DEVICE
TWELVE   EQU   12                       DISPLACEMENT             X01004
LMD      EQU   X'03'                    LMD SPECIFIED ON STARTMH X01004
MHBT     EQU   X'08'                    SET BT FOR LINEEND       Y01004
TCAMER19 EQU   19                       ERROR CODE               S22024
TCAMER20 EQU   20                       ERROR CODE               S22024
TCAMER21 EQU   21                       ERROR CODE               S22024
TCAMER22 EQU   22                       UCB INVALID CODE         X01004
IOBPTR   EQU   32                       IOB POINTER              S22024
SAVE0    EQU   64                       SAVE LENGTH              S22024
DEBUCB   EQU   68                       DEB & UCB                S22024
EXERR01  EQU   X'01'                    FLAG                     S22024
EXERR02  EQU   X'02'                    FLAG                     S22024
TCAMER05 EQU   X'05'                    FLAG                     S22024
TCAMER06 EQU   X'06'                    FLAG                     S22024
TCAMER07 EQU   X'07'                    FLAG                     S22024
GRAPHICS EQU   X'10'                    FLAG                     S22024
WTTADPTR EQU   X'60'                    FLAG                     S22024
CLEARBIT EQU   X'7F'                    FLAG                     S22024
DIAL     EQU   X'90'                    FLAG                     S22024
DXCCW12  EQU   X'1C8'                   FLAG                     S22024
CHAINLCB EQU   60                       OFFSET TO LCB CORE       Y01004
FIXPG    EQU   X'52'                    PAGE FIX FLAGS           X01004
PGFIX    EQU   113                      SVC PAGE FIX             X01004
LCBPOOL  EQU   250                      SUBPOOL FOR THE LCB      Y02027
SCBPOOL  EQU   250                      SUBPOOL FOR THE SCB      Y02027
TCAMER08 EQU   8                        SCB GETMAIN FAILED       X01004
TIMDELAY EQU   X'14'                    TIME DELAY OFFSET        X01004
DIALREV  EQU   X'18'                    DIAL RECEIVE SCHED. CODE X01004
LOCALKEY EQU   X'1E'                    LOCAL RECEIVE SCHED. CODEX01004
LEASREV  EQU   X'0C'                    RECEIVE SCHED. CODE      X01004
BUFKEY   EQU   X'1A'                    BUFF TERM SCHED CODE   @XA03965
RECLNG   EQU   25                       OFFSET TO MODULE SIZE    X01004
RLD      EQU   22                       OFFSET TO RLD FLAG       X01004
HI       EQU   8                        ICM0STCM MASK            X01004
SYSTYPE  EQU   116                      SYSTEM TYPE CVT OFFSET   X01004
AD       EQU   7                        ICM/STCM MASK            X01004
TRETEN   EQU   13                       OFFSET OF 13             X01004
CVT      EQU   16                       OFFSET TO CVT            X01004
PAGE     EQU   X'10'                    PAGE BOUNDARY FLAG       X01004
L2741    EQU   X'80'                    2741 FLAG                X01004
X80      EQU   X'80'                                            OY00530
IOSFLAG  EQU   X'C2'                    FLAG IOB FOR IOS         X01004
FOX      EQU   X'FF'                    CONSTANT OF FF           X01004
LCB248   EQU   248                      MAX. LCB SIZE            X01004
CLEAR    XC    0(ONE,RCORE),0(RCORE)    CLEAR ONE LCB            X01004
LCB200   DC    H'208'                   LCB SIZE FOR 2260 LOCAL SA65392
*                                        PLUS EIGHT             SA65392
HALF12   DC    H'12'                    HALFWORD OF 12         @OZ24288
BIGLCB2  EQU   16                       VS/2 PAGE ALLIGN OFFSET@OZ24143
VS2MAX   EQU   82                       MAX LINES IN VS/2 GROUP@OZ24143
PAGE4K   DC    H'4096'                  PAGE SIZE              @Z30X8NM
OPIDCNST DC    C'0S'                    ID FOR COMMON OPEN       Y02027
AQTAMLD3 DC    C'37'                    NEXT LOAD OF OPEN        Y02027
OPENERP  DC    C'33'                    ERROR RECOVERY MODULE    Y02027
AMIDCNST DC    C'36'                    CONSTANT                 S21903
TPOPCODE DC    X'02020202'              TP OP CODE               X01004
DEVCLASS EQU   2                        UCBTYPE OFFSET TO CLASS  X01004
MODLCODE EQU   0                        UCBTYPE MODEL CODE       X01004
ALL      EQU   15                       MODEL CODE MASK          X01004
AUDIOCTL EQU   X'00'                    AUDIO LINE MASK          X01004
ADAPTYPE EQU   3                        UCBTYPE ADAPTER OFFSET   X01004
BISC     EQU   X'90'                    BISC LINE MASK           X01004
SENDPRI  EQU   X'20'                    SEND PRIORITY            A48258
         EJECT
         TDCTD                                                 @G36XRNP
         EJECT
         TDEBD
         EJECT
         TTNTD
         EJECT
         TLCBD
         EJECT
         TQCBD
         EJECT
         TTCXD                                                   Y02027
         EJECT
         TAVTD
         EJECT
         DCBD  DSORG=TX
DCBEND   EQU   DCBINVLI-IHADCB          END OF DCB             @ZA06161
         EJECT                                                   X01004
         TSCBD                                                   X01004
         EJECT
         TTRMD
         END
