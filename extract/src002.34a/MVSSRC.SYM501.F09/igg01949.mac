1949     TITLE 'IGG01949-CHECKPOINT DISK ALLOCATION ROUTINE'
IGG01949 CSECT
*A000000-999999                                                @Y16X5N0
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS:                                        *
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A374600,375200                                                 SA51078
*A324000                                                        SA53610
*C202000,304000,312000-314000                                   SA53610
*C202000,834000-836000                                           A42410
*A781000                                                         S22027
*C222000-224000                                                  S22027
*C004200-007200,016000                                           S21903
*A188500-189500,796400-797600                                   SA58440
*C223000-223300,224600-224900                                   SA58440
*   PTM 0114,0525,0527,0601,0626,0708,0731,1013,1109,1111,1120,1209
*   CLEANUP    99240,22027,21903
*A468000,792000                                                 SA62992
*A596000,598000                                                 SA58448
*C326000                                                        SA67099
*A337000,340000                                                 SA59179
*A782000                                                         Y01004
*C514000                                                         Y01004
*C346760-346800                                                  Y01948
*D337000,346520,360000,783500,486000-490000                      Y01948
*C226000-228000                                                 SA68675
*A484000                                                        SA68675
*A189870                                                       @XA05313
*C490000                                                       @XA05313
*A442000,454000,668000,783000                                  @XA05305
*C443200,458000,776340                                         @XA05305
*D714000-772000                                                @XA05305
*C346360-346480                                                @YA05454
*C776425-776435,894000                                         @YA11949
*A776445,776455                                                @YA11949
*A002100,189930,296000,347600,416000,776490,781963             @Y17XANU
*C325000-340000                                                @Y17XANU
*A816000,781780,781990                                         @G36XRNU
*C064000,068000,210600,514000-516000,520000,524000,528000,626000G36XRNU
*D668600-669200,672000,776020-776340,783310-783600             @G36XRNU
*A232000,270000,302000,325000,478000,484000                    @OX16402
*C326000,326250,326450,346280,347680,354000                    @OX16402
*D347520-382000 COPIED TO STMT 326000                          @OX16402
*D402000-410000 COPIED TO STMT 327400                          @OX16402
*A347460,778000                                                @OZ26495
*C346280                                                       @OZ26495
*A466000                                                       @OZ29218
*C468000-468600                                                @OZ29218
*A467000                                                       @OY20675
*C468300                                                       @OY20675
***********************************************************************
*                                                                     *
*MODULE-NAME=IGG01949 (TCAM, INITIALIZATION)                   @Y17XANU
*                                                                     *
*DESCRIPTIVE-NAME=CHECKPOINT DISK ALLOCATION ROUTINE                  *
*                                                                     *
*COPYRIGHT='NONE'                                                     *
*                                                                     *
*  STATUS: VERSION 10.0                                        @Y17XANU
*                                                                     *
*FUNCTION:THIS MODULE SCANS THROUGH THE TCAM TABLES TO DETERMINE THE  *
*   SIZE OF AN ENVIRONMENT CHECKPOINT AND THE NUMBER OF DISK RECORDS  *
*   REQUIRED FOR IT. IT SAVES THE LENGTH AND COUNT IN THE CHECKPOINT  *
*   CONTROL RECORD. IT DETERMINES THE MAXIMUM NUMBER OF PRIORITY LEVEL*
*   QCBS USED FOR ANY ONE PROCESS ENTRY,AND USES THIS VALUE PLUS THE  *
*   LENGTH OF THE LONGEST OPTION AREA(FOR ANY ONE ENTRY IN THE TERM-  *
*   INAL TABLE) TO DETERMINE THE LENGTH OF A CKREQ RECORD.  IT        *
*   DETERMINES THE LENGTH OF AN INCIDENT RECORD,WHICH DEPENDS UPON THE*
*   LENGTH OF THE LONGEST OPTION AREA OR THE LENGTH OF THE OPERATOR   *
*   CONTROL DATA AREA,WHICH EVER IS LONGER. THIS MODULE ALSO DETER-   *
*   MINES THE NUMBER OF EACH OF THE THREE TYPES OF RECORDS WHICH WILL *
*   FIT ON ONE TRACK.  IT GETS THE DEVICE TYPE INDEX FROM THE UCB AND *
*   THE I/O DEVICE CHARACTERISTICS TABLE ADDRESS FROM THE CVT. IT USES*
*   THE VALUES IN THE TABLE TO CALCULATE RECORDS PER TRACK.           *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IGG01949                                                     *
*                                                                     *
*INPUT:REGISTERS 2,5,6,7 AND 8 CONTAIN THE FOLLOWING VALUES:          *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORK AREA                                 *
*   5-ADDRESS OF THE BEGINNING OF THE WTG TABLE PREFIX         @G36XRNU
*   6-ADDRESS OF BEGINNING OF WHERE-TO-GO TABLE                       *
*   7-ADDRESS OF THE COPY OF THE CURRENT DCB                   @G36XRNU
*   8-ADDRESS OF CURRENT ENTRY IN WHERE-TO-GO TABLE                   *
*                                                                     *
*OUTPUT:                                                              *
*                                                                     *
*   REGISTERS 5 AND 6 ARE SAME AS INPUT.REGISTERS 7 AND 8 ARE UPDATED *
*   TO THE NEXT ENTRIES.                                              *
*                                                                     *
*   THE COUNT AND LENGTH FIELDS IN THE CONTROL RECORD ARE FILLED IN   *
*   FOR ENVIRONMENT,CKREQ,AND INCIDENT RECORDS.                       *
*                                                                     *
*EXTERNAL ROUTINES:NONE                                               *
*                                                                     *
*EXITS-NORMAL:THIS MODULE XCTLS TO THE NEXT ENTRY IN THE WHERE-TO-GO  *
*   TABLE,WHICH IS FOR IGG01942.                                      *
*                                                                     *
*EXITS-ERROR:N/A.                                                     *
*                                                                     *
*MACROS - IEDHJN                                               @Y17XANU
*         LOAD                                                 @Y17XANU
*         DELETE                                               @Y17XANU
*         WTO                                                  @Y17XANU
*         XCTL                                                 @Y17XANU
*                                                              @Y17XANU
*MODULE TYPE - PROCEDURE                                       @Y17XANU
*                                                              @Y17XANU
*PROCESSOR - ASSEMBLER XF                                      @Y17XANU
*                                                              @Y17XANU
*MODULE SIZE - 2K                                              @Y17XANU
*                                                              @Y17XANU
*PURPOSE - SEE FUNCTION                                        @Y17XANU
*                                                              @Y17XANU
*LINKAGE - XCTL'ED FROM IGG01941                               @Y17XANU
*                                                              @Y17XANU
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   CVT                                                               *
*   AVT                                                               *
*   CHECKPOINT WORK AREA                                              *
*   OPTION TABLE                                                      *
*   TERMNAME TABLE                                                    *
*   TERMINAL TABLE                                                    *
*   QCB                                                               *
*   DEB                                                               *
*   DCB                                                               *
*   INVITATION LIST                                                   *
*   I/O DEVICE CHARACTERICTICS TABLE                                  *
*                                                                     *
*ATTRIBUTES:REENTERABLE,REFRESHABLE,ENABLED,SUPERVISOR MODE    @Y17XANU
*                                                                     *
*NOTES - SEE BELOW                                             @Y17XANU
*                                                              @Y17XANU
* DEPENDENCIES - THE OPERATION OF THIS MODULE DEPENDS UPON AN  @Y17XANU
*  INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH @Y17XANU
*  IS EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. THE CODING  @Y17XANU
*  HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER         @Y17XANU
*  CONSTANTS BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     @Y17XANU
*  FOR THE NEW DEFINITIONS.                                    @Y17XANU
*                                                              @Y17XANU
* RESTRICTIONS - NONE                                          @Y17XANU
*                                                              @Y17XANU
* REGISTER CONVENTIONS - SEE REGISTER ASSIGNMENT               @Y17XANU
*                                                              @Y17XANU
* PATCH - PATCH                                                @Y17XANU
*                                                              @Y17XANU
***********************************************************************
         EJECT                                                   S21903
* REGISTER USAGE FOR THIS SECTION
         SPACE
R0       EQU   0                        WORK REG,LENGTH OF LCB
R1       EQU   1                        PARM REG OR WORK REG;INVLEN
R2       EQU   2                        ADDRESS OF CKP WORK AREA
R3       EQU   3                        LENGTH OF TOTAL CKPT RECORD
R4       EQU   4                        REG 4                    S22024
R5       EQU   5                        LENGTH OF TERMNAME
R6       EQU   6                        ADDRESS OF TERMNAME ENTRY
R7       EQU   7                        REG 7                    S22024
RQCB     EQU   7                        ADDRESS OF QCB;LNGTH-TOTSEG
R8       EQU   8                        REG 8                    S22024
RTERM    EQU   8                        ADDRESS OF TERM ENTRY:UCB
RAVT     EQU   9                        ADDRESS OF AVT
RDCB     EQU   10                       ADDRESS OF DCB;BRANCH ADDR
R10      EQU   10                       REG 10                   S22024
R11      EQU   11                       REG 11                   S22024
RBASE    EQU   12                       BASE
R13      EQU   13                       SAVE AREA;BYTES /RECORD
R14      EQU   14                       RETURN REG ;ADDRESS OF DEB
R15      EQU   15                       ENTRY REG;INDEX-NO. EXTENTS
         EJECT                                                 @Y17XANL
CVTZDTAB EQU   64                       CVT ADDRESS FOR I/O DEVICE     X
                                        CHARACTERISTICS TABLE
TWO      EQU   2                                                SA58440
TFIFTY4  EQU   54                       MESSAGE LENGTH          SA58440
TFIFTY5  EQU   55                       MESSAGE LENGTH          SA58440
B3       EQU   3                        BIT THREE                S21903
         SPACE 1                                                 S21903
L1       EQU   1                        LENGTH OF ONE            S21903
L2       EQU   2                        LENGTH OF TWO            S21903
L3       EQU   3                        LENGTH OF THREE          S21903
L4       EQU   4                        LENGTH OF 4              S21903
L5       EQU   5                        LENGTH OF FIVE           S21903
L6       EQU   6                        LENGTH OF 6              S21903
L8       EQU   8                        LENGTH OF 8              S21903
L9       EQU   9                        LENGTH OF NINE           S21903
L14      EQU   14                       LENGTH OF 14             S21903
L16      EQU   16                       LENGTH OF SIXTEEN        S21903
L19      EQU   19                       LENGTH OF NINETEEN       S21903
L32      EQU   32                       LENGTH OF THIRTY-TWO     S21903
         SPACE 1                                                 S21903
X20      EQU   X'20'                    HEX 20                   S21903
X24      EQU   X'24'                    HEX 24                   S21903
X80      EQU   X'80'                    HEX 80                   S21903
XD0      EQU   X'D0'                    HEX D0                   S21903
         SPACE 1                                                 S21903
C1       EQU   1                        COUNT OF ONE             S21903
EIGHT    EQU   8                        COUNT EIGHT              S21903
EOTBIT   EQU   X'80'                    EOT INCLUDED IN LIST    SA62992
LO       EQU   4                        BRANCH LOW               S21903
MULT4    EQU   2                        MULTIPLY BY FOUR         S21903
ONE      EQU   1                        COUNT ONE                S21903
ZERO     EQU   0                        ZERO                     S21903
ALL      EQU   15                       MASK FOR ICM 4 BYTES     Y01948
HALF     EQU   3                        MASK FOR HALF WORD ICM @XA05313
ADDRMSK  EQU   7                        ADDRESS MASK           @Y17XANU
         EJECT                                                 @Y17XANL
         SPACE 3
         USING *,R15                    TEMPORARY BASE           S21903
         BAL   RBASE,QMM00              SET BASE / BYPASS ID     S21903
         DROP  R15                                               S21903
         USING *,RBASE
IGG01949 IEDHJN
QMM00    DS    0H                                                S21903
         USING IEDQAVTD,RAVT            BASE FOR AVT
         USING IHADCB,RDCB              BASE FOR DCB
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA
         USING FORCORE,R4               OPEN WORK AREA DSECT   @G36XRNU
         L     R4,FOUR(R8)              ADDR OF OPEN WORK AREA @G36XRNU
         L     RDCB,DXUDCBAD            ADDR OF USER'S DCB     @G36XRNU
         DROP  R4                                              @G36XRNU
         L     R2,DCBIOBAD              GET WORK AREA ADDRESS    S22024
         EJECT                                                 @Y17XANL
*FIGURE LENGTH NEEDED FOR TOTAL ENVIRONMENT RECORD
         SPACE
         LM    R14,R11,CKPSAVE1+12      PICK UP REGS FROM PREVIOUS 0731X
                                        MODULE
         LH    R4,DCBBLKSI(,RDCB)       LOAD USER SPECD RCD SIZE S22027
         LA    R3,CKPENVL               LOAD MIN RECORD SIZE     S22027
         LA    R5,BLKSMALL              GET OFFSET OF TOO SMALL  S22024
*                                        MESSAGE                  22024
         LA    R6,MIN3705               ADDR OF MIN SIZE FOR 3705S22024
         MVC   AVTDPARM(1),DCBOPTCD     SAVE FOR LATER TESTS     S22024
         TM    AVTDPARM,CKP3705         3705 CHECKPOINT DCB      S22024
         BZ    QMM02                    NO, BRANCH               S22024
         LA    R3,CKPNMINL              SET UP MINIMUM LENGTH    S22024
*                                        FOR 3705 CHECKPOINT RCD S22024
QMM02    EQU   *                                                 S22024
         CR    R4,R3                    USER SPEC TOO SMALL      S22027
         BL    WRTOP                    USE 300                 SA58440
CKMAX    EQU   *                                                 S22027
         LA    R3,SIZ3520               LOAD MAX RECORD SIZE     S22027
         TM    AVTDPARM,CKP3705         3705 CHECKPOINT DCB      S22024
         BZ    CHECKMAX                 NO, USE 3520 BLKSIZE     S22024
         LA    R3,CKPMAXL               ELSE SET 3705 DEFAULT    S22024
CHECKMAX EQU   *                                                 S22024
         CR    R4,R3                    USER SPEC TOO BIG        S22027
         BNH   STORSIZ                  NO, SAVE SIZE            S22027
         LA    R5,BLKBIG                GET OFFSET OF TOO BIG    S22024
*                                        MESSAGE                 S22024
         LA    R6,MAX3705               ADDR OF MAX SIZE FOR 3705S22024
WRTOP    EQU   *                                                SA58440
         LR    R4,R3                    USE DEFAULT BLKSIZE      S21903
         MVC   AVTSAVE4(DDL),IEDNMG     MOVE NAME OF MSG MODULE  S22024
         LOAD  EPLOC=AVTSAVE4           LOAD MESSAGE MODULE      S22024
         ALR   R5,R0                    GET ADDR OF PTR TO MSG   S22024
         L     R1,AVTEZERO(R5)          GET ADDR OF MESSAGE      S22024
         TM    AVTDPARM,CKP3705         3705 CHECKPOINT DCB      S22024
         BZ    MOVEDDNM                 NO, MOVE DDNAME          S22024
         MVC   BLKSIZE(FOUR,R1),AVTEZERO(R6) MOVE DEFAULT BLKSIZES22024
         EJECT                                                 @Y17XANL
MOVEDDNM EQU   *                                                 S22024
         L     R5,AVTTCB                GET TCB ADDRESS          S22024
         L     R5,TCBTIO(R5)            GET TIOT ADDRESS         S22024
         AH    R5,DCBTIOT               GET TIOE ADDRESS         S22024
         MVC   DDNAME(DDL,R1),TIOEDDNM(R5) MOVE DDNAME TO MSG    S22024
         WTO   MF=(E,(1))                                       SA58440
         DELETE EPLOC=AVTSAVE4          DELETE MESSAGE MODULE    S22024
STORSIZ  EQU   *                                                 S22027
         STH   R4,CKPBPERR              SAVE SIZE                S22027
         LR    R14,R4                   PUT SIZE IN R14          S22027
         TM    AVTDPARM,CKP3705         3705 CHECKPOINT DCB      S22024
         BO    QMM66                    YES, BRANCH              S22024
         LA    R3,CDRTINFO              LENGTH OF CONTROL INFO  SA68675
         MVI   CKPPRQNO,ONE             INIT MAX PRI QUEUES      S21903
         MVI   CKPRW+7,EIGHT            LENGTH OF COUNT AREA     S21903
         NI    CKPFLAGS,AVTEFF-CKPOPNEN TURN OFF BIT           @OX16402
         EJECT                                                 @Y17XANL
*INITIALIZE FOR LOOP THROUGH TERMNAME TABLE
         SPACE
QMM05    EQU   *                                               @OX16402
         USING IEDQTNTD,R6
         SR    R5,R5                    CLEAR
         L     R6,AVTRNMPT              GET ADDRESS OF TERMNAME TBL
         IC    R5,TNTENLEN              GET LENGTH OF TERMNAME
         LH    R11,TNTLEN              GET COUNT OF ENTRIES
         N     R11,AVTCLRHI            CLEAR HIGH ORDER HALF WORD
         LA    R6,TNTFIRST              GET FIRST ENTRY
         SPACE 3
*BEGINNING OF LOOP THROUGH TERMNAME TABLE
         SPACE
QMM10    EQU   *
         AR    R6,R5                    MOVE PAST NAME FIELD
         SLR   RTERM,RTERM              CLEAR REG              @Y17XANU
         ICM   RTERM,ADDRMSK,0(R6)      GET TTE ADDRESS        @Y17XANU
         LA    R10,TRMPRFSZ             GET PREFIX SIZE        @Y17XANU
         SLR   RTERM,R10                GET ADDRESS OF PREFIX  @Y17XANU
         USING IEDNTRM,RTERM            SET TTE ADDRESSABILITY @Y17XANU
         SLR   RQCB,RQCB                CLEAR REG              @Y17XANU
         ICM   RQCB,ADDRMSK,TRMDESTQ    GET QCB ADDRESS        @Y17XANU
         USING IEDQQCB,RQCB             SET QCB ADDRESSABILITY @Y17XANU
         EJECT
*CHECK TYPE OF TERMINAL ENTRY. FIGURE LENGTHS OF ASSOCIATED QCB'S,
*LCB'S AND INVITATION LISTS
         TM    TRMDSORG,TRMLGB          IS THIS A GROUP ENTRY    S22024
         BO    QMM60                    YES, DO NOT INCLUDE      S22024
         SPACE
         TM    TRMSTATE,TRMLIST         IS THE LIST BIT ON      SA53610
         BNO   QMM20                    IF NOT, INCLUDE IN COUNTSA53610
         TM    TRMSTATE,TRMLOG          IS THIS LOGTYPE         SA53610
         BNO   QMM60                    IF NOT, DO NOT INCLUDE  SA53610
         SPACE 3
*FIGURE LENGTHS FOR SINGLE, GROUP,OR PROCESS ENTRIES
         SPACE
QMM20    EQU   *                                                SA53610
         TM    CKPFLAGS,CKPOPNEN        UPDATING TERMINAL ENTRY@OX16402
         BO    QMM21                    YES                    @OX16402
         SPACE 2
* THE FOLLOWING INSTRUCTIONS HAVE BEEN MOVED TO UPDATE THE QCB @OX16402
* FIELDS BEFORE THE TERMINAL ENTRY FIELDS.  THIS IS FOR RESTART@OX16402
* SO THAT IT CAN BE SURE THAT THE SEQUENCE NUMBER HAS BEEN     @OX16402
* UPDATED TO WHAT THE DISK POINTER INDICATES.                  @OX16402
         BAL   R15,QMM85                COMPUTE TTE LENGTH TO  @Y17XANU
*                                       BE CHECKPOINTED        @Y17XANU
*FIGURE LENGTH OF QCB
         SPACE
QMM28    EQU   *                                                   1109
         SR    R4,R4                    INITIALIZE PRI QCB COUNT   0114
         TM    QCBDSFLG,QCBDISK         CHECK FOR DISK QUEUES      1109
         BZ    QMM60                    BRANCH IF CORE ONLY    @OX16402
         TM    QCBFLAG,QCBCKPT          CHECK FOR PROCESSED QCB
         BNZ   QMM60                    BRANCH IF ALREADY PROCESSED
         OI    QCBFLAG,QCBCKPT
         LA    R3,CKPMQBLN(,R3)         LEN OF MASTER QCB & DEL@OX16402
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES FOR     X
                                        ONE RECORD
         SPACE 3
*BEGINNING OF LOOP THROUGH PRIORITY LEVEL QCB'S
         SPACE
QMM30    EQU   *
         LA    R3,CKPQCBLN(,R3)         ADD LTH DISK PTRS        S21903
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES FOR     X
                                        ONE RECORD
         LA    R3,CKPQBKLN(,R3)         ADD LTH QBACK PTR        S21903
         BAL   R10,QMM78                CHECK FOR RECORD FULL   SA51078
         LA    R4,C1(,R4)               ADD 1 CNT TO PRTY QCB    S21903
         CLI   QCBPRIPQ,0               CHECK FOR 0 PRIOIRTY
         LA    RQCB,QCBPSIZE(,RQCB)     MOVE TO NXT PRTY QCB     S21903
         BNZ   QMM30                    BRANCH IF NOT LAST QCB
***************************************************************@OX16402
         TM    TRMSTATE,X24             SYNC PROCESS ENTRY     @OX16402
         BNO   QMM60                    BR, IF NOT SYNC PROCESS@OX16402
         EX    R4,QMMCOMPR              CHECK QCB COUNT WITH   @OX16402
*                                        PREVIOUS PRI QCB MAX  @OX16402
         BNL   QMM60                    BR, IF NOT NEW MAX     @OX16402
         STC   R4,CKPPRQNO              REPLACE OLD MAX        @OX16402
         B     QMM60                    GET NEXT ENTRY         @OX16402
         SPACE 2
QMM21    EQU   *                                               @OX16402
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES FOR     X
                                        ONE RECORD
         USING IEDQQCB,RQCB             BASE FOR QCB
         L     RQCB,TRMDESTQ-1          GET ADDRESS OF QCB
         TM    TRMSTATE,TRMLOG          PROCESS ENTRY           SA59179
         BM    QMM23                    BRANCH YES              SA59179
         TM    QCBDSFLG,QCBDISK         CHECK FOR CORE QUEUES
         BZ    QMM24                    BRANCH IF CORE QUEUES      1109
QMM23    EQU   *                                                SA59179
         LA    R3,CKPSEQLN(,R3)         LENGTH OF SEQ FIELD      S21903
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES FOR     X
                                        ONE RECORD
         SPACE 3
*GET LENGTHS OF OPTION FIELDS FOR THIS TERM ENTRY. ADDRESS-TYPE
*OPTIONS ARE NOT INCLUDED                                          1109
         SPACE
QMM24    EQU   *                                                   1109
         TM    TRMSTATE,TRMOPTFN        CHECK FOR OPTIONS          1109
         BZ    QMM35                    BRANCH IF OPTIONS      @OZ26495
*                                        NOT USED              @OZ26495
         SR    R13,R13                  CLEAR                      1109
         LH    R15,TRMOPTBL             GET ENTRY OFFSET       @YA05454
         N     R15,AVTCLRHI             CLEAR HI HALF          @YA05454
         L     R4,AVTOPTPT              GET OPT TBL ADDR       @YA05454
         AR    R15,R4                   ADD OPT TBL ADDR       @YA05454
         L     R4,FOUR(,R4)             GET OPT CSECT TBL ADDR @YA05454
         SR    R1,R1                    CLEAR                      1109
         EJECT                                                 @Y17XANL
*BEGINNING OF LOOP THROUGH COUNT OF OPTION FIELDS FOR THIS TERMINAL1109
         SPACE
QMM25    EQU   *                                                   1109
         IC    R0,TRMOPT(R13)           OFFSET FOR OPTION ENTRY    1109
         CLM   R0,ONE,AVTHFF            CHECK OPTION ENTRY       Y01948
         BE    QMM27                    BRANCH IF UNUSED ENTRY     1109
         IC    R1,0(R4)                 LENGTH OF THIS FIELD       1109
         CLI   ONE(R4),XD0              CHECK OPTION BYTE        S21903
         BH    QMM26                    BRANCH IF NOT ADDRESS TYPE 1109
         CLI   ONE(R4),X80              CHECK OPTION BYTE        S21903
         BH    QMM27                    BRANCH IF ADDRESS TYPE     1109
QMM26    EQU   *                                                   1109
         LA    R3,L1(R1,R3)             ADD LENGTH TO TOTAL LTH  S21903
         BAL   R10,QMM78                CHECK FOR END OF SEGMENT   1109
QMM27    EQU   *                                                   1109
         LA    R4,CKPOPLTL(,R4)         GET NEXT ENTRY IN OPT CHAR 1109
         LA    R13,C1(,R13)             ADD ONE TO CT OF OPT FLD S21903
         EX    R13,QMMCOMP              CHECK FOR END OF OPT FIELDS1109
         BNE   QMM25                    BRANCH IF NOT END          1109
         SPACE
*END OF LOOP THROUGH OPTION FIELDS FOR TERM ENTRY                  1109
         EJECT                                                 @Y17XANL
         SPACE 3                                               @OZ26495
QMM35    EQU   *                                               @OZ26495
         TM    TRMDEVFL,X60             DIAL DIGITS/ADDR CHAR? @OZ26495
         BZ    QMM40                    NO, BRANCH             @OZ26495
         SR    R1,R1                    CLEAR REG              @OZ26495
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED     @OZ26495
         BNO   NOOPTS                   NO, BRANCH             @OZ26495
         LA    R4,TRMOPT                START OF OPTION FIELDS @OZ26495
         IC    R1,TRMOPNO               NUMBER OF OPTIONS      @OZ26495
         AR    R4,R1                    START OF DEVICE FIELDS @OZ26495
         B     CKBUF                    CHECK BUFSIZE          @OZ26495
NOOPTS   EQU   *                                               @OZ26495
         LA    R4,TRMOPNO               START OF DEVICE FIELDS @OZ26495
CKBUF    EQU   *                                               @OZ26495
         TM    TRMDEVFL,X80             BUFSIZE SPECIFIED      @OZ26495
         BNO   CKDIAL                   NO, BRANCH             @OZ26495
         A     R4,ADD3                  BUMP PAST BUFSIZE      @OZ26495
CKDIAL   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X40             DIAL DIGITS SPECIFIED  @OZ26495
         BNO   CKADDR                   NO, BRANCH             @OZ26495
         IC    R1,0(R4)                 SIZE OF DIAL DIGITS    @OZ26495
         LA    R3,1(R1,R3)              ADD LENGTH TO TOTAL LEN@OZ26495
         BAL   R10,QMM78                CHECK - END OF RCD SEG @OZ26495
         LA    R4,1(R4,R1)              BUMP PAST DIAL DIGITS  @OZ26495
CKADDR   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X20             ADDR CHAR SPECIFIED    @OZ26495
         BNO   QMM40                    NO, BRANCH             @OZ26495
         IC    R1,0(R4)                 SIZE OF ADDR CHAR      @OZ26495
         LA    R3,1(R1,R3)              ADD LENGTH TO TOTAL LEN@OZ26495
         BAL   R10,QMM78                CHECK - END OF RCD SEG @OZ26495
         SPACE
QMM40    EQU   *
         TM    TRMSTATE,X24             SYNC PROCESS ENTRY       S21903
         BNO   QMM50                    BRANCH IF NOT SYNC PROCESS 0525
         TM    TRMSTATE,TRMOPTFN        CHECK FOR OPTION FIELDS    0525
         BZ    QMM45                    BRANCH IF NOT USED FOR SYNC0525
         OI    CKPFLAGS,CKPOPTFN        TURN ON BIT FOR SYNC PROCES0525X
                                        USING OPTION FIELDS        0525
QMM45    EQU   *                                                   0525
QMM50    EQU   *
         TM    TRMSTATE,TRMPROC         PROCESS ENTRY            S21903
         BO    QMM60                    BRANCH IF PROCESS ENTRY    0708
         TM    TRMSTATE,TRMPREF         3705 RESOURCE          @Y17XANU
         BO    QMM5050                  YES                    @Y17XANU
         LA    R3,CKPLCBLN+CKPDCBLN(R3) ADD LEN OF DCB AND LCB @Y17XANU
*                                       FIELDS TO TOTAL        @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD
         B     QMM51                    CONTINUE PROCESSING    @Y17XANU
QMM5050  EQU   *                                               @Y17XANU
         CLI   TRMTYPE,TRMSSCP          SSCP ENTRY             @ZM47914
         BE    QMM60                    YES                    @ZM47914
         CLI   TRMTYPE,TRMLNCP          NCP ENTRY              @Y17XANU
         BNE   QMM51                    NO - CONTINUE          @Y17XANU
         LA    R3,CKPLTRLN(R3)          ADD LENGTH OF LCBTRACE @Y17XANU
*                                       FIELD TO TOTAL         @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
         B     QMM60                    FINISHED WITH 3705     @YM07299
QMM51    EQU   *                                               @Y17XANU
         TM    AVTBIT3,AVTSTAIN         CHECK FOR INV LISTS CKPTED
         BZ    QMM60                    BRANCH IF NOT TO BE CKPTED
         OI    CKPFLAGS,CKPSTAIN        SAVE 'I' PARAM FROM INTRO
         EJECT                                                 @Y17XANL
*FIGURE LENGTH OF INVITATION LISTS.
         SPACE
         L     RQCB,TRMDESTQ-1          RESTORE ADDR OF QCB
         L     RDCB,QCBDCBAD-1          GET DCB FROM QCB
         USING IHADCB,RDCB              BASE FOR DCB
         LA    R15,QMM60                SET BRANCH REG         @XA05305
         CLC   QCBRELLN,DCBILCT         CHECK FOR INV LIST DEFINED 1209
         BHR   R15                      BR NOT DEFINED TO QMM60@XA05305
         SR    R4,R4                    CLEAR  FOR RLN
         IC    R4,QCBRELLN              RELATIVE LINE NO
         SLL   R4,MULT4                 MULTIPLY BY FOUR         S21903
         SR    R0,R0                    CLEAR
         SR    R1,R1
         L     R4,DCBINVLI-4(R4)        ADDRESS OF INV LIST
         LA    R4,AVTEZERO(,R4)         CLEAR HI ORDER BYTE    @XA05305
         LTR   R4,R4                    INVLIST OMITTED ON GRP @XA05305
         BZR   R15                      BR YES TO QMM60        @XA05305
         TM    B3(R4),CKPSET2           CHK FOR PROCESSED LIST   S21903
         BNZR  R15                      BR IF PROCESED TO QMM60@XA05305
         OI    B3(R4),CKPSET2           SET SWITCH               S21903
         IC    R0,0(R4)                 GET NO OF ENTRIES IN LIST
         IC    R1,L2(R4)                GET LENGTH OF ENTRIES    S21903
         MR    R0,R0                    GET LENGTH OF IN
         LA    R1,L9(R1)                ADD CONTROL AREA       @OZ29218
         TM    L3(R4),EOTBIT            IS EOT IN LIST         @OZ29218
         BZ    QMM52                    NO, BRANCH             @OZ29218
         LA    R1,ONE(R1)               ADD ONE FOR EOT        @OZ29218
QMM52    EQU   *                                                SA62992
* IN CASE OF RETURN TO QMM52 AFTER RECORD OVERFLOW, THE        @OY20675
* ENTIRE INVITATION LIST MAY HAVE BARELY FIT IN THE PREVIOUS   @OY20675
* RECORD.  TEST FOR THIS POSSIBILITY AND IF SO, SKIP THE       @OY20675
* REMAINDER OF INVITATION LIST LENGTH CALCULATION.             @OY20675
         LTR   R1,R1                    ANY INVLIST LENGTH     @OY20675
*                                        LEFT FOR THIS SEGMENT @OY20675
         BZ    QMM60                    IF NOT BRANCH          @OY20675
         AR    R3,R1                    ADD LIST LENGTH        @OZ29218
         CR    R3,R14                   IS LIST TOO LONG TO    @OZ29218
*                                        FIT IN CURRENT SEG    @OZ29218
         BL    QMM53                    NO, BRANCH             @OY20675
         LR    R1,R3                    GET TOTAL LENGTH       @OZ29218
         SR    R1,R14                   SUBTRACT AMT THAT WILL @OZ29218
*                                        FIT IN CURRENT SEG    @OZ29218
         B     QMM53                    GO CHECK FOR RECORD     SA62992
*                                        OVERFLOW               SA62992
         B     QMM52                    RETURN IS HERE ON RCD   SA62992
*                                        OVERFLOW               SA62992
QMM53    EQU   *                                                SA62992
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES FOR     X
                                        ONE RECORD
QMM60    EQU   *
         LA    R6,L3(,R6)               MVE PAST ADR FLD IN TNT  S21903
         BCT   R11,QMM10               SUB FROM NO TNT ENTRIES
         TM    CKPFLAGS,CKPOPNEN        UPDATING TERMINAL ENTRY@OX16402
         BO    QMM62                    BRANCH YES             @OX16402
         OI    CKPFLAGS,CKPOPNEN        INDICATE TERMINAL SCAN @OX16402
         B     QMM05                    UPDATE TERMINAL ENTRIES@OX16402
         SPACE
*END OF LOOP THROUGH TERMNAME TABLE
         EJECT                                                 @Y17XANL
QMM62    EQU   *                                               @OX16402
         NI    CKPFLAGS,AVTEFF-CKPOPNEN TURN OFF BIT           @OX16402
         LA    R3,CKPAVTLN(R3)          LENGTH OF AVT FIELDS    SA68675
         BAL   R10,QMM78                RECORD FULL             SA68675
         ICM   R10,HALF,CKPRCDSR        GET COUNT OF RECORDS   @XA05313
         BNZ   QMM65                    BRANCH IF MORE THAN 1 SEG
         STH   R3,CKPBPERR              RESET SEG LENGTH TO TOTAL S
QMM65    EQU   *
         LA    R10,1(,R10)              ADD ONE FOR PARTIAL RCD
         STH   R10,CKPRCDSR            RESTORE COUNT
         SPACE 3
*FIGURE NO OF TRACKS IN CKPT DATA SET
         SPACE
QMM66    EQU   *
         L     R10,CKPSAVE1+60          RESTORE R10
         L     R14,DCBDEBAD             DEB ADDRESS            @G36XRNU
         SPACE
         USING DXDEB,R14                BASE FOR DEB           @G36XRNU
         SR    R1,R1                    CLEAR COUNT OF TRACKS
         L     R13,DXDEBUCB             UCB ADDRESS            @G36XRNU
         SR    R15,R15
         IC    R15,DXDEBUSR             GET NO. EXTENTS        @G36XRNU
QMM67    EQU   *
         AH    R1,DXDEBNTR              ADD TRACKS IN THIS EXT @G36XRNU
         LA    R14,L16(,R14)            GO TO NXT EXTENT IN DEB  S21903
         BCT   R15,QMM67                RELOOP FOR NEXT EXTENT   S99240
         STH   R1,CKPTRKSA              SAVE NO. OF TRKS AVAIL
         TM    AVTDPARM,CKP3705         3705 CHECKPOINT DCB      S22024
         BO    QMM6905                  YES, ENVIRON RECORDS ONLYS22024
         SPACE 2                                               @Y17XANL
*DETERMINE SIZE OF INCIDENT RECORDS AND NUMBER OF RECORDS PER TRACK.
*FOR 3705 CHECKPOINT THIS AMOUNTS TO DETERMINING HOW MANY      @Y17XANU
*RESOURCE RECORDS PER TRACK CAN BE WRITTEN.                    @Y17XANU
         SPACE
         ICM   R15,ALL,AVTOPTPT         ADDRSS OF OPTION TABLE   Y01948
         LA    R1,CDROPCBL-(CDROPTN-CDROPCB) GET MINIMUN LENGTH  S99240
         BZ    QMM68                    BRANCH IF OPTIONS USED     0525
         L     R15,0(,R15)              END OF OPTION TABLE        0525
         MVC   CKPSAVE2(2),0(R15)       MOVE TO BOUNBARY           0525
         CH    R1,CKPSAVE2              COMPARE OPTIONS WITH OPERAT    X
                                        CONTROL BLOCK LENGTH
         BNL   QMM68                    BRANCH IF OPTIONS LOW
         LH    R1,CKPSAVE2              LONGEST OPTION FIELD
QMM68    EQU   *
         LA    R1,CDROPTN-IEDQCDRD(,R1) LENGTH OF RECORD
         STH   R1,CKPINCLN              SAVE LENGTH
         BAL   R11,QMM80                GET NUMBER PER TRACK
         STC   R15,CKPIPERT             SAVE NUMBER OF RCDS
         EJECT                                                 @Y17XANL
*DETERMINE NUMBER OF CKREQ RECORDS PER TRACK
         SPACE
         SR    R11,R11                  CLEAR OPTION LENGTH TO 0   0525
         TM    CKPFLAGS,CKPOPTFN        CHECK IF OPTION FIELDS USED0525
         BZ    QMM69                    BRANCH IF OPTIONS NOT USED 0525
         LH    R11,CKPSAVE2             LONGEST OPTION FIELD
QMM69    EQU   *                                                   0525
         LA    R0,CKPQCBLN+CKPQBKLN     LENGTH OF QCB FIELDS    SA51078
         SR    R1,R1
         IC    R1,CKPPRQNO              MAX COUNT OF PRI QCBS-PROCE
         MR    R0,R0                    TOTAL LENGTH OF PRI QCB
         LA    R1,CDRCKQCB-IEDQCDRD(R11,R1) LENGTH OF CKREQ RECORD
         CH    R1,CKPCKRLN              NEW HIGH FOUND          SA58448
         BNH   QMM6901                  BRANCH IF NO            SA58448
         STH   R1,CKPCKRLN              SAVE LENGTH
QMM6901  EQU   *                                                SA58448
         BAL   R11,QMM80                GET COUNT PER TRACK
         STC   R15,CKPCPERT             SAVE COUNT PER TRACK
         SPACE 3                                               @Y17XANL
*DETERMINE NUMBER OF ENVIRONMENT RECORD SEGMENTS PER TRACK.
*FOR THE 3705 CHECKPOINT DATA SET, THIS IS THE NUMBER OF       @Y17XANL
*RECORDS PER TRACK.
QMM6905  EQU   *                                                 S22024
         SPACE
         LH    R1,CKPBPERR              LENGTH OF ENV RCD SEGMENT
         BAL   R11,QMM80                GET NUMBER PER TRACK
         STC   R15,CKPRPERT             SAVE NUMBER RCDS/TRACK
         TM    AVTDPARM,CKP3705         3705 CKPT DCB          @Y17XANL
         BZ    QMM70                    NO, BRANCH             @Y17XANL
         EJECT                                                 @Y17XANL
***********************************************************************
*                                                                     *
*        CALCULATE THE 3705 TRACK CONSTANT. THIS CONSTANT IS USED     *
*        BY THE CHECKPOINT SUBTASK AS AN UPPER LIMIT OF VALID         *
*        RESOURCE NUMBERS FOR CHECKPOINTING TO THIS CHECKPOINT        *
*        DATA SET. IT IS ALSO USED TO CALCULATE THE TRACK ADDRESS     *
*        OF THE SECOND RECORD OF THE TWO RECORDS ASSIGNED FOR         *
*        EACH RESOURCE.                                               *
*                                                                     *
***********************************************************************
         LH    R1,CKPTRKSA              GET NUMBER OF TRACKS   @Y17XANL
*                                       AVAILABLE              @Y17XANL
         N     R1,AVTCLRHI              CLEAR HIGH HALF WORD   @Y17XANL
         MR    R0,R15                   GET NUMBER OF RECORDS  @Y17XANL
*                                       ON 3705 CKPT DATA SET  @Y17XANL
         SRL   R1,1                     DIVIDE BY 2 TO FIND    @Y17XANL
*                                       TRACK CONSTANT         @Y17XANL
         STH   R1,CKPTRKCN              SAVE IN CKPT WORKAREA  @Y17XANL
         EJECT                                                 @Y17XANL
*PREPARE TO XCTL TO NEXT MODULE
         SPACE
QMM70    EQU   *
         LM    R14,R11,CKPSAVE1+12      RESTORE REGS             S22024
         MVC   0(AL2,R8),QMM42          ID NXT LOAD OF OPEN    @G36XRNU
QMM72    EQU   *
         LA    R8,L8(,R8)               INCR CURRNT WTG ENTRY    S21903
         LA    R7,L4(,R7)               INCR CURRNT DCB          S21903
         CLC   QMMXX(2),0(R8)           IS SAME EXECUTOR REQUIRED
         BE    QMM00                    YES, RETURN TO PROCESS ITS22024
         CLC   0(L2,R8),QMM0S           CHK FOR END OF TBL       S21903
         BNE   QMM72                    BRANCH IF NOT END
         LR    R7,R5                    RESER PARM LIST ADDR
         LA    R8,L32(R6)               RESET WTG TABLE ADDR     S21903
QMM73    EQU   *
         CLI   0(R8),ZERO               CHK FOR ZERO ENTRY       S21903
         BNZ   QMM74                    BRANCH IF NOT ZERO
         LA    R8,L8(,R8)               ADDR NXT WTG ENTRY       S21903
         LA    R7,L4(,R7)               ADDR NXT DCB             S21903
         B     QMM73                    RELOOP                   S99240
         SPACE 3
*TRANSFER CONTROL TO NEXT EXECUTOR
         SPACE
QMM74    EQU   *
         LA    R15,CKPGETML             ADDR OF PARM LIST
         MVC   L6(L2,R6),0(R8)          MVE MOD ID TO WTG TBL    S21903
         XCTL  DE=(R6),SF=(E,(15))
         EJECT                                                 @Y17XANL
*SUBROUTINE TO CHECK FOR REACHING LENGTH OF ONE RECORD. IF LENGTH
*IS REACHED,ONE IS ADDED TO COUNT OF RECRDS REQUIRED AND THE BYTE
*COUNT IS REINITIALIZED. IF THE COUNT0IS REINTIALIZED, CONTROL IS
*RETURNED TO THE VALUE IN RDCB-8 ,SO THAT THE LENGTH OF THE FIELD
*CAN BE ADDED AGAIN TO THE NEW COUNT.
         SPACE
QMM78    EQU   *
         CR    R3,R14                   CHECK FOR RECORD SIZE
         BCR   LO,R10                   BR IF NOT REACHED YET    S21903
         SPACE
         LH    R3,CKPRCDSR              GET TRKS REQUIRED FOR TOTAL
         LA    R3,C1(,R3)               ADD ONE TO COUNT         S21903
         STH   R3,CKPRCDSR              RESTORE
         LA    R3,CDRTINFO              INITIALIZE COUNT TO LENGTH     X
                                        OF CONTROL INFO IN DISK RCD
         SH    RDCB,QMMEIGHT            GET BRANCH ADDRESS
         BR    R10                      RETURN                   S99240
         SPACE 3
         SPACE
*END OF SUBROUTINE
         EJECT                                                 @Y17XANL
*SUBROUTINE TO DETERMINE THE NUMBER OF RECORDS ON ONE TRACK
         SPACE
QMM80    EQU   *
         L     R3,16                    ADDRESS OF CVT
         USING IEDQDCTD,R3
         L     R3,CVTZDTAB(R3)          ADDRESS OF DEVICE CHAR TABL
         SR    R15,R15
         IC    R15,L19(R13)             GET DVCE TYP FROM UCB    S21903
         IC    R15,0(R3,R15)            GET OFFSET TO ENTRY FOR DEV
         LA    R3,0(R3,R15)             GET ADDR OF ENTRY FOR DEVCE
         LH    R15,DCTBYTE              GET COUNT OF BYTES PER TRCK
         SR    R4,R4
         IC    R4,DCTINTRO              OVERHEAD FOR INTERMEDIATE R
         SR    R0,R0
         IC    R0,DCTKEY                AMOUNT OF OVERHEAD TO SUB-     X
                                        TRACT IF KEYS ARE NOT USED
         SR    R14,R14                  CLEAR REG              @YA11949
         IC    R14,DCTLASTO             GET OVERHEAD OF LAST   @YA11949
         TM    DCTOPT,DCT1OH            ONLY ONE OVERHEAD      @YA11949
         BZ    QMM81                    NO, BRANCH             @YA11949
         LH    R14,DCTINTRO             GET THE HALFWD OVERHEAD@YA11949
         LR    R4,R14                   SET FOR BOTH           @YA11949
QMM81    EQU   *                                               @YA11949
         SR    R4,R0                    ADJUST IF KEYS NOT USED@YA11949
         SR    R14,R0                   SUB VALUE FOR NO KEYS
         AR    R14,R1                   TRUE LENGTH OF LAST RECORD
         TM    DCTOPT,DCTTOL            TOLERANCE FACTOR?      @YA11949
         BZ    QMM82                    NO, BRANCH             @YA11949
         MH    R1,DCTOLERN              MULTIPLY BY TOLERENCE FACTR
         SRL   R1,9                     DIVIDE BY 512
QMM82    EQU   *                                               @YA11949
         AR    R1,R4                    TRUE LENGTH OF IMM RECORD
         SR    R15,R14                  SUB LENGTH OF LAST RCD FROM    X
                                        NUMBER OF BYTES PER TRACK
         SR    R14,R14                  CLEAR FOR DIVIDE
         DR    R14,R1                   COUNT OF IMM RCDS PER TRACK
         LA    R15,C1(,R15)             ADD 1 TO LAST RECORD     S21903
         BR    R11                      RETURN
         EJECT
************************************************************** @Y17XANU
*                                                            * @Y17XANU
*        THE PURPOSE OF THIS ROUTINE IS TO DETERMINE THE     * @Y17XANU
*        NUMBER OF BYTES OF THE TTE TO BE CHECKPOINTED.      * @Y17XANU
*                                                            * @Y17XANU
*        INPUT - RTERM = TTE ADDRESS                         * @Y17XANU
*                R3    = CURRENT RECORD TOTAL                * @Y17XANU
*                RQCB  = QCB ADDRESS                         * @Y17XANU
*                R15   = RETURN ADDRESS                      * @Y17XANU
*                                                            * @Y17XANU
*        OUTPUT - R3   = NEW UPDATED RECORD TOTAL            * @Y17XANU
*                                                            * @Y17XANU
************************************************************** @Y17XANU
QMM85    EQU   *                                               @Y17XANU
         LA    R3,CKPTRMLN+CKPDELLN(R3) ADD FIXED LEN TO TOTAL @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
         TM    TRMSTATE,TRMLOG          TPROCESS ENTRY         @Y17XANU
         BM    QMM8540                  BRANCH IF YES          @Y17XANU
         TM    TRMSTATE,TRMPREF         3705 RESOURCE          @Y17XANU
         BO    QMM8560                  YES                    @Y17XANU
         TM    TRMSTATE,TRMSNGLE        SINGLE ENTRY           @Y17XANU
         BNZ   QMM8520                  NO                     @Y17XANU
         LA    R3,CKPSENSE(R3)          ADD LEN OF SENSE FIELD @Y17XANU
*                                       TO TOTAL               @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
         SPACE
QMM8520  EQU   *                                               @Y17XANU
         TM    QCBDSFLG,QCBDISK         DISK QUEUEING          @Y17XANU
         BZ    QMM8590                  NO - RETURN            @Y17XANU
         LA    R3,CKPSEQLN(R3)          ADD SEQ FIELDS LEN TO  @Y17XANU
*                                       TOTAL                  @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
         B     QMM8590                  EXIT                   @Y17XANU
         SPACE 2
QMM8540  EQU   *                                               @Y17XANU
         LA    R3,CKPSEQLN(R3)          ADD SEQ FIELDS LEN TO  @Y17XANU
*                                       TOTAL                  @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
         B     QMM8590                  EXIT                   @Y17XANU
         SPACE
QMM8560  EQU   *                                               @Y17XANU
         CLI   TRMTYPE,TRMLUNT          LUNT ENTRY             @Y17XANU
         BE    QMM8565                  YES                    @Y17XANU
         CLI   TRMTYPE,TRMPSNA          PRE SNA TERMINAL ENTRY @Y17XANU
         BE    QMM8565                  YES                    @Y17XANU
         CLI   TRMTYPE,TRMCTERM         CTERM ENTRY            @Y17XANU
         BNE   QMM8570                  NO - CONTINUE          @Y17XANU
QMM8565  EQU   *                                               @Y17XANU
         TM    QCBDSFLG,QCBDISK         DISK QUEUEING          @Y17XANU
         BZ    QMM8570                  NO - CONTINUE          @Y17XANU
         LA    R3,CKPSEQLN(R3)          ADD SEQ FIELDS LEN TO  @Y17XANU
*                                       TOTAL                  @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
         SPACE
QMM8570  EQU   *                                               @Y17XANU
         LA    R3,CKPNRSZ(R3)           ADD 3705 FIELDS LEN    @Y17XANU
*                                       TO TOTAL               @Y17XANU
         BAL   R10,QMM78                CHECK FOR ENOUGH BYTES @Y17XANU
*                                       FOR ONE RECORD         @Y17XANU
QMM8590  EQU *                                                 @Y17XANU
         BR    R15                      RETURN TO CALLER       @Y17XANU
         EJECT
QMMCOMP  CLI   TRMOPNO,0                CHECK FOR END OF OPTION FLD1109
QMMCOMPR CLI   CKPPRQNO,0               COMPARE                  S22024
QMMEIGHT DC    H'8'                     FOR ADJUSTING BRANCH ADDR
ADD3     DC    F'3'                     CONSTANT               @OZ26495
X60      EQU   X'60'                    FLAG FOR DIAL/ADDR     @OZ26495
X40      EQU   X'40'                    FLAG FOR DIAL DIGITS   @OZ26495
SIZ3520  EQU   3520                     MAX ENV RECORD SIZE      S22027
DCBBLKSI EQU   62                       DCBBLKSIZE OFFSET IN DCB S22027
CKP3705  EQU   X'10'                    OPTCD=I                  S22024
CKPNMINL EQU   38                       MINIMUM 3705 RECORD LEN  S22024
CKPMAXL  EQU   278                      MAX BUFSIZE FOR 3705     S22024
LENOFF   EQU   43                       OFFSET INTO MESSAGE      S22024
AL2      EQU   2                        CONSTANT TWO           @G36XRNU
THREE    EQU   3                        CONSTANT OF THREE        S22024
TCBTIO   EQU   12                       TIOT IN TCB              S22024
TIOEDDNM EQU   4                        DDNAME IN TIOE           S22024
DDNAME   EQU   12                       OFFSET TO DDNAME IN MSG  S22024
DDL      EQU   8                        SIZE OF DDNAME           S22024
BLKSIZE  EQU   50                       OFFSET TO BLKSIZE IN MSG S22024
FOUR     EQU   4                        SIZE OF MOVE INTO MESSAGES22024
BLKSMALL EQU   16                       OFFSET TO TOO SMALL MSG  S22024
BLKBIG   EQU   20                       OFFSET TO TOO BIG MSG    S22024
PATCH    DC    12F'0'                   PATCH AREA             @Y17XANU
MIN3705  DC    C' 038'                  MIN BLKSIZE FOR 3705     S22024
MAX3705  DC    C'0278'                  MAX BLKSIZE FOR 3705     S22024
IEDNMG   DC    CL8'IEDNMG'              NAME OF MESSAGE MODULE   S22024
QMM42    DC    C'42'                    ID OF NEXT LOAD        @G36XRNU
QMMXX    DC    CL2'49'                  ID OF THIS LOAD        @G36XRNU
QMM0S    DC    CL2'0S'                  ID OF LAST OPEN LOAD   @G36XRNU
DXPDEBAD EQU   X'1D0'                   OFFSET TO DEB ADDRESS IN Y01004
*                                         OPEN WORK AREA         Y01004
WTGC     EQU   52                                                Y01004
RLD      EQU   22                       OFFSET TO RLD FLAG     @XA05305
RECLNG   EQU   25                       OFFSET TO MODULE SIZE  @XA05305
         EJECT                                                 @Y17XANL
         TAVTD
         EJECT
FORCORE  DSECT                                                 @G36XRNU
         IECDSECT                                              @G36XRNU
         EJECT                                                 @Y17XANL
         TCKPD 3330
         EJECT                                                 @Y17XANL
         DCBD  DSORG=TX
         EJECT                                                 @Y17XANL
         TQCBD
         EJECT                                                 @Y17XANL
         TTNTD
         EJECT                                                 @Y17XANL
         TTRMD
         EJECT                                                 @Y17XANL
*DSECT FOR DEB
         SPACE
IEDQDEB  DSECT
         ORG   IEDQDEB+16               OFFSET TO NO. OF EXTENTS S99240
DEBNMEXT DS    X                        NO. EXTENTS IN DATA SET  A42410
         ORG   IEDQDEB+25               OFFSET TO DCB ADDR.      S99240
DEBDCBAD DS    AL3                      ADDR OF DCB
         ORG   IEDQDEB+32               OFFSET TO DEV DEPENDENT  S99240
*                                        FIELDS IN DEB           S99240
DEBDVMOD DS    XL1                      DEVICE MODIFIER
DEBUCBAD DS    XL3                      ADDRESS OF UCB
DEBBINUM DS    XL2                      BIN NO
DEBSTRCC DS    XL2                      CYLINDER ADDR FOR START
DEBSTRHH DS    XL2                      TRACK ADDR FOR START OF EXT
DEBENDCC DS    XL2                      CYLINDER ADDR FOR EXTNT END
DEBENDHH DS    XL2                      TRACK ADDR FOR EXTENT END
DEBNMTRK DS    XL2                      NO TRACKS IN THIS EXTENT
DEBEND  EQU   *
DEBSEGLN EQU   DEBEND-DEBDVMOD          LNGTH OF SEG FOE EACH EXTNT
         EJECT                                                 @Y17XANL
*DSECT FOR ONE ENTRY IN THE I/O DEVICE CHARACTERISTICS TABLE
         SPACE
IEDQDCTD DSECT
         DS    X                        FILLER
DCTCYL   DS    X                        NUMBER OF CYLINDERS
DCTRACKS DS    H                        NUMBER TRACKS PER CYLINDER
DCTBYTE  DS    H                        FILLER                   S99240
DCTINTRO DS    X                        OVERHEAD FOR EACH INTER-       X
                                        MEDIATE RECORD
DCTLASTO DS    X                        OVERHEAD FOR THE LAST RECRD    X
                                        ON A TRACK
DCTKEY   DS    X                        AMOUNT TO SUBTRACT FROM        X
                                        OVERHEAD IF KEYS ARE NOT       X
                                        USED
DCTOPT   DS    X                                               @YA11949
DCT1OH   EQU   X'08'                    HALFWD OVERHEAD        @YA11949
DCTTOL   EQU   X'01'                    TOLERANCE FACTOR USED  @YA11949
DCTOLERN DS    H                        TOLERENCE FACTOR FOR EACH      X
                                        INTERMEDIATE RECORD
         SPACE 5                                               @Y17XANL
         END
