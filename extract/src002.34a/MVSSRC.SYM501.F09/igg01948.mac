         TITLE 'IGG01948 LAST LOAD OF LINE OPEN'
IGG01948 CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*C224000                                                         Y01004
*A002000,180000,428000,785200,824000                             A51081
*D458000,785600,816000,823000,826000-828000                      A51081
*A 032300,200030,807000                                          S22026
*C    CLEANUP                                                    S22025
*C784600,785400                                                 SA62959
*C005000,050000,060000,094000-098000,200330,200420,212000,214000 Y02027
*C232000-236000,798000,802000-806000,808000-824000               Y02027
*D052000,062000,200450,238000                                    Y02027
*A174600,175200,200440,200460,200610,237000                      Y02027
*A502600,665000,868600,869200                                    Y02027
*C590000-618000,626000-628000,796000                           @ZA04001
*C556400                                                       @OZ16529
*C556400                                                       @OZ16529
*D550200-556000                                                @OZ29413
*A556600,842000                                                @OZ29413
*
         SPACE 3
***********************************************************************
*                                                                     *
*  TITLE:  'IGG01948' -- LAST LOAD OF LINE OPEN                       *
*                                                                     *
*  MODULE NAME = IGG01948                                             *
*                                                                     *
*  DESCRIPTIVE NAME = LAST LOAD OF LINE OPEN                          *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS = CHANGE LEVEL 6                                       Y02027
*                                                                     *
*FUNCTION/OPERATION - THIS ROUTINE FILLS IN THE USER REQUESTED        *
*   CROSS REFERENCE TABLE WITH THE FOLLOWING INFORMATION FOR          *
*   EACH LINE THAT IS OPENED, THE UCB NAME, THE ADDRESS OF THE        *
*   UCB, THE ADDRESS OF THE LCB, AND THE ADDRESS OF THE MASTER        *
*   QCB.  IT ALSO TESTS EACH LINE TO SEE THAT THE LINE HAS            *
*   COMPLETED ITS INITIAL I/O OPERATIONS SUCCESSFULLY.  IN THE        *
*   EVENT A LINE HAS NOT COMPLETED NORMALLY, A TEST IS MADE TO        *
*   SEE IF 28 SECONDS HAS ELAPSED SINCE THIS MODULE WAS FIRST         *
*   ENTERED.  IF THE TIME HAS ELAPSED, AN ERROR MESSAGE OF THE        *
*   FORM 'IED079I ENDING STATUS NOT RECEIVED FROM LINE XXX -          *
*   LINE UNAVAILABLE' IS WRITTEN TO THE SYSTEM CONSOLE.  IF THE       *
*   FULL TIME HAS NOT ELAPSED, WE TEST AGAIN FOR COMPLETION OF        *
*   THE INITIAL I/O OPERATION.                                        *
*   FOR CONCENTRATOR DATA READY QUEUE QCB'S, THE ROUTINE         S22026
*   ENTERS IN THE QCB STCB THE ADDRESS OF THE CONCENTRATOR       S22026
*   SEND SCHEDULER PLUS OFFSET, IN PLACE OF THE DESTINATION      S22026
*   SCHEDULER.  THIS ADDRESS EXISTS ONLY AFTER THE               S22026
*   CONCENTRATOR SEND SCHEDULER HAS BEEN LOADED INTO CORE.       S22026
*                                                                     *
*ENTRY POINTS - THIS ROUTINE IS ENTERED AT IGG01948 VIA AN XCTL       *
*   FROM IGG01940 OR IT MAY BE RE-ENTERED FROM THE RELOOP PORTION     *
*   OF THIS ROUTINE IF IT IS DETERMINED THAT ANOTHER DATA CONTROL     *
*   BLOCK IS TO BE PROCESSED BY IGG01948.                             *
*                                                                     *
*INPUT THE REGISTERS 5,6,7, AND 8 ARE THE INPUT AS FOLLOWS :          *
*                                                                     *
*   5 - THE ADDRESS OF THE WTG TABLE PREFIX                      Y02027
*                                                                     *
*   6  - THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE        *
*                                                                     *
*   7 - THE ADDRESS OF THE COPY OF THE CURRENT DCB               Y02027
*                                                                     *
*   8  - THE ADDRESS OF THE CURRENT ENTRY IN THE WHERE-TO-GO TABLE    *
*                                                                     *
*OUTPUT - INFORMATION REGARDING EACH LINE OPENED IS ENTERED IN        *
*   IN THE CROSS REFERENCE TABLE IF ONE IS REQUESTED, AND EACH        *
*   LINE IN THE LINE GROUP IS TESTED TO SEE THAT IT HAS               *
*   COMPLETED ITS INITAIL I/O OPERATIONS SUCCESSFULLY.                *
*                                                                     *
*EXTERNAL ROUTINES - NONE                                             *
*                                                                     *
*EXITS - THIS ROUTINE EXITS VIA AN XCTL TO THE EXECUTOR               *
*   IDENTIFIED BY THE NEXT NON-ZERO ENTRY IN THE WHERE-TO-GO          *
*   TABLE                                                             *
*                                                                     *
*TABLES/WORK AREAS - THE WHERE-TO-GO TABLE CONTAINS THE ID            *
*   AND TTR OF THE REQUIRED EXECUTORS.  THE WHERE-TO-GO          Y02027
*   TABLE PREFIX CONTAINS THE ADDRESS OF A COPY OF EACH          Y02027
*   DCB SPECIFIED IN THE OPEN MACRO INSTRUCTION.                 Y02027
*                                                                     *
*ATTRIBUTES - THIS ROUTINE IS EXECUTED IN THE TRANSIENT AREA          *
*   AS ENABLED, PRIVILEGED, AND RE-ENTRANT.                           *
*                                                                     *
***********************************************************************
         EJECT
*
*    REGISTER USAGE
*
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDCB     EQU   2                        ADDRESS OF THE CURRENT DCB
RTIOT    EQU   3                        WORK REGISTER
RCORE    EQU   4                        ADDRESS OF DCB WORK AREA
RPAR     EQU   5                        ADDRESS OF FIRST ENTRY IN
*                                         DCB PARAMETER LIST
RWTG     EQU   6                        ADDRESS OF THE WHERE-TO-GO
*                                         TABLE
RPARC    EQU   7                        ADDRESS OF THE CURRENT
*                                         ENTRY IN DCB PARAMETER
*                                         LIST
RWTGC    EQU   8                        ADDRESS OF THE CURRENT
*                                         ENTRY IN THE WTG TABLE
RAVT     EQU   9                        ADDRESS OF THE AVT
RUCB     EQU   10                       WORK REGISTERWORK REGISTER
RDEB     EQU   11                       WORK REGISTER
RBASE    EQU   12                       BASE OF THIS ROUTINE
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
*
         USING IEDQAVTD,RAVT            AVT DSECT
         USING IHADCB,RDCB              DCB DSECT
         USING IEDQQCB,RD               QCB DSECT
         USING IEDQLCB,RC               LCB DSECT
         USING FORCORE,RF               OPEN WORK AREA DSECT
         USING IEDQDEB,RDEB             DEB DSECT
         USING CVTD,RJ                  CVT DSECT                Y02027
         USING IEDQTCX,RJ               TCX DSECT                Y02027
*
         BALR  RBASE,0                  SET UP BASE REGISTER
         USING *,RBASE
         SPACE 2
IGG01948 IEDHJN DATE                    MODULE ID AND DATE       S22025
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE GETS THE TIME OF DAY WHEN THIS      *
*        MODULE IS ENTERED FROM THE OPEN MODULE IGG01940          *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         TIME  BIN                      GET THE TIME OF DAY
*
         LR    RCORE,RE                 COPY THE TIME OF DAY
         EJECT                                                   S22026
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  S22026
*                                                                S22026
* FOR CONCENTRATOR DATA READY QUEUE QCB'S, ENTER IN QCB STCB THE S22026
* ADDRESS OF THE CONCENTRATOR SEND SCHEDULER PLUS OFFSET IN      S22026
* PLACE OF THE DESTINATION SCHEDULER.  THE MOVE IS NOT DONE IF   S22026
* QCBSTCHN EQUALS QCBSLINK, INDICATING THAT THE LINE GROUP WAS   S22026
* NOT OPENED.                                                    S22026
*                                                                S22026
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  S22026
*                                                                S22026
         L     RJ,CVTPTR                ADDRESS OF CVT           Y02027
         USING CVTD,RJ                  CVT DSECT                Y02027
         L     RJ,CVTAQAVT              ADDRESS OF THE           Y02027
*                                       TCAM EXTENSION           Y02027
         USING IEDQTCX,RJ               TCX DSECT                Y02027
         L     RAVT,TCXAVT              ADDR OF TCAM AVT         Y02027
         TM    AVTSCOPT,AVTCONC+AVTCONCO  ARE ANY CONCENTRATORS  S22026
*                                           IN SYSTEM            S22026
         BZ    CONCEND                  NO, BYPASS INSERTION     S22026
         L     RJ,AVTRNMPT              ADDRESS OF THE TERMNAME  S22026
*                                         TABLE                  S22026
         USING IEDQTNTD,RJ              TERMNAME TABLE DSECT     Y02027
         LH    RF,TNTLEN                THE NUMBER OF ENTRIES IN S22026
*                                         THE TERMNAME TABLE     S22026
         LA    RDEB,TNTFIRST            ADDRESS OF FIRST ENTRY   S22026
         SR    RC,RC                    CLEAR LENGTH REGISTER    S22026
         IC    RC,TNTENLEN              LENGTH OF COMPARAND      S22026
*                                         FIELD                  S22026
         L     RTIOT,AVTCSCH            ADDR OF CONC SCHEDULER   S22026
         LA    RTIOT,CSO(RTIOT)         ADDR OF CONC SCHEDULER   S22026
*                                         PLUS OFFSET            S22026
TERMAD   LA    RDEB,0(RC,RDEB)          TERMINAL TABLE ADDRESS   S22026
         MVC   AVTGETMN+5(THREE),0(RDEB) MOVE CURRENT TERMINAL   S22026
*                                         ADDRESS INTO A SCRATCH S22026
*                                         AREA TO ALLIGN         S22026
         L     RD,AVTGETMN+4            LOAD THE TERMINAL ADDR   S22026
         L     RD,0(RD)                 ADDRESS OF THE           S22026
*                                         DESTINATION QCB        S22026
         LA    RD,0(RD)                 CLEAR HIGH ORDER BYTE    S22026
         CLI   QCBDSFLG,QCBDRQQ         IS THIS A DATA READY     S22026
*                                         QUEUE QCB              S22026
         BNE   TERMADL                  NO,GO CHECK NEXT QCB     S22026
         CLC   QCBSTCHN(THREE),QCBSLINK   IS SAME SUBTASK LINKED S22026
*                                           INTO BOTH FIELDS     S22026
         BE    TERMADL                  YES, SO NOT OPENED       S22026
         IC    RJ,QCBSTVTO              SAVE VECTOR TABLE OFFSET S22026
         ST    RTIOT,QCBSTCHN-1         ENTER ADDRESS OF CONC    S22026
*                                         SCHEDULER PLUS OFFSET  S22026
         STC   RJ,QCBSTVTO              RESTORE VECTOR TABLE     S22026
*                                         OFFSET                 S22026
TERMADL  LA    RDEB,3(RDEB)             BUMP TERMNAME TABLE ADDR S22026
         BCT   RF,TERMAD                DECREASE ENTRIES BY 1    S22026
CONCEND  EQU   *                                                 S22026
         BALR  RBASE,0                  SET UP BASE REGISTER
         USING *,RBASE
*
RESTART  EQU   *
         L     RF,OPWKAD(RWTGC)         LOAD OPEN WK AREA ADDR   Y02027
         L     RDCB,DXUDCBAD            LOAD USER DCB ADDR.      Y02027
         LA    RDCB,0(RDCB)             CLEAR THE HIGH ORDER BYTE
*                                         OF THE DCB ADDRESS
         LA    RJ,DEBPRFSZ              LOAD THE LENGTH OF THE DEB
*                                         PREFIX
         L     RDEB,DCBDEBAD            ADDR OF THE DEB.         Y02027
*                                         FOR THIS DCB
         SR    RDEB,RJ                  SET THE DSECT BASE FOR THIS
*                                         DEB
         L     RJ,CVTPTR                ADDRESS OF CVT           Y02027
         USING CVTD,RJ                  CVT DSECT                Y02027
         L     RJ,CVTAQAVT              ADDRESS OF THE           Y02027
*                                       TCAM EXTENSION           Y02027
         USING IEDQTCX,RJ               TCX DSECT                Y02027
         L     RAVT,TCXAVT              ADDR OF TCAM AVT         Y02027
         LA    RJ,CROSSREF              LOAD THE ADDRESS OF THE
*                                         CROSS REFERENCE ROUTINE
DCBLOAD  EQU   *
         L     RC,DCBIOBAD              LOAD THE BEGINNING ADDRESS
*                                         OF THE IOB
         LA    RTIOT,IOBPTR             LOAD THE IOB OFFSET
         SR    RC,RTIOT                 LOCATE THE BEGINNING ADDRESS
*                                         OF THE LCB
         SR    RE,RE                    CLEAR A LINE REGISTER
         IC    RE,DEBNMEXT              GET THE NUMBER OF LINES
         SR    RD,RD                    WORK REGISTERS
         IC    RD,DCBEIOBX              GET THE SIZE OF ONE LCB
         SR    RTIOT,RTIOT              CLEAR A WORK REGISTER
BRANCH   EQU   *
         BR    RJ                       BRANCH TO THE ROUTINE WHOSE
*                                         ADDRESS IS IN RJ
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE FILLS IN THE USER REQUESTED         *
*        CROSS REFERENCE TABLE WITH THE FOLLOWING INFORMATION     *
*        THE UCBNAME, THE ADDRESS OF THE UCB, THE ADDRESS OF      *
*        THE LCB ASSOCIATED WITH THIS PARTICULAR UCB, AND THE     *
*        ADDRESS OF  THE QCB FOR THIS PARTICULAR DEVICE           *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CROSSREF EQU   *
         NC    AVTCRSRF(4),AVTCRSRF     HAS A CROSS REFERENCE TABLE
*                                         BEEN REQUESTED
         BZ    TESTLINE                 NO, BRANCH
         L     RJ,AVTCRSRF              LOAD THE ADDRESS OF THE
*                                         CROSS REFERENCE TABLE
         AR    RC,RD                    ACCESS THE BEGINNING ADDRESS
*                                         OF THE FIRST LCB
         SR    RF,RF                    CLEAR AN INCREMENT REGISTER
ENTRY    EQU   *
         CLC   ONE(THREE,RJ),FIVE(RJ)   HAVE WE USED THE LAST ENTRY
*                                         IN THE CROSS REFERENCE
*                                         TABLE
         BH    RESTORE                  YES, BRANCH
         L     RTIOT,0(RJ)              LOAD THE ADDRESS OF THE
*                                         FIRST AVAILABLE ENTRY IN
*                                         THE TABLE
         MVC   0(FOUR,RJ),0(RTIOT)      MOVE THE ADDRESS OF THE
*                                         NEXT AVAILABLE ENTRY
*                                         INTO THE AVAILABLE
*                                         POSITION
         L     RUCB,DEBUCBAD(RF)        LOAD THE ADDRESS OF THE
*                                         FIRST/NEXT UCB
         LTR   RUCB,RUCB                IS THIS A // DD DUMMY ENTRY
         BZ    UPDATLCB                 YES, BRANCH
         MVC   0(4,RTIOT),UCBNAME(RUCB) MOVE THE UCBNAME INTO THE
*                                         FIRST POSITION IN THE
*                                         CROSS REFERENCE TABLE
         ST    RUCB,FOUR(RTIOT)         STORE THE ADDRESS OF THE
*                                         UCB IN THE SECOND POSITION
*                                         IN THE TABLE
         ST    RC,EIGHT(RTIOT)          STORE THE ADDRESS OF THE
*                                         LCB IN THE THIRD POSITION
*                                         IN THE TABLE
         B     QCBRTNE                  BRANCH TO THE QCB LOCATOR
*                                         ROUTINE
QCBMOVE  EQU   *
         MVC   QCBSPOT(THREE,RTIOT),AVTGETMN+1  MOVE THE QCB ADDRESS
*                                         INTO THE FOURTH POSITION
*                                         IN THE TABLE
UPDATLCB EQU   *
         LA    RC,0(RD,RC)              LOAD THE ADDRESS OF THE LCB
*                                         FOR THE NEXT LINE
         LA    RF,FOUR(RF)              INCREMENT THE INDEX REGISTER
*                                         BY FOUR
         BCT   RE,ENTRY                 DECREMENT THE LINE COUNT
*                                         AND BRANCH
RESTORE  EQU   *
         LA    RJ,TESTLINE              LOAD THE ADDRESS OF THE
*                                         LINE TEST ROUTINE
         B     DCBLOAD                  RESET CERTAIN REGISTERS
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE TESTS EACH LINE TO                  *
*          SEE THAT IT HAS COMPLETED NORMALLY                     *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TESTLINE EQU   *
         LR    RUCB,RE                  COPY THE NUMBER OF EXTENTS
         SR    RDCB,RDCB                CLEAN AN INDEX REGISTER
NEXTLCB  EQU   *
         AR    RC,RD                    LOCATE THE STARTING ADDRESS
*                                         OF THE FIRST/NEXT LCB
         L     RE,DEBUCBAD(RDCB)        LOAD THE UCB ADDRESS FOR
*                                         THIS LINE
         LTR   RE,RE                    IS THIS A // DD DUMMY ENTRY
         BZ    BCT                      YES, BRANCH
TESTPCD  EQU   *
         CLI   LCBSIOCC,CC3             CONTROL UNIT NOT OPER.   A51081
         BE    BCT                      BR YES, SAVE FOR ERP     A51081
         CLI   LCBTPCD,NOTCOMPT         HAS THE INITIAL I/O
*                                         COMPLETED ON THIS LINE
         BE    TESTDLAY                 NO, BRANCH
BCT      EQU   *
         LA    RDCB,FOUR(RDCB)          INCREMENT THE POINTER TO
*                                         THE NEXT UCB ADDRESS
         BCT   RUCB,NEXTLCB             IT HAS COMPLETED, TEST THE
*                                         NEXT LINE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        XCTL TO THE NEXT ENTRY IN THE WHERE-TO-GO TABLE
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         XC    0(2,RWTGC),0(RWTGC)      CLEAR ID TO INDICATE
*                                         LINE GROUP COMPLETION
         L     RF,FOUR(RWTGC)           LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
RELOOP   EQU   *
         LA    RWTGC,8(RWTGC)           INCREMENT CURRENT WTG
*                                         POINTER
         LA    RPARC,4(RPARC)           INCREMENT CURRENT DCB
*                                         POINTER
         CLC   0(2,RWTGC),AMIDCNST      IS IGG01940 NEEDED AGAIN
         BE    RESTART                  YES, BRANCH
         CLC   0(2,RWTGC),OPIDCNST      HAVE WE REACHED THE END OF
*                                         THE WHERE-TO-GO TABLE
         BNE   RELOOP                   CHECK NEXT WTG ENTRY
         LR    RPARC,RPAR               REINITIALIZE CURRENT WTG &
         LA    RWTGC,32(RWTG)           DCB POINTERS
ZCHECK   EQU   *
         CLI   0(RWTGC),X'00'           IS THIS ENTRY COMPLETE
         BNE   XCTLRTNE                 NO, XCTL TO NEXT LOAD
         LA    RWTGC,8(RWTGC)           INCREMENT CURRENT WTG & DCB
         LA    RPARC,4(RPARC)           POINTERS
         B     ZCHECK                   CHECK NEXT ENTRY
XCTLRTNE EQU   *
         MODESET EXTKEY=DATAMGT         GET INTO KEY 5           Y02027
         SPACE 2
         LA    RJ,DXCCW12               GET A DOUBLE WORD ADDRESS
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID AND TTR TO THE
         MVC   14(3,RWTG),2(RWTGC)      WTG TABLE
         XCTL  DE=(RWTG),SF=(E,(15))    TRANSFER CONTROL
*
         EJECT
TESTDLAY EQU   *
         LTR   RTIOT,RTIOT              HAVE WE DELAYED
         BZ    DELAY                    NO, BRANCH
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*    THIS SECTION OF CODE WRITES THE LINE UNAVAILABLE MESSAGE     *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SR    RF,RF                    CLEAR A LINE REGISTER
         IC    RF,DEBNMEXT              GET THE NUMBER OF LINES IN
*                                         IN THIS LINE GROUP
         SR    RF,RUCB                  GET THE NUMBER OF THE LINE
*                                         THAT HAS NOT COMPLETED
         SLL   RF,TWO                   MULTIPLY THE LINE NUMBER BY
*                                         FOUR
         L     RJ,DEBUCBAD(RF)          LOAD THE UCB ADDRESS FOR
*                                         THIS LINE
         L     RF,FOUR(RWTGC)           LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         LA    RF,DXCCW                 LOAD A SCRATCH AREA ADDRESS
         MVC   0(MSGEND+FOUR-MESSAGE,RF),MESSAGE  MOVE MSG INTO@OZ16529
*                                        THE OPEN WORK AREA
         MVC   LINENO(THREE,RF),UCBNAME+1(RJ) MOVE THE UCB     @OZ29413
*                                             NAME TO THE LINE @OZ29413
*                                             UNAVAILABLE MSG  @OZ29413
         SVC   WTO
*
*
         MVI   LCBSTAT1,LCBRECVN+LCBSENDN    INDICATE THAT AN
*                                            INITIAL INTERRUPT HAS
*                                         NOT BEEN RECEIVED FOR
*                                         THIS LINE
         B     BCT                      CHECK THE NEXT LINE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE COMPUTES THE AMOUNT OF ELAPSED      *
*        TIME BY COMPARING THE PRESENT TIME OF DAY WITH THE       *
*        TIME WHEN THIS MODULE WAS ENTERED FROM IGG01940          *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DELAY    EQU   *
         TIME  BIN                      GET THE CURRENT TIME
*
         CR    RE,RCORE                 IS CURRENT TIME VALUE  @ZA04001
*                                        LESS THAN INITIAL TIME@ZA04001
         BNL   COMPUTE                  NO, BRANCH             @ZA04001
*                                                              @ZA04001
         AL    RE,ONEDAY                ADD ONE DAY'S TIME TO  @ZA04001
*                                        THE CURRENT TIME      @ZA04001
COMPUTE  EQU   *
         SLR   RE,RCORE                 COMPUTE THE AMOUNT OF
*                                         ELAPSED TIME
         C     RE,LIMIT                 HAS LIMIT BEEN REACHED @ZA04001
         BL    TESTPCD                  NO, TEST AGAIN FOR LINE
*                                         COMPLETION
         LR    RTIOT,RBASE              INDICATE THAT THE DELAY HAS
*                                         COMPLETED
         B     TESTPCD                  TEST FOR LINE COMPLETION
*                                         AGAIN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE IS A SUBROUTINE OF THE AVT CROSS    *
*        REFERENCE ROUTINE AND IS USED TO LOCATE THE MASTER QCB   *
*        ASSOCIATED WITH THIS PARTICULAR UCB.                     *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
QCBRTNE  EQU   *
         STM   RE,RJ,AVTSAVE4           SAVE ALL REGISTERS
         L     RJ,AVTRNMPT              LOAD THE ADDRESS OF THE
*                                         TERMNAME TABLE
         USING IEDQTNTD,RJ              TERMNAME TABLE DSECT     Y02027
         SR    RTIOT,RTIOT              CLEAR A WORK REGISTER
         IC    RTIOT,DEBNMEXT           INSERT THE NUMBER OF LINES
*                                         ASSOCIATED WITH THIS DCB
         SR    RTIOT,RE                 COMPUTE THE RELATIVE LINE
*                                         NUMBER MINUS 1 FOR THIS
*                                         LINE
         LH    RE,TNTLEN                LOAD THE NUMBER OF ENTRIES
*                                         IN THE TERMNAME TABLE
         LA    RTIOT,ONE(RTIOT)         SET THE ACTUAL RELATIVE
*                                         LINE NUMBER
         SR    RF,RF                    CLEAR A WORK REGISTER
         IC    RF,TNTENLEN              GET THE SIZE OF THE
*                                         COMPARAND FIELD IN AN
*                                         ENTRY
         LA    RC,TNTFIRST              LOAD THE ADDRESS OF THE
*                                         FIRST ENTRY IN THE TABLE
TNTLOOP  EQU   *
         LA    RC,0(RF,RC)              ACCESS THE TERMINAL TABLE
*                                         ADDRESS PORTION OF THE
*                                         ENTRY
         MVC   AVTGETMN+1(3),0(RC)      MOVE THE TERMINAL TABLE
*                                         ADDRESS TO A SCRATCH AREA
         L     RD,AVTGETMN              LOAD THE TERMINAL TABLE
*                                         ADDRESS OF THE ENTRY
         L     RD,0(RD)                 LOAD THE ADDRESS OF THE
*                                         DESTINATION QCB
         L     RUCB,QCBRELLN            LOAD THE ADDRESS OF THE DCB
*                                         FOR THIS QCB
         LA    RUCB,0(RUCB)             CLEAR THE HIGH ORDER BYTE
*                                         OF THE ADDRESS
         CR    RUCB,RDCB                ARE THE DCB ADDRESSES THE
*                                         SAME
         BNE   QCBLOOP                  NO, BRANCH
         SR    RUCB,RUCB                CLEAR A LINE NUMBER REGISTER
         IC    RUCB,QCBRELLN            INSERT THE RELATIVE LINE
*                                         BUMBER ASSOCIATED WITH
*                                         THIS QCB
         CR    RTIOT,RUCB               ARE THE RELATIVE LINE
*                                         NUMBERS THE SAME
         BNE   QCBLOOP                  NO, BRANCH
         ST    RD,AVTGETMN              SAVE THE QCB ADDRESS UNTIL
*                                         A LATER POINT IN TIME
QCBRETRN EQU   *
         LM    RE,RJ,AVTSAVE4           RESTORE THE REGISTERS
         B     QCBMOVE                  BRANCH TO STORE THE QCB
*                                         ADDRESS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
QCBLOOP  EQU   *
         LA    RC,THREE(RC)             ACCESS THE NEXT ENTRY IN
*                                         THE TERMNAME TABLE
         BCT   RE,TNTLOOP               DECREMENT THE COUNT AND
*                                         BRANCH
         ST    RE,AVTGETMN              STORE ZEROES IN THE QCB
*                                         ADDRESS FOR THIS ENTRY
         B     QCBRETRN                 RETURN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS IS THE FORMAT OF THE LINE UNAVAILABLE MESSAGE       *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         CNOP  0,4
MESSAGE  DC    AL2(MSGEND-*)            LENGTH OF THE MESSAGE
         DC    X'8000'                  MCSFLAGS FIELD          SA62959
         DC    C'IED079I ENDING STATUS '  MESSAGE TO TELL
         DC    C'NOT RECEIVED FROM LINE ' OPERATOR THAT ENDING
LINENUMB DC    C'000 - LINE UNAVAILABLE'  STATUS NOT RECEIVED
MSGEND   EQU   *
         DC    X'10000100'              ROUTINE & DESCRPTR CODE SA62959
OPIDCNST DC    C'0S'                    ID OF SYSTEM OPEN MODULE
AMIDCNST DC    C'48'                    ID OF THIS OPEN  MODULE
LIMIT    DC    A((31)*100)              LIMIT FOR ELASPED TIME @ZA04001
         SPACE 2                                               @ZA04001
ONEDAY   DC    A((60*60*24)*100)        NUMBER OF HUNDRETHS OF @ZA04001
*                                        A SEC IN 24 HOURS     @ZA04001
ONE      EQU   1                        NUMERIC CONSTANT         Y02027
TWO      EQU   2                        A NUMERIC CONSTANT
THREE    EQU   3                        NUMERIC CONSTANT         Y02027
FOUR     EQU   4                        NUMERIC CONSTANT         Y02027
FIVE     EQU   5                        NUMERIC CONSTANT         Y02027
CSO      EQU   6                        CONC SCHEDULER OFFSET    S22026
EIGHT    EQU   8                        NUMERIC CONSTANT         Y02027
UCBNAME  EQU   12                       UCB NAME                 Y02027
QCBSPOT  EQU   13                       QCB OFFSET IN CROSS REF  Y02027
CVT      EQU   16                       ADDRESS OF CVT           Y02027
IOBPTR   EQU   32                       IOB OFFSET IN LCB        Y02027
WTO      EQU   35                       WTO SVC                  Y02027
DEBPRFSZ EQU   36                       OFFSET TO START OF DEB   Y02027
NOTCOMPT EQU   X'02'                    I/O COMPLETION TEST VALUEY02027
CC3      EQU   X'70'                    SIO COND CODE = 3        A51081
OPWKAD   EQU   4                        OFFSET TO OPEN WK AREA ADY02027
NENT     EQU   1
LENGTH   EQU   NENT*6+6                 LENGTH OF IDTTR'S + 6
NODBWDS  EQU   (LENGTH+7)/8             NUMBER OF DOUBLE WORDS WITH
*                                         PADDING
LINENO   EQU   LINENUMB-MESSAGE         OFFSET OF LINE IN MSG  @OZ29413
ORGIDTTR EQU   1024-NODBWDS*8           START OF IDTTR LIST
         ORG   IGG01948+ORGIDTTR        LEAVE SPACE FOR LIST
TCAM34   DC    C'34'                    ID OF THE INITIAL LOADING
*                                         EXECUTOR
         DC    XL4'00'                  TTR AND LENGTH
IDEND    DC    X'0000'                  END OF ID
         CNOP  4,8
LOADID   DC    C'019'                   ID FOR LOAD
         DC    YL1(X'80'-NODBWDS)       END OF IDTTR LIST
*
         EJECT
         TTRMD
         EJECT
FORCORE  DSECT
         IECDSECT
         EJECT
         TTNTD
         EJECT
         TQCBD
         EJECT
         TDEBD
         EJECT
         TAVTD
         EJECT
         TLCBD
         EJECT
         DCBD  DSORG=TX
         EJECT
CVTD     DSECT                                                   Y02027
         CVT                                                     Y02027
         EJECT
         TTCXD                                                   Y02027
         END
