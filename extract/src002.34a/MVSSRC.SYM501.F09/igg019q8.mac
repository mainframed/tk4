19Q8     TITLE 'IGG019Q8-SUBROUTINE FOR IGG01945-CONTINUATION RESTART'
         SPACE 3
IGG019Q8 CSECT
         SPACE 3
*CHANGE ACTIVITY = AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A000000-999999                                                @Y16X5C0
*MODULE RESEQUENCED                                             SA51078
*CODES WERE SA50192,SA53610,SA52971,S21903,S21101
*A428400                                                        SA61740
*A430200                                                        SA61740
*A477900                                                        SA61045
*A306000,405900                                                 SA61769
*C317700-345600                                                 SA61769
*A472501-472502,474301                                          SA59179
*C 824400,828000                                                SA63974
*A517500,519300                                                 SA66335
*A592200                                                        SA66921
*D607500-608400                                                 SA66921
*A091800,893700                                                 OX03959
*C884700,886500-891000,892800                                   OX03959
*A894100                                                       @SA69965
*C513900,516600,518400,765900                                  @SA70310
*A475200                                                       @SA70665
*C406100,406120                                                @SA71083
*D405980                                                       @SA71083
*A406020,406140                                                @SA71083
*A092200,895500                                                @SA71107
*D380724-381000                                                @SA71107
*C307300,312300,500400-503100,657900-659700,690300-693000      @SA71107
*C700200-701100                                                @SA71107
*A207000,907200,911700                                         @XA05305
*C036900,111600                                                @XA05305
*D478800-481500                                                @ZA02629
*A486900,875700                                                @ZA02629
*A475800                                                       @SA74049
*A875700                                                       @ZA03082
*C372900                                                       @SA72478
*A265500,386100,406140,757800                                  @SA72478
*A421200,900900                                                @SA74246
*A234900,299700,308700,354600,373500,406200,406360,422100,     @YA11145
*A450000,550800,636300,663300,674100,682200,694800,708300,     @YA11145
*A713700,720000,782100,787500,798300,804600,810900,828400,     @YA11145
*A845100,849600,901300,909900                                  @YA11145
*D378900,822600                                                @YA11145
*A416700,874800                                                @XA11306
*C484200,493200,756900,876100                                  @XA11306
*A431100,525600                                                @SA75766
*C405660,555300                                                @SA75766
*C757300,874880-874920,875240,875320,875360,875480-875520      @OS76477
*C876340,876500                                                @OS76477
*A493200,496800,901800                                         @OY11175
*C485100                                                       @OY11175
*C701000                                                       @OY12275
*A269100,902400                                                @OS76678
*C417100,875160                                                @OS76678
*A004900,245400                                                @Y17XARX
*C011700,014400,017100,245100,245400                           @Y17XARX
*D009000                                                       @Y17XARX
*A235170,901800                                                @OS77390
*A421200                                                       @OZ14161
*C484200-484800,493200,876100-876420                           @OZ08356
*D269400-269700,417100,756900-757500,874840-875580,876500      @OZ08356
*D902500-902600                                                @OZ08356
*A234930,347400,367200,592200                                  @OS77945
*C240300                                                       @OS77945
*C406580                                                       @OX16402
*A245700,421280,767700,903600                                  @OZ17620
*C406580,477050-477850                                         @OX16402
*A434700,476000                                                @OX16402
*D253000-253400,478000,782821-782857                           @OX16402
*A235530                                                       @OZ24281
*D235590                                                       @OZ24281
*A143100,144000                                                @OS80044
*A387000,758400,904000                                         @OX20945
*C476048                                                       @OX20945
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE-NAME = IGG019Q8  (TCAM, CHECKPOINT/RESTART)            @Y17XARX
*                                                                     *
*DESCRIPTIVE-NAME=SUBROUTINE FOR IGG01945-CONTINUATION RESTART @Y17XARX
*                                                                     *
*COPYRIGHT = 'NONE'                                                   *
*                                                                     *
*  STATUS:  VERSION 10.0                                       @Y17XARX
*                                                                     *
*FUNCTION:THIS MODULE IS USED AS AN EXTENTION OF IGG01945 FOR         *
*   CONTINUATION RESTART.                                        CLUP21
*   WHEN ENTERED AT THE FIRST ENTRY POINT, IT SCANS THE MESSAGE  CLUP21
*   QUEUES TO RECONSTRUCT THE QUEUING CHAINS.                    CLUP21
*   WHEN ENTERED AT THE SIXTH ENTRY POINT, IT MOVES INVITATION   CLUP21
*   LIST DATA FROM THE CHECKPOINT RECORD.                        CLUP21
*   WHEN ENTERED AT THE EIGTH ENTRY POINT, IT READS A CHECKPOINT CLUP21
*   RECORD.                                                      CLUP21
*   ALL OTHER ENTRY POINTS ARE TABLE FILLERS, AND, IF USED, CAUSECLUP21
*   A DEAD LOOP.                                                 CLUP21
*                                                                     *
*ENTRY POINTS:                                                        *
*                                                                     *
*        IGG019Q8    - SCAN MESSAGE QUEUES                       CLUP21
*        IGG019Q8+4  - TABLE FILLER (IF USED, RESULTS IN A DEAD  CLUP21
*                      LOOP)                                     CLUP21
*        IGG019Q8+8  - TABLE FILLER (IF USED, RESULTS IN A DEAD  CLUP21
*                      LOOP)                                     CLUP21
*        IGG019Q8+12 - TABLE FILLER (IF USED, RESULTS IN A DEAD  CLUP21
*                      LOOP)                                     CLUP21
*        IGG019Q8+16 - CHECK INVITATION LIST FOR IGG01943      @XA05305
*        IGG019Q8+20 - MOVE DATA TO INVITATION LIST FOR IGG01943 CLUP21
*        IGG019Q8+24 - TABLE FILLER (IF USED, RESULTS IN A DEAD  CLUP21
*                      LOOP)                                     CLUP21
*        IGG019Q8+28 - CONVERT TTR AND SECTOR; THEN, READ        CLUP21
*                      CHECKPOINT RECORD FOR IGG01943 OR IGG01944CLUP21
*                                                                     *
*INPUT:REGISTER 2 HAS ADDRESS OF CHECKPOINT WORK AREA,REGISTER 12     *
*   HAS THE ADDRESS OF IGG019Q8 ENTRY POINT                           *
*                                                                     *
*OUTPUT:REGISTERS REMAIN UNCHANGED                                    *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*                                                                     *
*        IGG019RC-ACCESS MESSAGE QUEUES DATA SET                      *
*        IGG019RC-WTORTN-DISK ERROR HANDLING                     99226
*                                                                     *
*EXITS-NORMAL:THIS MODULE BRANCHES TO ADDRESS IN REGISTER 14.         *
*                                                                     *
*EXITS-ERROR-BRANCH TO THE WTORTN OF IGG019RC ON DISK ERRORS     99226
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   AVT                                                               *
*   CHECKPOINT WORK AREA                                              *
*   TERMINAL TABLE                                                    *
*   QCB                                                               *
*                                                                     *
*ATTRIBUTES: REENTERABLE                                              *
*                                                                     *
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         SPACE 3
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0                        ZERO                     S22024
R1       EQU   1                        REG 1                    S22024
R2       EQU   2                        ADDRESS OF CKPT WORK AREA
R3       EQU   3                        ADDRESS OF CPB
R4       EQU   4                        ADDRESS OF PREFIX
R5       EQU   5                        LENGTH OF TERMNAME
R6       EQU   6                        ADDRESS OF TERMNAME ENTRY
R7       EQU   7                        ADDRESS OF QCB
R8       EQU   8                        ADDRESS OF TERMINAL ENTRY
RAVT     EQU   9                        ADDRESS OF AVT
R10      EQU   10                       ADDRESS OF DATA FIELD
R11      EQU   11                       COUNT OF TERMNAME ENTRIES
R12      EQU   12                       BASE REG
R13      EQU   13                       REG 13                   S22024
R14      EQU   14                       BRANCH REG
R15      EQU   15                       REG 15                   S22024
         SPACE 3                                                 CLUP21
* ADDITIONAL EQUATES                                             CLUP21
         SPACE 1                                                 CLUP21
INCR     EQU   4                        FOUR                     S22024
DIV2     EQU   1                        ONE                      S22024
DIV4     EQU   2                        CONSTANT FOR DIVIDE     OX03959
ADDRSIZE EQU   3                        SIZE OF ADDRESS FIELD  @SA71107
LASTBYTE EQU   2                        OFFSET TO LAST BYTE    @SA71107
ADDR     EQU   7                        MASK FOR ICM           @SA71107
LEN2     EQU   2                        LENGTH OF TWO          @OZ08356
         SPACE 3
         USING *,R12                                               0918
         SPACE 3
*BRANCH TABLE FOR ENTRIES FROM IGG01945
         SPACE
         B     Q809                     MAKE CHECKS BEFORE SCANNING0419
         B     *                        BRANCH TABLE FILLER      CLUP21
*                                       - THIS ENTRY POINT SHOULDCLUP21
*                                         NEVER BE USED AS IT    CLUP21
*                                         WILL RESULT IN A DEAD  CLUP21
*                                         LOOP                   CLUP21
         B     *                        BRANCH TABLE FILLER      CLUP21
*                                       - THIS ENTRY POINT SHOULDCLUP21
*                                         NEVER BE USED AS IT    CLUP21
*                                         WILL RESULT IN A DEAD  CLUP21
*                                         LOOP                   CLUP21
         B     *                        BRANCH TABLE FILLER      CLUP21
*                                       - THIS ENTRY POINT SHOULDCLUP21
*                                         NEVER BE USED AS IT    CLUP21
*                                         WILL RESULT IN A DEAD  CLUP21
*                                         LOOP                   CLUP21
         B     Q8INVCHK                 CHECK INV LIST SUBRTN  @XA05305
         B     Q870                     MOVE DATE TO INV LIST      0216
         B     *                        BRANCH TABLE FILLER      CLUP21
*                                       - THIS ENTRY POINT SHOULDCLUP21
*                                         NEVER BE USED AS IT    CLUP21
*                                         WILL RESULT IN A DEAD  CLUP21
*                                         LOOP                   CLUP21
*        B     Q800                     CONVERT ADDRESS AND READ CLUP21
*                                            RECORD              CLUP21
IGG019Q8 IEDHJN Q800                    ID AND DATE              CLUP21
         USING IEDQAVTD,RAVT            BASE FOR AVT               0918
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA    0918
         USING IEDQCPB,R3               BASE FOR CPB
         USING IEDQPRF,R4               BASE FOR PREFIX
         USING IEDQTNTD,R6
         USING IEDQQCB,R7
         USING IEDQTRM,R8
         SPACE
**********************************************************************
         SPACE 3
*CONVERT TTR TO ABSOLUTE ADDRESS,CONVERT TRACK DATA LENGTH TO A
*SECTOR ID, AND READ A CHECKPOINT RECORD.
         SPACE
         ST    R14,CKPSAVE1             SAVE RETURN ADDRESS        0419
         L     R13,CKPCVTPT             GET CVT ADDRESS            0416
         L     R15,CKPCNTTR(,R13)       GET CONVERSION ROUTINE ADDR0416
         LR    R3,R2                    SAVE CKPT BASE             0419
         LM    R1,R2,CKPCPARM           PARAMETERS FOR TTR CONVERT 0419
         SLL   R0,CKP1BYTE              POSITION TTR               0419
         BALR  R14,R15                  CONVERT TTR TO ABSOLUTE ADD0419
         LR    R2,R3                    RESTORE CKPT BASE          0419
         L     R12,CKPSAVE1+8           RESTORE BASE REG           0506
         TM    CKPFLAGS,CKPOPNIN        ENTRY FROM IGG01944    @OS80044
         BNO   NOT1944                  NO, BRANCH             @OS80044
         ST    R15,CKPSAVE2+60          SAVE RETURN CODE           0504
NOT1944  EQU   *                                               @OS80044
         LTR   R15,R15                  CHECK RETURN CODE          0419
         BNZ   Q804                     BRANCH IF END OF DATA SET  0504
         CLI   CKPSETSC,CKPNOOP         CHECK FOR RPS FEATURE      0416
         BE    Q803                     BRANCH IF NOT SUPPORTED    0419
         LH    R0,CKPTRKLN              GET DATA ON TRACK          0416
         O     R0,Q8FLAG-2              SET FLAG FOR CNVRT  0507 S21101
         SLL   R0,CKP2BYTE              SHIFT TO LOW ORDER HALF WORD416
         IC    R0,CKPIOR                GET RECORD NUMBER
         L     R2,CKPPARM2              GET UCB INDEX AND ADDRESS  0416
         L     R13,CKPCVTPT             ADDRESS OF CVT             0419
         L     R15,CKPCNSEC(,R13)       GET ADDR ON SECTOR CONVERT 0416
         BALR  R14,R15                  GET SECTOR ID              0416
         LR    R2,R3                    RESTORE CKPT BASE          0416
Q803     EQU   *                                                   0419
         EXCP  CKPIOB                   READ CKPT RECORD           0419
         WAIT  ECB=CKPECB               WAIT FOR IO             SA51078
Q804     EQU   *
         LM    R0,R10,CKPSAVE2          RESTORE REGS            SA51078
         LM    R13,R15,CKPSAVE2+R13OFF  RESTORE REMAIN REGS     SA51078
         L     R14,CKPSAVE1             RESTORE RETURN ADDR     SA51078
         TM    CKPFLAGS,CKPOPNIN        ENTRY FROM 1944         SA51078
         BCR   7,R14                    BRANCH IF YES           SA51078
         USING IEDQCDRD,R11             BASE FOR DISK RCD       SA51078
         L     R11,CKPEXCP              RESTORE ADDR OF DISK RCD
         TM    CKPECB,X'7F'             CHECK FOR DISK ERROR
         BNO   QME98                    BRANCH IF ERROR
         CLI   CDRKEY,0                 CHECK FOR RCD NOT INITIALZ 0525
         BE    QME9805                  BR IF RCD STILL ZERO    SA51078
         LH    R15,CKPSECLT             TRACK DATA LENGTH   0419 S21101
         AH    R15,CKPBPERR             ADD LENGTH OF RCD   0419 S21101
         STH   R15,CKPSECLT             SAVE RESULT         0419 S21101
         LR    R15,R0
         SPACE 3
         LA    R0,1(0,R15)              GET TTR OF NEXT RECORD
         EX    R15,QMECOMPR             CHECK FOR END OF TRACK
         BNE   QME91                    BRANCH IF NOT END          1014
         LA    R0,CKP101(0,R15)         GET NEXT TRACK
         IC    R0,QMEONE                GET 1ST RECORD
         XC    CKPSECLT,CKPSECLT        INIT TO BEGINNING OF0419 S21101X
                                        TRACK               0419 S21101
QME91    EQU   *                                                   1014
         MVC   CKPDATIM(8),CDRDATE      SAVE DATE,TIME TO COMPARE
         MVC   CKPTTRLI,CDRTTRLI        LAST INC RCD AT TIME OF ENV0922
         LA    R11,CDRTINFO(0,R11)      MOVE TO DATA FIELD
         L     R12,CKPSAVE2+R12OFF      RESTORE 1943 BASE       SA51078
         B     GOODRTN(R14)             RETURN                  SA51078
         SPACE 3
*DISK ERROR -ISSUE WTO
         SPACE
QME98    EQU   *
         L     R1,CKPCTTRA              GET ADDR OF TTR
         XC    0(3,R1),0(R1)            CLEAR TO INDICATE DISK ERR
         SPACE 3
*SUBROUTINE TO INCREMENT DISK ERROR COUNT SO THAT ERROR MSGS CAN BE1109
*WRITTEN LATER BY IGG01942
         SPACE
QME9805  EQU   *                                                   0728
         IC    R1,CKPERRCT              PICK UP ERROR COUNT        1109
         LA    R1,1(,R1)                ADD 1 TO COUNT             1109
         STC   R1,CKPERRCT              RESTORE COUNT              1109
         L     R12,CKPSAVE2+R12OFF      RESTORE 1943 BASE       SA51078
         B     BADRTN(R14)              RETURN                  SA51078
         SPACE
         DROP  R11                                              SA51078
*END OF SUBROUTINE
         SPACE 2
QMECOMPR CLI   CKPRPERT,0               USED TO CHECK FOR END   SA51078
*                                       OF TRACK WHEN READING   SA51078
*                                       ENVIRON RCDS            SA51078
QMEONE   DC    X'1'                     INIT RCD NO             SA51078
         EJECT                                                 @XA
*        SUBROUTINE TO CHECK INVITATION LIST FOR IGG01943      @XA05305
*                                                              @XA05305
Q8INVCHK DS    0H                                              @XA05305
*                                       RESTORE 1943'S BASE    @XA05305
         L     R12,CKPSAVE1-IEDQCKPD(,R2)                      @XA05305
*                                       INVITATION LIST DEFINED@XA05305
         CLC   QCBRELLN-IEDQQCB(RLNLEN,R7),DCBILCT-IHADCB(R10) @XA05305
         BHR   R13                      BR NO                  @XA05305
*                                                              @XA05305
*                                       GET INV LIST ADDRESS   @XA05305
         L     R4,DCBINVLI-IHADCB(R4,R10)                      @XA05305
         LA    R4,AVTEZERO(,R4)         CLEAR THE HI ORDER BYTE@XA05305
         LTR   R4,R4                    INVLIST OMITTED ON GRP @XA05305
         BZR   R13                      BR YES                 @XA05305
*                                                              @XA05305
         CLI   INVENTS(R4),AVTEZERO     DOES LIST HAVE ENTRIES @XA05305
         BZR   R13                      BR NO                  @XA05305
*                                                              @XA05305
         TM    INVSTAT(R4),CKPSET2      LIST ALREADY PROCESSED @XA05305
         BOR   R13                      BR YES                 @XA05305
*                                                              @XA05305
         B     GOODRT43(,R13)           TAKE GOOD RTRN TO 1943 @XA05305
         EJECT                                                 @XA
         SPACE 3
* SUBROUTINE FOR 1943 TO MOVE DATE TO INVITATION LIST              0216
         SPACE
Q870     DS    0H                                               SA51078
         CR    R3,R1                    CHECK LENGTH TO BE MOVED   1014
         BL    QME94                    BRANCH IF REST OF SEG TO MV1014
         LR    R3,R1                    USE SHORTER LENGTH         1014
QME94    EQU   *                                                   1014
         LR    R5,R3                    COPY LENGTH TO BE MOVED    1014
         SR    R1,R3                    GET REMAINDER TO BEMOVED   1022
         SRL   R3,8                     GET COUNT OF EXECUTES REQ  1014
         LA    R3,1(,R3)                ADD 1 TO COUNT             1014
         N     R5,QME000F               CLEAR ALL NUT LAST BYTE    1014
QME95    EQU   *                                                   1014
         BCTR  R5,0                     SUBTRACT 1 FOR EXECUTE     1014
         EX    R5,QMEMOVE               MOVE DATA                  1014
         LA    R4,1(R4,R5)              UPDATE POINTER TO DATA     1014
         LA    R11,1(R11,R5)            UPDATE POINTER TO RCD      1014
         LA    R5,QMEMOVEL              LENGTH FOR E NEXT EXECUTE  1014
         BCT   R3,QME95                 BRANCH IF ANOTHER EXECUTE  1014
         L     R12,CKPSAVE1             RESTORE BASE FOR 1943      0216
         BR    R13                      RETURN
         SPACE
*END OF SUBROUTINE
         SPACE
***********************************************************************
         EJECT ,                                                 CLUP21
*CHECK OUT TERM ENTRY AND QCB BEFORE STARTING SCAN
         SPACE
Q809     EQU   *                                                   0419
         STM   R14,R12,AVTSAVE1+12      SAVE REGISTERS           CLUP21
         XC    CKPSAVE2(40),CKPSAVE2    CLEAR WORK AREA        @YA11145
         TM    AVTBIT3,AVTSTAYN         SCAN SPECIFIED         @OS77945
         BO    NOFORMAT                 NO, SKIP GETMAIN       @OS77945
GETMAIN  EQU   4                                               @YA11145
         MVC   AVTSAVE4+C12(GMEND-GETML),GETML  MOVE LIST      @YA11145
         LA    R1,GMAIN                 GET ADDR OF TARGET     @YA11145
         STCM  R1,ADDR,AVTSAVE4+C17     SET TARGET ADDR        @YA11145
         LA    R1,AVTSAVE4+C12          POINT LIST             @YA11145
         SVC   GETMAIN                  ISSUE GETMAIN          @YA11145
         LTR   R15,R15                  CHECK RETURN CODE      @YA11145
         BNZ   NOFORMAT                 NO CORE, SKIP FORMAT   @YA11145
         L     R3,LENGTH                GET LENGTH OF AREA     @OS77390
         L     R1,GMAIN                 GET ADDRESS            @OS77390
         MVI   LENGTH,SP250             SET SUBPOOL            @OS77390
         L     R0,LENGTH                GET LENGTH AND SUBPOOL @OS77390
         FREEMAIN R,LV=(0),A=(1)        FREE AREA              @OS77390
         SH    R3,ABNDCORE              SUBTRACT ENOUGHT FOR   @OS77390
*                                       ABEND FUNCTION         @OS77390
         XC    GMAIN(8),GMAIN           CLEAR ADDR AND LENGTH  @OS77390
         C     R3,SIZES                 IS REMAINING LENGTH    @OS77390
*                                       LESS THAN MINIMUN      @OS77390
         BL    NOFORMAT                 YES,NOT ENOUGH CORE    @OS77390
         ST    R3,SIZES+4               SET NEW UPPPER BOUND   @OS77390
         LA    R1,AVTSAVE4+C12          POINT TO LIST          @OS77390
         SVC   GETMAIN                  ISSSUE GETMAIN         @OS77390
         LTR   R15,R15                  CHECK RETURN CODE      @OS77390
         BNZ   NOFORMAT                 NO CORE,SKIP FORMAT    @OS77390
         L     R3,GMAIN                 GET ADDR OF FIRST UNIT @YA11145
         LR    R5,R3                    PUT ADDR OF FIRST UNIT @YA11145
         A     R5,LENGTH                ADD LENGTH OF AREA     @YA11145
         LA    R4,PRFSHDR-IEDQPRF       SIZE OF UNIT           @YA11145
         SR    R5,R4                    SET FOR BXLE LOOP      @YA11145
FMTLOOP  LA    R6,0(R3,R4)              POINT TO NEXT UNIT     @YA11145
         STCM  R6,ADDR,PRFTIC+1-IEDQPRF(R3) CHAIN TO NEXT UNIT @YA11145
         BXLE  R3,R4,FMTLOOP            RELOOP TO CHAIN UNITS  @YA11145
ENDFMT   SR    R3,R4                    BACK UP TO LAST UNIT   @YA11145
         XC    PRFTIC+1-IEDQPRF(3,R3),PRFTIC+1-IEDQPRF(R3)     @YA11145
*                                       CLEAR LINK OF LAST     @YA11145
         MVC   NXTAVAIL(4),GMAIN        SET POINTER TO FIRST   @YA11145
NOFORMAT EQU   *                                               @OZ24281
         LM    R14,R12,AVTSAVE1+12      RESTORE REGISTERS      @YA11145
         SPACE 3                                                SA52971
*BEGINNING OF LOOP THROUGH TERMNAME TABLE
         SPACE
         TM    AVTBIT3,AVTSTAYN         SCAN SPECIFIED          SA51078
         BO    QMJ10                    BRANCH IF NO            SA51078
         TM    AVTCKELF,AVTNQBCK        RETRIEVAL NEEDED       @OS77945
         BO    SCAN2                    NO, SKIP SCAN ONE      @OS77945
         OI    CKPFLAGS,CKPFSCN1        SET FOR FIFO SCANS     @OS77945
SCAN2    EQU   *                                               @OS77945
         OI    CKPFLAGS,CKPFSCN2        SET FOR SCAN TWO       @OS77945
*                                       SET FOR FIFO SCANS      SA51078
QMJ10    EQU   *
         LA    R15,QMJ80                BRANCH ADDRESS             0825
         MVC   CKPTRMAD+1(3),0(R6)      MOVE ADDR TO WORD BOUNDARY
         L     R8,CKPTRMAD              LOAD ADDR
         TM    TRMSTATE,TRMPROC         TPROCESS?              @Y17XARX
         BO    Q80903                   YES - CHECK QCB        @Y17XARX
         TM    TRMSTATE,TRMPREF         3705 RESOURCE?         @Y17XARX
         BNO   Q80903                   NO - CHECK QCB         @Y17XARX
         USING IEDNTRM,R7                                      @Y17XARX
         LR    R7,R8                    GET TTE PTR            @Y17XARX
         LA    R14,TRMPRFSZ             GET NEG PREFIX SIZE    @Y17XARX
         SR    R7,R14                   GET NEG TTE PTR        @Y17XARX
         CLI   TRMTYPE,TRMGRP           GROUP?                 @Y17XARX
         BER   R15                      YES - NO QCB           @Y17XARX
         CLI   TRMTYPE,TRMSSCP          SSCP?                  @Y17XARX
         BER   R15                      YES - NO QCB           @Y17XARX
Q80903   EQU   *                                               @Y17XARX
         USING IEDQQCB,R7                                      @Y17XARX
         L     R7,TRMDESTQ-1            ADDR OF QCB
         TM    TRMSTATE,TRMLIST         IS THE LIST BIT ON      SA53610
         BNO   Q80905                   BRANCH IF NOT           SA53610
         TM    TRMSTATE,TRMLOG          IS THIS LOGTYPE         SA53610
         BCR   14,R15                   BR IF NOT               SA52971
         SPACE
Q80905   EQU   *                                                SA53610
         TM    QCBDSFLG,QCBDISK         CHECK FOR DISK QUEUES
         BCR   8,R15                    BR IF CORE ONLY          CLUP21
         MVC   CKPSAVE1(1),QCBFLAG      MOVE FLAG               SA51078
         NI    CKPSAVE1,QCBCKPT         RESET ALL EXCEPT CKPT   SA51078
         CLC   CKPSAVE1(1),CKPSWCH1     QCB ALREADY DONE        SA51078
         BE    CLRCNT                   BRANCH IF YES           SA51078
         XI    QCBFLAG,QCBCKPT          INDICATE QCB DONE       SA51078
         SPACE
         LA    R14,AVTADEBR             ASSUME REUSABLE          CLUP21
         TM    QCBDSFLG,QCBREUS         CHECK DISK TYPE            0602
         BO    Q810                     BRANCH IF REUSABLE DISK    0923
         LA    R14,AVTADEBN             RESET TO PERMANENT       CLUP21
Q810     EQU   *                                                   0923
         NC    AVTEZERO(4,R14),AVTEZERO(R14) CHECK FOR OPENED DEBCLUP21
         BCR   8,R15                    BR IF NOT OPENED         CLUP21
         XC    QCBMSGCT(2),QCBMSGCT     CLEAR MSG CNT TO ZERO    S21101
         MVI   AVTSAVE1,AVTEZERO        SET PRILVL INDEX=ZERO  @SA72478
         XC    AVTSAVE4+60(3),AVTSAVE4+60 CLEAR FEFO VALUE     @OX16402
QMJ35    EQU   *
         TM    CKPFLAGS,CKPFSCN1+CKPFSCN2                       SA51078
*                                       FIFO SCANS IN PROGRESS  SA51078
         BZ    FEFOSCAN                 BRANCH IF NO            SA51078
         EJECT                                                  SA51078
****************************************************************SA51078
*        PERFORM TWO FIFO SCANS.                                SA51078
*                                                               SA51078
*        SCAN ONE                                               SA51078
*        SCAN THE QUEUES IN FIFO ORDER STARTING FROM            SA51078
*        CHECKPOINTED QCBPQBCK UPDATING QCBQBACK AND            SA51078
*        QCBPQBCK AS FAR AS POSSIBLE WITHOUT RECHAINING.        SA51078
*                                                               SA51078
*        SCAN TWO                                               SA51078
*        SCAN THE QUEUES IN FIFO ORDER STARTING FROM            SA51078
*        THE UPDATED QCBPQBCK.  THIS SCAN IS NECESSARY TO       SA51078
*        UPDATE QCBQBACK AND QCBPQBCK.  THE TECHNIQUE IS TO     SA51078
*        READ QCBPQBCK READ PRFNHDR READ PRFHQBCK-PRFTQBCK      SA51078
*        UNTIL EITHER A LOGICAL READ ERROR OR ONE OF THE STOP   SA51078
*        CONDITIONS OCCUR.  THEN RECHAIN EVERY THING WE HAVE    SA51078
*        READ IF WE STOPED BECAUSE OF A LOGICAL READ ERROR.     SA51078
****************************************************************SA51078
         SPACE 3                                                SA51078
FIFOSCNS EQU   *                                                SA51078
         MVC   CPBADDR+1(3),QCBDNHDR    SET TO START OF READ    SA51078
*                                       IF QCBPQBCK IS ZERO     SA51078
         NC    QCBPREVF,QCBPREVF        PREVF ZERO              SA50192
         BZ    USEDNHDR                 BRANCH IF YES           SA50192
         MVC   CPBADDR+1(3),QCBPREVF    SET START OF READ       SA50192
*                                       IF QCBPFEFO IS ZERO     SA50192
         NC    QCBPFEFO,QCBPFEFO        PFEFO ZERO              SA50192
         BNZ   USEDNHDR                 BRANCH IF NO            SA50192
         MVC   QCBPQBCK,QCBPREVF        SET PQBCK BACK          SA50192
USEDNHDR EQU   *                                                SA50192
         NC    QCBPQBCK,QCBPQBCK        PQBCK ZERO              SA51078
         BZ    RDDNHDR                  BRANCH IF YES           SA51078
         MVC   CPBADDR+1(3),QCBPQBCK    READ PQBCK              SA51078
RDDNHDR  EQU   *                                                SA51078
         MVI   ACTCODE,RKDH             SET CODE FOR READ HDR  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   CPBADDR+1(3),PRFCRCD     LOGICAL READ ERROR      SA51078
         BNE   NXTPQCB                  BRANCH IF YES           SA51078
         NC    QCBPQBCK,QCBPQBCK        PQBCK SET               SA51078
         BNZ   PQBCKSET                 BRANCH IF YES           SA51078
         NC    PRFHQBCK,PRFHQBCK        FIRST MSG ON QUEUE      SA61769
         BNZ   STBKFRST                 BRANCH IF NO            SA61769
         MVC   QCBPQBCK,PRFCRCD         SET PQBCK               SA51078
PQBCKSET EQU   *                                                SA51078
         L     R15,TRMDESTQ-1           LOAD MASTER QCB ADDR    SA61769
         NC    QCBQBACK-IEDQQCB(,R15),QCBQBACK-IEDQQCB(R15)     SA61769
*                                       QBACK SET               SA61769
         BNZ   QBCKSET                  BRANCH IF YES           SA61769
         MVC   QCBQBACK-IEDQQCB(,R15),QCBPQBCK                  SA61769
*                                       SET QBACK               SA61769
QBCKSET  EQU   *                                                SA61769
         MVC   CKPSAVE2+8(3),PRFCRCD    SAVE HDR ADDR           SA61769
         BAL   R14,READMSG              READ THE ENTIRE MSG     SA61769
         BAL   R14,CHKIFEFO             GO CHK IF FIRST         SA50192
         LA    R1,QCBDNHDR              SET MOVE TO ADDRESS    @SA71107
         LA    R15,PRFNHDR              SET MOVE FROM ADDRESS  @SA71107
         BAL   R14,MOVER                CHECK DNHDR            @SA71107
         MVC   CPBADDR+1(3),PRFNHDR     READ NXT HDR IN FIFO    SA51078
RDFIFO1  EQU   *                                                SA51078
         MVI   ACTCODE,RKDH             SET CODE FOR READ HDR  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   CPBADDR+1(3),PRFCRCD     LOGICAL READ ERROR      SA51078
         BNE   NXTPQCB                  BRANCH IF YES           SA51078
STBKFRST EQU   *                                                SA61769
         LA    R1,QCBDNHDR              SET MOVE TO ADDRESS    @SA71107
         LA    R15,PRFNHDR              SET MOVE FROM ADDRESS  @SA71107
         BAL   R14,MOVER                CHECK DNHDR            @SA71107
         MVC   CKPSAVE2+8(3),PRFCRCD    SAVE HDR ADDR           SA51078
         MVC   CKPSAVE2(3),PRFCRCD      SAVE LAST GOOD READ     SA51078
         MVC   CKPSAVE2+3(3),PRFNHDR    SAVE NXT HDR IN FIFO    SA51078
         SPACE 1                                                SA51078
         BAL   R14,READMSG              READ THE ENTIRE MSG     SA61769
CHKSTOP  EQU   *                                                SA51078
         BAL   R14,CHKIFEFO             GO CHK IF FIRST         SA50192
         TM    AVTCKELF,AVTNQBCK        RETRIEVAL NEEDED       @OS77945
         BO    SETNEXT                  NO, READ FORWARD ONLY  @OS77945
         L     R15,TRMDESTQ-1           MASTER QCB ADDR         SA51078
         CLC   QCBPQBCK,PRFCRCD         READ PQBCK              SA51078
         BE    SETPQBCK                 BRANCH IF YES           SA51078
         CLC   QCBQBACK-IEDQQCB(,R15),PRFCRCD                   SA51078
*                                       READ QBACK              SA51078
         BE    SETQBCK                  BRANCH IF YES           SA51078
         BAL   R14,SETQBKPT             SET REG 1 EQUAL QBACK   SA50192
         MVC   CPBADDR+1(3),0(R1)       SET READ ADDR           SA51078
         MVI   ACTCODE,RKDQ             SET CODE = READ QBACK  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   CPBADDR+1(3),PRFCRCD     LOGICAL READ ERROR      SA51078
         BNE   RECHAIN1                 BRANCH IF YES           SA51078
         MVC   CKPSAVE2(3),PRFCRCD      SAVE LAST GOOD READ     SA51078
         B     CHKSTOP                  BRANCH TO CHK STOP CONDXSA51078
SETPQBCK EQU   *                                                SA51078
         CLC   QCBQBACK-IEDQQCB(,R15),QCBPQBCK                  SA51078
*                                       PQBCK AND QBACK EQUAL
         BNE   SETPQCB                  BRANCH IF NO            SA51078
SETQBCK  EQU   *                                                SA51078
         MVC   QCBQBACK-IEDQQCB(,R15),CKPSAVE2+8                SA51078
*                                       UPDATE QCBQBACK         SA51078
SETPQCB  EQU   *                                                SA51078
         MVC   QCBPQBCK,CKPSAVE2+8      UPDATE PQCB BACK CHAIN  SA51078
SETNEXT  EQU   *                                               @OS77945
         MVC   CPBADDR+1(3),CKPSAVE2+3  UPDATE READ ADDR TO     SA51078
*                                       THE NEXT HDR IN FIFO    SA51078
         B     RDFIFO1                  GO READ                 SA51078
RECHAIN1 EQU   *                                                SA51078
         TM    CKPFLAGS,CKPFSCN1        FIFO SCAN 1 IN PROGRESS SA51078
         BZ    STRCHAIN                 BRANCH IF NO            SA61769
         NC    QCBPQBCK,QCBPQBCK        PQBCK SET               SA61769
         BNZ   NXTPQCB                  BRANCH IF YES           SA61769
         MVC   QCBPQBCK,CKPSAVE2+8      SET PQBCK              @SA72478
         B     USEDNHDR                 BRANCH TO RE-SCAN FIFO  SA61769
STRCHAIN EQU   *                                                SA61769
         MVC   CPBADDR+1(3),CKPSAVE2    READ LAST GOOD ONE READ SA51078
         MVI   ACTCODE,UPDATE           SET CODE FOR UPDATE    @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         L     R15,TRMDESTQ-1           MASTER QCB ADDR         SA51078
         BAL   R14,SETQBKPT             SET REG 1 EQUAL QBACK   SA51078
         MVC   0(3,R1),QCBQBACK-IEDQQCB(R15)                    SA51078
*                                       LINK INTO QBACK CHAIN   SA51078
         BAL   R14,QMJ94                WRITE                   SA51078
         B     SETQBCK                  BRANCH TO UPDATE QCB    SA51078
         EJECT
CHKIFEFO EQU   *                                                SA50192
         NC    QCBPFEFO,QCBPFEFO        PFEFO ZERO              SA50192
         BCR   7,R14                    BRANCH IF NO            SA50192
         TM    DATFLAGS-IEDQDATA(R4),DATIFEFO                   SA50192
*                                       INITIAL FEFO MSG        SA50192
         BCR   8,R14                    BRANCH IF NO            SA50192
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HEADER       @SA72478
         BOR   R14                      NO, RETURN             @SA72478
         STM   R14,R15,AVTSAVE3+12      SAVE REGS              @SA72478
         LH    R1,PRFDEST               GET DEST OFFSET        @SA72478
         N     R1,AVTCLRHI              GET ADDR OF TNTCODE    @SA72478
         L     R15,AVTRNMPT             GET ADDR OF TNTCODE    @SA72478
         BALR  R14,R15                  LINK TO GET TERM ADDR  @SA72478
         LM    R14,R15,AVTSAVE3+12      RESTORE REGS           @SA72478
         CLC   TRMDESTQ-IEDQTRM(,R1),TRMDESTQ SAME DESTINATION @SA72478
         BNER  R14                      NO, RETURN             @SA72478
         CLC   PRFPLQCB,AVTSAVE1        SAME PRIORITY LEVEL    @SA72478
         BNER  R14                      NO, RETURN             @SA72478
         MVC   QCBPFEFO,PRFCRCD         SET VALID START POINT   SA50192
         OI    QCBCFHDR,QCBINCR         QCBPFEFO UPDATED       @OX20945
         BR    R14                      RETURN                  SA50192
SETQBKPT EQU   *                                                SA51078
         STM   R14,R15,AVTSAVE3+12      SAVE REGS               SA51078
         LA    R1,PRFTQBCK              SET REG 1 EQUAL TQBCK   SA51078
         TM    PRFSTAT1,PRFNHDRN        READ A HDR              SA51078
         BO    USETQBCK                 BRANCH IF NO            SA51078
         TM    PRFSTAT1,PRFNLSTN        HDR LAST                SA51078
         BO    USEHQBCK                 BRANCH IF NO            SA51078
         LH    R1,PRFDEST               LOAD DEST OFFSET        SA51078
         N     R1,AVTCLRHI              CLEAR HI-ORDER BYTES    SA51078
         L     R15,AVTRNMPT             TERM NAME ROUTINE       SA51078
         BALR  R14,R15                  LINK TO IT              SA51078
         CLC   TRMDESTQ-IEDQTRM(,R1),TRMDESTQ                   SA51078
*                                       SAME QCB                SA51078
         LA    R1,PRFTQBCK              SET REG 1 EQUAL TQBCK   SA51078
         BNE   USETQBCK                 BRANCH IF NO            SA51078
USEHQBCK EQU   *                                                SA51078
         LA    R1,PRFHQBCK              SET REG 1 EQUAL HQBCK   SA51078
USETQBCK EQU   *                                                SA51078
         LM    R14,R15,AVTSAVE3+12      RESTORE REGS            SA51078
         BR    R14                      RETURN                  SA61769
         SPACE 3
READMSG  EQU   *                                                SA61769
*************************************************************** SA61769
*        READ MSG TEST RECORDS WHEN THE FEFO POINTER IS ZERO    SA61769
*        TO INSURE THAT RADDR AND NADDR ARE FAR ENOUGH UP       SA61769
*        AND IF A LOGICAL READ ERROR IS FOUND, UPDATE THE       SA61769
*        INPUT SEQUENCE NUMBER                                  SA61769
*************************************************************** SA61769
         ST    R14,CPBLCB               SAVE 14                 SA61769
         TM    DATFLAGS-IEDQDATA(R4),DATSENT+DATCNCLD          @SA75766
*              WAS MSG SENT OR CANCELED                        @SA75766
         BNZR  R14                      RETURN IF EITHER       @SA75766
         NC    DATFEFO-IEDQDATA(3,R4),DATFEFO-IEDQDATA(R4)     @SA75766
*                                       IS THE FEFO PTR ZERO    SA61769
*        CANCELLED AND SERVICED MESSAGES ARE NOT READ           SA61769
         BNZR  R14                      BR NOT ZERO             SA61769
CHKLAST  EQU   *                                                SA51078
         MVC   CPBADDR+1(3),PRFXTRA     XTRA ADDR               SA51078
         LH    R14,PRFSIZE              LOAD PRFSIZE            SA51078
         N     R14,AVTCLRHI             CLEAR HI-ORDER BYTES    SA51078
         SH    R14,AVTKEYLE             MORE EXTRA SEGMENTS     SA51078
         BNP   SETRRN                   BRANCH IF NO            SA51078
UNITLP   EQU   *                                               @SA71083
         L     R1,CPBADDR               LOAD RRN ADDR           SA51078
         LA    R1,INCR(R1)              INCR TO NEXT XTRA       SA51078
         ST    R1,CPBADDR               UPDATE RRN ADDR         SA51078
         SH    R14,AVTKEYLE             MORE EXTRA SEGMENTS    @SA71083
         BP    UNITLP                   BRANCH IF YES          @SA71083
         BAL   R14,QMJ96                UPDATE RADDR OR NADDR   SA51078
         LA    R15,INCR                 SET REG15 POSITIVE     @SA72478
SETRRN   EQU   *
         TM    PRFSTAT1,PRFNLSTN        LAST SEGMENT            SA51078
         BZ    REREAD                   BRANCH IF YES           SA51078
         MVC   CPBADDR+1(3),PRFNTXT     READ NEXT SEGMENT       SA51078
         MVI   ACTCODE,RKDT             SET CODE FOR READ TXT  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   PRFCRCD,CPBADDR+1        LOGICAL READ ERROR      SA51078
         BE    CHKLAST                  BRANCH IF NO            SA51078
*        THIS INSTRUCTION ASSUMES THAT R15 WILL BE A POSITIVE   SA61769
*        NUMBER AS A RESULT OF THE SUBROUTINE QMJ96             SA61769
         LNR   R15,R15                  SET READ ERROR FLAG     SA61769
REREAD   EQU   *                                                SA61769
         MVC   CPBADDR+1(3),CKPSAVE2+8  RE-READ ORIG. HDR       SA61769
         MVI   ACTCODE,RKDH             SET CODE FOR READ HDR  @YA11145
         BAL   R14,QMJ91                READ                    SA61769
         LTR   R15,R15                  LOGICAL READ ERROR      SA61769
         BP    RETURN                   BR NO                   SA61769
         NC    PRFISEQ,PRFISEQ          IS THERE A SEQ IN NO    SA61769
         BZ    RETURN                   BRNO                    SA61769
         LH    R1,PRFSRCE               SOURCE OFFSET           SA61769
         N     R1,AVTCLRHI              CLEAR HI BYTE           SA61769
         BZ    RETURN                   IF NO SOURCE RTN        SA61769
         L     R15,AVTRNMPT             ADDR OF TRM OFFSET      SA61769
         BALR  R14,R15                  GET TERN ENTRY FOR SRCE SA61769
         LA    R1,TRMINSEQ-IEDQTRM(,R1) POINT TO INSEQ         @OX16402
         LH    R15,PRFISEQ              GET INPUT SEQ NUMBER   @OX16402
         N     R15,AVTCLRHI             CLEAR HI BYTES         @OX16402
         BAL   R14,Q835                 BRANCH TO UPDATE NUMBER@OX16402
*        SINCE THIS IS THE LAST MSG FROM THIS SRCE, RESET SEQ INSA61769
RETURN   EQU   *                                                SA61769
         L     R14,CPBLCB               RESTORE 14              SA61769
         BR    R14                      RETURN                  SA61769
         EJECT
         SPACE 3                                                SA61769
FEFOSCAN EQU   *                                                SA51078
         TM    AVTBIT3,AVTSTAYN         CHECK FOR SCANNING SPECI-      X
                                        FIED ON INTRO OPERAND 'S='
         BNO   SCANSTRT                 BR IF MSG QUEUES ARE TO SA52971
*                                         BE SCANNED            SA52971
         MVC   CPBADDR+1(3),QCBLFEFO    SET TO WRITE TO LFEFO   SA52971
         MVC   DATFLAGS-IEDQDATA(6,R4),QCBDATFL SET FLAGS AND   SA52971
*                                         SEQUENCE OUT NUMBER   SA52971
         XC    DATFEFO-IEDQDATA(3,R4),DATFEFO-IEDQDATA(R4) END  SA52971
*                                         FEFO CHAIN            SA52971
         BAL   R14,QMJ92                GO WRITE FEFO CHAIN END SA52971
SCANSTRT EQU   *                                                SA52971
         MVC   QCBINTFF,QCBFFEFO        SAVE FFEFO FIELD        SA59195
         NC    QCBFFEFO,QCBFFEFO        IS FFEFO ZERO           SA59195
         BNZ   FEFOSVD                  NO, BRANCH              SA59195
         NC    QCBLFEFO,QCBLFEFO        IS LFEFO ZERO           SA59195
         BZ    FEFOSVD                  YES, BRANCH             SA59195
         TM    AVTBIT3,AVTSTAYN         SCAN SPECIFIED         @OZ14161
         BO    NODECRE                  NO                     @OZ14161
         TM    TRMSTATE,X'24'           SYNC                   @OZ14161
         BO    NODECRE                  YES                    @OZ14161
         L     R14,TRMDESTQ-1           QCB ADDR               @OZ17620
         TM    QCBLINK+2-IEDQQCB(R14),QCBDECRE      QCB BEEN   @OZ17620
*                                          DECREMENTED         @OZ17620
         BO    NODECRE                  YES, BRANCH            @OZ17620
         OI    QCBLINK+2-IEDQQCB(R14),QCBDECRE SET FOR 2ND TIME@OZ17620
         TM    AVTBIT3,AVTSTAYN         SCAN SPECIFIED         @OZ14161
         BO    NODECRE                  NO                     @OZ14161
         TM    TRMSTATE,X'24'           SYNC                   @OZ14161
         BO    NODECRE                  YES                    @OZ14161
         CLC   TRMOUTSQ,TWO             IS THE OUTPUT SEQ TWO  @SA74246
         BNE   NODECRE                  NO, SKIP NEXT INSTRUCT.@SA74246
         MVI   TRMOUTSQ+1,ONE           SET OUTPUT SEQ TO ONE  @SA74246
NODECRE  EQU   *                                               @SA74246
         MVC   CPBADDR+1(3),QCBLFEFO    SET UP TO READ LFEFO    SA59195
         MVI   ACTCODE,RKDH             SET CODE FOR READ HDR  @YA11145
         BAL   R14,QMJ91                READ                    SA59195
         CLC   PRFCRCD,CPBADDR+1        LOGICAL READ ERROR      SA59195
         BNE   FEFOSVD                  YES, BRANCH             SA59195
         MVC   QCBINTFF,DATFEFO-IEDQDATA(R4) SAVE FEFO POINTER  SA59195
FEFOSVD  EQU   *                                                SA59195
         NC    QCBPFEFO(3),QCBPFEFO     HAVE A START POINT      SA52971
         BNZ   STRTSCAN                 YES, CONTINUE           SA52971
         TM    AVTBIT3,AVTSTAYN         IS A SCAN TO BE DONE    SA61740
         BO    STRTSCAN                 BR IF NO SCAN           SA61740
         MVC   QCBPFEFO(3),QCBDNHDR     SET TEMPORARY START POINSA52971
STRTSCAN EQU   *                                                SA52971
         NC    QCBINTFF,QCBINTFF        IS SAVED FFEFO ZERO     SA61741
         BNZ   NOSET                    BR IF SET ALREADY       SA61741
         MVC   QCBINTFF,QCBPFEFO        SET FEFO AS FOUND       SA61741
NOSET    EQU   *                                                SA61741
         MVC   CPBADDR+1(3),QCBPFEFO    MOVE RCD NUM TO CPB     SA52971
         XC    AVTSAVE4+56(3),AVTSAVE4+56                      @SA75766
         NC    QCBFFEFO,QCBFFEFO        ANYTHING IN FFEFO      @SA75766
         BZ    NOFEFO                   NO,BRANCH              @SA75766
         CLC   QCBFFEFO,QCBLFEFO        ONLY ONE MESSAGE       @SA75766
         BE    NOFEFO                   YES,BRANCH             @SA75766
         MVC   AVTSAVE4+56(3),QCBLFEFO  SAVE STOP POINT FOR    @SA75766
*                                       HEADER-TO-HEADER SCAN  @SA75766
NOFEFO   EQU   *                                               @SA75766
         SPACE 3
*SCAN QUEUES AND UPDATE DISK POINTERS IN QCBS. IF CKPT FLAG IN
*QCBFLAG IS 0,THE QCB HAS ALREADY BEEN PROCESSED.
         SPACE
         MVC   AVTSAVE3+17(3),AVTSAVE4+60 SAVE PREVIOUS VALUE  @OX16402
         NC    QCBLFEFO,QCBLFEFO        ZERO LFEFO             @OX16402
         BZ    CKFFEFO                  YES, CHECK FFEFO       @OX16402
         MVC   AVTSAVE4+60(3),QCBLFEFO  SAVE LFEFO             @OX16402
         B     CKSEQRTN                 BRANCH TO COMPARE      @OX16402
CKFFEFO  EQU   *                                               @OX16402
         NC    QCBFFEFO,QCBFFEFO        FFEFO ZERO             @OX16402
         BZ    CKPFEFO                  YES                    @OX16402
         MVC   AVTSAVE4+60(3),QCBFFEFO  SAVE FFEFO             @OX16402
         B     CKSEQRTN                 BRANCH TO COMPARE      @OX16402
CKPFEFO  EQU   *                                               @OX16402
         NC    QCBPFEFO,QCBPFEFO        ZERO PFEFO             @OX16402
         BZ    CKSEQRTN                 YES,UPDATE SEQ IN      @OX16402
         MVC   AVTSAVE4+60(3),QCBPFEFO  SAVE PFEFO             @OX16402
CKSEQRTN EQU   *                                               @OX16402
         CLC   AVTSAVE3+17(3),AVTSAVE4+60 NEW VALUE GREATER    @OX16402
         BL    CLEARQCB                 YES                    @OX16402
         MVC   AVTSAVE4+60(3),AVTSAVE3+17 UPDATE COMPARE VALUE @OX16402
CLEARQCB EQU   *                                               @OX16402
         XC    QCBDATFL(6),QCBDATFL     CLEAR ALL OF QCB BUT    SA59195
         XC    QCBINTLF(9),QCBINTLF     THE SAVED FFEFO FIELD   SA59195
         MVC   QCBPREVF,QCBPQBCK        SAVE STARTING PQBCK     SA51078
         SPACE 3
*BEGINNING OF LOOP THROUGH MESSAGES ON FEFO QUEUE.               CLUP21
         SPACE 3                                                SA52971
*THE FOLLOWING FIELDS ARE FOR TEMPORARY SAVING OF RECORD NUMBERS:S21101
*CKPSAVE1+4 - 6 BYTE FIELD OF CURRENT HEADER AS READ FROM DISK  SA52971
*CKPSAVE2   - 6 BYTE FIELD OF CURRENT HEADER AS READ FROM DISK  SA52971
*CKPSAVE2+8 - NUMBER OF CURRENT HEADER                          SA52971
*CPBADDR+1  - NUMBER OF MSG UNIT CURRENTLY BEING ACCESSED       SA52971
*QCBPFEFO   - NUMBER OF LAST SERVICED MSG ENCOUNTERED DURING    SA52971
*             SCAN PRIOR TO FIRST UNSERVICED MSG                SA52971
         SPACE
QMJ57    EQU   *
         NC    CPBADDR+1(3),CPBADDR+1   CHECK FOR ZERO RCD NUMBERS21101
         BZ    QMJ5701                  BRANCH IF END OF QUEUE   CLUP21
         MVI   ACTCODE,RKDH             SET CODE FOR READ HDR  @YA11145
         BAL   R14,QMJ91                READ HEADER (KEY AND DATA)
         MVC   CKPSAVE2+8(3),PRFCRCD    SAVE HEADER RCD NUMBER  SA52971
         CLC   CPBADDR+1(3),PRFCRCD     CHECK FOR LOGICAL READ ERR
         BNE   QMJ5701                  BR IF YES TO CHAIN END   CLUP21
         SPACE 3
*CHECK TYPE OF MESSAGE FOR SERVICED,CANCELLED OR INCOMPLETE
         SPACE
         LR    R13,R0                   SAVE ADDR OF DISPATCHER  A42409
         LH    R1,PRFDEST               GET DESTINATION FROM MSG   1105
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD 1105
         BZ    QMJ5701                  BRANCH IF NO DESTINATION   0108
         L     R15,AVTRNMPT             ADDR OF TERMNAME CODE      1105
         CH    R1,TNTLEN-IEDQTNTD(,R15) CHECK COUNT OF TERM ENTRIES1202
         BH    QMJ5701                  BRANCH IF INVALID OFFSET   1202
         BALR  R14,R15                  GET ADDR OF TERM ENTRY IN R1105
         LR    R0,R13                   RESTORE DISPATCHER ADDR  A42409
         CLC   TRMDESTQ,TRMDESTQ-IEDQTRM(R1) CHECK QCB ADDR        1105
         BNE   QMJ5701                  BRANCH IF MSG NOT FOR QCB  1105
         LR    R8,R1                    USE DESTINATION TERMINAL S21101
         LH    R1,PRFSRCE               GET SOURCE OFFSET FROM PRF
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         BZ    QMJ61                    BRANCH  IF NO SOURCE PROVID
         BALR  R14,R15                  GET ADDRESS OF TERM ENTRY
         LR    R0,R13                   RESTORE DISPATCHER ADDR  A42409
         L     R15,TRMDESTQ-1-IEDQTRM(,R1) ADDRESS OF SOURCE QCBSA52971
         TM    TRMSTATE-IEDQTRM(R1),TRMLOG PROCESS ENTRY        SA59179
         BM    QMJ59                    YES,UPDATE FIELDS       SA59179
         TM    QCBDSFLG-IEDQQCB(R15),QCBDISK CHECK FOR DISK Q'S SA52971
         BZ    QMJ61                    BRANCH IF CORE ONLY        0108
QMJ59    EQU   *                                                SA59179
         LH    R15,PRFISEQ              GET SEQ-IN FROM PREFIX     0825
         N     R15,AVTCLRHI             CHECK FOR ZERO INPUT   @SA70665
*                                       SEQUENCE NUMBER        @SA70665
         BZ    QMJ61                    YES                    @SA70665
         TM    DATFLAGS-IEDQDATA(R4),DATCNCLD WAS MSG CANCLD   @SA74049
         BO    QMJ61                    BR IF YES              @SA74049
         MVC   AVTSAVE3+17(3),PRFCRCD   SET TO COMPARE CRCD    @OX16402
         LA    R15,AVTSAVE4+60          PICK UP COMPARE ARG    @OX16402
         LA    R1,AVTSAVE3+17           TO ADDRESS             @OX16402
         BAL   R14,MOVER                COMPARE DISK ADDRESS   @OX16402
         CLC   AVTSAVE3+17(3),PRFCRCD   IS IT STILL CRCD       @OX16402
         BNE   DONTCHK                  NO,CRCD LOW            @OX16402
         CLC   AVTSAVE3+17(3),AVTSAVE4+60 EQUAL ?              @OX16402
         BNE   UPDATSQ                  NO, UPDATE SEQ NUMBER  @OX20945
         TM    QCBCFHDR,QCBINCR         QCBPFEFO UPDATED       @OX20945
         BNO   DONTCHK                  NO, DON'T UPDATE       @OX20945
UPDATSQ  EQU   *                                               @OX16402
         L     R15,AVTRNMPT             ADDR OF TERMNAME CODE  @OX16402
         LH    R1,PRFSRCE               PICK UP SOURCE         @OX16402
         BALR  R14,R15                  GET SOURCE TERM ENTRY  @OX16402
         LR    R0,R13                   RESTORE DISPATCHER ADDR@OX16402
         LH    R15,PRFISEQ              RESET ISEQ TO COMPARE  @OX16402
         LA    R1,TRMINSEQ-IEDQTRM(R1)  ADDR OF SEQUENCE NUMBER    1029
         BAL   R14,Q835                 BR TO UPDATE SEQ NUM     CLUP21
DONTCHK  EQU   *                                               @OX16402
QMJ61    EQU   *
         USING IEDQTRM,R8               BASE REG FOR TERM ENTRY@OZ08356
         TM    TRMSTATE,TRMLOG          IS THIS A LOGTYPE ENTRY SA61045
         BM    SEQOK                    BR IF YES               SA61045
         TM    DATFLAGS-IEDQDATA(R4),DATSENT HAS MSG BEEN SERVCESA59195
         BO    SEQOK                    YES, BRANCH             SA59195
         TM    QCBCFHDR,QCBSQDEC        WAS SEQ NO. DECREMENTED@OZ08356
         BO    CKSEQ                                           @OY11175
CKHOLD   EQU   *                                               @OY11175
         TM    TRMSTATE,TRMHELDN        IS TERMINAL HELD        SA59195
         BO    SEQOK                    YES                     SA59195
         CLC   QCBINTFF,PRFCRCD         IS THIS FFEFO          @ZA02629
         BE    NODECR                   YES, FFEFO             @ZA02629
         LH    R15,TRMOUTSQ             GET OUTPUT SEQ NUMBER   SA59195
         BCTR  R15,0                    DECREMENT BY ONE        SA59195
         LTR   R15,R15                  CHECK FOR ZERO OR NEG   SA59195
         BNP   NODECR                   BRANCH IF ZERO OR NEG   SA59195
         STH   R15,TRMOUTSQ             BACK UP OUTPUT SEQ NUMBRSA59195
NODECR   EQU   *                                                SA59195
         OI    QCBCFHDR,QCBSQDEC        SEQ NO. WAS DECREMENTED@OZ08356
         B     SEQOK                                           @OY11175
CKSEQ    EQU   *                                               @OY11175
         LH    R15,SEQSAVE              PICK UP SAVED SEQ NO.  @OY11175
         XC    SEQSAVE(2),SEQSAVE       CLEAR SAVE AREA        @OY11175
         LTR   R15,R15                  IS IT ZERO?            @OY11175
         BZ    SEQOK                    YES                    @OY11175
         AH    R15,AVTHA2               ADD TWO                @OY11175
         CH    R15,DATSEQOT-IEDQDATA(,R4) EQUAL TO TRMOUTSQ    @OY11175
         BE    CKHOLD                   YES                    @OY11175
SEQOK    EQU   *                                                SA59195
         LH    R15,DATSEQOT-IEDQDATA(,R4) GET OUTPUT SEQ NUMBER SA52971
         LTR   R15,R15                  IS THERE ONE            SA52971
         BZ    NOSEQ                    NO, GO SEE IF ALL THERE SA52971
         STH   R15,SEQSAVE              SAVE SEQUENCE NO.      @OY11175
         LA    R1,TRMOUTSQ              ADDRESS OF SEQUENCE NUMBER 1029
         BAL   R14,Q835                 BR TO UPDATE SEQ NUM     CLUP21
NOSEQ    EQU   *                                                SA52971
         LA    R1,QCBDNHDR              SET MOVE TO ADDRESS    @SA71107
         LA    R15,PRFNHDR              SET MOVE FROM ADDRESS  @SA71107
         BAL   R14,MOVER                CHECK DNHDR            @SA71107
         SPACE 3                                                 S21101
*DETERMINE IF MESSAGE SHOULD BE RESENT(TURN OFF SERVICED FLAG)   S21101
         SPACE 1                                                 S21101
QMJ61005 EQU   *                                                 S21101
         MVC   CKPSAVE2(6),DATFLAGS-IEDQDATA(R4) SAVE DATA FIELDSA52971
         MVC   CKPSAVE1+4(6),CKPSAVE2   SAVE HERE ALSO          SA52971
         TM    AVTBIT3,AVTSTAYN         CHECK FOR NO-SCAN REQS'DSA52971
         BO    CHKSEQ                   BR IF SCAN NOT REQUESTEDSA51078
         TM    TRMSTATE,X'24'           SYNC TPROCESS           SA52971
         BNO   QMJ68                    NO, START SCAN          SA52971
CHKSEQ   EQU   *                                                SA52971
         NC    AVTEZ(2),AVTEZ           IS THIS FIRST TIME FOR @SA70310
*                                         ENTRY                 SA52971
         BNZ   NOPREP                   NO, FIELD ALREADY INIT  SA52971
         MVC   AVTEZ(2),TRMOUTSQ        INITIALIZE             @SA70310
NOPREP   EQU   *                                                SA52971
         CLC   DATSEQOT-IEDQDATA(2,R4),AVTFZERO UNSENT MSG      SA66335
         BE    QMJ62                    BRANCH IF YES           SA66335
         CLC   DATSEQOT-IEDQDATA(2,R4),AVTEZ  SENT PRIOR TO    @SA70310
*                                        CHECKPOINT              S22024
         BL    QMJ68                    YES, DON'T RESEND       SA52971
QMJ62    EQU   *                                                SA66335
         NI    CKPSAVE2,AVTEFF-DATSENT  MARK 'UNSENT'           SA52971
         SPACE 3
*CHECK FOR COMPLETELY RECEIVED MESSAGE
         SPACE 3
*BEGINNING OF LOOP THROUGH UNITS
         SPACE
QMJ68    EQU   *
         NC    AVTSAVE4+56(3),AVTSAVE4+56                      @SA75766
         BZ    XTRALOOP                 YES,SCAN EXTRAS        @SA75766
         CLC   CKPSAVE1+5(3),AVTSAVE4+56                       @SA75766
*                                       TO CHECKPOINTED LFEFO  @SA75766
         BNE   QMJ71                    YES, NO NEED TO SCAN   @SA75766
*                                       TEXT OR XTRA SEGMENTS  @SA75766
         XC    AVTSAVE4+56(3),AVTSAVE4+56 SET TO SHOW STOP     @SA75766
*                                       POINT REACHED FOR      @SA75766
*                                       HEADER-TO-HEADER SCAN  @SA75766
XTRALOOP EQU   *                                               @SA75766
         LH    R13,PRFSIZE              GET BUFFER LENGTH        CLUP21
         N     R13,AVTCLRHI             ENSURE HALF-WORD         CLUP21
         MVC   CPBADDR+1(3),PRFXTRA     GET 1ST XTRA SEGMENT RCD
         SH    R13,AVTKEYLE             HOW MANY UNITS           CLUP21
         BP    QMJ7207                  BR IF MORE THAN ONE      CLUP21
         B     QMJ71                    BRANCH IF ONLY 1 UNIT   SA52971
QMJ7205  EQU   *
         L     R1,CPBADDR
         LA    R1,INCR(0,R1)            GET NEXT SEQUENTIAL RCD  S21101
         ST    R1,CPBADDR
QMJ7207  EQU   *
         BAL   R14,QMJ90                READ DATA
         TM    DATFLAGS-IEDQDATA(R4),DATNPRFX CHECK FOR PREFIX  SA52971
         BZ    QMJ7705                  BRANCH OUT OF LOOP IF PREFX0606
         CLC   CPBADDR+1(3),DATFEFO-IEDQDATA(R4) CHECK FOR LOG  SA52971
*                                         READ ERROR            SA52971
         BNE   QMJ7705                  BRANCH IF ERROR
         SH    R13,AVTKEYLE             ANY MORE UNITS           CLUP21
         BP    QMJ7205                  YES, GO LOOK AT IT       CLUP21
         SPACE
*END OF LOOP THROUGH UNITS OF BUFFER                             CLUP21
         SPACE 3
*BEGINNING OF LOOP THROUGH TEXT BUFFERS
         SPACE
QMJ71    EQU   *
         TM    PRFSTAT1,PRFNLSTN        CHECK FOR LAST BUFFER
         BZ    QMJ73                    BRANCH IF LAST          SA52971
         MVC   CPBADDR+1(3),PRFNTXT
         MVI   ACTCODE,RKDT             SET CODE FOR READ TXT  @YA11145
         BAL   R14,QMJ91                READ TEXT RECORD
         TM    PRFSTAT1,PRFNHDRN        CHECK FOR TEXT BUFFER      1029
         BZ    QMJ7705                  BRANCH IF NOT TEXT BUFFER  1029
         CLC   CPBADDR+1(3),PRFCRCD     CHECK FOR LOGICAL READ ERR
         BE    QMJ68                    BRANCH IF NO ERROR     @SA75766
         SPACE
*END OF LOOP THROUGH TEXT BUFFERS
         SPACE 3                                                SA52971
*RECHAIN AROUND THIS INCOMPLETE MESSAGE                         SA52971
         SPACE 1                                                SA52971
QMJ7705  EQU   *
         MVC   DATFLAGS-IEDQDATA(6,R4),QCBDATFL SET NEW DATA    SA52971
         MVC   DATFEFO-IEDQDATA(3,R4),CKPSAVE2+1 FIELD          SA52971
         MVC   CPBADDR+1(3),QCBLFEFO    SET RECORD NUMBER       SA52971
         BAL   R14,QMJ92                GO CHANGE FEFO CHAIN    SA52971
         B     QMJ78                    GO GET NEXT MSG         SA52971
         SPACE 3                                                 S21101
*UPDATE FEFO IF MESSAGE IS NOT MARKED SERVICED OR CANCELED NOW   S21101
         SPACE 1                                                 S21101
QMJ73    EQU   *
         CLC   CKPSAVE2(6),CKPSAVE1+4   WAS DATA FIELD CHANGED  SA52971
         BE    NOWRT                    NO, DON'T DO WRITE      SA52971
         MVC   DATFLAGS-IEDQDATA(6,R4),CKPSAVE2 SET DATA FIELD  SA52971
         MVC   CPBADDR+1(3),CKPSAVE2+8  SET RECORD NUMBER       SA52971
         BAL   R14,QMJ92                RE-WRITE FLAGS          SA52971
NOWRT    EQU   *                                                SA52971
         NC    QCBPFEFO(3),QCBPFEFO     IS THIS FIRST MSG       SA52971
         BZ    SETPF                    YES, GO INIT PFEFO      SA52971
         NC    QCBFFEFO(3),QCBFFEFO     IS FIRST UNSENT SET     SA52971
         BNZ   QMJ76                    YES, GO SET THIS AS LASTSA52971
         TM    CKPSAVE2,DATSENT+DATCNCLD SERVICED OR CANCELLED  SA52971
         BZ    SETFF                    NO, GO SET FIRST UNSENT SA52971
SETPF    EQU   *                                                SA52971
         MVC   QCBPFEFO(3),CKPSAVE2+8   SET FIRST MSG           SA52971
         TM    CKPSAVE2,DATSENT+DATCNCLD SERVICED OR CANCELLED  SA52971
         BNZ   QMJ76                    YES, GO SET THIS AS LASTSA52971
         NC    QCBFFEFO(3),QCBFFEFO     IS FIRST UNSENT SET     SA52971
         BNZ   QMJ76                    YES, GO SET THIS AS LASTSA52971
SETFF    EQU   *                                                SA52971
         MVC   QCBFFEFO(3),CKPSAVE2+8   SET FIRST UNSENT MSG    SA52971
QMJ76    EQU   *                                                SA52971
         MVC   QCBDATFL,CKPSAVE2        SAVE DATFLAGS AND       SA52971
         MVC   QCBDATSQ,CKPSAVE2+4      SEQ OUT OF LFEFO        SA52971
         MVC   QCBLFEFO,CKPSAVE2+8      UPDATE LFEFO
         TM    AVTBIT3,AVTSTAYN         SCAN SPECIFIED          SA51078
         BO    NOQBCK                   BRANCH IF NO            SA51078
         TM    AVTCKELF,AVTNQBCK        RETRIEVAL NEEDED       @OS77945
         BO    NOQBCK                   NO, SKIP QBACK SCAN    @OS77945
         MVC   CKPSAVE1+4(3),PRFCRCD    SAVE EOM SEG            SA66921
         MVC   CKPSAVE2+4(3),PRFCRCD    SET IN CASE NO HDR FND  SA66921
         TM    AVTBIT2,AVTEXTSC         DO EXTENTED SCAN        SA51078
         BZ    NOSRCQBK                 BRANCH IF NO            SA51078
         EJECT
****************************************************************SA51078
*        IF EXTENTED RESTART IS REQUESTED AN ATTEMPT WILL BE    SA51078
*        MADE TO RE-BUILD THE SOURCE QBACK CHAIN.  THE          SA51078
*        TECHNIQUE IS UPON FINDING AN EOM SEGMENT ON THE FEFO   SA51048
*        SCAN TO READ BACK THE SOURCE QBACK CHAIN TO FIND THE   SA54078
*        FIRST HDR IN THE SOURCE QBACK CHAIN TO USE AS A        SA54078
*        STOP POINT.  THEN READ FROM QCBQBACK TO DETRMINE IF    SA51078
*        THIS EOM SEGMENT IS IN THE QBACK CHAIN AND IF NOT      SA51078
*        PUT IT IN.  IF THE SOURCE IS A PUT PROCESS ENTRY OR    SA51078
*        A INPUT ONLY TERMINAL THE END OF THE QUEUE IS USED AS  SA51078
*        A STOP POINT AND THEN THE SAME TECHNIQUE APPLIED.      SA51078
****************************************************************SA51078
         SPACE 3                                                SA51078
         LH    R1,PRFSRCE               LOAD SOURCE INDEX       SA51078
         N     R1,AVTCLRHI              CLEAR HI-ORDER BYTES    SA51078
         LTR   R1,R1                    VALID SOURCE            SA51078
         BZ    NOSRCQBK                 BRANCH IF NO            SA51078
         L     R15,AVTRNMPT             TERM NAME ROUTINE       SA51078
         BALR  R14,R15                  LINK TO IT              SA51078
         L     R15,TRMDESTQ-1-IEDQTRM(R1)                       SA51078
*                                       LOAD QCB ADDR           SA51078
         CLC   TRMDESTQ-IEDQTRM(,R1),TRMDESTQ                   SA51078
*                                       SOURCE = DEST QUEUE     SA51078
         BE    NOSRCQBK                 BRANCH IF YES           SA51078
         LR    R8,R1                    SET SOURCE TERM ADDR    SA51078
         TM    QCBFLAG-IEDQQCB(R15),QCBPROC                     SA51078
*                                       PROCESS ENTRY           SA51078
         BZ    NOTPROC                  BRANCH IF NO            SA51078
         CLI   QCBDSFLG-IEDQQCB(R15),QCBFQCB                    SA51078
*                                       PUT PROCESS ENTRY       SA51078
         BE    NODSKCHK                 BRANCH IF YES           SA51078
NOTPROC  EQU   *                                                SA51078
         TM    QCBDSFLG-IEDQQCB(R15),QCBDISK                    SA51078
*                                       ANY DISK QUEUEING       SA51078
         BZ    NOSRCQBK                 BRANCH IF NO            SA51078
NODSKCHK EQU   *                                                SA51078
         CLC   QCBQBACK-IEDQQCB(,R15),PRFCRCD                   SA51078
*                                       MSG IN QBACK CHAIN      SA51078
         BE    NOSRCQBK                 BRANCH IF YES           SA51078
         NC    QCBQBACK-IEDQQCB(,R15),QCBQBACK-IEDQQCB(R15)     SA51078
*                                       QBACK ZERO              SA51078
         BZ    RECHAIN4                 BRANCH IF YES           SA51078
FNDFHDR  EQU   *                                                SA51078
         MVC   CPBADDR+1(3),PRFTQBCK    READ SRCE QBACK         SA51078
         MVI   ACTCODE,RKDQ             SET CODE = READ QBACK  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   PRFCRCD,CPBADDR+1        LOGICAL READ ERROR      SA51078
         BNE   STSRCQBK                 BRANCH IF YES           SA51078
         CLC   PRFCRCD,QCBQBACK-IEDQQCB(R15)                    SA51078
*                                       HIT QBACK PTR           SA51078
         BE    RECHAIN6                 BRANCH IF YES           SA51078
         TM    PRFSTAT1,PRFNHDRN        HDR BUFFER              SA51078
         BO    FNDFHDR                  BRANCH IF NO            SA51078
         LH    R1,PRFDEST               LOAD DEST OFFSET        SA51078
         N     R1,AVTCLRHI              CLEAR HI-ORDER BYTES    SA51078
         L     R15,AVTRNMPT             TERM NAME ROUTINE       SA51078
         BALR  R14,R15                  LINK TO IT              SA51078
         L     R15,TRMDESTQ-1           RESTORE MASTER QCB ADDR SA51078
         CLC   TRMDESTQ-IEDQTRM(,R1),TRMDESTQ                   SA51078
*                                       HDR IN SOURCE QUEUE     SA51078
         BNE   FNDFHDR                  BRANCH IF NO            SA51078
         MVC   CKPSAVE2+4(3),PRFCRCD    SAVE FIRST HDR FOUND IN SA51078
*                                       QBACK CHAIN OF SRC QCB  SA51078
*                                       TO USE AS A STOP PTR    SA51078
         SR    R1,R1                    CLEAR REG               SA51078
         IC    R1,PRFPLQCB              GET PQCB INDEX          SA51078
         MH    R1,PQCBSZ                CALC CORRECT PQCB       SA51078
         AR    R1,R15                   PQCB ADDR               SA51078
         MVC   AVTSAVE3+17(ADDRSIZE),PRFCRCD SET PARAMETER     @SA71107
         LA    R15,QCBPQBCK-IEDQQCB(R1) SET MOVE FROM ADDRESS  @SA71107
         LA    R1,AVTSAVE3+17           SET MOVE TO ADDRESS    @SA71107
         BAL   R14,MOVER                CHECK PRFCRCD          @SA71107
         L     R15,TRMDESTQ-1           RESTORE MASTER QCB ADDR@SA71107
         SR    R1,R1                    CLEAR FOR IC           @SA71107
         IC    R1,PRFPLQCB              GET PQCB INDEX         @SA71107
         MH    R1,PQCBSZ                CALC CORRECT PQCB      @SA71107
         AR    R1,R15                   GET PQCB ADDRESS       @SA71107
         CLC   AVTSAVE3+17(ADDRSIZE),QCBPQBCK-IEDQQCB(R1) WAS  @SA71107
*                                        FIELD UPDATED         @SA71107
         BNE   RECHAIN3                 YES, PRFCRCD WAS LOWER @SA71107
*                                        THAN QCBPQBCK         @SA71107
STSRCQBK EQU   *                                                SA51078
         MVC   CPBADDR+1(3),QCBQBACK-IEDQQCB(R15)               SA51078
*                                       READ SOURCE QBACK       SA51078
RDSRCQBK EQU   *                                                SA51078
         MVI   ACTCODE,RKDQ             SET CODE = READ QBACK  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   PRFCRCD,CPBADDR+1        LOGICAL READ ERROR      SA51078
         BNE   RECHAIN3                 BRANCH IF YES           SA51078
         BAL   R14,SETQBKPT             SET REG 1 EQUAL QBACK   SA51078
         CLC   0(3,R1),CKPSAVE1+4       HIT ORGINAL EOM SEG     SA51078
         BE    NOSRCQBK                 BRANCH IF YES           SA51078
         CLC   0(3,R1),CKPSAVE2+4       HIT FIRST HDR IN QBACK  SA51078
         BE    RECHAIN5                 BRANCH IF YES           SA51078
         MVC   CPBADDR+1(3),0(R1)       READ SOURCE QBACK       SA51078
         B     RDSRCQBK                 BRANCH TO READ          SA51078
RECHAIN3 EQU   *                                                SA51078
         MVC   CPBADDR+1(3),CKPSAVE1+4  RE-READ THE EOM SEG     SA51078
         MVI   ACTCODE,UPDATE           SET CODE FOR UPDATE    @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         MVC   PRFTQBCK,QCBQBACK-IEDQQCB(R15)                   SA51078
*                                       PUT IN QBACK CHAIN      SA51078
         BAL   R14,QMJ94                WRITE                   SA51078
RECHAIN4 EQU   *                                                SA51078
         MVC   QCBQBACK-IEDQQCB(,R15),PRFCRCD                   SA51078
*                                       UPDATE QCBQBACK         SA51078
         B     NOSRCQBK                 BRANCH                  SA51078
RECHAIN5 EQU   *                                                SA51078
         MVI   ACTCODE,UPDATE           SET CODE FOR UPDATE    @YA11145
         BAL   R14,QMJ91                REREAD RECORD          @YA11145
         BAL   R14,SETQBKPT             SET REG 1 TO QBACK     @YA11145
         MVC   0(3,R1),CKPSAVE1+4       PUT IN QBACK CHAIN      SA51078
         BAL   R14,QMJ94                WRITE                   SA51078
         B     NOSRCQBK                 BRANCH                  SA51078
RECHAIN6 EQU   *                                                SA51078
         MVC   QCBQBACK-IEDQQCB(,R15),CKPSAVE1+4                SA51078
*                                       UPDATE QBACK            SA51078
NOSRCQBK EQU   *                                                SA51078
         L     R8,CKPTRMAD              RESTORE REG 8           SA51078
         MVC   AVTSAVE3+17(ADDRSIZE),QCBPREVF   SET PARAMETER  @SA71107
         LA    R1,AVTSAVE3+17           SET MOVE TO ADDRESS    @SA71107
         LA    R15,CKPSAVE2+8           SET MOVE FROM ADDRESS  @SA71107
         BAL   R14,MOVER                CHECK PREVF            @SA71107
         CLC   QCBPREVF(ADDRSIZE),AVTSAVE3+17 WAS FIELD UPDATED@SA71107
         BE    NOQBCK                   NO, MSG IS IN DEST     @SA71107
*                                        QBACK CHAIN           @SA71107
         MVC   AVTSAVE3+17(ADDRSIZE),CKPSAVE2+8 SET PARAMETER  @SA71107
         LA    R15,QCBPQBCK             SET MOVE FROM ADDRESS  @SA71107
         BAL   R14,MOVER                CHECK PQBCK            @SA71107
         CLC   AVTSAVE3+17(ADDRSIZE),QCBPQBCK WAS FIELD UPDATED@SA71107
         BNE   PUTONEND                 YES, BRANCH            @SA71107
         MVC   CPBADDR+1(3),QCBPQBCK    READ PQBCK              SA51078
RDBACK   EQU   *                                                SA51078
         MVI   ACTCODE,RKDQ             SET CODE = READ QBACK  @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         CLC   CPBADDR+1(3),PRFCRCD     LOGICAL READ ERROR      SA51078
         BNE   NOQBCK                   BRANCH IF YES           SA51078
         TM    PRFSTAT1,PRFNHDRN        HEADER SEGMENT          SA51078
         BO    SETRDBK                  BRANCH IF NO            SA51078
         MVC   AVTSAVE3+17(ADDRSIZE),CKPSAVE2+8 SET PARAMETER  @SA71107
         LA    R1,AVTSAVE3+17           SET MOVE TO ADDRESS    @SA71107
         LA    R15,PRFCRCD              SET MOVE FROM ADDRESS  @SA71107
         BAL   R14,MOVER                CHECK PRFCRCD          @SA71107
         CLC   AVTSAVE3+17(ADDRSIZE),PRFCRCD WAS FIELD         @OY12275
*                                        UPDATED               @SA71107
         BNE   RECHAIN2                 YES, RIGHT PLACE TO    @SA71107
*                                        PUT MSG               @SA71107
SETRDBK  EQU   *                                                SA51078
         MVC   CKPSAVE1+4(3),PRFCRCD    SAVE LAST SEGMENT READ  SA51078
         BAL   R14,SETQBKPT             SET R1 EQUAL QBACK      SA51078
         MVC   CPBADDR+1(3),0(R1)       SET READ ADDR           SA51078
         B     RDBACK                   GO READ BACK            SA51078
RECHAIN2 EQU   *                                                SA51078
         MVC   CKPSAVE2+4(3),PRFCRCD    SAVE CHAIN TO ADDR      SA51078
         MVC   CPBADDR+1(3),CKPSAVE1+4  RE-READ PREVIOUS SEG    SA51078
         MVI   ACTCODE,UPDATE           SET CODE FOR UPDATE    @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         BAL   R14,SETQBKPT             SET R1 EQUAL QBACK      SA51078
         MVC   0(3,R1),CKPSAVE2+8       INSERT ORIGINAL HDR IN  SA51078
*                                       QBACK CHAIN             SA51078
         BAL   R14,QMJ94                WRITE UPDATED RECORD    SA51078
         MVC   CPBADDR+1(3),CKPSAVE2+8  READ ORGINAL HDR        SA51078
         MVI   ACTCODE,UPDATE           SET CODE FOR UPDATE    @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         MVC   PRFHQBCK,CKPSAVE2+4      LINK THIS HDR           SA51078
*                                       TO ORGINAL HDR          SA51078
         BAL   R14,QMJ94                WRITE UPDATED HDR       SA51078
         B     NOQBCK                   BRANCH TO END           SA51078
PUTONEND EQU   *                                                SA51078
         MVC   CPBADDR+1(3),CKPSAVE2+8  READ ORGINAL HDR        SA51078
         MVI   ACTCODE,UPDATE           SET CODE FOR UPDATE    @YA11145
         BAL   R14,QMJ91                READ                    SA51078
         L     R15,TRMDESTQ-1           LOAD QCB ADDR           SA51078
         MVC   PRFHQBCK,QCBQBACK-IEDQQCB(R15)                   SA51078
*                                       SET QBACK PTR           SA51078
         MVC   QCBQBACK-IEDQQCB(,R15),PRFCRCD                   SA51078
*                                       UPDATE QCB BACK CHAIN   SA51078
         MVC   QCBPQBCK,PRFCRCD         UPDATE PQCB BACK CHAIN  SA51078
         BAL   R14,QMJ94                WRITE UPDATED HDR       SA51078
NOQBCK   EQU   *                                                SA51078
         TM    QCBDATFL,DATSENT+DATCNCLD WILL MSG BE SENT       SA52971
         BNZ   QMJ78                    NO, DON'T COUNT IT      SA52971
         L     R1,TRMDESTQ-1            ADDRESS OF MASTER QCB
         LA    R14,1                    INCREMENT
         AH    R14,QCBMSGCT-IEDQQCB(,R1) ADD 1 TO COUNT OF MSG  SA52971
         STH   R14,QCBMSGCT-IEDQQCB(,R1) RESTORE COUNT          SA52971
QMJ78    EQU   *                                                SA52971
         MVC   CPBADDR+1(3),CKPSAVE2+1  GET NEXT HDR IN FEFO    SA52971
         B     QMJ57                    READ HEADER
         SPACE
*END OF LOOP FOR THIS MESSAGE
         SPACE 3
*LOGICAL READ ERROR-RECORD READ WAS NOT RECORD REQUESTED.END OF
*FEFO CHAIN                                                     SA52971
         SPACE
QMJ5701  EQU   *                                                   1105
         MVC   CPBADDR+1(3),QCBDNHDR    GET NEXT ASSIGNED HDR    S21101
         BAL   R14,QMJ96                COMPARE QCBDNHDR+1 WITH    0915X
                                       RADDR OR NADDR              0915
         MVC   QCBPREVF(3),QCBPFEFO     INITIALIZE PREVIOUS FEFOSA52971
*                                         POINTER               SA52971
         MVC   CPBADDR+1(3),QCBLFEFO    LAST UNSERVICED MSG-FEFO
         MVC   DATFLAGS-IEDQDATA(6,R4),QCBDATFL RESET LFEFO'S   SA52971
*                                         FLAGS AND SEQ OUT     SA52971
         XC    DATFEFO-IEDQDATA(3,R4),DATFEFO-IEDQDATA(R4) CLEARSA52971
*                                         FEFO POINTER          SA52971
         BAL   R14,QMJ92                WRITE DATA
         SPACE 3
*GET NEXT PRIORITY LEVEL QCB.
         SPACE
         XC    QCBINTFF,QCBINTFF        CLEAR OUT SAVED FFEFO   SA59195
         NI    QCBCFHDR,AVTEFF-QCBSQDEC RESET BIT              @OZ08356
NXTPQCB  EQU   *                                                SA51078
         IC    R14,AVTSAVE1             GET PRILVL INDEX       @SA72478
         LA    R14,ONE(R14)             BUMP BY ONE            @SA72478
         STC   R14,AVTSAVE1             SET NEW INDEX          @SA72478
         TM    CKPFLAGS,CKPFSCN1+CKPFSCN2  IN FEFO SCAN        @OX20945
         BNZ   CHECKPRI                 NO, BRANCH             @OX20945
         NI    QCBCFHDR,AVTEFF-QCBINCR  TURN OFF FLAG          @OX20945
CHECKPRI EQU   *                                               @OX20945
         CLI   QCBPRIPQ,0               CHECK FOR 0-LEVEL QCB(LAST)
         LA    R7,QCBPSIZE(0,R7)        GET NEXT QCB
         BNE   QMJ35                    NO, BR TO PROCESS THIS  SA52971
         L     R7,TRMDESTQ-1            QCB ADDR               @OZ17620
         NI    QCBLINK+2-IEDQQCB(R7),AVTEFF-QCBDECRE RESET BIT @OZ17620
         SPACE
*END OF LOOP THROUGH PRIORITY LEVEL QCBS
         SPACE 3
CLRCNT   EQU   *                                                SA52971
         L     R8,CKPTRMAD              GET CURRENT TERMINAL ENTSA52971
         XC    AVTEZ(2),AVTEZ           CLEAR TEMPORARILY USED @SA70310
*                                         SEQ NUM COUNTER       SA52971
QMJ80    EQU   *                                                   0819
         LA    R6,3(R5,R6)              MOVE PAST ADDR FIELD     S21101
         BCT   R11,QMJ10               SUB FROM NO. OF TNT ENTRSSS21101
         LM    R14,R12,AVTSAVE1+12      RESTORE REGISTERS        CLUP21
         TM    CKPFLAGS,CKPFSCN1        END OF SCAN1            SA51078
         BO    RSETSCN1                 BRANCH IF YES           SA51078
         TM    CKPFLAGS,CKPFSCN2        END OF SCAN 2           SA51078
         BZ    FREECORE                 BRANCH IF NO           @YA11145
*                                       END OF FEFO SCAN        SA51078
*                                       RETURN TO 1645          SA51078
         NI    CKPFLAGS,255-CKPFSCN2    RESET SCAN 2 IN PROG    SA51078
RSETSCN1 EQU   *                                                SA51078
         NI    CKPFLAGS,255-CKPFSCN1    RESET SCAN 1 IN PROG    SA51078
         XI    CKPSWCH1,CKPSET1         FLIP SWITCH             SA51078
         B     QMJ10                    BRANCH TO DO NEXT SCAN  SA51078
         SPACE
**********************************************************************
         SPACE 2
*  EXIT FROM QUEUE SCANS - FREE GOTTEN CORE AND RETURN         @YA11145
         SPACE 2
FREECORE EQU *                                                 @YA11145
         OC    LENGTH(4),LENGTH         ANY CORE TO FREE       @YA11145
         BZ    RETREGS                  NO,RETURN              @YA11145
         MVI   ACTCODE,AVTEZERO         CLEAR ACTION CODE      @YA11145
         L     R1,GMAIN                 GET AREA TO FREE       @YA11145
         MVI   LENGTH,SP250                                    @YA11145
         L     R0,LENGTH                GET LENGTH             @YA11145
         FREEMAIN R,LV=(0),A=(1)        FREE AREA              @YA11145
RETREGS  LM    R14,R12,AVTSAVE1+12      RESTORE REGISTERS      @YA11145
         BR      R14                    AND RETURN             @YA11145
         SPACE 3
*SUBROUTINE TO ACCESS MESSAGE QUEUES DATA SET.
         SPACE 3
*READ DATA
         SPACE
QMJ90    EQU   *
         MVI   ACTCODE,RD               SET CODE = READ DATA   @YA11145
         MVI   CPBRDWR,CPBRDC           PUT READ DATA CODE IN 1ST
         B     QMJ9205                  SET UP NO-OP               0818
         SPACE
*READ KEY AND DATA
         SPACE
QMJ91    EQU   *
         MVI   CPBRDWR,CPBRDKC          READ KEY,DATA CODE IN 1ST
         MVI   CPBXDWR,CPBRDC           READ DATA CODE IN 2ND CCW
         B     QMJ93                    BRANCH TO QMJ93          S22024
*WRITE KEY AND DATA                                             SA51078
         SPACE 2                                                SA51078
QMJ94    EQU   *                                                SA51078
         MVI   ACTCODE,RD               SET ACTION CODE SAME   @YA11145
*                                        AS RD DATA SO EXCP TO @YA11145
*                                        DISK IS DONE          @YA11145
         MVI   CPBRDWR,CPBWRKC          WRITE KEY AND DATA      SA51078
         MVI   CPBXDWR,CPBWRC           WRITE DATA              SA51078
         B     QMJ93                    BRANCH                  SA51078
         SPACE 3
*WRITE DATA
         SPACE
QMJ92    EQU   *
         MVI   ACTCODE,WD               SET CODE = WRITE DATA  @YA11145
         MVI   CPBRDWR,CPBWRC           WRITE CODE IN 1ST CCW
QMJ9205  EQU   *                                                   0818
         MVI   CPBXDWR,CPBNOPC          NOOP CODE IN 2ND CCW
QMJ93    EQU   *
         NC    CPBADDR+1(3),CPBADDR+1   ANY THERE               SA52971
         BCR   8,R14                    NO, RETURN              SA52971
         STM   R14,R12,AVTSAVE3+12      SAVE REGS           0407 S20018
         ST    R13,AVTSAVE1+8           SAVE REG               @YA11145
         SPACE 3
*  THE FOLLOWING CODE CHECKS THE TYPE OF OPERATION BEING DONE  @YA11145
*  AND IF THIS IS A READ, A SCAN OF THE SAVED PREFIXES IS DONE @YA11145
*  TO SEE IF THE SEGMENT HAS ALREADY BEEN READ FROM DISK.  IF  @YA11145
*  SO THE PREFIX IS MOVED TO THE BUFFER WITHOUT ANY DISK I/O   @YA11145
*  BEING DONE.                                                 @YA11145
         SPACE 2
         SR    R14,R14                  CLEAR FOR IC           @YA11145
         IC    R14,ACTCODE              PICK UP ACTION CODE    @YA11145
         B     TABLE(R14)               USE BRANCH TABLE       @YA11145
TABLE    B     GOEXCP                   READ DATA FOR EXTRAS   @YA11145
         B     WRTDATA                  WRITE DATA FOR HDRS    @YA11145
         B     READHDR                  READ HDR KEY AND DATA  @YA11145
         B     READTXT                  READ TXT KEY AND DATA  @YA11145
         B     RDQBACK                  READ HDR OR TXT QBACK  @YA11145
*        B     RUPDATE                  READ WITH UPDATE       @YA11145
RUPDATE  EQU   *                                               @YA11145
         BAL   R14,HDRSCAN              CHECK HDR QUEUE        @YA11145
         BAL   R14,TXTSCAN              CHECK TXT QUEUE        @YA11145
         B     GOEXCP                   AND DO EXCP            @YA11145
         SPACE 2
RDQBACK  EQU   *                                               @YA11145
         BAL   R14,HDRSCAN              CHECK HDR QUEUE        @YA11145
         BAL   R14,TXTSCAN              CHECK TXT QUEUE        @YA11145
MOVE     EQU   *                                               @YA11145
         LTR   R1,R1                    ANYTHING FOUND         @YA11145
         BZ    GOEXCP                   NO, DO EXCP            @YA11145
         MVC   DATFLAGS-IEDQDATA(6,R4),DATFLAGS-IEDQDATA(R1)   @YA11145
*                                       MOVE DATA TO BUFFER    @YA11145
         MVC   PRFSUNIT(PRFSHDR-PRFSUNIT),PRFSUNIT-IEDQPRF(R1) @YA11145
*                                        MOVE PREFIX TO BUFFER @YA11145
         B     RESTORE                  RESTORE REGS AND RETURN@YA11145
         SPACE 2
READTXT  EQU   *                                               @YA11145
         SR    R1,R1                    CLEAR RETURN CODE      @YA11145
         LA    R14,MOVE                 SET RETURN ADDR        @YA11145
TXTSCAN  EQU   *                                               @YA11145
         LTR   R1,R1                    FOUND DURING HDR SCAN  @YA11145
         BNZR  R14                      YES, RETURN            @YA11145
         LA    R15,TXTQ-8               SET UP FOR LOOP        @YA11145
TXTLOOP  EQU   *                                               @YA11145
         ST    R15,PREV                 SAVE PTR TO PREVIOUS   @YA11145
         ICM   R1,ADDR,PRFTIC+1-IEDQPRF(R15) GET NEXT          @YA11145
         ST    R1,LAST                  SAVE THIS ONE          @YA11145
         LR    R15,R1                   SAVE PREVIOUS          @YA11145
         BZR   R14                      END OF CHAIN, RETURN   @YA11145
         CLC   CPBADDR+1(3),PRFCOUNT-IEDQPRF(R1) THIS THE ONE  @YA11145
         BER   R14                      YES,RETURN             @YA11145
         BH    TXTLOOP                  HIGH-CONTINUE SCAN     @YA11145
         SR    R1,R1                    CLEAR RETURN CODE      @YA11145
         ST    R1,LAST                  CLEAR LAST POINTER     @YA11145
         BR    R14                      AND RETURN             @YA11145
         SPACE 2
READHDR  EQU   *                                               @YA11145
         LA    R14,MOVE                 SET RETURN ADDR        @YA11145
HDRSCAN  EQU   *                                               @YA11145
         SR    R1,R1                    CLEAR RETURN CODE      @YA11145
         LA    R15,HDRQ-8               SET UP FOR LOOP        @YA11145
         B     TXTLOOP                  ENTER LOOP             @YA11145
         SPACE 2
WRTDATA  EQU   *                                               @YA11145
         BAL   R14,HDRSCAN              CHECK HDR QUEUE        @YA11145
GOEXCP   EQU   *                                               @YA11145
         BAL   R14,QMJ96                CHECK AGAINST ADDRESS   SA52971
         MVI   AVTCPBCB+4,X'FF'         SET PRIORITY SO CPB WILL NO1110X
                                        T BE POSTED TO CPB CLEAN-UP1110
         SPACE 3
*ENQUEUE CPB ON INPUT QUEUE FOR EXCP DRIVER
         SPACE
         XC    CPBNEXT,CPBNEXT          CLEAR LINK FIELD
         ST    R3,AVTINCPQ+4            MAKE NEW CPB LAST ON QUEUE 0318
         MVC   AVTINCPQ+1(3),AVTINCPQ+5 PUT CPB ON QUEUE         S21101
         L     R15,AVTFL                ADDRESS OF EXCP DRIVER
         LA    R14,QNC30-(DSPDISP-IEDQDISP)   RETURN ADDRESS       0918
         ST    R14,AVTEA                STORE FOR EXCP D.TO PICK UP
         LA    R13,AVTSAVE2
         MVI   AVTCKECA,AVTEZERO        CLEAR COMPLETION CODES  SA63974
         BR    R15                      BRANCH TO EXCP DRIVER
         USING AVTSAVE2,R13             TEMP BASE
QNC30    EQU   *                                                   0918
         WAIT  ECB=AVTCKECA             WAIT FOR I/O COMPLETION SA63974
         MVI   AVTCKECA,AVTEZERO        CLEAR COMPLETION CODES  SA63974
         LM    R14,R12,AVTSAVE3+12      RESTORE SYSTEM REGS        0503
         XC    AVTDKAPQ+1(3),AVTDKAPQ+1 CLEAR CPB FROM QUEUE     S21101
*                                       WHERE IT WAS PLACED BY DISK END
         EJECT ,                                                 99226
*                                                                99226
* WHEN THE CPB COMES BACK FROM APPENDAGE, A TEST IS MADE TO      99226
* DETERMINE IF THERE WAS A DISK ERROR . IF SO IT PICKS UP A      99226
* WTO ROUTINE IN IGG019RC TO HANDLE IT.                          99226
*                                                                99226
CPBER    EQU   X'01'                    CPB FLAG FROM DISK ERROR 99226
         TM    CPBFLAG,CPBER            DID CPB HAVE I/O ERROR   99226
         BZ    GOODCPB                    NO, GOOD CPB           99226
*                                         YES, I/O ERROR         99226
         ST    R0,AVTEA                 RESTORE DISP ADDR        99226
         LR    R7,R3                    GET CPB FOR WTO          99226
         L     R15,AVTFL                GET ADDRESS OF IGG019RC  99226
         L     R15,4(,R15)              GET 2ND WORD OF RC       99226
         BALR  R14,R15                  CALL DISK ERROR WTO RTN  99226
*                                                                99226
         LM    R14,R12,AVTSAVE3+12      RESTORE SYS REGS         99226
GOODCPB  EQU   *                                                 99226
         L     R13,AVTSAVE1+8           RESTORE R13              CLUP21
         DROP  R13                                               99226
         OC    LENGTH(4),LENGTH         WAS CORE GOTTEN        @YA11145
         BZ    NOSAVE                   NO, DON'T SAVE         @YA11145
         L     R1,LAST                  GET LAST READ PRF      @YA11145
         CLI   ACTCODE,WD               CHECK FOR WRITE DATA   @YA11145
         BE    SAVEDATA                 YES, SAVE NEW DATA     @YA11145
         BH    SAVENEW                  READ, GO SAVE PREFIX   @YA11145
         CLI   CPBRDWR,CPBRDC           READ DATA COMMAND      @YA11145
         BE    NOSAVE                   YES, DON'T SAVE        @YA11145
*                                       FALL THROUGH ON WRITE  @YA11145
*                                        KEY AND DATA          @YA11145
SAVEPRF  EQU   *                                               @YA11145
         MVC   PRFSUNIT-IEDQPRF(PRFSHDR-PRFSUNIT,R1),PRFSUNIT  @YA11145
*                                       SAVE BFR PREFIX        @YA11145
         MVC   PRFCOUNT-IEDQPRF(3,R1),CPBADDR+1 SAVE CPBADDR   @YA11145
SAVEDATA EQU   *                                               @YA11145
         LTR   R1,R1                    WAS OLD DATA AVAILABLE @YA11145
         BZ    NOSAVE                   NO, DON'T SAVE NEW     @YA11145
         MVC   DATFLAGS-IEDQDATA(6,R1),DATFLAGS-IEDQDATA(R4)   @YA11145
*                                       SAVE NEW DATA          @YA11145
NOSAVE   EQU   *                                               @YA11145
RESTORE  EQU   *                                               @YA11145
         LM    R14,R12,AVTSAVE3+12                             @YA11145
         BR    R14                      RETURN TO IGG01945         0318
         SPACE 3
SAVENEW  EQU   *                                               @YA11145
         LTR   R1,R1                    WAS PREFIX FOUND?      @YA11145
         BNZ   NOSAVE                   YES, UPDATE BEING DONE @YA11145
*                                       ON QBACK FIELDS SAVED  @YA11145
*                                       DATA WILL BE CHANGED   @YA11145
         CLI   ACTCODE,RKDQ             READING QBACK OR UPDATE@YA11145
         BL    INSERT                   NO,BRANCH              @YA11145
         TM    PRFSTAT1,PRFNHDRN        TEXT BUFFER            @YA11145
         BO    INSERT                   YES, BRANCH            @YA11145
         BAL   R14,HDRSCAN              SEARCH FOR SLOT IN     @YA11145
*                                       HDRQ TO INSERT NEW     @YA11145
*                                       PREFIX                 @YA11145
INSERT   EQU   *                                               @YA11145
         LA    R15,NXTAVAIL             SET TO DELINK UNIT     @YA11145
         ICM   R1,ADDR,NXTAVAIL+1       GET NEXT AVAILABLE     @YA11145
         BNZ   DELINK                   BRANCH IF ONE THERE    @YA11145
         LA    R15,TXTQ                 STEAL OLDEST TXT UNIT  @YA11145
         ICM   R1,ADDR,TXTQ+1           GET FIRST TEXT UNIT    @YA11145
         BNZ   DELINK                   BRANCH IF ONE THERE    @YA11145
         LA    R15,HDRQ                 STEAL OLDEST HDR UNIT  @YA11145
         ICM   R1,ADDR,HDRQ+1           GET FIRST HDR UNIT     @YA11145
         BZ    NOSAVE                   NONE HERE EITHER,      @YA11145
*                                         SHOULD NOT OCCUR     @YA11145
DELINK   EQU   *                                               @YA11145
         ST    R1,LAST                  SAVE POINTER TO LAST   @YA11145
*                                       SEGMENT READ           @YA11145
         C     R1,PREV                  ATTEMPTING TO DELINK   @YA11145
*                                        UNIT PREVIOUS TO WHERE@YA11145
*                                        THIS ONE WILL BE      @YA11145
*                                        INSERTED IN CHAIN     @YA11145
         BE    SAVEPRF                  YES, ALREADY IN PROPER @YA11145
*                                        SLOT, DON'T REMOVE    @YA11145
         MVC   QCBELCHN-IEDQQCB(3,R15),PRFTIC+1-IEDQPRF(R1)    @YA11145
*                                       DELINK THIS UNIT       @YA11145
         L     R15,PREV                 GET POINTER TO UNIT    @YA11145
*                                        TO LINK THIS ONE      @YA11145
*                                        BEHIND                @YA11145
         MVC   PRFTIC+1-IEDQPRF(3,R1),PRFTIC+1-IEDQPRF(R15)    @YA11145
*                                       LINK THIS ONE TO NEXT  @YA11145
         STCM  R1,ADDR,PRFTIC+1-IEDQPRF(R15) LINK PREVIOUS     @YA11145
*                                        TO THIS ONE           @YA11145
         B     SAVEPRF                  AND GO MOVE PREFIX     @YA11145
         SPACE 3
         SPACE
**********************************************************************
         SPACE 3
*CHECK SEQUENCE NUMBERS IN TERM ENTRY TO SEE IF THEY NEED UPDATING 1029
         SPACE
Q835     EQU   *                                                   1029
         LA    R15,1(,R15)              ADD 1 TO SEQUENCE NUMBER   1029
         LH    R10,Q8MAX                GET MAX SEQ NUM         SA52971
         CR    R15,R10                  CHECK FOR MAX           SA52971
         BNE   Q837                     BRANCH IF MAX NOT REACHED  1029
         LA    R15,1                    INITIALIZE SEQ NUMBR TO 1  1029
Q837     EQU   *                                                   1029
         SRL   R10,DIV2                 DIVIDE BY TWO           SA52971
         LH    R13,0(,R1)               GET SEQ NUMBR FROM TERM    1029
         SR    R13,R15                  GET DIFFERENCE BETWEEN TWO 1029
         BP    Q839                     BR IF TERM SEQ HIGHER   SA52971
         SPACE 3
*THE SEQUENCE NUMBER IN THE TERMINAL ENTRY IS LOWER THAN THE    SA52971
*NUMBER IN THE MESSAGE.  MAKE COMPARE VALUE NEGATIVE SO THAT    SA52971
*CONDITION CODES WILL BE CONSISTENT.                            SA52971
         SPACE
         LNR   R10,R10                  NEGATE COMPARE VALUE    SA52971
Q839     EQU   *                                                SA52971
         CR    R13,R10                  CHECK DIFFERENCE        SA52971
         BCR   4,R14                    BR IF DIFFERENCE IS      CLUP21X
                                        SMALLER THAN HALF THE      1029X
                                        LARGEST POSSIBLE DIFFERENCE1029
         STH   R15,0(,R1)               UPDATE SEQUENCE NUMBER-TERM1029
         LA    R15,TRMOUTSQ             ADDR OF OUTPUT SEQ NUM @ZA03082
         CR    R15,R1                   IS THIS OUTPUT SEQ NR? @ZA03082
         BNER  R14                      NO, RETURN             @ZA03082
         OI    QCBCFHDR,QCBSQDEC        SET SEQ DEC SWITCH     @OZ08356
         BR    R14                      RETURN TO IGG01945         1029
         SPACE
**********************************************************************
         SPACE 3
*SUBROUTINE TO COMPARE THE VALUE IN CPBADDR WITH RADDR OR NADDR TO
*SEE IF THIS RECORD NUMBER SHOULD BE USED TO UPDATE RADDR OR NADDR.
         SPACE
QMJ96    EQU   *                                                   0915
         L     R1,CPBADDR               GET RECORD NUMBER       OX03959
         LA    R1,INCR(,R1)             BUMP TO NEXT RECORD     OX03959
         TM    CPBADDR+3,CPBQTYPE       REUS RRN                SA51078
         BO    Q855                     BRANCH IF YES           OX03959
         C     R1,AVTNADDR              IS ADDRESS THAT HIGH    OX03959
         BCR   13,R14                   YES, RETURN             SA52971
         ST    R1,AVTNADDR              BUMP ADDRESS            OX03959
         BR    R14                      RETURN TO IGG01945         1111
         SPACE 1
Q855     EQU   *                                                OX03959
         L     R15,AVTRADDR             GET REUS RRN            OX03959
         SR    R15,R1                   GET DIFFERENCE          OX03959
         BM    Q865                     BRANCH IF CPBADDR HIGH  OX03959
         SRL   R15,DIV4                 DIVIDE BY 4 TO GET REAL OX03959
*                                        RRN DIFFERENCE         OX03959
         C     R15,AVTTOTNR             IS DIFFERENCE MORE THAN OX03959
*                                        DISK SIZE              OX03959
         BNHR  R14                      NO, RETURN -CPBADDR LOW OX03959
         L     R15,AVTTOTNR             GET TOTAL RECORDS      @SA69965
         SRL   R15,DIV4                 GET 1/4 OF TOTAL       @SA69965
         ST    R15,AVTLODPT             RESET NEXT REUS CYCLE  @SA69965
         SRL   R15,DIV2                 GET 1/8 OF TOTAL       @SA69965
         A     R15,AVTLODPT             ADD TO GET 3/8 OF TOTAL@SA69965
         ST    R15,AVTLODPT             SET NEXT REUS CYCLE    @SA69965
Q860     EQU   *                                                OX03959
         ST    R1,AVTRADDR              SAVE NEW ADDRESS        OX03959
         BR    R14                      AND RETURN              OX03959
Q865     EQU   *                                                OX03959
         LPR   R15,R15                  GET POSITIVE DIFFERENCE OX03959
         SRL   R15,DIV4                 DIVIDE BY 4 TO GET REAL OX03959
*                                        RRN DIFFERENCE         OX03959
         C     R15,AVTTOTNR             IS DIFFERENCE MORE THAN OX03959
*                                        DISK SIZE              OX03959
         BNLR  R14                      YES, RETURN -RADDR HIGH OX03959
         B     Q860                     NO, GO UPDATE RADDR     OX03959
         SPACE
**********************************************************************
         SPACE 3                                               @SA71107
MOVER    EQU   *                                               @SA71107
         STM   R1,R12,AVTSAVE3+20       SAVE REGISTERS         @SA71107
         TM    LASTBYTE(R1),CPBQTYPE    REUS RRN               @SA71107
         BNO   COMPARE                  NO, DO STRAIGHT COMPARE@SA71107
         SR    R4,R4                    CLEAR FOR ICM          @SA71107
         SR    R5,R5                    CLEAR FOR ICM          @SA71107
         ICM   R4,ADDR,AVTEZERO(R1)     GET 'TO' VALUE         @SA71107
         ICM   R5,ADDR,AVTEZERO(R15)    GET 'FROM' VALUE       @SA71107
         SR    R5,R4                    GET DIFFERENCE         @SA71107
         BM    RECHECK                  FROM LESS THAN TO      @SA71107
         SRL   R5,DIV4                  GET REAL RRN DIFFERENCE@SA71107
         C     R5,AVTTOTNR              IS DIFFERENCE MORE THAN@SA71107
*                                        DISK SIZE             @SA71107
CKCODE   BH    SKIPMOVE                 YES, FROM VALUE IS     @SA71107
*                                        PRE-WRAP NUMBER       @SA71107
MOVEIT   MVC   AVTEZERO(ADDRSIZE,R1),AVTEZERO(R15) UPDATE VALUE@SA71107
*                                        WITH HIGHER RELATIVE  @SA71107
*                                        NUMBER                @SA71107
SKIPMOVE EQU   *                                               @SA71107
         LM    R1,R12,AVTSAVE3+20       RESTORE REGISTERS      @SA71107
         BR    R14                      AND RETURN             @SA71107
RECHECK  EQU   *                                               @SA71107
         LPR   R5,R5                    GET POSITIVE DIFFERENCE@SA71107
         SRL   R5,DIV4                  GET REAL RRN DIFFERENCE@SA71107
         C     R5,AVTTOTNR              IS DIFFERENCE MORE THAN@SA71107
*                                        DISK SIZE             @SA71107
         BL    SKIPMOVE                 NO, TO VALUE IS PRE-   @SA71107
*                                        WRAPPED NUMBER AND IS @SA71107
*                                        HIGHER THAN FROM VALUE@SA71107
         B     MOVEIT                   GO UPDATE NUMBER       @SA71107
COMPARE  CLC   AVTEZERO(ADDRSIZE,R1),AVTEZERO(R15) DO STRAIGHT @SA71107
*                                        COMPARE FOR NON-REUS  @SA71107
         B     CKCODE                   BRANCH TO CHECK        @SA71107
*                                        CONDITION CODE        @SA71107
         SPACE 3
         DS    0F                       WORD BOUNDARY              0216
QME000F  DC    X'000000FF'              CLEAR THREE HIGH-ORDER BTS 0216
Q8MAX    DC    H'10000'                 MAXIMUM SEQUENCE NUMBER SA52971
Q8FLAG   DC    X'8000'                  FLAG FOR SECTR CNVRT0507 S21101
PQCBSZ   DC    AL2(QCBPSIZE)            PQCB SIZE               SA51078
TWO      DC    H'2'                                            @SA74246
SIZES    DC    F'1024',F'8388608'       MIN AND MAX SIZES      @YA11145
*                                        FOR GETMAIN           @YA11145
GETML    GETMAIN VC,LA=SIZES,A=GETML,SP=250,MF=L               @YA11145
GMEND    EQU   *                                               @YA11145
QMEMOVE   MVC   0(0,R4),0(R11)          MOVE INVITATION LIST       0216
ABNDCORE DC    H'4096'                  SIZE FOR ABEND         @OS77390
         DC    CL6'SEQNO'               SEQUENCE NO.           @OY11175
SEQSAVE  DC    XL2'00'                  SEQUENCE NUMBER        @OY11175
H5000    DC    H'5000'                  HALF OF HIGHEST SEQ NUM@OZ08356
H9000    DC    H'9000'                  SEQ NUM ABOUT TO WRAP  @OZ08356
QMEMOVEL  EQU   X'100'                  MAXIMUM MOVE LENGTH        0216
QCBSQDEC EQU   X'80'                    SEQ DECREMENT FLAG      SA59195
QCBDECRE EQU   X'40'                    ALREADY DECREMENTED FLG@OZ17620
QCBINCR  EQU   X'20'                    QCBPFEFO UPDATED FLAG  @OX20945
GOODRTN  EQU   4                        OFFSET FOR GOOD RETURN  SA51078
BADRTN   EQU   0                        OFFSET FOR BAD RETURN   SA51078
R12OFF   EQU   48                       OFFSET OF 1943 BASE    SA51078
R13OFF   EQU   52                       R13 OFFSET IN SA        SA51078
RLNLEN   EQU   1                        LENGTH FOR RLN COMPARE @XA05305
INVENTS  EQU   0                        OFFSET TO INVL ENTRIES @XA05305
INVSTAT  EQU   3                        OFFSET TO INVLIST STATU@XA05305
GOODRT43 EQU   2                        GOOD RET OFFSET TO 1943@XA05305
ONE      EQU   1                        INDEX INCREMENT        @SA72478
         DS    0F
         TAVTD
         TCKPD 3330                     MERLIN VERSION OF DSECT    0419
         SPACE 3
*   THE FOLLOWING FIELDS ARE DEFINED IN CKPSAVE2 AND ARE USED  @YA11145
*   TO KEEP TRACK OF UNITS FROM DISK WHICH HAVE BEEN SAVED IN  @YA11145
*   CORE.  THIS PROVIDES CORE QUEUEING FOR THE DISK DATA SETS  @YA11145
*   SO THAT DISK READS WILL BE KEPT AT A MINIMUM.              @YA11145
         SPACE 2
NXTAVAIL EQU   CKPSAVE2+12              NEXT AVAILABLE UNIT    @YA11145
ACTCODE  EQU   CKPSAVE2+16              ACTION CODE            @YA11145
RD       EQU   0                        READ DATA              @YA11145
WD       EQU   4                        WRITE DATA             @YA11145
RKDH     EQU   8                        READ HDR KEY AND DATA  @YA11145
RKDT     EQU   12                       READ TXTKEY AND DATA   @YA11145
RKDQ     EQU   16                       READ QBACK (HDR OR TXT)@YA11145
UPDATE   EQU   20                       READ WITH UPDATE       @YA11145
GMAIN    EQU   CKPSAVE2+16              GETMAIN AREA           @YA11145
LENGTH   EQU   CKPSAVE2+20              LENGTH OF GETMAIN AREA @YA11145
HDRQ     EQU   CKPSAVE2+24              CHAIN OF HDR UNITS     @YA11145
TXTQ     EQU   CKPSAVE2+28              CHAIN OF TXT UNITS     @YA11145
LAST     EQU   CKPSAVE2+32              LAST UNIT FOR WHICH A  @YA11145
*                                        READ WAS ISSUED       @YA11145
PREV     EQU   CKPSAVE2+36              PREVIOUS UNIT IN CHAIN @YA11145
C12      EQU   12                       OFFSET TO FOURTH WORD  @YA11145
C17      EQU   17                       OFFSET TO ADDR IN FIFTH@YA11145
*                                       WORD                   @YA11145
SP250    EQU   250                                             @YA11145
CKPFIRST EQU   X'40' .                  INDICATES EMPTY FEFO QUEUS21101
CKPSTAYN EQU   X'20'                    NO-SCAN SPECIFIED-S=WY   S21101
         EJECT                                                 @XA
         DCBD  DSORG=TX                                        @XA05305
         EJECT                                                 @XA
         TQCBD
         TTNTD
         TTRMD
         TDISPD
         TCPBD 3330                     MERLIN VERSION             0421
         TPRFD
         TDATAD
         END
