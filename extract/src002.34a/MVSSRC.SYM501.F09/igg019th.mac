         TITLE 'IGG019TH - 3705 CHANNEL END/SIO APPENDAGE              *
                        '
IGG019TH CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
*                                                /* @YM02924*/
*
         DC    A(END19TH+2-IGG019TH)    LENGTH OF IGG019TH
         DC    A(SIOAPNDG)              ADDRESS OF SIO APPENDAGE
THENTRY  EQU   *                                               @YM02924
         USING THENTRY,TEMPBASE         MODULE ADDRESSABILITY  @YM02924
IGG019TH IEDHJN AFTERHJN                MODULE AND DATE
*   STM(REG0,RBRANCH,SIOSAVE);      /* SAVE REGS ON ENTRY    @ZM47611*/
         STM   REG0,RBRANCH,SIOSAVE                                0465
*   RAVT=TCXAVT;                    /* GET AVT ADDR FROM TCX         */
         L     @11,CVTPTR                                          0466
         L     @11,TCXPTR(,@11)                                    0466
         L     RAVT,TCXAVT(,@11)                                   0466
*   GEN REFS(TEMPBASE,RBASE) NOEXIT SEQFLOW SETS(RBASE);           0467
*                                                    /* @YM02924*/
         DROP  TEMPBASE
         LR    RBASE,TEMPBASE                                  @YM02924
         USING THENTRY,RBASE                                   @YM02924
*   RFY                                                            0468
*     TEMPBASE UNRSTD;              /*                       @YM02924*/
*   AVTDPARM=RRETURN;               /* SAVE REGISTER FOR IOS         */
         ST    RRETURN,AVTDPARM(,RAVT)                             0469
*   RLCB=RPARM->IOSUSE;             /* REG 1 POINTS TO IOSB. PTR TO
*                                      LCB IS IN IOSB        @G36XRIB*/
         L     RLCB,IOSUSE(,RPARM)                                 0470
*/* MAP I/O STATUS FIELDS FROM IOSB INTO LCB(IOB)            @G36XRIB*/
*                                                                  0471
*   LCBFLAG1=IOSFLA;                /* STATUS BITS           @G36XRIB*/
         L     @15,IOSBPTR-1(,RLCB)                                0471
         LA    @15,0(,@15)                                         0471
         MVC   LCBFLAG1(1,RLCB),IOSFLA(@15)                        0471
*   LCBFLAG2=IOSFLB;                /* STATUS BITS           @G36XRIB*/
         MVC   LCBFLAG2(1,RLCB),IOSFLB(@15)                        0472
*   LCBECBCC=IOSCOD;                /* ECB COMPLETION CODE   @G36XRIB*/
         MVC   LCBECBCC(1,RLCB),IOSCOD(@15)                        0473
*   LCBSIOCC=IOSCC;                 /* SIO COMPLETION CODE   @G36XRIB*/
         MVC   LCBSIOCC(1,RLCB),IOSCC(@15)                         0474
*   LCBCSW=IOSCSW;                  /* CSW                   @G36XRIB*/
         MVC   LCBCSW(7,RLCB),IOSCSW(@15)                          0475
*   LCBSNS=IOSSNS;                  /* SENSE BYTES           @G36XRIB*/
         MVC   LCBSNS(2,RLCB),IOSSNS(@15)                          0476
*/*                                                          @G36XRIB*/
*                                                                  0477
*   IF LCBSIOC2=ON×                 /* SIO CONDITION CODE 1 OR 3...
*                                                            @OY20765*/
*       LCBCSWCA=0                  /* ..OR CURRENT I/O OPERATION  0477
*                                      INTERCEPTED BECAUSE ERROR   0477
*                                      CONDITION DETECTED ON PREVIOUS
*                                      I/O OPERATION AFTER CHANNEL 0477
*                                      END                   @OY20765*/
*     THEN                          /*                       @OY20765*/
         TM    LCBSIOC2(RLCB),B'00010000'                          0477
         BO    @RT00477                                            0477
         L     @15,LCBCSWCA-1(,RLCB)                               0477
         LA    @15,0(,@15)                                         0477
         LTR   @15,@15                                             0477
         BNZ   @RF00477                                            0477
@RT00477 DS    0H                                                  0478
*     DO;                           /* YES                   @G36XRIB*/
*       LCBCSWCA=LCBSTART+LENGTH(IEDQCCW);/* ..THEN SETUP DUMMY    0479
*                                      INTERRUPT ADDRESS     @G36XRIB*/
         LA    @15,8                                               0479
         L     @11,LCBSTART-1(,RLCB)                               0479
         LA    @11,0(,@11)                                         0479
         ALR   @15,@11                                             0479
         STCM  @15,7,LCBCSWCA(RLCB)                                0479
*       IOSCSWCA=LCBCSWCA;          /* PUT DUMMY ADDR IN IOSB ALSO 0480
*                                                            @G36XRIB*/
         L     @11,IOSBPTR-1(,RLCB)                                0480
         STCM  @15,7,IOSCSWCA(@11)                                 0480
*     END;                          /*                       @G36XRIB*/
*   ELSE                                                           0482
*     ;                             /*                       @YM06897*/
@RF00477 DS    0H                                                  0483
*   RFY                                                            0483
*    (RPARM,                                                       0483
*     REG3,                                                        0483
*     REG4,                                                        0483
*     RCCW,                                                        0483
*     RPRF,                                                        0483
*     REG7,                                                        0483
*     RTRM) UNRSTD;                                                0483
*   RFY                                                            0484
*    (REG0,                                                        0484
*     REG9,                                                        0484
*     RRETURN) UNRSTD;                                             0484
*                                                                  0485
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE TERM ENTRY (TTE) FOR THE NCP (3705) REPRESENTED BY    */
*   /* THIS LCB. CALL IEDQTNT WITH REG1 CONTAINING THE TTCIN, REG14  */
*   /* THE RETURN ADDR, AND REG15 THE ADDR OF IEDQTNT. IEDQTNT WILL  */
*   /* RETURN WITH THE TERM ENTRY ADDR IN REG1.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*   RFY                                                            0485
*    (RPARM,                                                       0485
*     RTRM) RSTD;                                                  0485
*   RPARM=LCBTTCIN;                 /* GET TNT OFFSET OF NCP         */
         LH    RPARM,LCBTTCIN(,RLCB)                               0486
         N     RPARM,@CF02869                                      0486
*   CALL TNTCODE;                   /* CALL IEDQTNT FOR TERM ENTRY   */
         L     @15,IEDQNPTR(,RAVT)                                 0487
         BALR  @14,@15                                             0487
*   RTRM=RPARM-LENGTH(IEDNTRM);     /* SAVE TERM ENTRY ADDR  @YM04622*/
         LR    RTRM,RPARM                                          0488
         SL    RTRM,@CF02521                                       0488
*   RFY                                                            0489
*     RPARM UNRSTD;                                                0489
*                                                                  0490
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CCW'S ARE REAL, THEN TRANSLATE THEM TO VIRTUAL.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0490
*   RFY                                                            0490
*    (RPARM,                                                       0490
*     RCCW,                                                        0490
*     RINT,                                                        0490
*     RWORK) RSTD;                  /*                       @YM04622*/
*   IF LCBRLAD=ON THEN              /* IF REAL CHAN PROGRAM EXISTS 0491
*                                      THEN ...              @YM04622*/
         TM    LCBRLAD(RLCB),B'00010000'                           0491
         BNO   @RF00491                                            0491
*     DO;                           /* ... TRANSLATE TO VIRTUAL    0492
*                                                            @YM04622*/
*       RWORK=CVTPTRV;              /* GET ADDR OF REAL TO VIRTUAL 0493
*                                      TRANSLATE ROUTINE             */
         L     @04,CVTPTR                                          0493
         L     RWORK,CVTPTRV(,@04)                                 0493
*       RINT=LCBCSWCA-LENGTH(IEDQCCW);/* INTERRUPT CCW ADDRESS     0494
*                                                            @YM04622*/
         L     RINT,LCBCSWCA-1(,RLCB)                              0494
         LA    RINT,0(,RINT)                                       0494
         SL    RINT,@CF00046                                       0494
*       IF TRMIPLDM=ON×             /* IF IPL OR DUMP IN PROGRESS ...
*                                                            @YM04622*/
*           LCBSTAT1=CLOSDOWN THEN  /* ... OR CLOSE CHANNEL PROGRAM
*                                      THEN                  @YM04622*/
         TM    TRMIPLDM(RTRM),B'10000000'                          0495
         BO    @RT00495                                            0495
         CLI   LCBSTAT1(RLCB),X'FF'                                0495
         BNE   @RF00495                                            0495
@RT00495 DS    0H                                                  0496
*         RCCW=LCBSTART;            /* BEGIN TRANSLATION WITH FIRST
*                                      CCW                   @YM04622*/
         L     RCCW,LCBSTART-1(,RLCB)                              0496
         LA    RCCW,0(,RCCW)                                       0496
*       ELSE                        /*                       @YM04622*/
*         DO;                       /* ELSE DETERMINE WHICH CCWS NEED
*                                      TRANSLATION           @YM04622*/
         B     @RC00495                                            0497
@RF00495 DS    0H                                                  0498
*           RPARM=RLCB+DCBEIOBX;    /* POINT TO END OF LCB   @YM04622*/
         L     @11,LCBDCBPT(,RLCB)                                 0498
         LR    RPARM,RLCB                                          0498
         SLR   @04,@04                                             0498
         IC    @04,DCBEIOBX+20(,@11)                               0498
         ALR   RPARM,@04                                           0498
*           IF RINT>=RLCB&          /* IF INTERRUPT CCW IS IN THE LCB
*                                                            @YM04622*/
*               RINT<RPARM&         /*                       @YM04622*/
*               RINT^=ADDR(LCBCCW7) THEN/* BUT NOT NOP CCW AFTER   0499
*                                      READS                 @YM04622*/
         CR    RINT,RLCB                                           0499
         BL    @RF00499                                            0499
         CR    RINT,RPARM                                          0499
         BNL   @RF00499                                            0499
         LA    @11,LCBCCW7(,RLCB)                                  0499
         CR    RINT,@11                                            0499
         BE    @RF00499                                            0499
*             RINT=ZERO;            /* THEN INDICATE NO READ CCW   0500
*                                      TRANSLATION           @YM04622*/
         SLR   RINT,RINT                                           0500
*           RCCW=ADDR(LCBCCW2);     /* ASSUME SENDING        @YM04622*/
@RF00499 LA    RCCW,LCBCCW2(,RLCB)                                 0501
*           IF LCBSENDN=OFF THEN    /* IF NOT SENDING THEN ...     0502
*                                                            @YM04622*/
         TM    LCBSENDN(RLCB),B'00000001'                          0502
         BNZ   @RF00502                                            0502
*             RCCW=ADDR(LCBCCW4);   /* ... ASSUME READING    @YM04622*/
         LA    RCCW,LCBCCW4(,RLCB)                                 0503
*         END;                      /*                       @YM04622*/
@RF00502 DS    0H                                                  0505
*       DO WHILE LCBRLAD=ON;        /* TRANSLATE CCW'S WHILE ANY ARE
*                                      REAL                          */
@RC00495 B     @DE00505                                            0505
@DL00505 DS    0H                                                  0506
*         RPARM=CCWADDR;            /* GET CCW DATA ADDRESS          */
         SLR   RPARM,RPARM                                         0506
         ICM   RPARM,7,CCWADDR(RCCW)                               0506
*         CALL CONVERT;             /* CALL CONVERT ROUTINE          */
         LR    @15,RWORK                                           0507
         BALR  @14,@15                                             0507
*         RFY                                                      0508
*           RBRANCH RSTD;                                          0508
*         IF RBRANCH^=ZERO THEN     /* ERROR ON CONVERSION           */
         LTR   RBRANCH,RBRANCH                                     0509
         BZ    @RF00509                                            0509
*           CALL CONVERR;           /* YES, CALL CONVERSION ERROR  0510
*                                      SUBROUTINE                    */
         BAL   @14,CONVERR                                         0510
*         RFY                                                      0511
*           RBRANCH UNRSTD;                                        0511
@RF00509 DS    0H                                                  0512
*         CCWADDR=RPARM;            /* UPDATE CCW DATA ADDRESS WITH
*                                      VIRTUAL ADDR                  */
         STCM  RPARM,7,CCWADDR(RCCW)                               0512
*         IF RCCW=RINT&             /* IF THIS IS THE INTERRUPT CCW
*                                      ...                   @YM04622*/
*             TRMIPLDM^=ON THEN     /* ... AND NOT IN PROCESS OF   0513
*                                      IPL/DUMP              @YM04622*/
         CR    RCCW,RINT                                           0513
         BNE   @RF00513                                            0513
         TM    TRMIPLDM(RTRM),B'10000000'                          0513
         BO    @RF00513                                            0513
*           RINT=ZERO;              /* THEN INDICATE INTERRUPT CCW 0514
*                                      TRANSLATED            @YM04622*/
         SLR   RINT,RINT                                           0514
*         IF NOTTIC1=OFF&           /* IS COMMAND ...                */
*             NOTTIC2=OFF&          /* ... A ...                     */
*             NOTTIC3=OFF THEN      /* ... TIC                       */
@RF00513 TM    NOTTIC1(RCCW),B'00000111'                           0515
         BNZ   @RF00515                                            0515
*           DO;                     /*                       @YM04622*/
*             CCWOPCDE=CCWTIC;      /* INDICATE VIRTUAL TIC (CCW   0517
*                                      VIRTUAL)              @YM04622*/
         MVI   CCWOPCDE(RCCW),X'08'                                0517
*             RCCW=RPARM;           /* NEXT CCW IS TIC TO CCW      0518
*                                                            @YM04622*/
         LR    RCCW,RPARM                                          0518
*             IF CCWOPCDE=CCWREAD THEN/* IF THIS IS A READ CCW ... 0519
*                                                            @YM04622*/
         CLI   CCWOPCDE(RCCW),X'02'                                0519
         BNE   @RF00519                                            0519
*               IF RINT=ZERO THEN   /* ... AND THE INTERRUPT CCW HAS
*                                      BEEN TRANSLATED       @YM04622*/
         LTR   RINT,RINT                                           0520
         BNZ   @RF00520                                            0520
*                 LCBRLAD=OFF;      /* INDICATE TRANSLATION COMPLETE
*                                                            @YM04622*/
         NI    LCBRLAD(RLCB),B'11101111'                           0521
*               ELSE                                               0522
*                 ;                 /*                       @YM04622*/
@RF00520 DS    0H                                                  0523
*             ELSE                  /*                       @YM04622*/
*               IF RCCW=ADDR(LCBCCW3) THEN/* IF TIC TO READ START ...
*                                                            @YM06637*/
         B     @RC00519                                            0523
@RF00519 LA    @11,LCBCCW3(,RLCB)                                  0523
         CR    RCCW,@11                                            0523
         BNE   @RF00523                                            0523
*                 RCCW=ADDR(LCBCCW4);/* ... TRANSLATE TIC TO READ  0524
*                                      BUFFER                @YM06637*/
         LA    RCCW,LCBCCW4(,RLCB)                                 0524
*               ELSE                /*                       @YM06637*/
*                 IF CCWOPCDE=CCWNOP THEN/* IF TIC TO A NOP, FINISHED
*                                                            @YM04622*/
         B     @RC00523                                            0525
@RF00523 CLI   CCWOPCDE(RCCW),X'03'                                0525
         BNE   @RF00525                                            0525
*                   LCBRLAD=OFF;    /* INDICATE TRANSLATION COMPLETE
*                                                            @YM04622*/
         NI    LCBRLAD(RLCB),B'11101111'                           0526
*           END;                    /*                       @YM04622*/
*         ELSE                      /* NOT A TIC                     */
*           RCCW=RCCW+LENGTH(IEDQCCW);/* YES, NEXT CCW FOLLOWS THIS
*                                      CCW                           */
         B     @RC00515                                            0528
@RF00515 AL    RCCW,@CF00046                                       0528
*         IF CCWCC=ON×              /* IF COMMAND CHAINING ...     0529
*                                                            @YM06637*/
*             CCWCD=ON THEN                                        0529
@RC00515 TM    CCWCC(RCCW),B'11000000'                             0529
         BNZ   @RT00529                                            0529
*           ;                       /* ... OR DATA CHAINING THEN   0530
*                                      TRANSLATE             @YM06637*/
*         ELSE                      /*                       @YM06637*/
*           IF TRMIPLDM=ON×         /* IF IPL/DUMP IN PROGRESS ... 0531
*                                                            @YM06637*/
*               LCBSTAT1=CLOSDOWN THEN/* ... OR TCAM CLOSEDOWN     0531
*                                                            @YM06637*/
         TM    TRMIPLDM(RTRM),B'10000000'                          0531
         BO    @RT00531                                            0531
         CLI   LCBSTAT1(RLCB),X'FF'                                0531
         BNE   @RF00531                                            0531
@RT00531 DS    0H                                                  0532
*             IF LCBRLAD=OFF THEN                                  0532
         TM    LCBRLAD(RLCB),B'00010000'                           0532
         BZ    @RT00532                                            0532
*               ;                   /* CCW ADDRESSES ALL TRANSLATED
*                                                            @OZ30168*/
*             ELSE                  /* MAY HAVE TO TRANSLATE LAST CCW
*                                      IN CHAIN              @OZ30168*/
*               DO;                                                0534
*                 RPARM=RCCW-LENGTH(IEDQCCW);/* BACK UP TO LAST CCW
*                                      TRANSLATED            @OZ30168*/
         LR    RPARM,RCCW                                          0535
         SL    RPARM,@CF00046                                      0535
*                 IF RPARM->CCWCC=ON×RPARM->CCWCD=ON/*       @OZ30168*/
*                   THEN            /* ONE MORE CCW TO TRANSLATE   0536
*                                                            @OZ30168*/
         TM    CCWCC(RPARM),B'11000000'                            0536
         BZ    @RF00536                                            0536
*                   DO;             /*                       @OZ30168*/
*                     RPARM=CCWADDR;/* REAL DATA ADDRESS     @OZ30168*/
         SLR   RPARM,RPARM                                         0538
         ICM   RPARM,7,CCWADDR(RCCW)                               0538
*                     CALL CONVERT; /* GET VIRTUAL ADDR IN R1      0539
*                                                            @OZ30168*/
         LR    @15,RWORK                                           0539
         BALR  @14,@15                                             0539
*                     RFY                                          0540
*                       RBRANCH RSTD;/*                      @OZ30168*/
*                     IF RBRANCH=ZERO THEN/* CONVERT GOOD    @OZ30168*/
         LTR   RBRANCH,RBRANCH                                     0541
         BNZ   @RF00541                                            0541
*                       CCWADDR=RPARM;/* STORE VIRTUAL ADDRESS     0542
*                                                            @OZ30168*/
         STCM  RPARM,7,CCWADDR(RCCW)                               0542
*                     ELSE          /* TRANSLATE FAILED      @OZ30168*/
*                       CALL CONVERR;/* ABEND                @OZ30168*/
         B     @RC00541                                            0543
@RF00541 BAL   @14,CONVERR                                         0543
*                     RFY                                          0544
*                       RBRANCH UNRSTD;/*                    @OZ30168*/
@RC00541 DS    0H                                                  0545
*                   END;            /*                       @OZ30168*/
*                 ELSE                                             0546
*                   ;               /* ONLY 1 CCW IN CHAIN, ALL    0546
*                                      TRANSLATION DONE      @OZ30168*/
@RF00536 DS    0H                                                  0547
*                 LCBRLAD=OFF;      /* TRANSLATION IS COMPLETE     0547
*                                                            @OZ30168*/
         NI    LCBRLAD(RLCB),B'11101111'                           0547
*               END;                /*                       @OZ30168*/
*           ELSE                                                   0549
*             ;                     /* MORE TO TRANSLATE IF NOT IPL
*                                      OR CLOSEDOWN          @OZ30168*/
@RF00531 DS    0H                                                  0550
*       END;                                                       0550
@RC00531 DS    0H                                                  0550
@RT00529 DS    0H                                                  0550
@DE00505 TM    LCBRLAD(RLCB),B'00010000'                           0550
         BO    @DL00505                                            0550
*     END;                          /*                       @YM04622*/
*   RFY                                                            0552
*    (RPARM,                                                       0552
*     RCCW,                                                        0552
*     RINT,                                                        0552
*     RWORK) UNRSTD;                /*                       @YM04622*/
@RF00491 DS    0H                                                  0553
*                                                                  0553
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL LINE TRACE (IF IT IS IN THE SYSTEM)                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0553
*   RFY                                                            0553
*     RPARM RSTD;                   /*                       @YM02923*/
*   IF LCBSOHR=OFF THEN             /* IF MDR PROCESSING IS NOT IN 0554
*                                      PROGRESS              @YM03744*/
         TM    LCBSOHR(RLCB),B'00100000'                           0554
         BNZ   @RF00554                                            0554
*     IF AVTIOT^=ZERO THEN          /* IS LINE TRACE IN THE SYSTEM   */
         L     @09,AVTIOT(,RAVT)                                   0555
         LTR   @09,@09                                             0555
         BZ    @RF00555                                            0555
*       DO;                         /* YES, THEN CALL IT             */
*         IEDRQE=''B;               /* ZERO DUMMY RQE        @G36XRIB*/
         LA    @03,DUMRQE                                          0557
         XC    IEDRQE(20,@03),IEDRQE(@03)                          0557
*         RQEUCB=DIOSUCBP;          /* UCB ADDRESS           @G36XRIB*/
         L     @15,IOSBPTR-1(,RLCB)                                0558
         LH    @00,DIOSUCBP(,@15)                                  0558
         N     @00,@CF02869                                        0558
         STH   @00,RQEUCB(,@03)                                    0558
*         RQEIOB=RLCB+(ADDR(LCBFLAG1)-ADDR(IEDQLCB));/* IOB ADDR   0559
*                                                            @G36XRIB*/
         LA    @00,32                                              0559
         ALR   @00,RLCB                                            0559
         STCM  @00,7,RQEIOB(@03)                                   0559
*         RPARM=ADDR(IEDRQE);       /* ADDRESS OF DUMMY RQE  @G36XRIB*/
         LR    RPARM,@03                                           0560
*         CALL LNTRACE;             /* GO DO LINE TRACE      @G36XRIB*/
         LR    @15,@09                                             0561
         BALR  @14,@15                                             0561
*       END;                                                       0562
*     ELSE                                                         0563
*       ;                           /*                       @YM03744*/
@RF00555 DS    0H                                                  0564
*   ELSE                                                           0564
*     LCBSOHR=OFF;                  /* RESET MDR RECORDING IN      0564
*                                      PROGRESS              @YM03744*/
         B     @RC00554                                            0564
@RF00554 NI    LCBSOHR(RLCB),B'11011111'                           0564
*   RFY                                                            0565
*     RPARM UNRSTD;                 /*                       @YM02923*/
@RC00554 DS    0H                                                  0566
*   RFY                                                            0566
*    (RSTATE,                                                      0566
*     RCCW,                                                        0566
*     RWORK,                                                       0566
*     RPRF) RSTD;                                                  0566
         SPACE 1
*   RSTATE=ZERO;                    /* INITIALIZE LOCAL STATE VALUE  */
         SLR   RSTATE,RSTATE                                       0567
         SPACE 1
*   IF LCBSTAT1=CLOSDOWN&LCBOBRCH=ZERO THEN/* ARE WE IN CLOSE      0568
*                                                            @YM07304*/
         CLI   LCBSTAT1(RLCB),X'FF'                                0568
         BNE   @RF00568                                            0568
         L     @11,LCBOBRCH(,RLCB)                                 0568
         LTR   @11,@11                                             0568
         BNZ   @RF00568                                            0568
*     DO;                                                          0569
*       RFY                                                        0570
*         RECB RSTD;                /*                       @YM07304*/
*       RECB=LCBECBPT;              /* GET ADDRESS OF CLOSE ECB    0571
*                                                            @YM07304*/
         L     RECB,LCBECBPT-1(,RLCB)                              0571
         LA    RECB,0(,RECB)                                       0571
*       CALL POSTECB;               /* POST IT               @YM07304*/
         BAL   @14,POSTECB                                         0572
*       RFY                                                        0573
*         RECB UNRSTD;              /*                       @YM07304*/
*     END;                                                         0574
*   ELSE                            /*                       @YM07304*/
*     DO;                           /*                       @YM07304*/
         B     @RC00568                                            0575
@RF00568 DS    0H                                                  0576
*       IF TRMIPLDM=OFF&            /* IF IPL/DUMP NOT IN PROGRESS 0576
*                                      ...                   @YM08552*/
*           LCBCSWCA-LENGTH(IEDQCCW)=ADDR(CPARNOOP)&/* ... AND WE  0576
*                                      HAVE TAKEN AN INTERRUPT ON THE
*                                      NOP CCW AFTER THE READ CHANNEL
*                                      PROGRAM ...           @YM08552*/
*           LCBUSAT=OFF&            /* ... BUT HAVE NO ATTENTION   0576
*                                      STATUS ...            @YM08552*/
*           LCBUSUE=OFF THEN        /* ...AND NO UNIT EXCEPTION    0576
*                                      STATUS THEN...        @YM08552*/
         TM    TRMIPLDM(RTRM),B'10000000'                          0576
         BNZ   @RF00576                                            0576
         L     @11,LCBCSWCA-1(,RLCB)                               0576
         LA    @11,0(,@11)                                         0576
         SL    @11,@CF00046                                        0576
         LA    @07,CPARNOOP(,RLCB)                                 0576
         CR    @11,@07                                             0576
         BNE   @RF00576                                            0576
         TM    LCBUSAT(RLCB),B'10000001'                           0576
         BNZ   @RF00576                                            0576
*         DO;                       /* THE NCP IS OUT OF SYNCH AND 0577
*                                      MUST BE IPL'ED        @YM08552*/
*           LCBECBCC=LCBECB41;      /* FORCE PERMANENT ERROR       0578
*                                      INDICATION            @YM08552*/
         MVI   LCBECBCC(RLCB),X'41'                                0578
*           LCBNOTIN=ON;            /* FORCE CLEANUP TO CHECK      0579
*                                      DMPAUTO/IPLAUTO       @YM08552*/
         OI    LCBNOTIN(RLCB),B'00000010'                          0579
*           LCBNX142=ON;            /* IEDQNX WILL DISPLAY IED142A 0580
*                                                            @YM08552*/
         OI    LCBNX142(RLCB),B'01000000'                          0580
*         END;                      /* PROCEED TO BUILD A CHANNEL  0581
*                                      INOP                  @YM08552*/
*       IF LCBECBCC=LCBECB41 THEN   /* PERMANENT ERROR               */
*                                                                  0582
@RF00576 CLI   LCBECBCC(RLCB),X'41'                                0582
         BNE   @RF00582                                            0582
*         /***********************************************************/
*         /*                                                         */
*         /* PERMANENT ERROR ON I/O                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0583
*         IF TRMIPLDM=ON THEN       /* IS IPL OR DUMP IN PROGRESS    */
*                                                                  0583
         TM    TRMIPLDM(RTRM),B'10000000'                          0583
         BNO   @RF00583                                            0583
*           /*********************************************************/
*           /*                                                       */
*           /* IPL OR DUMP IS IN PROGRESS                            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0584
*           DO;                     /* POST LCB TO FIRST LEVEL DATA
*                                      HANDLER               @YM02949*/
*             LCBQCBA=SAVTFLDH;     /* QCB ADDRESS           @YM02949*/
         L     @11,AVTSAVTP(,RAVT)                                 0585
         MVC   LCBQCBA(3,RLCB),SAVTFLDH+1(@11)                     0585
*             LCBPRI=PRIAIPL;       /* AND PRIORITY          @YM02949*/
         MVI   LCBPRI(RLCB),X'DE'                                  0586
*             RPRF=RLCB;            /* PARAMETER TO POST     @YM02949*/
         LR    RPRF,RLCB                                           0587
*             CALL READYQ;          /* PUT LCB ON TCX READY QUE    0588
*                                                            @YM02949*/
         BAL   @14,READYQ                                          0588
*           END;                    /*                       @YM02949*/
*         ELSE                                                     0590
*                                                                  0590
*           /*********************************************************/
*           /*                                                       */
*           /* IPL OR DUMP NOT IN PROGRESS                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0590
*           DO;                                                    0590
         B     @RC00583                                            0590
@RF00583 DS    0H                                                  0591
*             LCBTSTSW=ZERO;        /* FREE LCB FOR I/O      @YM08173*/
         MVI   LCBTSTSW(RLCB),X'00'                                0591
*             TRMINOP=ON;           /* SET NCP INOPERATIVE   @YM08120*/
         OI    TRMINOP(RTRM),B'10000000'                           0592
*             IF LCBSENDN=ON THEN   /* IS 'SENDING' SET              */
         TM    LCBSENDN(RLCB),B'00000001'                          0593
         BNO   @RF00593                                            0593
*               DO;                 /* YES                           */
*                 RPRF=CPAWRTBK;    /* GET ADDR OF THE UNIT THAT   0595
*                                      POINTS TO THE WRITE BREAK UNIT*/
         L     RPRF,CPAWRTBK-1(,RLCB)                              0595
         LA    RPRF,0(,RPRF)                                       0595
*                 RWORK=PRFTI0;     /* GET ADDR OF PREFIX OF WRITE 0596
*                                      BREAK UNIT                    */
         L     @07,PRFTI0-1(,RPRF)                                 0596
         LA    @07,0(,@07)                                         0596
         LR    RWORK,@07                                           0596
*                 PRFTI0=PRFTI0+LENGTH(IEDQCCW);/* UPDATE THE ADDR TO
*                                      POINT TO THE UNIT ITSELF      */
         AL    @07,@CF00046                                        0597
         STCM  @07,7,PRFTI0(RPRF)                                  0597
*                 RPRF=PRFTI0;      /* POINT TO THE WRITE BREAK UNIT */
         LR    RPRF,@07                                            0598
*                 RPRF->CCW=RWORK->CCW;/* MOVE WRITE BREAK CCW INTO
*                                      THE UNIT                      */
         MVC   CCW(8,RPRF),CCW(RWORK)                              0599
*                 PRFTIC=PRFINTIC;  /* MAKE TIC ADDR INVALID         */
         MVC   PRFTIC(4,RPRF),@CB02288                             0600
*                 LCBFSBFR=CPAWRTBF;/* SET FIRST WRITE BUFFER      0601
*                                                            @YM03709*/
         MVC   LCBFSBFR(3,RLCB),CPAWRTBF(RLCB)                     0601
*               END;                                               0602
*             ELSE                  /* ELSE NOT SENDING      @YM07760*/
*               LCBFSBFR=0;         /* INDICATE NO WRITE BTU PRESENT
*                                                            @YM07760*/
         B     @RC00593                                            0603
@RF00593 SLR   @11,@11                                             0603
         STCM  @11,7,LCBFSBFR(RLCB)                                0603
*             INOPAREA=INOPAREA&&INOPAREA;/* CLEAR INOP AREA         */
@RC00593 LA    @11,152                                             0604
         ALR   @11,RLCB                                            0604
         XC    INOPAREA(48,@11),INOPAREA(@11)                      0604
*             RPRF=ADDR(INOPAREA);  /* OVERLAY INOP AREA WITH BUFFER
*                                      STRUCTURE                     */
         LR    RPRF,@11                                            0605
*             PRFPIUO=ADDR(PRFSHDR)-ADDR(PRFSUNIT)-LENGTH(IEDTH)-LENGTH
*                 (IEDRH);          /* SET OFFSET TO TH              */
         LA    @11,17                                              0606
         STC   @11,PRFPIUO(,RPRF)                                  0606
*             RWORK=PRFPIUO+ADDR(PRFPIUO);/* POINT TO THE TH IN THE
*                                      PIU                           */
         LA    RWORK,PRFPIUO(,RPRF)                                0607
         ALR   @11,RWORK                                           0607
         LR    RWORK,@11                                           0607
*             TTHFTYPE=TTHFID1;     /* FORMAT TYPE = FID1            */
         NI    TTHFTYPE(RWORK),B'00011111'                         0608
         OI    TTHFTYPE(RWORK),B'00010000'                         0608
*             TTHBBIU=ON;           /* BEGIN SEGMENT                 */
*             TTHEBIU=ON;           /* END SEGMENT                   */
         OI    TTHBBIU(RWORK),B'00001100'                          0610
*             TTHDAF=SAVTSCPT;      /* SET SSCP MH TNT INDEX         */
         L     @11,AVTSAVTP(,RAVT)                                 0611
         MVC   TTHDAF(2,RWORK),SAVTSCPT(@11)                       0611
*             TTHOAF=LCBTTCIN;      /* 3705 TTE TNT INDEX            */
         LH    @07,LCBTTCIN(,RLCB)                                 0612
         N     @07,@CF02869                                        0612
         STCM  @07,3,TTHOAF(RWORK)                                 0612
*             TTHDCF=DCF;           /* SET DATA COUNT                */
         MVC   TTHDCF(2,RWORK),@CH02768                            0613
*             RWORK=RWORK+LENGTH(IEDTH);/* POINT TO THE RH IN THE PIU*/
         AL    RWORK,@CF02851                                      0614
*             TRHFI=ON;             /* FORMAT INDICATOR              */
*             TRHBC=ON;             /* BEGIN CHAIN                   */
*             TRHEC=ON;             /* END CHAIN                     */
         OI    TRHFI(RWORK),B'00001011'                            0617
*             RWORK=RWORK+LENGTH(IEDRH);/* POINT TO THE RU IN THE PIU*/
         AL    RWORK,@CF00075                                      0618
*             INOPNS=CD1NETS;       /* SET NETWORK SERVICES INDICATOR*/
         MVI   INOPNS(RWORK),X'01'                                 0619
*             INOPPC=CD1CONFS;      /* SET PHYSICAL CONFIGURATION  0620
*                                      INDICATOR                     */
         MVI   INOPPC(RWORK),X'02'                                 0620
*             INOPCMD=CD1INOP;      /* SET INOPERATIVE COMMAND       */
         MVI   INOPCMD(RWORK),X'81'                                0621
*             RFY                                                  0622
*               RPARM RSTD;                                        0622
*             RPARM=LCBTTCIN;       /* GET NCP TNT OFFSET            */
         LR    RPARM,@07                                           0623
*             CALL NAADDR;          /* CALL TNT INDEX TO NETWORK   0624
*                                      ADDRESS CONVERSION ROUTINE  0624
*                                      WITH R1=TNT INDEX. R0, R1, AND
*                                      R15 ARE NOT PRESERVED         */
         L     @15,SAVTTNTX(,@11)                                  0624
         BALR  @14,@15                                             0624
*             RFY                                                  0625
*               RBRANCH RSTD;                                      0625
*             INOPNA=RBRANCH;       /* SET NETWORK ADDR IN RU        */
         STCM  RBRANCH,3,INOPNA(RWORK)                             0626
*             RFY                                                  0627
*              (RPARM,                                             0627
*               RBRANCH) UNRSTD;                                   0627
*             INOPDATA=LINKFAIL;    /* DATA = LINK FAILURE           */
         MVI   INOPDATA(RWORK),X'02'                               0628
*             PRFQCBA=SAVTSSRQ;     /* QUEUE TO SSCP REQUEST HANDLER */
         L     @11,AVTSAVTP(,RAVT)                                 0629
         MVC   PRFQCBA(3,RPRF),SAVTSSRQ+1(@11)                     0629
*             PRFPRI=PRISCPIN;      /* SET PRIORITY                  */
         MVI   PRFPRI(RPRF),X'E5'                                  0630
*             PRFTIC=PRFINTIC;      /* SET INVALID TIC               */
         MVC   PRFTIC(4,RPRF),@CB02288                             0631
*             CALL READYQ;          /* PUT INOP ON TCX READY QUEUE 0632
*                                                            @YM03692*/
         BAL   @14,READYQ                                          0632
*           END;                                                   0633
*       ELSE                                                       0634
*                                                                  0634
*         /***********************************************************/
*         /*                                                         */
*         /* NOT PERMANENT ERROR ON I/O                              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0634
*         DO;                                                      0634
*                                                                  0634
         B     @RC00582                                            0634
@RF00582 DS    0H                                                  0635
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE NEED FOR ERP                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0635
*           IF LCBSTAT1^=DUMPFINL THEN/* IF NOT DUMP FINAL CHANNEL 0635
*                                      PROGRAM THEN          @YM08434*/
         CLI   LCBSTAT1(RLCB),X'FE'                                0635
         BE    @RF00635                                            0635
*             DO;                   /* DETERMINE NEED FOR ERROR    0636
*                                      RECOVERY              @YN08434*/
*               IF(LCBSIOC1=ON×LCBSIOC2=ON)×/* IS CONDITION CODE   0637
*                                      NON-ZERO OR...        @YM02920
*                                                            @YM06897*/
*                   LCBUSUC=ON×     /* ... UNIT CHECK OR ... @YM02920*/
*                   LCBCSPCI=ON×    /* ... PROGRAM-CONTROLLED      0637
*                                      INTERRUPTION OR ...           */
*                   LCBCSIL=ON×     /* ... INCORRECT LENGTH OR ...   */
*                   LCBCSPGC=ON×    /* ... PROGRAM CHECK OR ...      */
*                   LCBCSPTC=ON×    /* ... PROTECTION CHECK OR ...   */
*                   LCBCSCDC=ON×    /* ... CHANNEL DATA CHECK OR ... */
*                   LCBCSCCC=ON×    /* ... CHANNEL CONTROL CHECK OR
*                                      ...                           */
*                   LCBCSICC=ON×    /* ... INTERFACE CONTROL CHECK OR
*                                      ...                           */
*                   LCBCSCHC=ON THEN/* ... CHAINING CHECK SET ?      */
         TM    LCBSIOC1(RLCB),B'00110000'                          0637
         BNZ   @RT00637                                            0637
         TM    LCBUSUC(RLCB),B'00000010'                           0637
         BO    @RT00637                                            0637
         TM    LCBCSPCI(RLCB),B'11111111'                          0637
         BZ    @RF00637                                            0637
@RT00637 DS    0H                                                  0638
*                 DO;               /* YES, DETERMINE IF ERP REQUEST
*                                      IS NEEDED                     */
*                   RCCW=LCBCSWCA-LENGTH(IEDQCCW);/* INTERRUPT CCW 0639
*                                      ADDRESS               @OY20744*/
         L     RCCW,LCBCSWCA-1(,RLCB)                              0639
         LA    RCCW,0(,RCCW)                                       0639
         SL    RCCW,@CF00046                                       0639
*                   IF(LCBUSUC=ON&  /* IF UNIT CHECK..       @OY20744*/
*                       LCBABORT=ON)×/* ..WITH ABORT SENSE(NCP HAS 0640
*                                      ENTERED ANS)          @OY20744*/
*                       (LCBCSIL=ON&/* ..OR INCORRECT LENGTH @OY20744*/
*                       LCBUSUE=ON& /* ..AND UNIT EXCEPTION  @OY20744*/
*                       (CCWOPCDE=CCWWS0×/* ..AND WRITE START 0    0640
*                                                            @OY20744*/
*                       CCWOPCDE=CCWWS1×/* ..OR WRITE START 1      0640
*                                                            @OY20744*/
*                       CCWOPCDE=CCWWRITE×/* ..OR WRITE      @OY20744*/
*                       CCWOPCDE=CCWBRK))/* ..OR WRITE BREAK(NCP IS
*                                      SIGNALLING SLOWDOWN DURING  0640
*                                      CHANNEL DATA CHAINING       0640
*                                      OPERATION)            @OY20744*/
*                     THEN                                         0640
         TM    LCBUSUC(RLCB),B'00000010'                           0640
         BNO   @GL00012                                            0640
         TM    LCBABORT(RLCB),B'00000001'                          0640
         BO    @RT00640                                            0640
@GL00012 TM    LCBCSIL(RLCB),B'01000000'                           0640
         BNO   @RF00640                                            0640
         TM    LCBUSUE(RLCB),B'00000001'                           0640
         BNO   @RF00640                                            0640
         CLI   CCWOPCDE(RCCW),X'31'                                0640
         BE    @RT00640                                            0640
         CLI   CCWOPCDE(RCCW),X'51'                                0640
         BE    @RT00640                                            0640
         CLI   CCWOPCDE(RCCW),X'01'                                0640
         BE    @RT00640                                            0640
         CLI   CCWOPCDE(RCCW),X'09'                                0640
         BNE   @RF00640                                            0640
@RT00640 DS    0H                                                  0641
*                     DO;           /* ..THEN TREAT AS SLOWDOWN TO 0641
*                                      PREVENT WRITES AND CAUSE WAIT
*                                      FOR ATTENTION TO READ 'EXITING
*                                      SLOWDOWN' OR 'ANS COMPLETE' 0641
*                                                            @OY20744*/
*                       TRMSLOWN=ON;/* INDICATE SLOWDOWN STATE     0642
*                                                            @OY20744*/
         LA    @04,TRMSLOWN(,RTRM)                                 0642
         LR    @03,@04                                             0642
         LA    @11,3                                               0642
         NR    @03,@11                                             0642
         LCR   @03,@03                                             0642
         ALR   @04,@03                                             0642
         L     @11,0(,@04)                                         0642
@GL00019 LR    @07,@11                                             0642
         O     @07,@CB02877+3(@03)                                 0642
         CS    @11,@07,0(@04)                                      0642
         BNE   @GL00019                                            0642
*                       LCBRECVN=OFF;/* PREVENT READ BTU PROCESSING
*                                                            @YM06060*/
         NI    LCBRECVN(RLCB),B'11111101'                          0643
*                       IF CCWOPCDE=CCWWS0×/* CHECK FOR WRITE START 0
*                                      ...                           */
*                           CCWOPCDE=CCWWS1×/* ... OR WRITE START 1
*                                      ...                           */
*                           CCWOPCDE=CCWWRITE×/* ... OR WRITE DATA 0644
*                                      ...                           */
*                           CCWOPCDE=CCWBRK THEN/* ... OR WRITE BREAK*/
         CLI   CCWOPCDE(RCCW),X'31'                                0644
         BE    @RT00644                                            0644
         CLI   CCWOPCDE(RCCW),X'51'                                0644
         BE    @RT00644                                            0644
         CLI   CCWOPCDE(RCCW),X'01'                                0644
         BE    @RT00644                                            0644
         CLI   CCWOPCDE(RCCW),X'09'                                0644
         BNE   @RF00644                                            0644
@RT00644 DS    0H                                                  0645
*                         DO;       /* TREAT INTERRUPT ON WRITE AS 0645
*                                      UNIT EXCEPTION(SLOWDOWN)    0645
*                                                            @OY20744*/
*                           LCBUSUC=OFF;/* RESET UNIT CHECK ...      */
*                           LCBUSUE=ON;/* ... AND SET UNIT EXCEPTION */
         OI    LCBUSUE(RLCB),B'00000001'                           0647
         NI    LCBUSUC(RLCB),B'11111101'                           0647
*                         END;                                     0648
*                       ELSE        /* INTERRUPT NOT ON A WRITE    0649
*                                                            @OY20744*/
*                         IF LCBSENDN=ON THEN/* IF WRITE BTU EXISTS
*                                      IGNORE READ BTU AND FORCE   0649
*                                      INTERRUPT TO APPEAR AS IF ON
*                                      NOP IN WRITE BREAK UNIT       */
         B     @RC00644                                            0649
@RF00644 TM    LCBSENDN(RLCB),B'00000001'                          0649
         BNO   @RF00649                                            0649
*                           DO;                                    0650
*                             RPRF=CPAWRTBK;/* POINT TO UNIT WHICH 0651
*                                      TICS TO WRITE BREAK           */
         L     RPRF,CPAWRTBK-1(,RLCB)                              0651
         LA    RPRF,0(,RPRF)                                       0651
*                             RPRF=PRFTI0;/* GET WRITE BREAK UNIT  0652
*                                      ADDRESS                       */
         L     @11,PRFTI0-1(,RPRF)                                 0652
         LA    @11,0(,@11)                                         0652
         LR    RPRF,@11                                            0652
*                             LCBCSWCA=RPRF+2*LENGTH(IEDQCCW);/*   0653
*                                      POINT CSW PAST NOP            */
         LA    @11,16                                              0653
         ALR   @11,RPRF                                            0653
         STCM  @11,7,LCBCSWCA(RLCB)                                0653
*                             LCBUSUC=OFF;/* HANDLE AS NORMAL FROM 0654
*                                      HERE ON                       */
         NI    LCBUSUC(RLCB),B'11111101'                           0654
*                           END;                                   0655
*                         ELSE      /* ELSE NOT SENDING, MUST TREAT
*                                      AS IF READ ENDED NORMALLY BUT
*                                      WITH NO DATA                  */
*                           LCBCSWCA=LCBSTART+LENGTH(IEDQCCW);/*   0656
*                                      TREAT AS INTERRUPT ON READ  0656
*                                      START                         */
         B     @RC00649                                            0656
@RF00649 LA    @11,8                                               0656
         L     @07,LCBSTART-1(,RLCB)                               0656
         LA    @07,0(,@07)                                         0656
         ALR   @11,@07                                             0656
         STCM  @11,7,LCBCSWCA(RLCB)                                0656
*                     END;                                         0657
*                   ELSE            /* ELSE NOT UNIT CHECK ABORT OR
*                                      SLOWDOWN              @OY20744*/
*                     IF LCBSIOC2=ON&LCBSIOC1=OFF&/* IF CSW STORED ON
*                                      NOP                   @XM05727*/
*                         LCBSTART->CCWOPCDE=CCWNOP THEN/*   @OZ26027*/
         B     @RC00640                                            0658
@RF00640 TM    LCBSIOC2(RLCB),B'00010000'                          0658
         BNO   @RF00658                                            0658
         TM    LCBSIOC1(RLCB),B'00100000'                          0658
         BNZ   @RF00658                                            0658
         L     @11,LCBSTART-1(,RLCB)                               0658
         CLI   CCWOPCDE(@11),X'03'                                 0658
         BNE   @RF00658                                            0658
*                       IF LCBOBRCH^=ZERO THEN/* ANY MDR RECORDS   0659
*                                                            @OZ26027*/
         L     @11,LCBOBRCH(,RLCB)                                 0659
         LTR   @11,@11                                             0659
         BZ    @RF00659                                            0659
*                         DO;       /*                       @OZ26027*/
*                           LCBSOHR=ON;/* INDICATE MDR PROCESSING  0661
*                                                            @OZ26027*/
         OI    LCBSOHR(RLCB),B'00100000'                           0661
*                           RSTATE=ERP;/* YES, REQUEST ERP   @OZ26027*/
         LA    RSTATE,4                                            0662
*                         END;      /*                       @OZ26027*/
*                       ELSE                                       0664
*                         ;         /*                       @OZ26027*/
@RF00659 DS    0H                                                  0665
*                     ELSE          /* IT IS NOT CSW STORED ON NOP 0665
*                                                            @XM05727*/
*                       RSTATE=ERP; /* REQUEST EXIT TO ERROR RECOVERY*/
         B     @RC00658                                            0665
@RF00658 LA    RSTATE,4                                            0665
*                 END;                                             0666
*               ELSE                /* NO CSW ERROR BITS SET         */
*                 IF LCBOBRCH^=ZERO THEN/* ANY MDR RECORDS           */
         B     @RC00637                                            0667
@RF00637 L     @11,LCBOBRCH(,RLCB)                                 0667
         LTR   @11,@11                                             0667
         BZ    @RF00667                                            0667
*                   DO;             /*                       @YM03744*/
*                     LCBSOHR=ON;   /* INDICATE MDR PROCESSING     0669
*                                                            @YM03744*/
         OI    LCBSOHR(RLCB),B'00100000'                           0669
*                     RSTATE=ERP;   /* YES, REQUEST ERP              */
         LA    RSTATE,4                                            0670
*                   END;            /*                       @YM03744*/
*             END;                  /*                       @YM08434*/
@RF00667 DS    0H                                                  0672
@RC00637 DS    0H                                                  0673
*           IF RSTATE=ERP           /* IS ERP REQUESTED              */
*                                                                  0673
*           /*********************************************************/
*           /*                                                       */
*           /* ERP IS REQUESTED                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0673
*             THEN                                                 0673
@RF00635 C     RSTATE,@CF00257                                     0673
         BE    @RT00673                                            0673
*             ;                     /* YES, NO PROCESSING            */
*           ELSE                                                   0675
*                                                                  0675
*             /*******************************************************/
*             /*                                                     */
*             /* NO ERP IS REQUESTED                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0675
*             IF TRMIPLDM=ON THEN   /* IS IPL OR DUMP IN PROGRESS    */
*                                                                  0675
         TM    TRMIPLDM(RTRM),B'10000000'                          0675
         BNO   @RF00675                                            0675
*               /*****************************************************/
*               /*                                                   */
*               /* IPL OR DUMP IS IN PROGRESS                        */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0676
*               DO;                 /* YES                           */
*                 LCBQCBA=SAVTFLDH; /* QCB ADDRESS FOR POST  @YM02949*/
         L     @11,AVTSAVTP(,RAVT)                                 0677
         MVC   LCBQCBA(3,RLCB),SAVTFLDH+1(@11)                     0677
*                 LCBPRI=PRIAIPL;   /* AND PRIORITY          @YM02949*/
         MVI   LCBPRI(RLCB),X'DE'                                  0678
*                 RPRF=RLCB;        /* PARAMETER TO POST     @YM02949*/
         LR    RPRF,RLCB                                           0679
*                 CALL READYQ;      /* PUT ELEMENT ON DISABLED READY
*                                      QUEUE                         */
         BAL   @14,READYQ                                          0680
*               END;                                               0681
*             ELSE                                                 0682
*                                                                  0682
*               /*****************************************************/
*               /*                                                   */
*               /* NO IPL OR DUMP IN PROGRESS                        */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0682
*               DO;                                                0682
*                                                                  0682
         B     @RC00675                                            0682
@RF00675 DS    0H                                                  0683
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET SLOWDOWN IF UNIT EXCEPTION ON A WRITE       */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0683
*                 RCCW=LCBCSWCA-LENGTH(IEDQCCW);/* POINT TO        0683
*                                      INTERRUPTED CCW               */
         L     RCCW,LCBCSWCA-1(,RLCB)                              0683
         LA    RCCW,0(,RCCW)                                       0683
         SL    RCCW,@CF00046                                       0683
*                 IF LCBUSUE=ON THEN/* UNIT EXCEPTION SET            */
         TM    LCBUSUE(RLCB),B'00000001'                           0684
         BNO   @RF00684                                            0684
*                   IF CCWOPCDE=CCWWS0×/* YES, IS THIS               */
*                       CCWOPCDE=CCWWS1×/* ... A                     */
*                       CCWOPCDE=CCWWRITE×/* ... WRITE               */
*                       CCWOPCDE=CCWBRK THEN/* ... OPERATION         */
         CLI   CCWOPCDE(RCCW),X'31'                                0685
         BE    @RT00685                                            0685
         CLI   CCWOPCDE(RCCW),X'51'                                0685
         BE    @RT00685                                            0685
         CLI   CCWOPCDE(RCCW),X'01'                                0685
         BE    @RT00685                                            0685
         CLI   CCWOPCDE(RCCW),X'09'                                0685
         BNE   @RF00685                                            0685
@RT00685 DS    0H                                                  0686
*                     DO;           /*                       @YM06060*/
*                       TRMSLOWN=ON;/* YES ,SET SLOWDOWN             */
         LA    @04,TRMSLOWN(,RTRM)                                 0687
         LR    @03,@04                                             0687
         LA    @11,3                                               0687
         NR    @03,@11                                             0687
         LCR   @03,@03                                             0687
         ALR   @04,@03                                             0687
         L     @11,0(,@04)                                         0687
@GL00027 LR    @07,@11                                             0687
         O     @07,@CB02877+3(@03)                                 0687
         CS    @11,@07,0(@04)                                      0687
         BNE   @GL00027                                            0687
*                       LCBRECVN=OFF;/* PREVENT READ BTU PROCESSING
*                                                            @YM06060*/
*                                                                  0688
         NI    LCBRECVN(RLCB),B'11111101'                          0688
*                       /*********************************************/
*                       /*                                           */
*                       /* FORCE ATTENTION - NCP MUST BE READ BEFORE */
*                       /* IT WILL BE ABLE TO RECEIVE THE ACTPU      */
*                       /* REQUEST                           @XM05839*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0689
*                       RFY                                        0689
*                        (REG7,                                    0689
*                         REG11) RSTD;/*                     @XM05839*/
*                       GEN REFS(LCBBFRAV,CSMASK2,CSMASK3) SETS(REG7,
*                           REG11,LCBBFRAV);                       0690
         L     REG11,LCBBFRAV-3(,RLCB)   WORD CONTAINING BITS @XM05839
CSLOOP5  EQU   *                                              @XM05839
         LR    REG7,REG11                PREPARE WORK REG     @XM05839
         O     REG7,CSMASK2              TURN ON  LCBATTN     @XM05839
         O     REG7,CSMASK3              TURN ON LCBBFRAV     @XM05839
         CS    REG11,REG7,LCBBFRAV-3(RLCB) TURN ON IN LCB     @XM05839
         BNE   CSLOOP5                   DID NOT WORK         @XM05839
*                       RFY                                        0691
*                        (REG7,                                    0691
*                         REG11) UNRSTD;/*                   @XM05839*/
*                     END;          /*                       @YM06060*/
*                 IF LCBSENDN=ON THEN/* IS 'SENDING' SET             */
*                                                                  0693
@RF00685 DS    0H                                                  0693
@RF00684 TM    LCBSENDN(RLCB),B'00000001'                          0693
         BNO   @RF00693                                            0693
*                   /*************************************************/
*                   /*                                               */
*                   /* SENDING - THEN REBUILD THE WRITE BREAK. RPRF  */
*                   /* IS INITIALIZED FOR LATER REFERENCE TO POINT TO*/
*                   /* THE UNIT THAT CONTAINS THE WRITE BREAK CCW IN */
*                   /* ITS PREFIX.                                   */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0694
*                   DO;             /* YES                           */
*                     IF CCWOPCDE=CCWWS0×/* DO NOT FLIP WRITE START
*                                                            @YM09094*/
*                         CCWOPCDE=CCWWS1 THEN                     0695
         CLI   CCWOPCDE(RCCW),X'31'                                0695
         BE    @RT00695                                            0695
         CLI   CCWOPCDE(RCCW),X'51'                                0695
         BE    @RT00695                                            0695
*                       ;           /* CODE IF INTERRUPT ON WRITE  0696
*                                      START                 @YM09094*/
*                     ELSE          /*                       @YM09094*/
*                       CPAWRTS=CPAWRTS&&FLIP;/* CHANGE THE WRITE  0697
*                                      START VALUE                   */
         XI    CPAWRTS(RLCB),X'60'                                 0697
*                     RPRF=CPAWRTBK;/* GET ADDR OF THE UNIT THAT   0698
*                                      POINTS TO THE WRITE BREAK UNIT*/
@RT00695 L     RPRF,CPAWRTBK-1(,RLCB)                              0698
         LA    RPRF,0(,RPRF)                                       0698
*                     RWORK=PRFTI0; /* GET ADDR OF PREFIX OF WRITE 0699
*                                      BREAK UNIT                    */
         L     @07,PRFTI0-1(,RPRF)                                 0699
         LA    @07,0(,@07)                                         0699
         LR    RWORK,@07                                           0699
*                     PRFTI0=PRFTI0+LENGTH(IEDQCCW);/* UPDATE THE  0700
*                                      ADDR TO POINT TO THE UNIT   0700
*                                      ITSELF                        */
         AL    @07,@CF00046                                        0700
         STCM  @07,7,PRFTI0(RPRF)                                  0700
*                     RPRF=PRFTI0;  /* POINT TO THE WRITE BREAK UNIT */
         LR    RPRF,@07                                            0701
*                     RPRF->CCW=RWORK->CCW;/* MOVE WRITE BREAK CCW 0702
*                                      INTO THE UNIT                 */
         MVC   CCW(8,RPRF),CCW(RWORK)                              0702
*                     PRFTIC=PRFINTIC;/* MAKE TIC ADDR INVALID       */
         MVC   PRFTIC(4,RPRF),@CB02288                             0703
*                     LCBFSBFR=CPAWRTBF;/* SET FIRST WRITE BUFFER  0704
*                                                            @YM03709*/
         MVC   LCBFSBFR(3,RLCB),CPAWRTBF(RLCB)                     0704
*                   END;                                           0705
*                 IF LCBRECVN=ON THEN/* IS 'RECEIVING' SET           */
*                                                                  0706
@RF00693 TM    LCBRECVN(RLCB),B'00000010'                          0706
         BNO   @RF00706                                            0706
*                   /*************************************************/
*                   /*                                               */
*                   /* RECEIVING IS SET                              */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0707
*                   DO;             /* YES                           */
*                     IF(LCBUSUC=ON&/* CHECK FOR UNIT CHECK        0708
*                                      ...@ZM46688                   */
*                         LCBABORT=ON) THEN/* .. WITH SENSE OF ABORT
*                                                            @ZM46688*/
         TM    LCBUSUC(RLCB),B'00000010'                           0708
         BNO   @RF00708                                            0708
         TM    LCBABORT(RLCB),B'00000001'                          0708
         BNO   @RF00708                                            0708
*                       DO;         /* NCP IS IN ANS         @ZM46688*/
*                         RFY                                      0710
*                          (REG7,                                  0710
*                           REG11) RSTD;/* RESTRICT REGISTERS FOR CS
*                                      LOOP                  @YM04622*/
*                         GEN REFS(LCBBFRAV,CSMASK3) SETS(REG7,REG11,
*                             LCBBFRAV);                           0711
*                                                     /* @YM04622*/
         L     REG11,LCBBFRAV-3(,RLCB)  WORD CONTAINS LCBBFRAV @YM04622
CSLOOP4  EQU   *                                               @YM04622
         LR    REG7,REG11               COPY WORD TO UPDATE    @YM04622
         O     REG7,CSMASK3             SET LCBBFRAV           @YM04622
         CS    REG11,REG7,LCBBFRAV-3(RLCB) CS LCBBFRAV         @YM04622
         BNE   CSLOOP4                  LOOP IF CS FAILED      @YM04622
*                         RFY                                      0712
*                          (REG7,                                  0712
*                           REG11) UNRSTD;/*                 @YM04622*/
*                         LCBTSTSW=ZERO;/* FREE LCB FOR I/O          */
         MVI   LCBTSTSW(RLCB),X'00'                                0713
*                       END;                                       0714
*                     ELSE          /* CHEK FOR NULL READ    @ZM47776*/
*                       IF CCWOPCDE=CCWRS0×CCWOPCDE=CCWRS1 THEN/*  0715
*                                      NULL READ             @ZM47776*/
         B     @RC00708                                            0715
@RF00708 CLI   CCWOPCDE(RCCW),X'32'                                0715
         BE    @RT00715                                            0715
         CLI   CCWOPCDE(RCCW),X'52'                                0715
         BNE   @RF00715                                            0715
@RT00715 DS    0H                                                  0716
*                         DO;                                      0716
*                           RFY                                    0717
*                            (REG7,                                0717
*                             REG11) RSTD;/* RESTRICT FOR COMP SWAP
*                                                            @ZM47776*/
*                           GEN REFS(LCBBFRAV,CSMASK3,CSMASK4,CSMASK5)
*                               SETS(REG7,REG11,LCBBFRAV);         0718
*               /* @ZM47776*/
         L     REG11,LCBBFRAV-3(RLCB)   WORD CONTAINS BITS     @ZM47776
CSLOOP6  LR    REG7,REG11               COPY WORD TO UPDATE    @ZM47776
         O     REG7,CSMASK3             SET LCBBFRAV           @ZM47776
         O     REG7,CSMASK5             SET LCBFREEN           @ZM47776
         N     REG7,CSMASK4             TURN OFF LCBRECVN      @ZM47776
         CS    REG11,REG7,LCBBFRAV-3(RLCB) CS LCBBFRAV         @ZM47776
         BNE   CSLOOP6                  TRY AGAIN              @ZM47776
*                           RFY                                    0719
*                            (REG7,                                0719
*                             REG11) UNRSTD;/*               @ZM47776*/
*                           LCBTSTSW=ZERO;/* FREE LCB FOR I/O      0720
*                                                            @ZM47776*/
         MVI   LCBTSTSW(RLCB),X'00'                                0720
*                         END;      /* END NULL READ         @ZM47776*/
*                       ELSE        /* NORMAL PROCESSING     @ZM47776*/
*                         IF LCBSENDN=ON&/* IS 'SENDING' SET AND ... */
*                             RCCW=RPRF THEN/* ... WAS INTERRUPT ON
*                                      NO-OP IN WRITE BREAK          */
*                                                                  0722
         B     @RC00715                                            0722
@RF00715 TM    LCBSENDN(RLCB),B'00000001'                          0722
         BNO   @RF00722                                            0722
         CR    RCCW,RPRF                                           0722
         BNE   @RF00722                                            0722
*                           /*****************************************/
*                           /*                                       */
*                           /* INTERRUPT WAS ON THE NO-OP OF THE     */
*                           /* WRITE BREAK UNIT. IN THE 'REBUILD     */
*                           /* WRITE BREAK' CODE, RPRF WAS SET TO    */
*                           /* POINT TO THE UNIT THAT CONTAINS THE   */
*                           /* WRITE BREAK CCW.                      */
*                           /*                                       */
*                           /*****************************************/
*                                                                  0723
*                           DO;     /*                       @YM04622*/
*                             RFY                                  0724
*                              (REG7,                              0724
*                               REG11) RSTD;/* RESTRICT REGISTERS FOR
*                                      CS LOOP               @YM04622*/
*                             GEN REFS(LCBBFRAV,CSMASK3) SETS(REG7,
*                                 REG11,LCBBFRAV);                 0725
*                                                     /* @YM04622*/
         L     REG11,LCBBFRAV-3(,RLCB)  WORD CONTAINS LCBBFRAV @YM04622
CSLOOP3  EQU   *                                               @YM04622
         LR    REG7,REG11               COPY WORD TO UPDATE    @YM04622
         O     REG7,CSMASK3             SET LCBBFRAV           @YM04622
         CS    REG11,REG7,LCBBFRAV-3(RLCB) CS LCBBFRAV         @YM04622
         BNE   CSLOOP3                  LOOP IF CS FAILED      @YM04622
*                             RFY                                  0726
*                              (REG7,                              0726
*                               REG11) UNRSTD;/*             @YM04622*/
*                           END;    /*                       @YM04622*/
*                         ELSE                                     0728
*                                                                  0728
*                           /*****************************************/
*                           /*                                       */
*                           /* INTERRUPT NOT ON WRITE BREAK NO-OP    */
*                           /*                                       */
*                           /*****************************************/
*                                                                  0728
*                           DO;                                    0728
         B     @RC00722                                            0728
@RF00722 DS    0H                                                  0729
*                             IF CCWCOUNT=LCBCSWRC&/* DOES ORIGINAL
*                                      COUNT IN CCW EQUAL THE      0729
*                                      RESIDUAL COUNT IN THE CSW ... */
*                                 CCWOPCDE=CCWREAD THEN/* ... FOR A
*                                      READ CCW                      */
*                                                                  0729
         LH    @11,LCBCSWRC(,RLCB)                                 0729
         N     @11,@CF02869                                        0729
         ICM   @07,12,CCWCOUNT(RCCW)                               0729
         SRA   @07,16                                              0729
         CR    @11,@07                                             0729
         BNE   @RF00729                                            0729
         CLI   CCWOPCDE(RCCW),X'02'                                0729
         BNE   @RF00729                                            0729
*                               /*************************************/
*                               /*                                   */
*                               /* INTERRUPTED READ CCW CONTAINS NO  */
*                               /* DATA. UPDATE CSW SO THAT PREVIOUS */
*                               /* READ APPEARS TO BE INTERRUPTED    */
*                               /* CCW.                              */
*                               /*                                   */
*                               /*************************************/
*                                                                  0730
*                               DO; /* YES                           */
*                                 RWORK=CPARDU;/* GET ADDRESS OF 1ST
*                                      READ                          */
         L     RWORK,CPARDU-1(,RLCB)                               0731
         LA    RWORK,0(,RWORK)                                     0731
*                                 DO UNTIL LCBCSWRC=ZERO;/* LOOP   0732
*                                      THROUGH READS UNTIL CCW THAT
*                                      PRECEEDS THE INTERRUPTED ONE
*                                      IS FOUND                      */
@DL00732 DS    0H                                                  0733
*                                   IF RCCW=RWORK->PRFTI0 THEN/* DOES
*                                      THIS UNIT TIC TO THE        0733
*                                      INTERRUPTED CCW               */
         L     @11,PRFTI0-1(,RWORK)                                0733
         LA    @11,0(,@11)                                         0733
         CR    RCCW,@11                                            0733
         BNE   @RF00733                                            0733
*                                    DO;/* YES                       */
*                                     LCBCSWCA=RWORK+LENGTH(IEDQCCW);
         LA    @11,8                                               0735
         ALR   @11,RWORK                                           0735
         STCM  @11,7,LCBCSWCA(RLCB)                                0735
*                                     /* UPDATE CSW TO POINT TO CCW
*                                      AFTER LAST EXECUTED READ CCW  */
*                                     RCCW=RWORK;/* SAVE NEW       0736
*                                      INTERRUPTED CCW ADDRESS       */
         LR    RCCW,RWORK                                          0736
*                                     LCBCSWRC=ZERO;/* CLEAR RESIDUAL
*                                      COUNT                         */
         SLR   @11,@11                                             0737
         STH   @11,LCBCSWRC(,RLCB)                                 0737
*                                    END;                          0738
*                                   ELSE                           0739
*                                    RWORK=RWORK->PRFTI0;/* POINT TO
*                                      NEXT UNIT                     */
         B     @RC00733                                            0739
@RF00733 L     @11,PRFTI0-1(,RWORK)                                0739
         LA    @11,0(,@11)                                         0739
         LR    RWORK,@11                                           0739
*                                 END;                             0740
@RC00733 DS    0H                                                  0740
@DE00732 LH    @11,LCBCSWRC(,RLCB)                                 0740
         N     @11,@CF02869                                        0740
         LTR   @11,@11                                             0740
         BNZ   @DL00732                                            0740
*                               END;                               0741
*                             CPARDS=CPARDS&&FLIP;/* CHANGE THE READ
*                                      START VALUE                   */
@RF00729 XI    CPARDS(RLCB),X'60'                                  0742
*                             IF LCBSENDN=ON THEN/* IS 'SENDING' SET */
*                                                                  0743
         TM    LCBSENDN(RLCB),B'00000001'                          0743
         BNO   @RF00743                                            0743
*                               /*************************************/
*                               /*                                   */
*                               /* 'SENDING' IS SET. IN THE 'REBUILD */
*                               /* WRITE BREAK' CODE, RPRF WAS SET TO*/
*                               /* POINT TO THE UNIT THAT CONTAINS   */
*                               /* THE WRITE BREAK CCW.              */
*                               /*                                   */
*                               /*************************************/
*                                                                  0744
*                               PRFTI0=CPARDU;/* TIC THE WRITE BREAK
*                                      UNIT TO THE 1ST READ UNIT     */
         MVC   PRFTI0(3,RPRF),CPARDU(RLCB)                         0744
*                             ELSE                                 0745
*                                                                  0745
*                               /*************************************/
*                               /*                                   */
*                               /* 'SENDING' IS NOT SET              */
*                               /*                                   */
*                               /*************************************/
*                                                                  0745
*                               LCBFSBFR=CPARDU;/* POINT TO FIRST  0745
*                                      READ UNIT                     */
         B     @RC00743                                            0745
@RF00743 MVC   LCBFSBFR(3,RLCB),CPARDU(RLCB)                       0745
*                             IF CCWOPCDE=CCWREAD THEN/* WAS       0746
*                                      INTERRUPTED CCW A READ        */
@RC00743 CLI   CCWOPCDE(RCCW),X'02'                                0746
         BNE   @RF00746                                            0746
*                               DO; /* YES                           */
*                                 LCBRDBFR=RCCW->PRFTI0;/* SAVE NEXT
*                                      AVAILABLE READ UNIT           */
         MVC   LCBRDBFR(3,RLCB),PRFTI0(RCCW)                       0748
*                                 RCCW->PRFTIC=PRFINTIC;/* SET     0749
*                                      INVALID TIC                   */
         MVC   PRFTIC(4,RCCW),@CB02288                             0749
*                                 IF TRMINPG=ON THEN/* ARE WE IN   0750
*                                      ACTIVATE/DEACT PROCESS      0750
*                                                            @ZM47844*/
         TM    TRMINPG(RTRM),B'00100000'                           0750
         BNO   @RF00750                                            0750
*                                   TRMSLOWN=OFF;/* TURN OFF SLOWDOWN
*                                      IF ON                 @ZM47844*/
         LA    @04,TRMSLOWN(,RTRM)                                 0751
         LR    @03,@04                                             0751
         LA    @11,3                                               0751
         NR    @03,@11                                             0751
         LCR   @03,@03                                             0751
         ALR   @04,@03                                             0751
         L     @11,0(,@04)                                         0751
@GL00033 LR    @07,@11                                             0751
         N     @07,@CB02883+3(@03)                                 0751
         CS    @11,@07,0(@04)                                      0751
         BNE   @GL00033                                            0751
*                                 ELSE                             0752
*                                   ;/* LEAVE SLOWDOWN ALONE @ZM47844*/
@RF00750 DS    0H                                                  0753
*                               END;                               0753
*                             ELSE  /*                       @YM03710*/
*                               DO; /*                       @YM03710*/
         B     @RC00746                                            0754
@RF00746 DS    0H                                                  0755
*                                 RWORK=LCBRDBFR;/* GET ADDR OF 1ST
*                                      READ UNIT             @YM03710*/
         L     RWORK,LCBRDBFR-1(,RLCB)                             0755
         LA    RWORK,0(,RWORK)                                     0755
*                                 DO UNTIL RWORK->PRFTI0=ADDR(CPARNOOP)
*                                       ;/* SCAN READ CHAIN UNTIL  0756
*                                      LAST UNIT IS FOUND            */
@DL00756 DS    0H                                                  0757
*                                   RWORK=RWORK->PRFTI0;/* GET ADDR
*                                      OF NEXT UNIT                  */
         L     @11,PRFTI0-1(,RWORK)                                0757
         LA    @11,0(,@11)                                         0757
         LR    RWORK,@11                                           0757
*                                 END;                             0758
@DE00756 LA    @11,CPARNOOP(,RLCB)                                 0758
         L     @07,PRFTI0-1(,RWORK)                                0758
         LA    @07,0(,@07)                                         0758
         CR    @11,@07                                             0758
         BNE   @DL00756                                            0758
*                                 RWORK->PRFTIC=PRFINTIC;/* END THE
*                                      READ CHAIN WITH AN INVALID TIC*/
         MVC   PRFTIC(4,RWORK),@CB02288                            0759
*                                 LCBRDBFR=ADDR(CPARNOOP);/* POINT 0760
*                                      START OF READ CHANNEL PROGRAM
*                                      TO THE NO-OP CCW              */
         STCM  @11,7,LCBRDBFR(RLCB)                                0760
*                               END;                               0761
*                           END;                                   0762
*                   END;            /*                       @YM03694*/
*                 ELSE                                             0764
*                                                                  0764
*                   /*************************************************/
*                   /*                                               */
*                   /* RECEIVING WAS NOT SET                         */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0764
*                   IF RCCW=ADDR(CPAWNOOP) THEN/* WAS STATUS MODIFIER
*                                      RECEIVED                      */
         B     @RC00706                                            0764
@RF00706 LA    @11,CPAWNOOP(,RLCB)                                 0764
         CR    RCCW,@11                                            0764
         BNE   @RF00764                                            0764
*                     DO;           /*                       @YM04622*/
*                       RFY                                        0766
*                        (REG7,                                    0766
*                         REG11) RSTD;/* RESTRICT REGISTERS FOR CS 0766
*                                      LOOP                  @YM04622*/
*                       GEN REFS(LCBATTN,CSMASK2) SETS(REG7,REG11, 0767
*                           LCBATTN);                              0767
*                                                   /* @YM04622*/
         L     REG11,LCBATTN-3(,RLCB)   WORD CONTAINS LCBATTN  @YM04622
CSLOOP2  EQU   *                                               @YM04622
         LR    REG7,REG11               COPY WORD TO UPDATE    @YM04622
         O     REG7,CSMASK2             SET LCBATTN            @YM04622
         CS    REG11,REG7,LCBATTN-3(RLCB) CS LCBATTN           @YM04622
         BNE   CSLOOP2                  LOOP IF CS FAILED      @YM04622
*                       RFY                                        0768
*                        (REG7,                                    0768
*                         REG11) UNRSTD;/*                   @YM04622*/
*                     END;          /*                       @YM04622*/
*                                                                  0770
*                 /***************************************************/
*                 /*                                                 */
*                 /* POST BTU TO FLDH                                */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0770
*                 IF LCBFSBFR^=ZERO THEN/* CHECK FOR BTU TO POST     */
@RF00764 DS    0H                                                  0770
@RC00706 L     @11,LCBFSBFR-1(,RLCB)                               0770
         LA    @11,0(,@11)                                         0770
         LTR   @11,@11                                             0770
         BZ    @RF00770                                            0770
*                   DO;                                            0771
*                     RPRF=LCBFSBFR;/* GET ADDR OF BTU               */
         LR    RPRF,@11                                            0772
*                     RCCW=RPRF-LENGTH(IEDQCCW);/* POINT TO NEGATIVE
*                                      PREFIX OF UNIT CONTAINING THE
*                                      BTU                           */
         LR    @11,RPRF                                            0773
         SL    @11,@CF00046                                        0773
         LR    RCCW,@11                                            0773
*                     IEDQCCW=RPRF->IEDQCCW;/* MOVE THE CCW OF THE 0774
*                                      1ST UNIT TO THE NEGATIVE    0774
*                                      PREFIX                        */
         MVC   IEDQCCW(8,RCCW),IEDQCCW(RPRF)                       0774
*                     PRFQCBA=SAVTFLDH;/* QUEUE FOR FLDH             */
         L     @07,AVTSAVTP(,RAVT)                                 0775
         MVC   PRFQCBA(3,RPRF),SAVTFLDH+1(@07)                     0775
*                     PRFPRI=PRIFLDH;/* SET PRIORITY                 */
         MVI   PRFPRI(RPRF),X'E4'                                  0776
*                     PRF1WD2=RLCB; /* SAVE 3705 LCB ADDR    @OZ26333*/
         ST    RLCB,PRF1WD2(,@11)                                  0777
*                     CALL READYQ;  /* PUT ELEMENT ON DISABLED READY
*                                      QUEUE                         */
         BAL   @14,READYQ                                          0778
*                   END;                                           0779
*               END;                /* END OF 'NOT A SENSE'          */
@RF00770 DS    0H                                                  0781
*         END;                      /* END OF 'NO IPL OR DUMP IN   0781
*                                      PROGRESS'                     */
@RC00675 DS    0H                                                  0781
@RT00673 DS    0H                                                  0782
*     END;                          /* END OF 'NOT PERMANENT ERROR ON
*                                      I/O'                          */
@RC00582 DS    0H                                                  0783
*   RFY                                                            0783
*    (RCCW,                                                        0783
*     RPRF,                                                        0783
*     RWORK) UNRSTD;                                               0783
@RC00568 DS    0H                                                  0784
*                                                                  0784
*   /*****************************************************************/
*   /*                                                               */
*   /* POST THE MCP IF REQUESTED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0784
*   IF RSTATE=MCPPOST THEN          /* IS MCP POST REQUESTED         */
         C     RSTATE,@CF00046                                     0784
         BNE   @RF00784                                            0784
*     DO;                           /* POST MCP'S ECB IF NEEDED      */
*       RFY                                                        0786
*         RECB RSTD;                                               0786
*       RECB=ADDR(AVTOSECB);        /* GET ADDR OF MCP'S ECB         */
         LA    RECB,AVTOSECB(,RAVT)                                0787
*       IF ECBWAIT=ON THEN          /* TCAM WAITING          @OZ26735*/
         TM    ECBWAIT(RECB),B'10000000'                           0788
         BNO   @RF00788                                            0788
*         CALL POSTECB;             /* YES, POST THE ECB             */
         BAL   @14,POSTECB                                         0789
*       ELSE                                                       0790
*         DO;                       /*                       @OZ27465*/
         B     @RC00788                                            0790
@RF00788 DS    0H                                                  0791
*           RECB=AVTOSECB;          /* LOAD ECB              @OZ29080*/
         L     RECB,AVTOSECB(,RAVT)                                0791
*           REG4='40000000'X;       /* POST BIT FOR C&S      @OZ27465*/
         L     REG4,@CF02827                                       0792
*           CS(RECB,REG4,AVTOSECB); /* POST ECB VIA C&S      @OZ27465*/
         CS    RECB,@04,AVTOSECB(RAVT)                             0793
*           BC(8,NOPOST);           /* C&S GOOD,NO POST      @OZ27465*/
         BC    8,NOPOST                                            0794
*           RECB=ADDR(AVTOSECB);    /* LOAD ADDRESS ECB      @OZ29080*/
         LA    RECB,AVTOSECB(,RAVT)                                0795
*           CALL POSTECB;           /* POST ECB              @OZ27465*/
         BAL   @14,POSTECB                                         0796
*NOPOST:                            /*                       @OZ27465*/
*         END;                      /*                       @OZ27465*/
NOPOST   DS    0H                                                  0798
*       RFY                                                        0798
*         RECB UNRSTD;                                             0798
@RC00788 DS    0H                                                  0799
*     END;                                                         0799
*                                                                  0800
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT CODE                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0800
*   RFY                                                            0800
*     RRETURN RSTD;                                                0800
@RF00784 DS    0H                                                  0801
*   IOSTSLL=ON;                     /* DONT WANT LOCK FOR TERM     0801
*                                      ROUTINE               @ZM46596*/
         L     @15,IOSBPTR-1(,RLCB)                                0801
         LA    @15,0(,@15)                                         0801
         OI    IOSTSLL(@15),B'00000100'                            0801
*   IOSOPT2=OFF;                    /* CLEAR OPT2 BYTE       @ZM46596*/
         MVI   IOSOPT2(@15),B'00000000'                            0802
*   IF RSTATE=ERP THEN              /* IS ERP REQUESTED              */
         C     RSTATE,@CF00257                                     0803
         BNE   @RF00803                                            0803
*     IOSEX=ON;                     /* YES, SET EXCEPTION FLAG     0804
*                                                            @G36XRIB*/
         OI    IOSEX(@15),B'00000100'                              0804
*   ELSE                            /* NO ERP REQUESTED              */
*     IOSEX=OFF;                    /* CLEAR EXCEPTION FLAG IF ON  0805
*                                                            @ZM46596*/
         B     @RC00803                                            0805
@RF00803 L     @15,IOSBPTR-1(,RLCB)                                0805
         NI    IOSEX(@15),B'11111011'                              0805
         SPACE 1
*   LM(REG0,RBRANCH,SIOSAVE);       /* REST REGS SAVED FOR IOS     0806
*                                                            @ZM47611*/
@RC00803 LM    REG0,RBRANCH,SIOSAVE                                0806
*   RFY                                                            0807
*     RRETURN UNRSTD;                                              0807
*                                                                  0808
*   /*****************************************************************/
*   /*                                                               */
*   /* INTENTIONAL PROGRAM CHECK DUE TO ERROR RETURN FROM REAL TO    */
*   /* VIRTUAL ADDRESS TRANSLATION ROUTINE.                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0808
*CONVERR:                                                          0808
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0808
@EL00001 DS    0H                                                  0808
@EF00001 DS    0H                                                  0808
@ER00001 BR    @14                                                 0808
CONVERR  DS    0H                                                  0809
*   GEN NOREFS NOSETS NOEXIT SEQFLOW;                              0809
         DC    H'0'
*   END CONVERR;                                                   0810
@EL00002 DS    0H                                                  0810
@EF00002 DS    0H                                                  0810
@ER00002 BR    @14                                                 0810
*                                                                  0811
*   /*****************************************************************/
*   /*                                                               */
*   /* USE BRANCH ENTRY POINT OF SYSTEM POST TO POST THE ECB         */
*   /* ADDRESSED BY RECB.                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0811
*POSTECB:                                                          0811
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0811
POSTECB  DS    0H                                                  0812
*   RFY                                                            0812
*    (REG3,                                                        0812
*     RECB,                                                        0812
*     RTCB,                                                        0812
*     RRETURN,                                                     0812
*     REG4,                                                        0812
*     REG7,                                                        0812
*     RWORK) RSTD;                  /*                       @G36XRIB*/
*   REG4=RRETURN;                   /* SAVE RETURN ADDRESS           */
         LR    REG4,RRETURN                                        0813
*   REG7=RAVT;                      /* SAVE AVT ADDR ACROSS CALL   0814
*                                                            @YM02922*/
         LR    REG7,RAVT                                           0814
*   REG3=RBASE;                     /* SAVE BASE REGISTER            */
         LR    REG3,RBASE                                          0815
*   RFY                                                            0816
*     RRETURN UNRSTD;                                              0816
*                                                                  0816
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL BRANCH ENTRY POINT OF POST WITH FOLLOWING INPUT -        */
*   /* REG11=ADDR OF ECB, REG10=COMPLETION CODE, R14=RETURN ADDR, AND*/
*   /* REG15=ADDR OF POST ROUTINE.                           @G36XRIB*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0817
*   RWORK=0;                        /* 0 COMPLETION CODE IN REG 10 0817
*                                                            @G36XRIB*/
         SLR   RWORK,RWORK                                         0817
*   CALL POST;                      /* BRANCH TO SYSTEM POST         */
         L     @06,CVTPTR                                          0818
         L     @15,CVT0PT01(,@06)                                  0818
         BALR  @14,@15                                             0818
*   RBASE=REG3;                     /* RESTORE BASE ADDRESS          */
         LR    RBASE,REG3                                          0819
*   RFY                                                            0820
*     RRETURN RSTD;                                                0820
*   RRETURN=REG4;                   /* RESTORE RETURN ADDRESS        */
         LR    RRETURN,REG4                                        0821
*   RAVT=REG7;                      /* RESTORE AVT ADDRESS   @YM02922*/
         LR    RAVT,REG7                                           0822
*   RFY                                                            0823
*    (REG3,                                                        0823
*     RECB,                                                        0823
*     RTCB,                                                        0823
*     RRETURN,                                                     0823
*     REG4,                                                        0823
*     REG7,                                                        0823
*     RWORK) UNRSTD;                /*                       @G36XRIB*/
*   END POSTECB;                                                   0824
@EL00003 DS    0H                                                  0824
@EF00003 DS    0H                                                  0824
@ER00003 BR    @14                                                 0824
*                                                                  0825
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE TO PLACE ELEMENT ON ASYNCHRONOUS READY QUEUE. RPRF */
*   /* CONTAINS THE ADDRESS OF THE ELEMENT. RWORK AND RBRANCH ARE    */
*   /* USED AS WORK REGISTERS.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0825
*READYQ:                                                           0825
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0825
READYQ   DS    0H                                                  0826
*   DCL                                                            0826
*     TRYAGAIN LABEL;               /* LABEL NEEDED FOR CS ON      0826
*                                      TCXREADY                      */
*   RFY                                                            0827
*    (RRETURN,                                                     0827
*     RPRF,                                                        0827
*     RWORK,                                                       0827
*     RBRANCH) RSTD;                                               0827
*   RFY                                                            0828
*     IEDQTCXD BASED(RBRANCH);      /* CHANGE BASE FOR TCX           */
*   RBRANCH=CVTAQAVT;               /* GET TCX ADDRESS               */
         L     @11,CVTPTR                                          0829
         L     RBRANCH,CVTAQAVT(,@11)                              0829
*   RWORK=TCXREADY;                 /* GET TOP ELEMENT ON          0830
*                                      ASYNCHRONOUS READY QUEUE      */
         L     RWORK,TCXREADY(,RBRANCH)                            0830
*TRYAGAIN:                                                         0831
*   PRFLINK=RWORK;                  /* LINK ELEMENT TO 1ST ON READY
*                                      QUEUE                         */
TRYAGAIN STCM  RWORK,7,PRFLINK(RPRF)                               0831
*   CS(RWORK,RPRF,TCXREADY);        /* PUT ELEMENT AS TOP ON READY 0832
*                                      QUEUE                         */
         CS    RWORK,@06,TCXREADY(RBRANCH)                         0832
*   BC(NE,TRYAGAIN);                /* IF QUEUE WAS UPDATED        0833
*                                      ASYNCHRONOUSLY, THEN TRY AGAIN*/
         BC    7,TRYAGAIN                                          0833
*   RSTATE=MCPPOST;                 /* REQUEST MCP POST              */
         LA    RSTATE,8                                            0834
*   RFY                                                            0835
*     IEDQTCXD BASED(TCXPTR);       /* RESET BASE FOR TCX            */
*   RFY                                                            0836
*    (RRETURN,                                                     0836
*     RPRF,                                                        0836
*     RWORK,                                                       0836
*     RBRANCH) UNRSTD;                                             0836
*   END READYQ;                                                    0837
@EL00004 DS    0H                                                  0837
@EF00004 DS    0H                                                  0837
@ER00004 BR    @14                                                 0837
*                                                                  0838
*   /*****************************************************************/
*   /*                                                               */
*   /* SECONDARY ENTRY POINT - SIO APPENDAGE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0838
*SIOAPNDG:                                                         0838
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0838
SIOAPNDG DS    0H                                                  0839
*   GEN NOEXIT NOFLOWS SEQFLOW NOREFS NOSETS;                      0839
         USING SIOAPNDG,RBRANCH         SIOAPNDG ADDRESSABILITY
*   RFY                                                            0840
*    (REG0,                                                        0840
*     RPARM,                                                       0840
*     RLCB,                                                        0840
*     REG3,                                                        0840
*     REG4,                                                        0840
*     RCCW,                                                        0840
*     RPRF,                                                        0840
*     REG7,                                                        0840
*     RTRM) RSTD;                                                  0840
*   RFY                                                            0841
*    (REG9,                                                        0841
*     RWORK,                                                       0841
*     RVIRT,                                                       0841
*     RBASE,                                                       0841
*     RAVT,                                                        0841
*     RRETURN,                                                     0841
*     RBRANCH) RSTD;                /*                       @YM04622*/
*                                                                  0842
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE CCW'S ARE VIRTUAL, THEN TRANSLATE THE CCW'S TO REAL    */
*   /* ADDRESSES. REGISTERS ON ENTRY HERE CONTAIN: R1-ADDR OF IOSB,  */
*   /* R14-RETURN ADDRESS, R15-SIO APPENDAGE ENTRY ADDRESS   @G36XRIB*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0842
*   STM(REG0,RBRANCH,SIOSAVE);      /* SAVE CALLERS REGISTERS      0842
*                                                            @G36XRIB*/
         STM   REG0,RBRANCH,SIOSAVE                                0842
*   RFY                                                            0843
*    (REG3,                                                        0843
*     REG4,                                                        0843
*     REG7,                                                        0843
*     REG9) UNRSTD;                 /* GIVE PLS SOME REGISTERS     0843
*                                                            @YM06506*/
*   RLCB=RPARM->IOSUSE;             /* GET ADDRESS OF THE LCB      0844
*                                                            @G36XRIB*/
         L     RLCB,IOSUSE(,RPARM)                                 0844
*   GEN REFS(LCBATTN,CSMASK1) SETS(RPARM,RWORK,LCBATTN);           0845
*                                                         /* @YM07757*/
         L     RWORK,LCBATTN-3(,RLCB)   WORD CONTAINS LCBATTN  @YM07757
CSLOOP1  EQU   *                                               @YM07757
         LR    RPARM,RWORK              COPY WORD TO UPDATE    @YM07757
         N     RPARM,CSMASK1            RESET LCBATTN          @YM07757
         CS    RWORK,RPARM,LCBATTN-3(RLCB) CS LCBATTN          @YM07757
         BNE   CSLOOP1                  LOOP IF CS FAILED      @YM07757
*   RAVT=TCXAVT;                    /* GET TCAM AVT ADDRESS  @YM06506*/
         L     @07,CVTPTR                                          0846
         L     @07,TCXPTR(,@07)                                    0846
         L     RAVT,TCXAVT(,@07)                                   0846
*   RPARM=LCBTTCIN;                 /* PARAMETER TO IEDQTNT  @YM04622*/
         LH    RPARM,LCBTTCIN(,RLCB)                               0847
         N     RPARM,@CF02869                                      0847
*   RWORK=RBRANCH;                  /* SAVE REGISTER 15 CONTENTS   0848
*                                                            @YM06506*/
         LR    RWORK,RBRANCH                                       0848
*   CALL TNTCODE;                   /* GET TTE ADDRESS       @YM04622*/
         L     @15,IEDQNPTR(,RAVT)                                 0849
         BALR  @14,@15                                             0849
*   RBRANCH=RWORK;                  /* RESTORE REGISTER 15 CONTENTS
*                                                            @YM06506*/
         LR    RBRANCH,RWORK                                       0850
*   RTRM=RPARM-LENGTH(IEDNTRM);     /* GET TTE PREFIX        @YM04622*/
         LR    RTRM,RPARM                                          0851
         SL    RTRM,@CF02521                                       0851
*   IF LCBREAL=OFF&                 /* IF 'PERMANENT' CCWS IN THE LCB
*                                      HAVE NOT BEEN TRANSLATED TO 0852
*                                      REAL ...              @YM04622*/
*       TRMIPLDM=OFF&               /* ... AND IPL/DUMP IS NOT IN  0852
*                                      PROGRESS ...          @YM04622*/
*       LCBSTAT1^=CLOSDOWN THEN     /* ... AND NOT CLOSE CHAN PROG 0852
*                                      THEN                  @YM04622*/
         TM    LCBREAL(RLCB),B'00000100'                           0852
         BNZ   @RF00852                                            0852
         TM    TRMIPLDM(RTRM),B'10000000'                          0852
         BNZ   @RF00852                                            0852
         CLI   LCBSTAT1(RLCB),X'FF'                                0852
         BE    @RF00852                                            0852
*     DO;                           /* ... TRANSLATE LCB CCWS      0853
*                                                            @YM04622*/
*       RCCW=ADDR(LCBCCW1);         /* POINT TO WRITE START CCW    0854
*                                                            @YM04622*/
         LA    RCCW,LCBCCW1(,RLCB)                                 0854
*       GEN(LRA  RWORK,0(,RCCW));   /* TRANSLATE TO REAL     @YM06506*/
         LRA  RWORK,0(,RCCW)
*       CCWADDR=RWORK;              /* SAVE REAL ADDRESS     @YM06506*/
         STCM  RWORK,7,CCWADDR(RCCW)                               0856
*       RCCW=ADDR(LCBCCW3);         /* POINT TO READ START CCW     0857
*                                                            @YM04622*/
         LA    RCCW,LCBCCW3(,RLCB)                                 0857
*       GEN(LRA  RWORK,0(,RCCW));   /* TRANSLATE TO REAL     @YM06506*/
         LRA  RWORK,0(,RCCW)
*       CCWADDR=RWORK;              /* SAVE REAL ADDRESS     @YM06506*/
         STCM  RWORK,7,CCWADDR(RCCW)                               0859
*       RCCW=ADDR(LCBCCW6);         /* POINT TO NO-OP AFTER WRITES 0860
*                                                            @YM04622*/
         LA    RCCW,LCBCCW6(,RLCB)                                 0860
*       GEN(LRA  RWORK,0(,RCCW));   /* TRANSLATE TO REAL     @YM06506*/
         LRA  RWORK,0(,RCCW)
*       CCWADDR=RWORK;              /* SAVE REAL ADDRESS     @YM06506*/
         STCM  RWORK,7,CCWADDR(RCCW)                               0862
*       RCCW=ADDR(LCBCCW7);         /* POINT TO NO-OP AFTER READS  0863
*                                                            @YM04622*/
         LA    RCCW,LCBCCW7(,RLCB)                                 0863
*       GEN(LRA  RWORK,0(,RCCW));   /* TRANSLATE TO REAL     @YM06506*/
         LRA  RWORK,0(,RCCW)
*       CCWADDR=RWORK;              /* SAVE REAL ADDRESS     @YM06506*/
         STCM  RWORK,7,CCWADDR(RCCW)                               0865
*       LCBREAL=ON;                 /* INDICATE LCB CCWS ARE NOW REAL
*                                                            @YM04622*/
         OI    LCBREAL(RLCB),B'00000100'                           0866
*     END;                          /*                       @YM04622*/
*   IF LCBRLAD=OFF THEN             /* IF CCWS HAVE NOT BEEN       0868
*                                      TRANSLATED THEN ...   @YM04622*/
@RF00852 TM    LCBRLAD(RLCB),B'00010000'                           0868
         BNZ   @RF00868                                            0868
*     DO;                           /* HANDLE CCW TRANSLATION      0869
*                                                            @YM04622*/
*       RCCW=LCBSTART;              /* GET START CCW ADDRESS @YM04622*/
         L     RCCW,LCBSTART-1(,RLCB)                              0870
         LA    RCCW,0(,RCCW)                                       0870
*       IF CCWOPCDE=CCWRRS THEN     /* IF FIRST CCW IS WRITE START 0871
*                                      RESET THEN...         @YM04622*/
         CLI   CCWOPCDE(RCCW),X'93'                                0871
         BNE   @RF00871                                            0871
*         DO;                       /* TRANSLATE WRITE START RESET 0872
*                                      CCW                   @YM04622*/
*           GEN(LRA  RWORK,0(,RCCW));/* TRANSLATE TO REAL    @YM06506*/
         LRA  RWORK,0(,RCCW)
*           CCWADDR=RWORK;          /* SAVE REAL ADDRESS     @YM06506*/
         STCM  RWORK,7,CCWADDR(RCCW)                               0874
*         END;                      /*                       @YM04622*/
*       IF TRMIPLDM=ON×             /* IF IPL/DUMP IN PROGRESS ... 0876
*                                                            @YM04622*/
*           LCBSTAT1=CLOSDOWN THEN  /* ... OR CLOSE CHANNEL PROGRAM
*                                      THEN                  @YM04622*/
@RF00871 TM    TRMIPLDM(RTRM),B'10000000'                          0876
         BO    @RT00876                                            0876
         CLI   LCBSTAT1(RLCB),X'FF'                                0876
         BNE   @RF00876                                            0876
@RT00876 DS    0H                                                  0877
*         RCCW=LCBSTART;            /* TRANSLATE ENTIRE CHANNEL    0877
*                                      PROGRAM               @YM04622*/
         L     RCCW,LCBSTART-1(,RLCB)                              0877
         LA    RCCW,0(,RCCW)                                       0877
*       ELSE                        /*                       @YM04622*/
*         DO;                       /* ELSE DETERMINE WHICH CCWS NEED
*                                      TRANSLATION           @YM04622*/
         B     @RC00876                                            0878
@RF00876 DS    0H                                                  0879
*           RCCW=ADDR(LCBCCW2);     /* ASSUME SENDING        @YM04622*/
         LA    RCCW,LCBCCW2(,RLCB)                                 0879
*           IF LCBSENDN=OFF THEN    /* IF NOT SENDING ...    @YM04622*/
         TM    LCBSENDN(RLCB),B'00000001'                          0880
         BNZ   @RF00880                                            0880
*             RCCW=ADDR(LCBCCW4);   /* ... ASSUME RECEIVING  @YM04622*/
         LA    RCCW,LCBCCW4(,RLCB)                                 0881
*         END;                      /*                       @YM04622*/
@RF00880 DS    0H                                                  0883
*       DO UNTIL LCBRLAD=ON;        /* TRANSLATE ADDRESSES UNTIL ALL
*                                      CCW'S ARE REAL        @YM04622*/
@RC00876 DS    0H                                                  0883
@DL00883 DS    0H                                                  0884
*         RVIRT=CCWADDR;            /* GET VIRTUAL ADDRESS FROM CCW  */
         SLR   RVIRT,RVIRT                                         0884
         ICM   RVIRT,7,CCWADDR(RCCW)                               0884
*         GEN(LRA  RWORK,0(,RVIRT));/* TRANSLATE TO REAL     @YM06506*/
         LRA  RWORK,0(,RVIRT)
*         CCWADDR=RWORK;            /* SAVE REAL ADDRESS     @YM06506*/
         STCM  RWORK,7,CCWADDR(RCCW)                               0886
*         IF NOTTIC1=OFF&           /* IS COMMAND ...                */
*             NOTTIC2=OFF&          /* ... A ...                     */
*             NOTTIC3=OFF THEN      /* ... TIC                       */
         TM    NOTTIC1(RCCW),B'00000111'                           0887
         BNZ   @RF00887                                            0887
*           DO;                     /*                       @YM03703*/
*             CCWOPCDE=CCWTICR;     /* INDICATE CCW CONTAINS REAL  0889
*                                      ADDRESSES             @YM04622*/
         MVI   CCWOPCDE(RCCW),X'88'                                0889
*             RWORK=RVIRT;          /* YES, GET ADDR OF CCW THAT IS
*                                      TIC'ED TO             @YM06506*/
         LR    RWORK,RVIRT                                         0890
*             RCCW=RCCW-LENGTH(IEDQCCW);/* BACK UP TO PREVIOUS CCW 0891
*                                                            @YM04622*/
         SL    RCCW,@CF00046                                       0891
*             IF CCWOPCDE=CCWNOP THEN/* IF NO-OP CCW REACHED THEN  0892
*                                                            @YM04622*/
         CLI   CCWOPCDE(RCCW),X'03'                                0892
         BNE   @RF00892                                            0892
*               IF LCBRECVN=ON THEN /* IF RECEIVING CHANNEL PROGRAM
*                                      EXISTS                @YM04622*/
         TM    LCBRECVN(RLCB),B'00000010'                          0893
         BNO   @RF00893                                            0893
*                 RCCW=ADDR(LCBCCW4);/* RESUME TRANSLATION ON READ 0894
*                                      CCWS                  @YM04622*/
         LA    RCCW,LCBCCW4(,RLCB)                                 0894
*               ELSE                /*                       @YM04622*/
*                 LCBRLAD=ON;       /* ELSE INDICATE TRANSLATION   0895
*                                      COMPLETE              @YM04622*/
         B     @RC00893                                            0895
@RF00893 OI    LCBRLAD(RLCB),B'00010000'                           0895
*             ELSE                  /*                       @YM04622*/
*               DO;                 /*                       @YM04622*/
         B     @RC00892                                            0896
@RF00892 DS    0H                                                  0897
*                 RCCW=RWORK;       /* COPY VIRTUAL TIC TO ADDRESS 0897
*                                                            @YM06506*/
         LR    RCCW,RWORK                                          0897
*                 IF CCWOPCDE=CCWNOP THEN/* IF NO-OP CCW REACHED THEN
*                                      ...                   @YM04622*/
         CLI   CCWOPCDE(RCCW),X'03'                                0898
         BNE   @RF00898                                            0898
*                   LCBRLAD=ON;     /* INDICATE TRANSLATION COMPLETE
*                                                            @YM04622*/
         OI    LCBRLAD(RLCB),B'00010000'                           0899
*                 ELSE              /*                       @YM04622*/
*                   DO;             /* PREVENT TRANSLATION ON ANY  0900
*                                      READ ALREADY TRANSLATED     0900
*                                                            @YM04622*/
         B     @RC00898                                            0900
@RF00898 DS    0H                                                  0901
*                     IF CCWOPCDE=CCWREAD&/* IF THIS IS A READ UNIT
*                                      ...                   @YM04622*/
*                         (RCCW+LENGTH(IEDQCCW))->CCWOPCDE=CCWTICR THEN
         CLI   CCWOPCDE(RCCW),X'02'                                0901
         BNE   @RF00901                                            0901
         CLI   CCWOPCDE+8(RCCW),X'88'                              0901
         BNE   @RF00901                                            0901
*                                   /* ... AND THIS UNIT IS ALREADY
*                                      IN REAL ADDRESS FORM  @YM04622*/
*                       LCBRLAD=ON; /* INDICATE TRANSLATION COMPLETE
*                                                            @YM04622*/
         OI    LCBRLAD(RLCB),B'00010000'                           0902
*                   END;            /*                       @YM04622*/
*               END;                /*                       @YM04622*/
*           END;                    /*                       @YM03703*/
*         ELSE                      /* COMMAND IS NOT A TIC          */
*           DO;                     /*                       @YM04622*/
         B     @RC00887                                            0906
@RF00887 DS    0H                                                  0907
*             IF CCWCD=ON×          /* IF CHAINING THEN ...  @YM04622*/
*                 CCWCC=ON THEN     /*                       @YM04622*/
         TM    CCWCD(RCCW),B'11000000'                             0907
         BZ    @RF00907                                            0907
*               RCCW=RCCW+LENGTH(IEDQCCW);/* YES, NEXT CCW FOLLOWS 0908
*                                      CURRENT                       */
         AL    RCCW,@CF00046                                       0908
*             ELSE                  /*                       @YM04622*/
*               IF CCWOPCDE=CCWNOP& /* IF THIS IS A NO-OP CCW ...  0909
*                                                            @YM04622*/
*                   (RCCW-LENGTH(IEDQCCW))->CCWOPCDE=CCWBRK&/* ... 0909
*                                      PRECEDED BY A WRITE BREAK CCW
*                                      THEN                  @YM06506*/
*                   TRMIPLDM=OFF THEN/* AND NOT IPL OR DUMP  @ZM47611*/
         B     @RC00907                                            0909
@RF00907 CLI   CCWOPCDE(RCCW),X'03'                                0909
         BNE   @RF00909                                            0909
         LA    @07,8                                               0909
         LR    @04,RCCW                                            0909
         SLR   @04,@07                                             0909
         CLI   CCWOPCDE(@04),X'09'                                 0909
         BNE   @RF00909                                            0909
         TM    TRMIPLDM(RTRM),B'10000000'                          0909
         BNZ   @RF00909                                            0909
*                 RCCW=RCCW+LENGTH(IEDQCCW);/* TRANSLATE TIC AFTER 0910
*                                      WRITE BREAK           @YM04622*/
         ALR   RCCW,@07                                            0910
*               ELSE                /*                       @YM04622*/
*                 LCBRLAD=ON;       /* ELSE INDICATE TRANSLATION   0911
*                                      COMPLETE              @YM04622*/
         B     @RC00909                                            0911
@RF00909 OI    LCBRLAD(RLCB),B'00010000'                           0911
*           END;                    /*                       @YM04622*/
@RC00909 DS    0H                                                  0912
@RC00907 DS    0H                                                  0913
*       END;                        /*                       @YM04622*/
@RC00887 DS    0H                                                  0913
@DE00883 TM    LCBRLAD(RLCB),B'00010000'                           0913
         BNO   @DL00883                                            0913
*     END;                                                         0914
*   RFY                                                            0915
*    (REG3,                                                        0915
*     REG4,                                                        0915
*     REG7,                                                        0915
*     REG9) RSTD;                   /* TAKE BACK REGISTERS   @YM06506*/
@RF00868 DS    0H                                                  0916
*   LM(REG0,RBRANCH,SIOSAVE);       /* RESTORE IOS REGISTERS @YM06506*/
         LM    REG0,RBRANCH,SIOSAVE                                0916
*   RFY                                                            0917
*    (REG0,                                                        0917
*     RPARM,                                                       0917
*     RLCB,                                                        0917
*     REG3,                                                        0917
*     REG4,                                                        0917
*     RCCW,                                                        0917
*     RPRF,                                                        0917
*     REG7,                                                        0917
*     RTRM) UNRSTD;                                                0917
*   RFY                                                            0918
*    (REG9,                                                        0918
*     RWORK,                                                       0918
*     RBASE,                                                       0918
*     RAVT,                                                        0918
*     RRETURN,                                                     0918
*     RBRANCH) UNRSTD;                                             0918
*                                                                  0918
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @YM03703*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0919
*   END SIOAPNDG;                                                  0919
@EL00005 DS    0H                                                  0919
@EF00005 DS    0H                                                  0919
@ER00005 BR    @14                                                 0919
*   END IGG019TH                                                   0920
*                                                                  0920
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TCCWD   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TTCXD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TRQED   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*                                                                  0920
*       ;                                                          0920
@DATA    DS    0H
@CH02768 DC    H'9'
         DS    0F
         DS    0F
@CF00075 DC    F'3'
@CF00257 DC    F'4'
@CF00046 DC    F'8'
@CF02851 DC    F'10'
@CF02521 DC    F'14'
@CF02827 DC    XL4'40000000'
@CF02869 DC    XL4'0000FFFF'
         DS    0D
@CB02288 DC    X'08000002'
@CB02877 DC    B'000000000000000000000000000100000000000000000000000000C
               00'
@CB02883 DC    B'111111111111111111111111111011111111111111111111111111C
               11'
         DS    CL2
DUMRQE   DS    CL20
SIOSAVE  DS    CL72
CSMASK1  DC    X'FFFFFFFB'
CSMASK2  DC    X'00000004'
CSMASK3  DC    X'00000002'
CSMASK4  DC    X'FFFFFDFF'
CSMASK5  DC    X'00000400'
IGG019TH CSECT
END19TH  DC    H'0'                     LABEL FOR END OF MODULE
IGG019TH CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TEMPBASE EQU   @15
IEDQAPTR EQU   @13
DCBPTR   EQU   @02
IEDQLPTR EQU   @02
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
RTRM     EQU   @08
RECB     EQU   @11
RWORK    EQU   @10
RCCW     EQU   @05
RPRF     EQU   @06
RAVT     EQU   @13
RLCB     EQU   @02
REG0     EQU   @00
RPARM    EQU   @01
REG3     EQU   @03
REG4     EQU   @04
REG7     EQU   @07
RSTATE   EQU   @09
REG9     EQU   @09
RINT     EQU   @09
RVIRT    EQU   @11
REG11    EQU   @11
RTCB     EQU   @12
RBASE    EQU   @12
RRETURN  EQU   @14
RBRANCH  EQU   @15
IEDQTPTR EQU   @08
CVTPTR   EQU   16
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTDPARM EQU   IEDQAVTD+332
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTIOT   EQU   IEDQAVTD+640
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00086 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTFLDH EQU   IEDNSVTD+52
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSSRQ EQU   IEDNSVTD+172
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTTNTX EQU   IEDNSVTD+252
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQCCW  EQU   0
CCW      EQU   IEDQCCW
CCWOPCDE EQU   CCW
CCWADDR  EQU   CCW+1
CCWFLAGS EQU   CCW+4
CCWCD    EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWCOUNT EQU   CCW+6
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTPTRV  EQU   CVTMAP+288
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IHADCB   EQU   0
IHADCS1A EQU   0
DCBBCKUP EQU   IHADCS1A+8
IHADCS2K EQU   0
DCBDUMPD EQU   IHADCS2K
DCBTRSTA EQU   IHADCS2K+5
DCBDSORG EQU   IHADCS2K+6
DCBDSRG2 EQU   DCBDSORG+1
DCBRNCKD EQU   IHADCS2K+12
DCBEXLST EQU   IHADCS2K+16
DCBEIOBX EQU   DCBEXLST
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS43 EQU   0
DCBSCTAB EQU   IHADCS43
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSTSLL  EQU   IOSOPT
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00119 EQU   IOSB+20
IOSCC    EQU   @NM00119
IOSCSW   EQU   @NM00119+1
IOSCSWCA EQU   IOSCSW
IOSTATUS EQU   IOSCSW+3
IOSUSE   EQU   IOSB+32
IOSSNS   EQU   IOSB+42
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFSBFR EQU   LCBMHA
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBFLAG2 EQU   LCBIOBSN
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBNOTIN EQU   LCBLOSDT
LCBTMOUT EQU   LCBSENS0
LCBABORT EQU   LCBTMOUT
LCBECBCC EQU   LCBIOBSN+3
LCBECBPT EQU   LCBIOBSN+4
LCBFLAG3 EQU   LCBIOBSN+7
LCBSOHR  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBCSW   EQU   LCBIOBSN+8
LCBCSWCA EQU   LCBCSW
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBUSAT  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSUE  EQU   LCBCSWUS
LCBCSWCS EQU   LCBCSWST+1
LCBCSPCI EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCHC EQU   LCBCSWCS
LCBCSWRC EQU   LCBCSW+5
LCBSIOCC EQU   LCBIOBSN+15
LCBSIOC1 EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSTART EQU   LCBIOBSN+16
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBRDBFR EQU   LCBRCBFR
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRECVN EQU   LCBSTAT1
LCBSENDN EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBATTN  EQU   LCBSYNC
LCBDIAL  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBTTCIN EQU   IEDQLCB+90
LCBMSGFM EQU   IEDQLCB+92
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW1  EQU   LCBCPA
LCBCCW2  EQU   LCBCPA+8
LCBCCW3  EQU   LCBCPA+16
LCBCCW4  EQU   LCBCPA+24
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
LCBIOSB  EQU   LCBQEBPL+1
LCBCCW6  EQU   LCBCPA+40
LCBCCW7  EQU   LCBCPA+48
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTI0   EQU   PRFTIC+1
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
@NM00172 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00172
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQTCXD EQU   0
TCXAVT   EQU   IEDQTCXD
TCXATTEN EQU   IEDQTCXD+4
TCXREADY EQU   IEDQTCXD+24
TCXFLAG1 EQU   IEDQTCXD+34
TCXBUFA  EQU   IEDQTCXD+80
TCXDSAVE EQU   IEDQTCXD+104
TCXQE8   EQU   IEDQTCXD+216
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
IEDQTDCE EQU   IEDQTNTD+46
TNTCODE  EQU   0
IEDTNTA  EQU   0
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHFI    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDRQE   EQU   0
RQEUCB   EQU   IEDRQE+2
RQEIOB   EQU   IEDRQE+5
RRQE     EQU   0
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHFTYPE EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
ECB      EQU   0
ECBCC    EQU   ECB
ECBWAIT  EQU   ECBCC
INOPRU   EQU   0
INOPNS   EQU   INOPRU
INOPPC   EQU   INOPRU+1
INOPCMD  EQU   INOPRU+2
INOPNA   EQU   INOPRU+3
INOPDATA EQU   INOPRU+5
LNTRACE  EQU   0
CONVERT  EQU   0
NAADDR   EQU   0
POST     EQU   0
INOPAREA EQU   0
TNTDCODE EQU   0
TNTFIRST EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOSBPTR  EQU   LCBIOSB
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00152 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBNX142 EQU   LCBQNXMN
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
PRFSHDR  EQU   IEDQPRF+42
TCXPTR   EQU   CVTAQAVT
IEDQNPTR EQU   AVTRNMPT
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMINOP  EQU   TRMNCP1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMIPLDM EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TICCHK   EQU   CCWOPCDE
NOTTIC1  EQU   TICCHK
NOTTIC2  EQU   TICCHK
NOTTIC3  EQU   TICCHK
CPA      EQU   LCBCPA
@NM00200 EQU   CPA
CPAWRTS  EQU   @NM00200
@NM00203 EQU   CPA+8
CPAWRTBF EQU   @NM00203+1
CPAWRTBK EQU   @NM00203+5
@NM00206 EQU   CPA+16
CPARDS   EQU   @NM00206
@NM00209 EQU   CPA+24
CPARDU   EQU   @NM00209+1
CPAWNOOP EQU   CPA+40
CPARNOOP EQU   CPA+48
REGSVE   EQU   AVTSAVEX
DIOSUCB  EQU   IOSUCB
DIOSUCBP EQU   DIOSUCB+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00212 EQU   DIOSUCB
REG1SVE  EQU   REGSVE+4
REG0SVE  EQU   REGSVE
@NM00211 EQU   CPA+32
@NM00210 EQU   @NM00209
@NM00208 EQU   @NM00206+4
@NM00207 EQU   @NM00206+1
@NM00205 EQU   @NM00203+4
@NM00204 EQU   @NM00203
CPAOPRE  EQU   @NM00200+5
@NM00202 EQU   @NM00200+4
@NM00201 EQU   @NM00200+1
@NM00199 EQU   TICCHK
@NM00194 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00193 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00192 EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
@NM00160 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00159 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00158 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00157 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00156 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00155 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00154 EQU   @NM00152+4
LCBNCPPT EQU   @NM00152+1
@NM00153 EQU   @NM00152
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00151 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00150 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00149 EQU   LCBCSWU1
@NM00148 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00147 EQU   LCBRSPIN
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00124 EQU   IOSPCISC+4
@NM00123 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00122 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00198 EQU   ECB+1
@NM00197 EQU   ECBCC
ECBPOST  EQU   ECBCC
TTHTAG2  EQU   TTHTAG+1
@NM00196 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00195 EQU   TTHBYTE0
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00191 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00190 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00189 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
RQEHDR   EQU   IEDRQE+16
RQETCBAD EQU   IEDRQE+13
RQEKEY   EQU   IEDRQE+12
RQEDEB   EQU   IEDRQE+9
RQEPR    EQU   IEDRQE+8
RQETCB   EQU   IEDRQE+4
RQELNK   EQU   IEDRQE
@NM00188 EQU   TRHBYTE2
@NM00187 EQU   TRHBYTE2
@NM00186 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00185 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00184 EQU   TRHBYTE1
@NM00183 EQU   TRHBYTE1
@NM00182 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00181 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHSDI   EQU   TRHBYTE0
@NM00180 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
TNTTRMAD EQU   IEDTNTA
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTENLEN EQU   IEDQTNTD+40
TNTSRCHX EQU   IEDQTNTD+38
TCXEND   EQU   IEDQTCXD+224
TCXNCPIO EQU   IEDQTCXD+220
TCXACTE8 EQU   TCXQE8
TCXABEPL EQU   IEDQTCXD+212
TCXSRBS  EQU   IEDQTCXD+208
TCXSIOSB EQU   IEDQTCXD+204
TCXESAVE EQU   IEDQTCXD+132
TCXERPPM EQU   IEDQTCXD+128
TCXERPSV EQU   IEDQTCXD+116
TCXSATTN EQU   IEDQTCXD+112
@NM00179 EQU   TCXDSAVE+4
@NM00178 EQU   TCXDSAVE
TCXPLCB  EQU   IEDQTCXD+100
TCXBITS  EQU   IEDQTCXD+98
TCXSCBSZ EQU   IEDQTCXD+97
TCXBIT1  EQU   IEDQTCXD+96
TCXCOMPT EQU   IEDQTCXD+92
TCXAVAIL EQU   IEDQTCXD+88
TCXBUFL  EQU   IEDQTCXD+84
TCXTOTE  EQU   TCXBUFA
TCXCKPM  EQU   IEDQTCXD+79
TCXNCKPR EQU   IEDQTCXD+78
TCXSZAIB EQU   IEDQTCXD+76
TCXAIBC  EQU   IEDQTCXD+72
TCXPEBC  EQU   IEDQTCXD+68
TCXPEWAC EQU   IEDQTCXD+64
TCXQRQ   EQU   IEDQTCXD+60
TCXOCQ   EQU   IEDQTCXD+56
TCXPNTQ  EQU   IEDQTCXD+52
TCXPUTQ  EQU   IEDQTCXD+48
TCXGETQ  EQU   IEDQTCXD+44
TCXTSI   EQU   IEDQTCXD+40
TCXRPT   EQU   IEDQTCXD+36
TCXCC3TS EQU   IEDQTCXD+35
TCXAPDMP EQU   TCXFLAG1
TCXAPPL  EQU   TCXFLAG1
TCXRTM   EQU   TCXFLAG1
TCXMCPCD EQU   TCXFLAG1
TCXAUTH  EQU   TCXFLAG1
TCXASID  EQU   IEDQTCXD+32
TCXASCB  EQU   IEDQTCXD+28
TCXPASWD EQU   IEDQTCXD+16
TCXDISP  EQU   IEDQTCXD+12
TCXTCB   EQU   IEDQTCXD+8
TCXATTLN EQU   TCXATTEN
PRF2SEQP EQU   PRF2WD2
@NM00177 EQU   IEDPF2+1
@NM00176 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00175 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00174 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00173 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00172+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
@NM00171 EQU   PRFTICC
@NM00170 EQU   PRFTICC
@NM00169 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00168 EQU   PRFTICC
@NM00167 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00166 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00165 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00164 EQU   LCBXFLAG
@NM00163 EQU   LCBXFLAG
@NM00162 EQU   LCBXFLAG
@NM00161 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCP    EQU   LCBQEBPL+4
LCBSIO   EQU   LCBQEBPL
@NM00146 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00145 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00144 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBSCBA  EQU   IEDQLCB+93
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
@NM00143 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
LCBLOGDV EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBQB EQU   LCBERB+1
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00142 EQU   LCBTSTSW
@NM00141 EQU   LCBTSTSW
@NM00140 EQU   LCBTSTSW
@NM00139 EQU   LCBTSTSW
@NM00138 EQU   LCBTSTSW
@NM00137 EQU   LCBTSTSW
@NM00136 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRCLLN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00135 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00134 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
@NM00133 EQU   LCBSIOCC
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
@NM00132 EQU   LCBFLAG3
LCBSENS1 EQU   LCBSNS+1
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
@NM00131 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00130 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00129 EQU   LCBFLAG1
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00128 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
@NM00127 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00126 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00125 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBKEY   EQU   LCBRCB
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00121 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00120 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSOPT2X EQU   IOSOPT2
IOSIGP   EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00118 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSNOTRS EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
DCBBUFSI EQU   IHADCS43+6
DCBUNTCT EQU   IHADCS43+5
DCBILCT  EQU   IHADCS43+4
DCBSCTAD EQU   DCBSCTAB+1
@NM00117 EQU   DCBSCTAB
DCBPUTA  EQU   DCBGETA
@NM00116 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00115 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00114 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRNCKA EQU   DCBRNCKD+1
@NM00113 EQU   DCBRNCKD
DCBIOBAD EQU   IHADCS2K+8
DCBDSGTR EQU   DCBDSRG2
@NM00112 EQU   DCBDSRG2
DCBDSRG1 EQU   DCBDSORG
DCBCHNGL EQU   DCBTRSTA
DCBNIDLE EQU   DCBTRSTA
DCBBAKUP EQU   DCBTRSTA
DCBIPLED EQU   DCBTRSTA
DCBRSTRT EQU   DCBTRSTA
DCBINITL EQU   DCBTRSTA
DCBAUTOD EQU   DCBTRSTA
DCBAUTOI EQU   DCBTRSTA
@NM00111 EQU   IHADCS2K+4
DCBDUMPA EQU   DCBDUMPD+1
DCBUNITN EQU   DCBDUMPD
DCBBCKUA EQU   DCBBCKUP+1
@NM00110 EQU   DCBBCKUP
DCBIPLTX EQU   IHADCS1A
@NM00109 EQU   IHADCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00108 EQU   CVTFIX+248
@NM00107 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
CCWRSV   EQU   CCW+5
@NM00106 EQU   CCWFLAGS
CCWIDA   EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSKIP  EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00091 EQU   IEDQAVTD+1242
@NM00090 EQU   IEDQAVTD+1241
@NM00089 EQU   IEDQAVTD+1240
@NM00088 EQU   IEDQAVTD+1237
@NM00087 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00085 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00084 EQU   IEDQAVTD+1140
@NM00083 EQU   IEDQAVTD+1137
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00074 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00073 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00072 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00069 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00068 EQU   IEDQAVTD+950
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00053 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00052 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00051 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00050 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00049 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00048 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00040 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00039 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00038 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00023 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00021 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00015 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00525 EQU   @RC00515
@RC00523 EQU   @RC00515
@RC00519 EQU   @RC00515
@RT00532 EQU   @RC00531
@RC00583 EQU   @RC00582
@RC00658 EQU   @RC00637
@RC00640 EQU   @RC00637
@RC00722 EQU   @RC00706
@RC00715 EQU   @RC00706
@RC00708 EQU   @RC00706
@RC00746 EQU   @RC00706
@RC00892 EQU   @RC00887
@RC00898 EQU   @RC00887
@RF00901 EQU   @RC00887
@PB00005 EQU   @EL00001
@RC00649 EQU   @RC00640
@RC00644 EQU   @RC00640
@PB00004 EQU   @PB00005
@RC00893 EQU   @RC00892
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGG019TH,(C'PLS1458',0701,78135)
