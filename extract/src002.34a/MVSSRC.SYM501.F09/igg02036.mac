         TITLE 'SECOND LOAD OF LINE CLOSE - IGG02036'
IGG02036 CSECT
*A-000000-999999                                               @X31X8T0
         SPACE 3
*CHANGE-ACTIVITY = AS FOLLOWS:                                   S21903
******************** MICROFICHE FLAGS *********************** SUPT CODE
*C279000,506500                                                  A49239
*A221000,506000                                                  A41030
*C098000                                                         A49219
*A083100-083700                                                  S22025
*D506500,541000                                                  S22025
*A002000                                                         S21903
*C003000,081000,540000-548000                                    S21903
*A175000,531000                                                 SA60820
*D221300-221600                                                 SA60820
*A079000,334000,405000,536000,549000,551000                      X01004
*C187000,301000-307000,317600,320000-324000,326000,374000-380000,X01004
*C477000-488000,507000,539000                                    X01004
*D329000,422000-475000                                           X01004
*A097000,128000,374483,534000                                    Y01004
*A376720,376920,377920,539000,559400                             X02004
*C079500,375120-375160,375240-375280,375360,375520-375560,       X02004
*C376480,379240-379360                                           X02004
*A374210,374270,376150,379320,507800                             Y05330
*C378240                                                         Y05330
*D110000,261000,507150,513000,515000,523000                      Y01948
*A376360,376390,378040,507880                                   OY00465
*D378280-378360                                                 OY00465
*C379640-379720                                                 OY00451
*D507100                                                        OY00451
*A303000                                                        SA65392
*C261500                                                        SA65392
*D522000,532000                                                 SA65392
*A261800-261900,534500                                          SA64788
*A261000,514000                                                 SA62357
*C261000,263000                                                 SA62357
*D264000-279000,290000,523000                                   SA62357
*A380500,559600                                                 OX02223
*A 374780,507450                                                OY00530
*C375300                                                        OY03847
*D375450-375650,379960-380200                                   OY03847
*A317600                                                        OY03895
*A377036,377054                                                 OY00512
*A514100,514200                                                 OY03305
*C262000-280000,157700                                          OY03305
*D376360                                                        OY00541
*A376370,379720                                                 OY00541
*C379660,379840                                                 OY00541
*A379920                                                        OY00532
*A380500,559600                                                 OX02223
*C090000,128000,137000-138000,212350,333000,376060-376090,376150 Y02027
*C376160,376270,376300,418200,428000-432000                      Y02027
*D507840,37770-377790,543000-549200                              Y02027
*A019200-019800,042000,089200,089500,090700-092100,138200,148300 Y02027
*A148600,212320,332100-332500,334050-334150,376100,376155,380750 Y02027
*A402300-403000,418820,118320,471000,554300                      Y02027
*A402300-403000,418820,418320,471000,554300                      Y02027
*C160000,161000,222000,261500-261000,280000,317300,318000        Y02027
*C354000,355000,376270,514500                                    Y02027
*D516000,520000,521000                                           Y02027
*A222050,262100-262700,549700-549900                             Y02027
*C321000-321300,325500-326100                                    Y02027
*D322000-322400,334200-334600                                    Y02027
*C301600                                                       @ZA01133
*A537500                                                       @ZA01133
*A377960,378040                                                @YA03928
*A549000,549200                                                @SA70907
*C216000,537000,377780                                         @SA70907
*D217000-226000,527500,535000-536000,542500-547000             @SA70907
*D376160,379326-379353                                           X03039
*C004000,105000-106000,146000,150000,378240,379760-379800      @Z30X8TM
*C379880,507250                                                @Z30X8TM
*D379323,542500,549600                                         @Z30X8TM
*A301400,374870,514100                                         @XA03965
*C375800,551300                                                @ZA06161
*C159000                                                       @OY11974
*C537500                                                       @OZ24288
*                                                              @G36XRTP
*A379880                                                       @G36XRTP
*C105000,379440,379520,379560,507250                           @G36XRTP
*D379926-379942                                                @G36XRTP
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE-NAME = IGG02036    (TCAM,TERMINATION)                  @G36XRTP
*                                                                S21903
*DESCRIPTIVE-NAME = SECOND LOAD OF LINE CLOSE                    S21903
*                                                                S21903
*COPYRIGHTS = 'NONE'                                             S21903
*                                                                S21903
*STATUS = VERSION 10.0                                         @G36XRTP
*                                                                     *
*FUNCTION - OPERATION                                                 *
*   IGG02036 EXAMINES THE TCB DEB CHAIN TO DETERMINE IF THERE         *
*   ARE ADDITIONAL TCAM LINE GROUP OR MESSAGE QUEUES DCB'S TO         *
*   BE CLOSED, IF THERE ARE NONE THE ADDRESS OF THE TCAM              *
*   DISPATCHER IS ZEROED IN THE CVT, ANY LINE BUFFERS AND/OR          *
*   CORE QUEUE DATA SETS ARE FREED UP ALONG WITH ANY LINE             *
*   CROSS REFERENCE TABLE.  I/O OPERATIONS ARE PURGED ON ALL          *
*   THE LINES AND THE LINES ARE DISABLED.  THE ERROR TAB AND          *
*   ATTENTION TAB FIELDS IN THE UCBS FOR THESE LINES WILL BE          *
*   RESET AND ALL LINE CONTROL BLOCKS FOR THIS DCB WILL BE            *
*   FREED UP.  IF THERE IS A LINE CROSS REFERENCE TABLE, THE          *
*   ENTRIES USED BY THESE LINES WILL BE RE-INITIALIZED AND            *
*   CAN BE USED AGAIN.                                                *
*                                                                     *
*   MODIFICATIONS TO THE DCB ARE MADE TO THE COPY OF THE         Y02027
*   DCB SINCE COMMON CLOSE WILL OVERLAY THE REAL DCB WITH        Y02027
*   THE COPY OF THE DCB.                                         Y02027
*                                                                     *
*INPUT - THE REGISTERS 5, 6, 7, AND 8 ARE THE INPUT AS FOLLOWS        *
*   5 -  THE ADDRESS OF THE WTG TABLE PREFIX                     Y02027
*   6 -  THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE        *
*   7 -  THE ADDRESS OF THE COPY OF THE CURRENT DCB              Y02027
*   8 -  THE ADDRESS OF THE CURRENT ENTRY IN THE WHERE-TO-GO          *
*        TABLE                                                        *
*                                                                     *
*ENTRY POINTS - THIS ROUTINE IS ENTERED AT IGG02036 VIA AN            *
*   XCTL FROM THE CLOSE EXECUTOR IGG02035 OR IT MAY BE RE-ENTERED     *
*   FROM THE RELOOP PORTION OF THIS EXECUOTR IF IT IS DETERMINED      *
*   THAT THERE IS ANOTHER DATA CONTROL BLOCK TO BE CLOSED. THE   Y02027
*   MODULE RECEIVES CONTROL FROM IGG02035 IN PROTECT KEY 0       Y02027
*                                                                     *
*OUTPUT - REGISTERS 7 AND 8 WILL BE POSITIONED AT THE NEXT            *
*   ENTRIES IN THE WHERE-TO-GO TABLE PREFIX AND THE WHERE-       Y02027
*   TO-GO TABLE RESPECITIVELY.                                   Y02027
*                                                                     *
*EXTERNAL ROUTINES - NONE                                             *
*                                                                     *
*EXITS - NORMAL                                                       *
*   THIS ROUTINE EXITS VIA AN XCTL TO THE EXECUTOR IDENTIFIED         *
*   BY THE NEXT NON-ZERO ENTRY IN THE WHERE-TO-GO TABLE.              *
*   THE EXIT IS MADE IN THE PROTECT KEY OF DATA MANAGEMENT.      Y02027
*                                                                     *
*TABLES - WORK AREAS - THE WHERE-TO-GO TABLE CONTAINS THE             *
*   ID AND TTR OF THE CLOSE EXECUTORS, AND THE WHERE-TO-         Y02027
*   GO TABLE PREFIX CONTAINS THE ADDRESS OF A COPY OF            Y02027
*   EACH DCB SPECIFIED IN THE CLOSE MACRO INSTRUCTION            Y02027
*   SPECIFIED IN THE CLOSE MACRO INSTRUCTION.                         *
*                                                                     *
*ATTRIBUTES - THIS ROUITNE IS EXECUTED IN THE TRANSIENT AREA AS       *
*   ENABLED, PRIVILEGED, AND RE-ENTRANT.                              *
***********************************************************************
***********************************************************************
         EJECT
* REGISTER USAGE
*
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDCB     EQU   2                        ADDRESS OF THE CURRENT DCB
RTIOT    EQU   3                        ADDRESS OF THE TIOT
RCORE    EQU   4                        ADDRESS OF DCB WORK AREA
RPAR     EQU   5                        ADDRESS OF FIRST ENTRY IN
*                                         DCB PARAMETER LIST
RWTG     EQU   6                        ADDRESS OF WHERE-TO-GO
*                                         TABLE
RPARC    EQU   7                        ADDRESS OF CURRENT ENTRY IN
*                                         DCB PARAMETER LIST
RWTGC    EQU   8                        ADDRESS OF CURRENT ENTRY IN
*                                         IN WTG TABLE
RAVT     EQU   9                        ADDRESS OF THE AVT
RUCB     EQU   10                       ADDRESS OF THE CURRENT UCB
RDEB     EQU   11                       BASE OF THIS ROUTINE
RBASE    EQU   12                       WORK REGISTER
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
*
         USING IEDQDEB+36,RDEB          DEB DSECT
         USING IEDQTCB,RD               TCB DSECT
         USING IHADCB,RDCB
         USING IEDQLCB,RCORE            LCB DSECT
         USING IEDQAVTD,RAVT
         USING IEDQTNTD,RUCB                                     X02004
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY S21903
         USING *,RBASE
         SPACE 2
IGG02036 IEDHJN START                                            Y02027
         SPACE 2
         SR    RTIOT,RTIOT              CLEAR A COUNT REGISTER
         EJECT
RESTART  EQU   *
         LA    RTIOT,ONE(RTIOT)         INCREMENT THE COUNT OF THE
*                                         PASSES THRU THIS MODULE
         L     RJ,FOUR(RWTGC)           ADDR OF OPEN WORK AREA   Y02027
         USING FORCORE,RJ               OPEN WORK AREA DSECT     Y02027
         L     RDCB,DXUDCBAD            GET CURRENT DCB ADDRESS  Y02027
         L     RF,CVTPTR                LOAD ADDRESS OF CVT      Y02027
         USING CVTD,RF                  CVT ADDRESSABILITY       Y02027
         L     RF,CVTAQAVT              GET TCX ADDRESS          Y02027
         USING IEDQTCX,RF               TCX ADDRESSABILITY       Y02027
         L     RAVT,TCXAVT              GET THE AVT ADDRESS      Y02027
         L     RDEB,DCBDEBAD            GET THE DEB ADDRESS      Y02027
         L     RD,DEBTCBAD              GET THE TCB ADDRESS      Y02027
         L     RDEB,TCBDEB              LOAD THE ADDRESS OF THE
*                                         FIRST DEB ON THE CHAIN
         SR    RUCB,RUCB                CLEAR A COUNT REGISTER
CLRDEBAD EQU   *
         L     RC,DEBDCBAD              LOAD THE ADDRESS OF THE DCB
*                                         FOR THIS DEB
         TM    DSORG(RC),LINEDCB+DISKDCB+DCB3705    LINE GRP   @G36XRTP
*                                       OR MSG Q OR
*                                       CHECKPOINT DCB           S22024
         BZ    LASTEST                  NO, BRANCH               S22024
         LA    RUCB,ONE(RUCB)           INCREMENT THE COUNT OF DEBS
*                                         ON THE CHAIN
LASTEST  EQU   *
         L     RDEB,FOUR(RDEB)          GET NEXT DEB ADDRESS     S22024
         LA    RDEB,AVTEZERO(RDEB)      CLEAR HIGH ORDER BYTE    S22024
         LTR   RDEB,RDEB                ANY MORE DEBS IN CHAIN   S22024
         BNZ   CLRDEBAD                 YES, CHECK THEM          S22024
         CR    RTIOT,RUCB               COMPARE THE NUMBER OF PASSES
*                                         THROUGH THIS MODULE WITH
*                                         THE NUMBER OF DEBS ON THE
*                                         TCB CHAIN
         BE    LASTIME                  IF EQUAL, DO THE FINAL
*                                         OPERATIONS
SETDEB   EQU   *
         L     RDEB,DCBDEBAD            RESTORE THE DEB ADDRESS  Y02027
         LA    RC,SETLCB                SET A BRANCH ADDRESS
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*              PURGE I/O ON ALL THE LINES                         *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
PURGELIN EQU   *
         L     RF,CVTPTR                LOAD ADDRESS OF CVT      Y02027
         USING CVTD,RF                  CVT ADDRESSABILITY       Y02027
         MVC   DEBEXSCL+1(THREE),CVTXAPG+1 MOVE IN THE ADDR OF   Y02027
*                                         IOS APPENDAGES
         L     RF,4(RWTGC)              LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         ST    RDEB,0(RF)               STORE DEB ADDRESS IN
*                                         PARAMETER LIST
         MVI   0(RF),OPTION             MOVE IN THE OPTION BYTE
         XC    FOUR(EIGHT,RF),FOUR(RF)  CLEAR FOR PURGE
         PURGE (1)                      PURGE I/O ON ALL LINES @Z30X8TM
*
         LA    RE,ONE                   LOAD THE WAIT COUNT
         L     RF,4(RWTGC)              LOAD THE ADDRESS OF THE  Y02027
*                                       OPEN WORK AREA           Y02027
         LA    RF,FOUR(RF)              GET ECB ADDRESS
         WAIT  ECB=(1)                  WAIT FOR PURGE         @Z30X8TM
*
         BR    RC                       BR ON PRE-SET REGISTER   S22024
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*    DISABLE ALL LINES UNLESS A TYPE III ADAPTER OR 3705         S22024
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
SETLCB   EQU   *
         TM    DCBDSORG+ONE,DCB3705     IS THIS A 3705 DCB       S22024
         BO    OUT                      YES, SKIP DISABLE       OY03305
         SR    RC,RC                    CLEAR FOR LINE COUNT
         SR    RF,RF                    CLEAR                  @OY11974
         IC    RC,DEBNMEXT              NUMBER OF LINES        @OY11974
SCAN     EQU   *                                               @OY11974
         L     RUCB,DEBUCBAD(RF)        UCB POINTER            @OY11974
         LTR   RUCB,RUCB                IS IT DUMMY            @OY11974
         BNZ   CONT                     BR, NO                 @OY11974
         LA    RF,FOUR(RF)              INCREMENT INDEX        @OY11974
         BCT   RC,SCAN                  CHECK NEXT LINE        @OY11974
         B     OUT                      ALL LINES DUMMY        @OY11974
CONT     EQU   *                                               @OY11974
         TM    UCBUNTYP-UCBOB(RUCB),TYPE3 IS THIS AN IBM TERMINALY02027
*                                       ADAPTER , TYPE III       Y02027
         BZ    OUT                      YES, BRANCH
         L     RCORE,DCBIOBAD           LOAD THE ADDRESS OF THE LCB
*                                         AREA
         LA    RJ,IOBPTR                LOAD THE DISPLACEMENT OF
*                                         THE IOB
         SR    RCORE,RJ                 ACCESS THE BEGINNING OF THE
*                                         LCB AREA
         SR    RUCB,RUCB                CLEAR AN INDEX REGISTER
         SR    RD,RD                    CLEAR A SIZE REGISTER
         IC    RD,DCBEIOBX              GET THE SIZE OF AN LCB
         IC    RC,DEBNMEXT              LOAD THE NUMBER OF LINES
*
LOOP     EQU   *
         AR    RCORE,RD                 ACCESS THE BEGINNING OF THE
*                                         FIRST/NEXT LCB
         MVI   LCBCPA+20,POST           POST LCB FOR DUMMY LINE SA60820
         L     RJ,DEBUCBAD(RUCB)        LOAD THE UCB ADDRESS
         LTR   RJ,RJ                    IS THIS A DUMMY LINE
         BZ    LOOP01                   YES, BRANCH
         MVC   LCBCPA(8),DISABLE        SET A DISABLE COMMAND
*                                         CHANNEL PROGRAM AREA
         XC    LCBCPA+20(FOUR),LCBCPA+20 CLEAR FOR DISABLE
         LA    RF,LCBCPA+20             GET ECB ADDRESS FOR IOS
         ST    RF,LCBECBCC              STORE THE ECB ADDRESS IN
*                                         THE LCB
         LA    RF,LCBCPA                GET ADDRESS OF CHANNEL
*                                         PROGRAM AREA
         ST    RF,LCBSIOCC              STORE IN FIRST CCW POINTER
         LA    RF,LCBFLAG1              LOAD THE ADDRESS OF THE IOS
*                                         FLAG BYTES
         EXCPVR (1),SUBSYS              DISABLE THE LINE         X01004
LOOP01   EQU   *
         LA    RUCB,FOUR(RUCB)          INCREMENT THE INDEX
         BCT   RC,LOOP                    BRANCH IF THERE ARE MORE
*                                         LINES TO DISABLE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        WAIT FOR THE DISABLE COMMANDS TO COMPLETE                *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         L     RCORE,DCBIOBAD           LOAD THE BEGINNING ADDRESS
*                                         OF THE LCB AREA
         LA    RJ,IOBPTR                LOAD THE DISPLACEMENT OF
*                                         THE IOB
         SR    RCORE,RJ                 ACCESS THE BEGINNING OF
*                                         THE LCB AREA
         IC    RC,DEBNMEXT              GET NUMBER OF LINES
         TIME  BIN                      GET TIME FOR COMPARE       0616
         L     RJ,FOUR(RWTGC)           LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         ST    RTIOT,0(RJ)              SAVE REG3 IN WORK AREA   S22024
         LR    RTIOT,RE                 SAVE THE ORIGINAL TIME
WAITLOOP EQU   *
         AR    RCORE,RD                 ACCESS THE FIRST/NEXT LCB
TESTPCD  EQU   *                                                   0616
         TM    LCBCPA+20,X'40'          CHECK ECB FOR COMPLETION   0616
         BZ    TESTDLAY                 BRANCH IF NOT COMPLETE     0616
BCT      EQU   *
         BCT   RC,WAITLOOP              LOOP FOR NEXT WAIT
         LA    RC,OUT                   SET A BRANCH ADDRESS
         L     RJ,FOUR(RWTGC)           GET THE ADDRESS OF THE OPEN
*                                         WORK AREA
         USING FORCORE,RJ               OPEN WORK AREA DSECT     Y02027
         L     RDCB,DXUDCBAD            RESTORE THE DCB ADDRESS  Y02027
         L     RTIOT,0(RJ)              RESTORE REGISTER 3
         B     PURGELIN                 PURGE I/O ON ALL LINES
TESTDLAY EQU   *                                                   0616
         LTR   RDCB,RDCB                CHECK FOR DELAY DONE       0616
         BZ    BCT                      BR YES, CHECK NEXT LINE@SA70907
         TIME  BIN                      GET CURRENT TIME           0616
         LTR   RTIOT,RTIOT              TEST THE ORIGINAL TIME
         BNM   COMPUTE                  BRANCH IF NOT NEGATIVE     0616
         LTR   RE,RE                    CHECK CURRENT TIME         0616
         BM    COMPUTE                  BRANCH IF MINUS            0616
         LCR   RTIOT,RTIOT              COMPLIMENT THE ORIGINAL TIME
         ALR   RE,RTIOT                 ADD THE TIMES
         LCR   RTIOT,RTIOT              RESTORE THE ORIGINAL TIME
         B     COMPARE2                 SKIP SUBTRACT              0617
COMPUTE  EQU   *                                                   0616
         SLR   RE,RTIOT                 SUBTRACT THE TIMES IF THEY
*                                         ARE POSITIVE
COMPARE2 EQU   *                                                   0617
         CH    RE,LIMIT                 CHECK FOR 28 SECOND LIMIT  0616
         BL    TESTPCD                  BRANCH IF NOT REACHED      0616
         SR    RDCB,RDCB                CLEAR REG TO INDICATE DELAY0616
         B     TESTPCD                  CHECK ECB AGAIN            0616
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE RESETS THE ERROR TAB AND            *
*        ATTENTION TAB FIELDS IN THE UCBS FOR ALL LINES           *
*                  IN THIS LINE GROUP                             *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
OUT      EQU   *                                                   0616
         SR    RE,RE                    CLEAR FOR A LINE COUNT
         IC    RE,DEBNMEXT              GET THE NUMBER OF LINES IN
*                                         THIS LINE GROUP
         SR    RD,RD                    CLEAR AN INDEX REGISTER
GETADDR  EQU   *
         L     RF,DEBUCBAD(RD)          LOAD THE ADDRESS OF THE
*                                         FIRST/NEXT UCB
         LTR   RF,RF                    IS THIS A // DD DUMMY ENTRY
         BZ    NEXTUCB                  YES, BRANCH
         SR    RCORE,RCORE              CLEAR IC REGISTER       SA62357
         IC    RCORE,DEBNMEXT           NUMBER OF EXTENTS       SA62357
         SLL   RCORE,TWO                TIMES FOUR              SA62357
         LA    RCORE,DEBUCBAD(RCORE)    POINT TO ACCESS METHOD  SA62357
         NI    ONE(RF),XFB              GUARANTEE UCBNALOC BIT  SA64788
*                                         SET BY TOTE IS OFF    SA64788
         L     RJ,UCBEXTPT-UCBOB(,RF)   POINT TO UCB EXTENSION   Y02027
         MVC   UCBETI-UCBCMEXT(ONE,RJ),FOUR(RCORE) RESTORE       Y02027
*                                       ERRTAB OF REPRESENTATIVE Y02027
*                                       UCB                      Y02027
         MVC   UCBATI-UCBCMEXT(ONE,RJ),FIVE(RCORE) RESTORE ATTN  Y02027
*                                       TAB                      Y02027
NEXTUCB  EQU   *
         LA    RD,FOUR(RD)              INCREMENT THE UCB INDEX
         BCT   RE,GETADDR               RESET THE NEXT LINE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        FREEMAIN ALL OF THE LCB'S                                *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TYPEIII  EQU   *
         L     RCORE,DCBIOBAD           LOAD THE BEGINNING ADDRESS
*                                         OF THE LCB AREA
         LA    RJ,IOBPTR                LOAD THE DISPLACEMENT OF
*                                         THE IOB
         SR    RCORE,RJ                 ACCESS THE BEGINNING OF
*                                         THE LCB AREA
         SR    RD,RD                    CLEAR A SIZE REGISTER
         IC    RD,DCBEIOBX              GET THE SIZE OF AN LCB
         AR    RCORE,RD                 GET THE ADDRESS OF THE
*                                         FIRST LCB
         LR    RF,RD                    COPY SIZE OF AN LCB      X01004
         IC    RD,DEBNMEXT              NUMBER OF LINE GROUPS    X01004
         TM    DCBDSRG2,DCBDSGTR        IS THIS A 3705 LCB      SA65392
         BO    LCB3705A                 YES,SKIP THRESHOLD CODE SA65392
         MVC   AVTDOUBL(1),LCBRSKEY     SAVE LINE SCHEDULER'S  @XA03965
*                                       DISP CODE              @XA03965
         AH    RF,THRESHL               ADD LENGTH OF          @ZA01133
*                                         THRESHHOLD VALUES     SA65392
LCB3705A EQU   *                                                SA65392
         MR    RE,RD                    GET TOTAL LCB AREA SIZE  X01004
         LA    RJ,DEBUCBAD              LOAD A POINTER TO THE UCB
*                                         ADDRESSES
GETUCBAD EQU   *
         L     RC,0(RJ)                 LOAD A UCB ADDRESS
         LA    RC,0(RC)                 CLEAR THE HIGH ORDER BYTE
         LTR   RC,RC                    IS THIS A VALID ADDRESS
         BNZ   DIALTEST                 YES, BRANCH
         LA    RJ,FOUR(RJ)              INCREMENT THE UCB POINTER
         B     GETUCBAD                 GET THE NEXT UCB ADDRESS
DIALTEST EQU   *
         TM    UCBDVCLS-UCBOB(RC),GRAPHICS IS THIS A GRAPHICS DEVY02027
         BO    FREE2260                 YES-BR TO UNFIX 2260 RTN X01004
         TM    DCBDSORG+ONE,DCB3705     IS THIS A 3705 DCB      OY03895
         BO    FREE2260                 YES, BRANCH             OY03895
         TM    UCBTBYT2-UCBOB(RC),DIAL  IS THIS A DIAL LINE      Y02027
         BZ    COPYSIZE                 NO, BRANCH
         LA    RC,EIGHT(RF)             ADD 8 BYTES FOR DIAL-OUT X01004
*                                        CALL QUEUE              X01004
         SR    RF,RF                                             X01004
         IC    RF,AVTSCBSZ              SIZE OF AN SCB           X01004
         MR    RE,RD                    TOTAL SCB AREA           X01004
         ST    RF,LCBCPA                SAVE LENGTH OF SCB AREA  Y02027
         L     RJ,LCBMSGFM              ADDRESS OF SCB'S         Y02027
         BAL   RD,FREEPG                FREE SCB AREA            Y02027
         L     RE,LCBCPA                GET LENGTH OF SCB AREA   Y02027
         L     RF,LCBMSGFM              ADDRESS OF SCB'S         X01004
         ICM   RE,HI,SP250              SET SUBPOOL FOR FREEMAIN X01004
         FREEMAIN R,LV=(0),A=(1)                                 X01004
         LA    RE,EIGHT                                          X01004
         SR    RCORE,RE                 ADJ STRT OF LCB FOR DIAL X01004
COPYSIZ1 EQU   *                                                 X01004
         LR    RF,RC                    COPY LENGTH OF LCB AREA  X01004
COPYSIZE EQU   *
         LR    RC,RF                    SAVE LCB LENGTH          Y02027
         LR    RJ,RCORE                 ADDRESS OF LCB'S         Y02027
         BAL   RD,FREEPG                FREE LCB AREA            Y02027
         LR    RE,RC                    LENGTH OF LCB AREA       Y02027
         ICM   RE,HI,SP250              SET SUBPOOL FOR FREEMAIN X01004
         LR    RF,RCORE                 COPY THE LCB AREA STARTING
*                                         ADDRESS
*                                         FOR PROBLEM PROGRAM MODE
*
         FREEMAIN  R,LV=(0),A=(1)
         SPACE 2                                                 Y02027
*        CLEAR THE DCB FIELDS IN THE COPY OF THE DCB.            Y02027
         DROP  RDCB                     DROP RDCB AS DCB BASE    Y02027
         USING IHADCB,RF                ADDR OF COPY OF THE DCB  Y02027
         L     RF,ZERO(RPARC)           POINT TO COPY OF DCB     Y02027
         STCM  RAVT,AD,DCBIOBAA         RESTORE AVT ADDR IN DCB  Y02027
         XC    DCBEIOBX(1),DCBEIOBX     CLEAR SIZE OF LCB
         DROP  RF                       DROP RF AS DCB BASE      Y02027
         USING IHADCB,RDCB              ADDR THE REAL DCB        Y02027
         SPACE 2                                                 Y02027
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE REMOVES AN ENTRY FROM THE           *
*        CROSS REFERENCE TABLE AND MAKES THE SPACE IT             *
*        FORMERLY OCCUPIED AVAILABLE TO SUBSEQUENT OPENS          *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         NC    AVTCRSRF(4),AVTCRSRF     DO WE HAVE A CROSS
*                                         REFERENCE TABLE
         BZ    ENDLOAD                  NO, BRANCH
         SR    RE,RE                    CLEAR FOR A LINE COUNT
         IC    RE,DEBNMEXT              GET THE NUMBER OF LINES IN
*                                         THIS LINE GROUP
         SR    RD,RD                    CLEAR FOR THE UCB INDEX
CROSSREF EQU   *
         L     RJ,DEBUCBAD(RD)          LOAD THE ADDRESS OF THE
*                                         FIRST/NEXT UCB IN THIS
*                                         LINE GROUP
         L     RJ,UCBNAME-ONE-UCBOB(,RJ) LOAD THE UCB NAME       Y02027
*                                       FROM THE UCB             Y02027
         L     RF,AVTCRSRF              LOAD THE ADDRESS OF THE
*                                         CROSS REFERENCE TABLE
         LA    RC,EIGHT(RF)             LOAD THE ADDRESS OF THE
*                                         FIRST ENTRY IN THE TABLE
COMPUCB  EQU   *
         C     RJ,0(RC)                 ARE THE UCB NAMES THE SAME
         BNE   CHKNEXT                  NO, BRANCH
         XC    0(CRSFSIZE,RC),0(RC)     YES, CLEAR ALL INFORMATION
*                                         FROM THIS ENTRY
         MVC   ONE(THREE,RC),ONE(RF)    MOVE THE ADDRESS OF THE
*                                         NEXT AVAILABLE ENTRY INTO
*                                         THE ENTRY CHAIN
         ST    RC,0(RF)                 MAKE THIS ENTRY THE NEXT
*                                         AVAILABLE ENTRY IN THE
*                                         CROSS REFERENCE TABLE
NEXTENTY EQU   *
         LA    RD,FOUR(RD)              INCREMENT THE UCB POINTER
         BCT   RE,CROSSREF              DECREMENT THE LINE COUNT
ENDLOAD  EQU   *                                                 X01004
         SR    RCORE,RCORE                                       X01004
         IC    RCORE,DCBILCT            NUM OF INVITATION LISTS  X01004
         LA    RF,DEBPRFIX              LENGTH OF DEB PREFIX     X01004
         SR    RDEB,RF                  ADJ DEB BASE TO PREFIX   X01004
         DROP  RDEB                                              X01004
         USING IEDQDEB,RDEB                                      X01004
         L     RJ,DEBCEA                ADDRESS OF LINE END APP. X02004
         TM    DCBDSORG+ONE,DCB3705     3705 DCB                 Y05330
         BNO   NOT3705                  NO, BRANCH               Y05330
         SH    RJ,AVTHA4                ADJUST START ADDRESS     Y05330
NOT3705  EQU   *                        SET TO PAGE FREE APPEND. Y05330
         BAL   RD,FREEPG3               UNFIX PAGES OCCUPIED BY  X02004
*                                        LINE END APPENDAGE      X01004
         TM    DCBDSORG+ONE,DCB3705     3705 DCB                 Y05330
         BO    FREEDCB                  YES, FREE DCB AND DEB    Y05330
INVFREE  EQU   *                                                 X01004
         LR    RD,RCORE                 GET INVITATION LISTS YET X01004
*                                        TO FREE                 X01004
         BCTR  RD,ZERO                  SUBTRACT ONE             X01004
         AR    RD,RD                    CONVERT BYTE INDEX TO    X01004
         AR    RD,RD                     FOUR BYTE INDEX         X01004
         L     RUCB,DCBINVLI(RD)        ADDRESS OF INVITATION    X01004
*                                         LIST                   X01004
         SR    RC,RC                                             X01004
         SR    RF,RF                                             X01004
         IC    RC,0(RUCB)               GET NUMBER OF ENTRIES    X01004
         IC    RF,TWO(RUCB)             GET LENGTH OF EACH ENTRY X01004
         MR    RE,RC                    GET LENGTH OF LIST       X01004
         AR    RC,RC                    MULTIPY NUM OF ENTRIES   X01004
*                                       BY TWO TO GET SIZE OF
*                                         INVITATION LIST PREFIX X01004
         AR    RF,RC                    SET LENGTH TO FIX        X01004
         LA    RF,INVSIZE(RF)           INCREMENT SIZE TO       OY00530
*                                       INCLUDE DOUBLE WORD     OY00530
*                                       CONTROL FIELD AND       OY00530
*                                       DELIMITER               OY00530
         TM    STATUS(RUCB),INVEOT      WAS EOT SPECIFIED ON    OY00530
*                                       INVLIST MACRO           OY00530
         BZ    INVADDR                  NO, BRANCH              OY00530
         LA    RF,ONE(RF)               ADD 1 TO SIZE - FOR EOT OY00530
INVADDR  EQU   *                                                OY00530
         SR    RUCB,RC                  GET ADDRESS OF PREFIX    X01004
         LR    RJ,RUCB                  ADDRESS TO FIX           X01004
         BAL   RD,FREEPG                UNFIX INVITATION LIST    X01004
         LR    RD,RCORE                 GET NO. OF INVLISTS YET@XA03965
*                                       TO BE FREED            @XA03965
         BCTR  RD,ZERO                  SUBTRACT ONE           @XA03965
         AR    RD,RD                    CONVERT BYTE INDEX TO  @XA03965
         AR    RD,RD                    FOUR-BYTE INDEX        @XA03965
         L     RUCB,DCBINVLI(RD)        INVLIST ADDRESS        @XA03965
         CLI   AVTDOUBL,BUFKEY          BUFF TERM LINE?        @XA03965
         BE    NOCPUID                  BRANCH IF YES          @XA03965
         CLI   FIVE(RUCB),ZERO          CPUID ADDRESS HERE     @XA03965
         BE    NOCPUID                  BRANCH IF NO           @XA03965
         L     RJ,FOUR(,RUCB)           CPUID ADDRESS          @XA03965
         SR    RF,RF                    CLEAR FOR INSERT       @XA03965
         IC    RF,ZERO(,RJ)             NO. OF CHARS IN CPUID  @XA03965
         LA    RF,ONE(,RF)              ADD ONE FOR PREFIX     @XA03965
         BAL   RD,FREEPG                UNFIX CPUID            @XA03965
NOCPUID  EQU   *                                               @XA03965
         BCT   RCORE,INVFREE            RELEASE NEXT LIST        X01004
         L     RJ,DEBSIOA               ADDRESS OF START I/O APP X02004
         BAL   RD,FREEPG3               UNFIX APPENDAGE          X02004
         ICM   RF,AD,DCBSCTAD           ADDRESS OF SCT           X01004
         ICM   RF,HI,DEBEOEA+THREE      LENGTH OF SCT            X02004
         BAL   RD,FREEPG1               UNFIX SCT                X01004
         TM    DCBPCI,PCI               PCI PRESENT              X01004
         BO    FREEDCB                  NO, BRANCH              OY03847
         L     RJ,DEBPCIA               ADDRESS OF PCI           X02004
         BAL   RD,FREEPG3               UNFIX PCI APPENDAGE      X02004
FREEDCB  EQU   *                                                 X01004
         LR    RJ,RDCB                  DCB ADDRESS              X01004
         SR    RF,RF                    CLEAR REG              @ZA06161
         IC    RF,DCBILCT               NUMBER OF ELEMENTS IN  @ZA06161
*                                        INVITATION LIST       @ZA06161
         SLL   RF,TWO                   INVITATION LIST LENGTH @ZA06161
         LA    RF,DCBEND(0,RF)          LENGTH OF DCB          @ZA06161
         BAL   RD,FREEPG                FREE DCB                 X01004
         LR    RF,RDEB                  COPY DEB ADDRESS         Y01004
         ICM   RF,HI,DEBLNGTH           DOUBLE WORD LENGTH OF DEBY01004
         BAL   RD,FREEPG1               PAGE FREE THE DEB        Y01004
         L     RF,CVTPTR                ADDRESS OF CVT           Y02027
         USING CVTD,RF                  CVT ADDRESSABILITY       Y02027
         TM    CVTTCMFG,LASTDCB         LAST TCAM DCB CLOSED     Y02027
         BNO   ENDLOAD1                 NO, BRANCH               X01004
         L     RJ,CVTAQAVT              ADDRESS OF TCX           Y02027
         USING IEDQTCX,RJ               TCX ADDRESSABILITY       Y02027
         SR    RCORE,RCORE              CLEAR FOR INSERT         X02004
         IC    RCORE,TCXTOTE            NUMBER OF TOTE ENTRIES   Y02027
         LM    RE,RF,TCXBUFA            ADDR AND LENGTH OF I/O   Y02027
*                                       TRACE, BUFFERS AND CPB'S X01004
         LR    RJ,RE                    COPY ADDRESS OF BUFFERS OY00541
         BAL   RD,FREEPG                UNFIX BFRS-TRACE AND CPB X01004
         L     RUCB,AVTRNMPT            ADDRESS OF TERMINAL NAME X02004
*                                         TABLE (TNT)            X01004
         SR    RF,RF                    CLEAR REG FOR INSERT     X01004
         IC    RF,TNTENLEN              LENGTH OF ENTRY          X01004
         LA    RE,THREE                                          X01004
         AR    RF,RE                    BUMP FOR TNT POINTERS    X01004
         LR    RJ,RF                    SAVE ENTRY LENGTH        X02004
         MH    RF,TNTLEN                MULTIPLY LENGTH OF ENTRY X01004
*                                         BY NUMBER OF ENTRIES   X01004
         LA    RF,TNTOFF(RF)            ADD TO LENGTH THE CORDE  X01004
*                                         BEFORE THE FIRST ENTRY X01004
         LR    RD,RCORE                 NUMBER OF TOTE ENTRIES   X02004
         MR    RD,RD                    ENTRIES TO FIX FOR TOTE  X02004
         AR    RF,RJ                    ADD TOTE TO TNT LENGTH   X02004
         LTR   RJ,RJ                    ANY TOTE ENTRIES        OY00512
         BNZ   TOTEYES                  YES, BRANCH             OY00512
         LA    RF,ONE(RF)               ADJUST TERM TABLE OFFSETOY00512
TOTEYES  EQU   *                                                OY00512
         LR    RJ,RUCB                  COPY TNT START ADDRESS   X02004
         AR    RF,RE                    ROUND TO WORD BOUNDARY   X01004
         SRL   RF,2                     SHIFT OUT 2 LO-ORD BITS  X01004
         SLL   RF,2                     SHIFT BACK               X01004
         LA    RCORE,0(RF,RJ)                                    X01004
         ICM   RCORE,ALL,0(RCORE)       GET ADDRESS OF TERMINAL  X01004
*                                         TABLE                  X01004
         BAL   RD,FREEPG                UNFIX TNT                X01004
         L     RF,0(RCORE)              ADDRESS OF END OF THE    X01004
*                                       TERMINAL TABLE AND QCBS  X01004
         LR    RUCB,RF                  SAVE ADDRESS OF SCBS     X01004
         SR    RF,RCORE                 GET LENGTH OF TERM TABLE X01004
         LR    RJ,RCORE                 ADDR OF TERMINAL TABLE   X01004
         L     RCORE,FOUR(RCORE)        ADDRESS OF THE NUMBER OF X01004
*                                         ENTRIES IN DEVICE      X01004
*                                         CHARACTERISTICS TABLE  X01004
         BAL   RD,FREEPG                UNFIX TERMINAL TABLE AND X01004
*                                         QUEUE CONTROL BLOCKS   X01004
         LH    RF,0(RCORE)              NUMBER OF ENTRIES IN     X01004
*                                         DEVICE CHARACTERISTICS X01004
*                                         TABLE                  X01004
         SLL   RF,TWO                  MULTIPLY BY 4 TO GET      X01004
*                                         LENGTH OF DCT          X01004
         LTR   RF,RF                    NO DEV CHAR TABLE      @YA03928
         BZ    NODEVC                   BRANCH IF YES          @YA03928
         L     RJ,AVTCSTCS              ADDRESS OF DCT           X01004
         BAL   RD,FREEPG                UNFIX DCT                X01004
NODEVC   EQU   *                                               @YA03928
         LR    RJ,RUCB                  ADDRESS OF SCBS          X01004
         LH    RF,TWO(RCORE)            SCB LGTH IN DOUBLEWORDS  X01004
         BAL   RD,FREEPG2               UNFIX SCB'S              X01004
         TM    AVTSCOPT,AVTCMBUF        COMMON BUFFER USED       X02004
         BZ    CKTSO                    NO, CHECK FOR TSO      @Z30X8TM
         L     RUCB,AVTCBQCB            ADDRESS OF MASTER QCB    X02004
         USING IEDCMB,RUCB                                       X02004
         L     RCORE,CMBFIRST-ONE       ADDRESS OF FIRST PREFIX  X02004
         LR    RJ,RUCB                  ADDR. OF QCB, STCB'S AND X02004
*                                       PREFIXES FOR COMMBUF     X02004
         L     RF,CMBLAST-ONE           ADDRESS OF LAST PREFIX   X02004
         LA    RF,PRELNG(,RF)           ADDR. END OF LAST PREFIX X02004
         SR    RF,RJ                    LENGTH OF QCB'S, ETC.    X02004
         BAL   RD,FREEPG                FREE COMMBUF CNTRL BLOCKSX02004
         LH    RTIOT,CMBDAREA           NUMBER OF DATA AREAS     X02004
         N     RTIOT,AVTCLRHI           FORCE POSITIVE           X02004
COMLOOP  EQU   *                                                 X02004
         LA    RE,EIGHT                 CONSTANT TO LOCATE IDA   X02004
         SR    RJ,RJ                    CLEAR FOR ICM            X02004
         ICM   RJ,AD,ONE(RCORE)         ADDRESS OF DATA AREA     X02004
         SR    RJ,RE                    ADJUST TO IDA LIST PTR   X02004
         L     RF,FOUR(RJ)              TOTAL LENGTH TO FIX      X02004
         TM    ZERO(RJ),CCWIDA          IDA TO BE USED           X02004
         BNO   COMLOOP2                 NO, FIX BUFFER           X02004
         L     RJ,ZERO(RJ)              ADDRESS OF IDA LIST      X02004
COMLOOP2 EQU   *                                                 X02004
         BAL   RD,FREEPG                FREE COMMBUF DATA AREA   X02004
         LA    RCORE,PRELNG(RCORE)      BUMP TO NEXT PREFIX      X02004
         BCT   RTIOT,COMLOOP            FIX NEXT DATA AREA       X02004
CKTSO    EQU   *                        CHECK PRESENCE OF TSO    X02004
         TM    AVTBIT1,AVTTSON          TSO OR MIXED ENVIOR.     X01004
         BZ    FREEPOOL                 NO, BRANCH             @G36XRTP
         ICM   RJ,ALL,AVTTSOPT          ADDR. OF TSINPUT QCB     X02004
         BZ    FREEPOOL                 BRANCH IF IT'S ZERO    @G36XRTP
         LA    RF,TSILEN                LENGTH TO FREE         @G36XRTP
         BAL   RD,FREEPG                PAGE FREE TSINPUT QCB    X02004
         L     RJ,AVTKA02               ADDRESS OF IEDQKA02     OY00451
         LTR   RF,RJ                    IS KA IN THE SYSTEM     OY00541
         BZ    NOKA                     NO, SKIP PAGE FREE      OY00541
         SH    RF,AVTHA4                ADJUST TO LENGTH        OY00451
         L     RF,ZERO(RF)              LENGTH TO PAGE FREE     OY00451
         BAL   RD,FREEPG                UNFIX IEDQKA02          OY00451
NOKA     EQU   *                                                OY00541
         LA    RF,AYZLNG                LENGTH OF IEDAYZ       @Z30X8TM
         L     RJ,AVTTSOPT              ADDRESS OF IEDAYZ      @Z30X8TM
         ICM   RJ,ALL,TSISCHED-IEDQTSI(RJ)  ADDRESS OF IEDAYZ   OY00541
         BZ    FREEPOOL                 SKIP PAGEFREE IF NO AYZ@G36XRTU
         BAL   RD,FREEPG                PAGE FREE IEDAYZ         X01004
         EJECT
************************************************************** @G36XRTP
*        FREEMAIN STORAGE FOR POOLED CONTROL BLOCKS            @G36XRTP
*               ( PLCB, SAT, SIB, RVT, NAT )                   @G36XRTP
************************************************************** @G36XRTP
FREEPOOL EQU   *                                               @G36XRTP
         ICM   RJ,ALL,AVTSAVTP          GET SAVT ADDRESS       @G36XRTP
         BZ    NOSAVT                   NO SAVT, SKIP FREEMAIN @G36XRTP
*                                       FOR POOL AND SAVT      @G36XRTP
         BM    FREEPLCB                 FREE PLCB'S AND SAVT   @G36XRTP
         LA    RF,SAVTVMSZ              SIZE OF SAVT IF VM     @G36XRTP
*                                       ONLY                   @G36XRTP
         B     FREEAVT                  FREE SAVT ONLY         @G36XRTP
FREEPLCB EQU   *                                               @G36XRTP
         L     RF,SAVTPOOL-IEDNSVTD(RJ) GET CONTROL BLOCK      @G36XRTP
*                                       POOL ADDRESS           @G36XRTP
         LH    RE,SAVTPLSZ-IEDNSVTD(RJ) GET NUMBER OF DOUBLE   @G36XRTP
*                                       WORDS IN POOL          @G36XRTP
         N     RE,AVTCLRHI              CLEAR HIGH ORDER       @G36XRTP
*                                       HALF-WORD              @G36XRTP
         SLL   RE,THREE                 MULTIPLY BY 8 FOR      @G36XRTP
*                                       NUMBER OF BYTES        @G36XRTP
         ICM   RE,HI,SP250              SUBPOOL 250            @G36XRTP
         FREEMAIN R,LV=(0),A=(1)        FREE CTL BLK POOL      @G36XRTP
         LA    RF,SAVTSIZE              GET LENGTH OF SAVT     @G36XRTP
FREEAVT  EQU   *                                                 X01004
         ICM   RJ,ALL,AVTSAVTP          GET SAVT ADDRESS       @G36XRYP
         BAL   RD,FREEPG                UNFIX SECONDARY AVT     OY00532
NOSAVT   EQU   *                                                OY00532
         LR    RJ,RAVT                  ADDRESS OF AVT           X01004
         LA    RF,AVTLNG                LENGTH TO UNFIX          X01004
         BAL   RD,FREEPG                UNFIX AVT                X01004
         EJECT
ENDLOAD1 EQU   *                                                 X01004
         L     RJ,FOUR(RWTGC)           ADDRESS OF NEXT ENTRY    X01004
         USING FORCORE,RJ               OPEN WORK AREA DSECT     Y02027
         XC    ZERO(FOUR,RWTGC),ZERO(RWTGC)  CLOSE COMPLETE      X01004
RELOOP   EQU   *
         LA    RWTGC,EIGHT(RWTGC)       BUMP   CURRENT WTG POINTER
         LA    RPARC,FOUR(RPARC)        LOAD THE POINTER TO THE NEXT
*                                         ENTRY IN THE DCB
*                                         PARAMETER LIST
         CLC   0(2,RWTGC),AMIDCNST      IS THIS EXECUTOR REQUIRED
*                                         AGAIN
         BE    RESTART                  YES, BRANCH TO BEGINNING
         CLC   0(2,RWTGC),CLOSEIDL      THIS CODE IS USED TO
         BL    RELOOP                   DETERMINE WHICH OF THE
         CLC   0(2,RWTGC),CLOSEIDH      CLOSE EXECUTORS TO GIVE
         BH    RELOOP                   CONTROL TO
         LR    RPARC,RPAR               INITIALIZE CURRENT DCB REG
         LA    RWTGC,32(RWTG)             AND WTG REGISTER
ZCHECK   EQU   *
         CLI   0(RWTGC),X'00'           IS THIS ENTRY COMPLETED
         BNE   XCTLRTNE                 NO, THEN BRANCH          S22024
         LA    RWTGC,EIGHT(RWTGC)       BUMP POINTER TO TEST FOR
         LA    RPARC,FOUR(RPARC)          COMPLETION OF THE NEXT
*                                         ENTRY
         B     ZCHECK                   TEST THE NEXT ENTRY      S22024
XCTLRTNE EQU   *                                                  *
         MODESET EXTKEY=DATAMGT         GET INTO KEY 5           Y02027
         SPACE 2
         LA    RJ,DXCCW12               LOAD THE ADDRESS OF THE  Y02027
*                                         LAST DOUBLE WORD IN THE
*                                         OPEN WORK AREA
         OI    TWOTWO(RWTG),NORLD       RESET LENGTH INDICATORS  X01004
         MVC   TWOFIV(TWO,RWTG),TWOSEV(RWTG) FOR NEXT LOAD TO 1K X01004
         MVC   6(TWO,RWTG),0(RWTGC)     MOVE ID TO NAME FIELD     *
         MVC   14(THREE,RWTG),TWO(RWTGC) MOVE TTR TO WTG TABLE
         XCTL  DE=(RWTG),SF=(E,(15))    TRANSFER CONTROL          *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE REMOVES THE AVT ADDRESS FROM        *
*        THE DISPATCHER PREFIX, AND FREEMAINS ANY LINE BUFFERS    *
*        AND/OR USER REQUESTED CROSS REFERENCE TABLE AFTER        *
*        DETERMINING THAT THERE ARE NO MORE DCB'S TO BE CLOSED    *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
LASTIME  EQU   *
         L     RF,CVTPTR                GET CVT ADDRESS          Y02027
         USING CVTD,RF                  CVT ADDRESSABILITY       Y02027
         OI    CVTTCMFG,LASTDCB         INDICATE THAT THE TCAM   Y02027
*                                         POINTER IN THE CVT IS TO
*                                         BE CLEARED
         B     SETDEB                   RETURN                   X01004
FREE2260 EQU   *                                                 X01004
         LR    RC,RF                    SAVE LCB SIZE            X01004
         L     RF,CVTPTR                ADDRESS OF CVT           Y02027
         USING CVTD,RF                  CVT ADDRESSABILITY       Y02027
         L     RF,CVTAQAVT              ADDRESS OF TCX           Y02027
         USING IEDQTCX,RF               TCX ADDRESSABILITY       Y02027
         L     RF,TCXATTEN              ADDR OF 2260 ATTEN RTN   Y02027
         BAL   RD,FREEPG1               UNFIX 2260 ROUTINE       X01004
         B     COPYSIZ1                 GO FREE LCB              X01004
FREEPG3  EQU   *                        FREE PAGE ENTRY FOR APP. X02004
         SH    RJ,AVTHA4                ADJUST TO LOAD START     X02004
         L     RF,ZERO(RJ)              LENGTH OF MODULE         X02004
         B     FREEPG                   PAGE FREE MODULE CORE    X02004
FREEPG1  EQU   *                                                 X01004
         LR    RJ,RF                    COPY ADDRESS TO UNFIX    X01004
         SRL   RF,HIGHBYTE              GET NUM OF DOUBLE-WORDS  X01004
FREEPG2  EQU   *                                                 X01004
         SLL   RF,THREE                 CONVERT TO BYTE LENGTH   X01004
FREEPG   EQU   *                                                 X01004
         LR    RE,RJ                    SAVE START ADDRESS       Y02027
         LA    RJ,ZERO(RF,RJ)           BUMP TO END ADDR + 1     Y02027
         LR    RF,RE                    SET START ADDRESS        Y02027
         PGFREE R,A=(1),EA=(15)         ISSUE PAGE FREE          Y02027
         BR    RD                       RETURN TO CALLER         X01004
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE INCREMENTS THE CROSS REFERENCE      *
*        TABLE ENTRY POINTER AND CHECKS TO SEE IF WE HAVE         *
*              PASSED THE LAST POSSIBLE ENTRY                     *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHKNEXT  EQU   *
         LA    RC,CRSFSIZE(RC)          INCREMENT THE CROSS
*                                         REFERENCE POINTER
         C     RC,FOUR(RF)              HAVE WE PASSED THE LAST
*                                         ENTRY IN THE TABLE
         BH    NEXTENTY                 YES, BRANCH
         B     COMPUCB                  CHECK THE NEXT ENTRY IN THE
*                                         TABLE
         EJECT
AVTLNG   EQU   X'500'                   AVT LENGTH TO FREE       X01004
AYZLNG   EQU   X'AF4'                   LENGTH OF IEDAYZ       @Z30X8TU
AD       EQU   7                        ICM/STCM MASK            X01004
HI       EQU   8                        ICM/STCM MASK            X01004
HIGHBYTE EQU   24                       SHIFT TO HIGH-ORDER BYTE X01004
SIXTEN   EQU   16                       OFFSET OF 16             X01004
INVSIZE  EQU   9                        CONTROL WORDS SIZE (8) +OY00530
*                                       DELIMITER SIZE (1)      OY00530
STATUS   EQU   3                        OFFSET OF STATUS BYTE INOY00530
*                                       INVITATION LIST CONTROL OY00530
*                                       WORD                    OY00530
INVEOT   EQU   X'80'                    EOT WAS SPECIFIED ON    OY00530
*                                       INVLIST MACRO           OY00530
ALL      EQU   15                       ICM/STCM MASK            X01004
ZERO     EQU   0                        OFFSET OF 0              X01004
TWOTWO   EQU   22                       OFFSET OF 22             X01004
NORLD    EQU   1                        NO RLD IN NEXT MOD.      X01004
TWOFIV   EQU   25                       OFFSET OF 25             X01004
TWOSEV   EQU   27                       OFFSET OF 27             X01004
PCI      EQU   X'0C'                    DCB PCI FLAGS            X01004
LCB3705  EQU   184                      PLCB SIZE                Y05330
ONE      EQU   1                        VALUE 1                  S22024
WAIT     EQU   1                        SVC WAIT
TWO      EQU   2                        VALUE TWO                S22024
THREE    EQU   3                        VALUE THREE              S22024
FOUR     EQU   4                        VALUE FOUR               S22024
EIGHT    EQU   8                        VALUE EIGHT              S22024
FIVE     EQU   5                        VALUE 5                 OY03305
BUFKEY   EQU   X'1A'                    BUFF TERM SCHED CODE   @XA03965
TYPE3    EQU   X'70'                    IBM TERM ADAPTER 3       Y02027
CRSFSIZE EQU   16                       CROSS REFERENCE POINTER  S22024
PURGE    EQU   16                       SVC PURGE
IOSUPAPP EQU   21                       IOS APPENDAGE            S22024
DSORG    EQU   27                       DCB DSORG OFFSET         S22024
IOBPTR   EQU   32                       OFFSET TO THE IOB
DEBPRFIX EQU   36                       LENGTH OF THE DEB PREFIX
OPTION   EQU   160                      OPTION                   S22024
GRAPHICS EQU   X'10'                    GRAPHICS DEVICE          S22024
LASTDCB  EQU   X'0F'                    LAST DCB                 S22024
DISKDCB  EQU   X'20'                    DISK DCB TYPE            S22024
LINEDCB  EQU   X'40'                    LINE DCB TYPE            S22024
POST     EQU   X'40'                    POST FLAG FOR LCB POST  SA60820
DCB3705  EQU   X'04'                    DSORG = TR               S22024
DIAL     EQU   X'90'                    DIAL DEVICE              S22024
XFB      EQU   X'FB'                    USED TO TURN OFF UCB BITSA64788
LIMIT    DC    H'500'                   5 SECOND DELAY         @SA70907
THRESHL  DC    H'12'                    LEN THRESH ERRMSG AREA @OZ24288
         DS    0F
SP250    DC    X'FA'                    SUBPOOL 250              X01004
CCWIDA   EQU   4                        INDIRECT ADDRESSING FLAG X02004
PRELNG   EQU   12                       LENGTH OF COMMBUF PREFIX X02004
DISABLE  DC    X'2F00000020000001'      DISABLE CCW              S21903
CLOSEIDL DC    C'0B'                    ID OF LAST CLOSE MODULES S21903
CLOSEIDH DC    C'0G'                    ID OF LAST CLOSE MODULES S21903
AMIDCNST DC    C'36'                    ID FOR THIS EXECUTOR     Y02027
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
         DCBD  DSORG=TX
DCBEND   EQU   DCBINVLI-IHADCB          END OF DCB             @ZA06161
         TTNTD                                                   X01004
         EJECT
         TDEBD
         EJECT
         TTCXD                                                   Y02027
         EJECT
         TTCBD
         EJECT
FORCORE  DSECT
         IECDSECT
         TAVTD
         EJECT
         TLCBD
         EJECT
         TTSID                                                   X01004
         EJECT                                                   Y02027
CVTD     DSECT                          CVT DSECT                Y02027
         CVT                            CVT                      Y02027
         IEDCMB                                                  X02004
         END
