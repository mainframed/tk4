1943     TITLE 'IGG01943-RESTART FROM ENVIRONMENT RECORDS'
IGG01943 CSECT                            *
* CHANGE ACTIVITY = AS FOLLOWS:            *
*A000000-999999                                                @Y16X5C0
*C113000,114100,114500,274000,280000,431000      *              SA51078
*A271000,271500,293005,293345,296500,301500,313100-313700.329800SA51078
*A377760,438600-458600,489900-490400,493100,494760-494770  *    SA51078
*D281000-290000,293312-293318,306000-310000,377420-377630  *    SA51078
*D432000-433000,436200,438600-478000,488400-488600        *     SA51078
*C348104-348110                                      *           Y06328
*A494780                                      *                  Y06328
*A258000,493800                                                 SA53610
*C114100,252000-254000                                          SA53610
*A293500                                                         A47151
*C114100,349000-357000,360000-362000,362720,370000,494000        A47151
*C370300,370600                                                  S21903
*D512000                                                         S21903
*A360200-360800,494750                                          SA57661
*C110000,113000,114000,137000,293312,293314,293316,293318,306000,S21903
*D148000                                                        SA57661
*C307000,308000,377570,392000,399000,503000,504000,507000,509000,S21903
*C510000,537000,501000,524000,525000,528000,086000,090000        S21903
*C020000-024000                                                  S21903
*D280000-290000,293312-293318,299000,306000-310000              SA51078
*D377420-377630,431000-433000,436200,469000,488400-488600       SA51078
*C113000,114100,114500                                          SA51078
*A377340-377355                                                 SA59171
*A274001-274002                                                 SA59179
*A377335                                                        SA68676
*A264000                                                        SA67099
*C267000                                                        SA67099
*A348098                                                       @YA04903
*A404000,407000,494000,494780                                  @XA05305
*C348300                                                       @XA05305
*C293110-293130                                                @YA05454
*A264000,265000                                                @ZA02079
*D264300-266000,278000-279000,347880-348200                    @Y17XACT
*C267000,321000                                                @Y17XACT
*A272500,274002,293450,377060,404000,404600,494795,487000      @Y17XACT
*C377120,377150,377340,377368,377390,377660                    @Y17XACA
*A377120,377660                                                @Y17XACA
*A492500,493100,493200,519000,                                 @G36XRCU
*C033000,035000,115230,388000,123500,484800                    @G36XRCU
*D404500-404800,406000,407100-407997,495000-507000             @G36XRCU
*A157000,259000,348240,374500,376000,377760,408000,494700      @OX16402
*C257000,259100,259160-259200,293060                           @OX16402
*D293430-316000 COPIED TO STMT 259000                          @OX16402
*D378000-399000 COPIED TO STMT 408000                          @OX16402
*A293405,492000                                                @OZ26495
*C293060                                                       @OZ26495
*C437400                                                       @OS80044
*A484400                                                       @OZ28713
*A329200                                                       @OZ28740
*C377590                                                       @OX21106
*A487420                                                       @OX16402
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*MODULE-NAME=IGG01943 (TCAM,CHECKPOINT/RESTART)                @Y17XACT
*                                                                     *
*DESCRIPTIVE-NAME=RESTART FROM ENVIRONMENT RECORDS                    *
*                                                                     *
*COPYRIGHT='NONE'                                                     *
*                                                                     *
*STATUS: VERSION 10.0                                          @Y17XACT
*                                                                     *
*FUNCTION:THIS MODULE USES THE CHECKPOINT ENVIRONMENT RECORD          *
*   SEGMENT(S) TO RECONSTRUCT THE MCP ENVIRONMENT AT RESTART TIME. IT *
*   TURNS ON THE RESTART IN PROGRESS FLAG IN AVTBIT2. IT DETERMINES   *
*   WHICH ENVIRONMENT RECORD TO USE BY SUBTRACTING THE VALUE OF THE   *
*   INTRO OPERAND 'RESTART=' FROM THE NUMBER OF THE CURRENT ENVIRON-  *
*   MENT RECORD.(THIS NUMBER IS MAINTAINED IN THE CHECKPOINT CONTROL  *
*   RECORD.) IF THE RESULT IS NOT POSITIVE,THE VALUE OF THE INTRO     *
*   OPERAND 'CPRCDS' (THE TOTAL NUMBER OF ENVIRONMENT RECORDS) IS     *
*   ADDED TO THE RESULT. IF THE TTR OF THE ENVIRONMENT RECORD(IN THE  *
*   CONTROL RECORD) IS ZEROED,THE RECORD HAS HAD A DISK ERROR; IN THIS*
*   CASE, THIS MODULE SETS ERROR INDICATORS IN THE                    *
*   CHECKPOINT/WORKAREA, SETS UP THE XCTL TO IGG01942 WHICH ISSUES    *
*   WTO ERROR MESSAGES. THE RESTART IS TERMINATED, AND NO CHECKPOINTS *
*   ARE TAKEN FOR THE DURATION OF THIS JOB.                           *
*   THIS MODULE IS BEING MODIFIED TO SUPPORT NEW TCAM 10       @Y17XACT
*   TTE INFORMATION.                                           @Y17XACT
*                                                                     *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IGG01943                                                     *
*    PURPOSE - SEE FUNCTION                                    @Y17XACT
*    LINKAGE - VIA XCTL                                        @Y17XACT
*                                                                     *
*INPUT: REGISTERS 2,5,6,7,8 CONTAIN THE FOLLOWING:                    *
*                                                                     *
*   2-ADDRESS OF THE CHECKPOINT WORK AREA                             *
*   5-ADDRESS OF THE BEGINNING OF THE WTG TABLE PREFIX         @G36XRCU
*   6-ADDRESS OF BEGINNING OF WHERE-TO-GO TABLE                       *
*   7-ADDRESS OF THE COPY OF THE CURRENT DCB                   @G36XRCU
*   8-ADDRESS OF CURRENT ENTRY IN WHERE-TO-GO TABLE                   *
*   THE CHECKPOINT DATA SET-THE FIRST RECORD IS A CONTROL RECORD      *
*     WHICH POINTS TO THE ENVIRONMENT,CKREQ,AND INCIDENT RECORDS.     *
*                                                                     *
*OUTPUT:                                                              *
*                                                                     *
*   REGISTERS 5 AND 6 ARE SAME AS INPUT                               *
*   REGISTERS 7 AND 8 ARE UPDATED TO THE NEXT ENTRIES                 *
*                                                                     *
*   CHECKPOINT DATA SET IS NOT CHANGED                                *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*                                                                     *
*        IECPCNVT-CONVERSION OF RELATIVE TRACK ADDRESS TO ABSOLUTE    *
*        IEDQTNT - CONVERT TTCIN TO TTE                        @Y17XACT
*        IGG019Q8 - READ SUBROUTINE                            @Y17XACT
*                 - MOVE DATA TO INVITATION LIST SUBROUTINE    @Y17XACT
*                                                                     *
*EXITS-NORMAL: THIS MODULE XCTLS TO THE NEXT OPEN MODULE IN THE       *
*   WHERE-TO-GO TABLE-IGG01944                                        *
*                                                                     *
*EXITS-ERROR:THIS MODULE ISSUES A WTO ERROR MESSAGE,CLEARS AVTCKGET TO*
*   ZERO AND XCTLS TO THE NEXT MODULE IN THE WHERE-TO-GO TABLE. THE   *
*   ONLY TIME THIS ERROR EXIT IS TAKEN IS WHEN NO ENVIRONMENT RECORD  *
*   CAN BE READ BECAUSE THEY ALL HAVE DISK ERRORS.                    *
*                                                                     *
*MACROS:                                                       @Y17XACT
*     XCTL,IEDHJN                                              @Y17XACT
*                                                              @Y17XACT
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   CVT                                                               *
*   AVT (AVTCKGET,AVTNCKPR,AVTVPRCD,AVTOPTPT,AVTCLRHI,AVTRNMPT,       *
*        AVTBIT3,AVTCKPTB)                                            *
*   CHECKPOINT WORK AREA                                              *
*   TCB                                                               *
*   DEB                                                               *
*   DCB                                                               *
*   QCB                                                               *
*   TERMINAL NAME TABLE                                               *
*   TERMINAL TABLE                                                    *
*   INVITATION LIST                                                   *
*                                                                     *
*ATTRIBUTES: REENTERABLE                                              *
*                                                                     *
*NOTES: THE OPERATION OF THS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS, BY REASSEMBLY, WILL   *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
*    RESTRICTIONS : NONE                                       @Y17XACT
*    REGISTER CONVENTIONS : SEE REGISTER ASSIGNMENTS           @Y17XACT
*    PATCH LABEL : ZAPAREA                                     @Y17XACT
*                                                              @Y17XACT
*MODULE TYPE: PROCEDURE                                        @Y17XACT
*    PROCESSOR: ASSEMBLER                                      @Y17XACT
*    MODULE SIZE: SEE EXTERNAL SYMBOL DICTIONARY               @Y17XACT
*                                                              @Y17XACT
***********************************************************************
         EJECT                                                 @Y17XACL
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0                        TTR
R1       EQU   1                        REGISTER EQUATE          S21903
R2       EQU   2                        ADDRESS OF CKPT WORK AREA
R3       EQU   3                        OPTION ENTRY LENGTH
RLCB     EQU   4                        ADDR OF LCB;ADDR OF INVLIST
R4       EQU   4                        REGISTER EQUATE          S21903
R5       EQU   5                        BEGINNING OF OPTION ENTRIES
R6       EQU   6                        ADDR OF TERMNAM TABLE ENTRY
RQCB     EQU   7                        ADDR OF QCB
R7       EQU   7                        REG 7                    S22024
RTERM    EQU   8                        ADDR OF TERMINAL ENTRY
R8       EQU   8                        REG 8                    S22024
RAVT     EQU   9                        ADDR OF AVT
RDCB     EQU   10                       ADDR OF DCB;INDEX-OPTION TBL
R10      EQU   10                       REG 10                   S22024
R11      EQU   11                       CURRENT LOCATION IN DISKRCD
R12      EQU   12                       BASE REG            0419 S21101
RBASE    EQU   12                       BASE REG
R13      EQU   13                       BRANCH REG
R14      EQU   14                       RCD LEN;TERMNAME LEN;INVLEN
R15      EQU   15                       OPT TABLE LOCATION;NO.TNT      X
                                        ENTRIES
         EJECT                                                 @Y17XACL
*STANDARD LINKAGE
         SPACE
         BALR  RBASE,0                  ESTABLISH BASE           S21903
         USING *,RBASE
         B     QMELD                    BRANCH AROUND CONST 0216 S21101
         DC    CL6'IGG01943'            MODULE ID               SA51078
QMEXX    DC    CL2'43'                  CONSTANT                 S21903
         IEDHJN ,                                                S22024
         SPACE 2
* LOAD SUBROUTINE FOR EXTRA PROCESSING                      0216 S21101
         SPACE
QMELD    DS    0H                       ALIGN                   SA51078
         SPACE
         USING IEDQCKPD,R2              BASE FOR CKPT AREA  0216 S21101
         USING IHADCB,RDCB                                       S22024
         USING FORCORE,R4               OPEN WORK AREA DSECT   @G36XRCU
         L     R4,FOUR(R8)              ADDR OF OPEN WORK AREA @G36XRCU
         L     RDCB,DXUDCBAD            ADDR OF CURRENT DCB    @G36XRCU
         DROP  R4                                              @G36XRCU
         L     R2,DCBIOBAD              GET CURRENT WORKAREA ADDRS22024
         SPACE 2                                               @Y17XACL
QME00    EQU   *
         SPACE
         USING IEDQAVTD,RAVT            BASE FOR AVT
         SPACE
         SPACE
         LM    R14,R11,CKPSAVE1+12      GET REGS INITIALIZED BY        X
                                        THE PREVIOUS MODULE
         MVC   0(TWO,R8),QME44          INITLZ FOR NORMAL EXIT @G36XRCU
         SR    R15,R15                  CLEAR FOR IC             S22024
         IC    R15,CKPTTRCT             INDEX TO CURRENT ENV TTR S22024
         EJECT                                                 @Y17XACL
*DETERMINE THE ENVIRONMENT RECORDS FROM WHICH TO RESTART
         SPACE
*R4 HAS THE VALUE OF CKPCPRCD
*R15 HAS THE VALUE OF CKPTTRCT
*R0 HAS THE VALUE OF AVTCKRST
         SPACE
QME01    EQU   *
         SR    R15,R0                   SUBTRACT DOWN LEVEL
         BP    QME03                    BRANCH IF POSITIVE
         IC    R0,CKPCPRCD              GET NO. OF CKPT ENV RCDS
QME02    EQU   *
         AR    R15,R0                   ADD NO. OF RCDS
         BC    12,QME02                 BRANCH IF NOT POSITIVE   S21903
QME03    EQU   *
         LA    R0,1                     GET DECREMENT VALUE
         LR    R1,R15                   SAVE
         MH    R1,QMEHA5                MULTIPLY BY LN OF TTR419 S21101
         LA    R13,CKPTTRT1-CKPTTRLN(R1) ADDRESS OF TTR     0503 S21101
         CLI   2(R13),0                 CHECK FOR DISK ERROR       0728
         BNE   QME04                    BRANCH IF NO ERROR         0728
         ST    R15,CKPTRMAD             SAVE REG
         BAL   R13,QME9805              WRITE ERROR MSG TO CONSOLE 0728
         LA    R0,1                     RESTORE REG
         LTR   R4,R4                    CHECK FOR ZERO RCDS LEFT   1217
         BZ    QME035                   BRANCH IF NO MORE RECDS    1217
         BCT   R4,QME01                 BRANCH IF MORE RCDS AVAILABL
QME035   EQU   *                                                   1217
         OI    CKPFLAGS,CKPERR          INDICATE UNRECOVERABLE ERR 0819
         BAL   R13,QME9806              LOAD ID FOR NEXT MODULE    0208
         B     QME87                    XCTL TO NEXT MODULE        0208
QME04    EQU   *
         LTR   R4,R4                    CHECK FOR LAST ENV  0422 S21101
         BZ    QME035                   BRANCH IF LAST RCD  0422 S21101
         BCTR  R4,0                     SUBTRACT 1 FROM COUNT OF RC1022
         ST    R13,CKPCTTRA             SAVE ADDR OF TTR
         STM   R14,R4,CKPSAVE1+12       SAVE REGS FOR POSITION     1022
         MVC   CKPTRMAD+1(3),0(R13)     PUT ON WORD BOUNDARY
         MVC   CKPSECLT,3(R13)          SAVE TRACK DATA LN  0419 S21101
         L     R0,CKPTRMAD              GET TTR OF CURRENT ENV RCD
         BAL   R13,QME8905              READ RECORD                1022
         NI    CKPFLAGS,AVTEFF-CKPOPNEN  SET FOR QCB SCAN      @OX16402
         EJECT                                                 @Y17XACL
         USING IEDQCDRD,R11
*INITIALIZE FOR LOOP THROUGH TERMNAME TABLE
         SPACE
QME17    EQU   *
         USING IEDQTNTD,R15             SET UP BASE FOR TERM0208 S21101
         LA    R6,ONE                   FIRST OFFSET IN TNT 0208 S21101
         L     R15,AVTRNMPT             NAME TABLE          0208 S21101
         SPACE 3
*BEGINNING OF LOOP THROUGH TERMNAME TABLE
         SPACE
QME20    EQU   *
         LR    R1,R6                    OFFSET FOR THIS TERM0208 S21101
         LR    R7,R0                    SAVE TTR REG        0408 S21101
         BALR  R14,R15                  GET ADDRESS OF ENTRY0208 S21101
         LR    R0,R7                    RESTORE TTR         0408 S21101
         LR    R8,R1                    USE THIS AS BASE    0208 S21101
         LA    R14,QME52                SET UP BRANCH ADDR  0208 S21101
         USING IEDNTRM,R8               BASE FOR TERM ENTRY    @Y17XACT
         SH    R8,TRMBCKUP              POINT TO NEG PREFIX    @Y17XACT
         L     R7,TRMDESTQ-1            ADDRESS OF QCB             1109
         USING IEDQQCB,R7               BASE FOR QCB               1109
         SPACE 3
*CHECK TYPE OF TERMINAL ENTRY. UPDATE QCB'S AND INVITATION LISTS
         SPACE 1
         TM    TRMDSORG,TRMLGB          IS THIS A LINE GROUP     S22024
         BCR   ONE,R14                  YES, HAS NO QCB          S22024
         SPACE
         TM    TRMSTATE,TRMLIST         IS THE LIST BIT ON      SA53610
         BNO   QME22                    IF NOT, RESTORE ENTRY   SA53610
         TM    TRMSTATE,TRMLOG          IS THIS LOGTYPE         SA53610
         BCR   NOTONES,R14              IF NOT, DO NOT RESTORE  SA53610
         EJECT                                                 @Y17XACL
QME22    EQU   *                                               @OX16402
         TM    CKPFLAGS,CKPOPNEN        TERMINAL SCAN          @OX16402
         BO    QME2201                  YES, SKIP QCB SCAN     @OX16402
         SPACE 3                                               @OX16402
* THE FOLLOWING INSTRUCTIONS HAVE BEEN MOVED TO UPDATE THE     @OX16402
* QCB FIELDS BEFORE THE TERMINAL ENTRY FIELDS. THIS IS FOR     @OX16402
* RESTART SO THAT IT CAN BE SURE THAT THE SEQUENCE NUMBER HAS  @OX16402
* BEEN UPDATED TO WHAT THE DISK POINTERS INDICATE.             @OX16402
*RESTORE MASTER QCB FIELDS
         SPACE
QME34    EQU   *                                                   1106
         TM    TRMSTATE,TRMPROC         PROCESS ENTRY?         @Y17XACT
         BO    AROUND5                  YES, BR AROUND.        @Y17XACT
         TM    TRMSTATE,TRMPREF         3705 ENTRY??           @Y17XACT
         BNO   AROUND5                  NO, BR AROUND.         @Y17XACT
         CLI   TRMTYPE,TRMSSCP          SSCP ENTRY   ??        @Y17XACT
         BE    QME52                    YES, NO PROCESSING *   @Y17XACT
AROUND5  EQU   *                                               @Y17XACT
         L     R7,TRMDESTQ-1            ADDRESS OF QCB             1109
         L     R10,QCBDCBAD-1           ADDRESS OF DCB FOR LINE    1109
         SR    R4,R4                    CLEAR                      1109
         IC    R4,QCBRELLN              RELATIVE LINE NUMBER       1109
         BCTR  R4,0                     DECREMENT BY ONE         A47151
         SLL   R4,2                     MULTIPLY BY 4              1109
         TM    QCBDSFLG,QCBDISK         CHECK QUEUE TYPE           1106
         BZ    QME52                    BRANCH IF CORE ONLY    @OX16402
         TM    QCBFLAG,QCBCKPT          CHECK FOR QCB ALREADY          X
                                        PROCESSED
         BCR   ONE,R14                  BRANCH IF PROCESSED 0208 S21101
QME3405  EQU   *                                                SA51078
         OI    QCBFLAG,QCBCKPT          TURN ON PROCESSED BIT
         MVC   CKPTRMAD(ONE),0(R11)     GET QCB DELIMITER      @OX16402
         MVC   QCBMSGCT(CKPMCTLN),ONE(R11)  UPDATE MSG CNT     @OX16402
         MVC   QCBQBACK(CKPQBKLN),CKPMCTLN+ONE(R11)  UPDATE    @OX16402
*                                         QBACK POINTER        @OX16402
         LA    R11,CKPMQBLN(R11)        LEN MASTER QCB FIELDS  @OX16402
         BAL   R13,IEDQME89             CHECK FOR END OF RCD   @OX16402
         B     QME3405                  RESTORE IF IN NEXT SEG @OX16402
         LA    R13,QME00                SET ERROR RETURN       @OX16402
         CLI   CKPTRMAD,CKPQDELM        VALID QCB              @OX16402
         BNE   QME9805                  INCR DISK ERROR CNT    @OX16402
         SPACE 3
*BEGINNING OF LOOP THROUGH PRIORITY LEVEL QCB'S
         SPACE
QME35    EQU   *
         MVC   QCBDNHDR(CKPQCBLN),0(R11)   UPDATE QCB POINTERS
         LA    R11,CKPQCBLN(0,R11)      MOVE TO NEXT FIELD IN RCD
         BAL   R13,IEDQME89             CHECK FOR END OF RECORD
         B     QME35                    RESTORE IF IN NEXT SEG  SA51078
QME3504  EQU   *                                                SA51078
         MVC   QCBPQBCK(CKPQBKLN),0(R11)                        SA51078
*                                       SET PRI LEVEL QBACK PTR SA51078
         LA    R11,CKPQBKLN(R11)        UPDATE FIELD PTR        SA51078
         BAL   R13,IEDQME89             CHECK FOR EMD OF RECORD SA51078
         B     QME3504                  RESTORE IF IN NEXT SEG  SA51078
         CLI   QCBPRIPQ,0               CHECK FOR 0 PRIORITY
         LA    RQCB,QCBPSIZE(0,RQCB)    MOVE TO NEXT PRIORITY QCB
         BNE   QME35                    BRANCH IF NOT LAST
         B     QME52                    CHECK NEXT TNT ENTRY   @OX16402
         SPACE 3                                               @OX16402
QME2201  EQU   *                                               @OX16402
         MVC   CKPTRMAD(CKPDELLN),0(R11) SAVE DELIMITER     0512 S21101
         MVC   TRMSTATE(CKPTRMLN),CKPDELLN(R11) UPDATE TERM 0208 S21101
         LA    R11,CKPTRMLN+CKPDELLN(R11)  ADD LENGTHS         @ZM47956
         BAL   R13,IEDQME89              CHECK FOR END OF RECORD
         B     QME22                    RESTORE IF IN NEXT SEG  SA51078
         LA    R13,QME00                SET ERROR RETURN        SA51078
         CLI   CKPTRMAD,CKPDELMT        IS THIS A GOOD TERM 0512 S21101
         BNE   QME9805                  INCR DISK ERROR CNTR *  SA51078
         TM    TRMSTATE,TRMPROC         PROC OR LOG TYPE       @Y17XACT
         BO    AROUND                   YES,NO QCB PROCESSING  @Y17XACT
         TM    TRMSTATE,TRMHELDN        CHECK FOR INTERCEPTED  @Y17XACT
         BZ    AROUND                   BR IF NOT INTERCEPTED  @Y17XACT
         TM    QCBFLAG,QCBTERMQ         CHECK QUEUEING TYPE    @Y17XACT
         BZ    AROUND                   BR IF QUEUEING BY LINE @Y17XACT
         OI    QCBLINK+2,QCBTRMHO       MARK QCB HELD-LINE     @Y17XACTX
                                        OPEN WILL MOVE QCBSTAT @Y17XACT
AROUND   EQU    *                                              @Y17XACT
         TM    TRMSTATE,TRMLOG          PROCESS ENTRY           SA59179
         BM    QME23                    YES,UPDATE FIELDS       SA59179
         TM    TRMSTATE,TRMPREF         3705 RESOURCE?         @Y17XACT
         BO    QME3705                  YES,GO TO SPECIAL RTN  @Y17XACT
         TM    TRMSTATE,TRMSNGLE        SINGLE ENTRY ?         @Y17XACT
         BNZ   QMEB                     NO,DONT RESTORE        @YM07342
QMEA     EQU   *                                               @Y17XACT
         MVC   TRMSENSE(CKPSENSE),0(R11)                       @Y17XACT
*                                       RESTORE SENSE          @Y17XACT
         LA    R11,CKPSENSE(R11)        ADD LENGTHS            @Y17XACT
         BAL   R13,IEDQME89             CHK FOR END OF REC     @Y17XACT
         B     QMEA                     RESTORE FROM NEXT SEG  @Y17XACT
QMEB     EQU   *                                               @Y17XACT
         TM    QCBDSFLG,QCBDISK         DISK QUEUES?           @Y17XACT
         BZ    QME25                    BR IF CORE Q ONLY      @Y17XACT
QME23    EQU   *                                                SA51078
         MVC   TRMINSEQ(CKPSEQLN),0(R11) UPDATE SEQ FIELDS
         LA    R11,CKPSEQLN(0,R11)      ADD LENGTH OF SEQ FIELDS
         BAL   R13,IEDQME89             CHECK FOR END OF RCD
         B     QME23                    RESTORE IF IN NEXT SEG  SA51078
         EJECT                                                 @Y17XACL
*RESTORE OPTION FIELDS EXCEPT THOSE DEFINED AS ADDRESS TYPE CONSTANTS
         SPACE
QME25    EQU   *                                                   1106
         TM    TRMSTATE,TRMOPTFN        CHECK FOR  OPTIONS USED    1106
         BZ    QME36                    BRANCH IF NOT USED     @OZ26495
         SPACE
         SR    R1,R1                    CLEAR INDEX                1106
         SR    R3,R3                    CLEAR COUNT OF OPTION FIELD1106
         IC    R3,TRMOPNO               GET COUNT OF OPTION FIELDS 1106
         LH    R10,TRMOPTBL             GET ENTRY OFFSET       @YA05454
         N     R10,AVTCLRHI             CLEAR HI HALF          @YA05454
         L     R7,AVTOPTPT              GET OPT TBL ADDR       @YA05454
         AR    R10,R7                   ADD OPT TABLE ADDR     @YA05454
         L     R7,4(,R7)                GET OPT CSECT TBL ADDR @YA05454
         SPACE 3
*BEGINNING OF LOOP THROUGH OPTION FIELDS FOR THIS TERMINAL ENTRY
         SPACE
QME27    EQU   *                                                   1106
         SR    R5,R5                    K CLEAR LENGTH OF FIELD    1106
         SR    R13,R13                  CLEAR OFFSET REG           1106
         LR    R4,R10                   ADDR OF OPTIONS FOR TERM   1106
         IC    R13,TRMOPT(R1)           ADDR OF OPTION FIELD       1106
         CH    R13,QMENOPT              CHECK FOR UNUSED ENTRY     1106
         BE    QME31                    BRANCH IF UNUSED           1106
         AR    R4,R13                   ADDRESS OF OPTION FIELD    1106
         IC    R5,0(,R7)                GET LENGTH OF FIELD        1106
         CLI   1(R7),X'D0'              CHECK OPTION TYPE          1106
         BH    QME28                    BRANCH IF NOT ADDRESS-TYPE 1106
         CLI   1(R7),X'80'              CHECK OPTION TYPE          1106
         BH    QME31                    BRANCH IF ADDRESS TYPE     1106
QME28    EQU   *                                                   1106
         B     *+8                      ALIGN FOR RETURN BRANCH  S22024
QMENOPT  DC    H'255'                   COMP. FOR NO OPTION FIELDS22024
QMEHA5   DC    H'5'                     LENGTH OF ENV TTR        S22024
         EX    R5,QMEMOVE               RESTORE OPTION FIELD       1106
         LA    R11,1(R11,R5)            MOVE TO NEXT POSITION IN RD1106
         BAL   R13,QME89                CHECK FOR END OF RCD SEG   111W
         B     QME28                    RESTORE IF IN NEXT SEG  SA51078
QME31    EQU   *                                                   1106
         LA    R7,CKPOPLTL(,R7)         GET NEXT ENTRY IN OPT CHAR 1106
         LA    R1,1(,R1)                ADD 1 TO INDEX             1106
         BCT   R3,QME27                 SUBTRACT FROM COUNT OF OPT 1106
         SPACE
*END OF LOOP THROUGH OPTION FIELDS FOR THIS TERMINAL ENTRY
         EJECT                                                 @Y17XACL
         SPACE 3                                               @OZ26495
QME36    EQU *                                                 @OZ26495
         TM    TRMDEVFL,X60             DIAL DIGITS/ADDR CHAR? @OZ26495
         BZ    QME40                    NO, BRANCH             @OZ26495
         SR    R5,R5                    CLEAR REG              @OZ26495
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED     @OZ26495
         BNO   NOOPTS                   NO, BRANCH             @OZ26495
         LA    R1,TRMOPT                START OF OPTIONS       @OZ26495
         IC    R5,TRMOPNO               NUMBER OF OPTIONS      @OZ26495
         AR    R1,R5                    START OF DEVICE FIELDS @OZ26495
         B     CKBUF                    CHECK BUFSIZE          @OZ26495
NOOPTS   EQU   *                                               @OZ26495
         LA    R1,TRMOPNO               START OF DEVICE FIELDS @OZ26495
CKBUF    EQU   *                                               @OZ26495
         TM    TRMDEVFL,X80             BUFSIZE SPECIFIED      @OZ26495
         BNO   CKDIAL                   NO, BRANCH             @OZ26495
         A     R1,ADD3                  BUMP PAST BUFSIZE      @OZ26495
CKDIAL   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X40             DIAL DIGITS SPECIFIED  @OZ26495
         BNO   CKADDR                   NO, BRANCH             @OZ26495
QME37    EQU   *                                               @OZ26495
         ST    R11,CKPSAVE2+R11OFF      SAVE REG 11            @OZ26495
         IC    R5,0(R11)                SIZE OF DIAL DIGITS    @OZ26495
         LA    R11,ONE(R11,R5)          NEXT POSITION IN RECORD@OZ26495
         BAL   R13,QME89                CHECK - END OF RCD SEG @OZ26495
         B     QME37                    RESTORE IF IN NEXT SEG @OZ26495
         L     R11,CKPSAVE2+R11OFF      RESTORE REG 11         @OZ26495
         EX    R5,QME2MOVE              RESTORE DIAL DIGITS    @OZ26495
         LA    R11,ONE(R11,R5)          NEXT POSITION IN RECORD@OZ26495
         LA    R1,ONE(R1,R5)            BUMP PAST DIAL DIGITS  @OZ26495
CKADDR   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X20             ADDR CHAR SPECIFIED    @OZ26495
         BNO   QME40                    NO, BRANCH             @OZ26495
QME38    EQU   *                                               @OZ26495
         ST    R11,CKPSAVE2+R11OFF      SAVE REG 11            @OZ26495
         IC    R5,0(R11)                SIZE OF DIAL DIGITS    @OZ26495
         LA    R11,ONE(R11,R5)          NEXT POSITION IN RECORD@OZ26495
         BAL   R13,QME89                CHECK - END OF RCD SEG @OZ26495
         B     QME38                    RESTORE IF IN NEXT SEG @OZ26495
         L     R11,CKPSAVE2+R11OFF      RESTORE REG 11         @OZ26495
         EX    R5,QME2MOVE              RESTORE ADDR CHAR      @OZ26495
         LA    R11,ONE(R11,R5)          NEXT POSITION IN RECORD@OZ26495
*SET UP LCB STATUS IN THE QCB TO BE PICKED UP BY LINE OPEN         0626
         SPACE
QME40    EQU   *
         TM    TRMSTATE,X'20'           CHK FOR PROCESS OR LOG @Y17XACT
         BCR   ONE,R14                  BRANCH IF PROCESS   0208 S21101
         L     RQCB,TRMDESTQ-1          RESTORE ADDR OF MASTER QCB 0626
QME43    EQU   *                                                   0826
         TM    TRMSTATE,TRMPREF         3705 ENTRY?            @Y17XACT
         BO    QME3705D                 YES, SPECIAL PROC      @Y17XACT
         SPACE
         MVC   QCBLINK(CKPLCBLN),0(R11) SAVE LCBSTAT1,LCBSTAT2     0918
         L     R10,QCBDCBAD-1           ADDR OF DCB FOR LINE   @OZ28740
         MVC   DCBINTVL,CKPLCBLN(R11)   MOVE DCB INTERVAL TO DCB   1008
         LA    R11,CKPLCBLN+CKPDCBLN(,R11)  MOVE TO NEXT DISK POSIT1008
         BAL   R13,QME89                CHECK FOR END OF RCD SEG   1008
         B     QME43                    RESTORE IF IN NEXT SEG  SA51078
         TM    QCBLINK,LCBSENDN+LCBRECVN+LCBFREEN CHECK LINE STATUS0918
         BC    9,QME45                  BRANCH NOT MIXED-EITHER    0626X
                                        STOPPED OR NOT OPENED      0626
         MVI   QCBLINK,LCBRECVN         MARK LCB STAT RECEIVING    0626
         EJECT                                                 @Y17XACL
*UPDATE INVITATION LIST
         SPACE
QME45    EQU   *                                               @Y17XACL
         TM    CKPFLAGS,CKPSTAIN        CHECK FOR INV LISTS CKPTED
         BCR   CONDZERO,R14             BRANCH IF NOT TO BE 0208 S21101X
                                        CHECKPOINTED        0208 S21101
QME4503  EQU   *                                                 S22024
QME4505  EQU   *                                                 S22024
         L     R10,QCBDCBAD-1           ADDR OF DCB FOR LINE   @OX16402
         SR    R4,R4                    CLEAR                  @OX16402
         IC    R4,QCBRELLN              RELATIVE LINE NUMBER   @OX16402
         BCTR  R4,0                     DECREMENT BY ONE       @OX16402
         SLL   R4,2                     MULTIPLY BY FOUR       @OX16402
         ST    RBASE,CKPSAVE1           SAVE BASE FOR 1943     @XA05305
         L     RBASE,CKPSAVE1+Q8BASEOF  GET BASE FOR 19Q8      @XA05305
         BAL   R13,Q8INVCHK(,RBASE)     GO CHECK INVITATION LIS@XA05305
*                                                              @XA05305
         BR    R14                      BAD RETURN BR TO QME52 @XA05305
         SPACE
         LR    R13,R0                   SAVE TTR                 A47151
         SR    R0,R0                    CLEAR                    A47151
         SR    R1,R1                      REGISTERS              A47151
         IC    R0,INVENTS(,R4)          GET NO. ENTRIES IN LIST  A47151
         IC    R1,INVELEN(,R4)          GET LENGTH OF ONE ENTRY  A47151
         MR    R0,R0                    GET LENGTH OF ALL ENTRIES
         LR    R0,R13                   RESTORE TTR
         LA    R1,INVCNTRL(,R1)         ADD LEN OF CONTROL AREA  A47151
         TM    INVSTAT(R4),EOTBIT       IS IT EOT-FE (BSC)      SA57661
         BZ    QNK6406A                 NO, BRANCH              SA57661
         LA    R1,ONE(,R1)              ADD ADDITIONAL FOR EOT  SA57661
QNK6406A EQU   *                                                SA57661
         MVC   CKPTRMAD,INVCPUID(R4)    SAVE ADDRESS OF CPUID    A47151
         ST    R4,CKPSAVE1+4            SAVE ADDRESS               1217
QME46    EQU   *                                                   1014
         L     R3,CKPEXCP               BEGINNING ADDR OF DISK RCD 1014
         AH    R3,CKPBPERR              ADDR OF END OF RCD         1014
         SR    R3,R11                   REMAINING LENGTH           1014
         BNZ   QME47                    BRANCH IF NOT END          1015
         BAL   R13,QME8905              READ NEXT RCD SEGMENT      1022
         B     QME46                    GET LENGTH OF RCD SEGMENT  1022
QME47    EQU   *                                                   1014
         ST    RBASE,CKPSAVE1           SAVE BASE FOR 1943  0216 S21101
         L     RBASE,CKPSAVE1+8         GET BASE FOR IGG019Q8216 S21101
         BAL   R13,Q870(,RBASE)         BRANCH TO 19Q8           A47151
         LTR   R1,R1                    CHECK FOR REMAINDER OF LIST1022
         BP    QME46                    BRANCH IF STILL REMAINDER  1014
         L     R4,CKPSAVE1+4            RESTORE ADDR OF LIST BEGIN 1015
         OI    INVSTAT(R4),CKPSET2      MARK LIST PROCESSED      A47151
         TM    TRMDEVFL,X'02'           CHECK FOR BFRED TERMINAL   1014
         BZ    QME51                    BRANCH IF NOT BFRED TERM   1014
         NI    INVSTAT(R4),X'FF'-ONE    TURN OFF AUTOPOLL BIT    S21903
         BR    R14                      DONT RESTORE CPU ID 0208 S21101
QME51    EQU   *                                                   1014
         MVC   INVCPUID(INVIDLEN,R4),CKPTRMAD RESTORE CPUID ADDR S21903
         EJECT                                                 @Y17XACL
QME52    EQU   *                                                   1014
IEDQME52 EQU   *
         LA    R6,ONE(,R6)              GET NEXT OFFSET     0208 S21101
         L     R15,AVTRNMPT             NAME TABLE          0507 S21101
         CH    R6,TNTLEN                CHECK FOR END OF TNT0208 S21101
         BNH   QME20                    BRANCH IF NOT       0208 S21101
         TM    CKPFLAGS,CKPOPNEN        TERM SCAN              @OX16402
         BO    ENDLOOP                  YES, MOVE AVT DATA     @OX16402
         OI    CKPFLAGS,CKPOPNEN        SET FOR TERM SCAN      @OX16402
         B     QME17                    GO THRU TNT AGAIN      @OX16402
         SPACE
*END OF LOOP THROUGH TERMNAME TABLE
ENDLOOP  EQU   *                                               @OX16402
         NI    CKPFLAGS,AVTEFF-CKPOPNEN   TURN OFF BIT         @OX16402
         SPACE 3
* UPDATE SIGNIFICANT AVT FIELDS
         SPACE
         USING CKPAVT,R11               AVT CHECKPOINT FIELDS  @Y17XACA
QME60    EQU   *
         MVC   AVTOPCON,CKPOPCON        OP. CONTROL TERMINAL   @Y17XACA
         MVC   AVTOPCIN,CKPOPCIN        PRI OP/CNT TERM TTCIN  @Y17XACA
         MVC   AVTINTLV,CKPINTLV        SYSTEM INTERVAL        @Y17XACA
         TM    AVTBIT1,AVTDISKN         DISK AVT
         BZ    QME64                    BRANCH IF NO
         NI    AVTBIT3,AVTEFF-AVTRFULN  RESET REUS FULL FLAG    SA68676
         TM    CKPBIT1,AVTRFULN         IN SLOWDOWN            @Y17XACA
         BZ    QME61                    BRANCH IF NO            SA59171
         OI    AVTBIT3,AVTRFULN         SET SLOW DOWN           SA59171
QME61    EQU   *                                                SA59171
         NI    AVTBIT4,AVTEFF-AVTRUFTN  RESET REUS ACTIVE AT CKPSA51078
         TM    CKPBIT2,AVTREUSN         WAS REUS TASK ACTIVE AT@Y17XACA
*                                       CHECKPOINT              SA51078
         BZ    QME62                    BRANCH IF NO            SA51078
         OI    AVTBIT4,AVTRUFTN         SET REUS ACTIVE AT CKPT SA51078
QME62    EQU   *                                                SA51078
         MVC   AVTNADDR(8),CKPNADDR     DISK QUEUE POINTERS    @Y17XACA
         MVC   AVTLODPT,CKPLODPT        RESTORE REUS LODPT FIEL@Y17XACA
         TM    CKPSUBT,AVTSUBON+AVTSUBPT  SUBTASK TRACE OR POST@OX21106
*                                         TRACE SPECIFIED      @OX21106
         BZ    NOTRACE                  NO, RESTORE AVTIOTR    @OX21106
         NC    AVTDISTR(FOUR),AVTDISTR  DOES TRACE TABLE EXIST @OX21106
         BZ    NOTRACE                  NO, DON'T RESTORE      @OX21106
         MVC   AVTSUBT(ONE),CKPSUBT     RESTORE AVTSUBT        @OX21106
NOTRACE  EQU   *                                               @OX21106
         MVC   AVTIOTR(ONE),CKPIOTR     RESTORE AVTIOTR        @OX21106
QME64    EQU   *                                                   0208
         LA    R11,CKPAVTLN(0,R11)      UPDATE DISK RCD POINTER    0208
         BAL   R13,QME89                TEST FOR END OF SEGMENT    0209
         B     QME60                    START OVER AGAIN ON AVT    0208
         B     QME87                    XCTL TO NEXT MODULE    @OX16402
         EJECT                                                 @Y17XACL
         SPACE 3
*TRANSFER CONTROL TO NEXT EXECUTOR
         SPACE
QME879   EQU   *
         LA    R15,CKPGETML             ADDR OF PARM LIST
         MVC   6(2,R6),0(R8)            MOVE MODULE ID TO WTG TABLE
         XCTL  DE=(R6),SF=(E,(15))
         EJECT                                                 @Y17XACL
*PREPARE TO XCTL TO NEXT MODULE
         SPACE
QME87    EQU   *
         LM    R14,R11,CKPSAVE1+12      RESTORE REGS
QME876   EQU   *
         LA    R8,8(0,R8)               INCREMENT CURRENT WTG ENTRY
         LA    R7,4(0,R7)               INCREMENT CURRENT DCB
         CLC   ZERO(TWO,R8),AMIDCNST    IS THIS EXECUTOR NEEDED  Y02027
*                                         AGAIN                  Y02027
         BE    QMELD                    YES, RETURN TO PROCESS ITS22024
         CLC   0(2,R8),QME0S            CHECK FOR END OF TABLE
         BNE   QME876                   BRANCH IF NOT END
         LR    R7,R5                    RESET PARM LIST ADR      S21903
         LA    R8,32(R6)                RESET WTG TABLE ADDR
QME877   EQU   *
         CLI   0(R8),0                  CHECK FOR ZERO ENTRY
         BNZ   QME879                   BRANCH IF NOT ZERO
         LA    R8,8(0,R8)               ADDR OF NEXT WTG ENTRY
         LA    R7,4(0,R7)               ADDR OF NEXT DCB
         B     QME877                   BRANCH                   S21903
*SUBROUTINE TO CHECK TO SEE IF THE END OF A TOTAL RECORD SEGMENT
*HAS BEEN REACHED; IF SO, READ THE NEXT RECORD.
         SPACE
QME89    EQU   *                                                   0626
IEDQME89 EQU   *
         ST    R15,CKPSAVE1             SAVE REG
         L     R15,CKPEXCP              GET BEGINNING OF RECORD
         AH    R15,CKPBPERR             ADD RECORD LENGTH
         CR    R11,R15                  COMPARE RECORD POSITION
         L     R15,CKPSAVE1             RESTORE REG
         BNH   GOODRTN(,R13)            IF MORE RECORD,RETURN   SA51078
         SPACE 3
*SUBROUTINE TO READ A RECORD AND UPDATE TTR (IN R0) TO NEXT RECORD.
         SPACE
QME8905  EQU   *                                                   1022
QME90    EQU   *                                                   1014
IEDQME90 EQU   *
         STM   R0,R14,CKPSAVE2          SAVE REGS              @OS80044
         L     R12,CKPSAVE1+8           BASE FOR IGG019Q8   0419 S21101
         BAL   R14,28(R12)              BRANCH TO 19Q8-READ 0419 S21101
         B     QME00                    ERROR RETURN START OVER SA51078
         L     R14,CKPSAVE2+R14OFF      RESTORE R14             SA51078
         BR    R13                      RETURN TO CALLING RTN   SA51078
         SPACE 3
*SUBROUTINE TO INCREMENT DISK ERROR COUNT SO THAT ERROR MSGS CAN BE1109
*WRITTEN LATER BY IGG01942
         SPACE
QME9805  EQU   *                                                   0728
         IC    R1,CKPERRCT              PICK UP ERROR COUNT        1109
         LA    R1,1(,R1)                ADD 1 TO COUNT             1109
         STC   R1,CKPERRCT              RESTORE COUNT              1109
         CLI   CKPERRCT,ONE             FIRST ERROR            @OZ28713
         BNE   NOTFIRST                 NO, BRANCH             @OZ28713
         STM   R0,R15,AVTSAVE1+8        SAVE REGS FOR IGG01942 @OZ28713
         L     R8,CKPEXCP               BEGINNING OF RECORD    @OZ28713
         MVC   AVTSAVE1(FOUR),FOUR(R8)  SAVE TIME OF RECORD    @OZ28713
         MVC   AVTSAVE1+8(ONE),CKPTRMAD SAVE FIELD             @OZ28713
NOTFIRST EQU   *                                               @OZ28713
QME9806  EQU   *
         L     R8,CKPSAVE1+52           SET UP FOR RETURN TO       0208
         MVC   0(TWO,R8),QME42          ERROR MODULE           @G36XRCU
         BR    R13                      RETURN                     0728
         SPACE
*END OF SUBROUTINE
         EJECT                                                 @Y17XACL
QME3705  EQU   *                        PROCESS 3705 TTE       @Y17XACT
         CLI   TRMTYPE,TRMLUNT          LU?                    @Y17XACT
         BE    QME3705A                 YES,VALID QCB          @Y17XACT
         CLI   TRMTYPE,TRMPSNA          PRESNA TERM?           @Y17XACT
         BE    QME3705A                 YES, VALID QCB         @Y17XACT
         CLI   TRMTYPE,TRMCTERM         DIAL TERM?             @Y17XACT
         BNE   QME3705B                 NO, NO VALID QCB       @Y17XACT
QME3705A EQU   *                                               @Y17XACT
         TM    QCBDSFLG,QCBDISK         DISK QUEUEING ?        @Y17XACT
         BZ    QME3705B                 NO, BRANCH             @Y17XACT
QME3705C EQU   *                                               @Y17XACT
         MVC   TRMINSEQ(CKPSEQLN),0(R11) RESTORE IN/OUT SEQ    @Y17XACT
         LA    R11,CKPSEQLN(R11)        ADD LENGHT             @Y17XACT
         BAL   R13,IEDQME89             CHK END OF SEQ         @Y17XACT
         B     QME3705C                 RESTORE FROM NEW SEG   @Y17XACT
         EJECT                                                 @Y17XACL
QME3705B EQU   *                                               @Y17XACT
         USING CKPNRES,R11              CKP DSECT              @Y17XACT
         MVC   TRMSUBST,CKPSUBST        RESTORE SUBSTRUCT      @Y17XACT
         MVC   TRMCOHRT,CKPCOHRT        RESTORE COHORT PTR     @Y17XACT
         SPACE 1                                               @Y17XACL
         NI    TRMBYTE2,X'FF'-TRMREMB   CLEAR REMEMBER BIT     @Y17XACL
         TM    CKPNFLG,CKPREMB          REMB BIT SET           @Y17XACT
         BZ    AROUND1                  NO ,DONT RESTORE       @Y17XACT
         OI    TRMBYTE2,TRMREMB         RESTORE REMEMBER BIT   @Y17XACT
         SPACE 1                                               @Y17XACL
AROUND1  EQU   *                                               @Y17XACT
         TM    CKPFLAGS,CKPSTAIN        INVITATION LISTS CKPTED@Y17XACL
         BO    CKPTINV                  YES, BRANCH            @Y17XACL
         CLI   TRMTYPE,TRMPSNA          PRE-SNA TERMINAL       @Y17XACL
         BE    AROUND2                  YES, SKIP RSACT CKPT   @Y17XACL
CKPTINV  EQU   *                                               @Y17XACL
         NI    TRMBYTE2,X'FF'-TRMRSACT  CLEAR ACTIVE BIT       @Y17XACL
         TM    CKPNFLG,CKPRSACT         ACTIVE BIT SET         @Y17XACT
         BZ    AROUND2                  NO, DONT RESTORE       @Y17XACT
         OI    TRMBYTE2,TRMRSACT        RESTORE ACTIVE BIT     @Y17XACT
         SPACE 1                                               @Y17XACL
AROUND2  EQU   *                                               @Y17XACT
         TM    TRMSTATE,TRMLINE         IS THIS A LINE ENTRY   @Y17XACL
         BZ    AROUND3                  NO, BRANCH             @Y17XACL
         NI    TRMLINK,X'FF'-TRMEPMOD   CLEAR EP MOD BIT       @Y17XACL
         TM    CKPNFLG,CKPEPMOD         EPMOD BIT SET          @Y17XACT
         BZ    AROUND3                  NO, DONT RESTORE       @Y17XACT
         OI    TRMLINK,TRMEPMOD         RESTORE EP MOD BIT     @Y17XACT
         SPACE 1                                               @Y17XACL
AROUND3  EQU   *                                               @Y17XACT
         CLI   TRMTYPE,TRMLUNT          IS THIS AN LU ENTRY    @Y17XACL
         BNE   AROUND4                  NO, BRANCH             @Y17XACL
         NI    TRMLU,X'FF'-TRMLULOG     CLEAR LU LOG BIT       @Y17XACL
         TM    CKPNFLG,CKPLULOG         LU LOG BIT SET         @Y17XACT
         BZ    AROUND4                  NO, DONT RESTORE       @Y17XACT
         OI    TRMLU,TRMLULOG           RESTORE LU LOG BIT     @Y17XACT
         SPACE 1                                               @Y17XACL
AROUND4  EQU   *                                               @Y17XACT
         MVC   TRMTYPE,CKPTYPE          RESTORE TYPE           @Y17XACT
         LA    R11,CKPNRSZ(R11)         ADD LENGTH             @Y17XACT
         BAL   R13,IEDQME89             CHK FOR END OF SEG     @Y17XACT
         B     QME3705B                 RESTORE FROM NEW SEG   @Y17XACT
         B     QME25                    CONTINUE PROCESSING    @Y17XACT
         DROP  R11                                             @Y17XACT
         EJECT                                                 @Y17XACL
QME3705D EQU   *                                               @Y17XACT
         CLI   TRMTYPE,TRMSSCP          SSCP ENTRY             @ZM47951
         BER   R14                      GET NEXT ENTRY         @ZM47951
         CLI   TRMTYPE,TRMLNCP          NCP?                   @Y17XACT
         BNE   QME45                    NO, CONTINUE PROCESSING@YM07299
REDO     EQU   *                                               @Y17XACT
         MVC   TRMRLMCT(1),0(R11)       MOVE TRACE IND FOR198B @Y17XACT
         LA    R11,1(R11)               BUMP DISK PTR BY 1     @Y17XACT
         BAL   R13,IEDQME89             CHECK FOR END OF REC   @Y17XACT
         B     REDO                     CONTINUE PROCESSING    @Y17XACT
         BR    R14                      FINISHED WITH 3705     @YM07299
         EJECT                                                 @Y17XACL
QMECOMPR CLI   CKPRPERT,0               USED TO CHECK FOR END OF       X
                                        TRACK WHEN READING ENV RCDS
QMEMOVE  EQU   *                        MOVE DATA TO OPTION TABLE  0728
IEDQMEM2 MVC   0(0,RLCB),0(R11)         MOVE DATA TO INV. LIST
QME2MOVE MVC   0(0,R1),0(R11)           MOVE DATA TO TERM ENTRY@OZ26495
ADD3     DC    F'3'                     CONSTANT               @OZ26495
TRMBCKUP DC    AL2(IEDQTRM-IEDNTRM)     LENGTH OF 3705 PREFIX    S22024
AMIDCNST DC    C'43'                    ID FOR THIS EXECUTOR   @G36XRCU
QME42    DC    C'42'                    ID FOR UNRECOV. ERROR  @G36XRCU
QME44    DC    C'44'                    ID OF NEXT LOAD        @G36XRCU
QME0S    DC    CL2'0S'                  LAST ID IN WTG TABLE
QMEONE   DC    X'1'                     USED TO INITIALIZE RCD NO.
ZERO     EQU   0                        OFFSET                 @G36XRCU
ONE      EQU   1                        BRANCH MASK         0208 S21101
FOUR     EQU   4                        OFFSET                 @G36XRCU
CONDZERO EQU   8                        BRANCH MASK         0208 S21101
HIGH     EQU   2                        BRANCH MASK         0208 S21101
NOTZERO  EQU   7                        BRANCH MASK         0208 S21101
NOTONES  EQU   14                       BRANCH MASK             SA53610
Q870     EQU   20                       Q8 BRANCH TABLE OFFSET   A47151
Q8BASEOF EQU   8                        OFFSET TO 19Q8'S BASE  @XA05305
Q8INVCHK EQU   16                       19Q8 BRANCH TABLE OFFSE@XA05305
         SPACE
INVENTS  EQU   0                        OFFSET TO NO. OF ENTRIES A47151
INVELEN  EQU   2                        OFFSET TO ENTRY LENGTH   A47151
INVSTAT  EQU   3                        OFFSET TO LIST STATUS    A47151
INVCPUID EQU   4                        OFFSET TO CPUID ADDRESS  A47151
INVCNTRL EQU   9                        LENGTH OF CONTROL AREA   A47151
INVIDLEN EQU   4                        LENGTH OF CPUID ADDRESS  A47151
X80      EQU   X'80'                    FLAG FOR BUFSIZE       @OZ26495
X60      EQU   X'60'                    FLAG FOR DIAL OR ADDR  @OZ26495
X40      EQU   X'40'                    FLAG FOR DIAL DIGITS   @OZ26495
X20      EQU   X'20'                    FLAG FOR ADDR CHAR     @OZ26495
EOTBIT   EQU   X'80'                    EOT-FE (BSC) IN INVLIST SA57661
GOODRTN  EQU   4                        GOOD RETURN OFFSET      SA51078
R14OFF   EQU   56                       REG 14 OFFSET IN SA     SA51078
R11OFF   EQU   44                       REG 11 OFFSET          @OZ26495
EPMODE   EQU   X'01'                    EP MODE SWITCH           Y06328
RLD      EQU   22                       OFFSET TO RLD          @XA05305
RECLNG   EQU   25                       OFFSET TO RECORD LENGTH@XA05305
TWO       EQU   2                   CONSTANT                   @XA05305
ZAPAREA  DC    50H'0'                   PATCH AREA             @Y17XACT
         EJECT                                                 @Y17XACL
         TAVTD
         EJECT                                                 @Y17XACL
         TCKPD 3330                     MERLIN VERSION      0503 S21101
         EJECT                                                 @Y17XACL
         DCBD  DSORG=TX
         TQCBD
         TTNTD
         TTRMD
         TLCBD
         EJECT
FORCORE  DSECT                                                 @G36XRCU
         IECDSECT                                              @G36XRCU
         EJECT                                                 @Y17XACL
*DSECT FOR DEB
         SPACE
IEDQDEB  DSECT
DEBNMEXT DS    X                        NO OF EXTENTS IN DATA SET
         ORG   IEDQDEB+16               SET TO NO. OF EXTENTS FLDS21903
         ORG   IEDQDEB+25               SET TO ADDR FIELD        S21903
DEBDCBAD DS    AL3                      ADDR OF DCB
         SPACE
         ORG   IEDQDEB+32               SET TO DEV. DEPENDENT FLDS21903
DEBDVMOD DS    XL1                      DEVICE MODIFIER
DEBUCBAD DS    XL3                      ADDRESS OF UCB
DEBBINUM DS    XL2                      BIN NO
DEBSTRCC DS    XL2                      CYLINDER ADDR FOR START
DEBSTRHH DS    XL2                      TRACK ADDR FOR START OF EXT
DEBENDCC DS    XL2                      CYLINDER ADDR FOR EXTNT END
DEBENDHH DS    XL2                      TRACK ADDR FOR EXTENT END
DEBNMTRK DS    XL2                      NO TRACKS IN THIS EXTENT
DEBEND   EQU   *                                                 S21903
DEBSEGLN EQU   DEBEND-DEBDVMOD          LNGTH OF SEG FOE EACH EXTNT
         END
