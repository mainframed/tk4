         TITLE 'IGCD110D - DISPLAY CONTROL TERMINAL'
IGCD110D CSECT
*A000000-999999                                                  S99240
*A582100-582300                                                  S22024
*C582000                                                         S22024
***********************************************************************
*                                                                     *
*TITLE-- IGCD110D - DISPLAY CONTROL TERMINAL                          *
*                                                                     *
*STATUS--CHANGE LEVEL 5                                          S22024
*                                                                     *
*FUNCTION -- THIS MODULE PROCESSES OPERATOR CONTROL COMMANDS WHICH    *
*   REQUEST DISPLAY OF THE PRIMARY OPERATOR CONTROL TERMINAL OR THE   *
*   LIST OF SECONDARY OPERATOR CONTROL TERMINALS.                     *
*                                                                     *
*   THE COPY OPERATOR CONTROL TERMINAL ROUTINE ACCESSES THE OPERATOR  *
*   CONTROL ELEMENT FROM THE OPCAVT AND CHECKS THE OCSWITCH BITS      *
*   TO DETERMINE THE TYPE OF COMMAND (OCSWITCH IS X'80' IF PRITERM    *
*   AND X'00' IF SECTERM) IF PRITERM, THE OFFSET TO THE PRIMARY       *
*   CONTROL TERMINAL IS OBTAINED FROM THE AVT (AVTOPCIN) AND TESTED   *
*   FOR ZERO.  IF ZERO, THE PRIMARY TERMINAL IS THE SYSTEM CONSOLE.   *
*   SYSCON IS PLACED IN THE RESPONSE AND CONTROL EXITS TO THE         *
*   MESSAGE WRITER IGC0710D. IF IT IS NOT ZERO, THE OFFSET IS ADDED TO*
*   START OF THE TERMNAME TABLE, AND THE TERMNAME AT THAT LOCATION    *
*   IS MOVED INTO THE RESPONSE. THE ROUTINE RETURNS TO THE MESSAGE    *
*   WRITER.
*                                                                     *
*   IF THE SECONDARY OPERATOR CONTROL TERMINALS ARE TO BE DISPLAYED   *
*   EACH ENTRY IN THE TERMNAME TABLE IS EXAMINED.  IF AN ENTRY IS A   *
*   SECONDARY TERMINAL (TRMSCNYN ON IN TRMSTATE) ITS NAME IS PLACED   *
*   IN THE RESPONSE MESSAGE.  WHEN THE END OF THE TABLE IS REACHED,   *
*   CONTROL RETURNS TO THE MESSAGE WRITER IGC0710D.                   *
*                                                                     *
*ENTRY POINTS --                                                      *
*        'IGCD110D TO PROCESS DISPLAY PRITERM AND DISPLAY SECTERM     *
*   OPERATOR CONTROL COMMANDS.
*   IT RECEIVES CONTROL FROM IGCD010D VIA AN XCTL                     *
*                                                                     *
*INPUT -- REGISTER 1 - ADDRESS OF OPERATOR CONTROL AVT, WHICH         *
*   CONTAINS THE OPERATOR CONTROL ELEMENT (OPCE)                      *
*                                                                     *
*                                                                     *
*OUTPUT-- REGISTER 1 - ADDRESS OF OPCAVT                              *
*                                                                     *
*EXTERNAL REFERENCES--N/A                                             *
*                                                                     *
*EXITS,NORMAL--A RESPONSE MESSAGE CONTAINING THE REQUESTED            *
*   INFORMATION IS PREPARED AND ITS ADDRESS AND LENGTH IS INSERTED IN *
*   THE OPCAVT FOR THE MESSAGE WRITER IGC0710D                        *
*                                                                     *
*   NORMAL EXIT MESSAGES ARE-                                         *
*   IED041I PRIMARY=SYSCON                                            *
*   IED041I PRIMARY='STATNAME'                                        *
*   IED041I SECONDARY=SYSCON                                          *
*   IED043I SECONDARY='STATNAME'                                      *
*                                                                     *
*EXITS,ERROR--N/A                                                     *
*                                                                     *
*TABLES/WORK AREAS--OPCAVT, TCAM AVT,TERMNAME TABLE,TERMINAL ENTRY,   *
*   OPCE,RESIDENT WORK AREA IN IEDQCA                                 *
*                                                                     *
*ATTRIBUTES-- SERIALLY REUSABLE,TRANSIENT(TYPE 4),DISABLED,SUPERVISOR *
*   MODE,NON-REENTRANT,REFRESHABLE                                    *
*                                                                     *
*CHARACTER CODE DEPENDENCY                                            *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
*NOTES                                                                *
*        COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS      *
*        PRIMARILY THROUGH THE OPERATOR CONTROL AVT.                  *
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IEDQCM AS OF OS/TCAM LEVEL II   *
***********************************************************************
*
*        REGISTER EQUATES
R0       EQU   0                        WORK
RZERO    EQU   0                   REGISTER 0
R1       EQU   1                        PARAMETER
RPARM    EQU   1                   REGISTER 1
ROPC     EQU   2                        OPERATOR CONTROL AVT BASE
ROPCAVT  EQU   2                   OPC AVT BASE REGISTER
ROPCE    EQU   3                   OPC CONTRL ELEMENT BASE REG
RWORK6   EQU   6                   WORK REGISTER
RAVT     EQU   4                        AVT BASE
RTNT     EQU   5                        TERMNAME TABLE BASE
RTERM    EQU   6                        TERMINAL ENTRY BASE
RWORK1   EQU   7                        WORK
RWORK2    EQU  8                        WORK
RWORK3   EQU   9                        WORK
RLIST    EQU   4                   USED TO CONTAIN MSG ADDR
RWKAREA  EQU   10                       WORK AREA                S22024
RCTR     EQU   11                       COUNTER FOR MSG ENTRIES
RBASE    EQU   12                       ROUTINE BASE
R13      EQU   13                       SAVE AREA
R14      EQU   14                       RETURN
R15      EQU   15                       ENTRY POINT
         USING IEDQOPCD,ROPC       ADDRESSABILITY FOR OP CTL
         USING IEDQAVTD,RAVT            ADDRESSABILITY FOR AVT
         USING IEDQOPCE,ROPCE      ADDRESSABILITY FOR OPC CONTRL
         USING IEDQTNTD,RTNT            ADDRESSABILITY FOR TNT
         USING IEDQTRM,RTERM            ADDRESSABILITY FOR TERM
         BALR  RBASE,0             ESTABLISH ADDRESSABILITY
         USING *,RBASE
IGCD110D IEDHJN SKIPID
         LR    ROPC,R1                  GET OP CTL AVT
         L     RAVT,OPCAVTPT       GET AVT BASE
         L     RWKAREA,OPCWORK     GET ADDR OF WORKAREA IN OPC
*                                  AVT
         L     ROPCE,OPCCOPCE      GET ADDR OF OPC CONTRL ELEM
         SR    RWORK6,RWORK6       CLEAR REGISTER
         L     RTNT,AVTRNMPT            GET TERMNAME TABLE
         SR    RWORK3,RWORK3
         IC    RWORK3,TNTENLEN          GET ENTRY LENGTH
         CLI   OCSWITCH,SEC        DISPLAY SEC TERMS
         BE    SECTERM                  YES
*
         LH    RWORK2,AVTOPCIN          GET PRIMARY TNT INDEX
*                                                              @XM05810
         N     RWORK2,AVTCLRHI          CLEAR HI HFWD AND TEXT @XM05810
         BNZ   SETTRM                   YES - GET ITS NAME
*
         SPACE 3
         LA    R1,MSGPRI           GET ADDR OF PRIMARY MSG
MOVEAMSG SR    RWORK1,RWORK1       CLEAR REGISTER
         IC    RWORK1,LENOFF(R1)   PICK UP MSG LENGTH
         STH   RWORK1,LENOFF(RWKAREA) PLACE LENGTH IN WORKAREA
         BCTR  RWORK1,R0                DECREMENT FOR EXECUTE
         EX    RWORK1,MOVEMSG      MOVE MSG TO OPCAVT WORKAREA
         LTR   RWORK6,RWORK6       SEC INDICATOR ON
         BNZ   ADDTERM             YES
         SPACE 3
ENDUP    XC    OCPARM(FOUR),OCPARM      ZERO OUT BRANCH PARA WTG MOD
*                                       AND NXT LOAD TO GET CONTROL
*                                       AFTER WAIT
         NI    OCSWITCH,XSEVENF         TURN OFF SECON CMD INDICATOR
EXIT     MVC   OPCLDNME+OFF03(AL2),MSGWRIT MOVE 07  FOR XCTL
         LR    RPARM,ROPCAVT       SET UP FOR NXT LOAD
         L     RAVT,OPCAVTPT       REESTABLISH AVT BASE ADDR
         XCTL  SF=(E,OPCXCTL)      SXCTL TO MSG WRITER IGC0701D
         SPACE 3
SETTRM   EQU   *
         LA    R1,MSGTERM          GET ADDR OF PRIMARY MSG TERM
         LA    RWORK6,ONE               INDICATE TO INSERT TERM NAME
         B     MOVEAMSG            INSERT MSG IN WORKAREA
         SPACE 3
ADDTERM  EQU   *
         LR    RPARM,RWORK2        LOAD TNT OFFSET             @XM05810
         LA    R13,OPCSAVE         GET SAVE AREA ADDR          @XM05810
         L     R15,OPCTNTEA        GET ADDR OF CONVERSION ROUTINE
*                                                              @XM05810
         BALR  R14,R15             GO GET TNT ENTRY ADDRESS    @XM05810
         BCTR  RWORK3,R0           DEC FOR EXECUTE
         EX    RWORK3,MVC          PUT NAME IN MSG THATS IN
*                                  WORKAREA
         B     ENDUP               SDPREPARE TO EXIT
         EJECT
SECTERM   EQU  *
*                                  BEGINS
         LA    RCTR,MSGBUF(,RWKAREA)  GET ADDR END OF MSG FIELD
*                                  IN WORKAREA
         TM    OCPARM,NOTFIRST     NOT FIRST TIME ENTERED
*                                  FOR THIS COMMAND
         BO    REENTER             NOT FIRST TIME
         LA    RWORK2,ONE          SET COUNTER 1ST TIME
         LA    R1,LMSG             GET ADDR OF SECONDARY MSG
         SR    RWORK1,RWORK1       CLEAR REGISTER
         IC    RWORK1,LENOFF(R1)      PICKUP MSG LENGTH
         STH   RWORK1,LENOFF(RWKAREA) STORE LENGTH IN WORKAREA
         BCTR  RWORK1,ZERO              DECREMENT FOR EXECUTE
         EX    RWORK1,MOVEMSG      MOVE MSG TO WORKAREA
         LA    RWORK1,ONE(RWORK1)      BUMP VALUE BY 1
         LA    RLIST,SECMSGLN(,RWKAREA)  BUMP PTR TO AFTER = IN
*                                  LMSG MESSAGE
         NI    OCSWITCH,XFE             TURN OFF BIT THAT INDICATES
*                                       SECONDARY TERMINAL FOUND
         LH    RWORK3,TNTLEN            GET NUMBER OF ENTRIES
         SR    RWORK1,RWORK1            CLEAR
         IC    RWORK1,TNTENLEN          GET ENTRY LENGTH
         LA    RTNT,TNTFIRST            GET FIRST ENTRY
         SPACE 3
LOOP     EQU   *
         CR    RWORK2,RWORK3            END OF TABLE
         BH    PUTMSG                   YES - PUT OUT MESSAGE
*
         CR    RLIST,RCTR               END OFMMSG
         BNL   SETUP               PUT OUT THE MESSAGE BUT 1ST
*                                  SAVE INFORMATION FOR NXT TIME
*
NEXT     EQU   *
         LR    RTERM,RTNT               ADD OFFSET TO FIRST
         AR    RTERM,RWORK1             ADD ENTRY LENGTH
         MVC   OPCTRMWA+ONE(THREE),ZERO(RTERM) PUT ON BOUNDARY
         L     RTERM,OPCTRMWA      GET TERMINAL ADDR
         TM    TRMSTATE,TRMSCNYN        SECONDARY TERMINAL
         BZ    INCR                     NO, LOOK AT NEXT ENTRY   S22024
         TM    TRMDSORG,TRMLGB          IS ENTRY AN LGB ?        S22024
         BZ    LIST                     NO, PUT NAME IN LIST OF  S22024
*                                       SECONDARY TERMINALS      S22024
*
INCR     EQU   *
         LA    RTNT,THREE(RWORK1,RTNT) BUMP TO NXT ENTRY
         LA    RWORK2,ONE(,RWORK2) INCREMENT COUNTER
         B     LOOP                     PROCESS NEXT ENTRY
*
LIST     EQU   *
         OI    OCSWITCH,TERMFND    TURN ON FOUND BIT
         BCTR  RWORK1,R0                DECREMENT FOR EXECUTE
         EX    RWORK1,MVL               PUT NAME IN LIST
         LA    RWORK1,TWO(,RWORK1) BUMP PAST BLANK
         AR    RLIST,RWORK1             ADD TO MSG
         AR    R1,RWORK1                ADD TO MSG LENGTH
         BCTR  RWORK1,R0                DECREMENT FOR PROCESS
         B     INCR                     GET NEXT ENTRY
*
*
PUTMSG   EQU   *
         TM    OCSWITCH,TERMFND    ANY ENTRIES FOUND
         BNO   SETCON                   NONE FOUND
         LR    R1,RWKAREA               GET ADDR OF WORKAREA
         LA    RWKAREA,FOUR(RWKAREA)    BUMP TO START OF MSG
         SR    RLIST,RWKAREA            CALCULATE LENGTH OF MSG
         STH   RLIST,LENOFF(R1)         STORE LEN IN WORKAREA
         B     ENDUP                    PREPARE TO EXIT
*
         SPACE 5
SETCON   EQU   *
         LA    R1,SECMSG           GET ADDR OF SECONDARY MESSAGE
         SR    RWORK6,RWORK6       CLEAR REG
         B     MOVEAMSG            MOVE THE MESSAGE
         SPACE 3
SETUP    EQU   *                   SET OCPARM FIELD AND OCWTG
*                                  FIELD SAVE ADDR NEXT ERM TO
*                                  CHECK AND ZERO OUT TERMFND BIT
         ST    RTNT,OCLINK         SAVE ADDR NXT TERM TO CHECK
         NI    OCSWITCH,XFE             TURN OFF SEC TERM FOUND BIT
         ST    RWORK2,OCELEM       SAVE COUNT
         STH   RWORK3,OCLINENO     SAVE VALUE OF TERM CHECKING
         MVC   OCWTG(TWO),ID            SAVE ID OF THIS MOD IN WTG
         OI    OCPARM,NOTFIRST     INDICATE NOT FIRST TIME
         LR    R1,RWKAREA          SAVE ADDR OF WORKAREA
         LA    RWKAREA,FOUR(RWKAREA) BUMP TO START OF MSG
         SR    RLIST,RWKAREA       CALCULATE LENGTH OF MSG
         STH   RLIST,LENOFF(R1)    STORE LEN IN OPC WORKAREA
         B     EXIT                GO TO IGC0701D
         SPACE 3
REENTER  EQU   *                   REINITIALIZE FOR SEARCH
*                                  FOR MORE SECONDARY TERMINALS
         MVI   FOUR(RWKAREA),AVTEBLNK   INSERT BLANK
         MVC   FIVE(WKSIZE,RWKAREA),FOUR(RWKAREA) MOVE BLANKS
         LA    RWKAREA,WKSIZE-ONE(RWKAREA) UPDATE ADDRESS
         MVC   ONE(WKSIZE,RWKAREA),ZERO(RWKAREA) MOVE BLANKS
         L     RWKAREA,OPCWORK          REESTABLISH PTR TO WORKAREA
         SR    RWORK1,RWORK1            ZERO OUT
         IC    RWORK1,TNTENLEN          GET LENGTH OF ENTRY
         L     RTNT,OCLINK         RESTORE ADDR
         L     RWORK2,OCELEM       GET CONT OF TERMINALS CHECKED
         LA    RWORK2,ZERO(RWORK2)       CLEAR HI ORDER BYTE
         LH    RWORK3,OCLINENO     GET NO, OF TERM TO CHECK
         LA    RLIST,FOUR(RWKAREA) GET ADDR OF START OF MSG IN
*                                  WORKAREA
         NI    OCSWITCH,XFE             TURN OFF SEC TERM FOUND BIT
         B     LOOP                CHECK ENTRIES
         EJECT
*        CONSTANTS
MSGWRIT  DC    C'07'               ID TO MOVE INTO OPCLDNME IN
*                                  OPCAVT
ID       DC    C'D1'               ID OF IGCD110D
*        EQUATES
ZERO     EQU   0                   OFFSET
LENOFF   EQU   0                   DISPLACEMENT TO MOVE MSG
ONE      EQU   1                   OFFFSET
AL2      EQU   2                    OFFSET
TWO      EQU   2                        OFFSET                   S22024
OFF03    EQU   3                   OFFSET
THREE    EQU   3                        OFFSET                   S22024
FOUR     EQU   4                   OFFSET
FIVE     EQU   5                        EQUATE FOR MOVE
XSEVENF  EQU   X'7F'                    HEX '7F'
XFE      EQU   X'FE'                    HEX 'FE'
WKSIZE   EQU   250                      SIZE OF AREA TO BLANK OUT
TERMFND  EQU   X'01'               SEC TERM INDICATOR
NAMEOFF  EQU   20                       OFFSET INTO MSG FOR NAME
SECMSGLN EQU   23                  OFFSET TO 1ST FIELD AFTER =
*                                  IN MSG LMSG
C5N      EQU   X'10'                    FLAG                     S22024
SEC      EQU   X'00'               SECONDARY TERMINAL REQUEST
MSGBUF   EQU   476                 OFFSET INTO WKAREA FOR MSG
NOTFIRST EQU   X'80'               BIT WHICH INDICATES NOT FIRST
         SPACE 3
*        MVC'S EXECUTED INTO
MVC      MVC   NAMEOFF(ZERO,RWKAREA),ZERO(RPARM) MOVE NAME INMSG
*                                                              @XM05810
MOVEMSG  MVC   FOUR(ZERO,RWKAREA),ONE(R1) MOVE MSG TO
*                                  WORKAREA ADDR IS IN OPCAVT
MVL      MVC   ZERO(ZERO,RLIST),ZERO(RTNT) MOVE TERMNAME IN MSG
         SPACE 3
*        MESSAGES
MSGPRI   DS    0H
         DC    AL1(ENDMPRI-*-1)         LENGTH OF MSG
         DC    C'IED041I PRIMARY=SYSCON' TEXT OF MESSAGE
ENDMPRI  EQU   *                        USED TO COMPUTE LEN OF MSG
SECMSG   DS    0H
         DC    AL1(SECEMSG-*-1)         LENGTH OF MSG
         DC    C'IED041I SECONDARY=SYSCON'  TEXT OF MESSAGE
SECEMSG  EQU   *                        USED TO COMPUTE LEN OF MSG
LMSG     DS    0H
         DC    AL1(LMSGEND-*-1)         LENGTH OF MSG
         DC    C'IED043I SECONDARY='    TEXT OF MESSAGE
         DC    460C' '                  AREA FOR SEC TERMINALS
LMSGEND  EQU   *                        USED TO COMPUTE LEN OF MSG
MSGTERM  DS    0H
         DC    AL1(ENDMTERM-*-1)        LENGTH OF MESSAGE
         DC    C'IED041I PRIMARY='      TEXT OF MESSAGE
         DC    8C' '                    MAX LENGTH OF TERMINAL NAME
ENDMTERM EQU   *                   END OF MSG
         EJECT
*        MACROS
         TOPCAVTD
         TAVTD
         TOPCED
         TTNTD
         TTRMD
         END
