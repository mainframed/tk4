         TITLE 'IGCD210D DISPLAY QUEUE STATUS COMMAND'
IGCD210D CSECT
*A000000-999999                                                  S99240
*A012000,014000,020000,056000,230400,056000,658000             @Y17XARX
*C014000,020000,110000                                         @Y17XARX
*D010000-012000,124000-150000                                  @Y17XARX
***********************************************************************
*                                                                     *
* MODULE NAME = IGCD210D (TCAM, OPERATOR CONTROL)              @Y17XARX
*                                                              @Y17XARX
* DESCRIPTIVE NAME = DISPLAY QUEUE STATUS PROCESSOR            @Y17XARX
*                                                              @Y17XARX
* COPYRIGHT = NONE                                             @Y17XARX
*                                                              @Y17XARX
* STATUS = VERSION 10.0                                        @Y17XARX
*                                                                     *
*FUNCTION -- THIS ROUTINE PROCESSES OPERATOR CONTROL COMMANDS WHICH   *
*   REQUEST DISPLAY OF THE QCB FIELDS FOR A SPECIFIED TERMINAL,@Y17XARX
*   LINE, LU, OR NCP. THE COMMAND IS REJECTED IF IT SPECIFIES A@Y17XARX
*   CASCADE OR DISTRIBUTION LIST, AN LGB, SSCP, OR PU.         @Y17XARX
*                                                                     *
*   UPON ENTRY FROM IGCD010D VIA AN XCTL THE OPERATOR CONTROL AVT     *
*   ADDRESS IS IN REGISTER 1. IN THE OPCAVT IS THE ADDRESS OF THE     *
*   OPERATOR CONTROL ELEMENT (OPCE) WHICH CONTAINS THE ADDRESS OF THE *
*   TERMINAL ENTRY AND THE TERMINAL NAME. FROM THE TERMINAL ENTRY THE *
*   QCB ADDRESS IS OBTAINED AND THE NUMBER OF MESSAGES ON THE QUEUE   *
*                                                                     *
*   IF THE LINE IS OPEN, THE NUMBER OF MESSAGES ON THE QUEUE          *
*   (QCBMSGCT) IS OBTAINED, CONVERTED TO A PRINTABLE NUMBER, AND      *
*   PLACED IN A RESPONSE MESSAGE ALONG WITH THE TERMINAL NAME.  THE   *
*   STATUS FIELD (QCBSTAT) IS ACCESSED AND ITS VALUES CONVERTED TO    *
*   THEIR PRINTABLE EQUIVALENTS AND PLACED IN THE RESPONSE.  IF NO    *
*   BITS ARE ON, THIS INDICATION IS PLACED IN THE MESSAGE.            *
*                                                                     *
*   THE FIRST PRIORITY QCB ASSOCIATED WITH THE MASTER QCB IS          *
*   OBTAINED AND ITS PRIORITY CONVERTED TO A PRINTABLE NUMBER.  IF    *
*   THERE ARE MORE PRIORITY QCBS, EACH PRIORITY IS PLACED IN THE      *
*   RESPONSE.  THE ROUTINE THEN EXITS TO THE CONTROL MODULE.          *
*                                                              @Y17XARX
* NOTES = COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES @Y17XARX
* IS PRIMARILY THROUGH THE OPERATOR CONTROL AVT.               @Y17XARX
*                                                              @Y17XARX
*   DEPENDENCIES = EBCDIC CHARACTER CODE DEPENDENCIES ARE      @Y17XARX
*   CORRECTABLE BY REASSEMBLY.                                 @Y17XARX
*                                                              @Y17XARX
*   RESTRICTIONS = NA                                          @Y17XARX
*                                                              @Y17XARX
*   REGISTER CONVENTIONS = STANDARD                            @Y17XARX
*                                                              @Y17XARX
*   PATCH LABEL = ZAPPATCH                                     @Y17XARX
* MODULE TYPE = PROCEDURE                                      @Y17XARX
*                                                              @Y17XARX
*   PROCESSOR = ASSEMBLER                                      @Y17XARX
*                                                                     *
*   MODULE SIZE = 758 BYTES                                    @Y17XARX
*                                                              @Y17XARX
*   ATTRIBUTES = SERIALLY REUSEABLE, TRANSIENT(TYPE 4),        @Y17XARX
*   DISABLED, SUPERVISOR MODE, NON-REENTRANT, REFRESHABLE.     @Y17XARX
*
*ENTRY POINTS --                                                      *
*        'IGCD210D' TO PROCESS DISPLAY QUEUE OPERATOR CONTROL COMMANDS*
*                                                                     *
*INPUT-- REGESTER 1 - ADDRESS OF OPCAVT                               *
*   THE FIELDS IN THE OPCAVT RELEVANT TO THIS ROUTINE ARE             *
*
*        +0 OPCDOUBL - TERMINAL NAME                                  *
*        +12 OPCCOPCE - ADDRESS OF CURRENT ELEMENT (OPCE)             *
*                                                                     *
*   THE FIELDS IN THE OPCE RELEVANT TO THIS ROUTINE ARE               *
*        +4 OCELEM - ADDRESS OF TERMINAL ENTRY                        *
*                                                                     *
*OUTPUT-- REGISTER 1 ADDRESS OF OPCAVT                                *
*                                                                     *
*EXTERNAL ROUTINES -- N/A.                                            *
*                                                                     *
*EXITS,NORMAL-- COMMAND IS PROCESSED. A RESPONSE MESSAGE IS BUILT IN  *
*   THE RESIDENT WORK AREA AND AN XCTL TO IGC0710D THE MESSAGE WRITER *
*   IS TAKEN                                                          *
*                                                                     *
*   NORMAL EXIT MESSAGES ARE-                                         *
*                                                                     *
*   IED031I 'STATNAME' QUEUE SIZE='NUMBER',QUEUETYP='TYPE',STATUS=    *
*   'STATUS',...PRIORITY='INTEGER',...                                *
*                                                                     *
*EXITS,ERROR-- ENTRY IS AN LGB, SSCP, PU, OR DISTRIBURION LIST.@Y17XARX
*                                                                     *
*   ERROR MESSAGES ARE-                                               *
*   IED090I 'STATNAME' IS NOT A SINGLE ENTRY                          *
*                                                                     *
*TABLES/WORK AREAS--OPCAVT,TCAM AVT,OPCE,TERMINAL ENTRY,TERMNAME TABLE*
*   QCB                                                               *
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IEDQCJ AS OF OS/TCAM LEVEL II   *
***********************************************************************
         EJECT
*        REGISTER EQUATES
RZERO    EQU   0                   REGISTER
R1       EQU   1                        PARAMETER
ROPC     EQU   2                        OPERATOR CONTROL AVT BASE
ROPCAVT  EQU   2                   BASE FOR OPC AVT
RCIB     EQU   3                        INPUT UNIT BASE
ROPCE    EQU   3                   BASE FOR OPC CTRL ELEM
RAVT     EQU   4                        AVT BASE
RWKAREA  EQU   5                   BASE FOR OPC WORKAREA
RTERM    EQU   6                        TERMINAL ENTRY BASE
RQCB     EQU   7                        QCB BASE
RWORK    EQU   8                        WORK
REGEX    EQU   9                   USED TO MOVE NAME IN MSG
RWORK2   EQU   9                        WORK
RWORK3   EQU   10                       WORK
RTNT     EQU   11                  BASE FOR TERMNAME INSERTION
RDCB     EQU   11                       DCB BASE
RBASE    EQU   12                       ROUTINE BASE
R13      EQU   13                       SAVE AREA
R14      EQU   14                       RETURN
R15      EQU   15                       ENTRY
         EJECT
         USING IEDQAVTD,RAVT            ADDRESSABILITY FOR AVT
         USING IEDQOPCD,ROPC       ADDRESSABILITY FOR OP CTL
         USING IEDQTRM,RTERM            ADDRESSABILITY FOR TERM
         USING IEDQQCB,RQCB             ADDRESSABILITY FOR QCB
         USING IHADCB,RDCB              ADDRESSABILITY FOR DCB
         USING IEDQOPCE,ROPCE      ADDRESSABILITY FOR OPC ELEM
         BALR  RBASE,0             ESTABLISH ADDRESSABILITY
         USING *,RBASE
IGCD210D IEDHJN  SKIPID
         LR    ROPC,R1                  GET OP CTL AVT
         L     RAVT,OPCAVTPT       BASE FOR AVT
         L     RTERM,OCELEM        SET TERM ENTRY BASE
         L     RWKAREA,OPCWORK     GET ADDR OF WORKAREA
         TM    TRMSTATE,DIST       DISTRIBUTION OR CASCADE
         BNZ   PE                        YES, REJECT COMMAND
         TM    TRMDSORG,TRMLGB          LINE GROUP BLOCK         S22024
         BO    PE                       YES, BRANCH              S22024
         TM    TRMSTATE,TRMPREF         DOES ENTRY HAVE PREFIX @Y17XARX
         BZ    FOUND                    NO, BRANCH             @Y17XARX
         LA    RZERO,TRMPRFSZ           GET LENGTH OF PREFIX   @Y17XARX
         SR    RTERM,RZERO             ADJUST BASE OF TRMENTRY @Y17XARX
         DROP  RTERM                    DROP PREVIOUS USE      @Y17XARX
         USING IEDNTRM,RTERM            USE PREFIX BASE        @Y17XARX
         CLI   TRMTYPE,TRMSSCP          SSCP ENTRY             @Y17XARX
         BE    PE                       YES, ERROR BRANCH      @Y17XARX
         CLI   TRMTYPE,TRMPUNT          YES, ERROR BRANCH      @Y17XARX
         BE    PE                       YES, ERROR BRANCH      @Y17XARX
         LA    RTERM,TRMPRFSZ(,RTERM)   READJUST BASE          @Y17XARX
         DROP  RTERM                    DROP PREFIX USE        @Y17XARX
         USING IEDQTRM,RTERM            SET PREVIOUS USE       @Y17XARX
         SPACE 3
FOUND    EQU   *
         LA    R1,GOOD             GET MSG ADDRESS
MOVEAMSG SR    RWORK2,RWORK2       CLEAR REGISTER
         IC    RWORK2,LENOFF(R1)   GET LENGTH OF MSG
         STH   RWORK2,LENOFF(RWKAREA) PLACE LENGTH IN WORKAREA
         BCTR  RWORK2,ZERO              DECREMENT FOR EXECUTE
         EX    RWORK2,MOVEMSG      MOVE MSG TO OPC WORKAREA
         SPACE 3
         L     RQCB,TRMDESTQ-ONE        GET QCB ADDR
         SR    RWORK,RWORK              SET MSGCNT TO ZERO
         TM    QCBDSFLG,QCBDRQQ         DATA READY QUEUE
         BO    DRQ                      YES,BRANCH
*
         LH    RWORK,QCBMSGCT           GET NUMBER OF MSGS ON Q
         N     RWORK,AVTCLRHI            CLEAR HIGH HALF
DRQ      EQU   *
         CVD   RWORK,OPCDOUBL           CONVERT IT TO PACKED DEC
         UNPK  OPCDOUBL(FIVE),OPCDOUBL+FIVE(THREE) MAKE ZONED
         OI    OPCDOUBL+FOUR,ZONE       SET ZONE FOR PRINTING
         MVC   SIZE(FIVE,RWKAREA),OPCDOUBL  STORE NUM IN MSG
         TM    QCBDSFLG,HEXF0           ANY QUEUE TYPE FLAGS
         BZ    NOFLG                    GO INDICATE NO QUEUE TYPE
         SPACE
         TM    QCBDSFLG,HEX70           ANY TCAM QUEUE TYPE
         BZ    NOFLG                     NO, SAY SO
         TM    QCBDSFLG,QCBREUS         REUSABLE DISK - OR BACKUP
         BZ    TQ1                      NO
         MVI   BUFFTYP1(RWKAREA),R SET REUSABLE INDICATOR
         SPACE 3
TQ1      EQU   *
         TM    QCBDSFLG,QCBNREUS        NON REUSEABLE DISK
         BZ    TQ2                      NO
         MVI   BUFFTYP1(RWKAREA),N SET REUSABLE
         SPACE 3
TQ2      EQU   *
         TM    QCBDSFLG,QCBCORE         CORE
         BO    TQ3                      YES
         MVI   BUFFTYP(RWKAREA),D  INDICATE DISK QUEUEING
         SPACE 3
TQ3      EQU   *
         CLI   BUFFTYP(RWKAREA),N       ANY TCAM QUEUE TYPE
         BE    TSOCK                    NO - CHECK FOR TSO QUEUES
         SPACE
         TM    QCBDSFLG,QCBTSQ          IS IT MIXED QUEUES
         BZ    TQ4                      GO PROCESS STATUS
         SPACE
         MVI   BUFFTYP2(RWKAREA),T      INDICATE MIXED QUEUES
         SPACE 2
TQ4      EQU   *
**********
*          REG  USAGE
*   R14        LINK
*   RWORK      ADDRESS OFF ENTRY IN MESSAGE
*   RWORK2     ADDRESS OF ENTRY
*   RWORK3     LENGTH OF MESSAGE
***********
         EJECT
         MVC   OPCDOUBL+SIX(ONE),QCBSTAT SAVE STAT BYTE
         MVC   OPCDOUBL+SEVEN(ONE),QCBFLAG SAVE FLAG BYTE
         LA    RWORK3,GOODMSG      GET LENGTH OF MSG TO HERE
         LA    RWORK,GOODMSG(RWKAREA) GET AT FIRST ENTRY LENGTH
         LA    RWORK2,DELAY-SIX         SET FOR FIRST ENTRY
         TM    OPCDOUBL+SIX,QCBDELAY    IN DELAY QUEQUE
         BAL   R14,MOVENT               IF SO, MOVE IN MESSAGE
         TM    OPCDOUBL+SIX,QCBBUFRD    IS A BUFFERED TERMINAL
         BAL   R14,MOVENT               IF SO, MOVE IN MESSAGE
         TM    OPCDOUBL+SIX,QCBSEND     BUFFERED-SENDING
         BAL   R14,MOVENT               IF SO, MOVE IN MESSAGE
         TM    OPCDOUBL+SIX,QCBTIME     DELAY GREATER THAN 12 HR
         BAL   R14,MOVENT               IF SO, MOVE IN MESSAGE
         TM    OPCDOUBL+SEVEN,QCBTSSES  TSO IN SESSION
         BAL   R14,MOVENT               IF SO, MOVE IN MESSAGE
         TM    OPCDOUBL+SEVEN,QCBREAD   READ HAS PRIORITY
         BAL   R14,MOVENT               IF SO, MOVE IN MESSAGE
         CLI   GOODMSG(RWKAREA),N  ANY BITS ON
         BNE   MVC1                      YES, GO ON
         LA    RWORK,SEVEN(RWORK)    GET TO END OF 'NONEON'
         LA    RWORK3,SEVEN(RWORK3) RESET LENGTH
         SPACE 3
MVC1     EQU   *
         MVC   ZERO(TEN,RWORK),PRIORITY SET UP FOR PRIORITY
         LA    RWORK,TEN(RWORK)         PAST PRIORITY
         LA    RWORK3,TEN(RWORK3)       INCREASE LENGTH
         SPACE 2
         SR    R14,R14                   HOUSEKEEP
         LA    RWORK2,PRISIZE           SIZE OF PRIORITY QCB
         LA    R1,IEDQPQCB              ADDR OF 1ST PRIORITY QCB
         SPACE 2
         EJECT
PRILOOP  EQU   *
         IC    R14,PRILEV(R1)            GET PRIORITY LEVEL
         CVD   R14,OPCDOUBL             CONVERT TO DECIMAL
         UNPK  OPCDOUBL(THREE),OPCDOUBL+SIX(TWO) MAKE ZONED
         MVC   ZERO(THREE,RWORK),OPCDOUBL  PUT IN MESSAGE
         OI    TWO(RWORK),ZONE     ZONE FOR PRINTING
         LA    RWORK,FOUR(RWORK)   BUMP MESSAGE ADDR
         LA    RWORK3,FOUR(RWORK3) BUMP MESSAGE LENGTH
         CLI   PRILEV(R1),X'00'    PRIORITY QCB
         BE    STORLEN             STORE LENTH OF MSG IN WORKAREA
         AR    R1,RWORK2                NO, SET NEXT QCB
         B     PRILOOP                  GET NEXT
         SPACE 3
NOFLG    MVI   BUFFTYP(RWKAREA),N  INDICATE NO TCAM QUEUEING
         B   TQ3                        DETERMINE RESPONSE MESSAGE
STORLEN  EQU   *                   STORE LENGTH AN THEN PREPARE
*                                  TO GO TO IGC0701D
         STH   RWORK3,LENOFF(RWKAREA) STORE LENGHT
         B     GETNAME             PREPARE TO GET NAME
TSOCK    EQU   *
         TM    QCBDSFLG,QCBTSQ          IS IT TSO QUEUEING
         BNZ   TSOQ                     GO INDICATE TS QUEUE TYPE
         SPACE
         MVI   BUFFTYP(RWKAREA),N       INDICATE NO QUEUE TYPE
         B     TQ4                      GO PROCESS STATUS
         SPACE
TSOQ     EQU   *
         MVC   BUFFTYP(THREE,RWKAREA),TS INDICATE TSO ONLY QUEUES
         B     TQ4                      GO PROCESS STATUS
         SPACE
         EJECT
MOVENT   EQU   *
         LA    RWORK2,SIX(RWORK2)  NEXT ENTRY TO PUT
         BCR   8,R14                      BIT NOT ON REUTRN
         MVC   ZERO(SIX,RWORK),ZERO(RWORK2) MOVE ENTRY IN MSG
         LA    RWORK,SEVEN(RWORK)  GET TO NEXT ENTRY
         LA    RWORK3,SEVEN(RWORK3)  BUMP MSG LENGTH
         BR    R14                       RETURN
         EJECT
PE       EQU   *
         LA    RZERO,NINETY             GET MSG NUM
OUT      EQU   *                                                 S22024
         MVC   OPCLDNME+THREE(TWO),ERRWRIT   INSERT ID OF IGC0310D
         B     ERROR               PREPARE TO EXIT
GETNAME  EQU   *
         USING IEDQTNTD,RTNT            ADDRESSABILITY FOR TNT
         L     RTNT,AVTRNMPT       GET TNT ADDRESS
         LH    RWORK,OCTRMTBL      GET TERMNAME OFFSET
         SR    RWORK2,RWORK2       CLEAR REGISTER
         IC    RWORK2,TNTENLEN     PICKUP LENGTH OF TERM NAMES
         LR    R14,RWORK2          SAVE LENGTH OF TERM NAMES
         LA    RWORK2,THREE(RWORK2)  ADD THREE TO ALLOW FOR ADDR
         BCTR  RWORK,ZERO               SUBTRACT 1 FROM OFFSET
         MR    RWORK,RWORK         CALCULATE OFFSET IN ENTRIES
         LA    R13,TNTFIRST        GET ADDR OF 1ST TNT ENTRY
         AR    R13,RWORK2          ADD OFFSET TO ADDR FOR LOCATION
         LR    RWORK2,R14          SETUP FOR EXECUTE OF NAME
         BCTR  RWORK2,ZERO              DECREMENT FOR EXECUTE
         EX    REGEX,MOVENAME      MOVE NAME INTO MSG
         SPACE 3
EXIT     EQU   *
         MVC   OPCLDNME+THREE(TWO),MSGWRIT INSERT ID OF IGC0701D
ERROR    XC    OCPARM(THREE),OCPARM     CLEAR WTG FIELD AND PARM
         LR    R1,ROPCAVT          SETUP PARAM REGISTER
         L     R13,OPCSAVE         GET ADDR OF OPC SAVE AREA
         XCTL  SF=(E,OPCXCTL)      XCTL TO IGC0701D
         EJECT
*        EQUATES
A        EQU   C'A'                     CHARACTER A              S22024
PRILEV   EQU   X'18'                    PRIORITY
PRISIZE  EQU   X'1C'                    QCB SIZE
ZONE     EQU   X'30'                    MAKE PRINTABLE
R        EQU   C'R'                     REUSABLE
N        EQU   C'N'                     NO TCAM QUEUEING
HEX70    EQU   X'70'                    QUEUE FLAGS
HEXF0    EQU   X'F0'                    QUEUE TYPE FLAGS
D        EQU   C'D'                     DISK QUEUEING
PROC     EQU   X'20'                    PROCESS ENTRY
DIST     EQU   X'40'                    DISTRIBUTION ENTRY
LINE     EQU   X'80'                    INDICATES A LINE ENTRY   S22024
MSG171   EQU   171                      ERROR MSG NUMBER         S22024
ZERO     EQU   0                   OFFSET
ONE      EQU   1                   OFFSET
TWO      EQU   2                   OFFSET
THREE    EQU   3                   OFFSET
FOUR     EQU   4                   OFFSET
FIVE     EQU   5                   OFFSET
SIX      EQU   6                   OFFSET
SEVEN    EQU   7                   OFFSET
TEN      EQU   10                  OFFSET
NINETY   EQU   90                       VALUE NINETY
LENOFF   EQU   0                   OFFSET FOR MSG LENGTH
PEMDISP  EQU   12                  OFFSET FOR DDNAME IN MSG
SIZE     EQU   26                  OFFSET IN MSG FOR 'N'
BUFFTYP  EQU   41                  OFFSET IN MSG FOR 'D' DISK Q
BUFFTYP1 EQU   42                  OFFSET IN MSG FOR 'R'
BUFFTYP2 EQU   43                       OFFSET IN MESSAGE FOR 'T'
GOODMSG  EQU   52                       OFFSET IN MSG FOR STATUS WORD
TS       DC    C'TS '                   TSO ONLY QUEUES
T        EQU   C'T'                     MIXED QUEUES
DATARDYQ EQU   X'04'                    MASK FOR DATA READY
MSGWRIT  DC    C'07'               ID OF MODULE IGC0701D
ERRWRIT  DC    C'03'               ID OF ERROR WRITER IGC0310D
         EJECT
*        MOVES
MOVEMSG  MVC   FOUR(ZERO,RWKAREA),ONE(R1) MOVE MSG TO WORKAREA
MOVENAME MVC   PEMDISP(ZERO,RWKAREA),ZERO(R13) MOVE NAME IN MSG
         EJECT
*        CONSTANTS
DELAY    DC    C'DELAY '                IN DELAY QUEUE
         DC    C'BUFFRD'                BUFFERED TERMINAL
         DC    C'SNDBUF'                BUFFERED-SENDING
         DC    C'TWELVE'                DELAY > 12 HOURS
         DC    C'TSOSES'                TSO IN SESSION
         DC    C'RDPRIO'                READ HAS PRIORITY
PRIORITY DC    C' PRIORITY='            PRIORITY OF QCB
         EJECT
*        MESSAGES
GOOD     DS    0H
         DC    AL1(ENDGOOD-*-1)         LENGTH
         DC    C'IED031I ',9C' ',C'SIZE='  MSG NUM AND TERMNAME
         DC    5C' '                    NUM OF MSGS ON QUEUE POSSIBIL.
         DC    C' QUEUETYP='            DR,DN,MR,MO,MN
         DC    C'MO '                   OR NO FOR QTYPES POSSIBIL.
         DC    C' STATUS='              FOR STATUS ARE LISTED UNDER
         DC    C'NONEON '               'DELAY' PLUS NO STATUS BITS ON
         DC    58C' '                   BLANKS
ENDGOOD  EQU   *
ZAPPATCH DC    15X'FF'                  PATCH AREA             @Y17XARX
         SPACE 3
         EJECT
*        MACROS
         TAVTD
         TOPCAVTD
         TQCBD
         TTNTD
         TTRMD
         DCBD  DSORG=TX
         TDEBD
         TOPCED
         END
