         TITLE 'IGCD310D - DISPLAY LIST OF ACTIVE OR INACTIVE ENTERIES'
IGCD310D CSECT
*A000000-999999                                                @Y16X5RR
*A000000-999999                                                  S99240
*C014000,806000-807000,822000-824000,408000                      S22024
*A266000,329000,340600,346600,410000,414200,483000,486500 674600 S22024
*A688200,710400,832000,835000,780000                             S22024
*A670000,                                                       SA68709
*C768000                                                       @0Z14169
*C010000,014000,267200,269000,214000,221000,230000,232000      @Y17XARR
*C340600,368000,380000,414000,415600,674600,711600,756000      @Y17XARR
*C790000,798900,110000                                         @Y17XARR
*A835000                                                       @Y17XARR
*A674640,674960                                                @YM06476
*C674760-674840                                                @YM06476
*D675080                                                       @YM06476
*A808000                                                       @YM06500
*C267600,380006,415660                                         @YM06500
*D554000-590000                                                @G36XAYF
*C594000,598000,606000,646000,650000,610000-642000             @G36XAYF
*A340750,674840,798800                                         @OX20443
*A415670                                                       @OX20443
*A504000,808000                                                @OZ29946
*A632000                                                       @OZ31728
*A414016,411050,411300,414180,416700,417100,675040             @OY20584
***********************************************************************
*                                                                     *
* MODULE NAME = IGCD310D(TCAM,OPERATOR CONTROL)               @Y17XARR*
*                                                                     *
* DESCRIPTIVE NAME= DISPLAY A LIST OF ACTIVE OR INACTIVE      @Y17XARR*
*                      ENTERIES                               @Y17XARR*
*                                                                     *
* COPYRIGHT = 'NONE'                                          @Y17XARR*
*                                                                     *
* STATUS = VERSION 10                                         @Y17XARR*
*                                                                     *
*FUNCTION -- THIS ROUTINE PROCESSES OPERATOR CONTROL COMMANDS WHICH   *
*   REQUEST DISPLAY OF A LIST OF EITHER ACTIVE OR INACTIVE            *
*   TERMINALS FOR A GIVEN LINE.                                       *
*                                                                     *
*   WHEN THIS ROUTINE GAINS CONTROL THE OPERANDS IN THE COMMAND HAVE  *
*   BEEN VALIDITY CHECKED BY IGCD010D ROUTINE AND ANY ERROR MESSAGES  *
*   WRITTEN OUT BY THE ERROR WRITER IGC0310D  ROUTINE                 *
*                                                                     *
*   IT OBTAINS FROM THE OPERATOR CONTROL ELEMENT (OPCE) THE ADDRESS OF*
*   THE ASSOCIATED DCB. FROM IT THE INVITATION LIST ADDRESS IS        *
*   OBTAINED FROM DCBINVLI AND IS SERIALLY SEARCHED FOR EACH ACTIVE OR*
*   INACTIVE ENTRY IN THE LIST. THE TERMNAME FOR EACH APPROPRIATE     *
*   ENTRY IS OBTAINED FROM THE TERMNAME TABLE AND PLACED IN A RESPONSE*
*   MESSAGE. WHEN THE END OF THE LIST IS REACHED, THE LINE NAME IS    *
*   PLACED IN THE RESPONSE AND THE ROUTINE EXITS TO THE MESSAGE       *
*   WRITER ROUTINE IGC0710D WITH THE MESSAGE IN THE OPERATOR CONTROL  *
*   RESIDENT WORK AREA IN IEDQCA.                                     *
*                                                                     *
*   WHEN THE PROPER DCB HAS BEEN OBTAINED FOR EITHER FORMAT, IT IS    *
*   TESTED FOR AN OPEN CONDITION.  IF IT IS NOT OPEN, AN ERROR        *
*   MESSAGE IS BUILT AND THE ROUTINE EXITS TO THE CONTROL MODULE.     *
*   OTHERWISE THE INVITATION LIST ADDRESS IS OBTAINED FROM DCBINVLI   *
*   AND IS SERIALLY SEARCHED FOR EACH ACTIVE OR INACTIVE ENTRY IN     *
*   THE LIST.  THE TERMNAME FOR EACH APPROPRIATE ENTRY IS OBTAINED    *
*   FROM THE TERMNAME TABLE AND PLACED IN A RESPONSE MESSAGE.  WHEN   *
*   THE END OF THE LIST IS REACHED, THE LINE NAME IS PLACED IN THE    *
*   RESPONSE AND THE ROUTINE EXITS TO THE CONTROL MODULE.             *
*                                                                     *
*    FOR THE 3705 COMMAND, NCP,LINE,GROUPNAME,RLN,PU ARE VALID@Y17XARR*
*    TYPES.   IF THE REQUEST IS TO DISPLAY ACTIVE ENTERIES,   @Y17XARR*
*    THEN FOR THE NCP ALL THE ACTIVE LINES(GROUPNAME,RLN)ARE  @Y17XARR*
*    DISPLAYED; FOR LINE ALL THE ACTIVE PU ARE DISPLAYED; FOR @Y17XARR*
*    FOR PU ALL THE ACTIVE LUS ARE DISPLAYED.   IF NONE OF THE@Y17XARR*
*    ARE ACTIVE, THEN THE NONE MESSAGE IS PRINTED.            @Y17XARR*
*   IF THE REQUEST IS TO DISPLAY INACTIVE ENTERIES, THEN      @Y17XARR*
*   FOR EACH VALID INPUT THE SAME TYPE OF ENTERIES ARE        @Y17XARR*
*   DISPLAYED AS IN THE CASE OF THE ACT REQUEST.   IF NO      @Y17XARR*
*   ENTERIES ARE INACTIVE, THEN THE ALL INACTIVE  MESSAGE     @Y17XARR*
*   IS PRINTED .                                              @Y17XARR*
*                                                             @Y17XARR*
*ENTRY POINTS --                                                      *
*        'IGCD310D' TO PROCESS DISPLAY ACT-INACT COMMANDS.            *
*   GAINS CONTROL VIA AN XCTL FROM IGCD010D                           *
*                                                                     *
*INPUT-- REGISTER 1 - ADDRESS OF OPERATOR CONTROL AVT. THE OPCE IS AT *
*   THE LABEL OPCCOPCE. THE FIELDS USED BY THIS ROUTINE IN OPCE ARE:  *
*        OPCE                                                         *
*      (+4)OCELEM - ADDRESS OF THE DCB                                *
*      (+D)OCSWITCH - X'80' DISPLAY INACTIVE                          *
*                     X'00' DISPLAY ACTIVE                            *
*      (+F)OCRLN - RELATIVE LINE NUMBER                               *
*      (+20)OCBACKUP - CONTAINS EITHER GROUPNAME OR LINE ADDRESS      *
*   THE FIELDS IN OPCAVT RELEVANT TO THIS ROUTINE ARE:                *
*        OPCAVT                                                       *
*      (+0)OPCDOUBL - RLN IF GROUPNAME,RLN SPECIFIED                  *
*                                                                     *
*OUTPUT-- REGISTER 1 - ADDRESS OF OPCAVT                              *
*                                                                     *
*EXTERNAL ROUTINES-- OPCHORTG,OPCTNTEA                        @Y17XARR*
*                                                                     *
*EXITS,NORMAL-- COMMAND IS PROCESSED. A RESPONSE MESSAGE IS BUILT IN  *
*   THE OPERATOR CONTROL RESIDENT WORK AREA  AND CONTROL PASSES TO    *
*   THE MESSAGE MODULE IGC0710D.                                      *
*                                                                     *
*   NORMAL EXIT MESSAGES ARE-                                         *
*   IED036I 'GRPNAME,RLN/ADDRESS' ACTIVE='STATNAME,.../NONE'          *
*           'LINENAME/PUNAME/NCPNAME'                         @Y17XARR*
*   IED037I 'GRPNAME,RLN/ADDRESS' INACTIVE='STATNAME,.../NONE'        *
*           'LINENAME/PUNAME/NCPNAME'                         @Y17XARR*
*
*EXITS,ERROR--  N/A. IGCD010D GENERATES ERROR MESSAGES                *
*   ERROR MESSAGES ARE-                                               *
*   IED037I LINE 'GRPNAME,RLN/ADDRESS' NOT OPEN --GENERATED BY        *
*   IGCD010D                                                          *
*                                                                     *
*TABLES/WORK AREAS--OPCAVT,TCAM AVT,DEB,DCB,OPCE,TERMNAME TABLE       *
*               TRM                                           @Y17XARR*
*MODULE TYPE=PROCEDURE                                        @Y17XARR*
*PROCESSOR=ASSEMBLER                                          @Y17XARR*
*MODULE SIZE=                                                 @Y17XARR*
*PATCH LABEL=ZAPS                                             @Y17XARR*
*                                                                     *
*ATTRIBUTES-- SERIALLY REUSABLE,TRANSIENT(TYPE 4),SUPERVISOR MODE,    *
*   DISABLED,NON-REENTRANT,REFRESHABLE                                *
*                                                                     *
*CHARACTER CODE DEPENDENCY                                            *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
*NOTES - COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS      *
*        PRIMARILY THROUGH THE OPERATOR CONTROL AVT.                  *
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IEDQCL AS OF OS/TCAM LEVEL II   *
***********************************************************************
         EJECT
*        REGISTER EQUATES
RZERO    EQU   0                        REG 0                    S22024
RPARM    EQU   1                   PARAMETER REGISTER
ROPCAVT  EQU   2                   BASE REG FOR OPC AVT
ROPCE    EQU   3                   BASE REG FOR OPC ELEMENT
RWKAREA  EQU   6                   ADDRESS OF OPC WORKAREA
R0       EQU   0                        WORK
R1       EQU   1                        PARAMETER
RMSG     EQU   1                        MESSAGE BASE
ROPC     EQU   2                        OPERATOR CONTROL AVT BASE
RWORK2   EQU   7                        WORK
RRETURN  EQU   4                   BRANCHING REGISTER
RAVT     EQU   4                        AVT BASE
RTNT     EQU   4                        TERMNAME TABLE BASE
RTCB     EQU   5                        TCB BASE
RDEB     EQU   5                        DEB BASE
RWORK6   EQU   5                        WORK
RTERM    EQU   5                        TERMINAL ENTRY           S22024
ROFF     EQU   6                        DDNAME OFFSET
RRLN     EQU   6                        RLN WORK
RDCB     EQU   7                        DCB BASE
RLEN     EQU   7                        WORK REGISTER          @Y17XARR
RDD      EQU   8                        DDNAME
RUCB     EQU   8                        UCB BASE
RACT     EQU   8                        ACTIVE LIST ENTRIES
RLCB     EQU   8                        3705 LCB                 S22024
RSAVER14 EQU   9                        SAVE RETURN ADDRESS    @Y17XARR
RLIST    EQU   9                        INVITATION LIST WORK START
RINV     EQU   10                       INVITATION LIST START
RTERMNAL EQU   10                       TERMINAL ENTRY BASE    @Y17XARR
RWORK    EQU   11                       WORK
RBASE    EQU   12                       ROUTINE BASE
R13      EQU   13                       SAVE AREA
RSAVE    EQU   13                       SAVE AREA ADDRESS      @Y17XARR
RWORK5   EQU   14                       WORK
RRET     EQU   14                       RETURN ADDRESS         @Y17XARR
RLINK    EQU   15                       ENTRY POINT            @Y17XARR
R15      EQU   15                       ENTRY POINT
RWORK3   EQU   15                       WORK
         EJECT
         USING IEDQOPCD,ROPCAVT    ADDRESSABILITY FOR OP CTL
         USING DEBNMSUB,RDEB            ADDRESSABILITY FOR DEB
         USING IHADCB,RDCB              ADDRESSABILITY FOR DCB
         USING IEDQAVTD,RAVT            ADDRESSABILITY FOR AVT
         USING IEDQOPCE,ROPCE      ADDRESSABILITY FOR OPC ELEMENT
         BALR  RBASE,0             ESTABLISH ADDRESSABILITY
         USING *,RBASE
IGCD310D IEDHJN SKIPID
         LR    ROPC,R1                  GET OP CTL AVT
         L     RAVT,OPCAVTPT       GET AVT ADDRESS
         L     ROPCE,OPCCOPCE           GET ADDR OF OPC ELEMENT  S22024
         L     RDCB,OCELEM              GET ADDR OF DCB/LGB/TTE@Y17XARR
         L     RWKAREA,OPCWORK          OPC WORK AREA            S22024
         CLC   OCLINK,FULLZERO          IS ORIGINAL INP A TTE? @YM06500
         BE    ACT3                     YES, BRNCH TO PROCESS  @Y17XARR
*                                       3705 DISPLAY COMMAND   @Y17XARR
         TM    DCBDSORG,TXLGB           3705 CMD ?               S22024
         BO    DSPLYLGB                 LGB,BRANCH TO PROCESS  @Y17XARR
*                                       DISPLAY OF A LINE      @Y17XARR
         TM    DCBDSORG+ONE,LINEGRP     LINE GROUP DCB           S22024
         BZ    GET3705                  NO, BRANCH             @YM07289
         MVI   OPCFOUR(RWKAREA),BLANK   BLANK WORK AREA          S22024
         MVC   OPCFOUR+ONE(L256,RWKAREA),OPCFOUR(RWKAREA)        S22024
         SR    RRLN,RRLN           CLEAR REGISTER
         IC    RRLN,OCRLN          GET RLN FORM OPC ELEMENT
         SLL   RRLN,OPCTWO              MULTIPLY RLN BY FOUR
         L     RINV,DCBINVLI-4(RRLN)    GET LIST ADDR
         LA    RLIST,OPCSEVEN(,RINV)     GET LIST Q CONTROL FIELDS
         L     RWKAREA,OPCWORK     GET ADDR OF OPC WORKAREA
         SR    RACT,RACT                CLEAR
         IC    RACT,OPCONE(RINV)        GET ACTIVE
         TM    OCSWITCH,ACTIND     DISPLAY ACT OR INACT
         BO    ACT                 ACTIVE COMMAND
*
         SR    R1,R1                    CLEAR
         LR    R0,RACT                  GET NUMBER ACTIVE
         IC    R1,OPCTWO(RINV)          GET ENTRY WIDTH
         MR    R0,R0                    DETRMINE END OF ACT
         AR    RLIST,R1                 GET INACT INDICATOR
         LA    RLIST,OPCONE(,RLIST)     GET TO FIRST INACT
         TM    OPCTHREE(RINV),EOTENTRY    BSC LIST
         BZ    CKINACT                  NO - PROCEED
*
         LA    RLIST,OPCONE(RLIST)       GET PAST EOT
CKINACT  EQU   *
         LA    R1,FULLAMSG              GET ADDR OF MSG          S22024
         BAL   RRETURN,MOVEAMSG         MOVE MSG TO WORK AREA    S22024
         SR    RWORK,RWORK              CLEAR
         IC    RWORK,OPCZERO(,RINV)     GET TOTAL ENTRIES
         SR    RWORK,RACT               SUBTRACT ACTIVE
         BNZ   GETENTRY                 INACTIVE ENTREIS - GO PROC
*
NOINAMSG EQU   *                                                 S22024
         LA    R1,NOINA            GET ADDR OF MSG
         BAL   RRETURN,MOVEAMSG    PREPARE TO MOVE MSG TO WKAREA
         TM    OCSWITCH,NORLN      RLN SPECIFIED
         BNO   EXIT                LINE ADDR ONLY
         BAL   RRETURN,GETRLN      GRPNAME/RLN SPECIFIED
         B     EXIT                     GET OUT
         SPACE 2
GET3705  EQU   *                                               @YM07289
         SR    RPARM,RPARM              CLEAR FOR IC           @YM07289
         IC    RPARM,DCBEIOBX           GET OFFSET TO LCB      @YM07289
         AL    RPARM,DCBIOBAD           GET IOB ADDRESS        @YM07289
         LH    RPARM,LCBTTCIN-LCBFLAG1(RPARM) GET 3705 TTCIN   @YM07289
         L     RLINK,AVTRNMPT           TERM ENTRY LOOKUP CODE @YM07289
         BALR  RRET,RLINK               GET TERM ENTRY ADDRESS @YM07289
         LR    RDCB,RPARM               SET TERM ENTRY BASE    @YM07289
         XC    OCLINK,OCLINK            INDICATE TERM INPUT    @YM07437
         SPACE 2
ACT3     EQU   *                                                 S22024
         USING IEDNTRM,RTERMNAL         EST. ADDRESSABILITY    @Y17XARR
         LR    RTERMNAL,RDCB            SETUP INPUT            @Y17XARR
         LA    RWORK,TRMPRFSZ           GET PREFIX LENGTH      @Y17XARR
         SR    RTERMNAL,RWORK           BACKUP TO PREFIX       @Y17XARR
         TM    TRMSTATE,TRMPREF         IS THIS  3705 RESOURCE @Y17XARR
         BZ    INVALID                  BRANCH TO PUT OUT      @Y17XARR
*                                       INVALID MESSAGE        @Y17XARR
         ST    RTERMNAL,OCELEM          SAVE PTR TO TTE PRFIX  @Y17XARR
         CLI   TRMTYPE,TRMLNCP          NCP?                   @Y17XARR
         BE    DSPLYLGB                 YES, DISPLAY LINES     @Y17XARR
         TM    TRMSTATE,TRMLINE         LINE?                  @Y17XARR
         BO    DSPLYLGB                 DISPLAY TERMINALS      @Y17XARR
         CLI   TRMTYPE,TRMPUNT          PU?                    @Y17XARR
         BNE   INVALID                  INVALID INPUT          @Y17XARR
DSPLYLGB EQU   *                                               @Y17XARR
         XC    OPCFLAG2,OPCFLAG2        CLEAR FLAG FOR LINE    @OY20584
         XC    OPCFLAG1,OPCFLAG1        CLEAR FLAG FOR CLSTR   @OX20443
         MVI   OPCFOUR(RWKAREA),BLANK   BLANK WORK AREA          S22024
         MVC   OPCFOUR+ONE(L256,RWKAREA),OPCFOUR(RWKAREA)        S22024
         OI    OCSWITCH,OCX01           3705 CMD FLAG            S22024
         LA    R1,NOINA                 SET INACTIVE MSG         S22024
         TM    OCSWITCH,ACTIND          ACTIVE ENTRIES CMD ?     S22024
         BZ    MOVEMSG1                 NO, SET UP FOR MSG       S22024
ACT      EQU   *
         LA    R1,FULLAMSG              ADDR OF MSG              S22024
MOVEMSG1 EQU   *                                                 S22024
         LA    RRETURN,ACTCMD           PREPARE FOR BRANCH       S22024
MOVEAMSG SR    RWORK5,RWORK5       CLEAR REGISTER
         IC    RWORK5,LENOFF(R1)     GET LENGTH OF SMG
         STH   RWORK5,LENOFF(RWKAREA) STORE LENGTH IN WORKAREA
         BCTR  RWORK5,ZERO              DECREMENT FOR EXECUTE
         EX    RWORK5,MOVEMSG      MOVE MSG INTO WORKAREA
         MVC   AMSG1(OPCEIGHT,RWKAREA),OCBACKUP INSERT NAME INTO MSG
         BR    RRETURN             RETURN TO CALLING CODE
ACTCMD   TM    OCSWITCH,NORLN      JRLN SPECIFIED
         BNO   ACT1                LINE ADDRESS ONLY
         BAL   RRETURN,GETRLN      GET RLN PUT IN MSG
ACT1     EQU   *
         MVC   OPCSAVE,OCELEM           SAVE ORIGINAL INPUT    @Y17XARR
         MVC   OPCSAVE+FRSTWORD,OCLINK  SAVE INDICATOR TO      @Y17XARR
*                                       DISTINGUISH            @Y17XARR
         LA    RMSG,AMSG2(RWKAREA) GET MSG ADDRRESS
         ST    RMSG,OCLINK         SAVE IT
         LA    RMSG,AMSG3(RWKAREA) GET ADDR OF END OF MSG
         ST    RMSG,OCELEM         SAVE IT
         CLC   OPCSAVE+FRSTWORD,FULLZERO WAS ORIG INPUT A TTE? @YM06500
         BE    TTEDSPLY                 YES, BRANCH TO PROCESS @Y17XARR
*                                       TTE DISPLAY            @Y17XARR
         TM    DCBDSORG,TXLGB           LGB?                     S22024
         BO    DSPLYGRP                 PROCESS GROUP            S22024
NORMAL   EQU   *                                                 S22024
         LTR   RACT,RACT                ANY ACTIVE
         BNZ   TESTACT             YES
*
         B     ACT2                NO ACTIVE ENTRIES
GETRLN   SR    RWORK,RWORK         CLEAR REGISTER
         IC    RWORK,OCRLN         GET RLN
         CVD   RWORK,OPCDOUBL      COVERT TO DECIMAL
         UNPK  OPCDOUBL(OPCTHREE),OPCDOUBL+SIX(OPCTWO)
         OI    OPCDOUBL+OPCTWO,FOXZERO INVERT FOR PRINTING
         MVC   NOACTRLN(OPCTHREE,RWKAREA),OPCDOUBL   INSERT RLN INTO
*                                  MSG IN WORKAREA
         BR    RRETURN             RETURN TO CALLING CODE
ACT2     EQU   *
         MVC   MSGOFF(OPCFIVE,RWKAREA),NONE MOVE 'NONE' INTO     S22024
*                                       THE MESSAGE              S22024
         MVC   LENOFF(TWO,RWKAREA),NOACTLEN PUT LNGTH IN WRKAREA S22024
         B     EXIT                PREPARE TO XCTL OUT
TTEDSPLY EQU   *                                               @Y17XARR
         SR    RPARM,RPARM              CLEAR TO PICKUP TNT    @Y17XARR
*                                       INDEX                  @Y17XARR
         ICM   RPARM,HALFWORD,TRMSUBST  SUBSTRUCTURE EXIST?    @Y17XARR
         BZ    NOTACT                   PRINT APPROPRIATE MSG  @Y17XARR
         LR    RWORK2,RPARM             SAVE TNT INDEX FOR     @Y17XARR
*                                       GETNAME                @Y17XARR
         BAL   RRET,GETTRM              GET TTE ADDRESS        @Y17XARR
         CLI   TRMTYPE,TRMCLUST         CLUSTER?               @OY20584
         BE    SAVECUPU                 SAVE CLUSTER ADDRESS   @OY20584
         CLI   TRMTYPE,TRMPULO          PU?                    @OY20584
         BL    GETTTE                   BYPASS THE CU/PU SAVE  @OY20584
         CLI   TRMTYPE,TRMPUHI          PU?                    @OY20584
         BH    GETTTE                   BYPASS THE CU/PU SAVE  @OY20584
SAVECUPU EQU   *                                               @OY20584
         ST    RTERMNAL,OPCSAVE+8       SAVE THE PU/CLUSTER    @OY20584
GETTTE   EQU   *                                               @Y17XARR
         ICM   RPARM,ADDRESS,OPCSAVE+ADDRDISP GET ORIG INPUT   @Y17XARR
         CLC   TRMTYPE-IEDNTRM(BYTE,RPARM),TRMTYPE SAME TYPE?  @Y17XARR
         BE    NXT                      YES, CHECK COMMAND     @Y17XARR
         ICM   RPARM,ADDRESS,OPCSAVE+5        GET ORIG INPUT   @OY20584
         CLC   TRMTYPE-IEDNTRM(BYTE,RPARM),TRMTYPE SAME TYPE?  @OY20584
         BE    NXT                      DO CHECKS              @OY20584
         CLI   TRMTYPE-IEDNTRM(RPARM),TRMLNCP  NCP ORIG?       @Y17XARR
         BE    GETGROUP                 YES, CHECK COMMAND     @Y17XARR
         LA    RRET,GETNEXT             RETURN ADDR IF STATE^=
*                                       DISPLAY REQUEST        @OY20584
         CLI   TRMTYPE,TRMPULO          PU?                    @OY20584
         BL    CHKSTATE                 NO                     @OY20584
         LA    RRET,NEXTOK              RETURN ADDR IF STATE^=
*                                       DISPLAY REQUEST        @OY20584
CHKSTATE EQU   *                                               @OY20584
         TM    OCSWITCH,ACTIND          ACTIVE COMMAND         @Y17XARR
         BZ    INACTCMD                 NO,INACTIVE COMMAND    @Y17XARR
         TM    TRMBYTE2,TRMRSACT        ENTRY ACTIVE?          @Y17XARR
*                                       TTE FROM LGB           @Y17XARR
         BNO   GETNEXT                  GET NEXT SUBSTRUCTURE  @Y17XARR
         OI    OCSWITCH,ONEINMSG        INDICATE ONE MATCH     @Y17XARR
*                                       FOUND                  @Y17XARR
         B     GETNAME                  PRINT NAME OF ENTRY    @Y17XARR
INACTCMD EQU   *                        INACTIVE COMMAND       @Y17XARR
         TM    TRMBYTE2,TRMRSACT        ENTRY ACTIVE?          @Y17XARR
         BO    GETNEXT                  GET NEXT SUBSTRUCURE   @Y17XARR
         OI    OCSWITCH,ONEINMSG        INDICATE ONE MATCH     @Y17XARR
*                                       FOUND                  @Y17XARR
         B     GETNAME                  PRINT NAME             @Y17XARR
GETGROUP EQU   *                                               @Y17XARR
         TM    OCSWITCH,ACTIND          ACT COMMAND?           @Y17XARR
         BZ    INACTCOM                 NO,                    @Y17XARR
         TM    TRMBYTE2,TRMRSACT        ENTRY ACTIVE?          @Y17XARR
         BO    PRINTGRP                 YES,PRINT GROUP NAME   @Y17XARR
         B     GETNEXT                  NO, TRY FOR A MATCH FOR@Y17XARR
*                                       NEXT ENTRY             @Y17XARR
INACTCOM EQU   *                        INACTIVE COMMAND       @Y17XARR
         TM    TRMBYTE2,TRMRSACT        ENTRY ACTIVE?          @Y17XARR
         BZ    PRINTGRP                 NO, PRINT GROUP NAME   @Y17XARR
GETNEXT  EQU   *                                               @Y17XARR
         SR    RPARM,RPARM              CLEAR TO GET TNT INDEX @Y17XARR
         ICM   RPARM,HALFWORD,TRMCOHRT  PICKUP TNT INDEX       @Y17XARR
         BZ    NXT                      ZERO, CHECK COMMAND    @Y17XARR
         LR    RWORK2,RPARM             SAVE FOR GETNAME       @Y17XARR
*                                       ROUTINE                @Y17XARR
         LA    RRET,GETTTE              SETUP RETURN ADDRESS   @Y17XARR
         B     GETTRM                   GET TTE ADDRESS        @Y17XARR
PRINTGRP EQU   *                        PRINT GROUP            @Y17XARR
         OI    OCSWITCH,ONEINMSG        INDICATE MATCH FOUND   @YM07993
         MVC   OCMODNME,OPCSAVE         SAVE INPUT(LGB)/TTE    @Y17XARR
         MVC   OCMODNME+FRSTWORD,OPCSAVE+FRSTWORD  SAVE INPUT  @Y17XARR
*                                       (ZEROS/LINE TTE)       @Y17XARR
         LR    RPARM,RTERMNAL           SETUP INTERFACE        @Y17XARR
*                                       (R1  TTE)              @Y17XARR
         LA    RPARM,TRMPRFSZ(,RPARM)   POINT TERM ENTRY       @Y17XARR
         LA    RSAVE,OPCSAVE            SETUP SAVEAREA PTR     @Y17XARR
         L     RLINK,OPCHORTG           GET ADDRESS OF ROUTINE @Y17XARR
         BALR  RRET,RLINK               GET GROUP TTE          @Y17XARR
         LR    RPARM,RZERO              GROUP TNT INDEX        @Y17XARR
         L     RLINK,OPCTNTEA           GET TERMNAME RTN PTR   @Y17XARR
         BALR  RRET,RLINK               CALL TNTEA             @Y17XARR
         MVC   OCBACKUP-IEDQOPCE(8,ROPCE),0(RPARM)             @Y17XARR
         ICM   RWORK,ADDRESS,TRMDESTQ   GET QCB ADDRESS        @Y17XARR
         MVC   OCRLN,QCBRELLN-IEDQQCB(RWORK)   MOVE IN OPCE    @Y17XARR
         MVC   OPCSAVE,OCMODNME         RESTORE THE            @Y17XARR
         MVC   OPCSAVE+FRSTWORD,OCMODNME+FRSTWORD ORIG INPUT   @Y17XARR
         SR    RWORK,RWORK              CLEAR FOR CURRENT      @Y17XARR
*                                       MESSAGE PTR            @Y17XARR
         ICM   RWORK,ADDRESS,OCLINK+ADDRDISP GET CURRENT MSG   @Y17XARR
*                                       PTR                    @Y17XARR
         MVC   ZERO(NAMELEN,RWORK),OCBACKUP MOVE NAME IN MSG   @Y17XARR
         LA    RWORK,NAMELEN(RWORK)     BUMP PASSED THE NAME   @Y17XARR
         ST    RWORK,OCLINK             UPDATE MESSAGE PTR     @Y17XARR
         MVI   ZERO(RWORK),COMMA        PUT A COMMA IN MSG     @Y17XARR
         LA    RWORK,BYTE(,RWORK)       MSG PTR PASSED ,       @Y17XARR
         ST    RWORK,OCLINK             UPDATE MSG PTR         @Y17XARR
         SR    RWORK,RWORK              CLEAR TO PICKUP RLN    @Y17XARR
         ICM   RWORK,LOWBYTE,OCRLN      GET RLN                @Y17XARR
         CVD   RWORK,OPCDOUBL           CONVERT TO PRINTABLE   @Y17XARR
*                                       FORM                   @Y17XARR
         UNPK  OPCDOUBL(LEN),OPCDOUBL+OFFSET(LENGTH) UNPACK    @Y17XARR
         OI    OPCDOUBL+LENGTH,SIGN     INVERT LAST CHAR       @Y17XARR
*                                       TO PRINT               @Y17XARR
         L     RWORK,OCLINK             GET MSG POINTER        @Y17XARR
         MVC   ZERO(LEN,RWORK),OPCDOUBL MOVE RLN IN MSG        @Y17XARR
         LA    RWORK,MSGRLN(,RWORK)     BUMP PASSED RLN        @Y17XARR
         ST    RWORK,OCLINK             UPDATE MSG POINTERS    @Y17XARR
         L     RWORK5,OCELEM            END OF MSG AREA        @XM05730
         CR    RWORK,RWORK5             AT END    ??           @XM05730
         BNL   NXT                      YES                    @XM05730
         B     GETNEXT                  GET NEXT ENTRY         @Y17XARR
DSPLYGRP EQU   *                        GROUP DISPLAY REQUEST  @Y17XARR
         L     RTERMNAL,OPCSAVE+FRSTWORD  GET LINE TTE         @Y17XARR
         LA    RPARM,TRMPRFSZ           GET PREFIX LENGTH      @Y17XARR
         SR    RTERMNAL,RPARM           BACKUP TO PREFIX       @Y17XARR
         ST    RTERMNAL,OPCSAVE+FRSTWORD   SAVE TTE            @Y17XARR
         SR    RPARM,RPARM              CLEAR TO PICKUP TNT    @Y17XARR
*                                       INDEX                  @Y17XARR
         ICM   RPARM,HALFWORD,TRMSUBST  DOES SUBSTRUCTURE      @Y17XARR
*                                       EXIST?                 @Y17XARR
         BZ    NOTACT                   NO SUB                 @OY20584
         BAL   RRET,GETTRM              GET TTE ADDRESS        @OY20584
         CLI   TRMTYPE,TRMCLUST         CLUSTER?               @OY20584
         BE    SAVETTE                  SAVE CLUSTER ADDRESS   @OY20584
         CLI   TRMTYPE,TRMPULO          PU?                    @OY20584
         BL    SETTTE                   RESET THE LINE INDEX   @OY20584
         CLI   TRMTYPE,TRMPUHI          PU?                    @OY20584
         BH    SETTTE                   RESET THE LINE INDEX   @OY20584
SAVETTE  EQU   *                                               @OY20584
         ST    RTERMNAL,OPCSAVE+8       SAVE THE PU/CLUSTER    @OY20584
SETTTE   EQU   *                                               @OY20584
         SR    RTERMNAL,RTERMNAL        CLEAR FOR ICM          @OY20584
         ICM   RTERMNAL,ADDRESS,OPCSAVE+5 RESTORE LINE TTE     @OY20584
         SR    RPARM,RPARM              CLEAR TO PICKUP TNT    @OY20584
*                                       INDEX                  @OY20584
         ICM   RPARM,HALFWORD,TRMSUBST  DOES SUBSTRUCTURE      @OY20584
*                                       EXIST?                 @OY20584
         XI    OPCFLAG2,PRTFLG          LINE IS USED ONCE      @OY20584
         B     SUBENTRY                 GET ALL THE SUBS       @OY20584
NOTACT   EQU   *                                               @OY20584
         TM    OCSWITCH,ACTIND          ACTIVE COMMAND?          S22024
         BO    ACT2                     BRANCH ON YES            S22024
         MVI   AMSGL6(RWKAREA),CSEVEN   CHANGE MESSAGE NUMBER    S22024
         MVC   AMSG1A(NINE,RWKAREA),INACTIVE CHANGE TO INACTIVE  S22024
         MVC   AMSG23(THREE,RWKAREA),ALL ALL ENTRIES INACTIVE    S22024
         MVC   LENOFF(TWO,RWKAREA),ALLINACT PUT LNGTH IN WRKAREA S22024
         B     EXIT                     PREPARE TO XCTL          S22024
SUBENTRY EQU   *                                               @Y17XARR
         LR    RWORK2,RPARM             SAVE TNT INDEX FOR     @Y17XARR
*                                       GETNAME                @Y17XARR
         BAL   RRET,GETTRM              GET TTE ADDRESS        @Y17XARR
CHKMATCH EQU   *                                               @Y17XARR
         CLM   RTERMNAL,ADDRESS,OPCSAVE+OPCFIVE  ORIG INPUT?   @YM06500
         BE    NXT                      YES,                   @Y17XARR
         CLI   TRMTYPE,TRMPULO          PU?                    @OY20584
         BL    CMMDTYPE                 SKIP TST FOR  CLUSTER  @OY20584
         CLI   TRMTYPE,TRMPUHI          PU?                    @OY20584
         BNH   TSTPRTFG                 CHECK FOR PRINTED ALRDY@OY20584
         TM    TRMSTATE,TRMLINE         LINE ENTRY?            @OY20584
         BO    TSTLNPRT                 CHECK FOR PRT ALREADY  @OY20584
         CLI   TRMTYPE,TRMCLUST         PRE-SNA CLUSTER        @OX20443
         BNE   CMMDTYPE                 CONTINUE, NORMAL PATH  @OX20443
TSTPRTFG EQU   *                                               @OY20584
         XI    OPCFLAG1,PRTFLG          RESET PRINTED FLAG     @OX20443
         TM    OPCFLAG1,PRTFLG          TEST SETTING OF FLAG   @OX20443
         BZ    NEXTOK                   ALREADY PRINTED CLUSTER@OX20443
CMMDTYPE EQU   *
         LA    RRET,NEXTOK              RETURN ADDR IF FALSE   @OY20584
         TM    OCSWITCH,ACTIND          ACTIVE COMMAND?        @Y17XARR
         BZ    TESTACT1                 NO, TEST STATUS OF TERM@Y17XARR
         TM    TRMBYTE2,TRMRSACT        ENTRY ACTIVE?          @Y17XARR
         BZ    GETNXTTE                 NO,GET NEXT ADJACENT   @Y17XARR
*                                       ENTRY                  @Y17XARR
         OI    OCSWITCH,ONEINMSG        INDICATE MATCH FOUND   @Y17XARR
         B     GETNAME                  GET NAME TO PRINT      @Y17XARR
TSTLNPRT EQU   *                                               @OY20584
         CLC  OPCSAVE+FRSTWORD,FULLZERO WAS TTE THE ORIG INPUT @OY20584
         BE    CMMDTYPE                 NO NEED TO RESET/SET FG@OY20584
         XI    OPCFLAG2,PRTFLG          RESET PRINT FLAG       @OY20584
         TM    OPCFLAG2,PRTFLG          IS IT SET?             @OY20584
         BZ    NEXTOK                   CONTINUE IF NOT DONE   @OY20584
         B     CMMDTYPE                 CAN BE PUT IN THE MSG
*                                       IF STATE = DSPLY TYPE  @OY20584
TESTACT1 EQU   *                                               @Y17XARR
         TM    TRMBYTE2,TRMRSACT        ENTRY ACTIVE?          @Y17XARR
         BO    GETNXTTE                 YES,GET NEXT ADJACENT  @Y17XARR
*                                       ENTRY                  @Y17XARR
         OI    OCSWITCH,ONEINMSG        INDICATE MATCH FOUND   @Y17XARR
         B     GETNAME                  GET NAME TO PRINT      @Y17XARR
*
GETENTRY EQU   *
         IC    RACT,OPCZERO(,RINV)      GET TOTAL ENTRIES
         SR    R0,R0                    CLEAR
         IC    R0,OPCONE(,RINV)         GET NUMBER ACTIVE
         SR    RACT,R0                  SUBTRACT ACTIVE
         MVI   AMSGL6(RWKAREA),CSEVEN  CHANGE MSG ID
         MVC   AMSG1A(NINE,RWKAREA),INACTIVE  CHANGE TO 'INACTIVE'
         MVC   AMSG1(OPCEIGHT,RWKAREA),OCBACKUP INSERT NAME INTO MSG
         TM    OCSWITCH,NORLN      RLN SPECIFIED
         BNO   GTENTRY1            LINE ADDRESS SPECIFIED
         BAL   RRETURN,GETRLN      GRPNAME/RLN SPECIFIED
GTENTRY1 EQU   *
         LA    RMSG,AMSG2(RWKAREA) GET MSG ADDR OF 1ST GOOD FIELD
         ST    RMSG,OCLINK         SAVE IT
         LA    RMSG,AMSG3(RWKAREA)     GET ADDR OF END OF MSG
         ST    RMSG,OCELEM         SAVE IT
TESTACT  EQU   *
PROCLOOP EQU   *
         SR    R0,R0                     CLEAR
         IC    R0,OPCTWO(RINV)           GET ENTRY WIDTH
COMCD    EQU   *
         AR    RLIST,R0                 ADD WIDTH TO START
         SR    RWORK3,RWORK3            CLEAR
         IC    RWORK3,OPCZERO(RLIST)    PICK UP K
         SLL   RWORK3,OPCONE            MULTIPLY BY 2
         LR    RWORK2,RINV              PUT LIST START IN WORK
         SR    RWORK2,RWORK3            DECREMENT TO TNT OFFSET
         LH    RWORK2,OPCZERO(,RWORK2)  PICK UP TNT OFFSET
GETNAME  EQU   *                                                 S22024
         LR    RWORK3,RWORK2            SAVE
         SR    RWORK5,RWORK5            CLEAR
         L     RAVT,OPCAVTPT            GET AVT ADDRESS          S22024
         L     RTNT,AVTRNMPT            GET TERMNAME TABLE       S22024
         USING IEDQTNTD,RTNT            TNT ADDRESSABILITY       S22024
         IC    RWORK5,TNTENLEN          PICK UP TNT ENTRY LENGTH
         LA    RWORK5,OPCTHREE(RWORK5)  PAST ADDR
         LA    RWORK6,TNTFIRST          TO FIRST ENTRY ADDR
         SR    RWORK6,RWORK5            DECREMENT TO ENTRY-1
         MR    RWORK5,RWORK5            MULT TNT BY OFFSET
         AR    RWORK6,RWORK3            GET TERM NAME
         L     RWORK,OCLINK        GET MSG ENTRY
         SR    RWORK5,RWORK5            CLEAR
         IC    RWORK5,TNTENLEN          LENGTH OF ENTRY
         MVC   ZERO(FOUR,RWORK),BLANKS  CLEAR FIELD            @OZ29946
         BCTR  RWORK5,R0                DECREMENT FOR EXECUTE
         EX    RWORK5,MVC               MOVE ENTRY TO MSG
         LA    RWORK,OPCNINE(RWORK)     BUMP MSG ADDR
         ST    RWORK,OCLINK        SAVE IT
         SPACE
* THE CODE FROM THIS POINT TO THE LABEL TESTEND IS USED TO
* DETERMINE WHETHER OR NOT A TSO SESSION IS IN PROGRESS , AND
* IF SO TO DISPLAY THE USERID.
         SPACE
* BECAUSE OF THEIR USE IN THE NEXT FOUR INSTRUCTIONS, R1, RWORK5,
* AND RWORK3 MUST ALWAYS REMAIN EQUATED TO REGISTERS 1, 14, AND
* 15 RESPECTIVELY.
         SPACE
         LR    R1,RWORK2                PASS TNT OFFSET AS PARAM
         LR    RWORK3,RTNT              GET TERMNAME TABLE ADDR
         BALR  RWORK5,RWORK3            GO GET TERMINAL TABLE ADDR
         SPACE
         USING IEDQTRM,R1               ADDRESSABILITY FOR TERM TAB
         L     RWORK3,TRMDESTQ-ONE      GET DESINATION QCBADDR
         USING IEDQQCB,RWORK3           ADDRESSABILITY FOR QCB
         TM    QCBFLAG,QCBTSSES         IS TSO SESSION IN PROGRESS?
         BZ    TESTEND                  NO, GO TEST FOR END OF MSG
         SPACE
         TM    QCBTSOF1,QCBDELAY        IS QCB ON TIME DELAY QUEUE?
         BO    ONDELAYQ                 YES GET ASID           @G36XAYF
         SPACE
         LH    RWORK3,QCBTJID           GET ASID               @G36XAYF
         B     HAVETJID                 BRANCH AROUND DELAY Q CODE
         SPACE
ONDELAYQ EQU   *
         LH    RWORK3,QCBLINK+ONE       GET ASID               @G36XAYF
HAVETJID EQU   *
         L     RWORK5,CVTPTR            GET CVT ADDR           @G36XAYF
         USING CVT,RWORK5                                      @G36XAYF
         L     RWORK5,CVTASVT           GET ASVT ADDR          @G36XAYF
         DROP  RWORK5                                          @G36XAYF
         USING ASVT,RWORK5                                     @G36XAYF
         LA    RWORK5,ASVTENTY          GET ADDR ASCB LIST     @G36XAYF
         BCTR  RWORK3,ZERO              DECR FOR ZERO          @G36XAYF
         SLL   RWORK3,2                 MULTIPLY BY FOUR       @G36XAYF
         L     RWORK5,AVTEZERO(RWORK3,RWORK5) GET ASCB ADDR    @G36XAYF
         DROP  RWORK5                                          @G36XAYF
         USING ASCB,RWORK5                                     @G36XAYF
         L     RWORK5,ASCBCSCB          GET CSCB ADDR          @G36XAYF
         DROP  RWORK5                                          @G36XAYF
         USING CSCB,RWORK5                                     @G36XAYF
         MVI   TSZERO(RWORK),LPAREN     PAREN TO INDICATE TSO USER
         MVC   TSONE(TSEIGHT,RWORK),CHKEY MOVE USERID TO MSG   @G36XAYF
         MVI   TSNINE(RWORK),RPAREN     INDICATE END OF USERID
         B     INUSE                                           @OZ31728
         DROP  RWORK5                                          @G36XAYF
         SPACE 3
CMDINACT EQU   *                                                 S22024
         TM    OCSWITCH,ACTIND          CMD INACTIVE ?           S22024
         BO    GETNEXT                  NO-GET NEXT ENTRY IN TBL S22024
         OI    OCSWITCH,OCX02           GOT TERMINAL             S22024
         B     GETNAME                  PUT NAME IN MSG          S22024
         SPACE
INUSE    EQU   *
         LA    RWORK,TSELEVEN(RWORK)    YES, BUMP MSG ADDR
         ST    RWORK,OCLINK             SAVE MSG POINTER        SA68709
TESTEND  EQU   *
         L     RWORK5,OCELEM            GET END OF MSG AREA    @XM05730
         CR    RWORK,RWORK5             AT END ?               @XM05730
         BNL   NXT                      YES                    @XM05730
         TM    OCSWITCH,OCX01           3705 COMMAND             S22024
         BZ    CMD270X                  NO, 270X DISPLY COMMAND@Y17XARR
GETNXTTE EQU   *                                               @YM06476
         LA    RRET,CHKMATCH            GETNEXT FOR DSPLYGRP   @Y17XARR
         OC    OPCSAVE+FRSTWORD,OPCSAVE+FRSTWORD LGB INPUT?    @YM07661
         BNZ   NEXTOK                   YES, CHKMATCH IS OK    @YM06476
         LA    RRET,GETTTE              GETNEXT FOR TTE        @OY20584
NEXTOK   EQU   *                                               @OY20584
         TM    TRMSTATE,TRMLINE        LINE?                   @OY20584
         BNO   TESTTYPE                TEST FOR OTHERS         @OY20584
         CLC   OPCSAVE+FRSTWORD,FULLZERO ORIGINAL INPUT A TTE? @OY20584
         BE    NXTCONT                 YES                     @OY20584
         XI    OPCFLAG2,ONELINE         RESET IF ON            @OY20584
         TM    OPCFLAG2,ONELINE         FLAG=ONE ?             @OY20584
         BZ    TESTORIG                 NO, CHECK FOR ORIGINAL @OY20584
         B     GETSUB                   GET SUB                @OY20584
TESTTYPE EQU   *                                               @OY20584
         CLI   TRMTYPE,TRMPULO          PU?                    @OY20584
         BL    NXTCONT                  NO, CONTINUE           @OY20584
         CLI   TRMTYPE,TRMPUHI          PU?                    @OY20584
         BNH   SETPRT                   YES                    @OY20584
         CLI   TRMTYPE,TRMCLUST         SUBSTR PRE-SNA CLSTR   @OX20443
         BNE   NXTCONT                  NO,CONTINUE            @OX20443
SETPRT   EQU   *                                               @OY20584
         XI    OPCFLAG1,ONEFLG          RESET FLAG             @OX20443
         TM    OPCFLAG1,ONEFLG          FLAG=ONE ?             @OX20443
         BZ    NXTCONT                  NO, NEED TO GET COHORT @OX20443
GETSUB   EQU   *                                               @OY20584
         SR    RPARM,RPARM              CLEAR REGISTER         @OX20443
         ICM   RPARM,HALFWORD,TRMSUBST  GET TERMINAL UNDER     @OX20443
*                                       PRE-SNA CLUSTER        @OX20443
         BNZ   SUBENTRY                 CONT AS OTHER SUBENTRY @OX20443
NXTCONT  EQU   *
         SR    RPARM,RPARM              CLEAR TO PICKUP TNT    @Y17XARR
*                                       INDEX                  @Y17XARR
         ICM   RPARM,HALFWORD,TRMCOHRT  GET INDEX              @Y17XARR
         BZ    NXT                      ZERO COHORT MEANS END  @YM06476
         LR    RWORK2,RPARM             SAVE FOR GETNAME       @Y17XARR
*                                       ROUTINE                @Y17XARR
         BAL   RRET,GETTRM              GET TTE ADDRESS        @OY20584
TESTORIG EQU   *                                               @OY20584
         CLM   RTERMNAL,ADDRESS,OPCSAVE+1 ORIGINAL TTE?        @OY20584
         BE    NXT                      YES,GET OUT            @OY20584
         CLM   RTERMNAL,ADDRESS,OPCSAVE+5 ORIGINAL TTE A GRP,RLN?
*                                                              @OY20584
         BE    NXT                      YES, GET OUT           @OY20584
         CLI   TRMTYPE,TRMCLUST         CLUSTER?               @OY20584
         BE    NXTENTRY                 YES                    @OY20584
         LA    RRET,CHKMATCH            SETUP TO BRANCH TO RIGHT
*                                       ROUTINE FOR GROUP ENTRY@OY20584
         CLI   TRMTYPE,TRMPULO          PU?                    @OY20584
         BLR   RRET                     NO,                    @OY20584
         LA    RRET,GETTTE              BRANCH TO RIGHT ROUTINE
*                                       TERMINAL INPUT         @OY20584
         CLI   TRMTYPE,TRMPUHI          PU?                    @OY20584
         BHR   RRET                     NO                     @OY20584
NXTENTRY EQU   *                                               @OY20584
         SR    RPARM,RPARM              CLEAR                  @OY20584
         ICM   RPARM,HALFWORD,TRMCOHRT  GET NEXT ADJACENT      @OY20584
         BZ    NXT                      NO COHORT              @OY20584
         LR    RWORK2,RPARM             SAVE FOR TSO SCAN      @OY20584
         BAL   RRET,GETTRM              GET THE TTE            @OY20584
         CLM   RTERMNAL,ADDRESS,OPCSAVE+1 ORIGINAL TTE?        @OY20584
         BE    NXT                        YES,GET OUT          @OY20584
         CLM   RTERMNAL,ADDRESS,OPCSAVE+5 ORIGINAL TTE A GRP,RLN?
*                                                              @OY20584
         BE    NXT                        YES, GET OUT         @OY20584
         CLM   RTERMNAL,ADDRESS,OPCSAVE+9 BACK TO PU/CLUSTER   @OY20584
         BE    NXTENTRY                   BUMP TO THE NEXT     @OY20584
         ST    RTERMNAL,OPCSAVE+8         SAVE THE NEXT PU/CU  @OY20584
         XC    OPCFLAG1,OPCFLAG1         CLEAR FOR THIS PU/CU  @OY20584
         B     CHKMATCH                  NO GET THE NEXT       @OY20584
CMD270X  EQU   *                                               @Y17XARR
         L     RWORK5,OCELEM       GET END OF MSG
         CR    RWORK,RWORK5             AT END
         BNL   NXT                      YES, BRANCH
*
         BCT   RACT,PROCLOOP            CONTINUE BCT LOOP
*
NXT      EQU   *
         TM    OCSWITCH,OCX01           3705 CMD ?               S22024
         BNO   CONTINUE                 NO                       S22024
         TM    OCSWITCH,OCX02           ANY TERM IN MSG ?        S22024
         BO    CONTINUE                 YES- PREPARE TO EXIT     S22024
         TM    OCSWITCH,ACTIND          ACTIVE CMD ?             S22024
         BO    ACT2                     ACTIVE                   S22024
         B     NOINAMSG                 NO- INSERT INACTIVE      S22024
CONTINUE EQU   *                                                 S22024
         LR    RAVT,RWKAREA        SAVE ADDR OF OPC WORKAREA
         LA    RWKAREA,OPCFOUR(RWKAREA) UP PTR BY FOUR TO GET TO
*                                  THE START OF THE MSG
         SR    RWORK,RWKAREA       CALCULATE LENGTH OF MSG
         STH   RWORK,LENOFF(RAVT)  INSERT INTO WORAAREA LENGTH
EXIT     EQU   *
         MVC   OPCLDNME+OPCTHREE(OPCTWO),MSGWRIT MOVE ID OF IGC0710D
XCTL     EQU   *                                                 S22024
         XC    OCPARM(FOUR),OCPARM      ZERO OUT WTG AND PARAMETER
*                                       FIELDS
         LR    RPARM,ROPCAVT       SETUP PARAMETER REGISTER
         L     RAVT,OPCAVTPT       REESTABLISH ADDR OF AVT
         XCTL  SF=(E,OPCXCTL)      XCTL TO IGC0710D
INVALID  EQU   *                                                 S22024
         MVC   OPCLDNME+OPCTHREE(OPCTWO),ERRMSG MODULE ID        S22024
         LA    RZERO,MSG018             ERROR MSG NUMBER       @YM07289
         B     XCTL                     GO TO ERROR MSG MODULE   S22024
GETTRM   EQU   *                                               @Y17XARR
         LR    RSAVER14,RRET            SAVE REGISTER 14       @Y17XARR
         L     RAVT,OPCAVTPT            GET AVT POINTER        @Y17XARR
         L     RLINK,AVTRNMPT-IEDQAVTD(RAVT) GET TNT BASE      @Y17XARR
         BALR  RRET,RLINK               GET TTE ADDRESS        @Y17XARR
         LR    RTERMNAL,RPARM           GET TTE ADDRESS        @Y17XARR
         LA    RPARM,TRMPRFSZ           GET PREFIX LENGTH      @Y17XARR
         SR    RTERMNAL,RPARM           BACKUP TO PREFIX       @Y17XARR
         LR    RRET,RSAVER14            GET RETURN ADDRESS     @Y17XARR
         BR    RRET                     RETURN TO CALLER       @Y17XARR
         EJECT
*
*        M I S C E L L A N E O U S   E Q U A T E S
*
TSZERO   EQU   0                        DISPL TO MOVE LPAREN INTO
*                                       MSG AND TO CLEAR HI ORDER
*                                       BYTE IN LOAD ADDR INST
TSONE    EQU   1                        DISPL TO MOVE USERID AND TO
*                                       RESET MSG PTR IN ERASE CODE
TSTHREE  EQU   3                        LENGTH USED IN ADDR COMPARE
TSEIGHT  EQU   8                        LENGTH TO MOVE USERID
TSNINE   EQU   9                        DISPL TO MOVE RPAREN
TSTEN    EQU   10                       LENGTH USED TO ERASE USERID
TSELEVEN EQU   11                       DISPL TO BUMP MSG ADDR
TS16     EQU   16                       DISPL INTO SAVE AREA FOR
*                                       WORD CONTAINING REGISTER 15
*                                       WHICH IS NOT RESTORED UPON
*                                       RETURN.
ZERO     EQU   0                        VALUE ZERO
ONE      EQU   1                        VALUE ONE
SIX      EQU   6                        VALUE SIX
THREE    EQU   3                        VALUE THREE
TSHEX3   EQU   X'03'                    TO TEST FOR FULLWORD BDY
LPAREN   EQU   C'('                     INDICATES TSO USERID
RPAREN   EQU   C')'                     INDICATES END OF TSO USERID
*
ACTIND   EQU   X'80'                    FLAG                     S22024
ONEINMSG EQU   X'02'                    FOUND AT LEAST ONE     @Y17XARR
*                                       STATION TO PRINT       @Y17XARR
EOTENTRY EQU   X'80'                    FLAG                     S22024
NOACT1   EQU   12                  OFFSET FOR NAME IN MSG
AMSG1    EQU   12                  OFFSET IN NOACT MSG FOR NAME
NORLN    EQU   X'40'               IF SET NO RLN IN CMD
AMSG2    EQU   35                  START OF ACTIVE ENTRIES IN MSG
AMSG3    EQU   544                 END OF ACTVE ENTRIES IN MSG @OZ14169
OPCEIGHT EQU   8                   OFFSET
OPCTHREE EQU   3                   OFFSET
OPCZERO  EQU   0                   OFFSET
OPCONE   EQU   1                   OFFSET
OPCTWO   EQU   2                   OFFSET
OPCNINE  EQU   9                   OFFSET
OPCFIVE  EQU   5                        OFFSET                   S22024
MSGOFF   EQU   34                       OFFSET TO POSITION OF    S22024
*                                       'NONE' IN THE MSG        S22024
OFFSET   EQU   6                        INDEX IN UNPACK WRKAREA@Y17XARR
OPCFOUR  EQU   4                   OFFSET
AMSGL6   EQU   9                   OFFSET IN MSG FOR NEW MSG ID
OPCSEVEN EQU   7                   OFFSET
AMSG1A   EQU   25                  OFFSET TO 'INACTIVE' IN MSG @YM08430
FOXZERO  EQU   X'F0'                    FLAG                     S22024
SIGN     EQU   X'F0'                    TO INVERT A CHARACTER  @Y17XARR
LEN      EQU   3                        LENGTH OF PRINTABLE RLN@Y17XARR
LENGTH   EQU   2                        LENGTH OF A PACKED RLN @Y17XARR
HALFWORD EQU   3                        TO ALTER LOWERHALF OF  @Y17XARR
*                                       REG                    @Y17XARR
ADDRESS  EQU   7                        TO ALTER THREE BYTES IN@Y17XARR
*                                       REG                    @Y17XARR
ADDRDISP EQU   1                        POINT TO ADDR DISPLACE-@Y17XARR
*                                       MENT                   @Y17XARR
LOWBYTE  EQU   1                        LOWEST BYTE IN REGISTER@Y17XARR
NAMELEN  EQU   8                        LENGTH OF VALID NAME   @Y17XARR
MSGRLN   EQU   4                        RLN + BLANK            @Y17XARR
BYTE     EQU   1                        LENGTH OF MOVE         @Y17XARR
FRSTWORD EQU   4                        POINT TO 2ND WORD OF DW@Y17XARR
COMMA    EQU   X'6B'                    DELIMITER              @Y17XARR
NOACTRLN EQU   21                  OFFSET FOR RLN IN MSG
FOUR     EQU   4                        OFFSET                   S22024
NINE     EQU   9                        OFFSET                   S22024
CSEVEN   EQU   C'7'                     CHARACTER 7              S22024
MSG018   EQU   18                       MSG NUMBER             @YM07289
LINEGRP  EQU   X'40'                    LINE GROUP DCB           S22024
TERM3705 EQU   X'08'                    3705 FLAG IN 2ND WORD    S22024
BLANK    EQU   X'40'                    BLANK                    S22024
L256     EQU   256                      LIMIT                    S22024
TXLGB    EQU   X'80'                    AN LGB                   S22024
TWO      EQU   2                        OFFSET                   S22024
AMSG23   EQU   X'23'                    MSG NUMBER               S22024
ONELINE  EQU   X'01'              LINE INPUT ON - GET SUB      @OY20584
*                           OFF-  CHECK FOR ORIGINAL INPUT     @OY20584
ONEFLG   EQU   X'01'                                           @OX20443
PRTFLG   EQU   X'10'                                           @OX20443
         DS    0H                                                S22024
LENOFF   EQU   0                   OFFSET INTO WORKAREA FOR LENGTH
ALL      DC    C'ALL'                   ALL FOR MESSAGE          S22024
ALLINACT DC    H'34'                    LENGTH                   S22024
NOACTLEN DC    H'35'               LENGTH OF NOACT MSG
BLANKS   DC    C'    '                  FOR CLEARING FIELD     @OZ29946
FULLZERO DC    F'0'                     ZEROES TO COMPARE TO   @YM06500
MSGWRIT  DC    C'07'               ID OF IGC0710D MSG WRITER RTN
MOVEMSG  MVC   OPCFOUR(OPCZERO,RWKAREA),OPCONE(R1) MOVE MSG
MVC      MVC   OPCZERO(OPCONE,RWORK),OPCZERO(RWORK6) MOVE        S22024
PACK     PACK  OPCDOUBL+SIX(OPCTWO),OPCDOUBL(OPCONE) PACK        S22024
NOINA    DS    0H
         DC    AL1(ENDNOINA-*-1)        LENGTH
         DC    CL21'IED037I'            MESSAGE NUMBER           S22024
INACTIVE DC    C'INACTIVE='             INACTIVE                 S22024
NONE     DC    C' NONE'                 NO ACTIVE ENTERIES       S22024
ENDNOINA EQU   *
FULLAMSG DS    0H
         DC    AL1(ENDFULL-*-1)         LENGTH
         DC    CL23'IED036I',CL8'ACTIVE=' MSG TEXT               S22024
ENDFULL  EQU   *
ERRMSG   DC    C'03'                    ERROR MSG MODULE ID      S22024
         SPACE 3
ZAPS     DC    100X'FF'                 ZAPAREA                @Y17XARR
         EJECT
         TOPCAVTD
         TLGBD
         TLCBD
         TOPCED
         TDEBD
         DCBD  DSORG=TX
         TTNTD
         TAVTD
CVT      DSECT
         CVT
         TQCBD
         IHAASCB
         IHAASVT
         TTRMD
CSCB     DSECT
         IEECHAIN
         END
