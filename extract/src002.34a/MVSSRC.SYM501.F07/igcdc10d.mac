         TITLE 'IGCDC10D - 3705 DISPLAY STORAGE ROUTINE                *
                        '
IGCDC10D CSECT ,                                                   0001
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         USING IGCDC10D,RBASE                                  @G36XRRU
         LR    RBASE,REG15              SET UP BASE ADDRESS    @G36XRRU
IGCDC10D IEDHJN AFTERHJN,JHN                                   @G36XRRU
*   ROPCAVT=RPARM;                  /* BASE FOR OP CONTROL AVT       */
         LR    ROPCAVT,RPARM                                       0392
*   RFY                                                            0393
*     RPARM UNRSTD;                 /*                       @G36XRRU*/
*   IEDQAPTR=OPCAVTPT;              /* BASE FOR TCAM AVT             */
         L     IEDQAPTR,OPCAVTPT(,ROPCAVT)                         0394
*   ROPCE=OPCCOPCE;                 /* GET ELEMENT POINTER           */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0395
*   RWORKA=OPCWORK;                 /* ADDRESS OF WORK AREA          */
         L     RWORKA,OPCWORK(,ROPCAVT)                            0396
*/********************************************************************/
*/* IF RESPONSE INDICATED IN OPCE, THEN PROCESS THE RESPONSE BDU     */
*/* IN THE BUFFER UNIT ADDRESSED BY OCUNIT. OTHERWISE, PROCESS A     */
*/* DISPLAY STORAGE REQUEST COMMAND.                                 */
*/********************************************************************/
*                                                                  0397
*   IF ROPCE->PRFPRI=PRISSBUF×OCRESP=ON THEN/* RESPONSE BDU FOR A  0397
*                                      DISPLAY STOR REQ@ZM47883      */
         CLI   PRFPRI(ROPCE),X'E2'                                 0397
         BE    @RT00397                                            0397
         TM    OCRESP(ROPCE),B'00000001'                           0397
         BO    @RT00397                                            0397
*     GOTO PRORESP;                 /* YES, PROCESS THE BDU          */
*                                                                  0399
*/********************************************************************/
*/* EXAMINE THE 3705 NCP PU NAME OPERAND                     @G36XRRU*/
*/********************************************************************/
*                                                                  0399
*   ROPERAND=OCELEM;                /* OCELEM POINTS TO 1ST OPER     */
         L     ROPERAND,OCELEM(,ROPCE)                             0399
*   RSORCFLD=ROPERAND;              /* SAVE ADDRESS OF OPERAND       */
         LR    RSORCFLD,ROPERAND                                   0400
*   RCOUNTER=ZERO;                  /* SET COUNT OF CHARACTERS IN NCP
*                                      NAME TO ZERO          @G36XRRU*/
         SLR   RCOUNTER,RCOUNTER                                   0401
*NAMELOOP:                                                         0402
*   IF OPERAND=COMMA THEN           /* END OF RNNAME ?               */
NAMELOOP CLC   OPERAND(1,ROPERAND),COMMA                           0402
         BNE   @RF00402                                            0402
*     DO;                           /* YES                           */
*       IF RCOUNTER=ZERO THEN       /* NUMBER OF CHARACTERS SCANNED
*                                      IS ZERO ?                     */
         LTR   RCOUNTER,RCOUNTER                                   0404
         BZ    @RT00404                                            0404
*         GOTO ERROR1;              /* YES, ERROR                    */
*     END;                                                         0406
*   ELSE                                                           0407
*     DO;                           /* NOT END OF OPERANDS           */
         B     @RC00402                                            0407
@RF00402 DS    0H                                                  0408
*       RCOUNTER=RCOUNTER+ONE;      /* INCREMENT NO. OF OPERANDS     */
         LA    @15,1                                               0408
         ALR   RCOUNTER,@15                                        0408
*       IF RCOUNTER<NINE THEN       /* FEWER THAN 9 CHARACTERS IN  0409
*                                      OPERAND ?                     */
         C     RCOUNTER,@CF01593                                   0409
         BNL   @RF00409                                            0409
*         DO;                       /* YES                           */
*           ROPERAND=ROPERAND+ONE;  /* POINT TO NEXT CHARACTER       */
         ALR   ROPERAND,@15                                        0411
*           GOTO NAMELOOP;          /* CONTINUE SCAN                 */
         B     NAMELOOP                                            0412
*         END;                                                     0413
*       ELSE                        /* NO                            */
*         GOTO ERROR1;              /* ERROR                         */
*     END;                                                         0415
*                                                                  0416
*/********************************************************************/
*/*      VERIFY THAT THE STORAGE REQUEST IS FOR AN NCP.      @G36XRRU*/
*/*      THE NCP MUST BE ACTIVE AND NOT IN THE PROCESS OF    @G36XRRU*/
*/*      BEING ACT/DEACT OR IPL/DUMP.                        @G36XRRU*/
*/********************************************************************/
*                                                                  0416
*   RFY                                                            0416
*    (RZERO,                                                       0416
*     RPARM) RSTD;                  /*                       @G36XRRU*/
@RC00402 DS    0H                                                  0417
*   OPCDOUBL=BLANKS;                /* BLANK OPCDOUBL                */
         MVC   OPCDOUBL(8,ROPCAVT),BLANKS                          0417
*   OPCDOUBL(ONE:RCOUNTER)=RNNAME;  /* SAVE NCP NAME         @G36XRRU*/
         LR    @15,RCOUNTER                                        0418
         BCTR  @15,0                                               0418
         EX    @15,@SM01685                                        0418
*   OCBACKUP=OPCDOUBL;              /* SET NAME FOR MSG      @ZM47761*/
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0419
*   OCSWITCH=NORLN;                 /* INDIC NO RLN          @ZM47761*/
         MVI   OCSWITCH(ROPCE),X'40'                               0420
*   RFY                                                            0421
*     REG15 RSTD;                   /* RESTRICT REGISTER     @G36XRRU*/
*   REG15=AVTRNMPT;                 /* TNT ADDRESS           @G36XRRU*/
         L     REG15,AVTRNMPT(,IEDQAPTR)                           0422
*   RFY                                                            0423
*     IEDQTNTD BASED(REG15);        /*                       @G36XRRU*/
*   RZERO=TNTENLEN;                 /* LEN OF NAME           @G36XRRU*/
         SLR   RZERO,RZERO                                         0424
         IC    RZERO,TNTENLEN(,REG15)                              0424
*   RPARM=ADDR(OPCDOUBL);           /* ADDRESS OF NAME       @G36XRRU*/
         LR    RPARM,ROPCAVT                                       0425
*   REG15=AVTMSGS;                  /* VCON TABLE ADDRESS    @G36XRRU*/
         L     REG15,AVTMSGS-1(,IEDQAPTR)                          0426
         LA    REG15,0(,REG15)                                     0426
*   GEN REFS(REG15,RRET) SETS(REG15);                              0427
*                                         /*                 @G36XRRU*/
         L     REG15,8(REG15)           GET ADDRESS OF A1 RTN@G36XRRU*/
         BAL   RRET,4(REG15)            VALIDATE NAME        @G36XRRU*/
*   IF REG15=0 THEN                 /* IS ENTRY VALID        @G36XRRU*/
         LTR   REG15,REG15                                         0428
         BNZ   @RF00428                                            0428
*     DO;                           /* INVALID ENTRY         @G36XRRU*/
*       RZERO=INVALMSG;             /* INVALID ENTRY MSG     @G36XRRU*/
         LA    RZERO,18                                            0430
*       GOTO ERROR;                 /* WRITE ERROR MSG       @G36XRRU*/
         B     ERROR                                               0431
*     END;                          /*                       @G36XRRU*/
*   ELSE                                                           0433
*     DO;                           /* VALID ENTRY           @G36XRRU*/
@RF00428 DS    0H                                                  0434
*       OCTRMTBL=REG15;             /* SAVE TTCIN            @G36XRRU*/
         STH   REG15,OCTRMTBL(,ROPCE)                              0434
*       RPARM=REG15;                /* SET PARAMETER         @G36XRRU*/
         LR    RPARM,REG15                                         0435
*       CALL IEDQTNT;               /* GET TTE ADDRESS       @G36XRRU*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0436
         BALR  @14,@15                                             0436
*       RFY                                                        0437
*         RTRM RSTD;                /*                       @G36XRRU*/
*       RTRM=RPARM;                 /* SET TTE BASE          @G36XRRU*/
         LR    RTRM,RPARM                                          0438
*     END;                          /*                       @G36XRRU*/
*   IF TRMTYPE^=TRMLNCP THEN        /* CHECK FOR NCP ENTRY@G36XRRU   */
         LR    @14,RTRM                                            0440
         AL    @14,@CF01011                                        0440
         CLI   TRMTYPE-11(@14),X'0F'                               0440
         BE    @RF00440                                            0440
*     DO;                           /*                       @G36XRRU*/
*       RZERO=NUM173;               /* INVALID NCP ENTRY     @G36XRRU*/
         LA    RZERO,173                                           0442
*       GOTO ERROR;                 /* WRITE ERROR MSG       @G36XRRU*/
         B     ERROR                                               0443
*     END;                          /*                       @G36XRRU*/
*   ELSE                                                           0445
*     DO;                           /* VERIFY THAT THE NCP IS ACTIVE
*                                      AND NOT IN THE PROCESS OF   0445
*                                      BEING ACT/DEACT OR IPL/DUMP 0445
*                                                            @G36XRRU*/
@RF00440 DS    0H                                                  0446
*       IF TRMRSACT=OFF×TRMINPG=ON×TRMIPLDM=ON/* STATE OK    @G36XRRU*/
*         THEN                                                     0446
         LR    @14,RTRM                                            0446
         SL    @14,@CF01681                                        0446
         TM    TRMINPG(@14),B'00100000'                            0446
         BNZ   @RT00446                                            0446
         TM    TRMRSACT(@14),B'10000000'                           0446
         BNO   @RT00446                                            0446
         TM    TRMIPLDM(@14),B'10000000'                           0446
         BNO   @RF00446                                            0446
@RT00446 DS    0H                                                  0447
*         DO;                       /* NO, ERROR             @G36XRRU*/
*           RZERO=NUM400;           /* NCP NOT ACTIVE MSG    @G36XRRU*/
         LA    RZERO,400                                           0448
*           GOTO ERROR;             /* WRITE ERROR MSG       @G36XRRU*/
         B     ERROR                                               0449
*         END;                      /*                       @G36XRRU*/
*       RFY                                                        0451
*         RTRM UNRSTD;              /*                       @G36XRRU*/
@RF00446 DS    0H                                                  0452
*       RFY                                                        0452
*        (RZERO,                                                   0452
*         RPARM) UNRSTD;            /*                       @G36XRRU*/
*                                                                  0453
*/********************************************************************/
*/* EXAMINE STORAGE ADDRESS OPERAND                                  */
*/********************************************************************/
*                                                                  0453
*       ROPERAND=ROPERAND+ONE;      /* BUMP OPERAND POINTER PAST   0453
*                                      COMMA                         */
         LA    ROPERAND,1(,ROPERAND)                               0453
*       RSORCFLD=ROPERAND;          /* SAVE ADDRESS OF OPERAND       */
         LR    RSORCFLD,ROPERAND                                   0454
*       OCBACKUP(ONE:FIVE)=STORADDR(ONE:FIVE);/* SAVE ADDR   @ZM47883*/
         MVC   OCBACKUP(5,ROPCE),STORADDR(RSORCFLD)                0455
*       RCOUNTER=ZERO;              /* INITIALIZE COUNT OF CHAR IN 0456
*                                      OPERAND                       */
         SLR   RCOUNTER,RCOUNTER                                   0456
*LOOP:                                                             0457
*       IF OPERAND^=BLANK THEN      /* END OF OPERANDS ?             */
LOOP     CLI   OPERAND(ROPERAND),X'40'                             0457
         BE    @RF00457                                            0457
*         DO;                       /* NO                            */
*           RCOUNTER=RCOUNTER+ONE;  /* INCREMENT COUNT OF CHAR       */
         LA    RCOUNTER,1(,RCOUNTER)                               0459
*           IF RCOUNTER>FIVE THEN   /* MORE THAN 5 CHAR      @ZM47883*/
         C     RCOUNTER,@CF00186                                   0460
         BH    @RT00460                                            0460
*             GOTO ERROR1;          /* YES, ERROR                    */
*           IF OPERAND>=CHAR0&      /* CHAR BETWEEN '0' AND          */
*               OPERAND<=CHAR9 THEN /* '9', INCLUSIVE ?              */
         CLC   OPERAND(1,ROPERAND),CHAR0                           0462
         BL    @RF00462                                            0462
         CLC   OPERAND(1,ROPERAND),CHAR9                           0462
         BNH   @RT00462                                            0462
*             GOTO VALID;           /* YES, VALID CHARACTER          */
*           IF OPERAND>=CHARA&      /* CHAR BETWEEN 'A' AND          */
*               OPERAND<=CHARF THEN /* 'F', INCLUSIVE ?              */
@RF00462 CLC   OPERAND(1,ROPERAND),CHARA                           0464
         BL    @RF00464                                            0464
         CLC   OPERAND(1,ROPERAND),CHARF                           0464
         BH    @RF00464                                            0464
*             OPERANDF=OPERANDF+NUMSHIFT;/* YES, SHIFT CHARACTER     */
         LA    @14,57                                              0465
         SLR   @11,@11                                             0465
         IC    @11,OPERANDF(,ROPERAND)                             0465
         ALR   @14,@11                                             0465
         STC   @14,OPERANDF(,ROPERAND)                             0465
*           ELSE                    /* NO                            */
*             GOTO ERROR1;          /* ERROR                         */
*VALID:                                                            0467
*           ROPERAND=ROPERAND+ONE;  /* POINT TO NEXT CHARACTER       */
VALID    LA    ROPERAND,1(,ROPERAND)                               0467
*           GOTO LOOP;              /* CONTINUE SCAN FOR END OF    0468
*                                      OPERANDS                      */
         B     LOOP                                                0468
*         END;                                                     0469
*       IF RCOUNTER=ZERO THEN       /* WAS OPERAND SKIPPED ?         */
@RF00457 LTR   RCOUNTER,RCOUNTER                                   0470
         BZ    @RT00470                                            0470
*         GOTO ERROR1;              /* YES, ERROR                    */
*/********************************************************************/
*/* PACK THE DISPLAY ADDRESS AND SAVE IT. A LENGTH GREATER THAN      */
*/* THAT OF THE OPERAND IS USED TO SEPARATE THE SIGN FROM THE        */
*/* ADDRESS.                                                         */
*/********************************************************************/
*                                                                  0472
*       GEN( EX RCOUNTER,PACKADDR );/* PACK DISPLAY ADDRESS          */
          EX RCOUNTER,PACKADDR
*       RCOUNTER=RCOUNTER+ONE;      /* INSERT BLANKS PAST END OF     */
         LA    @14,1                                               0473
         ALR   RCOUNTER,@14                                        0473
*       OCBACKUP(RCOUNTER:EIGHT)=BLANKS;/* SAVED ADDR IN OCBACKUP    */
         LR    @01,ROPCE                                           0474
         ALR   @01,RCOUNTER                                        0474
         LA    @11,8                                               0474
         SLR   @11,RCOUNTER                                        0474
         EX    @11,@SM01687                                        0474
*                                                                  0475
*/********************************************************************/
*/* GET BUFFER UNIT INTO WHICH PRU WILL BE BUILT.                    */
*/********************************************************************/
*                                                                  0475
*       RFY                                                        0475
*        (RPARM,                                                   0475
*         RSAVE) RSTD;              /*                       @G36XRRU*/
*       RSAVE=ADDR(OPCSAVE);        /* LOAD SAVE AREA ADDRESS        */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0476
*       RPARM=ONE;                  /* NUMBER OF UNITS REQUESTED     */
         LR    RPARM,@14                                           0477
*       CALL GETBUFF;               /* GET A BUFFER UNIT     @G36XRRU*/
         L     @15,OPCGETBF(,ROPCAVT)                              0478
         BALR  @14,@15                                             0478
*       OCUNIT=RPARM;               /* SAVE PTR TO BUFFER            */
         ST    RPARM,OCUNIT(,ROPCE)                                0479
*       RFY                                                        0480
*         RPRU RSTD;                /*                       @G36XRRU*/
*       RPRU=RPARM;                 /* SET UP PRU BASE       @G36XRRU*/
         LR    RPRU,RPARM                                          0481
*       IEDPRUQD=IEDPRUQD&&IEDPRUQD;/* ZERO BASIC PRU        @G36XRRU*/
         XC    IEDPRUQD(12,RPRU),IEDPRUQD(RPRU)                    0482
*       IEDPRUND=IEDPRUND&&IEDPRUND;/* ZERO NEG PRU          @G36XRRU*/
         LR    @14,RPRU                                            0483
         SL    @14,@CF00069                                        0483
         XC    IEDPRUND(8,@14),IEDPRUND(@14)                       0483
*       CMDDATA=CMDDATA&&CMDDATA;   /* ZERO COMMAND FLD      @G36XRRU*/
         XC    CMDDATA(13,RPRU),CMDDATA(RPRU)                      0484
*       PRURHTH=RHTHFID1;           /* SET UP RH/TH FLAGS    @ZM47762*/
         MVC   PRURHTH(4,@14),@CB01623                             0485
*       PRUTTCIN=OCTRMTBL;          /* SET UP TTCIN          @G36XRRU*/
         LH    @14,OCTRMTBL(,ROPCE)                                0486
         N     @14,@CF01689                                        0486
         STH   @14,PRUTTCIN(,RPRU)                                 0486
*       RPARM=OCTRMTBL;             /* SET TTCIN AS INPUT TO IEDIAP04
*                                      TO GET NETWORK ADDRESS      0487
*                                                            @G36XRRU*/
         LR    RPARM,@14                                           0487
*       CALL IEDIAP04;              /* FIND NETWORK ADDR     @G36XRRU*/
         L     @11,AVTSAVTP(,IEDQAPTR)                             0488
         L     @15,SAVTTNTX(,@11)                                  0488
         BALR  @14,@15                                             0488
*       RFY                                                        0489
*        (RPARM,                                                   0489
*         RSAVE) UNRSTD;            /*                       @G36XRRU*/
*       CMDNETA=REG15;              /* PUT IT IN REQUEST     @G36XRRU*/
         STCM  REG15,3,CMDNETA(RPRU)                               0490
*       PRUDATCT=LENGTH(CMDDATA);   /* SET UP DATA COUNT     @G36XRRU*/
         MVC   PRUDATCT(2,RPRU),@CH00599                           0491
*       PRUTIC=INVALTIC;            /* SET INVALID TIC       @G36XRRU*/
         MVC   PRUTIC(4,RPRU),@CB01110                             0492
*       BDUHEADR=ON;                /* TURN ON HEADER FLG    @G36XRRU*/
         OI    BDUHEADR+12(RPRU),B'01000000'                       0493
*       CMDCODES=DRUFLAG;           /* SET COMMAND FLAGS     @G36XRRU*/
         MVC   CMDCODES(3,RPRU),@CB01627                           0494
*       CMDTYPE=TYPE;               /* COMMAND TYPE          @G36XRRU*/
         MVI   CMDTYPE(RPRU),X'01'                                 0495
*       CMDLEN=DISPLEN;             /* SET DISPLAY LENGTH    @G36XRRU*/
         MVC   CMDLEN(2,RPRU),@CB01629                             0496
*       CMDADDR=OCMODNME(1:4);      /* BEGIN ADDRESS         @ZM47883*/
         MVC   CMDADDR(4,RPRU),OCMODNME(ROPCE)                     0497
*       OPCMODID=MOD02;             /* RU DISPATCHER ID      @G36XRRU*/
         MVC   OPCMODID(2,ROPCAVT),MOD02                           0498
*       OCMODNME=OPCDOUBL;          /* SAVE RNNAME                   */
         MVC   OCMODNME(8,ROPCE),OPCDOUBL(ROPCAVT)                 0499
*       OCWTG=THISMOD;              /* SET FOR RETURN XCTL           */
         MVC   OCWTG(2,ROPCE),THISMOD                              0500
*       GOTO XCTL;                  /* CALL NEXT MODULE              */
         B     XCTL                                                0501
*       RFY                                                        0502
*         RPRU UNRSTD;              /*                       @G36XRRU*/
*                                                                  0503
*/********************************************************************/
*/* PROCESS THE RETURN BDU FROM A DISPLAY STORAGE BDU COMMAND.       */
*/********************************************************************/
*                                                                  0503
*PRORESP:                                                          0503
*       RFY                                                        0503
*         RPRU RSTD;                /*                       @G36XRRU*/
PRORESP  DS    0H                                                  0504
*       RPRU=OCUNIT;                /* PRU ADDRESS           @G36XRRU*/
         L     RPRU,OCUNIT(,ROPCE)                                 0504
*       IF ROPCE->PRFPRI^=PRISSBUF THEN/* NOT A RECORD STOR  @ZM47883*/
         CLI   PRFPRI(ROPCE),X'E2'                                 0505
         BE    @RF00505                                            0505
*         DO;                       /* REQ BUFFER            @ZM47883*/
*           IF PRURHSDI=ON THEN     /* GOOD RESPONSE         @ZM47883*/
         LR    @14,RPRU                                            0507
         AL    @14,@CF01691                                        0507
         TM    PRURHSDI(@14),B'00000100'                           0507
         BO    @RT00507                                            0507
*             GOTO BADRESP;         /* NO, PROCESS BAD RETURN        */
*           IF CMDCODES=DRUFLAG THEN/* RESPONSE BDU          @ZM47883*/
         CLC   CMDCODES(3,RPRU),@CB01627                           0509
         BNE   @RF00509                                            0509
*             DO;                   /* YES                   @ZM47883*/
*               RFY                                                0511
*                 RELEMNT RSTD;     /* GET 1ST ELEM ON Q     @ZM47883*/
*               RELEMNT=OPCDSRWT;   /* OPCDSRWT              @ZM47883*/
         L     RELEMNT,OPCDSRWT(,ROPCAVT)                          0512
*               IF RELEMNT=AVTFZERO THEN/* IF Q IS EMPTY     @ZM47883*/
         L     @14,AVTFZERO(,IEDQAPTR)                             0513
         CR    RELEMNT,@14                                         0513
         BNE   @RF00513                                            0513
*                 DO;               /*                       @ZM47883*/
*                   OPCDSRWT=ROPCE; /* PUT OPCE ON Q         @ZM47883*/
         ST    ROPCE,OPCDSRWT(,ROPCAVT)                            0515
*                   OCLINK=AVTFZERO;/* ZERO LINK FIELD       @ZM47883*/
         ST    @14,OCLINK(,ROPCE)                                  0516
*                 END;              /*                       @ZM47883*/
*               ELSE                                               0518
*                 DO;               /*                       @ZM47883*/
         B     @RC00513                                            0518
@RF00513 DS    0H                                                  0519
*                   OCLINK=RELEMNT; /* CHAIN 1ST ELEM        @ZM47883*/
         ST    RELEMNT,OCLINK(,ROPCE)                              0519
*                   OPCDSRWT=ROPCE; /* MAKE OPCE 1ST ON Q    @ZM47883*/
         ST    ROPCE,OPCDSRWT(,ROPCAVT)                            0520
*                 END;              /*                       @ZM47883*/
*               RFY                                                0522
*                 RELEMNT UNRSTD;   /*                       @ZM47883*/
@RC00513 DS    0H                                                  0523
*               RPARM=RPRU;         /* PARM EQU BUFFER ADR@ZM47883   */
         LR    RPARM,RPRU                                          0523
*               PRUTIC=INVALTIC;    /* SET INVALID TIC       @ZM47938*/
         MVC   PRUTIC(4,RPRU),@CB01110                             0524
*               CALL FREEBUF;       /* FREE RESPONSE BUF     @ZM47883*/
         L     @15,OPCFREBF(,ROPCAVT)                              0525
         BALR  @14,@15                                             0525
*               RZERO=ZERO;         /* PARM FOR 00           @ZM47883*/
         SLR   RZERO,RZERO                                         0526
*               OPCCOPCE=AVTFZERO;  /* ZERO OPCE POINTER     @ZM47883*/
         L     @14,AVTFZERO(,IEDQAPTR)                             0527
         ST    @14,OPCCOPCE(,ROPCAVT)                              0527
*               OPCMODID=MOD00;     /* SET XCTL MOD ID       @ZM47883*/
         MVC   OPCMODID(2,ROPCAVT),MOD00                           0528
*               GOTO XCTL;          /* EXIT                  @ZM47883*/
         B     XCTL                                                0529
*             END;                  /*                       @ZM47883*/
*         END;                      /*                       @ZM47883*/
@RF00509 DS    0H                                                  0532
*       RFY                                                        0532
*         RPRU UNRSTD;              /*                       @ZM47883*/
@RF00505 DS    0H                                                  0533
*/*                                                          @ZM47883*/
*/*      ASSUME THIS IS A RECORD STORAGE REQUEST. SETUP      @ZM47883*/
*/*      NCP STORAGE DATA IN WTO PLIST TO BE WRITTEN TO      @ZM47883*/
*/*      PRIMARY OPERATOR CONTROL TERMINAL.                  @ZM47883*/
*/*                                                          @ZM47883*/
*                                                                  0533
*       RFY                                                        0533
*         RELEMNT RSTD;             /*                       @ZM47883*/
*       RELEMNT=OPCDSRWT;           /* DEQUEUE THE           @ZM47883*/
         L     RELEMNT,OPCDSRWT(,ROPCAVT)                          0534
*       OPCDSRWT=RELEMNT->OCLINK;   /* OPCE FROM WAIT CHN    @ZM47883*/
         L     @14,OCLINK(,RELEMNT)                                0535
         ST    @14,OPCDSRWT(,ROPCAVT)                              0535
*       OPCCOPCE=RELEMNT;           /* RESET OPCE FOR 07     @ZM47883*/
         ST    RELEMNT,OPCCOPCE(,ROPCAVT)                          0536
*       LENGT=DISPLEN*TWO+LENGTH(MESSAGE);/* SET MSG LENGTH-- LENGTH
*                                      OF MESSAGE PLUS 2 CHAR FOR  0537
*                                      EACH BYTE OF DATA TO INSERT 0537
*                                                            @G36XRRU*/
         MVC   LENGT(2,RWORKA),@CH01683                            0537
*       MESSAGE=MSGFILD;            /* MOVE MESSAGE TO WORK AREA     */
         MVC   MESSAGE(28,RWORKA),MSGFILD                          0538
*       NAME=RELEMNT->OCMODNME;     /* PLACE NAME IN MSG     @ZM47883*/
         MVC   NAME(8,RWORKA),OCMODNME(RELEMNT)                    0539
*       RWORKPTR=ADDR(STARTTXT);    /* POINT TO START OF MESSAGE   0540
*                                      INSERT                        */
         LA    RWORKPTR,STARTTXT(,RWORKA)                          0540
*       RFY                                                        0541
*         IEDQPRF BASED(ROPCE);     /*                       @ZM47883*/
*       PRFTIC=INVALTIC;            /* SET INVALID TIC       @ZM47920*/
         MVC   PRFTIC(4,ROPCE),@CB01110                            0542
*       RSORCFLD=AVTHDRSZ+ADDR(PRFSUNIT)+PRFISIZE+LENGTH(CMDDATA);/*
*                                      POINT TO SOURCE FLD@ZM47883   */
         LA    RSORCFLD,PRFSUNIT(,ROPCE)                           0543
         AL    RSORCFLD,@CF00474                                   0543
         SLR   @14,@14                                             0543
         IC    @14,PRFISIZE(,ROPCE)                                0543
         ALR   RSORCFLD,@14                                        0543
         LA    RSORCFLD,13(,RSORCFLD)                              0543
*       RFY                                                        0544
*         IEDQPRF BASED(OCUNIT);    /*                       @ZM47883*/
*       RELEMNT=ROPCE;              /* SAVE BUFFER ADDRESS@ZM47938   */
         LR    RELEMNT,ROPCE                                       0545
*       ROPCE=OPCCOPCE;             /* RESET OPCE POINTER    @ZM47883*/
         L     @14,OPCCOPCE(,ROPCAVT)                              0546
         LR    ROPCE,@14                                           0546
*       RFY                                                        0547
*         IEDQOPCE BASED(ROPCE);    /*                               */
*       OCUNIT=RELEMNT;             /* CHAIN BUF OFF OPCE    @ZM47920*/
         ST    RELEMNT,OCUNIT(,ROPCE)                              0548
*       RFY                                                        0549
*         RELEMNT UNRSTD;           /*                               */
*       RESPECIFY                                                  0550
*        (RTEXTC) RESTRICTED;                                      0550
*       RTEXTC=ZERO;                /* ZERO TEXT LENGTH COUNT        */
         SLR   RTEXTC,RTEXTC                                       0551
*/********************************************************************/
*/* CONVERT TWO CHARACTERS OF TEXT AT A TIME. THE THIRD EXTRA        */
*/* CHARACTER PICKED UP BY THE 'UNPACK' IS OBTAINED ONLY TO ADJUST   */
*/* FOR THE SIGN AND IS DISREGARDED.                                 */
*/********************************************************************/
*                                                                  0552
*BUILDMSG:                                                         0552
*       GEN( UNPK 0(5,RWORKPTR),0(3,RSORCFLD));/*            @G36XRRU*/
BUILDMSG  UNPK 0(5,RWORKPTR),0(3,RSORCFLD)
*       RCOUNTER=ONE;               /* INITIALIZE COUNTER            */
         LA    RCOUNTER,1                                          0553
*CONVERT:                                                          0554
*       IF RCOUNTER<FIVE THEN       /* HAVE FOUR OUTPUT CHARACTERS 0554
*                                      BEEN CONVERTED ?              */
CONVERT  C     RCOUNTER,@CF00186                                   0554
         BNL   @RF00554                                            0554
*         DO;                       /* NO, CONTINUE                  */
*           IF OUTCHAR>CHAR9 THEN   /* DOES CHAR NEED CONVERTING ?   */
         CLC   OUTCHAR(1,RWORKPTR),CHAR9                           0556
         BNH   @RF00556                                            0556
*             OUTCHARF=OUTCHARF-NUMSHIFT;/* YES, SHIFT IT TO       0557
*                                      ALPHABETIC                    */
         SLR   @14,@14                                             0557
         IC    @14,OUTCHARF(,RWORKPTR)                             0557
         SL    @14,@CF01589                                        0557
         STC   @14,OUTCHARF(,RWORKPTR)                             0557
*           RCOUNTER=RCOUNTER+ONE;  /* INCREMENT CHAR COUNT          */
@RF00556 LA    @14,1                                               0558
         ALR   RCOUNTER,@14                                        0558
*           RWORKPTR=RWORKPTR+ONE;  /* POINT TO NEXT OUTPUT CHAR     */
         ALR   RWORKPTR,@14                                        0559
*           GOTO CONVERT;           /* CONTINUE CONVERSION           */
         B     CONVERT                                             0560
*         END;                                                     0561
*       RTEXTC=RTEXTC+TWO;          /* BUMP NO. OF SOURCE CHARACTERS
*                                      PROCESSED                     */
@RF00554 LA    @14,2                                               0562
         ALR   RTEXTC,@14                                          0562
*       IF RTEXTC<DISPLEN THEN      /* HAVE ALL SOURCE CHARACTERS  0563
*                                      BEEN PUT INTO MSG ?   @G36XRRU*/
         C     RTEXTC,@CF01629                                     0563
         BNL   @RF00563                                            0563
*         DO;                       /* NO                            */
*           RSORCFLD=RSORCFLD+TWO;  /* BUMP TO NEXT TWO SOURCE     0565
*                                      CHARACTERS                    */
         ALR   RSORCFLD,@14                                        0565
*           IF RTEXTC//FOUR=ZERO THEN/* HAS A BLOCK OF FOUR SOURCE 0566
*                                      CHARACTERS BEEN PROCESSED ?   */
         LR    @10,RTEXTC                                          0566
         SRDA  @10,32                                              0566
         D     @10,@CF00278                                        0566
         LTR   @10,@10                                             0566
         BNZ   @RF00566                                            0566
*             DO;                   /* YES                           */
*               IF RTEXTC=FOUR×     /* WAS BLOCK THE FIRST OR        */
*                   RTEXTC=TWENTY THEN/* FIFTH BLOCK ?               */
         C     RTEXTC,@CF00278                                     0568
         BE    @RT00568                                            0568
         C     RTEXTC,@CF01613                                     0568
         BNE   @RF00568                                            0568
@RT00568 DS    0H                                                  0569
*                 DO;               /* YES                           */
*                   DOBLBLNK=BLANKS(ONE:TWO);/* SET TWO BLANKS       */
         MVC   DOBLBLNK(2,RWORKPTR),BLANKS                         0570
*                   RWORKPTR=RWORKPTR+TWO;/* BUMP PAST BLANKS        */
         LA    @14,2                                               0571
         ALR   RWORKPTR,@14                                        0571
*                   LENGT=LENGT+TWO;/* INCREMENT MSG LENGTH          */
         SLR   @00,@00                                             0572
         ICM   @00,3,LENGT(RWORKA)                                 0572
         ALR   @14,@00                                             0572
         STCM  @14,3,LENGT(RWORKA)                                 0572
*                 END;                                             0573
*               ELSE                /* NO                            */
*                 DO;                                              0574
         B     @RC00568                                            0574
@RF00568 DS    0H                                                  0575
*                   SINGBLNK=BLANKS(ONE);/* SET ONE BLANK            */
         MVC   SINGBLNK(1,RWORKPTR),BLANKS                         0575
*                   RWORKPTR=RWORKPTR+ONE;/* BUMP PAST BLANK         */
         LA    @14,1                                               0576
         ALR   RWORKPTR,@14                                        0576
*                   LENGT=LENGT+ONE;/* INCREMENT MSG LENGTH          */
         SLR   @00,@00                                             0577
         ICM   @00,3,LENGT(RWORKA)                                 0577
         ALR   @14,@00                                             0577
         STCM  @14,3,LENGT(RWORKA)                                 0577
*                 END;                                             0578
*             END;                                                 0579
*           GOTO BUILDMSG;          /* CONTINUE                      */
         B     BUILDMSG                                            0580
*         END;                                                     0581
*       RESPECIFY                                                  0582
*        (RTEXTC) UNRESTRICTED;                                    0582
@RF00563 DS    0H                                                  0583
*       OPCMODID=WRITE;             /* MOVE IN NAME OF 07@G36XRRU    */
         MVC   OPCMODID(2,ROPCAVT),WRITE                           0583
*       GOTO XCTL;                  /* CALL NEXT MODULE              */
         B     XCTL                                                0584
*BADRESP:                                                          0585
*       RFY                                                        0585
*         RPRU RSTD;                /*                       @G36XRRU*/
BADRESP  DS    0H                                                  0586
*       RFY                                                        0586
*        (RZERO,                                                   0586
*         RPARM) RSTD;              /*                       @G36XRRU*/
*       IF BDUSYRSP=TOOBIG&BDUEXRSP=EXTDRSP THEN/* DISPLAY ADDRESS 0587
*                                      TOO HIGH FOR THE 3705 ?     0587
*                                      *@G36XRRU                     */
         LA    @14,12                                              0587
         ALR   @14,RPRU                                            0587
         CLI   BDUSYRSP(@14),X'10'                                 0587
         BNE   @RF00587                                            0587
         CLI   BDUEXRSP(@14),X'05'                                 0587
         BNE   @RF00587                                            0587
*         RZERO=MSGEXCED;           /* YES, SET MSG NUMBER           */
         LA    RZERO,395                                           0588
*       RFY                                                        0589
*         RPRU UNRSTD;              /*                       @G36XRRU*/
@RF00587 DS    0H                                                  0590
*/*      ELSE                             NO                         */
*                                                                  0590
*       RZERO=MSG199;               /* SET ERROR MSG                 */
         LA    RZERO,199                                           0590
*       GOTO ERROR;                 /* WRITE THE MESSAGE             */
         B     ERROR                                               0591
*ERROR1:                                                           0592
*       RZERO=INVALMSG;             /* SET MSG NUMBER                */
ERROR1   LA    RZERO,18                                            0592
*ERROR:                                                            0593
*       OPCMODID=ERRORMOD;          /* ERROR MSG MODULE      @G36XRRU*/
ERROR    MVC   OPCMODID(2,ROPCAVT),ERRORMOD                        0593
*/********************************************************************/
*/* XCTL TO NEXT MODULE.                                             */
*/********************************************************************/
*                                                                  0594
*XCTL:                                                             0594
*       RPARM=ROPCAVT;              /* SET UP AVT ADDRESS            */
XCTL     LR    RPARM,ROPCAVT                                       0594
*       GEN EXIT REFS(OPCXCTL,ROPCAVT) NOSEQFLOW SETS(REG15);      0595
*                                                     /*     @G36XRRU*/
         XCTL  SF=(E,OPCXCTL(ROPCAVT)) EXIT                    @G36XRRU
*       GEN REFS(OCMODNME,ROPCE,RSORCFLD);                         0596
*                                   /*                       @G36XRRU*/
*        PACK ADDRESS INTO 1ST FOUR BYTES OF OCMODNME
PACKADDR PACK  OCMODNME(5,ROPCE),0(0,RSORCFLD)                 @G36XRRU
*     END IGCDC10D                                                 0597
*                                                                  0597
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0597
*           ;                                                      0597
@EL00001 DS    0H                                                  0598
@EF00001 DS    0H                                                  0598
@ER00001 BR    @14                                                 0598
@DATA    DS    0H
@CH00599 DC    H'13'
@CH01683 DC    H'92'
@SM01685 MVC   OPCDOUBL(0,ROPCAVT),RNNAME(RSORCFLD)
@SM01687 MVC   OCBACKUP-1(0,@01),BLANKS
         DS    0F
         DS    0F
@CF00278 DC    F'4'
@CF00186 DC    F'5'
@CF00069 DC    F'8'
@CF01593 DC    F'9'
@CF01681 DC    F'14'
@CF01613 DC    F'20'
@CF01589 DC    F'57'
@CF01691 DC    F'-8'
@CF01011 DC    F'-3'
@CF01689 DC    XL4'0000FFFF'
@CF01629 DC    XL4'0020'
@CF00474 DC    XL4'1E'
         DS    0D
@CB01110 DC    X'08000002'
@CB01623 DC    X'0B80001C'
@CB01627 DC    X'010331'
@CB01629 DC    X'0020'
BLANKS   DC    CL8'        '
MSGFILD  DS    CL28
         ORG   MSGFILD
@NM00171 DC    CL8'IED207I '
@NM00172 DS    CL8
@NM00173 DC    CL12' 3705 STORE='
         ORG   MSGFILD+28
CHARA    DC    CL1'A'
CHARF    DC    CL1'F'
CHAR0    DC    CL1'0'
CHAR9    DC    CL1'9'
COMMA    DC    CL1','
ERRORMOD DC    CL2'03'
THISMOD  DC    CL2'DC'
WRITE    DC    CL2'07'
MOD02    DC    CL2'02'
MOD00    DC    CL2'00'
ZAPAREA  DC    XL100'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RZERO    EQU   @00
RPARM    EQU   @01
RELEMNT  EQU   @01
RTEXTC   EQU   @01
ROPCAVT  EQU   @02
ROPCE    EQU   @03
IEDQAPTR EQU   @04
RWORKA   EQU   @05
ROPERAND EQU   @06
RCOUNTER EQU   @07
RWORKPTR EQU   @08
RTRM     EQU   @08
RSORCFLD EQU   @09
IEDQPPTR EQU   @09
RPRU     EQU   @10
RBASE    EQU   @12
RSAVE    EQU   @13
RRET     EQU   @14
REG15    EQU   @15
RBRANCH  EQU   @15
IEDPRUQP EQU   0
IEDQNPTR EQU   0
IEDQTPTR EQU   0
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTMSGS  EQU   IEDQAVTD+729
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTFZERO EQU   IEDQAVTD+908
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00086 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTTNTX EQU   IEDNSVTD+252
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
TNTENLEN EQU   IEDQTNTD+40
IEDQTDCE EQU   IEDQTNTD+46
IEDTNTA  EQU   0
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
OPCDSRWT EQU   IEDQOPCD+1184
IEDQOPCE EQU   0
OCLINK   EQU   IEDQOPCE
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRESP   EQU   OCFLAG
@NM00123 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00123
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
@NM00140 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00140
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFISIZE EQU   PRFSCAN+1
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDBDU   EQU   0
BDUFNFLG EQU   IEDBDU+2
BDUHEADR EQU   BDUFNFLG
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
MSG      EQU   0
LENGT    EQU   MSG
MESSAGE  EQU   MSG+4
NAME     EQU   MESSAGE+8
STARTTXT EQU   MSG+32
OPERAND  EQU   0
OPERANDF EQU   OPERAND
RNNAME   EQU   0
OUTCHAR  EQU   0
OUTCHARF EQU   OUTCHAR
STORADDR EQU   0
SINGBLNK EQU   0
DOBLBLNK EQU   0
IEDIAP04 EQU   0
IEDQTNT  EQU   0
GETBUFF  EQU   0
FREEBUF  EQU   0
NAMEFILD EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   0
TNTFIRST EQU   0
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMIPLDM EQU   TRMNCP
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
CMDDATA  EQU   PRUDATA
CMDCODES EQU   CMDDATA
CMDNETA  EQU   CMDDATA+3
CMDTYPE  EQU   CMDDATA+5
CMDLEN   EQU   CMDDATA+7
CMDADDR  EQU   CMDDATA+9
BDUTEXT  EQU   BDUEND
OCCIB    EQU   OCREQVAL
PRFSHDR  EQU   IEDQPRF+42
TRMOPT   EQU   IEDQTRM+20
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CMDSTOR  EQU   CMDDATA+13
@NM00176 EQU   CMDDATA+6
@NM00170 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00169 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00168 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OCICINAC EQU   OCICSW
@NM00129 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00128 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
@NM00175 EQU   MESSAGE
@NM00174 EQU   MSG+2
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00167 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00166 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00165 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00164 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   IEDTH+4
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00163 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
@NM00162 EQU   TRHBYTE2
@NM00161 EQU   TRHBYTE2
@NM00160 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00159 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00158 EQU   TRHBYTE1
@NM00157 EQU   TRHBYTE1
@NM00156 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00155 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00154 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
BDUMODIF EQU   IEDBDU+1
BDUCMND  EQU   IEDBDU
@NM00153 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00152 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00151 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00150 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00149 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00148 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00147 EQU   PRUTIC
@NM00146 EQU   IEDPRUQD+4
PRF2SEQP EQU   PRF2WD2
@NM00145 EQU   IEDPF2+1
@NM00144 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00143 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00142 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
@NM00141 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00140+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFPIUO  EQU   PRFPLQCB
PRFTI0   EQU   PRFTIC+1
@NM00139 EQU   PRFTICC
@NM00138 EQU   PRFTICC
@NM00137 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00136 EQU   PRFTICC
@NM00135 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00134 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
@NM00133 EQU   OCLDNME+4
@NM00132 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00131 EQU   OCREQFLG
@NM00130 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00127 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00126 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00125 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00124 EQU   @NM00123+2
OCCONID  EQU   OCDEST
OCRLN    EQU   IEDQOPCE+15
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00122 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00121 EQU   OCRUDEST+1
@NM00120 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OPCBOTTM EQU   IEDQOPCD+1188
@NM00119 EQU   IEDQOPCD+1100
@NM00118 EQU   IEDQOPCD+948
@NM00117 EQU   IEDQOPCD+940
@NM00116 EQU   IEDQOPCD+380
@NM00115 EQU   OPCPWCOB+9
@NM00114 EQU   OPCPWCOB+8
@NM00113 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00112 EQU   OPCSPEC
@NM00111 EQU   OPCSPEC
@NM00110 EQU   OPCSPEC
@NM00109 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00108 EQU   OPCLDNME+5
@NM00107 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00106 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
TNTTRMAD EQU   IEDTNTA
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTSRCHX EQU   IEDQTNTD+38
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00091 EQU   IEDQAVTD+1242
@NM00090 EQU   IEDQAVTD+1241
@NM00089 EQU   IEDQAVTD+1240
@NM00088 EQU   IEDQAVTD+1237
@NM00087 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00085 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00084 EQU   IEDQAVTD+1140
@NM00083 EQU   IEDQAVTD+1137
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00074 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00073 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00072 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00069 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00068 EQU   IEDQAVTD+950
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00053 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00052 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00051 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00050 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00049 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00048 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00040 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00039 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00038 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00023 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00021 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00015 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00397 EQU   PRORESP
@RT00404 EQU   ERROR1
@RF00409 EQU   ERROR1
@RT00460 EQU   ERROR1
@RT00462 EQU   VALID
@RF00464 EQU   ERROR1
@RT00470 EQU   ERROR1
@RT00507 EQU   BADRESP
@RF00566 EQU   BUILDMSG
@RC00568 EQU   BUILDMSG
@ENDDATA EQU   *
         END   IGCDC10D,(C'PLS0745',0701,77363)
