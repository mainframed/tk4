         TITLE 'IGCMS10D, COMMAND PROCESSOR FOR BHSET, TRANLMT, AND SES*
               SSION    '
IGCMS10D CSECT ,                                                01S0001
@PROLOG  BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
*                                   /*
IGCMS10D IEDHJN AFTERHJN,HJN           MODULE IDENTIFICATION MACRO
*   ROPCAVT=RPARM;                  /* SET THE BASE POINTER FOR THE
*                                      OPERATOR CONTROL ADDRESS 02S0439
*                                      VECTOR TABLE                  */
         LR    ROPCAVT,RPARM                                    02S0439
*   RFY                                                         02S0440
*     RPARM UNRSTD;                 /* RELEASE THE PARAMETER REGISTER
*                                      FOR USE BY THE COMPILER       */
*   REG10=OPCWORK+56;               /* SET THE BASE REGISTER TO BE
*                                      USED FOR ADDRESSING AUTOMATIC
*                                      DATA WITH THE POINTER TO THE
*                                      OPERATOR CONTROL RESIDENT WORK
*                                      AREA DISPLACED BY THE MAXIMUM
*                                      LENGTH OF A COMMAND THAT IS TO
*                                      BE PROCESSED                  */
         LA    REG10,56                                         02S0441
         AL    REG10,OPCWORK(,ROPCAVT)                          02S0441
*   GEN REFS(REG10) NOSETS;                                     02S0442
*                                   /*
         USING @DATD,REG10             INFORM THE ASSEMBLER OF THE
*                                      BASE REGISTER TO BE USED FOR
*                                      ADDRESSING AUTOMATIC DATA
*   RSAVE=ADDR(OPCSAVE);            /* SET THE SAVE AREA POINTER
*                                      REGISTER WITH THE POINTER TO
*                                      THE OPERATOR CONTROL SAVE AREA*/
         LA    RSAVE,OPCSAVE(,ROPCAVT)                          02S0443
*                                                               02S0444
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT DOES THE PROCESSING THAT IS NECESSARY TO*/
*   /* PERFORM THE FUNCTION OF THE MODULE.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0444
*   ROPCE=OPCCOPCE;                 /* SET THE BASE POINTER FOR THE
*                                      OPCE                          */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                         02S0444
*   IF OCRESP=OFF                   /* THE OPCE HAS NO RESPONSE 02S0445
*                                      ASSOCIATED WITH IT            */
*     THEN                          /* VERIFY THE COMMAND OPERANDS
*                                      AND EITHER PREPARE TO SEND THE
*                                      APPROPRIATE REQUEST UNIT OR
*                                      SET REGISTER ZERO (0) WITH AN
*                                      ERROR MESSAGE NUMBER          */
         TM    OCRESP(ROPCE),B'00000001'                        02S0445
         BNZ   @RF00445                                         02S0445
*                                                               03S0446
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS.REQUEST: THIS SEGMENT VERIFIES THE INPUT COMMAND    */
*     /* OPERANDS AND PREPARES TO SEND THE APPROPRIATE REQUEST UNIT  */
*     /* OR SETS REGISTER ZERO (0) WITH AN ERROR MESSAGE NUMBER.     */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0446
*     DO;                                                       03S0446
*                                                               04S0447
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS.REQUEST.INITIAL: THIS SEGMENT DOES THE INITIAL    */
*       /* REQUEST PROCESSING. DELIMITING POINTERS TO THE COMMAND    */
*       /* TEXT ARE SET AND A BUFFER UNIT IS OBTAINED.               */
*       /*                                                           */
*       /*************************************************************/
*                                                               04S0447
*       DO;                                                     04S0447
*         RAVT=OPCAVTPT;            /* SET THE BASE REGISTER FOR THE
*                                      TCAM AVT                      */
         L     RAVT,OPCAVTPT(,ROPCAVT)                          04S0448
*         PTRCHAR=OPCSAVE(5);       /* SET THE POINTER TO THE FIRST
*                                      CHARACTER TO BE SCANNED       */
         L     PTRCHAR,OPCSAVE+16(,ROPCAVT)                     04S0449
*         PTRLAST=PTRCHAR+OPCSAVE(4)-1;/* SET THE POINTER TO THE LAST
*                                      CHARACTER IN THE REMAINING
*                                      COMMAND TEXT                  */
         LR    PTRLAST,PTRCHAR                                  04S0450
         AL    PTRLAST,OPCSAVE+12(,ROPCAVT)                     04S0450
         BCTR  PTRLAST,0                                        04S0450
*         REG01=1;                  /* SET REGISTER ONE (1) TO  04S0451
*                                      INDICATE THAT ONE BUFFER UNIT
*                                      IS DESIRED FOR THE PACKED
*                                      REQUEST UNIT                  */
         LA    REG01,1                                          04S0451
*         CALL ALLOCBUF;                                        04S0452
         L     @15,OPCGETBF(,ROPCAVT)                           04S0452
         BALR  @14,@15                                          04S0452
*         OCUNIT=REG01;             /* ATTACH THE BUFFER UNIT TO THE
*                                      OPCE                          */
         ST    REG01,OCUNIT(,ROPCE)                             04S0453
*         REG00=0;                  /* INDICATE THAT NO ERRORS HAVE
*                                      BEEN FOUND                    */
         SLR   REG00,REG00                                      04S0454
*       END;                                                    04S0455
*       IF OCSWITCH=OCBHSET         /* THE INPUT IS A "MODIFY BLOCK
*                                      HANDLER SET" COMMAND          */
*         THEN                      /* VERIFY THE COMMAND AND PREPARE
*                                      TO SEND THE APPROPRIATE  03S0456
*                                      REQUEST UNIT                  */
         CLI   OCSWITCH(ROPCE),X'1D'                            03S0456
         BNE   @RF00456                                         03S0456
*                                                               04S0457
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.REQUEST.BHSET: THIS SEGMENT VERIFIES THE INPUT  */
*         /* FROM THE "MODIFY BLOCK HANDLER SET" COMMAND AND EITHER  */
*         /* PREPARES TO SEND THE APPROPRIATE REQUEST UNIT OR SETS AN*/
*         /* ERROR MESSAGE NUMBER IN REGISTER ZERO (0).              */
*         /*                                                         */
*         /***********************************************************/
*                                                               04S0457
*         DO;                                                   04S0457
*           CALL RESOURCE;                                      04S0458
         BAL   @14,RESOURCE                                     04S0458
*           IF REG00=0              /* THE RESOURCE IS KNOWN TO TCAM */
*             THEN                  /* CONTINUE PROCESSING THE BHSET
*                                      COMMAND                       */
         LTR   REG00,REG00                                      04S0459
         BNZ   @RF00459                                         04S0459
*             IF TRMPREF=ON&(TRMTYPE=TRMPSNA/* THE RESOURCE IS  04S0460
*                                      NON-SNA                       */
*                 ×TRMTYPE=TRMCLUST)/* THE RESOURCE IS A CLUSTER     */
*               THEN                /* DETERMINE THE ACTION THAT IS
*                                      TO BE PERFORMED               */
         TM    TRMPREF(RTRM),B'00010000'                        04S0460
         BNO   @RF00460                                         04S0460
         LR    @15,RTRM                                         04S0460
         SL    @15,@CF01621                                     04S0460
         CLI   TRMTYPE(@15),X'4F'                               04S0460
         BE    @RT00460                                         04S0460
         CLI   TRMTYPE(@15),X'40'                               04S0460
         BNE   @RF00460                                         04S0460
@RT00460 DS    0H                                               04S0461
*               DO;                                             04S0461
*                 IF ACTION='C'     /* THE BLOCK HANDLER SET    04S0462
*                                      ASSOCIATION IS TO BE CHANGED  */
*                   THEN            /* CHECK FOR A CORRECT "RELATIVE
*                                      POSITION" OPERAND             */
         CLI   ACTION(PTRCHAR),C'C'                             04S0462
         BNE   @RF00462                                         04S0462
*                                                               05S0463
*                   /*************************************************/
*                   /*                                               */
*                   /* PROCESS.REQUEST.BHSET.DOUBLE: THIS SEGMENT    */
*                   /* SCANS FOR THE "RELATIVE POSITION" OPERAND AND */
*                   /* SETS THE APPROPRIATE FIELDS IN THE BDU OR SETS*/
*                   /* REGISTER ZERO (0) WITH AN ERROR MESSAGE.      */
*                   /*                                               */
*                   /*************************************************/
*                                                               05S0463
*                   DO;                                         05S0463
*                     IF CHARNEXT=','/* THE OPERAND DELIMITER IS
*                                      CORRECT                       */
*                         &PTRLAST-PTRCHAR>1/* THERE IS A "RELATIVE
*                                      POSITION" OPERAND             */
*                       THEN        /* CONVERT THE CHARACTER NUMERIC
*                                      OPERAND                       */
         CLI   CHARNEXT(PTRCHAR),C','                           05S0464
         BNE   @RF00464                                         05S0464
         LR    @15,PTRLAST                                      05S0464
         SLR   @15,PTRCHAR                                      05S0464
         C     @15,@CF00060                                     05S0464
         BNH   @RF00464                                         05S0464
*                       DO;                                     05S0465
*                         PTRCHAR=PTRCHAR+2;/* SET THE CHARACTER
*                                      POINTER TO THE FIRST CHARACTER
*                                      OF THE OPERAND                */
         AL    PTRCHAR,@CF00127                                 05S0466
*                         CALL NUMBOPER;                        05S0467
         BAL   @14,NUMBOPER                                     05S0467
*                         IF REG00=0/* ALL OF THE COMMAND OPERANDS
*                                      ARE VALID                     */
*                             &PTRCHAR>PTRLAST/* THERE ARE NO   05S0468
*                                      EXTRANEOUS CHARACTERS         */
*                           THEN    /* SET THE APPROPRIATE BDU FIELDS*/
         LTR   REG00,REG00                                      05S0468
         BNZ   @RF00468                                         05S0468
         CR    PTRCHAR,PTRLAST                                  05S0468
         BNH   @RF00468                                         05S0468
*                           DO;                                 05S0469
*                             PRUDATCT=LENGTH(IEDBDU)+2;/* SET THE
*                                      COMMAND LENGTH                */
         L     @11,OCUNIT(,ROPCE)                               05S0470
         MVC   PRUDATCT(2,@11),@CH00045                         05S0470
*                             BDUTEXT(1)=BDUMBHSC;/* SET THE BDU
*                                      FIRST TEXT BYTE               */
         AL    @11,@CF00235                                     05S0471
         MVI   BDUTEXT(@11),X'80'                               05S0471
*                             BDUTEXT(2)=FIXEDNUM;/* SET THE    05S0472
*                                      "RELATIVE POSITION" VALUE DATA
*                                      FIELD OF THE BDU              */
         STC   FIXEDNUM,BDUTEXT+1(,@11)                         05S0472
*                             OCCKDAT2=FIXEDNUM;/* SAVE THE "RELATIVE
*                                      POSITION" OPERAND FOR    05S0473
*                                      CHECKPOINT                    */
         STC   FIXEDNUM,OCCKDAT2(,ROPCE)                        05S0473
*                           END;                                05S0474
*                       END;                                    05S0475
*                     ELSE          /* INDICATE THAT THE COMMAND
*                                      SYNTAX IS INCORRECT           */
*                       REG00=MSGINVOP;/* SET REGISTER ZERO (0) WITH
*                                      AN ERROR MESSAGE NUMBER       */
         B     @RC00464                                         05S0476
@RF00464 LA    REG00,18                                         05S0476
*                   END;                                        05S0477
*                 ELSE              /* DETERMINE THE TYPE OF THE
*                                      SINGLE TEXT BYTE COMMAND      */
*                                                               05S0478
*                   /*************************************************/
*                   /*                                               */
*                   /* PROCESS.REQUEST.BHSET.SINGLE: THIS SEGMENT    */
*                   /* DETERMINES THE TYPE OF THE SINGLE DATA BYTE   */
*                   /* COMMAND AND SETS THE RELEVANT FIELDS IN THE   */
*                   /* BDU OR SETS REGISTER ZERO (0) WITH AN ERROR   */
*                   /* MESSAGE NUMBER.                               */
*                   /*                                               */
*                   /*************************************************/
*                                                               05S0478
*                   DO;                                         05S0478
         B     @RC00462                                         05S0478
@RF00462 DS    0H                                               05S0479
*                     IF PTRLAST=PTRCHAR/* THE COMMAND LENGTH IS
*                                      CORRECT                       */
*                       THEN        /* SET THE COMMAND FIELDS        */
         CR    PTRLAST,PTRCHAR                                  05S0479
         BNE   @RF00479                                         05S0479
*                       DO;                                     05S0480
*                         IF ACTION='A'/* THE CURRENT BH SET IS TO BE
*                                      ACTIVATED                     */
*                           THEN    /* CHANGE THE COMMAND DATA TYPE  */
         CLI   ACTION(PTRCHAR),C'A'                             05S0481
         BNE   @RF00481                                         05S0481
*                           BDUTEXT(1)=BDUMBHSA;/* SET THE BDU TEXT
*                                      DATA                          */
         L     @11,OCUNIT(,ROPCE)                               05S0482
         MVI   BDUTEXT+12(@11),X'40'                            05S0482
*                         ELSE                                  05S0483
*                           IF ACTION='D'/* THE COMMAND INDICATES
*                                      THAT THE CURRENT BH SET IS TO
*                                      BE DEACTIVATED                */
*                             THEN  /* CHANGE THE COMMAND DATA       */
         B     @RC00481                                         05S0483
@RF00481 CLI   ACTION(PTRCHAR),C'D'                             05S0483
         BNE   @RF00483                                         05S0483
*                             BDUTEXT(1)=BDUMBHSD;/* SET THE BDU TEXT
*                                      DATA                          */
         L     @11,OCUNIT(,ROPCE)                               05S0484
         MVI   BDUTEXT+12(@11),X'20'                            05S0484
*                           ELSE    /* INDICATE THAT THE "MODIFIER"
*                                      OPERAND IS INVALID            */
*                             REG00=MSGINVOP;                   05S0485
         B     @RC00483                                         05S0485
@RF00483 LA    REG00,18                                         05S0485
*                         IF REG00=0/* THE "ACTION" OPERAND IS  05S0486
*                                      CORRECT                       */
*                           THEN    /* SET THE DATA COUNT FIELD      */
@RC00483 DS    0H                                               05S0486
@RC00481 LTR   REG00,REG00                                      05S0486
         BNZ   @RF00486                                         05S0486
*                           PRUDATCT=LENGTH(IEDBDU)+1;          05S0487
         L     @11,OCUNIT(,ROPCE)                               05S0487
         MVC   PRUDATCT(2,@11),@CH00569                         05S0487
*                       END;                                    05S0488
*                     ELSE          /* INDICATE THAT THE COMMAND IS
*                                      TOO LONG                      */
*                       REG00=MSGINVOP;/* SET REGISTER ZERO (0) WITH
*                                      THE APPROPRIATE MESSAGE NUMBER*/
         B     @RC00479                                         05S0489
@RF00479 LA    REG00,18                                         05S0489
*                   END;                                        05S0490
@RC00479 DS    0H                                               05S0491
*                 IF REG00=0        /* NO ERRORS HAVE BEEN FOUND IN
*                                      THE COMMAND TEXT              */
*                   THEN            /* SET THE COMMON BHSET COMMAND
*                                      FIELDS                        */
@RC00462 LTR   REG00,REG00                                      04S0491
         BNZ   @RF00491                                         04S0491
*                                                               05S0492
*                   /*************************************************/
*                   /*                                               */
*                   /* PROCESS.REQUEST.BHSET.BLDBHSET: THIS SEGMENT  */
*                   /* BUILDS THE BH SET PACKED REQUEST UNIT.        */
*                   /*                                               */
*                   /*************************************************/
*                                                               05S0492
*                   DO;                                         05S0492
*                     PRURHTH(1:3)=TRHFID0;/* SET THE PACKED REQUEST
*                                      UNIT REQUEST HEADER           */
         L     @11,OCUNIT(,ROPCE)                               05S0493
         LR    @09,@11                                          05S0493
         SL    @09,@CF00045                                     05S0493
         MVC   PRURHTH(3,@09),@CB01372                          05S0493
*                     PRUFIDN=TTH0BYT0;/* SET THE PACKED REQUEST UNIT
*                                      TRANSMISSION HEADER           */
         MVI   PRUFIDN(@09),X'0C'                               05S0494
*                     PRUTTCIN=OCTRMTBL;/* SET THE DESTINATION FROM
*                                      THE TTCIN OF THE RESOURCE     */
         LH    @09,OCTRMTBL(,ROPCE)                             05S0495
         N     @09,@CF01646                                     05S0495
         STH   @09,PRUTTCIN(,@11)                               05S0495
*                     BDUCMND=CD0CTRL;/* SET THE BDU COMMAND CODE    */
         AL    @11,@CF00235                                     05S0496
         MVI   BDUCMND(@11),X'08'                               05S0496
*                     BDUMODIF=CD0CMBHS;/* SET THE BDU MODIFIER VALUE*/
         MVI   BDUMODIF(@11),X'8D'                              05S0497
*                     OCCKDAT1=BDUTEXT(1);/* SAVE THE FIRST BDU TEXT
*                                      BYTE FOR CHECKPOINT           */
         MVC   OCCKDAT1(1,ROPCE),BDUTEXT(@11)                   05S0498
*                   END;                                        05S0499
*               END;                                            04S0500
*             ELSE                  /* INDICATE THAT THE COMMAND IS
*                                      INVALID FOR THE PARTICULAR
*                                      RESOURCE                      */
*               REG00=525;                                      04S0501
         B     @RC00460                                         04S0501
@RF00460 LA    REG00,525                                        04S0501
*         END;                                                  04S0502
*       ELSE                                                    03S0503
*         IF OCSWITCH=OCTRANL       /* THE INPUT IS FROM A "MODIFY
*                                      TRANSMISSION LIMIT" COMMAND   */
*           THEN                    /* VERIFY THE COMMAND AND PREPARE
*                                      TO SEND THE APPROPRIATE  03S0503
*                                      REQUEST UNIT                  */
         B     @RC00456                                         03S0503
@RF00456 CLI   OCSWITCH(ROPCE),X'1F'                            03S0503
         BNE   @RF00503                                         03S0503
*                                                               04S0504
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.REQUEST.TRANLMT: THIS SEGMENT PROCESSES THE   */
*           /* INPUT FROM A "CHANGE TRANSMISSION LIMIT" COMMAND AND  */
*           /* EITHER PREPARES TO SEND THE APPROPRIATE PACKED REQUEST*/
*           /* UNIT OR SETS AN ERROR MESSAGE NUMBER IN REGISTER ZERO */
*           /* (0).                                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                               04S0504
*           DO;                                                 04S0504
*             CALL RESOURCE;                                    04S0505
         BAL   @14,RESOURCE                                     04S0505
*             IF REG00=0            /* THE RESOURCE IS KNOWN TO TCAM */
*               THEN                /* CONTINUE PROCESSING THE  04S0506
*                                      TRANLMT COMMAND               */
         LTR   REG00,REG00                                      04S0506
         BNZ   @RF00506                                         04S0506
*               IF TRMPREF=ON&TRMTYPE=TRMPSNA/* THE RESOURCE IS 04S0507
*                                      NON-SNA                       */
*                 THEN              /* BUILD THE "CHANGE TRANSMISSION
*                                      LIMIT" PACKED REQUEST UNIT    */
         TM    TRMPREF(RTRM),B'00010000'                        04S0507
         BNO   @RF00507                                         04S0507
         LR    @15,RTRM                                         04S0507
         AL    @15,@CF01155                                     04S0507
         CLI   TRMTYPE-11(@15),X'4F'                            04S0507
         BNE   @RF00507                                         04S0507
*                                                               05S0508
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.REQUEST.TRANLMT.BLDTRANL: THIS SEGMENT  */
*                 /* BUILDS THE PACKED REQUEST UNIT FOR THE "CHANGE  */
*                 /* TRANSMISSION LIMIT" COMMAND.                    */
*                 /*                                                 */
*                 /***************************************************/
*                                                               05S0508
*                 DO;                                           05S0508
*                   IF PTRLAST-PTRCHAR<=2&PTRLAST>=PTRCHAR/* THE
*                                      "TRANSMISSION LIMIT" OPERAND
*                                      EXITS                         */
*                     THEN          /* CONVERT THE OPERAND           */
         LR    @15,PTRLAST                                      05S0509
         SLR   @15,PTRCHAR                                      05S0509
         C     @15,@CF00127                                     05S0509
         BH    @RF00509                                         05S0509
         CR    PTRLAST,PTRCHAR                                  05S0509
         BL    @RF00509                                         05S0509
*                     DO;                                       05S0510
*                       CALL NUMBOPER;                          05S0511
         BAL   @14,NUMBOPER                                     05S0511
*                       IF REG00=0  /* THE "TRANSMISSION LIMIT" 05S0512
*                                      OPERAND IS CORRECT            */
*                         THEN      /* BUILD THE REQUEST UNIT        */
         LTR   REG00,REG00                                      05S0512
         BNZ   @RF00512                                         05S0512
*                         DO;                                   05S0513
*                           REG01=0;/*                       @YM08101*/
         SLR   REG01,REG01                                      05S0514
*                           REG01=OCTRMTBL;/* SET THE ARGUMENT  05S0515
*                                      REGISTER              @YM08101*/
         LH    REG01,OCTRMTBL(,ROPCE)                           05S0515
         N     REG01,@CF01646                                   05S0515
*                           RFY                                 05S0516
*                             REG15 RSTD;/* RESTRICT THE RESULT 05S0516
*                                      REGISTER              @YM08101*/
*                           CALL IEDIAP04;/*                 @YM08101*/
         L     @11,AVTSAVTP(,RAVT)                              05S0517
         L     @15,SAVTTNTX(,@11)                               05S0517
         BALR  @14,@15                                          05S0517
*                           CMDNETAD=REG15;/* SET THE DEVICE NETWORK
*                                      ADDRESS               @YM08101*/
         L     @14,OCUNIT(,ROPCE)                               05S0518
         STCM  REG15,3,CMDNETAD(@14)                            05S0518
*                           RFY                                 05S0519
*                             REG15 UNRSTD;/* UNRESTRICT THE RESULT
*                                      REGISTER              @YM08101*/
*                                                               06S0520
*                           /*****************************************/
*                           /*                                       */
*                           /* PROCESS.REQUEST.TRANLMT.BLDTRANL.DESTI*/
*                           /* NAT: THIS SEGMENT SETS THE DESTINATION*/
*                           /* FIELDS OF THE PACKED REQUEST UNIT FOR */
*                           /* THE "CHANGE TRANSMISSION LIMIT"       */
*                           /* COMMAND.                              */
*                           /*                                       */
*                           /*****************************************/
*                                                               06S0520
*                           DO;                                 06S0520
*                             REG01=RTRM;/* SET THE ARGUMENT REGISTER*/
         LR    REG01,RTRM                                       06S0521
*                             DO UNTIL(TRMTYPE=TRMLNCP);/* THE  06S0522
*                                      COMMUNICATIONS CONTROLLER
*                                      ENTRY IS FOUND                */
@DL00522 DS    0H                                               06S0523
*                               CALL COHORTLK;                  06S0523
         L     @15,OPCHORT(,ROPCAVT)                            06S0523
         BALR  @14,@15                                          06S0523
*                               RTRM=REG01;/* SET THE BASE POINTER
*                                      FOR THE TRM STRUCTURE         */
         LR    RTRM,REG01                                       06S0524
*                             END;                              06S0525
@DE00522 LR    @11,RTRM                                         06S0525
         AL    @11,@CF01155                                     06S0525
         CLI   TRMTYPE-11(@11),X'0F'                            06S0525
         BNE   @DL00522                                         06S0525
*                             PRUTTCIN=REG00;/* SET THE DESTINATION
*                                      TTCIN                         */
         L     @11,OCUNIT(,ROPCE)                               06S0526
         STH   REG00,PRUTTCIN(,@11)                             06S0526
*                             REG00=0;/* INDICATE THAT NO ERRORS HAVE
*                                      BEEN DETECTED                 */
         SLR   REG00,REG00                                      06S0527
*                           END;                                06S0528
*                           PRURHTH=RHPACKTH;/* SET THE PACKED  05S0529
*                                      REQUEST UNIT RH AND TH        */
         LR    @05,@11                                          05S0529
         AL    @05,@CF01647                                     05S0529
         MVC   PRURHTH(4,@05),@CB01593                          05S0529
*                           PRUDATCT=LENGTH(CMDDATA);/* SET THE 05S0530
*                                      PACKED REQUEST UNIT DATA COUNT
*                                      FIELD                         */
         MVC   PRUDATCT(2,@11),@CH00071                         05S0530
*                           CMDCODES=CD1XDTL;/* SET THE NETWORK 05S0531
*                                      SERVICES, BSC/SS, AND REQUEST
*                                      CODE INDICATORS               */
         MVC   CMDCODES(3,@11),@CB00897                         05S0531
*                           CMDVALUE=FIXEDNUM;/* SET THE NEW    05S0532
*                                      TRANSMISSION LIMIT VALUE      */
         STC   FIXEDNUM,CMDVALUE(,@11)                          05S0532
*                           OCCKDAT1=FIXEDNUM;/* SAVE THE NEW   05S0533
*                                      TRANSMISSION LIMIT FOR   05S0533
*                                      CHECKPOINT                    */
         STC   FIXEDNUM,OCCKDAT1(,ROPCE)                        05S0533
*                         END;                                  05S0534
*                     END;                                      05S0535
*                   ELSE            /* INDICATE THAT THE OPERANDS ARE
*                                      INVALID                       */
*                     REG00=MSGINVOP;/* SET REGISTER ZERO (0) WITH AN
*                                      ERROR MESSAGE NUMBER          */
         B     @RC00509                                         05S0536
@RF00509 LA    REG00,18                                         05S0536
*                 END;                                          05S0537
*               ELSE                /* INDICATE THAT THE COMMAND IS
*                                      INVALID FOR THE PARTICULAR
*                                      RESOURCE TYPE                 */
*                 REG00=525;                                    04S0538
         B     @RC00507                                         04S0538
@RF00507 LA    REG00,525                                        04S0538
*           END;                                                04S0539
*         ELSE                      /* VERIFY THE "MODIFY SESSION
*                                      LIMIT" COMMAND INPUT AND 03S0540
*                                      PREPARE TO SEND THE      03S0540
*                                      APPROPRIATE REQUEST UNIT      */
*                                                               04S0540
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.REQUEST.SESSION: THIS SEGMENT PROCESSES THE   */
*           /* INPUT FROM A "CHANGE SESSION LIMIT" COMMAND.          */
*           /*                                                       */
*           /*********************************************************/
*                                                               04S0540
*           DO;                                                 04S0540
         B     @RC00503                                         04S0540
@RF00503 DS    0H                                               04S0541
*             IF PTRLAST-PTRCHAR>=2 /* THERE ARE TWO MORE OPERANDS   */
*               THEN                /* PROCESS THE "RELATIVE LINE
*                                      NUMBER" OPERAND               */
         LR    @15,PTRLAST                                      04S0541
         SLR   @15,PTRCHAR                                      04S0541
         C     @15,@CF00127                                     04S0541
         BL    @RF00541                                         04S0541
*               DO;                                             04S0542
*                 CALL NUMBOPER;                                04S0543
         BAL   @14,NUMBOPER                                     04S0543
*                 IF REG00=0        /* IF NO ERRORS WERE ENCOUNTERED
*                                      DURING THE CONVERSION         */
*                   THEN            /* CONTINUE                      */
         LTR   REG00,REG00                                      04S0544
         BNZ   @RF00544                                         04S0544
*                   DO;                                         04S0545
*                     OCLINE=ON;    /* INDICATE THAT THERE IS A VALID
*                                      RELATIVE LINE NUMBER OPERAND  */
         OI    OCLINE(ROPCE),B'00010000'                        04S0546
*                     OCRLN=FIXEDNUM;/* STORE THE RELATIVE LINE 04S0547
*                                      NUMBER IN THE OPCE            */
         STC   FIXEDNUM,OCRLN(,ROPCE)                           04S0547
*                                                               05S0548
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS.REQUEST.SESSION.DCBLOCAT: THIS      */
*                     /* SEGMENT USES THE DCBLOCAT EXTERNAL PROCEDURE*/
*                     /* TO VERIFY THAT A SPECIFIC RESOURCE NAME IS  */
*                     /* KNOWN TO TCAM.                              */
*                     /*                                             */
*                     /***********************************************/
*                                                               05S0548
*                     DO;                                       05S0548
*                       REG01=FIXEDNUM;/* SET THE RELATIVE LINE 05S0549
*                                      NUMBER ARGUMENT               */
         LR    REG01,FIXEDNUM                                   05S0549
*                       OCBACKUP=OPCDOUBL;/* SET THE RESOURCE NAME
*                                      FOR MESSAGE GENERATION        */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)              05S0550
*                       CALL DCBLOCAT;                          05S0551
         L     @15,OPCDCBLK(,ROPCAVT)                           05S0551
         BALR  @14,@15                                          05S0551
*DCBLGOOD:                          /* (REG14+0)                     */
*                       GO TO AFTERDCB;/* CONTINUE THE VERIFICATION
*                                      PROCESSING                    */
         B     AFTERDCB                                         05S0552
*DCBLOBAD:                          /* (REG14+4)                     */
*                       REG00=MSGLNNOP;/* SET REGISTER ZERO (0) WITH
*                                      THE APPROPRIATE MESSAGE NUMBER*/
DCBLOBAD LA    REG00,17                                         05S0553
*                       GO TO ENDDCBLO;                         05S0554
         B     ENDDCBLO                                         05S0554
*AFTERDCB:                                                      05S0555
*                       RTRM=REG00; /* SET THE BASE POINTER FOR THE
*                                      RESOURCE ENTRY STRUCTURE OF
*                                      THE LINE                      */
AFTERDCB LR    RTRM,REG00                                       05S0555
*                       REG00=0;    /* INDICATE THAT NO MESSAGE 05S0556
*                                      NUMBER HAS BEEN SET           */
         SLR   REG00,REG00                                      05S0556
*ENDDCBLO:                                                      05S0557
*                     END;                                      05S0557
ENDDCBLO DS    0H                                               05S0558
*                     IF REG00=0    /* NO ERRORS WERE FOUND          */
*                       THEN        /* CONTINUE THE VERIFICATION     */
         LTR   REG00,REG00                                      04S0558
         BNZ   @RF00558                                         04S0558
*                       IF TRMPREF=ON&TRMTYPE=TRMNSDLC/* THE RESOURCE
*                                      IS A NON-SNA COMMUNICATIONS
*                                      CONTROLLER RESOURCE           */
*                         THEN      /* BUILD THE "CHANGE SESSION
*                                      LIMIT" PACKED REQUEST UNIT    */
         TM    TRMPREF(RTRM),B'00010000'                        04S0559
         BNO   @RF00559                                         04S0559
         LR    @15,RTRM                                         04S0559
         AL    @15,@CF01155                                     04S0559
         CLI   TRMTYPE-11(@15),X'20'                            04S0559
         BNE   @RF00559                                         04S0559
*                                                               05S0560
*                         /*******************************************/
*                         /*                                         */
*                         /* PROCESS.REQUEST.SESSION.BLDSESSI: THIS  */
*                         /* SEGMENT BUILDS THE "CHANGE SESSION      */
*                         /* LIMIT" PACKED REQUEST UNIT.             */
*                         /*                                         */
*                         /*******************************************/
*                                                               05S0560
*                         DO;                                   05S0560
*                           IF PTRLAST-PTRCHAR<=3/* THE "SESSION
*                                      LIMIT" OPERAND EXISTS         */
*                               &SCANCHAR=','/* THE DELIMITER IS
*                                      CORRECT                       */
*                             THEN  /* CONVERT THE OPERAND           */
         LR    @15,PTRLAST                                      05S0561
         SLR   @15,PTRCHAR                                      05S0561
         C     @15,@CF00066                                     05S0561
         BH    @RF00561                                         05S0561
         CLI   SCANCHAR(PTRCHAR),C','                           05S0561
         BNE   @RF00561                                         05S0561
*                             DO;                               05S0562
*                               PTRCHAR=PTRCHAR+1;/* SET THE SCAN
*                                      POINTER TO THE FIRST CHARACTER
*                                      OF THE "SESSION LIMIT" COMMAND*/
         AL    PTRCHAR,@CF00060                                 05S0563
*                               CALL NUMBOPER;                  05S0564
         BAL   @14,NUMBOPER                                     05S0564
*                               IF REG00=0/* THE "SESSION LIMIT"
*                                      OPERAND IS CORRECT            */
*                                 THEN/* BUILD THE REQUEST UNIT      */
         LTR   REG00,REG00                                      05S0565
         BNZ   @RF00565                                         05S0565
*                                 DO;                           05S0566
*                                   CMDNETAD=OCRSID;/* SET THE  05S0567
*                                      NETWORK ADDRESS OF THE BSC/SS
*                                      LINE                          */
         L     @11,OCUNIT(,ROPCE)                               05S0567
         MVC   CMDNETAD(2,@11),OCRSID(ROPCE)                    05S0567
*                                   REG01=RTRM;/* SET THE ARGUMENT
*                                      REGISTER                      */
         LR    REG01,RTRM                                       05S0568
*                                   CALL COHORTLK;              05S0569
         L     @15,OPCHORT(,ROPCAVT)                            05S0569
         BALR  @14,@15                                          05S0569
*                                   PRUTTCIN=REG00;/* SET THE   05S0570
*                                      DESTINATION TTCIN             */
         L     @11,OCUNIT(,ROPCE)                               05S0570
         STH   REG00,PRUTTCIN(,@11)                             05S0570
*                                   REG00=0;/* RESTORE REGISTER ZERO
*                                      (0) TO INDICATE NO ERRORS
*                                                            @YM06510*/
         SLR   REG00,REG00                                      05S0571
*                                   PRUDATCT=LENGTH(CMDDATA);/* SET
*                                      THE DATA COUNT FIELD OF THE
*                                      PACKED REQUEST UNIT           */
         MVC   PRUDATCT(2,@11),@CH00071                         05S0572
*                                   CMDCODES=CD1XSNL;/* SET THE 05S0573
*                                      NETWORK SERVICES, BSC/SS, AND
*                                      REQUEST CODE INDICATORS       */
         MVC   CMDCODES(3,@11),@CB00901                         05S0573
*                                   CMDVALUE=FIXEDNUM;/* SET THE NEW
*                                      SESSION LIMIT                 */
         STC   FIXEDNUM,CMDVALUE(,@11)                          05S0574
*                                   OCCKDAT1=FIXEDNUM;/* SAVE THE NEW
*                                      SESSION LIMIT FOR CHECKPOINT  */
         STC   FIXEDNUM,OCCKDAT1(,ROPCE)                        05S0575
*                                   PRURHTH=RHPACKTH;/* SET THE 05S0576
*                                      PACKED REQUEST UNIT RH AND TH */
         AL    @11,@CF01647                                     05S0576
         MVC   PRURHTH(4,@11),@CB01593                          05S0576
*                                 END;                          05S0577
*                             END;                              05S0578
*                           ELSE    /* INDICATE THAT A COMMAND  05S0579
*                                      OPERAND IS INVALID            */
*                             REG00=MSGINVOP;                   05S0579
         B     @RC00561                                         05S0579
@RF00561 LA    REG00,18                                         05S0579
*                         END;                                  05S0580
*                       ELSE        /* INDICATE THAT AN ERROR HAS
*                                      BEEN FOUND                    */
*                         REG00=525;/* SET REGISTER ZERO (0) WITH THE
*                                      APPROPRIATE ERROR MESSAGE
*                                      NUMBER                        */
         B     @RC00559                                         04S0581
@RF00559 LA    REG00,525                                        04S0581
*                   END;                                        04S0582
*               END;                                            04S0583
*             ELSE                  /* INDICATE THAT THE OPERANDS ARE
*                                      INVALID                       */
*               REG00=MSGINVOP;     /* SET REGISTER ZERO (0) WITH THE
*                                      APPROPRIATE MESSAGE NUMBER    */
         B     @RC00541                                         04S0584
@RF00541 LA    REG00,18                                         04S0584
*           END;                                                04S0585
@RC00541 DS    0H                                               04S0586
*       IF REG00=0                  /* NO ERRORS WERE ENCOUNTERED
*                                      DURING THE COMMAND PROCESSING */
*         THEN                      /* PREPARE TO SEND OUT THE  03S0586
*                                      REQUEST                       */
@RC00503 DS    0H                                               03S0586
@RC00456 LTR   REG00,REG00                                      03S0586
         BNZ   @RF00586                                         03S0586
*         DO;                                                   03S0587
*           OPCMODID=IDRUHAND;      /* SET THE MODULE IDENTIFICATION
*                                      CHARACTERS                    */
         MVC   OPCMODID(2,ROPCAVT),@CC00913                     03S0588
*           OCWTG=IDBHSTLS;         /* INDICATE THAT THE RESPONSE IS
*                                      TO BE RETURNED TO THIS MODULE */
         MVC   OCWTG(2,ROPCE),@CC00911                          03S0589
*         END;                                                  03S0590
*       ELSE                        /* PREPARE TO HAVE AN ERROR 03S0591
*                                      MESSAGE SENT                  */
*         DO;                                                   03S0591
         B     @RC00586                                         03S0591
@RF00586 DS    0H                                               03S0592
*           OPCMODID=IDMSGCHN;      /* SET THE MODULE IDENTIFICATION
*                                      CHARACTERS                    */
         MVC   OPCMODID(2,ROPCAVT),@CC00909                     03S0592
*           OCWTG=''B;              /* INDICATE THAT A RETURN IS NOT
*                                      EXPECTED                      */
         XC    OCWTG(2,ROPCE),OCWTG(ROPCE)                      03S0593
*         END;                                                  03S0594
*     END;                                                      03S0595
*   ELSE                            /* VERIFY THE RESPONSE AND SET
*                                      REGISTER ZERO (0) WITH THE
*                                      APPROPRIATE MESSAGE NUMBER    */
*                                                               03S0596
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS.RESPONSE: THIS SEGMENT PROCESSES THE RESPONSES THAT */
*     /* ARE RECEIVED.                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0596
*     DO;                                                       03S0596
         B     @RC00445                                         03S0596
@RF00445 DS    0H                                               03S0597
*       IF PRUTHTYE=PRUTHFD1&PRURHSDI=OFF×PRUTHTYE^=PRUTHFD1&BDUERROR=
*           OFF                     /* THE COMMAND COMPLETED    03S0597
*                                      SUCCESSFULLY          @YM07044*/
*         THEN                      /* PREPARE TO CHECKPOINT THE
*                                      COMMAND                       */
         L     @11,OCUNIT(,ROPCE)                               03S0597
         SL    @11,@CF00045                                     03S0597
         TM    PRUTHTYE(@11),B'00010000'                        03S0597
         BNO   @GL00009                                         03S0597
         TM    PRUTHTYE(@11),B'11100000'                        03S0597
         BNZ   @GL00009                                         03S0597
         TM    PRURHSDI(@11),B'00000100'                        03S0597
         BZ    @RT00597                                         03S0597
@GL00009 L     @11,OCUNIT(,ROPCE)                               03S0597
         AL    @11,@CF01649                                     03S0597
         TM    PRUTHTYE-3(@11),B'00010000'                      03S0597
         BNO   @GL00011                                         03S0597
         TM    PRUTHTYE-3(@11),B'11100000'                      03S0597
         BZ    @RF00597                                         03S0597
@GL00011 L     @11,OCUNIT(,ROPCE)                               03S0597
         TM    BDUERROR+12(@11),B'10000000'                     03S0597
         BNZ   @RF00597                                         03S0597
@RT00597 DS    0H                                               03S0598
*         DO;                                                   03S0598
*           IF OCSWITCH=OCBHSET     /* THE RESPONSE IS FROM A BHSET
*                                      COMMAND                       */
*             THEN                  /* SET A GOOD MESSAGE NUMBER IN
*                                      THE OPCE                      */
         CLI   OCSWITCH(ROPCE),X'1D'                            03S0599
         BNE   @RF00599                                         03S0599
*             OCPARM=MSGBHSAM;                                  03S0600
         MVC   OCPARM(2,ROPCE),@CH00923                         03S0600
*           ELSE                                                03S0601
*             IF OCSWITCH=OCTRANL   /* THE RESPONSE IS FROM A TRANL
*                                      COMMAND                       */
*               THEN                                            03S0601
         B     @RC00599                                         03S0601
@RF00599 CLI   OCSWITCH(ROPCE),X'1F'                            03S0601
         BNE   @RF00601                                         03S0601
*               OCPARM=MSGTRALM;    /* SET A GOOD MESSAGE NUMBER IN
*                                      THE OPCE                      */
         MVC   OCPARM(2,ROPCE),@CH00929                         03S0602
*             ELSE                  /* SET A GOOD MESSAGE FOR THE
*                                      SESSION COMMAND IN THE OPCE   */
*               OCPARM=MSGSESLM;                                03S0603
         B     @RC00601                                         03S0603
@RF00601 MVC   OCPARM(2,ROPCE),@CH00921                         03S0603
*           OPCMODID=IDCHCKPT;      /* SET THE MODULE IDENTIFICATION
*                                      CHARACTERS FOR CHECKPOINT     */
@RC00601 DS    0H                                               03S0604
@RC00599 MVC   OPCMODID(2,ROPCAVT),@CC00905                     03S0604
*           OCWTG=IDMSGOOD;         /* SET THE "WHERE TO GO" FIELD   */
         MVC   OCWTG(2,ROPCE),@CC00907                          03S0605
*         END;                                                  03S0606
*       ELSE                        /* PREPARE TO TRANSFER CONTROL
*                                      DIRECTLY TO A MESSAGE MODULE  */
*         DO;                                                   03S0607
         B     @RC00597                                         03S0607
@RF00597 DS    0H                                               03S0608
*           REG00=MSGCCCFC;         /* SET REGISTER ZERO (0) WITH THE
*                                      APPROPRIATE ERROR MESSAGE
*                                      NUMBER                        */
         LA    REG00,199                                        03S0608
*           OPCMODID=IDMSGCHN;      /* SET THE MODULE IDENTIFICATION
*                                      CHARACTERS                    */
         MVC   OPCMODID(2,ROPCAVT),@CC00909                     03S0609
*           OCWTG=''B;              /* INDICATE THAT NO RETURN IS
*                                      EXPECTED                      */
         XC    OCWTG(2,ROPCE),OCWTG(ROPCE)                      03S0610
*         END;                                                  03S0611
*     END;                                                      03S0612
@RC00597 DS    0H                                               03S0613
*                                                               02S0613
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE EXTERNAL PROCEDURE STATEMENT. THE XCTL SYSTEM  */
*   /* MACRO INSTRUCTION IS USED BY THIS SEGMENT TO TRANSFER CONTROL */
*   /* TO THE NEXT MODULE THAT IS TO BE EXECUTED.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0613
*   RFY                                                         02S0613
*     REG01 RSTD;                   /* RESTRICT THE ARGUMENT REGISTER
*                                      TO BE USED TO CONTAIN THE
*                                      POINTER TO THE OPERATOR  02S0613
*                                      CONTROL ADDRESS VECTOR TABLE
*                                      FROM USE BY THE COMPILER      */
@RC00445 DS    0H                                               02S0614
*   REG01=ROPCAVT;                  /* SET THE ARGUMENT REGISTER IN
*                                      PREPARATION TO TRANSFERRING
*                                      CONTROL TO THE NEXT MODULE    */
         LR    REG01,ROPCAVT                                    02S0614
*   GEN EXIT REFS(OPCXCTL,ROPCAVT) NOSEQFLOW SETS(REG15);       02S0615
*                                   /*
         XCTL  SF=(E,OPCXCTL(ROPCAVT)) TRANSFER CONTROL MACRO
*                                                               02S0616
*   /*****************************************************************/
*   /*                                                               */
*   /* NUMBOPER: THIS SEGMENT CONTAINS AN INTERNAL PROCEDURE WHICH   */
*   /* SCANS A NUMERIC CHARACTER OPERAND AND CONVERTS THE OPERAND TO */
*   /* A FIXED POINT BINARY INTEGER OR SETS REGISTER ZERO (0) WITH AN*/
*   /* ERROR MESSAGE NUMBER.                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0616
*NUMBOPER:                                                      02S0616
*   PROC OPTIONS(RETREG,SAVE(14));  /*                       @YM06473*/
NUMBOPER ST    @14,12(,@13)                                     02S0616
*                                                               03S0617
*   /*****************************************************************/
*   /*                                                               */
*   /* NUMBOPER.DATA: THIS SEGMENT DECLARES ALL OF THE VARIABLES THAT*/
*   /* ARE LOCAL TO THE NUMBOPER INTERNAL PROCEDURE.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0617
*   DCL                                                         03S0617
*     PTRSTART PTR(31);             /* STARTING POINTER VALUE        */
*   DCL                                                         03S0618
*     PTRSTOP PTR(31);              /* STOPPING POINTER VALUE        */
*   DCL                                                         03S0619
*     CHARNUMB CHAR(3);             /* NUMERIC CHARACTER OPERAND TO
*                                      BE CONVERTED                  */
*   DCL                                                         03S0620
*     PACKNUMB CHAR(8) BDY(DWORD);  /* PACKED DECIMAL NUMBER         */
*   DCL                                                         03S0621
*     OPERAND CHAR(8) BASED(PTRSTART);/* CHARACTER OPERAND FIELD     */
*   PTRSTART=PTRCHAR;               /* SET THE STARTING POINTER FOR
*                                      THE SCAN                      */
         ST    PTRCHAR,PTRSTART                                 02S0622
*   PTRSTOP=PTRSTART+LENGTH(CHARNUMB)-1;/* SET THE STOP VALUE   02S0623
*                                      COMPARAND FOR THE TEXT SCAN   */
         L     @05,PTRSTART                                     02S0623
         LR    @15,@05                                          02S0623
         SL    @15,@CF01153                                     02S0623
         ST    @15,PTRSTOP                                      02S0623
*   DO PTRCHAR=PTRSTART TO PTRSTOP  /* SCAN THE OPERAND              */
*         WHILE(REG00=0&SCANCHAR^=','&PTRCHAR<=PTRLAST);        02S0624
         L     @15,PTRSTART                                     02S0624
         LR    PTRCHAR,@15                                      02S0624
         B     @DE00624                                         02S0624
@DL00624 LTR   REG00,REG00                                      02S0624
         BNZ   @DC00624                                         02S0624
         CLI   SCANCHAR(PTRCHAR),C','                           02S0624
         BE    @DC00624                                         02S0624
         CR    PTRCHAR,PTRLAST                                  02S0624
         BH    @DC00624                                         02S0624
*     IF SCANCHAR<'0'×SCANCHAR>'9'  /* THE CHARACTER IS NOT NUMERIC  */
*       THEN                        /* INDICATE THAT AN INVALID 02S0625
*                                      OPERAND HAS BEEN ENCOUNTERED  */
         CLI   SCANCHAR(PTRCHAR),C'0'                           02S0625
         BL    @RT00625                                         02S0625
         CLI   SCANCHAR(PTRCHAR),C'9'                           02S0625
         BNH   @RF00625                                         02S0625
@RT00625 DS    0H                                               02S0626
*       REG00=MSGINVOP;             /* SET REGISTER ZERO WITH THE
*                                      APPROPRIATE MESSAGE NUMBER    */
         LA    REG00,18                                         02S0626
*   END;                                                        02S0627
@RF00625 AL    PTRCHAR,@CF00060                                 02S0627
@DE00624 C     PTRCHAR,PTRSTOP                                  02S0627
         BNH   @DL00624                                         02S0627
@DC00624 DS    0H                                               02S0628
*   IF REG00=0                      /* THE OPERAND IS NUMERIC        */
*     THEN                          /* CONVERT THE CHARACTER OPERAND
*                                      TO A BINARY INTEGER           */
         LTR   REG00,REG00                                      02S0628
         BNZ   @RF00628                                         02S0628
*     DO;                                                       02S0629
*       CHARNUMB='000';             /* SET THE CHARACTER FIELD FOR
*                                      THE OPERAND TO CHARACTER ZEROS*/
         MVC   CHARNUMB(3),@CC01629                             02S0630
*       CHARNUMB(4-EVAL(PTRCHAR-PTRSTART):LENGTH(CHARNUMB))=OPERAND(1:
*           PTRCHAR-PTRSTART);      /* OBTAIN THE CHARACTER OPERAND  */
         L     @15,PTRSTART                                     02S0631
         LR    @14,PTRCHAR                                      02S0631
         SLR   @14,@15                                          02S0631
         LCR   @14,@14                                          02S0631
         AL    @14,@CF00327                                     02S0631
         LA    @07,CHARNUMB-1(@14)                              02S0631
         LCR   @14,@14                                          02S0631
         AL    @14,@CF00066                                     02S0631
         EX    @14,@SM01650                                     02S0631
*       PACK(PACKNUMB,CHARNUMB);    /* PACK THE CHARACTER NUMBER     */
         PACK  PACKNUMB(8),CHARNUMB(3)                          02S0632
*       CVB(FIXEDNUM,PACKNUMB);     /* CONVERT THE PACKED DECIMAL
*                                      NUMBER TO A BINARY FIXED-POINT
*                                      INTEGER                       */
         CVB   FIXEDNUM,PACKNUMB                                02S0633
*       IF FIXEDNUM>255             /* THE NUMBER IS OUT OF RANGE    */
*         THEN                      /* INDICATE THAT AN ERROR HAS
*                                      BEEN FOUND                    */
         C     FIXEDNUM,@CF01633                                02S0634
         BNH   @RF00634                                         02S0634
*         REG00=MSGINVOP;           /* SET REGISTER ZERO (0) WITH THE
*                                      APPROPRIATE MESSAGE NUMBER    */
         LA    REG00,18                                         02S0635
*     END;                                                      02S0636
*   END NUMBOPER;                                               02S0637
@EL00002 DS    0H                                               02S0637
@EF00002 DS    0H                                               02S0637
@ER00002 L     @14,12(,@13)                                     02S0637
         BR    @14                                              02S0637
*                                                               02S0638
*   /*****************************************************************/
*   /*                                                               */
*   /* RESOURCE: THIS SEGMENT CONTAINS AN INTERNAL PROCEDURE THAT    */
*   /* USES THE TRMOFLOC EXTERNAL PROCEDURE TO VERIFY THAT A         */
*   /* PARTICULAR RESOURCE NAME IS KNOWN TO TCAM.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0638
*RESOURCE:                                                      02S0638
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0638
RESOURCE ST    @14,@SA00003                                     02S0638
*   DCL                                                         02S0639
*     TRMOFLOC ENTRY BASED(OPCTOFLK) VALRG(*) OPTIONS(REFS(OPCDOUBL,
*         RAVT,ROPCAVT,ROPCE,RSAVE),SETS(OCTRMTBL,REG01),FLOWS(TRMOGOOD
*         ,TRMOFBAD));              /* RESOURCE NAME VERIFICATION
*                                      ROUTINE                       */
*   OCBACKUP=OPCDOUBL;              /* SET THE RESOURCE NAME FOR
*                                      MESSAGE GENERATION            */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)              02S0640
*   CALL TRMOFLOC;                                              02S0641
         L     @15,OPCTOFLK(,ROPCAVT)                           02S0641
         BALR  @14,@15                                          02S0641
*TRMOGOOD:                          /* (REG14+0)                     */
*   GO TO AFTERTRM;                                             02S0642
         B     AFTERTRM                                         02S0642
*TRMOFBAD:                          /* (REG14+4)                     */
*   REG00=MSGSTANF;                 /* INDICATE THAT AN ERROR HAS
*                                      BEEN ENCOUNTERED              */
TRMOFBAD LA    REG00,16                                         02S0643
*   GO TO ENDTRMOF;                                             02S0644
         B     ENDTRMOF                                         02S0644
*AFTERTRM:                                                      02S0645
*   RTRM=REG01;                     /* SET THE BASE POINTER FOR THE
*                                      TRM STRUCTURE                 */
AFTERTRM LR    RTRM,REG01                                       02S0645
*   REG00=0;                        /* INDICATE THAT NO ERRORS HAVE
*                                      BEEN FOUND                    */
         SLR   REG00,REG00                                      02S0646
*ENDTRMOF:                                                      02S0647
*   END RESOURCE;                                               02S0647
@EL00003 DS    0H                                               02S0647
@EF00003 DS    0H                                               02S0647
@ER00003 L     @14,@SA00003                                     02S0647
         BR    @14                                              02S0647
*   END IGCMS10D                                                01S0648
*                                                               01S0648
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TIDD    )                                       */
*/*%INCLUDE SYSLIB  (TMSGD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (REQUEST )                                       */
*/*%INCLUDE SYSUT5  (INITIAL )                                       */
*/*%INCLUDE SYSUT5  (BHSET   )                                       */
*/*%INCLUDE SYSUT5  (DOUBLE  )                                       */
*/*%INCLUDE SYSUT5  (SINGLE  )                                       */
*/*%INCLUDE SYSUT5  (BLDBHSET)                                       */
*/*%INCLUDE SYSUT5  (TRANLMT )                                       */
*/*%INCLUDE SYSUT5  (BLDTRANL)                                       */
*/*%INCLUDE SYSUT5  (DESTINAT)                                       */
*/*%INCLUDE SYSUT5  (SESSION )                                       */
*/*%INCLUDE SYSUT5  (DCBLOCAT)                                       */
*/*%INCLUDE SYSUT5  (BLDSESSI)                                       */
*/*%INCLUDE SYSUT5  (RESPONSE)                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (NUMBOPER)                                       */
*/*%INCLUDE SYSUT5  (DATA    )                                       */
*/*%INCLUDE SYSUT5  (RESOURCE)                                       */
*                                                               01S0648
*       ;                                                       01S0648
@DATA    DS    0H
@CH00071 DC    H'6'
@CH00569 DC    H'7'
@CH00921 DC    H'192'
@CH00923 DC    H'193'
@CH00929 DC    H'208'
@SM01650 MVC   0(0,@07),OPERAND(@15)
@DATD    DSECT
         DS    0F
@SA00003 DS    1F
IGCMS10D CSECT
         DS    0F
@CF00060 DC    F'1'
@CF00127 DC    F'2'
@CF00066 DC    F'3'
@CF00327 DC    F'4'
@CF00045 DC    F'8'
@CH00045 EQU   @CF00045+2
@CF00235 DC    F'12'
@CF01621 DC    F'14'
@CF01633 DC    F'255'
@CF01647 DC    F'-8'
@CF01649 DC    F'-5'
@CF01155 DC    F'-3'
@CF01153 DC    F'-2'
@CF01646 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PTRSTART DS    A
PTRSTOP  DS    A
CHARNUMB DS    CL3
         DS    CL5
PACKNUMB DS    CL8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGCMS10D CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01629 DC    C'000'
@CC00905 DC    C'06'
@CC00907 DC    C'M3'
@CC00909 DC    C'09'
@CC00911 DC    C'MS'
@CC00913 DC    C'02'
@CB01593 DC    X'0B80001C'
@CB00897 DC    X'010001'
@CB00901 DC    X'010003'
@CB01372 EQU   @CB01593
         DS    CL1
PATCH    DC    XL104'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PTRLAST  EQU   @11
PTRCHAR  EQU   @05
FIXEDNUM EQU   @09
ROPCE    EQU   @03
ROPCAVT  EQU   @02
RAVT     EQU   @04
RTRM     EQU   @08
REG00    EQU   @00
REG01    EQU   @01
RPARM    EQU   @01
REG10    EQU   @10
RSAVE    EQU   @13
REG15    EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00083 EQU   IEDQAVTD+1232
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTTNTX EQU   IEDNSVTD+252
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUERROR EQU   BDUSYRSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCLINE   EQU   OCFLAG
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
@NM00106 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00106
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OCCKDAT1 EQU   OCRSTGTM
OCCKDAT2 EQU   OCRSTGTM+1
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCDCBLK EQU   IEDQOPCD+16
OPCTOFLK EQU   IEDQOPCD+24
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCHORT  EQU   IEDQOPCD+256
OPCGETBF EQU   IEDQOPCD+276
OPCSPEC  EQU   IEDQOPCD+300
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUQP EQU   0
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
PRUTHTYE EQU   PRUFIDN
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDQTPTR EQU   0
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
ACTION   EQU   0
CHARNEXT EQU   1
SCANCHAR EQU   0
ALLOCBUF EQU   0
COHORTLK EQU   0
DCBLOCAT EQU   0
IEDIAP04 EQU   0
OPERAND  EQU   0
TRMOFLOC EQU   0
IEDQEPTR EQU   0
IEDQQPTR EQU   0
BDUTEXT  EQU   BDUEND
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
TRMPRE1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
CMDDATA  EQU   PRUDATA
CMDCODES EQU   CMDDATA
CMDNETAD EQU   CMDDATA+3
CMDVALUE EQU   CMDDATA+5
OCCIB    EQU   OCREQVAL
TRMOPT   EQU   IEDQTRM+20
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00150 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00149 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
OCICINAC EQU   OCICSW
@NM00112 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00111 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00152 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   IEDTH+4
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00151 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00148 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00147 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00146 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
@NM00145 EQU   TRHBYTE2
@NM00144 EQU   TRHBYTE2
@NM00143 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00142 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00141 EQU   TRHBYTE1
@NM00140 EQU   TRHBYTE1
@NM00139 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00138 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00137 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
@NM00136 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
@NM00135 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00134 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00133 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00132 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00131 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00130 EQU   PRUTIC
@NM00129 EQU   IEDPRUQD+4
OPCBOTTM EQU   IEDQOPCD+1172
@NM00128 EQU   IEDQOPCD+1088
@NM00127 EQU   IEDQOPCD+936
@NM00126 EQU   IEDQOPCD+928
@NM00125 EQU   IEDQOPCD+368
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00124 EQU   OPCSPEC
@NM00123 EQU   OPCSPEC
@NM00122 EQU   OPCSPEC
@NM00121 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
@NM00120 EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00119 EQU   OPCLDNME+5
@NM00118 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00117 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCOPTLK EQU   IEDQOPCD+20
@NM00116 EQU   OCLDNME+4
@NM00115 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00114 EQU   OCREQFLG
@NM00113 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00110 EQU   OCRSTGTM+2
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00109 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00108 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00107 EQU   @NM00106+2
OCCONID  EQU   OCDEST
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00105 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00104 EQU   OCRUDEST+1
@NM00103 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
SAVTBITN EQU   IEDNSVTD+312
@NM00102 EQU   SAVTCKQB+8
@NM00101 EQU   SAVTCKEC+1
@NM00100 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00099 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00098 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00097 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00096 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00095 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00094 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00093 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00092 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00091 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00090 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00089 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00088 EQU   IEDQAVTD+1242
@NM00087 EQU   IEDQAVTD+1241
@NM00086 EQU   IEDQAVTD+1240
@NM00085 EQU   IEDQAVTD+1237
@NM00084 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00083
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00082 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00081 EQU   IEDQAVTD+1140
@NM00080 EQU   IEDQAVTD+1137
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00072 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00071 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00070 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00069 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00068 EQU   AVTBIT2
@NM00067 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00066 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00065 EQU   IEDQAVTD+950
@NM00064 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00063 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL2
@NM00058 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTCRDYN EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00014 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00013 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00012 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTOSECB EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTRNMPT EQU   IEDQAVTD+424
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00464 EQU   @RC00462
@RF00486 EQU   @RC00479
@RC00460 EQU   @RC00456
@RF00459 EQU   @RC00456
@RC00507 EQU   @RC00503
@RF00506 EQU   @RC00503
DCBLGOOD EQU   AFTERDCB
@RF00544 EQU   @RC00541
@RC00559 EQU   @RC00541
@RF00558 EQU   @RC00541
@RC00586 EQU   @RC00445
@RF00628 EQU   @EL00002
@RF00634 EQU   @EL00002
TRMOGOOD EQU   AFTERTRM
ENDTRMOF EQU   @EL00003
@RF00468 EQU   @RC00464
@RF00491 EQU   @RC00460
@RC00509 EQU   @RC00507
@RC00561 EQU   @RC00559
@RF00512 EQU   @RC00509
@RF00565 EQU   @RC00561
@ENDDATA EQU   *
         END   IGCMS10D,(C'PLS1843',0701,77004)
