         TITLE 'IGG0290A - DADSM SCRATCH - SEARCH FOR DSCB(S)'   S21040
IGG0290A CSECT
*
*          RELEASE 18 DELETIONS                                       *
*1666000600                                                       22833
*          RELEASE 19 DELETIONS                                       *
*1021031200,036800,058200,061400,069800                          O19117
*1021                                                            M4917
*1021043200-044400                                               M4504
*1021027900,059200-060400                                        M3097
*          RELEASE 20 DELETIONS                                       *
*1331050600,051000,051400,052000,052400-053400,054000,054400-    A31333
*1331055000,055800,056800                                        A31333
*1331076200                                                      A34916
*          RELEASE 21 DELETIONS                                       *
*1198002100,003400,006800,008000,009400,084700,093600            A37199
*1198000000-000400,002000-002800,003200-003400,005600,007200-    S21040
*1198007600,008000,010800,011200,011600,012000-012200,012600,    S21040
*1198014500-015000,031600,034400-057000,060800,072200-079000,    S21040
*1198079200-079400,080800                                        S21040
*          RELEASE 21.7 DELETIONS
*0000000520-000620,075000-080800,089000-090200                  SA56400
*0000021400,067600                                              SA48172
*0000                                                           SA53691
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000001000,003800,005200-005400,007000-007400,008000-008200,    Y02080
*0000015600-016000,021600,024480,026700-027600,027900,038200-    Y02080
*0000042200,060630-060750,061600,073000,080800-093700,094000     Y02080
*0000006400,022800,023800-024400,057200,057600,059200,059800,    Y02078
*0000060200,093720-094000                                        Y02078
*0000001400-002700,003400-006200,006900-007400,008000-008200,    Y02082
*0000014700-014850,024440-025200,025600                          Y02082
*0000025800                                                      Y02134
*0000020000-020200,026000,068600                                 YM1337
*0000023950,024100,024790                                        YM4653
*0000                                                            YM7039
*
*         VS2 RELEASE 03  SU32                                 @G32DSPD
* DELETIONS - 071988                                           @G32DSPD
* CHANGES   - 025378,025403-025424,071880,071988-071946        @G32DSPD
* ADD                                                          @ZA25881
*
*MODULE NAME - IGG0290A
*
*DESCRIPTIVE NAME - DADSM SCRATCH - SEARCH FOR DSCB(S)
*
*COPYRIGHT - NONE
*
*CHANGE ACTIVITY - SEE DELETIONS/CHANGES FOLLOWING CSECT CARD
*
*STATUS CHANGE LEVEL 006
*
*ATTRIBUTES - REENTRANT
*
*FUNCTION - THIS MODULE READS IN THE FORMAT 4 DSCB AND SEARCHES FOR
*          THE FORMAT 1 DSCB TO BE SCRATCHED.  IF THE ENQ (ISSUED IN
*          MODULE IGC0002I) INDICATED THAT SOMEONE COULD BE OPEN TO
*          THE DATA SET, THIS MODULE THEN SEARCHES THE JOB'S DEBS TO
*          ENSURE THAT NO ONE IS CURRENTLY OPEN TO THE DATA SET.
*          IF THE DATA SET IS PASSWORD PROTECTED, CONTROL IS GIVEN
*          TO MODULE SECLOADA.  THE EXPIRATION DATA IS TESTED IF THE
*          PURGE DATE OVERRIDE OPTION IS NOT SET IN THE SCRATCH
*          PARAMETER LIST.  IF NO ONE IS OPEN TO THE DATA SET, AND
*          EITHER THE EXPIRATION DATE IS PAST OR THE OVERRIDE OPTION
*          WAS SPECIFIED, CONTROL IS GIVEN TO MODULE IGG0299A.
*          OTHERWISE, THIS MODULE GIVES CONTROL TO IGG0290D.
*          IF A DATA SET IS RAC PROTECTED, VERIFY THE USER     @Z40RSGD
*          AUTHORIZATION TO SCRATCH THE DATA SET (RACHECK).    @Z40RSGD
*
*ENTRIES - THE ONLY ENTRY POINT TO THIS MODULE IS IGG0290A.  ENTRY IS
*          MADE FROM THE SECOND LOAD OF SCRATCH (IGG0290E) AND FROM
*          THE PASSWORD PROTECTION MODULE (SECLOADA).
*
*SUPERVISOR CALLS AND EXTERNAL ROUTINES USED BY THIS MODULE -
*          EXCP(0)  - READS FROM A DIRECT ACCESS DEVICE
*          WAIT(1)  - WAITS ON AN EVENT CONTROL BLOCK
*          SETLOCK  - OBTAINS/RELEASES THE LOCAL MEMORY LOCK
*          MODESET  - SWITCHES TO THE CALLER'S KEY
*          IECRES   - LOADS/BRANCHES TO ANOTHER MODULE
*
*OTHER MACROS USED -
*          IECDSECS - EXPANDS THE CVT, RB, TCB, JSCB, IEZDEB, UCB,
*                     AND PSA DSECTS
*          IECSDSL1 - ENABLES SYMBOLIC ADDRESSING OF DSCB'S
*          IECSCRWA - EXPANDS THE SCRATCH WORK AREA
*          XCTLTABL - BUILDS A LIST OF MODULE NAMES AND ADDRESSES
*
*INPUT -   AT ENTRY TO THIS MODULE, REGISTER 13 POINTS TO THE WORK
*          AREA.  REGISTER 8 POINTS TO THE CURRENT ENTRY IN THE
*          VOLUME LIST.  REGISTER 10 POINTS TO THE PARAMETER LIST.
*          IF REENTRY FROM SECLOADA, REGISTER 10 CONTAINS ONE OF
*          THE FOLLOWING RETURN CODES:
*          X'00000000' - SUCCESSFUL PASSWORD CHECKING
*          X'01000000' - UNSUCCESSFUL PASSWORD CHECKING
*          X'02000000' - I/O ERROR OR NO PASSWORD DATA SET ON SYSRES
*
*OUTPUT -  REGISTER 8 AND 13 ARE AS AT ENTRY TO THE MODULE.  THE
*          DATA PORTIONS OF THE FORMAT 1 AND FORMAT 4 DSCB'S HAVE
*          BEEN READ INTO THE WORK AREA.
*          THE FOLLOWING ADDITIONAL INFORMATION IS PASSED TO SECLOADA:
*          REGISTER 1 CONTAINS THE DSAB ADDRESS.
*          REGISTER 4 POINTS TO THE DATA PORTION OF THE FORMAT 1 DSCB.
*          REGISTER 5 POINTS TO THE IOB.
*          REGISTER 10 CONTAINS THE VALUE X'03000000'.
*          REGISTER 11 POINTS TO THE DATA SET NAME.
*          REGISTER 13 POINTS TO THE EXTENDED PREFIX OF THE WORK AREA.
*
*STORAGE - PROGRAM CODE CSECT = LESS THAN 2048 BYTES
*          WORK AREA = 896 BYTES
*          RPS WORK AREA = 128 BYTES
*
*ERROR CONDITIONS - DSCB NOT FOUND IN VTOC
*                   PURGE DATE NOT PAST AND OVER RIDE OPTION OFF
*                   IMPROPER PASSWORD PRESENTED
*                   DATA SET IS OPEN
*                   PERMANENT I/O ERROR
*                   USER NOT AUTHORIZED TO SCRATCH RAC DEFINED @Z40RSGD
*                   DATA SET.                                  @Z40RSGD
*
*
*NOTES - THIS MODULE WAS SPLIT IN RELEASE 21.  THE SECOND HALF IS
*        MODULE IGG0299A.
*
*REGISTER USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
VOLCTR   EQU   R5                       COUNT OF REMAINING VOLS  Y02082
R6       EQU   6
R7       EQU   7
VOLISTX  EQU   8
RCVTT    EQU   9                                               @ZA25881
PL       EQU   10
R10      EQU   10
R11      EQU   11
RBASE    EQU   12
RWKAREA  EQU   13
RETURN   EQU   14
WORKREG  EQU   15
*
* OTHER EQUATES
*
ZERO     EQU   0                        CONSTANT OF ZERO         Y02082
K1       EQU   1                        CONSTANT OF 1            Y02078
K3       EQU   3                        CONSTANT OF 3            Y02082
D2       EQU   2                        DISPLACEMENT OF 2        S21040
D4       EQU   4                        DISPLACEMENT OF 4        S21040
K4       EQU   4                        CONSTANT OF 4            Y02078
K5       EQU   5                        CONSTANT OF 5            Y02080
K6       EQU   6                        CONSTANT OF 6            Y02078
K12      EQU   12                       CONSTANT OF 12           Y02082
SEEKCYL  EQU   3                        OFFSET TO CCHHR IN SEEK  Y02080
RTNCODE8 EQU   8                        ERROR RETURN CODE OF 8   Y02082
STATUS   EQU   11                       DISP. TO VOLIST STATUS   Y02078
ENTRYL   EQU   12                       VOL LIST ENTRY LENGTH    Y02082
ALLBITS  EQU   X'FF'                    MASK OF ALL ONES         Y02082
DEBDADEV EQU   X'04'                    DEB EXTENT SCALE FOR DA  Y02082
NOF1     EQU   X'01'                    NO F1 DSCB ERROR CODE    Y02078
PSWDERR  EQU   X'02'                    PASSWORD ERROR CODE      Y02078
PURGERR  EQU   X'03'                    PURGE DATE ERROR CODE    Y02078
IOERR    EQU   X'04'                    I/O ERROR CODE           Y02078
OPENDS   EQU   X'07'                    OPEN/SCRATCH ERROR CODE  Y02082
DOSBIT   EQU   X'80'                    DOS BIT IN DS4VTOCI      Y02078
DIRFBIT  EQU   X'04'                    DIRF BIT IN DS4VTOCI     Y02078
DS1EXTUL EQU   X'40'                    USER LABEL BIT IN EXTENT Y02082
PSWDDS   EQU   X'10'                    PASSWORD-PROTECTED D/S   Y02082
CC       EQU   X'40'                    COMMAND CHAINING BIT     Y02082
CSWAD    EQU   8                        CSW OFFSET IN IOB       SA53691
UCBADDR  EQU   32                       DISP. TO UCB ADDR IN DEB YM4653
SKIP     EQU   X'10'                    CCW SKIP FLAG           SA48172
SLI      EQU   X'20'                    CCW SUPPRESS LENGTH     SA48172
*                                       INDICATOR               SA48172
RACERROR EQU   X'08'                    SCRATCH FAILED DUE TO  @Z40RSGD
*                                       ERROR IN RAC FUNCTION  @Z40RSGD
DS1RACDF EQU   X'40'                    DS1DSIND-DATA SET IS   @Z40RSGD
*                                       RAC DEFINED            @Z40RSGD
VSAMDSSP EQU   X'08'                    VSAM DATA SPACE        @Z40RSGD
*
         BALR  RBASE,R0
         USING BEGIN,RBASE
         USING SCRTHWKA,RWKAREA         WORK AREA ADDRESSABILITY Y02080
*
* THIS SECTION RELOCATES AND EXECUTES THE CHANNEL PROGRAM.
*
BEGIN    EQU   *
         LTR   PL,PL                    IF PASSWORD ENTRY IS IT OKAY.
         BZ    PASSOKAY                 BRANCH IF YES.
         ST    PL,FIELD1                SAVE PARAMETER LIST POINTER.
         TM    FIELD1,3                 IS THIS A PASSWORD ERROR.
         BNE   PSWDEXIT                 BRANCH IF YES.
         LM    R0,R7,CHANPROG           LOAD CCW1 TO CCW4 CONSTANTS.
         AR    R0,RWKAREA               RESOLVE ADDR IN CCW1
         AR    R2,RWKAREA               RESOLVE ADDR IN CCW2
         AR    R4,RWKAREA               RESOLVE ADDR IN CCW3
         AR    R6,RWKAREA               RESOLVE ADDR IN CCW4
         STM   R0,R7,CCW1               STORE CCW1 TO CCW4
         LA    WORKREG,CCW9-CCW1
         AR    R2,WORKREG               RESOLVE ADDR IN CCW5
         STM   R2,R3,CCW5               STORE CCW5
         LA    WORKREG,CCW11-CCW9
         AR    R2,WORKREG               RESOLVE ADDR IN CCW8
         STM   R2,R3,CCW8               STORE CCW8
         LM    R0,R7,CHANPROG+32        LOAD CCW9 TO CCW12 CONSTANTS
         AR    R0,RWKAREA               RESOLVE ADDR IN CCW9     YM1337
         AR    R2,RWKAREA               RESOLVE ADDR IN CCW10
         AR    R4,RWKAREA               RESOLVE ADDR IN CCW11
         AR    R6,RWKAREA               RESOLVE ADDR IN CCW12
         STM   R0,R7,CCW9               STORE CCW9 TO CCW12
         STM   R0,R1,CCW6               STORE CCW6
         STM   R4,R5,CCW7               STORE CCW7              SA48172
         MVI   CCW7+4,SLI+SKIP          SET SLI AND SKIP BITS   SA48172
         MVI   DS1FMTID,X'00'           ZERO FORMAT ID OF INPUT AREA
EXECUTE  EQU   *
         BAL   RETURN,EXCPIO            SEARCH FOR CORRECT DSCB.
         L     R2,IOB+CSWAD             GET CSW COMMAND ADDRESS SA56391
         LA    R2,0(R2)                 CLEAR HIGH BYTE         SA56391
         LA    R3,CCW8                  GET CCW8 ADDRESS        SA56391
         CLR   R2,R3                    DOES CSW POINT TO CCW8  SA56391
         BE    NOTFOUND                 YES, DATA SET NOT FOUND SA56391
         CLI   DS1FMTID,X'F1'           TEST FOR FMT 1 DSCB IN CORE
         BE    NEWDSCB
         B     PERMERR                  BAD VTOC - I/O ERR CODE SA56391
NOTFOUND EQU   *                                                SA56391
         TM    DS4VTOCI,DOSBIT+DIRFBIT  TEST IF DOS OR DIRF SET  Y02078
         BZ    NODSCB
         TM    ERCODE,X'80'             TEST FOR SECOND PASS
         BO    NODSCB
         OI    ERCODE,X'80'             TURN ON FIRST PASS INDICATOR
         CLC   DS4HPCHR(K4),DS4VTOCE+K6  TEST IF CCHH OF 'HIGH   Y02078
*                                       WATER' MARK IS THE LAST  Y02078
*                                       TRACK IN THE VTOC        Y02078
         BNE   NEWHIGH                  BRANCH IF NOT            Y02078
         CLC   DS4HPCHR+D4(K1),DS4DEVDT  TEST IF R OF THE 'HIGH  Y02078
*                                       WATER' MARK IS THE LAST  Y02078
*                                       RECORD ON THE TRACK      Y02078
         BE    NODSCB                   BRANCH IF YES            Y02078
NEWHIGH  EQU   *                        SET NEW CCHHR            Y02078
         MVC   DS4HPCHR(K4),DS4VTOCE+K6  MOVE IN NEW CCHH        Y02078
         MVC   DS4HPCHR+D4(K1),DS4DEVDT  MOVE IN NEW R           Y02078
         MVI   CCW3+K4,CC+SKIP          DO NOT REREAD THE F4     Y02078
         B     EXECUTE                  SEARCH FOR THE F1 AGAIN  Y02078
*
* THIS SECTION SEARCHES THE JOB'S DEBS IF NECESSARY IN ORDER TO
* ENSURE THAT NO ONE IS OPEN TO THE DATA SET BEING SCRATCHED.
*
NEWDSCB  EQU   *                        DEB SEARCH               Y02082
         TM    SISW1,DEBSRCH            IS A DEB SEARCH NEEDED   Y02082
         BZ    PSWDCHK                  BRANCH IF NOT            Y02082
         L     R1,TCBADDR               CURRENT TCB ADDRESS      Y02082
         USING TCB,R1                                            Y02082
         L     R1,TCBJSCB               JSCB ADDRESS             Y02082
         USING IEZJSCB,R1                                        Y02082
         STM   R11,RETURN,IECREGSV+K12  SAVE SETLOCK REGISTERS   Y02082
         LR    R2,RWKAREA               SAVE WORKAREA BASE       Y02082
GETLOCK  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,  PREVENT DEBCHK  Y02082*
               RELATED=(DEBTBL,IGG0290A(FREELOCK))               Y02082
         LR    RWKAREA,R2               RESTORE WORKAREA BASE    Y02082
         LM    R11,RETURN,IECREGSV+K12  RESTORE SETLOCK REGS     Y02082
         L     R1,JSCBDBTB              ADDR OF DEB TABLE        Y02082
         LTR   R1,R1                    IS ADDR ZERO             Y02082
         BZ    NOPENDS                  BRANCH IF YES            Y02082
         LH    R2,ZERO(,R1)             LAST ENTRY OFFSET        Y02082
         AR    R2,R1                    ADDRESS OF LAST ENTRY    Y02082
NXTDEB   EQU   *                        NEXT DEB                 Y02082
         LA    R1,K4(,R1)               POINT TO NEXT ENTRY      Y02082
         CR    R1,R2                    END OF DEB TABLE         Y02082
         BE    NOPENDS                  BRANCH IF YES            YM4653
         OC    ZERO(K4,R1),ZERO(R1)     EMPTY ENTRY              Y02082
         BZ    NOPENDS                  BRANCH IF YES            Y02082
         TM    K3(R1),ALLBITS           DELETED ENTRY            Y02082
         BO    NXTDEB                   BRANCH IF YES            Y02082
*                                       R1 POINTS TO A FULLWORD  Y02082
*                                       CONTAINING A DEB POINTER Y02082
         L     R3,ZERO(,R1)             LOAD DEB ADDRESS         Y02082
         USING DEBBASIC,R3                                       Y02082
         LA    R4,DEBBASIC-DEBAMTYP     OFFSET BACK TO DEBAMTYP  Y02082
         LCR   R4,R4                    MAKE OFFSET NEGATIVE     Y02082
         AR    R4,R3                    R4 POINTS TO DEBAMTYP    Y02082
         USING DEBAMTYP,R4                                       Y02082
         CLI   DEBAMTYP,ZERO            AMTYP ABSENT             Y02082
         BE    AMVALID                  BRANCH IF YES--VALID     Y02082
         CLC   DEBAMTYP,AMBPAM          BPAM DEB                 Y02082
         BE    AMVALID                  BRANCH IF YES--VALID     Y02082
         CLC   DEBAMTYP,AMBDAM          BDAM DEB                 Y02082
         BE    AMVALID                  BRANCH IF YES            Y02082
         CLC   DEBAMTYP,AMSAM           SAM DEB                  Y02082
         BE    AMVALID                  BRANCH IF YES            Y02082
         CLC   DEBAMTYP,AMEXCP          EXCP DEB                 Y02082
         BE    AMVALID                  BRANCH IF YES            Y02082
         CLC   DEBAMTYP,AMISAM          ISAM DEB                 Y02082
         BNE   NXTDEB                   BRANCH IF NO-THIS DEB    Y02082
*                                       NEED NOT BE CHECKED      Y02082
         CLI   DEBNMEXT,K1              0 OR ONE EXTENT IN ISAM  Y02082
*                                       DEB                      Y02082
         BNH   NXTDEB                   INVALID ISAM DEB         Y02082
         DROP  R4                                                Y02082
         SR    R4,R4                    ZERO FOR IC              Y02082
         IC    R4,DEBNMEXT              INSERT NUMBER OF EXTENTS Y02082
         BCTR  R4,ZERO                  REDUCE BY ONE            Y02082
         LA    R3,DEBNMTRK-DEBUCBAD+L'DEBNMTRK(,R3)  SKIP FIRST  Y02082
*                                       EXTENT FOR ISAM          Y02082
         B     CHKEXTNT                 GO TO CHECK EACH EXTENT  Y02082
AMVALID  EQU   *                        VALID AM TYPE            Y02082
         CLI   DEBNMEXT,ZERO            ARE THERE ANY EXTENTS    Y02082
         BZ    NXTDEB                   BRANCH IF NO             Y02082
         CLI   DEBEXSCL,DEBDADEV        IS EXTENT SCALE 4 FOR DA Y02082
         BNE   NXTDEB                   BRANCH IF NO             Y02082
         L     R4,DEBSUCBA              GET UCB ADDRESS          Y02082
         USING UCBOB,R4                                          Y02082
         LA    R4,ZERO(,R4)             CLEAR HIGH BYTE          Y02082
         LTR   R4,R4                    IS THERE A UCB           Y02082
         BZ    NXTDEB                   BRANCH IF NO             Y02082
         TM    UCBTBYT3,UCB3DACC        IS IT DIRECT ACCESS      Y02082
         BZ    NXTDEB                   BRANCH IF NO             Y02082
         DROP  R4                                                Y02082
         SR    R4,R4                    ZERO FOR IC              Y02082
         IC    R4,DEBNMEXT              NUMBER OF EXTENTS        Y02082
CHKEXTNT EQU   *                        CHECK EXTENT             Y02082
         LA    R3,DEBBASND              INCREMENT PAST BASIC     Y02082
*                                       SECTION OF DEB           Y02082
         USING DEBDASD,R3                                        Y02082
CMPREXTS EQU   *                        CHK FOR USER LBL EXTENT  Y02082
         CLC   DEBUCBA,WKADEB+UCBADDR+K1  TEST IF SAME UCB       YM4653
         BNE   NEXTXTNT                 BRANCH IF NOT            YM4653
         TM    DS1EXT1,DS1EXTUL         IS FIRST EXTENT USER LBL Y02082
         BZ    NOTUL                    BRANCH IF NOT            Y02082
         CLC   DEBSTRCC(L'DEBSTRCC+L'DEBSTRHH),DS1EXT2+D2 IS THE Y02082
*                                       DEB'S STARTING CCHH      Y02082
*                                       EQUAL TO THE DSCB'S      Y02082
         BE    NOSCRTCH                 BRANCH IF YES            Y02082
         B     NEXTXTNT                 GET NEXT EXTENT          Y02082
NOTUL    EQU   *                        NOT USER LBL EXTENT      Y02082
         CLC   DEBSTRCC(L'DEBSTRCC+L'DEBSTRHH),DS1EXT1+D2  IS    Y02082
*                                       THE DEB'S STARTING CCHH  Y02082
*                                       EQUAL TO THE DSCB'S      Y02082
         BE    NOSCRTCH                 BRANCH IF YES            Y02082
NEXTXTNT EQU   *                        NEXT EXTENT              Y02082
         LA    R3,DEBNMTRK+L'DEBNMTRK   INCREMENT TO NEXT EXTENT YM4653
         BCT   R4,CMPREXTS              TRY NEXT EXTENT          Y02082
         B     NXTDEB                   NO MORE EXTENTS          Y02082
NOSCRTCH EQU   *                        CANNOT BE SCRATCHED      Y02082
         LA    R3,OPENERR               SET UP BRANCH ADDRESS AS Y02082
*                                       THE DATA SET IS OPEN AND Y02082
*                                       CANNOT BE SCRATCHED      Y02082
         B     FREELOCK                 FREE THE LOCAL LOCK      Y02082
NOPENDS  EQU   *                        GET ADDRESS              Y02082
         LA    R3,PSWDCHK               SET UP BRANCH ADDRESS    Y02082
FREELOCK EQU   *                        SAVE BASE                Y02082
         LR    R1,RWKAREA               SAVE WORKAREA BASE       Y02082
         STM   R11,RETURN,IECREGSV+K12  SAVE SETLOCK REGISTERS   Y02082
         SETLOCK RELEASE,TYPE=LOCAL,    RELEASE LOCAL LOCK       Y02082*
               RELATED=(DEBTBL,IGG0290A(GETLOCK))                Y02082
         LR    RWKAREA,R1               RESTORE WORKAREA BASE    Y02082
         LM    R11,RETURN,IECREGSV+K12  RESTORE SETLOCK REGS     Y02082
         BR    R3                       RETURN                   Y02082
*
* A DEB HAS BEEN FOUND OPEN TO THE DATA SET BEING SCRATCHED.
* THE CURRENT AND ALL SUBSEQUENT VOLUME ENTRIES WILL HAVE THEIR
* ERROR CODES SET TO X'07'.
*
OPENERR  EQU   *                        DATA SET OPEN            Y02082
         LH    VOLCTR,VOLNUM            NUMBER OF VOLS REMAINING Y02082
*                                       NOT COUNTING CURRENT ONE Y02082
         LA    VOLCTR,K1(,VOLCTR)       COUNT INCLUDING CURRENT  Y02082
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02082
         USING TCB,R1                                            Y02082
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02082
SETERRCD EQU   *                        SET ERROR CODE           Y02082
         MVI   STATUS(VOLISTX),OPENDS   SET ERROR CODE           Y02082
         LA    VOLISTX,ENTRYL(,VOLISTX)  INCREMENT TO NEXT ENTRY Y02082
         BCT   VOLCTR,SETERRCD          BRANCH TO CONTINUE       Y02082
         MODESET EXTKEY=ZERO            RETURN TO KEY 0          Y02082
         LA    WORKREG,ENTRYL           VOL LIST ENTRY LENGTH    Y02082
         SR    VOLISTX,WORKREG          POINT TO LAST ENTRY      Y02082
         OI    STYPEFLG,EXITBIT         SET EXIT BIT             Y02082
         B     ERREXIT                  EXIT TO IGG0290D         Y02082
*
* SECLOADA IS GIVEN CONTROL IF THE DATA SET IS PASSWORD PROTECTED.
*
PSWDCHK  EQU   *                        PASSWORD CHECK           Y02082
*                                                              @Z40RSGD
* IF THE DATA SET IS RAC PROTECTED VERIFY USER AUTHORIZATION   @Z40RSGD
* TO SCRATCH IT VIA RAC INSTEAD OF PASSWORD CHECKING.          @Z40RSGD
*                                                              @Z40RSGD
         TM    DS1DSIND,DS1RACDF        IS THE DATA SET RAC    @Z40RSGD
*                                       DEFINED                @Z40RSGD
         BZ    NORACHCK                 NO-CONTINUE            @Z40RSGD
         L     R1,TCBADDR               LOCATE TCB             @Z40RSGD
         USING TCB,R1                                          @Z40RSGD
         L     R1,TCBJSCB               LOCATE JSCB            @Z40RSGD
         USING IEZJSCB,R1                                      @Z40RSGD
         L     R1,JSCBACT               PICK ACTIVE JSCB       @G32DSPD
         TM    JSCBSWT1,JSCBPASS        IS RAC PROCESSING TO   @Z40RSGD
*                                       BE BYPASSED            @Z40RSGD
         BO    NORACHCK                                        @Z40RSGD
         DROP  R1                       NOT NEEEDED            @Z40RSGD
         CLI   DS1DSORG+1,VSAMDSSP      IS IT A VSAM DATA      @Z40RSGD
*                                       SPACE                  @Z40RSGD
         BE    ERRX08                   YES-ERROR-RAC DEFINED  @Z40RSGD
*                                       VSAM DATA SPACES NOT   @Z40RSGD
*                                       LEGAL                  @Z40RSGD
         MVC   RACHECK(LRACHECK),MRACHECK BUILD RACHECK        @Z40RSGD
*                                       PARAMETER LIST         @Z40RSGD
         NI    SISW1,255-VOLRACHK      INIT VOLRACF SW         @G32DSPD
* CHECK RAC AUTHORIZATION TO SCRATCH DATA SET.                 @Z40RSGD
         RACHECK ENTITY=PDSNAME,                               @Z40RSGDX
               VOLSER=PVOLSER,                                 @Z40RSGDX
               MF=(E,RACHECK)                                  @Z40RSGD
         LTR   WORKREG,WORKREG          DOES RAC AUTHORIZE     @Z40RSGD
*                                       SCRATCH                @Z40RSGD
         BZ    NAMEOKAY                 YES-BYPASS PASSWORD    @Z40RSGD
*                                       CHECKING               @Z40RSGD
***
***
         L     R1,CVTPTR                LOAD CVT ADDRESSS      @ZA25881
         USING CVT,R1                   CVT ADDRESSABILITY     @ZA25881
         L     R1,CVTRAC                LOAD RACF CVT ADDRESS  @ZA25881
         LTR   R1,R1                    IS RACF INSTALLED      @ZA25881
         BZ    ERRX08                   NO -ERROR-NO RACHECKS  @ZA25881
*                                       WITHOUT RACF           @ZA25881
         USING RCVT,R1                  ADDRESS RACF CVT       @ZA25881
         TM    RCVTSTA1,RCVTDASD        TEST FOR DASDVOL       @ZA25881
*                                       PROTECTION OPTION      @ZA25881
         BNO   ERRX08                   BRANCH IF NOT
***
***
*                                                              @G32DSPD
* ALLOW USER TO SCRATCH IF HE HAS ALTER ACCESS TO THE VOLUME   @G32DSPD
         MVC   RACHECK(LVRACHEK),VRACHECK BUILD RACHECK        @G32DSPD
         RACHECK ENTITY=PVOLSER,                               @G32DSPD*
               MF=(E,RACHECK)                                  @G32DSPD
         LTR   WORKREG,WORKREG          USER AUTHORIZED ?      @G32DSPD
         BNZ   ERRX08                   NO,NOT AUTHORIZED      @G32DSPD
         OI    SISW1,VOLRACHK           YES,VOLUME AUTHORIZED  @G32DSPD
         B     NAMEOKAY                 OKAY TO GO SCRATCH     @G32DSPD
ERRX08   EQU   *                        RAC ERROR              @Z40RSGD
         MVI   STATUS(VOLISTX),RACERROR POST RAC ERROR         @Z40RSGD
         B     ERREXIT                  ERROR-TERMINATE        @Z40RSGD
*                                       SCRATCH                @Z40RSGD
NORACHCK EQU   *                        RACHECK WAS NOT        @Z40RSGD
         TM    STYPEFLG,PSWDCHKD        WAS PASSWORD CHECKED     Y02082
         BO    NAMEOKAY                 BRANCH IF YES            Y02082
         TM    DS1DSIND,PSWDDS          TEST IF PASSWORD PROTECT Y02082
         BZ    NAMEOKAY                 BRANCH IF NO.
         OI    STYPEFLG,PSWDCHKD        SET PASSWORD CHECKED BIT Y02082
         L     R1,DSABADDR              DSAB ADDR IN REGISTER 1  Y02082
         LA    R4,DS1FMTID              POINTER TO F1 DSCB       Y02134
         LA    R11,PDSNAME              POINT TO DATA SET NAME.  YM1337
         LA    R10,3                    INDICATE TO READPSWD THAT IT
         SLL   R10,24                   WAS CALLED BY SCRATCH.
         LA    R5,IOB                   POINT TO IOB.
         LA    R2,SECLOAD               POINT TO SECLOADA        Y02080
         SR    RETURN,RETURN            SET ENTRY OFFSET         Y02134
         B     XCTLEXIT                 GO BRANCH TO SECLOADA    Y02080
*
* THIS SECTION TESTS IF THE PURGE DATE IS PAST.
*
PASSOKAY EQU   *
         XC    SEEK,SEEK                ZERO SEEK ADDRESS        Y02080
         MVC   SEEK+SEEKCYL(K5),VTOCADR  RESTORE SEEK ADDRESS    Y02080
         L     PL,OLDPLPTR              PICK UP PARAMETER LIST POINTER
         LA    R6,CCW1                  RESTORE CCW POINTER IN IOB.
         ST    R6,IOB+16
NAMEOKAY EQU   *
         TM    DS4VTOCI,X'80'           IS THIS A BOS PACK
         BZ    STOREPTR
         OI    DADSMTBL,2              SET BOS BIT.
STOREPTR MVC   OUTCCHHR(5),OUTDSCB+135  STORE FMT 1 DSCB CCHHR
         SR    WORKREG,WORKREG          ZERO REG
         STC   WORKREG,ERCODE           TURN OFF FIRST PASS INDICATOR
         IC    WORKREG,OUTCCHHR+4       PICK UP R OF NEXT RECORD
         BCTR  WORKREG,R0               DECREMENT R BY ONE
         LTR   WORKREG,WORKREG          TEST FOR LAST RECORD
         BNE   NOTLAST
         IC    WORKREG,DS4DEVDT         PICK UP R OF LAST RECORD
NOTLAST  STC   WORKREG,OUTCCHHR+4       STORE R
         TM    2(PL),X'10'              TEST FOR PURGE DATE OVERRIDE
         BO    EXITMOD                  IF YES, GO PREPARE       S21040
*                                       TO XCTL
         USING CVT,RCVTT                CVT ADDRESSABILITY     @ZA25881
         L     RCVTT,CVTPTR             RELOAD CVT ADDRESS     @ZA25881
         L     R2,CVTDATE               LOAD CURRENT DATE IN PACKED DEC
         XC    FIELD1(6),FIELD1         ZERO DOUBLE WORD FIELD
         STH   R2,FIELD1+6              STORE DDDZ IN DOUBLE WORD FIELD
         SRDL  R2,4                     SHIFT Z TO REG 3
         SRL   R2,12                    SHIFT DDD OUT OF REG 2
         SLDL  R2,4                     SHIFT Z TO REG 2
         CVB   R3,FIELD1                CONVERT DDDZ TO BINARY
         STH   R2,FIELD1+6              STORE 0YYZ IN DOUBLE WORD FIELD
         CVB   R2,FIELD1                CONVERT 0YYZ TO BINARY
         STH   R3,FIELD1+6              STORE BINARY DD (DAY OF YEAR)
         STC   R2,FIELD1+5              STORE BINARY Y  (YEAR)
         CLC   DS1EXPDT(3),FIELD1+5     COMPARE PURGE DATE AND DATE
         BH    NOPURGE
EXITMOD  EQU   *                        EXIT                     Y02080
         LA    R2,LOAD3                 MODULE ID OF IGG0299A    S21040
         B     XCTLEXIT                 GO XCTL TO IGG0299A      S21040
NOPURGE  EQU   *                        PURGE DATE ERROR         Y02078
         LA    R3,PURGERR               SET PURGE DATE ERROR     Y02078
         B     SETCODE
NODSCB   EQU   *                        NO F1 DSCB               Y02078
         LA    R3,NOF1                  SET NO F1 DSCB ERROR     Y02078
         B     SETCODE
*
* THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
EXCPIO   EQU   *
         EXCP  IOB                      EXECUTE CHANNEL PROGRAM.
         WAIT  ECB=ECB                  WAIT FOR COMPLETION.
         TM    ECB,X'20'                TEST FOR I/O ERROR.
         BCR   7,RETURN                 RETURN IF OKAY.
PERMERR  EQU   *                                                SA56391
         LA    R3,IOERR                 SET I/O ERROR            Y02078
         B     SETCODE                                           M3097
PSWDEXIT EQU   *                                                 M3097
         OI    STYPEFLG,EXITBIT         SET EXIT BIT             YM7039
         LA    R3,PSWDERR               SET PASSWORD ERROR       Y02078
SETCODE  EQU   *                                                 M3097
         L     R1,TCBADDR               LOAD TCB ADDRESS         Y02078
         USING TCB,R1                   TCB ADDRESSABILITY       Y02078
         MODESET EXTKEY=RBT234,WORKREG=2  SWITCH TO CALLER'S KEY Y02078
         STC   R3,STATUS(VOLISTX)       PUT ERROR CODE IN VOLIST Y02078
         MODESET EXTKEY=ZERO            RETURN TO KEY ZERO       Y02082
         DROP  R1                                                Y02078
ERREXIT  EQU   *                        ERROR EXIT               Y02082
         LA    WORKREG,RTNCODE8         SET ERROR CODE OF 8      Y02082
         STH   WORKREG,ERCODE           SAVE CALLER'S ERROR CODE Y02082
         LA    R2,LOAD4                 POINT TO PROPER ID.
XCTLEXIT EQU   *                        EXIT                     Y02080
         IECRES LOAD,EXTPR=(RWKAREA),MODNM=(R2),BRANCH=DIRECT    Y02080
*
*** PROGRAM CONSTANTS
*
*
*        DEB ACCESS METHOD TYPE VALUES
*
AMBPAM   DEBCHK AM=BPAM,MF=L            BPAM AMTYPE              Y02082
AMBDAM   DEBCHK AM=BDAM,MF=L            BDAM AMTYPE              Y02082
AMSAM    DEBCHK AM=SAM,MF=L             SAM AMTYPE               Y02082
AMEXCP   DEBCHK AM=EXCP,MF=L            EXCP AMTYPE              Y02082
AMISAM   DEBCHK AM=ISAM,MF=L            ISAM AMTYPE              Y02082
*
*** THE FOLLOWING CHANNEL PROGRAM SEARCHES THE VTOC FOR THE NAMED DSCB.
*** THE VTOC DSCB AND THE NAMED DSCB ARE READ INTO THE INPUT AREAS.
*
CHANPROG DS    0F
*CCW1
         DC    X'31'                    SEARCH EQUAL ID (INCCHHR)
         DC    AL3(0+INCCHHR-FIRST)
         DC    X'4000'
         DC    H'5'
*CCW2
         DC    X'08'                    TIC TO CCW1
         DC    AL3(0+CCW1-FIRST)
         DC    F'0'
*CCW3
         DC    X'06'                    READ DATA (VTOC DSCB)
         DC    AL3(0+VTOCDSCB-FIRST)
         DC    X'4000'
         DC    H'96'
*CCW4
         DC    X'F1'                    SERACH HI-EQ ID (LAST FMT 1)
         DC    AL3(0+DS4HPCHR-FIRST)
         DC    X'4000'
         DC    H'5'
*CCW5                                   TO BE CONSTRUCTED
*                                       TIC TO CCW9
*CCW6                                   TO BE CONSTRUCTED
*                                       SEARCH EQUAL KEY (DS NAME)
*CCW7                                   TO BE CONSTRUCTED
*                                       READ DATA OF THE LAST   SA48172
*                                       FORMAT 1 WITH THE SKIP  SA48172
*                                       BIT SET IN ORDER TO END SA48172
*                                       THE CHANNEL PROGRAM     SA48172
*CCW8                                   TO BE CONSTRUCTED
*                                       TIC TO CCW11
*CCW9
         DC    X'29'                    SEARCH EQUAL KEY (DS NAME)
         DC    AL3(PDSNAME-FIRST)                                YM1337
         DC    X'6000'
         DC    H'44'
*CCW10
         DC    X'08'                    TIC TO CCW4
         DC    AL3(0+CCW4-FIRST)
         DC    H'0'                                              O19117
THREE    DC    H'3'                                              O19117
*CCW11
         DC    X'06'                    READ DATA (INDSCB+44)
         DC    AL3(44+INDSCB-FIRST)
         DC    X'4000'
         DC    H'96'
*CCW12
         DC    X'12'                    READ COUNT (INTO OUTDSCB+136)
         DC    AL3(135+OUTDSCB-FIRST)
         DC    X'2000'
         DC    H'5'
RCUNAUTH DC    X'08'                    UNAUTH RETURN CODE     @Z40RSRB
MRACHECK RACHECK CLASS='DATASET',       MASTER RACHECK         @G32DSPDX
               DSTYPE=N,                PARAMETER LIST         @Z40RSGDX
               ATTR=ALTER,                                     @Z40RSGDX
               MF=L                                            @Z40RSGD
LRACHECK EQU   *-MRACHECK               LENGTH RACHECK         @Z40RSGD
*                                       PARAMETER LIST         @Z40RSGD
* MASTER RACF PARAMETER LIST FOR VOLUME RACHECKS               @G32DSPD
VRACHECK RACHECK CLASS='DASDVOL',                              @G32DSPD*
               ATTR=ALTER,                                     @G32DSPD*
               MF=L                                            @G32DSPD
LVRACHEK EQU   *-VRACHECK               PARAMETER LIST LENGTH  @G32DSPD
*
*** TABLE OF MODULE NAMES AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LOAD3,IGG0299A,LOAD4,IGG0290D,             Y02080X
               SECLOAD,SECLOADA),SVC=029,LENGTH=,BRT=YES         Y02080
         SPACE 2                                                 Y02082
         IECDSECS CVT,RB,TCB,JSCB,IEZDEB,UCB,PSA,EXPAND=YES      Y02082
WORKAREA IECSCRWA EP,F4,D1=(1)          SCRATCH WORK AREA        Y02080
RACHECK  EQU   SCRTHWKA                 RACHECK PARAMETER LIST @Z40RSGD
         ICHPRCVT                       RACF CVT               @ZA25881
         END
