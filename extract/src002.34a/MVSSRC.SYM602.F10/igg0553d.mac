 TITLE 'IGG0553D - EXTEND - DADSM UPDATE LOAD'
IGG0553D CSECT
*
*MODULE NAME = IGG0553D
*
*DESCRIPTIVE NAME = EXTEND - DADSM UPDATE LOAD
*
*COPYRIGHT = NONE
*
*CHANGE ACTIVITY = SEE BELOW
*
*          RELEASE 17 DELETIONS
*0095000400,004200-004400,007600,016000,017000,027800             19682
*          RELEASE 18 DELETIONS
*          RELEASE 19 DELETIONS
*3478067600-067800                                               O19117
*          RELEASE 20 DELETIONS
*3034027900                                                      A38490
*          RELEASE 21 DELETIONS
*1193000600-000800,001800-003000,004800-005000,005400-005800,    M0130
*1193006400-007000,007400-007600,014200-014600,015400-016600,    M0130
*1193035000-035400,045600-045800,055800,058400-058600,065600,    M0130
*1193067700,068000-068200,069200,070200,071000,074800,076400-    M0130
*1193078600,083400,086000-088200                                 M0130
*0000018000,018800-019200,046200,047600-047800,055400-055800,    M2281
*0000057000-057400,086900,087000                                 M2281
*          RELEASE 22 DELETIONS
*          VS2 RELEASE 02 DELETIONS/CHANGES
*0000000030-000150,000337-000379,001400,001620,001840,002620-    Y02080
*0000003031,003192-003244,004000,004800,005000,006000,007220-    Y02080
*0000007992,009000-009200,010600,012000-014000,015200-015500,    Y02080
*0000017000-017200,017600,018200,025400,026600,027400,027920,    Y02080
*0000028080-028600,030400,031200,044200,044800-045000,055400,    Y02080
*0000057800,059400,066000-067400,067700,068400-068800,070000,    Y02080
*0000070200-071400,074600-083200,084600,085200-086900,087100-    Y02080
*0000087500                                                      Y02080
*0000007400-007500,048600                                        XM2969
*
* STATUS CHANGE LEVEL 004
*                                                                     *
*FUNCTION/OPERATION:                                                  *
*   THIS MODULE SUBTRACTS THE SPACE IN THE DADSM EXTENT TABLE FROM    *
*   THE FORMAT 5 DSCB(S).                                             *
*                                                                     *
*ENTRY POINT:                                                         *
*        IGG0553D - ENTRY IS MADE FROM IGG0553C VIA A BRANCH.         *
*                                                                     *
*INPUT:                                                               *
*   REGISTER 2 POINTS TO THE DADSM EXTENT TABLE.                      *
*   REGISTER 4 POINTS TO THE I/O SUPPORT WORK AREA, WHICH CONTAINS    *
*   THE FORMAT 4 DSCB.                                                *
*   REGISTER 11 POINTS TO THE EXTEND WORK AREA.                       *
*   THE I/O SUPPORT WORK AREA IS LAID OUT AS FOLLOWS:                 *
*                                                                     *
*          BYTES          AREA                                        *
*         *******        ******                                       *
*          100            DSCB FIELD                                  *
*          176            JFCB                                        *
*            4            ECB                                         *
*           40            IOB                                         *
*           44            DEB                                         *
*            4            DCB                                         *
*           96            CCW'S                                       *
*                                                                     *
*OUTPUT:                                                              *
*   THE FORMAT 5 DSCB'S ARE UPDATED. A SWITCH IS SET IN 'ESWITCH' IN  *
*   THE EXTEND WORK AREA IF A FORMAT 0 DSCB MUST BE WRITTEN OVER A    *
*   FORMAT 5 DSCB.                                                    *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        EXCP(0) - READ OR WRITE DIRECT ACCESS DEVICE                 *
*        WAIT(1) - WAIT ON EVENT CONTROL BLOCK                        *
*                                                                     *
*EXITS:                                                               *
*   NORMAL - BRANCH TO IGG0553E WITH REGISTER 13 EQUAL TO ZERO        *
*                                                                     *
*   ERROR  - BRANCH TO IGG0553E WITH THE ENTRY CODE IN REGISTER 13    *
*   THE ONLY ERROR CONDITION IS AN I/O ERROR.                         *
*                                                                     *
*ATTRIBUTES: REENTRANT                                                *
*                                                                     *
*OTHER MACROS USED:                                                   *
*   IECEXTWA - TO DEFINE THE EXTEND WORK AREA                         *
*   IECDSECT - TO DEFINE THE I/O SUPPORT WORK AREA                    *
*   IECSDSL1 - TO SYMBOLICALLY ADDRESS DSCB'S                         *
*   CVT - TO DEFINE THE CVT                                           *
*                                                                     *
*STORAGE: PROGRAM CODE CSECT - LESS THAN 2048 BYTES                   *
*         EXTEND WORK AREA - AS DEFINED IN THE IECEXTWA MACRO    XM2969
*         RPS WORK AREA - AS DEFINED IN THE IECRPS MACRO         XM2969
*         I/O SUPPORT WORK AREA                                       *
*                                                                     *
*
*REGISTER USAGE:
R0       EQU   0
R1       EQU   1
RCNT     EQU   1                        DADSMTBL ENTRY COUNTER   Y02080
R2       EQU   2
RTAB     EQU   2                        DADSMTBL POINTER         Y02080
RBASE    EQU   3                        BASE REGISTER            Y02080
RCORE    EQU   4                        EOV WORK AREA POINTER    Y02080
ROEND    EQU   5                        OUTPUT END POINTER       Y02080
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
EXWKA    EQU   11                       EXTEND WORK AREA ADDRESS Y02080
RC       EQU   12
RIN      EQU   12                       POINTER TO F5 INPUT      Y02080
RD       EQU   13
ROUT     EQU   13                 POINTER TO F5 OUTPUT
RBAK     EQU   14                 RETURN REGISTER
RWRK     EQU   15                 WORK REGISTER
RF       EQU   15
*
* OTHER EQUATES
*
K0       EQU   0                        CONSTANT OF 0            Y02080
H0       EQU   X'00'                    CONSTANT OF HEX 0        Y02080
K3       EQU   3                        CONSTANT OF THREE        Y02080
K4       EQU   4                        CONSTANT OF FOUR         Y02080
K12      EQU   12                       CONSTANT OF TWELVE       Y02080
F5ID     EQU   C'5'                     EBCDIC FIVE              M0130
GOODIO   EQU   X'20'                    TEST FOR I/O ERROR       Y02080
*
         BALR  RBASE,0
         USING DADSMSTR,RBASE
         USING EOVWKA,RCORE             EOV WKA ADDRESSABILITY   Y02080
         USING EXTNDWKA,EXWKA           WORK AREA ADDRESSABILITY Y02080
*
* THIS SECTION INITIALIZES POINTERS AND COUNTERS  AND READS THE FIRST
* FORMAT 5 DSCB.
*
DADSMSTR EQU   *                                                 M0130
         XC    ENEXTADR,ENEXTADR        CLEAR CHAIN ADDRESS      Y02080
         LA    RWRK,F3DSCB                                       Y02080
         ST    RWRK,CCW8                SET CCW8 ADDRESS POINTER Y02080
         MVI   CCW8,X'0D'               SET COMMAND WRTE KEY AND DATA
         ST    RWRK,CCW5                SET CCW5 ADDRESS POINTER Y02080
         MVI   CCW5,X'06'               SET COMMAND READ DATA
         MVC   IECSDSL3(4),FIVES        MOVE IN F5 KEY ID        M2281
         MVI   SWITCH,FRSTF5+OUTBYP     INITIALIZE READ/WRITE SW Y02080
         SR    RCNT,RCNT
         IC    RCNT,ENTRYNUM      PICK UP NUMBER OF ENTRIES IN DADSMTBL
         LA    ROEND,DS3END             END OF OUTPUT POINTER    M2281
RESTOUT  EQU   *                                                 M2281
         LA    ROUT,F5OUT               START OF OUTPUT POINTER  M2281
         XC    DS3EXTNT(DS3END-DS3EXTNT),DS3EXTNT  CLEAR OUTPUT  M2281
*                                       FORMAT 5 AREA            M2281
         MVC   IDAREA(5),DADSMADR INSERT CCHHR FOR FIRST DADSM RECORD.
         MVC   SAVEADR(5),IDAREA
         BAL   RBAK,READF5        READ FIRST DADSM RECORD.
*
* THIS SECTION DETERMINES WHEN THE DADSM TABLE EXTENTS SHOULD BE
* MERGED INTO THE OUTPUT FORMAT 5
*
DUELOOP  CLR   ROEND,ROUT         IS OUTPUT AREA FULL.
         BNH   TEST1                    BRANCH IF OUTPUT IS FULL
         CLC   0(4,RIN),ZEROS     IS INPUT EXTENT ZEROS
         BE    CHEND              BR IF ZERO
         LTR   RCNT,RCNT          IS TABLE EMPTY
         BZ    MOVEOUT            YES MOVE INPUT TO OUTPUT
         CLC   2(2,RTAB),2(RIN)   IS THIS SPACE ALLOCATED.
         BL    ALTEREX            CHECK FOR MIDDLE OR FRONT ALL.IF LOW.
         BE    TOTALL             CHECK FOR TOTAL OR REAR  ALL. IF EQ.
MOVEOUT  TM    SWITCH,DADBYP            IS WRITE DADSM PENDING
         BO    CHEXTRTN                 BRANCH IF YES
         MVC   0(4,ROUT),0(RIN)         MOVE INPUT TO OUTPUT
INPUT    BCT   RWRK,UPDATEPT      UPDATE POINTER IF NOT EMPTY
         LA    ROUT,4(ROUT)
         OI    SWITCH,PRCNTL            SET PROCESS CONTROL SWITCH
*
* TEST FOR MULTIPLE FORMAT 5 RECORDS
*
CHECHAIN TM    DS5PTRDS+4,X'FF'   IS INPUT RECORD CHAINED.
         BZ    CHECALT            NO-CHECK TO SEE IF RECORD WAS ALTERED
         MVC   EXTCCHHR,IDAREA          SAVE CCHHR OF CURRENT F5 XM2969
         TM    SWITCH,RCDALT            WAS DADSM RECORD ALTERED
         BC    1,BRTORDF5         BR IF ALTERED TO READ F5
TSTPROC  BAL   RBAK,RESTORE
         NI    SWITCH,X'FF'-PRCNTL      CLEAR PROCESS CONTROL SW Y02080
BRTORDF5 BAL   RBAK,SAVEID        GO TO READ ROUTINE
         B     DUELOOP
CHECALT  TM    SWITCH,RCDALT            WAS DADSM RECORD ALTERED
         BZ    SETZERO                  BR IF NOT ALTERED
WRITEFNL OI    SWITCH,WRTFNL            SET WRITE FINAL RECORD SWITCH
         XC    ENEXTADR,ENEXTADR        CLEAR CHAIN ADDRESS      Y02080
         BAL   RBAK,WRITEF5       GO TO WRITE  F5
SETZERO  SR    RD,RD                    CLEAR ERROR REGISTER
*
* SET UP WTG TABLE FOR TRANSFER TO LAST LOAD
*
XCTLHRE  EQU   *                                                 A38490
         TM    SWITCH,NEWF5        TEST IF NEW F5 WAS CREATED    A38490
         BNO   NONEWF5             BRANCH IF NOT                 A38490
         NI    SWITCH,X'FF'-WRZERO-NEWF5  CLEAR WRITE F0 BIT     Y02080
NONEWF5  EQU   *                                                 A38490
         IECRES LOAD,EXTPR=(EXWKA),MODID=LASTLOAD,BRANCH=DIRECT  Y02080
*
* WHEN OUTPUT IS FULL CHECK CHAIN ADDRESS AND INPUT. DETERMINE IF
* FUNCTION IS COMPLETE TO WRITE FINAL FORMAT 5
*
TEST1    TM    SWITCH,PRCNTL            IS PROCESS CONTROL SWITCH ON
         BZ    TSTCH                    BRANCH IF NO
         TM    SWITCH,OUTBYP            IS WRITE BEFORE READ
         BZ    TSTCH                    BRANCH IF YES
         MVC   ENEXTADR,FIVESP          SAVE CHAIN ADDRESS       Y02080
         B     BRTOWR5            BR TO WRITE F5
TSTCH    TM    DS5PTRDS+4,X'FF'   CHECK FOR CHAIN ADDRESS
         BZ    CHEXT              NO-CHECK TO SEE IF NEXT EXTENT ZER
WRITE1   EQU   *                        BRANCH LABEL             Y02080
         MVC   ENEXTADR,DS5PTRDS        SAVE CHAIN ADDRESS       Y02080
BRTOWR5  BAL   RBAK,WRITEF5
         B     DUELOOP
CHEND    TM    SWITCH,FRSTF5            IS THE 1ST DADSM RCD IN CORE
         BO    WRITEFNL                 BRANCH IF YES
*
* TEST IF THERE HAS BEEN MORE INPUT DADSM RECORDS THAN OUTPUT DADSM
* RECORDS.  IF SO THEN SET UP TO ZERO OUT THE LAST INPUT DADSM RECORD.
*
TSTZERO  TM    SWITCH,OUTBYP            IS NBR OF WRTS EQUAL TO NBR RDS
         BO    WRITEZER                 BRANCH IF NO
         MVC   IDAREA(5),FIVESP         YES- SET UP SRCH/ID ADDRESS
         B     WRITEFNL                 GO WRITE LAST F5
WRITEZER OI    SWITCH,WRZERO            SET WRITE ZERO RECORD SWITCH
         B     WRITEFNL
*
* THIS SECTION MERGES THE DADSM TABLE WITH THE FORMAT 5
*
ALTEREX  OI    SWITCH,RCDALT            SET DADSM RECORD ALTERED SWITCH
         TM    SWITCH,DADBYP            IS DADSM WRITE BYPASS SWITCH ON
         BO    CHEXTRTN                 BRANCH IF YES
         CLC   0(2,RTAB),0(RIN)   TEST FOR MIDDLE OR FRONT ALLOCATION
         BNE   MIDDLE             LOW NOT EQUAL MIDDLE ALLOCATION
FRONT    MVC   0(2,ROUT),2(RTAB)  FRONT ALLOCATE INSERT NEW  LOW RTA
         MVC   2(2,ROUT),2(RIN)   KEEP OLD UPPER RTA
DECRMNT  BCTR  RCNT,0             DECREMENT TABLE ENTRY COUNTER
         LA    RTAB,4(RTAB)       UPDATE POINTER TO NEXT TABLE ENTRY
         B     INPUT                    GO CHECK FOR INPUT EMPTY
UPDATEPT LA    ROUT,4(ROUT)       UPDATE POINTERS
UPDATIN  LA    RIN,4(RIN)
         B     DUELOOP
MIDDLE   MVC   0(2,ROUT),0(RIN)   MIDDLE ALLOCATE INSERT LOW OLD RTA
         MVC   2(2,ROUT),0(RTAB)  INSERT NEW UPPER RTA
         LA    ROUT,4(ROUT)       UPDATE OUTPUT AREA POINTER
         CLR   ROEND,ROUT         IS OUTPUT AREA FULL
         BH    FRONT              NO - INSERT NEXT EXTENT
         MVC   0(2,RIN),2(RTAB)
         LA    RTAB,4(RTAB)
         BCTR  RCNT,0
         B     TEST1                    GO SET UP THIS DADSM WRITE
TOTALL   OI    SWITCH,RCDALT            SET DADSM RECORD ALTERED SWITCH
         CLC   0(2,RIN),0(RTAB)   IS ENTIRE EXTENT ALLOCATED.
         BNE   NOTALL              NO-GO ND INSERT LOW OLD RTA
         SH    ROUT,FOUR                COMPENSATE FOR OUTPUT PTR STEP
         B     DECRMNT                  GO UPDATE POINTERS
NOTALL   TM    SWITCH,DADBYP            IS A WRITE DADSM PENDING
         BO    CHEXTRTN                 BRANCH IF YES
         MVC   0(2,ROUT),0(RIN)          INSERT LOW OLD RTA
         MVC   2(2,ROUT),0(RTAB)  INSERT NEW UPPER RTA
         B     DECRMNT
*
* LOOK FOR AN AVAILABLE HOLE AND UPDATE HOLE COUNTER IF NECESSARY
*
CHEXT    CLC   0(4,RIN),ZEROS     IS EXTENT ZERO
         BE    WRITEFNL           WRITE LAST DADSM
SEARCH   MVC   SAVEADR(5),IDAREA  SAVE PREVIOUS DADSM CCHHR
         MVC   IDAREA(5),DADSMADR INSERT SEARCH START ADDRESS
         LA    R0,CCW1            START OF CHANNEL PROGRAM
         BAL   R9,CHANNLGO        SEARCH FOR HOLE
         LA    R0,1               UPDATE USED HOLE COUNTER
         AH    R0,UHOLECTR
         STH   R0,UHOLECTR        UPDATE USED HOLE COUNTER
         MVC   ENEXTADR,IDAREA                                   Y02080
         MVC   IDAREA(5),SAVEADR  INSERT ID OF THIS DADSM
AFTERSRH BAL   RBAK,WRITEF5             GO WRITE THIS DADSM RECORD
         MVC   IDAREA,ENEXTADR          SET UP NEXT OUTPUT ADDR  Y02080
         MVC   FIVESP,ENEXTADR          SET UP NEXT OUTPUT ADDR  Y02080
         OI    SWITCH,NEWF5        SET NEW F5 CREATED BIT        A38490
         B     DUELOOP
*
* THIS SECTION CONVERTS THE OUTPUT FORMAT 5 FROM RTA/RTA+1 TO
* XXYYZ FORMAT AND WRITES IT TO THE VTOC.
*
WRITEF5  EQU   *                                                 M2281
         LA    ROUT,F5OUT               RESET POINTER            M2281
         TM    SWITCH,WRTFNL            IS WRITE FINAL RCD SW ON
         BO    CHEXTRTN                 BRANCH IF YES
         OI    SWITCH,DADBYP            SET DADSM WRITE PENDING SW
         B     DUELOOP                  GO PROCESS DADSM
CHEXTRTN ST    R5,CCW12+4
         STM   R1,R2,FIELD1       SAVE REGISTERS
         LA    R5,F5OUT                 INPUT POINTER            M2281
         LA    ROUT,DS3EXTNT+1          OUTPUT POINTER           M2281
         LA    R2,26              SET UP EXTENT COUNTER
NEXTEXT  LH    R1,DS4DEVSZ+2      TRACK CONSTANT
         CLC   0(2,R5),ZEROS      IS THIS EXTENT ZERO
         BNE   CALC                     BRANCH IF NOT ZERO       XM2969
         CH    R2,CLRXTNT               IF R2=26, ALL EXTENTS IN XM2969
*                                       THIS F5 ARE ZERO         XM2969
         BNE   CLRZERO                  BRANCH IF NOT EQUAL 26   XM2969
         OI    ESWITCH2,EF5ZERO         SET BIT TO INDICATE F5   XM2969
*                                       WITH ALL ZERO EXTENTS    XM2969
         B     CLRZERO                  CONTINUE                 XM2969
CALC     EQU   *                        BRANCH LABEL             XM2969
         SR    R8,R8              CLEAR HIGH ORDER REGISTERS.
         LR    R6,R8                 BEFORE DIVIDING.
         LH    R7,0(R5)           RTA
         LH    R9,2(R5)           RTA+1
         LR    R0,R9              CALCULATE NUBER OF TRACKS
         SR    R0,R7                   IN EXTENT
         CLR   R0,R1              TEST FOR AT LEAST A CYL
         BNL   MORETH1            TRACKS ARE EQ TO OR GRTR THAN CYL
         MVC   2(2,ROUT),ZEROS    ZERO CYL FIELD IF NOT AT LEAST ONE
         STC   R0,4(ROUT)         STORE NUMBER OF TRKS IN EXTENT
         B     MOVEXTA            GO TO MOVE EXTENT TO OUTPUT
MORETH1  DR    R6,R1              DIVIDE RTA BY TRACK CONSTANT
         DR    R8,R1              DIVIDE RTA+1 BY TRACK CONSTANT
         SR    R9,R7              FIND TOTAL CYLINDERS AND TRACKS
         LTR   R6,R6              IS LOW RTA CYL ALIGNED
         BP    NOTCYL             BR IF NOT ALIGNED
         STC   R8,4(ROUT)         STORE EXCESS TRKS
         B     STORECYL
NOTCYL   SR    R1,R6              SUBTRACT LOW RTA FROM TRKS/CYL
         LTR   R9,R9              IS UPPER EXTENT LESS THAN CYL
         BZ    ADD2               BR IF LESS
         BCTR  R9,0
ADD2     AR    R1,R8              CALCULATE EXCESS TRKS
         STC   R1,4(ROUT)         STORE IN OUTPUT F5
STORECYL STH   R9,CCW12
         MVC   2(2,ROUT),CCW12    MOVE CYLINDER TO OUTPUT
MOVEXTA  MVC   0(2,ROUT),0(R5)    MOVE RTA TO OUTPUT
         LA    ROUT,5(ROUT)       INCREMENT OUTPUT POINTER
         LA    R5,4(R5)           INCREMENT INPUT POINTER
         BCT   R2,NEXTEXT         RETURN FOR MORE EXTENTS
CLRZERO  LA    R2,1(R2)           CLEAR EXCESS F5 AREA
         MH    R2,FIVE
         BCTR  R2,K0                    DECREMENT BY ONE         Y02080
         EX    R2,CLEAR
         MVC   DS3PTRDS,ENEXTADR        INSERT F5 CHAIN ADDRESS  Y02080
INSERTF5 EQU   *                                                 M2281
         MVC   DS3EXTNT(DS3FMTID-DS3EXTNT),DS3EXTNT+1  OPEN      M2281
*                                       SPACE FOR F5 IDENTIFIER  M2281
         MVI   DS3FMTID,F5ID            MOVE IN F5 IDENTIFIER    M2281
         L     R5,CCW12+4
         LM    R1,R2,FIELD1
         MVI   CCW11+4,X'10'      TURN ON SKIP FLAG
         LA    R0,CCW6            START OF CHANNEL PROGRAM
         BAL   R9,CHANNLGO        WRITE DADSM
RESTORE  EQU   *                                                 M2281
         LA    ROUT,F5OUT               RESET OUTPUT POINTER     M2281
         MVC   IDAREA(5),DS3PTRDS       SET UP NEXT OUTPUT       M2281
*                                       FORMAT 5 ADDRESS         M2281
         XC    DS3EXTNT(DS3END-DS3EXTNT),DS3EXTNT  CLEAR OUTPUT  M2281
*                                       FORMAT 5 AREA            M2281
         XI    SWITCH,OUTBYP            FLIP/FLOP READ/WRITE SWITCH
WRTRTN   EQU   *                        BRANCH LABEL             Y02080
         NI    SWITCH,X'FF'-DADBYP      CLEAR WRITE PENDING SW   Y02080
         BR    RBAK
*
* THIS SECTION READS A FORMAT 5 DSCB AND CONVERTS IT FROM XXYYZ TO
* STARTING RTA/ENDING RTA+1 FORMAT.
*
SAVEID   MVC   SAVEADR(5),IDAREA
         MVC   FIVESP(5),DS5PTRDS
         NI    SWITCH,X'FF'-FRSTF5      CLEAR 1ST F5 IN CORE SW  Y02080
         MVC   IDAREA(5),DS5PTRDS
READF5   LA    RIN,DS5AVEXT       RESET INPUT POINTER.
         LR    R8,RIN             SET UP POINTER FOR CONVERTED EXTENT.
         LA    RWRK,26            INSERT MAX NUMBER OF EXTENTE.
         LA    R0,CCW9            PICK STARTING CCW
         MVI   CCW11+4,X'00'      CLEAR SKIP FLAG
         BAL   R9,CHANNLGO        READ DADSM
         MVC   DS5KEYID+44(90),DS5KEYID+45   REMOVE ID
         SR    R6,R6
TEST0    CLC   0(2,RIN),ZEROS     EXTENT ZERO
         BE    INCRIN             YES  INCREMENT REGISTER
         MVC   CCW12(5),0(RIN)     ALIGN EXTENT TO FULL WORD
         LH    R7,CCW12+2         LOAD NUMBER OF CYLINDERS
         MH    R7,DS4DEVSZ+2      MULTIPLY BY TRACK CONSTANT
         IC    R6,CCW12+4         ODD TRACKS.
         AR    R7,R6              ADD ODD TRACKS FOR TOAL TRACKS
         AH    R7,CCW12           ADD RTA
         STH   R7,2(R8)        STORE RTA+1 INTO INPUT CONVERTED AREA.
         MVC   0(2,R8),CCW12      MOVE RTA TO CONVERTED INPUT AREA.
         LA    R8,4(R8)           UPDATE POINTER TO NEXT SPACE.
INCRIN   LA    RIN,5(RIN)         INCREMENT INPUT POINTER
         BCT   RF,TEST0           PROCESS NEXT EXTENT
         LA    RIN,DS5AVEXT       RESET INPUT POINTER.
         XC    0(26,R8),0(R8)      CLEAR EXCESS BITS
         LA    RWRK,26            RESET COUNT OF EXTENTS.
         XI    SWITCH,OUTBYP            FLIP/FLOP READ/WRITE SWITCH
         BZ    RETNBACK                 BRANCH IF READ BEFORE WRITE
         MVC   IDAREA(5),SAVEADR
RETNBACK BR    RBAK
*
* THIS ROUTINE EXECUTES A CHANNEL PROGRAM.
*
CHANNLGO EQU   *                        BRANCH LABEL             Y02080
         MVC   DXDAADDR+K3(K4),IDAREA   IOS SEEK ADDRESS         Y02080
         STM   RF,R1,IECREGSV+K12       SAVE REGISTERS           Y02080
         ST    R0,IOBSIOCC              STORE STARTING CCW       Y02080
         MVI   DXECB,H0                 CLEAR STATUS BYTE OF ECB Y02080
         EXCP  DXIOB                    EXECUTE CHANNEL PROGRAM  Y02080
         WAIT  ECB=DXECB                WAIT FOR COMPLETION      Y02080
         LM    RF,R1,IECREGSV+K12       RESTORE REGISTERS        Y02080
         TM    DXECB,GOODIO             TEST FOR I/O ERROR       Y02080
         BCR   1,R9                     IF NO ERROR, BR          O19117
         SR    RD,RD                    CLEAR ERROR REG          O19117
         IC    RD,DXEXTSW               INSERT CALLER CODE       Y02080
         B     XCTLHRE                                           O19117
*
* CONSTANTS
*
ZEROS    DC    F'0'                     FULL WORD OF ZEROS       Y02080
FIVES    DC    X'05050505'
CLEAR    XC    0(1,ROUT),0(ROUT)  ZERO DADSM AREA
FIVE     DC    H'5'
FOUR     DC    H'4'
CLRXTNT  DC    H'26'                    CONSTANT OF 26           XM2969
*
* TABLE OF MODULE IDS AND ENTRY POINT ADDRESSES
*
         XCTLTABL ID=(LASTLOAD,3E),SVC=055,LENGTH=,BRT=YES       Y02080
         EJECT                                                   Y02080
EOVWKA   DSECT                                                   Y02080
         IECDSECT
         EJECT                                                   Y02144
CCW1     EQU   DXCCW1
CCW2     EQU   DXCCW2
CCW3     EQU   DXCCW3
CCW4     EQU   DXCCW4
CCW5     EQU   DXCCW5
CCW6     EQU   DXCCW6
CCW7     EQU   DXCCW7
CCW8     EQU   DXCCW8
CCW9     EQU   DXCCW9
CCW10    EQU   DXCCW10
CCW11    EQU   DXCCW11
CCW12    EQU   DXCCW12
*
         ORG   DXLBL
         IECSDSL1 (4)
         EJECT                                                   Y02080
WORKAREA IECEXTWA EP,D1=(5),D2=(3)      EXTEND WORK AREA         Y02080
         SPACE 2                                                 Y02080
WRZERO   EQU   X'80'
RCDALT   EQU   X'40'
PRCNTL   EQU   X'20'
WRTFNL   EQU   X'10'
FRSTF5   EQU   X'08'
NEWF5    EQU   X'04'               NEW F5 DSCB CREATED           A38490
DADBYP   EQU   X'02'
OUTBYP   EQU   X'01'
SWITCH   EQU   ESWITCH                  EXTEND SWITCH EQUATE     Y02080
SAVEADR  EQU   ECOUNT                   CHANNEL PROGRAM WKAREA   Y02080
IDAREA   EQU   EIDAREA                  CHANNEL PROGRAM WKAREA   Y02080
DADSMADR EQU   EDADSMAD                 FORMAT 5 CCHHR           Y02080
UHOLECTR EQU   EHOLECTR                 NUMBER OF USED F0 DSCB'S Y02080
FIELD1   EQU   IECREGSV+12              REGISTER SAVE AREA       Y02080
FIVESP   EQU   COUNT2                   CHANNEL PROGRAM WKAREA   Y02080
F5OUT    EQU   DS3END-104               F5 IN RTA1/RTA2 FORMAT   M2281
         EJECT                                                   Y02080
CVT      DSECT                          CVT DSECT                Y02080
         CVT                                                     Y02080
         END   IGG0553D
